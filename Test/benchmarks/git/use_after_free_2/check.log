In file included from ./benchmarks/git/use_after_free_2/git_uaf_2.c:11:
./benchmarks/git/use_after_free_2/../git.h: In function ‘copy_array’:
./benchmarks/git/use_after_free_2/../git.h:161:17: warning: implicit declaration of function ‘memcpy’ [-Wimplicit-function-declaration]
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                 ^~~~~~
./benchmarks/git/use_after_free_2/../git.h:1:1: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
  +++ |+#include <string.h>
    1 | #define STRING_LIST_INIT_NODUP { NULL, 0, 0, 0, NULL }
./benchmarks/git/use_after_free_2/../git.h:161:17: warning: incompatible implicit declaration of built-in function ‘memcpy’ [-Wbuiltin-declaration-mismatch]
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                 ^~~~~~
./benchmarks/git/use_after_free_2/../git.h:161:17: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
./benchmarks/git/use_after_free_2/../git.h:161:34: warning: implicit declaration of function ‘st_mult’ [-Wimplicit-function-declaration]
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                                  ^~~~~~~
./benchmarks/git/use_after_free_2/../git.h: In function ‘move_array’:
./benchmarks/git/use_after_free_2/../git.h:169:17: warning: implicit declaration of function ‘memmove’ [-Wimplicit-function-declaration]
  169 |                 memmove(dst, src, st_mult(size, n));
      |                 ^~~~~~~
./benchmarks/git/use_after_free_2/../git.h:169:17: note: include ‘<string.h>’ or provide a declaration of ‘memmove’
./benchmarks/git/use_after_free_2/../git.h:169:17: warning: incompatible implicit declaration of built-in function ‘memmove’ [-Wbuiltin-declaration-mismatch]
./benchmarks/git/use_after_free_2/../git.h:169:17: note: include ‘<string.h>’ or provide a declaration of ‘memmove’
In file included from ./benchmarks/git/use_after_free_2/git_uaf_2.c:10:
./benchmarks/git/use_after_free_2/../git.h: In function ‘xstrdup_or_null’:
./benchmarks/git/use_after_free_2/../stdio.h:138:20: warning: implicit declaration of function ‘strdup’ [-Wimplicit-function-declaration]
  138 | #define xstrdup(a) strdup(a)
      |                    ^~~~~~
./benchmarks/git/use_after_free_2/../git.h:174:22: note: in expansion of macro ‘xstrdup’
  174 |         return str ? xstrdup(str) : NULL;
      |                      ^~~~~~~
./benchmarks/git/use_after_free_2/../stdio.h:138:20: warning: incompatible implicit declaration of built-in function ‘strdup’ [-Wbuiltin-declaration-mismatch]
  138 | #define xstrdup(a) strdup(a)
      |                    ^~~~~~
./benchmarks/git/use_after_free_2/../git.h:174:22: note: in expansion of macro ‘xstrdup’
  174 |         return str ? xstrdup(str) : NULL;
      |                      ^~~~~~~
In file included from ./benchmarks/git/use_after_free_2/git_uaf_2.c:11:
./benchmarks/git/use_after_free_2/../git.h: At top level:
./benchmarks/git/use_after_free_2/../git.h:236:62: warning: ‘struct archiver_args’ declared inside parameter list will not be visible outside of this definition or declaration
  236 |         int (*write_archive)(const struct archiver *, struct archiver_args *);
      |                                                              ^~~~~~~~~~~~~
./benchmarks/git/use_after_free_2/../git.h: In function ‘strbuf_swap’:
./benchmarks/git/use_after_free_2/../git.h:126:9: warning: incompatible implicit declaration of built-in function ‘memcpy’ [-Wbuiltin-declaration-mismatch]
  126 |         memcpy(_swap_buffer, _swap_a_ptr, sizeof(a));           \
      |         ^~~~~~
./benchmarks/git/use_after_free_2/../git.h:407:9: note: in expansion of macro ‘SWAP’
  407 |         SWAP(*a, *b);
      |         ^~~~
./benchmarks/git/use_after_free_2/../git.h:126:9: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
  126 |         memcpy(_swap_buffer, _swap_a_ptr, sizeof(a));           \
      |         ^~~~~~
./benchmarks/git/use_after_free_2/../git.h:407:9: note: in expansion of macro ‘SWAP’
  407 |         SWAP(*a, *b);
      |         ^~~~
./benchmarks/git/use_after_free_2/git_uaf_2.c: In function ‘default_start_failure’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:138:9: warning: implicit declaration of function ‘strbuf_addstr’ [-Wimplicit-function-declaration]
  138 |         strbuf_addstr(err, "Starting a child failed:");
      |         ^~~~~~~~~~~~~
./benchmarks/git/use_after_free_2/git_uaf_2.c:140:17: warning: implicit declaration of function ‘strbuf_addf’ [-Wimplicit-function-declaration]
  140 |                 strbuf_addf(err, " %s", cp->argv[i]);
      |                 ^~~~~~~~~~~
./benchmarks/git/use_after_free_2/git_uaf_2.c: In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:174:21: warning: implicit declaration of function ‘online_cpus’ [-Wimplicit-function-declaration]
  174 |                 n = online_cpus();
      |                     ^~~~~~~~~~~
./benchmarks/git/use_after_free_2/git_uaf_2.c:178:9: warning: implicit declaration of function ‘trace_printf’ [-Wimplicit-function-declaration]
  178 |         trace_printf("run_processes_parallel: preparing to run up to %d tasks", n);
      |         ^~~~~~~~~~~~
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: implicit declaration of function ‘strbuf_init’ [-Wimplicit-function-declaration]
  193 |         strbuf_init(&pp->buffered_output, 0);
      |         ^~~~~~~~~~~
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: implicit declaration of function ‘child_process_init’ [-Wimplicit-function-declaration]
  197 |                 child_process_init(&pp->children[i].process);
      |                 ^~~~~~~~~~~~~~~~~~
./benchmarks/git/use_after_free_2/git_uaf_2.c: In function ‘pp_start_one’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:227:17: warning: implicit declaration of function ‘strbuf_addbuf’ [-Wimplicit-function-declaration]
  227 |                 strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);
      |                 ^~~~~~~~~~~~~
./benchmarks/git/use_after_free_2/git_uaf_2.c:228:17: warning: implicit declaration of function ‘strbuf_reset’ [-Wimplicit-function-declaration]
  228 |                 strbuf_reset(&pp->children[i].err);
      |                 ^~~~~~~~~~~~
./benchmarks/git/use_after_free_2/git_uaf_2.c:235:13: warning: implicit declaration of function ‘start_command’ [-Wimplicit-function-declaration]
  235 |         if (start_command(&pp->children[i].process)) {
      |             ^~~~~~~~~~~~~
./benchmarks/git/use_after_free_2/git_uaf_2.c: In function ‘kill_children’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:259:25: warning: implicit declaration of function ‘kill’ [-Wimplicit-function-declaration]
  259 |                         kill(pp->children[i].process.pid, signo);
      |                         ^~~~
./benchmarks/git/use_after_free_2/git_uaf_2.c: In function ‘pp_collect_finished’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:275:24: warning: implicit declaration of function ‘finish_command’ [-Wimplicit-function-declaration]
  275 |                 code = finish_command(&pp->children[i].process);
      |                        ^~~~~~~~~~~~~~
./benchmarks/git/use_after_free_2/git_uaf_2.c: In function ‘finish_command’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:15: warning: implicit declaration of function ‘wait_or_whine’ [-Wimplicit-function-declaration]
  321 |     int ret = wait_or_whine(cmd->pid, cmd->argv[0], 0);
      |               ^~~~~~~~~~~~~
./benchmarks/git/use_after_free_2/git_uaf_2.c:322:5: warning: implicit declaration of function ‘child_process_clear’ [-Wimplicit-function-declaration]
  322 |     child_process_clear(cmd);
      |     ^~~~~~~~~~~~~~~~~~~
./benchmarks/git/use_after_free_2/git_uaf_2.c: At top level:
./benchmarks/git/use_after_free_2/git_uaf_2.c:326:6: warning: conflicting types for ‘child_process_clear’; have ‘void(struct child_process *)’
  326 | void child_process_clear(struct child_process *child)
      |      ^~~~~~~~~~~~~~~~~~~
./benchmarks/git/use_after_free_2/git_uaf_2.c:322:5: note: previous implicit declaration of ‘child_process_clear’ with type ‘void(struct child_process *)’
  322 |     child_process_clear(cmd);
      |     ^~~~~~~~~~~~~~~~~~~
./benchmarks/git/use_after_free_2/git_uaf_2.c: In function ‘child_process_clear’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:328:9: warning: implicit declaration of function ‘argv_array_clear’ [-Wimplicit-function-declaration]
  328 |         argv_array_clear(&child->args);
      |         ^~~~~~~~~~~~~~~~
./benchmarks/git/use_after_free_2/git_uaf_2.c: In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:361:17: warning: implicit declaration of function ‘pp_buffer_stderr’ [-Wimplicit-function-declaration]
  361 |                 pp_buffer_stderr(&pp, output_timeout);
      |                 ^~~~~~~~~~~~~~~~
./benchmarks/git/use_after_free_2/git_uaf_2.c:362:17: warning: implicit declaration of function ‘pp_output’ [-Wimplicit-function-declaration]
  362 |                 pp_output(&pp);
      |                 ^~~~~~~~~
./benchmarks/git/use_after_free_2/git_uaf_2.c:371:9: warning: implicit declaration of function ‘pp_cleanup’ [-Wimplicit-function-declaration]
  371 |         pp_cleanup(&pp);
      |         ^~~~~~~~~~
./benchmarks/git/use_after_free_2/git_uaf_2.c: In function ‘parallel_next’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:385:9: warning: implicit declaration of function ‘argv_array_pushv’ [-Wimplicit-function-declaration]
  385 |         argv_array_pushv(&cp->args, d->argv);
      |         ^~~~~~~~~~~~~~~~
./benchmarks/git/use_after_free_2/git_uaf_2.c: In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:419:14: warning: implicit declaration of function ‘strcmp’ [-Wimplicit-function-declaration]
  419 |         if (!strcmp(argv[1], "start-command-ENOENT")) {
      |              ^~~~~~
./benchmarks/git/use_after_free_2/git_uaf_2.c:12:1: note: include ‘<string.h>’ or provide a declaration of ‘strcmp’
   11 | #include "../git.h"
  +++ |+#include <string.h>
   12 | 
./benchmarks/git/use_after_free_2/git_uaf_2.c:426:22: warning: implicit declaration of function ‘run_command’; did you mean ‘finish_command’? [-Wimplicit-function-declaration]
  426 |                 exit(run_command(&proc));
      |                      ^~~~~~~~~~~
      |                      finish_command
Profile consistency report:

                                 |mismatch     |mismatch     |                     |
Pass name                        |IN    |IN    |OUT   |OUT   |overall              |
                                 |freq  |count |freq  |count |size      |time      |
cfg                  ------------|      |      |      |      |          |          |
ompexp                           |      |      |      |      |   +100.0%|          |
fixup_cfg            ------------|      |      |      |      |          |          |
ssa                              |      |      |      |      |     -1.1%|          |
nothrow                          |      |      |      |      |     -1.2%|          |
fixup_cfg            ------------|      |      |      |      |          |          |
local-fnsummary      ------------|      |      |      |      |          |          |
einline              ------------|      |      |      |      |          |          |
early_optimizations  ------------|      |      |      |      |          |          |
objsz                ------------|      |      |      |      |          |          |
ccp                  ------------|      |      |      |      |          |          |
forwprop                         |      |      |      |      |     -0.6%|          |
ethread                          |      |      |      |      |     -0.6%|          |
esra                 ------------|      |      |      |      |          |          |
ealias               ------------|      |      |      |      |          |          |
mergephi             ------------|      |      |      |      |          |          |
cddce                ------------|      |      |      |      |          |          |
phiopt               ------------|      |      |      |      |          |          |
modref               ------------|      |      |      |      |          |          |
iftoswitch           ------------|      |      |      |      |          |          |
profile_estimate     ------------|      |      |      |      |          |          |
local-pure-const                 |      |      |      |      |          |   +100.0%|
release_ssa          ------------|      |      |      |      |          |          |
local-fnsummary      ------------|      |      |      |      |          |          |
=======ipa_pta=========
===============The first stage : Point of interest stmt collect=================
=======node_fun:main=========

--------GIMPLE Cond -------
succs:= 2
--------GIMPLE Cond -------
succs:= 3
--------GIMPLE Cond -------
succs:= 4
--------GIMPLE Cond -------
succs:= 4
succs:= 5
succs:= 3
--------GIMPLE Cond -------
succs:= 7
succs:= 7
--------GIMPLE Cond -------
succs:= 9
succs:= 9
--------GIMPLE Cond -------
succs:= 11
succs:= 11
--------GIMPLE Cond -------
succs:= 13
succs:= 13
succs:= 2
succs:= 5
=======node_fun:task_finished=========

=======node_fun:no_job=========

=======node_fun:parallel_next=========

--------GIMPLE Cond -------
succs:= 2
succs:= 2
=======node_fun:run_processes_parallel=========

--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 4
succs:= 5
--------GIMPLE Cond -------
succs:= 4
succs:= 6
--------GIMPLE Cond -------
succs:= 8
--------GIMPLE Cond -------
succs:= 9
--------GIMPLE Cond -------
succs:= 6
succs:= 8
succs:= 9
succs:= 10
--------GIMPLE Cond -------
succs:= 11
--------GIMPLE Cond -------
succs:= 12
--------GIMPLE Cond -------
succs:= 13
succs:= 11
=======node_fun:child_process_clear=========

=======node_fun:finish_command=========

=======node_fun:pp_collect_finished=========

--------GIMPLE Cond -------
succs:= 3
--------GIMPLE Cond -------
succs:= 3
succs:= 5
--------GIMPLE Cond -------
succs:= 6
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 7
succs:= 9
--------GIMPLE Cond -------
succs:= 10
succs:= 10
succs:= 10
--------GIMPLE Cond -------
succs:= 13
--------GIMPLE Cond -------
succs:= 13
succs:= 15
--------GIMPLE Cond -------
succs:= 6
succs:= 9
succs:= 19
=======node_fun:kill_children=========

succs:= 19
--------GIMPLE Cond -------
succs:= 3
succs:= 3
--------GIMPLE Cond -------
succs:= 6
=======node_fun:pp_start_one=========

--------GIMPLE Cond -------
succs:= 3
--------GIMPLE Cond -------
succs:= 3
succs:= 5
--------GIMPLE Cond -------
succs:= 6
succs:= 6
--------GIMPLE Cond -------
succs:= 15
succs:= 8
succs:= 8
--------GIMPLE Cond -------
succs:= 10
--------GIMPLE Cond -------
succs:= 13
succs:= 11
succs:= 6
succs:= 10
=======node_fun:pp_init=========

--------GIMPLE Cond -------
succs:= 2
succs:= 2
--------GIMPLE Cond -------
succs:= 4
succs:= 4
--------GIMPLE Cond -------
succs:= 6
--------GIMPLE Cond -------
succs:= 8
--------GIMPLE Cond -------
succs:= 12
=======node_fun:default_task_finished=========

--------GIMPLE Cond -------
succs:= 2
--------GIMPLE Cond -------
succs:= 2
succs:= 5
=======node_fun:default_start_failure=========

--------GIMPLE Cond -------
succs:= 4
===============The first stage : Point of interest stmt collect=================
start PointerConstraint
pointer ftable is 0 
pointer ptable is 1 
===============The second stage : Mapping stmt=================
# VUSE <.MEM_39>
_3 = strcmp (_2, "start-command-ENOENT");
# .MEM_50 = VDEF <.MEM_39>
_4 = start_command (&proc);
_5 = __errno_location ();
# .MEM_51 = VDEF <.MEM_50>
fprintf (_8, "FAIL %s\n", _7);
# VUSE <.MEM_39>
_10 = strcmp (_9, "run-command");
# .MEM_48 = VDEF <.MEM_39>
_11 = run_command (&proc);
# VUSE <.MEM_39>
jobs_33 = atoi (_12);
# VUSE <.MEM_40>
_15 = strcmp (_14, "run-command-parallel");
# .MEM_46 = VDEF <.MEM_40>
_16 = run_processes_parallel (jobs_33, parallel_next, 0B, 0B, &proc);
# VUSE <.MEM_40>
_18 = strcmp (_17, "run-command-abort");
# .MEM_44 = VDEF <.MEM_40>
_19 = run_processes_parallel (jobs_33, parallel_next, 0B, task_finished, &proc);
# VUSE <.MEM_40>
_21 = strcmp (_20, "run-command-no-jobs");
# .MEM_42 = VDEF <.MEM_40>
_22 = run_processes_parallel (jobs_33, no_job, 0B, task_finished, &proc);
# .MEM_41 = VDEF <.MEM_40>
__builtin_fwrite ("check usage\n", 1, 12, _23);
# .MEM_4 = VDEF <.MEM_3(D)>
strbuf_addf (err_2(D), "asking for a quick stop\n");
# .MEM_4 = VDEF <.MEM_3(D)>
strbuf_addf (err_2(D), "no further jobs available\n");
# .MEM_15 = VDEF <.MEM_14(D)>
argv_array_pushv (_3, _2);
# .MEM_16 = VDEF <.MEM_15>
strbuf_addf (err_12(D), "preloaded output of a child\n");
# .MEM_36 = VDEF <.MEM_35(D)>
pp_init (&pp, n_15(D), get_next_task_16(D), start_failure_17(D), task_finished_18(D), pp_cb_19(D));
# .MEM_37 = VDEF <.MEM_31>
code_22 = pp_start_one (&pp);
# .MEM_39 = VDEF <.MEM_38>
kill_children (&pp, _1);
# .MEM_40 = VDEF <.MEM_32>
pp_buffer_stderr (&pp, 100);
# .MEM_41 = VDEF <.MEM_40>
pp_output (&pp);
# .MEM_42 = VDEF <.MEM_41>
code_29 = pp_collect_finished (&pp);
# .MEM_44 = VDEF <.MEM_43>
kill_children (&pp, _7);
# .MEM_45 = VDEF <.MEM_32>
pp_cleanup (&pp);
# .MEM_5 = VDEF <.MEM_4(D)>
argv_array_clear (_1);
# .MEM_6 = VDEF <.MEM_5>
argv_array_clear (_2);
# .MEM_9 = VDEF <.MEM_8(D)>
ret_7 = wait_or_whine (_3, _2, 0);
# .MEM_10 = VDEF <.MEM_9>
child_process_clear (cmd_5(D));
# .MEM_113 = VDEF <.MEM_111>
code_97 = finish_command (_12);
# .MEM_118 = VDEF <.MEM_117>
child_process_init (_44);
# .MEM_124 = VDEF <.MEM_118>
strbuf_addbuf (_51, _50);
# .MEM_125 = VDEF <.MEM_124>
strbuf_reset (_56);
# .MEM_119 = VDEF <.MEM_118>
fputs (_62, _57);
# .MEM_120 = VDEF <.MEM_119>
strbuf_reset (_67);
# .MEM_121 = VDEF <.MEM_120>
fputs (_69, _68);
# .MEM_122 = VDEF <.MEM_121>
strbuf_reset (_70);
# .MEM_23 = VDEF <.MEM_21>
kill (_10, signo_17(D));
# .MEM_132 = VDEF <.MEM_117(D)>
printf ("BUG: bookkeeping is hard%s", "");
# .MEM_130 = VDEF <.MEM_118>
strbuf_addbuf (_30, _29);
# .MEM_131 = VDEF <.MEM_130>
strbuf_reset (_35);
# .MEM_122 = VDEF <.MEM_121>
_53 = start_command (_52);
# .MEM_127 = VDEF <.MEM_126>
strbuf_addbuf (_76, _75);
# .MEM_128 = VDEF <.MEM_127>
strbuf_reset (_81);
# .MEM_62 = VDEF <.MEM_61(D)>
n_33 = online_cpus ();
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
# .MEM_82 = VDEF <.MEM_65>
printf ("BUG: you need to specify a get_next_task function%s", "");
# .MEM_72 = VDEF <.MEM_71>
_2 = calloc (_1, 120);
# .MEM_74 = VDEF <.MEM_73>
_4 = calloc (_3, 8);
# .MEM_76 = VDEF <.MEM_75>
strbuf_init (_5, 0);
# .MEM_78 = VDEF <.MEM_60>
strbuf_init (_10, 0);
# .MEM_79 = VDEF <.MEM_78>
child_process_init (_15);
# .MEM_24 = VDEF <.MEM_23(D)>
strbuf_addf (err_16(D), "A child failed with return code %d:", result_14(D));
# .MEM_25 = VDEF <.MEM_21>
strbuf_addf (err_16(D), " %s", _5);
# .MEM_21 = VDEF <.MEM_20(D)>
strbuf_addstr (err_14(D), "Starting a child failed:");
# .MEM_22 = VDEF <.MEM_19>
strbuf_addf (err_14(D), " %s", _5);
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
===============The second stage : record fucntion =================

=============== The third stage : Start detection  =================
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 9 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:__builtin_fwrite========= [0m
[40;33m =======POP node_fun stack:__builtin_fwrite========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:run_processes_parallel========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path run_processes_parallel  function_call count: 7 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:pp_cleanup========= [0m
[40;33m =======POP node_fun stack:pp_cleanup========= [0m
[40;42m =======pre add _ fucntion:kill_children========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path kill_children  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:kill========= [0m
[40;33m =======POP node_fun stack:kill========= [0m
[40;42m =======pre_check_funciton:kill_children========= [0m
[40;42m =======start_check_funciton:kill_children========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f64eed3c948
    type <integer_type 0x7f64ef1f15e8 int public SI
        size <integer_cst 0x7f64ef1dcdf8 constant 32>
        unit-size <integer_cst 0x7f64ef1dce10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64ef1f15e8 precision:32 min <integer_cst 0x7f64ef1dcdb0 -2147483648> max <integer_cst 0x7f64ef1dcdc8 2147483647>
        pointer_to_this <pointer_type 0x7f64ef1f89d8>>
   
    def_stmt _10 = _9->process.pid;
    version:10>
# VUSE <.MEM_21>
_10 = _9->process.pid;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_23 = VDEF <.MEM_21>
kill (_10, signo_17(D));
kill (_10, signo_17(D));
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:259:25: warning: use location
  259 |                         kill(pp->children[i].process.pid, signo);
      |                         ^
this stmt is child function---kill-----

 ================== trace ================== 
trace fucntion name:kill 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_23 = VDEF <.MEM_21>
kill (_10, signo_17(D));
kill (_10, signo_17(D));
./benchmarks/git/use_after_free_2/git_uaf_2.c:259:25: warning: use location
this stmt is child function---kill-----

 ================== trace ================== 
trace fucntion name:kill 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64eed3c948
    type <integer_type 0x7f64ef1f15e8 int public SI
        size <integer_cst 0x7f64ef1dcdf8 constant 32>
        unit-size <integer_cst 0x7f64ef1dce10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64ef1f15e8 precision:32 min <integer_cst 0x7f64ef1dcdb0 -2147483648> max <integer_cst 0x7f64ef1dcdc8 2147483647>
        pointer_to_this <pointer_type 0x7f64ef1f89d8>>
   
    def_stmt _10 = _9->process.pid;
    version:10>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:kill_children========= [0m
[40;42m =======pre add _ fucntion:pp_collect_finished========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path pp_collect_finished  function_call count: 5 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;33m =======POP node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:fputs========= [0m
[40;33m =======POP node_fun stack:fputs========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;33m =======POP node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;33m =======POP node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:finish_command========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path finish_command  function_call count: 2 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:child_process_clear========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path child_process_clear  function_call count: 1 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;33m =======POP node_fun stack:argv_array_clear========= [0m
[40;42m =======pre_check_funciton:child_process_clear========= [0m
[40;42m =======start_check_funciton:child_process_clear========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f64eed36318
    type <pointer_type 0x7f64eed170a8
        type <record_type 0x7f64eed13690 argv_array TI
            size <integer_cst 0x7f64ef1dcc00 constant 128>
            unit-size <integer_cst 0x7f64ef1dcc18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed13690 fields <field_decl 0x7f64eed10d10 argv> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed170a8>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _1 = &child_3(D)->args;
    version:1
    ptr-info 0x7f64eecfcf00>
_1 = &child_3(D)->args;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_5 = VDEF <.MEM_4(D)>
argv_array_clear (_1);
argv_array_clear (_1);
./benchmarks/git/use_after_free_2/git_uaf_2.c:328:9: warning: use location
  328 |         argv_array_clear(&child->args);
      |         ^
this stmt is child function---argv_array_clear-----

 ================== trace ================== 
trace fucntion name:argv_array_clear 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_5 = VDEF <.MEM_4(D)>
argv_array_clear (_1);
argv_array_clear (_1);
./benchmarks/git/use_after_free_2/git_uaf_2.c:328:9: warning: use location
this stmt is child function---argv_array_clear-----

 ================== trace ================== 
trace fucntion name:argv_array_clear 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64eed36318
    type <pointer_type 0x7f64eed170a8
        type <record_type 0x7f64eed13690 argv_array TI
            size <integer_cst 0x7f64ef1dcc00 constant 128>
            unit-size <integer_cst 0x7f64ef1dcc18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed13690 fields <field_decl 0x7f64eed10d10 argv> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed170a8>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _1 = &child_3(D)->args;
    version:1
    ptr-info 0x7f64eecfcf00>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f64eed36360
    type <pointer_type 0x7f64eed170a8
        type <record_type 0x7f64eed13690 argv_array TI
            size <integer_cst 0x7f64ef1dcc00 constant 128>
            unit-size <integer_cst 0x7f64ef1dcc18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed13690 fields <field_decl 0x7f64eed10d10 argv> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed170a8>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = &child_3(D)->env_array;
    version:2
    ptr-info 0x7f64eecfcf18>
_2 = &child_3(D)->env_array;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_6 = VDEF <.MEM_5>
argv_array_clear (_2);
argv_array_clear (_2);
./benchmarks/git/use_after_free_2/git_uaf_2.c:329:9: warning: use location
  329 |         argv_array_clear(&child->env_array);
      |         ^
this stmt is child function---argv_array_clear-----

 ================== trace ================== 
trace fucntion name:argv_array_clear 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_6 = VDEF <.MEM_5>
argv_array_clear (_2);
argv_array_clear (_2);
./benchmarks/git/use_after_free_2/git_uaf_2.c:329:9: warning: use location
this stmt is child function---argv_array_clear-----

 ================== trace ================== 
trace fucntion name:argv_array_clear 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64eed36360
    type <pointer_type 0x7f64eed170a8
        type <record_type 0x7f64eed13690 argv_array TI
            size <integer_cst 0x7f64ef1dcc00 constant 128>
            unit-size <integer_cst 0x7f64ef1dcc18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed13690 fields <field_decl 0x7f64eed10d10 argv> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed170a8>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = &child_3(D)->env_array;
    version:2
    ptr-info 0x7f64eecfcf18>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:child_process_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;33m =======POP node_fun stack:wait_or_whine========= [0m
[40;42m =======pre_check_funciton:finish_command========= [0m
[40;42m =======start_check_funciton:finish_command========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f64eed36558
    type <integer_type 0x7f64ef1f15e8 int public SI
        size <integer_cst 0x7f64ef1dcdf8 constant 32>
        unit-size <integer_cst 0x7f64ef1dce10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64ef1f15e8 precision:32 min <integer_cst 0x7f64ef1dcdb0 -2147483648> max <integer_cst 0x7f64ef1dcdc8 2147483647>
        pointer_to_this <pointer_type 0x7f64ef1f89d8>>
   
    def_stmt _3 = cmd_5(D)->pid;
    version:3>
# VUSE <.MEM_8(D)>
_3 = cmd_5(D)->pid;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
ret_7 = wait_or_whine (_3, _2, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:15: warning: use location
  321 |     int ret = wait_or_whine(cmd->pid, cmd->argv[0], 0);
      |               ^
this stmt is child function---wait_or_whine-----

 ================== trace ================== 
trace fucntion name:wait_or_whine 

 ================== trace ================== 
trace fucntion free:0 
ret_7 = wait_or_whine (_3, _2, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:15: warning: use location
this stmt is child function---wait_or_whine-----

 ================== trace ================== 
trace fucntion name:wait_or_whine 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64eed36558
    type <integer_type 0x7f64ef1f15e8 int public SI
        size <integer_cst 0x7f64ef1dcdf8 constant 32>
        unit-size <integer_cst 0x7f64ef1dce10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64ef1f15e8 precision:32 min <integer_cst 0x7f64ef1dcdb0 -2147483648> max <integer_cst 0x7f64ef1dcdc8 2147483647>
        pointer_to_this <pointer_type 0x7f64ef1f89d8>>
   
    def_stmt _3 = cmd_5(D)->pid;
    version:3>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f64eed365a0
    type <pointer_type 0x7f64eed137e0
        type <record_type 0x7f64eed13738 child_process BLK
            size <integer_cst 0x7f64eecfc978 constant 640>
            unit-size <integer_cst 0x7f64eecfc948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed13738 fields <field_decl 0x7f64eed15850 argv> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed137e0>>
        public unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f64eed1bd80 cmd>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7f64eecfcf78>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_10 = VDEF <.MEM_9>
child_process_clear (cmd_5(D));
child_process_clear (cmd_5(D));
./benchmarks/git/use_after_free_2/git_uaf_2.c:322:5: warning: use location
  322 |     child_process_clear(cmd);
      |     ^
this stmt is child function---child_process_clear-----

 ================== trace ================== 
trace fucntion name:child_process_clear 
[40;44m =======trace_function_path child_process_clear  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:child_process_clear========= [0m
[40;36m ======= find relate stmt with cmd ========= [0m
[40;36m ======= relate stmt argument:cmd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m

 ================== trace ================== 
trace fucntion free:0 
_3 = cmd_5(D)->pid;
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:15: warning: use location
  321 |     int ret = wait_or_whine(cmd->pid, cmd->argv[0], 0);
      |               ^
ret_7 = wait_or_whine (_3, _2, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:15: warning: use location
this stmt is child function---wait_or_whine-----

 ================== trace ================== 
trace fucntion name:wait_or_whine 

 ================== trace ================== 
trace fucntion free:0 
_1 = cmd_5(D)->argv;
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:42: warning: use location
  321 |     int ret = wait_or_whine(cmd->pid, cmd->argv[0], 0);
      |                                          ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64eed365a0
    type <pointer_type 0x7f64eed137e0
        type <record_type 0x7f64eed13738 child_process BLK
            size <integer_cst 0x7f64eecfc978 constant 640>
            unit-size <integer_cst 0x7f64eecfc948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed13738 fields <field_decl 0x7f64eed15850 argv> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed137e0>>
        public unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f64eed1bd80 cmd>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7f64eecfcf78>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:finish_command========= [0m
[40;42m =======pre_check_funciton:pp_collect_finished========= [0m
[40;42m =======start_check_funciton:pp_collect_finished========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f64eed36a20
    type <pointer_type 0x7f64eed137e0
        type <record_type 0x7f64eed13738 child_process BLK
            size <integer_cst 0x7f64eecfc978 constant 640>
            unit-size <integer_cst 0x7f64eecfc948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed13738 fields <field_decl 0x7f64eed15850 argv> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed137e0>>
        public unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _12 = &_11->process;
    version:12
    ptr-info 0x7f64eed5c048>
_12 = &_11->process;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_113 = VDEF <.MEM_111>
code_97 = finish_command (_12);
bb index := 7
# VUSE <.MEM_110>
return result_87;
In function ‘pp_collect_finished’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_113 = VDEF <.MEM_111>
code_97 = finish_command (_12);
bb index := 7
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_113 = VDEF <.MEM_111>
code_97 = finish_command (_12);
bb index := 7
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
code_97 = finish_command (_12);
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:275:24: warning: use location
  275 |                 code = finish_command(&pp->children[i].process);
      |                        ^
this stmt is child function---finish_command-----

 ================== trace ================== 
trace fucntion name:finish_command 
[40;44m =======trace_function_path finish_command  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:finish_command========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_clear========= [0m
[40;46m =======add node_fun stack:child_process_clear========= [0m
[40;44m =======trace_function_path child_process_clear  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:child_process_clear========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;46m =======add node_fun stack:wait_or_whine========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_113 = VDEF <.MEM_111>
code_97 = finish_command (_12);
bb index := 7
# VUSE <.MEM_110>
return result_87;
In function ‘pp_collect_finished’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_113 = VDEF <.MEM_111>
code_97 = finish_command (_12);
bb index := 7
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_113 = VDEF <.MEM_111>
code_97 = finish_command (_12);
bb index := 7
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
code_97 = finish_command (_12);
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:275:24: warning: use location
  275 |                 code = finish_command(&pp->children[i].process);
      |                        ^
this stmt is child function---finish_command-----

 ================== trace ================== 
trace fucntion name:finish_command 
[40;44m =======trace_function_path finish_command  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:finish_command========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_clear========= [0m
[40;46m =======add node_fun stack:child_process_clear========= [0m
[40;44m =======trace_function_path child_process_clear  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:child_process_clear========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;46m =======add node_fun stack:wait_or_whine========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64eed36a20
    type <pointer_type 0x7f64eed137e0
        type <record_type 0x7f64eed13738 child_process BLK
            size <integer_cst 0x7f64eecfc978 constant 640>
            unit-size <integer_cst 0x7f64eecfc948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed13738 fields <field_decl 0x7f64eed15850 argv> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed137e0>>
        public unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _12 = &_11->process;
    version:12
    ptr-info 0x7f64eed5c048>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f64eed3b360
    type <pointer_type 0x7f64eed137e0
        type <record_type 0x7f64eed13738 child_process BLK
            size <integer_cst 0x7f64eecfc978 constant 640>
            unit-size <integer_cst 0x7f64eecfc948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed13738 fields <field_decl 0x7f64eed15850 argv> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed137e0>>
        public unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _44 = &_43->process;
    version:44
    ptr-info 0x7f64eed5c1f8>
_44 = &_43->process;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_118 = VDEF <.MEM_117>
child_process_init (_44);
bb index := 10
# VUSE <.MEM_110>
return result_87;
In function ‘pp_collect_finished’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_118 = VDEF <.MEM_117>
child_process_init (_44);
bb index := 10
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_118 = VDEF <.MEM_117>
child_process_init (_44);
bb index := 10
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_118 = VDEF <.MEM_117>
child_process_init (_44);
child_process_init (_44);
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:289:17: warning: use location
  289 |                 child_process_init(&pp->children[i].process);
      |                 ^
this stmt is child function---child_process_init-----

 ================== trace ================== 
trace fucntion name:child_process_init 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_118 = VDEF <.MEM_117>
child_process_init (_44);
bb index := 10
# VUSE <.MEM_110>
return result_87;
In function ‘pp_collect_finished’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_118 = VDEF <.MEM_117>
child_process_init (_44);
bb index := 10
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_118 = VDEF <.MEM_117>
child_process_init (_44);
bb index := 10
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_118 = VDEF <.MEM_117>
child_process_init (_44);
child_process_init (_44);
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:289:17: warning: use location
  289 |                 child_process_init(&pp->children[i].process);
      |                 ^
this stmt is child function---child_process_init-----

 ================== trace ================== 
trace fucntion name:child_process_init 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64eed3b360
    type <pointer_type 0x7f64eed137e0
        type <record_type 0x7f64eed13738 child_process BLK
            size <integer_cst 0x7f64eecfc978 constant 640>
            unit-size <integer_cst 0x7f64eecfc948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed13738 fields <field_decl 0x7f64eed15850 argv> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed137e0>>
        public unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _44 = &_43->process;
    version:44
    ptr-info 0x7f64eed5c1f8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f64eed3b558
    type <pointer_type 0x7f64eed13888
        type <record_type 0x7f64eed0c150 strbuf BLK
            size <integer_cst 0x7f64ef1fa078 constant 192>
            unit-size <integer_cst 0x7f64ef1fa048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed0c150 fields <field_decl 0x7f64eed08260 alloc> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed13888>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _51 = &pp_91(D)->buffered_output;
    version:51
    ptr-info 0x7f64eed5c258>
_51 = &pp_91(D)->buffered_output;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_124 = VDEF <.MEM_118>
strbuf_addbuf (_51, _50);
strbuf_addbuf (_51, _50);
./benchmarks/git/use_after_free_2/git_uaf_2.c:292:25: warning: use location
  292 |                         strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);
      |                         ^
this stmt is child function---strbuf_addbuf-----

 ================== trace ================== 
trace fucntion name:strbuf_addbuf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_124 = VDEF <.MEM_118>
strbuf_addbuf (_51, _50);
strbuf_addbuf (_51, _50);
./benchmarks/git/use_after_free_2/git_uaf_2.c:292:25: warning: use location
this stmt is child function---strbuf_addbuf-----

 ================== trace ================== 
trace fucntion name:strbuf_addbuf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64eed3b558
    type <pointer_type 0x7f64eed13888
        type <record_type 0x7f64eed0c150 strbuf BLK
            size <integer_cst 0x7f64ef1fa078 constant 192>
            unit-size <integer_cst 0x7f64ef1fa048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed0c150 fields <field_decl 0x7f64eed08260 alloc> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed13888>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _51 = &pp_91(D)->buffered_output;
    version:51
    ptr-info 0x7f64eed5c258>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f64eed3b6c0
    type <pointer_type 0x7f64eed13888
        type <record_type 0x7f64eed0c150 strbuf BLK
            size <integer_cst 0x7f64ef1fa078 constant 192>
            unit-size <integer_cst 0x7f64ef1fa048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed0c150 fields <field_decl 0x7f64eed08260 alloc> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed13888>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _56 = &_55->err;
    version:56
    ptr-info 0x7f64eed5c2a0>
_56 = &_55->err;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_125 = VDEF <.MEM_124>
strbuf_reset (_56);
strbuf_reset (_56);
./benchmarks/git/use_after_free_2/git_uaf_2.c:293:25: warning: use location
  293 |                         strbuf_reset(&pp->children[i].err);
      |                         ^
this stmt is child function---strbuf_reset-----

 ================== trace ================== 
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_125 = VDEF <.MEM_124>
strbuf_reset (_56);
strbuf_reset (_56);
./benchmarks/git/use_after_free_2/git_uaf_2.c:293:25: warning: use location
this stmt is child function---strbuf_reset-----

 ================== trace ================== 
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64eed3b6c0
    type <pointer_type 0x7f64eed13888
        type <record_type 0x7f64eed0c150 strbuf BLK
            size <integer_cst 0x7f64ef1fa078 constant 192>
            unit-size <integer_cst 0x7f64ef1fa048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed0c150 fields <field_decl 0x7f64eed08260 alloc> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed13888>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _56 = &_55->err;
    version:56
    ptr-info 0x7f64eed5c2a0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f64eed3b870
    type <pointer_type 0x7f64eed0c000
        type <integer_type 0x7f64eed05930 char public QI
            size <integer_cst 0x7f64ef1dcca8 constant 8>
            unit-size <integer_cst 0x7f64ef1dccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64ef1f13f0 precision:8 min <integer_cst 0x7f64eecfc7b0 -128> max <integer_cst 0x7f64eecfc798 127>
            pointer_to_this <pointer_type 0x7f64eed0c000>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7f64eed0e690>>
   
    def_stmt _62 = _61->err.buf;
    version:62
    ptr-info 0x7f64eed5c300>
# VUSE <.MEM_118>
_62 = _61->err.buf;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_119 = VDEF <.MEM_118>
fputs (_62, _57);
fputs (_62, _57);
./benchmarks/git/use_after_free_2/git_uaf_2.c:295:25: warning: use location
  295 |                         fputs(pp->children[i].err.buf, stderr);
      |                         ^
this stmt is child function---fputs-----

 ================== trace ================== 
trace fucntion name:fputs 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_119 = VDEF <.MEM_118>
fputs (_62, _57);
fputs (_62, _57);
./benchmarks/git/use_after_free_2/git_uaf_2.c:295:25: warning: use location
this stmt is child function---fputs-----

 ================== trace ================== 
trace fucntion name:fputs 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64eed3b870
    type <pointer_type 0x7f64eed0c000
        type <integer_type 0x7f64eed05930 char public QI
            size <integer_cst 0x7f64ef1dcca8 constant 8>
            unit-size <integer_cst 0x7f64ef1dccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64ef1f13f0 precision:8 min <integer_cst 0x7f64eecfc7b0 -128> max <integer_cst 0x7f64eecfc798 127>
            pointer_to_this <pointer_type 0x7f64eed0c000>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7f64eed0e690>>
   
    def_stmt _62 = _61->err.buf;
    version:62
    ptr-info 0x7f64eed5c300>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f64eed3b9d8
    type <pointer_type 0x7f64eed13888
        type <record_type 0x7f64eed0c150 strbuf BLK
            size <integer_cst 0x7f64ef1fa078 constant 192>
            unit-size <integer_cst 0x7f64ef1fa048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed0c150 fields <field_decl 0x7f64eed08260 alloc> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed13888>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _67 = &_66->err;
    version:67
    ptr-info 0x7f64eed5c348>
_67 = &_66->err;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_120 = VDEF <.MEM_119>
strbuf_reset (_67);
strbuf_reset (_67);
./benchmarks/git/use_after_free_2/git_uaf_2.c:296:25: warning: use location
  296 |                         strbuf_reset(&pp->children[i].err);
      |                         ^
this stmt is child function---strbuf_reset-----

 ================== trace ================== 
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_120 = VDEF <.MEM_119>
strbuf_reset (_67);
strbuf_reset (_67);
./benchmarks/git/use_after_free_2/git_uaf_2.c:296:25: warning: use location
this stmt is child function---strbuf_reset-----

 ================== trace ================== 
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64eed3b9d8
    type <pointer_type 0x7f64eed13888
        type <record_type 0x7f64eed0c150 strbuf BLK
            size <integer_cst 0x7f64ef1fa078 constant 192>
            unit-size <integer_cst 0x7f64ef1fa048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed0c150 fields <field_decl 0x7f64eed08260 alloc> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed13888>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _67 = &_66->err;
    version:67
    ptr-info 0x7f64eed5c348>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f64eed3ba68
    type <pointer_type 0x7f64eed0c000
        type <integer_type 0x7f64eed05930 char public QI
            size <integer_cst 0x7f64ef1dcca8 constant 8>
            unit-size <integer_cst 0x7f64ef1dccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64ef1f13f0 precision:8 min <integer_cst 0x7f64eecfc7b0 -128> max <integer_cst 0x7f64eecfc798 127>
            pointer_to_this <pointer_type 0x7f64eed0c000>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7f64eed0e690>>
   
    def_stmt _69 = pp_91(D)->buffered_output.buf;
    version:69
    ptr-info 0x7f64eed5c378>
# VUSE <.MEM_120>
_69 = pp_91(D)->buffered_output.buf;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_121 = VDEF <.MEM_120>
fputs (_69, _68);
fputs (_69, _68);
./benchmarks/git/use_after_free_2/git_uaf_2.c:299:25: warning: use location
  299 |                         fputs(pp->buffered_output.buf, stderr);
      |                         ^
this stmt is child function---fputs-----

 ================== trace ================== 
trace fucntion name:fputs 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_121 = VDEF <.MEM_120>
fputs (_69, _68);
fputs (_69, _68);
./benchmarks/git/use_after_free_2/git_uaf_2.c:299:25: warning: use location
this stmt is child function---fputs-----

 ================== trace ================== 
trace fucntion name:fputs 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64eed3ba68
    type <pointer_type 0x7f64eed0c000
        type <integer_type 0x7f64eed05930 char public QI
            size <integer_cst 0x7f64ef1dcca8 constant 8>
            unit-size <integer_cst 0x7f64ef1dccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64ef1f13f0 precision:8 min <integer_cst 0x7f64eecfc7b0 -128> max <integer_cst 0x7f64eecfc798 127>
            pointer_to_this <pointer_type 0x7f64eed0c000>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7f64eed0e690>>
   
    def_stmt _69 = pp_91(D)->buffered_output.buf;
    version:69
    ptr-info 0x7f64eed5c378>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f64eed3bab0
    type <pointer_type 0x7f64eed13888
        type <record_type 0x7f64eed0c150 strbuf BLK
            size <integer_cst 0x7f64ef1fa078 constant 192>
            unit-size <integer_cst 0x7f64ef1fa048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed0c150 fields <field_decl 0x7f64eed08260 alloc> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed13888>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _70 = &pp_91(D)->buffered_output;
    version:70
    ptr-info 0x7f64eed5c390>
_70 = &pp_91(D)->buffered_output;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_122 = VDEF <.MEM_121>
strbuf_reset (_70);
strbuf_reset (_70);
./benchmarks/git/use_after_free_2/git_uaf_2.c:300:25: warning: use location
  300 |                         strbuf_reset(&pp->buffered_output);
      |                         ^
this stmt is child function---strbuf_reset-----

 ================== trace ================== 
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_122 = VDEF <.MEM_121>
strbuf_reset (_70);
strbuf_reset (_70);
./benchmarks/git/use_after_free_2/git_uaf_2.c:300:25: warning: use location
this stmt is child function---strbuf_reset-----

 ================== trace ================== 
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64eed3bab0
    type <pointer_type 0x7f64eed13888
        type <record_type 0x7f64eed0c150 strbuf BLK
            size <integer_cst 0x7f64ef1fa078 constant 192>
            unit-size <integer_cst 0x7f64ef1fa048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed0c150 fields <field_decl 0x7f64eed08260 alloc> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed13888>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _70 = &pp_91(D)->buffered_output;
    version:70
    ptr-info 0x7f64eed5c390>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:pp_collect_finished========= [0m
[40;42m =======pre add _ fucntion:pp_output========= [0m
[40;33m =======POP node_fun stack:pp_output========= [0m
[40;42m =======pre add _ fucntion:pp_buffer_stderr========= [0m
[40;33m =======POP node_fun stack:pp_buffer_stderr========= [0m
[40;42m =======pre add _ fucntion:pp_start_one========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path pp_start_one  function_call count: 5 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;33m =======POP node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;33m =======POP node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:start_command========= [0m
[40;33m =======POP node_fun stack:start_command========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:pp_start_one========= [0m
[40;42m =======start_check_funciton:pp_start_one========= [0m

dot graph START

======================================================================
 <addr_expr 0x7f64eed2ca80
    type <pointer_type 0x7f64eed16d20
        type <array_type 0x7f64eed16c78 type <integer_type 0x7f64eed05930 char>
            BLK
            size <integer_cst 0x7f64eecfccf0 constant 216>
            unit-size <integer_cst 0x7f64eecfccd8 constant 27>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f64eed16bd0>
            pointer_to_this <pointer_type 0x7f64eed16d20>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f64eed48090 type <array_type 0x7f64eed16c78>
        readonly constant static "BUG: bookkeeping is hard%s\000">
    ./benchmarks/git/use_after_free_2/git_uaf_2.c:220:3 start: ./benchmarks/git/use_after_free_2/git_uaf_2.c:220:3 finish: ./benchmarks/git/use_after_free_2/git_uaf_2.c:220:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f64eed45480
    type <pointer_type 0x7f64eed13888
        type <record_type 0x7f64eed0c150 strbuf BLK
            size <integer_cst 0x7f64ef1fa078 constant 192>
            unit-size <integer_cst 0x7f64ef1fa048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed0c150 fields <field_decl 0x7f64eed08260 alloc> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed13888>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _30 = &pp_102(D)->buffered_output;
    version:30
    ptr-info 0x7f64eed5c5e8>
_30 = &pp_102(D)->buffered_output;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_130 = VDEF <.MEM_118>
strbuf_addbuf (_30, _29);
bb index := 9
# VUSE <.MEM_46>
return 0;
In function ‘pp_start_one’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_130 = VDEF <.MEM_118>
strbuf_addbuf (_30, _29);
bb index := 9
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================
# .MEM_130 = VDEF <.MEM_118>
strbuf_addbuf (_30, _29);
strbuf_addbuf (_30, _29);
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:227:17: warning: use location
  227 |                 strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);
      |                 ^
this stmt is child function---strbuf_addbuf-----

 ================== trace ================== 
trace fucntion name:strbuf_addbuf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_130 = VDEF <.MEM_118>
strbuf_addbuf (_30, _29);
bb index := 9
# VUSE <.MEM_46>
return 0;
In function ‘pp_start_one’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_130 = VDEF <.MEM_118>
strbuf_addbuf (_30, _29);
bb index := 9
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================
# .MEM_130 = VDEF <.MEM_118>
strbuf_addbuf (_30, _29);
strbuf_addbuf (_30, _29);
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:227:17: warning: use location
  227 |                 strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);
      |                 ^
this stmt is child function---strbuf_addbuf-----

 ================== trace ================== 
trace fucntion name:strbuf_addbuf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64eed45480
    type <pointer_type 0x7f64eed13888
        type <record_type 0x7f64eed0c150 strbuf BLK
            size <integer_cst 0x7f64ef1fa078 constant 192>
            unit-size <integer_cst 0x7f64ef1fa048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed0c150 fields <field_decl 0x7f64eed08260 alloc> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed13888>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _30 = &pp_102(D)->buffered_output;
    version:30
    ptr-info 0x7f64eed5c5e8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f64eed455e8
    type <pointer_type 0x7f64eed13888
        type <record_type 0x7f64eed0c150 strbuf BLK
            size <integer_cst 0x7f64ef1fa078 constant 192>
            unit-size <integer_cst 0x7f64ef1fa048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed0c150 fields <field_decl 0x7f64eed08260 alloc> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed13888>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _35 = &_34->err;
    version:35
    ptr-info 0x7f64eed5c630>
_35 = &_34->err;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_131 = VDEF <.MEM_130>
strbuf_reset (_35);
bb index := 9
# VUSE <.MEM_46>
return 0;
In function ‘pp_start_one’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_131 = VDEF <.MEM_130>
strbuf_reset (_35);
bb index := 9
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================
# .MEM_131 = VDEF <.MEM_130>
strbuf_reset (_35);
strbuf_reset (_35);
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:228:17: warning: use location
  228 |                 strbuf_reset(&pp->children[i].err);
      |                 ^
this stmt is child function---strbuf_reset-----

 ================== trace ================== 
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_131 = VDEF <.MEM_130>
strbuf_reset (_35);
bb index := 9
# VUSE <.MEM_46>
return 0;
In function ‘pp_start_one’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_131 = VDEF <.MEM_130>
strbuf_reset (_35);
bb index := 9
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================
# .MEM_131 = VDEF <.MEM_130>
strbuf_reset (_35);
strbuf_reset (_35);
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:228:17: warning: use location
  228 |                 strbuf_reset(&pp->children[i].err);
      |                 ^
this stmt is child function---strbuf_reset-----

 ================== trace ================== 
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64eed455e8
    type <pointer_type 0x7f64eed13888
        type <record_type 0x7f64eed0c150 strbuf BLK
            size <integer_cst 0x7f64ef1fa078 constant 192>
            unit-size <integer_cst 0x7f64ef1fa048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed0c150 fields <field_decl 0x7f64eed08260 alloc> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed13888>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _35 = &_34->err;
    version:35
    ptr-info 0x7f64eed5c630>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f64eed45ab0
    type <pointer_type 0x7f64eed137e0
        type <record_type 0x7f64eed13738 child_process BLK
            size <integer_cst 0x7f64eecfc978 constant 640>
            unit-size <integer_cst 0x7f64eecfc948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed13738 fields <field_decl 0x7f64eed15850 argv> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed137e0>>
        public unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _52 = &_51->process;
    version:52
    ptr-info 0x7f64eed5c708>
_52 = &_51->process;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_53 = start_command (_52);
./benchmarks/git/use_after_free_2/git_uaf_2.c:235:13: warning: use location
  235 |         if (start_command(&pp->children[i].process)) {
      |             ^
this stmt is child function---start_command-----

 ================== trace ================== 
trace fucntion name:start_command 

 ================== trace ================== 
trace fucntion free:0 
if (_53 != 0)
./benchmarks/git/use_after_free_2/git_uaf_2.c:235:12: warning: use location
  235 |         if (start_command(&pp->children[i].process)) {
      |            ^
if (_53 != 0)

 ================== find cond branch ================= 
./benchmarks/git/use_after_free_2/git_uaf_2.c:235:12: warning: use location
Cond in fucntion pp_start_one basic block 10
 ================== possible direct basic block ================= 
from pp_start_one basic block 11
 ================== possible direct basic block ================= 
from pp_start_one basic block 14
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64eed45ab0
    type <pointer_type 0x7f64eed137e0
        type <record_type 0x7f64eed13738 child_process BLK
            size <integer_cst 0x7f64eecfc978 constant 640>
            unit-size <integer_cst 0x7f64eecfc948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed13738 fields <field_decl 0x7f64eed15850 argv> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed137e0>>
        public unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _52 = &_51->process;
    version:52
    ptr-info 0x7f64eed5c708>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f64eed461b0
    type <pointer_type 0x7f64eed13888
        type <record_type 0x7f64eed0c150 strbuf BLK
            size <integer_cst 0x7f64ef1fa078 constant 192>
            unit-size <integer_cst 0x7f64ef1fa048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed0c150 fields <field_decl 0x7f64eed08260 alloc> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed13888>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _76 = &pp_102(D)->buffered_output;
    version:76
    ptr-info 0x7f64eed5c870>
_76 = &pp_102(D)->buffered_output;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_127 = VDEF <.MEM_126>
strbuf_addbuf (_76, _75);
strbuf_addbuf (_76, _75);
./benchmarks/git/use_after_free_2/git_uaf_2.c:240:17: warning: use location
  240 |                 strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);
      |                 ^
this stmt is child function---strbuf_addbuf-----

 ================== trace ================== 
trace fucntion name:strbuf_addbuf 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_127 = VDEF <.MEM_126>
strbuf_addbuf (_76, _75);
strbuf_addbuf (_76, _75);
./benchmarks/git/use_after_free_2/git_uaf_2.c:240:17: warning: use location
this stmt is child function---strbuf_addbuf-----

 ================== trace ================== 
trace fucntion name:strbuf_addbuf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64eed461b0
    type <pointer_type 0x7f64eed13888
        type <record_type 0x7f64eed0c150 strbuf BLK
            size <integer_cst 0x7f64ef1fa078 constant 192>
            unit-size <integer_cst 0x7f64ef1fa048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed0c150 fields <field_decl 0x7f64eed08260 alloc> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed13888>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _76 = &pp_102(D)->buffered_output;
    version:76
    ptr-info 0x7f64eed5c870>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f64eed46318
    type <pointer_type 0x7f64eed13888
        type <record_type 0x7f64eed0c150 strbuf BLK
            size <integer_cst 0x7f64ef1fa078 constant 192>
            unit-size <integer_cst 0x7f64ef1fa048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed0c150 fields <field_decl 0x7f64eed08260 alloc> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed13888>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _81 = &_80->err;
    version:81
    ptr-info 0x7f64eed5c8b8>
_81 = &_80->err;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_128 = VDEF <.MEM_127>
strbuf_reset (_81);
strbuf_reset (_81);
./benchmarks/git/use_after_free_2/git_uaf_2.c:241:17: warning: use location
  241 |                 strbuf_reset(&pp->children[i].err);
      |                 ^
this stmt is child function---strbuf_reset-----

 ================== trace ================== 
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_128 = VDEF <.MEM_127>
strbuf_reset (_81);
strbuf_reset (_81);
./benchmarks/git/use_after_free_2/git_uaf_2.c:241:17: warning: use location
this stmt is child function---strbuf_reset-----

 ================== trace ================== 
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64eed46318
    type <pointer_type 0x7f64eed13888
        type <record_type 0x7f64eed0c150 strbuf BLK
            size <integer_cst 0x7f64ef1fa078 constant 192>
            unit-size <integer_cst 0x7f64ef1fa048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed0c150 fields <field_decl 0x7f64eed08260 alloc> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed13888>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _81 = &_80->err;
    version:81
    ptr-info 0x7f64eed5c8b8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:pp_start_one========= [0m
[40;42m =======pre add _ fucntion:pp_init========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path pp_init  function_call count: 7 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;33m =======POP node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;33m =======POP node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;33m =======POP node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;33m =======POP node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;33m =======POP node_fun stack:online_cpus========= [0m
[40;42m =======pre_check_funciton:pp_init========= [0m
[40;42m =======start_check_funciton:pp_init========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f64eed46ee8
    type <pointer_type 0x7f64ef1f8000
        type <void_type 0x7f64ef1f1f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f64ef1f8000>>
        public unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f64eed05498>>
   
    def_stmt _2 = calloc (_1, 120);
    version:2
    ptr-info 0x7f64eed5c978>
# .MEM_72 = VDEF <.MEM_71>
_2 = calloc (_1, 120);

 ================== trace ptable================== 
trace fucntion name:calloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---calloc-----
this Reserved word function ------calloc-----
 
 Start check Pointer Collect  

======================================================================
_2 = calloc (_1, 120);
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:24: warning: use location
  191 |         pp->children = xcalloc(n, sizeof(*pp->children));
      |                        ^
this stmt is child function---calloc-----

 ================== trace ================== 
pp_34(D)->children = _2;
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:22: warning: use location
  191 |         pp->children = xcalloc(n, sizeof(*pp->children));
      |                      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_80>
_20 = pp_34(D)->pfd;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_80>
_20 = pp_34(D)->pfd;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = pp_34(D)->pfd;
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:19: warning: use location
  199 |                 pp->pfd[i].fd = -1;
      |                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_79>
_16 = pp_34(D)->pfd;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_79>
_16 = pp_34(D)->pfd;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = pp_34(D)->pfd;
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:19: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = _16 + _18;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = _16 + _18;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = _16 + _18;
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:24: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_80 = VDEF <.MEM_79>
_19->events = 17;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_80 = VDEF <.MEM_79>
_19->events = 17;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19->events = 17;
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:35: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_78>
_11 = pp_34(D)->children;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_78>
_11 = pp_34(D)->children;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = pp_34(D)->children;
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:39: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _11 + _13;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _11 + _13;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = _11 + _13;
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:49: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = &_14->process;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = &_14->process;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = &_14->process;
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_78>
child_process_init (_15);
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_78>
child_process_init (_15);
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
child_process_init (_15);
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                 ^
this stmt is child function---child_process_init-----

 ================== trace ================== 
trace fucntion name:child_process_init 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_60>
_6 = pp_34(D)->children;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_60>
_6 = pp_34(D)->children;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = pp_34(D)->children;
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:32: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = _6 + _8;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = _6 + _8;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = _6 + _8;
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:42: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = &_9->err;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = &_9->err;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = &_9->err;
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_60>
strbuf_init (_10, 0);
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_60>
strbuf_init (_10, 0);
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strbuf_init (_10, 0);
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                 ^
this stmt is child function---strbuf_init-----

 ================== trace ================== 
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 
_5 = &pp_34(D)->buffered_output;
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: use location
  193 |         strbuf_init(&pp->buffered_output, 0);
      |         ^
strbuf_init (_5, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: use location
this stmt is child function---strbuf_init-----

 ================== trace ================== 
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 
pp_34(D)->pfd = _4;
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:17: warning: use location
  192 |         pp->pfd = xcalloc(n, sizeof(*pp->pfd));
      |                 ^
pp_34(D)->pfd = _4;
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:17: warning: use location
pp_34(D)->shutdown = 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:190:22: warning: use location
  190 |         pp->shutdown = 0;
      |                      ^
pp_34(D)->output_owner = 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:189:26: warning: use location
  189 |         pp->output_owner = 0;
      |                          ^
pp_34(D)->nr_processes = 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:188:26: warning: use location
  188 |         pp->nr_processes = 0;
      |                          ^
pp_34(D)->task_finished = _27;
./benchmarks/git/use_after_free_2/git_uaf_2.c:186:27: warning: use location
  186 |         pp->task_finished = task_finished ? task_finished : default_task_finished;
      |                           ^
pp_34(D)->task_finished = _27;
./benchmarks/git/use_after_free_2/git_uaf_2.c:186:27: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
pp_34(D)->start_failure = _26;
bb index := 8
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
pp_34(D)->start_failure = _26;
bb index := 8
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
pp_34(D)->start_failure = _26;
bb index := 8
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 13

======================================================================
pp_34(D)->start_failure = _26;
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:185:27: warning: use location
  185 |         pp->start_failure = start_failure ? start_failure : default_start_failure;
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
pp_34(D)->start_failure = _26;
bb index := 8
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
pp_34(D)->start_failure = _26;
bb index := 8
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
pp_34(D)->start_failure = _26;
bb index := 8
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 13

======================================================================
pp_34(D)->start_failure = _26;
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:185:27: warning: use location
  185 |         pp->start_failure = start_failure ? start_failure : default_start_failure;
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
pp_34(D)->get_next_task = get_next_task_39(D);
bb index := 6
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
pp_34(D)->get_next_task = get_next_task_39(D);
bb index := 6
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
pp_34(D)->get_next_task = get_next_task_39(D);
bb index := 6
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 13

======================================================================
pp_34(D)->get_next_task = get_next_task_39(D);
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:183:27: warning: use location
  183 |         pp->get_next_task = get_next_task;
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
pp_34(D)->get_next_task = get_next_task_39(D);
bb index := 6
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
pp_34(D)->get_next_task = get_next_task_39(D);
bb index := 6
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
pp_34(D)->get_next_task = get_next_task_39(D);
bb index := 6
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 13

======================================================================
pp_34(D)->get_next_task = get_next_task_39(D);
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:183:27: warning: use location
  183 |         pp->get_next_task = get_next_task;
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (get_next_task_39(D) == 0B)
bb index := 4
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (get_next_task_39(D) == 0B)
bb index := 4
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (get_next_task_39(D) == 0B)
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (get_next_task_39(D) == 0B)
bb index := 4
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (get_next_task_39(D) == 0B)
bb index := 4
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (get_next_task_39(D) == 0B)
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
if (get_next_task_39(D) == 0B)
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:181:12: warning: use location
  181 |         if (!get_next_task)
      |            ^
if (get_next_task_39(D) == 0B)

 ================== find cond branch ================= 
./benchmarks/git/use_after_free_2/git_uaf_2.c:181:12: warning: use location
Cond in fucntion pp_init basic block 4
 ================== possible direct basic block ================= 
from pp_init basic block 5
 ================== possible direct basic block ================= 
from pp_init basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
pp_34(D)->data = data_37(D);
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:180:18: warning: use location
  180 |         pp->data = data;
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
pp_34(D)->data = data_37(D);
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:180:18: warning: use location
  180 |         pp->data = data;
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_59>
pp_34(D)->max_processes = n_24;
bb index := 4
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_59>
pp_34(D)->max_processes = n_24;
bb index := 4
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_59>
pp_34(D)->max_processes = n_24;
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_59>
pp_34(D)->max_processes = n_24;
bb index := 4
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_59>
pp_34(D)->max_processes = n_24;
bb index := 4
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_59>
pp_34(D)->max_processes = n_24;
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
pp_34(D)->max_processes = n_24;
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:176:27: warning: use location
  176 |         pp->max_processes = n;
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (n_24 > i_25)
bb index := 12
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (n_24 > i_25)
bb index := 12
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (n_24 > i_25)
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:195:23: warning: use location
  195 |         for (i = 0; i < n; i++) {
      |                       ^
if (n_24 > i_25)

 ================== find cond branch ================= 
./benchmarks/git/use_after_free_2/git_uaf_2.c:195:23: warning: use location
Cond in fucntion pp_init basic block 12
 ================== possible direct basic block ================= 
from pp_init basic block 11
 ================== possible direct basic block ================= 
from pp_init basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_3 = (long unsigned int) n_24;
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:19: warning: use location
  192 |         pp->pfd = xcalloc(n, sizeof(*pp->pfd));
      |                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
bb index := 4
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
bb index := 4
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
bb index := 4
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
bb index := 4
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:178:9: warning: use location
  178 |         trace_printf("run_processes_parallel: preparing to run up to %d tasks", n);
      |         ^
this stmt is child function---trace_printf-----

 ================== trace ================== 
trace fucntion name:trace_printf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64eed46ee8
    type <pointer_type 0x7f64ef1f8000
        type <void_type 0x7f64ef1f1f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f64ef1f8000>>
        public unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f64eed05498>>
   
    def_stmt _2 = calloc (_1, 120);
    version:2
    ptr-info 0x7f64eed5c978>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f64eed46f78
    type <pointer_type 0x7f64ef1f8000
        type <void_type 0x7f64ef1f1f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f64ef1f8000>>
        public unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f64eed05498>>
   
    def_stmt _4 = calloc (_3, 8);
    version:4
    ptr-info 0x7f64eed5c990>
# .MEM_74 = VDEF <.MEM_73>
_4 = calloc (_3, 8);

 ================== trace ptable================== 
trace fucntion name:calloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---calloc-----
this Reserved word function ------calloc-----
 
 Start check Pointer Collect  

======================================================================
_4 = calloc (_3, 8);
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:19: warning: use location
  192 |         pp->pfd = xcalloc(n, sizeof(*pp->pfd));
      |                   ^
this stmt is child function---calloc-----

 ================== trace ================== 
pp_34(D)->pfd = _4;
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:17: warning: use location
  192 |         pp->pfd = xcalloc(n, sizeof(*pp->pfd));
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_80>
_20 = pp_34(D)->pfd;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_80>
_20 = pp_34(D)->pfd;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = pp_34(D)->pfd;
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:19: warning: use location
  199 |                 pp->pfd[i].fd = -1;
      |                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_79>
_16 = pp_34(D)->pfd;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_79>
_16 = pp_34(D)->pfd;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = pp_34(D)->pfd;
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:19: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = _16 + _18;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = _16 + _18;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = _16 + _18;
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:24: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_80 = VDEF <.MEM_79>
_19->events = 17;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_80 = VDEF <.MEM_79>
_19->events = 17;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19->events = 17;
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:35: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_78>
_11 = pp_34(D)->children;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_78>
_11 = pp_34(D)->children;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = pp_34(D)->children;
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:39: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _11 + _13;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _11 + _13;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = _11 + _13;
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:49: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = &_14->process;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = &_14->process;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = &_14->process;
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_78>
child_process_init (_15);
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_78>
child_process_init (_15);
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
child_process_init (_15);
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                 ^
this stmt is child function---child_process_init-----

 ================== trace ================== 
trace fucntion name:child_process_init 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_60>
_6 = pp_34(D)->children;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_60>
_6 = pp_34(D)->children;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = pp_34(D)->children;
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:32: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = _6 + _8;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = _6 + _8;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = _6 + _8;
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:42: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = &_9->err;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = &_9->err;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = &_9->err;
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_60>
strbuf_init (_10, 0);
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_60>
strbuf_init (_10, 0);
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strbuf_init (_10, 0);
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                 ^
this stmt is child function---strbuf_init-----

 ================== trace ================== 
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 
_5 = &pp_34(D)->buffered_output;
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: use location
  193 |         strbuf_init(&pp->buffered_output, 0);
      |         ^
strbuf_init (_5, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: use location
this stmt is child function---strbuf_init-----

 ================== trace ================== 
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 
pp_34(D)->children = _2;
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:22: warning: use location
  191 |         pp->children = xcalloc(n, sizeof(*pp->children));
      |                      ^
pp_34(D)->children = _2;
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:22: warning: use location
pp_34(D)->shutdown = 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:190:22: warning: use location
  190 |         pp->shutdown = 0;
      |                      ^
pp_34(D)->output_owner = 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:189:26: warning: use location
  189 |         pp->output_owner = 0;
      |                          ^
pp_34(D)->nr_processes = 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:188:26: warning: use location
  188 |         pp->nr_processes = 0;
      |                          ^
pp_34(D)->task_finished = _27;
./benchmarks/git/use_after_free_2/git_uaf_2.c:186:27: warning: use location
  186 |         pp->task_finished = task_finished ? task_finished : default_task_finished;
      |                           ^
pp_34(D)->task_finished = _27;
./benchmarks/git/use_after_free_2/git_uaf_2.c:186:27: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
pp_34(D)->start_failure = _26;
bb index := 8
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
pp_34(D)->start_failure = _26;
bb index := 8
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
pp_34(D)->start_failure = _26;
bb index := 8
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 13

======================================================================
pp_34(D)->start_failure = _26;
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:185:27: warning: use location
  185 |         pp->start_failure = start_failure ? start_failure : default_start_failure;
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
pp_34(D)->start_failure = _26;
bb index := 8
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
pp_34(D)->start_failure = _26;
bb index := 8
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
pp_34(D)->start_failure = _26;
bb index := 8
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 13

======================================================================
pp_34(D)->start_failure = _26;
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:185:27: warning: use location
  185 |         pp->start_failure = start_failure ? start_failure : default_start_failure;
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
pp_34(D)->get_next_task = get_next_task_39(D);
bb index := 6
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
pp_34(D)->get_next_task = get_next_task_39(D);
bb index := 6
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
pp_34(D)->get_next_task = get_next_task_39(D);
bb index := 6
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 13

======================================================================
pp_34(D)->get_next_task = get_next_task_39(D);
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:183:27: warning: use location
  183 |         pp->get_next_task = get_next_task;
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
pp_34(D)->get_next_task = get_next_task_39(D);
bb index := 6
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
pp_34(D)->get_next_task = get_next_task_39(D);
bb index := 6
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
pp_34(D)->get_next_task = get_next_task_39(D);
bb index := 6
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 13

======================================================================
pp_34(D)->get_next_task = get_next_task_39(D);
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:183:27: warning: use location
  183 |         pp->get_next_task = get_next_task;
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (get_next_task_39(D) == 0B)
bb index := 4
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (get_next_task_39(D) == 0B)
bb index := 4
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (get_next_task_39(D) == 0B)
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (get_next_task_39(D) == 0B)
bb index := 4
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (get_next_task_39(D) == 0B)
bb index := 4
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (get_next_task_39(D) == 0B)
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
if (get_next_task_39(D) == 0B)
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:181:12: warning: use location
  181 |         if (!get_next_task)
      |            ^
if (get_next_task_39(D) == 0B)

 ================== find cond branch ================= 
./benchmarks/git/use_after_free_2/git_uaf_2.c:181:12: warning: use location
Cond in fucntion pp_init basic block 4
 ================== possible direct basic block ================= 
from pp_init basic block 5
 ================== possible direct basic block ================= 
from pp_init basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
pp_34(D)->data = data_37(D);
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:180:18: warning: use location
  180 |         pp->data = data;
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
pp_34(D)->data = data_37(D);
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:180:18: warning: use location
  180 |         pp->data = data;
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_59>
pp_34(D)->max_processes = n_24;
bb index := 4
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_59>
pp_34(D)->max_processes = n_24;
bb index := 4
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_59>
pp_34(D)->max_processes = n_24;
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_59>
pp_34(D)->max_processes = n_24;
bb index := 4
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_59>
pp_34(D)->max_processes = n_24;
bb index := 4
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_59>
pp_34(D)->max_processes = n_24;
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
pp_34(D)->max_processes = n_24;
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:176:27: warning: use location
  176 |         pp->max_processes = n;
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (n_24 > i_25)
bb index := 12
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (n_24 > i_25)
bb index := 12
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (n_24 > i_25)
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:195:23: warning: use location
  195 |         for (i = 0; i < n; i++) {
      |                       ^
if (n_24 > i_25)

 ================== find cond branch ================= 
./benchmarks/git/use_after_free_2/git_uaf_2.c:195:23: warning: use location
Cond in fucntion pp_init basic block 12
 ================== possible direct basic block ================= 
from pp_init basic block 11
 ================== possible direct basic block ================= 
from pp_init basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_1 = (long unsigned int) n_24;
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:24: warning: use location
  191 |         pp->children = xcalloc(n, sizeof(*pp->children));
      |                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
bb index := 4
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
bb index := 4
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
bb index := 4
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
bb index := 4
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:178:9: warning: use location
  178 |         trace_printf("run_processes_parallel: preparing to run up to %d tasks", n);
      |         ^
this stmt is child function---trace_printf-----

 ================== trace ================== 
trace fucntion name:trace_printf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64eed46f78
    type <pointer_type 0x7f64ef1f8000
        type <void_type 0x7f64ef1f1f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f64ef1f8000>>
        public unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f64eed05498>>
   
    def_stmt _4 = calloc (_3, 8);
    version:4
    ptr-info 0x7f64eed5c990>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f64eed506c0
    type <integer_type 0x7f64ef1f15e8 int public SI
        size <integer_cst 0x7f64ef1dcdf8 constant 32>
        unit-size <integer_cst 0x7f64ef1dce10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64ef1f15e8 precision:32 min <integer_cst 0x7f64ef1dcdb0 -2147483648> max <integer_cst 0x7f64ef1dcdc8 2147483647>
        pointer_to_this <pointer_type 0x7f64ef1f89d8>>
    var <parm_decl 0x7f64eed4e000 n>
    def_stmt n_33 = online_cpus ();
    version:33>
# .MEM_62 = VDEF <.MEM_61(D)>
n_33 = online_cpus ();

 ================== trace ptable================== 
trace fucntion name:online_cpus 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---online_cpus-----
this other function ------online_cpus-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
n_24 = PHI <n_30(D)(2), n_33(3)>
bb index := 4
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
n_24 = PHI <n_30(D)(2), n_33(3)>
bb index := 4
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
n_24 = PHI <n_30(D)(2), n_33(3)>
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
n_24 = PHI <n_30(D)(2), n_33(3)>
bb index := 4
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
n_24 = PHI <n_30(D)(2), n_33(3)>
bb index := 4
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
n_24 = PHI <n_30(D)(2), n_33(3)>
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
n_24 = PHI <n_30(D)(2), n_33(3)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (n_24 > i_25)
bb index := 12
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (n_24 > i_25)
bb index := 12
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (n_24 > i_25)
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:195:23: warning: use location
  195 |         for (i = 0; i < n; i++) {
      |                       ^
if (n_24 > i_25)

 ================== find cond branch ================= 
./benchmarks/git/use_after_free_2/git_uaf_2.c:195:23: warning: use location
Cond in fucntion pp_init basic block 12
 ================== possible direct basic block ================= 
from pp_init basic block 11
 ================== possible direct basic block ================= 
from pp_init basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_3 = (long unsigned int) n_24;
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:19: warning: use location
  192 |         pp->pfd = xcalloc(n, sizeof(*pp->pfd));
      |                   ^
_4 = calloc (_3, 8);
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:19: warning: use location
this stmt is child function---calloc-----

 ================== trace ================== 
pp_34(D)->pfd = _4;
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:17: warning: use location
  192 |         pp->pfd = xcalloc(n, sizeof(*pp->pfd));
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_80>
_20 = pp_34(D)->pfd;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_80>
_20 = pp_34(D)->pfd;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = pp_34(D)->pfd;
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:19: warning: use location
  199 |                 pp->pfd[i].fd = -1;
      |                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_79>
_16 = pp_34(D)->pfd;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_79>
_16 = pp_34(D)->pfd;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = pp_34(D)->pfd;
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:19: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = _16 + _18;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = _16 + _18;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = _16 + _18;
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:24: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_80 = VDEF <.MEM_79>
_19->events = 17;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_80 = VDEF <.MEM_79>
_19->events = 17;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19->events = 17;
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:35: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_78>
_11 = pp_34(D)->children;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_78>
_11 = pp_34(D)->children;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = pp_34(D)->children;
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:39: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _11 + _13;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _11 + _13;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = _11 + _13;
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:49: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = &_14->process;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = &_14->process;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = &_14->process;
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_78>
child_process_init (_15);
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_78>
child_process_init (_15);
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
child_process_init (_15);
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                 ^
this stmt is child function---child_process_init-----

 ================== trace ================== 
trace fucntion name:child_process_init 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_60>
_6 = pp_34(D)->children;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_60>
_6 = pp_34(D)->children;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = pp_34(D)->children;
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:32: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = _6 + _8;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = _6 + _8;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = _6 + _8;
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:42: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = &_9->err;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = &_9->err;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = &_9->err;
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_60>
strbuf_init (_10, 0);
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_60>
strbuf_init (_10, 0);
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strbuf_init (_10, 0);
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                 ^
this stmt is child function---strbuf_init-----

 ================== trace ================== 
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 
_5 = &pp_34(D)->buffered_output;
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: use location
  193 |         strbuf_init(&pp->buffered_output, 0);
      |         ^
strbuf_init (_5, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: use location
this stmt is child function---strbuf_init-----

 ================== trace ================== 
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 
pp_34(D)->children = _2;
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:22: warning: use location
  191 |         pp->children = xcalloc(n, sizeof(*pp->children));
      |                      ^
pp_34(D)->children = _2;
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:22: warning: use location
pp_34(D)->shutdown = 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:190:22: warning: use location
  190 |         pp->shutdown = 0;
      |                      ^
pp_34(D)->output_owner = 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:189:26: warning: use location
  189 |         pp->output_owner = 0;
      |                          ^
pp_34(D)->nr_processes = 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:188:26: warning: use location
  188 |         pp->nr_processes = 0;
      |                          ^
pp_34(D)->task_finished = _27;
./benchmarks/git/use_after_free_2/git_uaf_2.c:186:27: warning: use location
  186 |         pp->task_finished = task_finished ? task_finished : default_task_finished;
      |                           ^
pp_34(D)->task_finished = _27;
./benchmarks/git/use_after_free_2/git_uaf_2.c:186:27: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
pp_34(D)->start_failure = _26;
bb index := 8
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
pp_34(D)->start_failure = _26;
bb index := 8
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
pp_34(D)->start_failure = _26;
bb index := 8
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 13

======================================================================
pp_34(D)->start_failure = _26;
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:185:27: warning: use location
  185 |         pp->start_failure = start_failure ? start_failure : default_start_failure;
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
pp_34(D)->start_failure = _26;
bb index := 8
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
pp_34(D)->start_failure = _26;
bb index := 8
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
pp_34(D)->start_failure = _26;
bb index := 8
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 13

======================================================================
pp_34(D)->start_failure = _26;
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:185:27: warning: use location
  185 |         pp->start_failure = start_failure ? start_failure : default_start_failure;
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
pp_34(D)->get_next_task = get_next_task_39(D);
bb index := 6
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
pp_34(D)->get_next_task = get_next_task_39(D);
bb index := 6
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
pp_34(D)->get_next_task = get_next_task_39(D);
bb index := 6
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 13

======================================================================
pp_34(D)->get_next_task = get_next_task_39(D);
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:183:27: warning: use location
  183 |         pp->get_next_task = get_next_task;
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
pp_34(D)->get_next_task = get_next_task_39(D);
bb index := 6
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
pp_34(D)->get_next_task = get_next_task_39(D);
bb index := 6
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
pp_34(D)->get_next_task = get_next_task_39(D);
bb index := 6
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 13

======================================================================
pp_34(D)->get_next_task = get_next_task_39(D);
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:183:27: warning: use location
  183 |         pp->get_next_task = get_next_task;
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (get_next_task_39(D) == 0B)
bb index := 4
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (get_next_task_39(D) == 0B)
bb index := 4
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (get_next_task_39(D) == 0B)
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (get_next_task_39(D) == 0B)
bb index := 4
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (get_next_task_39(D) == 0B)
bb index := 4
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (get_next_task_39(D) == 0B)
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
if (get_next_task_39(D) == 0B)
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:181:12: warning: use location
  181 |         if (!get_next_task)
      |            ^
if (get_next_task_39(D) == 0B)

 ================== find cond branch ================= 
./benchmarks/git/use_after_free_2/git_uaf_2.c:181:12: warning: use location
Cond in fucntion pp_init basic block 4
 ================== possible direct basic block ================= 
from pp_init basic block 5
 ================== possible direct basic block ================= 
from pp_init basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
pp_34(D)->data = data_37(D);
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:180:18: warning: use location
  180 |         pp->data = data;
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
pp_34(D)->data = data_37(D);
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:180:18: warning: use location
  180 |         pp->data = data;
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_59>
pp_34(D)->max_processes = n_24;
bb index := 4
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_59>
pp_34(D)->max_processes = n_24;
bb index := 4
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_59>
pp_34(D)->max_processes = n_24;
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_59>
pp_34(D)->max_processes = n_24;
bb index := 4
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_59>
pp_34(D)->max_processes = n_24;
bb index := 4
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_59>
pp_34(D)->max_processes = n_24;
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
pp_34(D)->max_processes = n_24;
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:176:27: warning: use location
  176 |         pp->max_processes = n;
      |                           ^
_1 = (long unsigned int) n_24;
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:24: warning: use location
  191 |         pp->children = xcalloc(n, sizeof(*pp->children));
      |                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
bb index := 4
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
bb index := 4
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
bb index := 4
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
bb index := 4
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:178:9: warning: use location
  178 |         trace_printf("run_processes_parallel: preparing to run up to %d tasks", n);
      |         ^
this stmt is child function---trace_printf-----

 ================== trace ================== 
trace fucntion name:trace_printf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_62 = VDEF <.MEM_61(D)>
n_33 = online_cpus ();
bb index := 3
# VUSE <.MEM_52>
return _24;
In function ‘pp_init’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_52>
return _24;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_62 = VDEF <.MEM_61(D)>
n_33 = online_cpus ();
bb index := 3
# VUSE <.MEM_13>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _6;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_62 = VDEF <.MEM_61(D)>
n_33 = online_cpus ();
bb index := 3
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_62 = VDEF <.MEM_61(D)>
n_33 = online_cpus ();
bb index := 3
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_62 = VDEF <.MEM_61(D)>
n_33 = online_cpus ();
bb index := 3
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_62 = VDEF <.MEM_61(D)>
n_33 = online_cpus ();
bb index := 3
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_62 = VDEF <.MEM_61(D)>
n_33 = online_cpus ();
bb index := 3
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_62 = VDEF <.MEM_61(D)>
n_33 = online_cpus ();
bb index := 3
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_62 = VDEF <.MEM_61(D)>
n_33 = online_cpus ();
bb index := 3
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================
n_33 = online_cpus ();
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:174:21: warning: use location
  174 |                 n = online_cpus();
      |                     ^
this stmt is child function---online_cpus-----

 ================== trace ================== 
trace fucntion name:online_cpus 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64eed506c0
    type <integer_type 0x7f64ef1f15e8 int public SI
        size <integer_cst 0x7f64ef1dcdf8 constant 32>
        unit-size <integer_cst 0x7f64ef1dce10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64ef1f15e8 precision:32 min <integer_cst 0x7f64ef1dcdb0 -2147483648> max <integer_cst 0x7f64ef1dcdc8 2147483647>
        pointer_to_this <pointer_type 0x7f64ef1f89d8>>
    var <parm_decl 0x7f64eed4e000 n>
    def_stmt n_33 = online_cpus ();
    version:33>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f64eed2cdc0
    type <pointer_type 0x7f64eed16498
        type <array_type 0x7f64eed163f0 type <integer_type 0x7f64eed05930 char>
            BLK
            size <integer_cst 0x7f64eecfcc00 constant 448>
            unit-size <integer_cst 0x7f64eecfcc48 constant 56>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f64eed16348>
            pointer_to_this <pointer_type 0x7f64eed16498>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f64eed4b280 type <array_type 0x7f64eed163f0>
        readonly constant static "run_processes_parallel: preparing to run up to %d tasks\000">
    ./benchmarks/git/use_after_free_2/git_uaf_2.c:178:15 start: ./benchmarks/git/use_after_free_2/git_uaf_2.c:178:15 finish: ./benchmarks/git/use_after_free_2/git_uaf_2.c:178:15>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f64eed2ce00
    type <pointer_type 0x7f64eed16738
        type <array_type 0x7f64eed16690 type <integer_type 0x7f64eed05930 char>
            BLK
            size <integer_cst 0x7f64eecfcc60 constant 416>
            unit-size <integer_cst 0x7f64eecfcc90 constant 52>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f64eed165e8>
            pointer_to_this <pointer_type 0x7f64eed16738>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f64eed4b370 type <array_type 0x7f64eed16690>
        readonly constant static "BUG: you need to specify a get_next_task function%s\000">
    ./benchmarks/git/use_after_free_2/git_uaf_2.c:182:3 start: ./benchmarks/git/use_after_free_2/git_uaf_2.c:182:3 finish: ./benchmarks/git/use_after_free_2/git_uaf_2.c:182:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f64eed46ea0
    type <integer_type 0x7f64ef1f17e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64ef1f1738 precision:64 min <integer_cst 0x7f64ef1dce88 0> max <integer_cst 0x7f64ef1dd500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f64ef1fd7e0>>
   
    def_stmt _1 = (long unsigned int) n_24;
    version:1>
_1 = (long unsigned int) n_24;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_2 = calloc (_1, 120);
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:24: warning: use location
  191 |         pp->children = xcalloc(n, sizeof(*pp->children));
      |                        ^
this stmt is child function---calloc-----

 ================== trace ================== 
pp_34(D)->children = _2;
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:22: warning: use location
  191 |         pp->children = xcalloc(n, sizeof(*pp->children));
      |                      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_80>
_20 = pp_34(D)->pfd;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_80>
_20 = pp_34(D)->pfd;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = pp_34(D)->pfd;
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:19: warning: use location
  199 |                 pp->pfd[i].fd = -1;
      |                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_79>
_16 = pp_34(D)->pfd;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_79>
_16 = pp_34(D)->pfd;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = pp_34(D)->pfd;
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:19: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = _16 + _18;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = _16 + _18;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = _16 + _18;
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:24: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_80 = VDEF <.MEM_79>
_19->events = 17;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_80 = VDEF <.MEM_79>
_19->events = 17;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19->events = 17;
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:35: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_78>
_11 = pp_34(D)->children;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_78>
_11 = pp_34(D)->children;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = pp_34(D)->children;
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:39: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _11 + _13;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _11 + _13;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = _11 + _13;
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:49: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = &_14->process;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = &_14->process;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = &_14->process;
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_78>
child_process_init (_15);
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_78>
child_process_init (_15);
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
child_process_init (_15);
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                 ^
this stmt is child function---child_process_init-----

 ================== trace ================== 
trace fucntion name:child_process_init 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_60>
_6 = pp_34(D)->children;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_60>
_6 = pp_34(D)->children;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = pp_34(D)->children;
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:32: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = _6 + _8;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = _6 + _8;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = _6 + _8;
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:42: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = &_9->err;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = &_9->err;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = &_9->err;
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_60>
strbuf_init (_10, 0);
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_60>
strbuf_init (_10, 0);
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strbuf_init (_10, 0);
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                 ^
this stmt is child function---strbuf_init-----

 ================== trace ================== 
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 
_5 = &pp_34(D)->buffered_output;
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: use location
  193 |         strbuf_init(&pp->buffered_output, 0);
      |         ^
strbuf_init (_5, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: use location
this stmt is child function---strbuf_init-----

 ================== trace ================== 
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 
pp_34(D)->pfd = _4;
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:17: warning: use location
  192 |         pp->pfd = xcalloc(n, sizeof(*pp->pfd));
      |                 ^
pp_34(D)->pfd = _4;
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:17: warning: use location
pp_34(D)->shutdown = 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:190:22: warning: use location
  190 |         pp->shutdown = 0;
      |                      ^
pp_34(D)->output_owner = 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:189:26: warning: use location
  189 |         pp->output_owner = 0;
      |                          ^
pp_34(D)->nr_processes = 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:188:26: warning: use location
  188 |         pp->nr_processes = 0;
      |                          ^
pp_34(D)->task_finished = _27;
./benchmarks/git/use_after_free_2/git_uaf_2.c:186:27: warning: use location
  186 |         pp->task_finished = task_finished ? task_finished : default_task_finished;
      |                           ^
pp_34(D)->task_finished = _27;
./benchmarks/git/use_after_free_2/git_uaf_2.c:186:27: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
pp_34(D)->start_failure = _26;
bb index := 8
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
pp_34(D)->start_failure = _26;
bb index := 8
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
pp_34(D)->start_failure = _26;
bb index := 8
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 13

======================================================================
pp_34(D)->start_failure = _26;
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:185:27: warning: use location
  185 |         pp->start_failure = start_failure ? start_failure : default_start_failure;
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
pp_34(D)->start_failure = _26;
bb index := 8
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
pp_34(D)->start_failure = _26;
bb index := 8
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
pp_34(D)->start_failure = _26;
bb index := 8
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 13

======================================================================
pp_34(D)->start_failure = _26;
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:185:27: warning: use location
  185 |         pp->start_failure = start_failure ? start_failure : default_start_failure;
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
pp_34(D)->get_next_task = get_next_task_39(D);
bb index := 6
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
pp_34(D)->get_next_task = get_next_task_39(D);
bb index := 6
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
pp_34(D)->get_next_task = get_next_task_39(D);
bb index := 6
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 13

======================================================================
pp_34(D)->get_next_task = get_next_task_39(D);
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:183:27: warning: use location
  183 |         pp->get_next_task = get_next_task;
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
pp_34(D)->get_next_task = get_next_task_39(D);
bb index := 6
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
pp_34(D)->get_next_task = get_next_task_39(D);
bb index := 6
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
pp_34(D)->get_next_task = get_next_task_39(D);
bb index := 6
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 13

======================================================================
pp_34(D)->get_next_task = get_next_task_39(D);
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:183:27: warning: use location
  183 |         pp->get_next_task = get_next_task;
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (get_next_task_39(D) == 0B)
bb index := 4
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (get_next_task_39(D) == 0B)
bb index := 4
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (get_next_task_39(D) == 0B)
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (get_next_task_39(D) == 0B)
bb index := 4
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (get_next_task_39(D) == 0B)
bb index := 4
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (get_next_task_39(D) == 0B)
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
if (get_next_task_39(D) == 0B)
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:181:12: warning: use location
  181 |         if (!get_next_task)
      |            ^
if (get_next_task_39(D) == 0B)

 ================== find cond branch ================= 
./benchmarks/git/use_after_free_2/git_uaf_2.c:181:12: warning: use location
Cond in fucntion pp_init basic block 4
 ================== possible direct basic block ================= 
from pp_init basic block 5
 ================== possible direct basic block ================= 
from pp_init basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
pp_34(D)->data = data_37(D);
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:180:18: warning: use location
  180 |         pp->data = data;
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
pp_34(D)->data = data_37(D);
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:180:18: warning: use location
  180 |         pp->data = data;
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_59>
pp_34(D)->max_processes = n_24;
bb index := 4
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_59>
pp_34(D)->max_processes = n_24;
bb index := 4
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_59>
pp_34(D)->max_processes = n_24;
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_59>
pp_34(D)->max_processes = n_24;
bb index := 4
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_59>
pp_34(D)->max_processes = n_24;
bb index := 4
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_59>
pp_34(D)->max_processes = n_24;
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
pp_34(D)->max_processes = n_24;
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:176:27: warning: use location
  176 |         pp->max_processes = n;
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (n_24 > i_25)
bb index := 12
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (n_24 > i_25)
bb index := 12
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (n_24 > i_25)
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:195:23: warning: use location
  195 |         for (i = 0; i < n; i++) {
      |                       ^
if (n_24 > i_25)

 ================== find cond branch ================= 
./benchmarks/git/use_after_free_2/git_uaf_2.c:195:23: warning: use location
Cond in fucntion pp_init basic block 12
 ================== possible direct basic block ================= 
from pp_init basic block 11
 ================== possible direct basic block ================= 
from pp_init basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_3 = (long unsigned int) n_24;
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:19: warning: use location
  192 |         pp->pfd = xcalloc(n, sizeof(*pp->pfd));
      |                   ^
_1 = (long unsigned int) n_24;
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:24: warning: use location
  191 |         pp->children = xcalloc(n, sizeof(*pp->children));
      |                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
bb index := 4
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
bb index := 4
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
bb index := 4
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
bb index := 4
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:178:9: warning: use location
  178 |         trace_printf("run_processes_parallel: preparing to run up to %d tasks", n);
      |         ^
this stmt is child function---trace_printf-----

 ================== trace ================== 
trace fucntion name:trace_printf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64eed46ea0
    type <integer_type 0x7f64ef1f17e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64ef1f1738 precision:64 min <integer_cst 0x7f64ef1dce88 0> max <integer_cst 0x7f64ef1dd500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f64ef1fd7e0>>
   
    def_stmt _1 = (long unsigned int) n_24;
    version:1>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f64eed46f30
    type <integer_type 0x7f64ef1f17e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64ef1f1738 precision:64 min <integer_cst 0x7f64ef1dce88 0> max <integer_cst 0x7f64ef1dd500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f64ef1fd7e0>>
   
    def_stmt _3 = (long unsigned int) n_24;
    version:3>
_3 = (long unsigned int) n_24;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_4 = calloc (_3, 8);
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:19: warning: use location
  192 |         pp->pfd = xcalloc(n, sizeof(*pp->pfd));
      |                   ^
this stmt is child function---calloc-----

 ================== trace ================== 
pp_34(D)->pfd = _4;
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:17: warning: use location
  192 |         pp->pfd = xcalloc(n, sizeof(*pp->pfd));
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_80>
_20 = pp_34(D)->pfd;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_80>
_20 = pp_34(D)->pfd;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = pp_34(D)->pfd;
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:19: warning: use location
  199 |                 pp->pfd[i].fd = -1;
      |                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_79>
_16 = pp_34(D)->pfd;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_79>
_16 = pp_34(D)->pfd;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = pp_34(D)->pfd;
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:19: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = _16 + _18;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = _16 + _18;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = _16 + _18;
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:24: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_80 = VDEF <.MEM_79>
_19->events = 17;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_80 = VDEF <.MEM_79>
_19->events = 17;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19->events = 17;
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:35: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_78>
_11 = pp_34(D)->children;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_78>
_11 = pp_34(D)->children;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = pp_34(D)->children;
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:39: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _11 + _13;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _11 + _13;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = _11 + _13;
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:49: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = &_14->process;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = &_14->process;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = &_14->process;
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_78>
child_process_init (_15);
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_78>
child_process_init (_15);
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
child_process_init (_15);
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                 ^
this stmt is child function---child_process_init-----

 ================== trace ================== 
trace fucntion name:child_process_init 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_60>
_6 = pp_34(D)->children;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_60>
_6 = pp_34(D)->children;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = pp_34(D)->children;
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:32: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = _6 + _8;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = _6 + _8;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = _6 + _8;
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:42: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = &_9->err;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = &_9->err;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = &_9->err;
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_60>
strbuf_init (_10, 0);
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_60>
strbuf_init (_10, 0);
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strbuf_init (_10, 0);
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                 ^
this stmt is child function---strbuf_init-----

 ================== trace ================== 
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 
_5 = &pp_34(D)->buffered_output;
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: use location
  193 |         strbuf_init(&pp->buffered_output, 0);
      |         ^
strbuf_init (_5, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: use location
this stmt is child function---strbuf_init-----

 ================== trace ================== 
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 
pp_34(D)->children = _2;
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:22: warning: use location
  191 |         pp->children = xcalloc(n, sizeof(*pp->children));
      |                      ^
pp_34(D)->children = _2;
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:22: warning: use location
pp_34(D)->shutdown = 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:190:22: warning: use location
  190 |         pp->shutdown = 0;
      |                      ^
pp_34(D)->output_owner = 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:189:26: warning: use location
  189 |         pp->output_owner = 0;
      |                          ^
pp_34(D)->nr_processes = 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:188:26: warning: use location
  188 |         pp->nr_processes = 0;
      |                          ^
pp_34(D)->task_finished = _27;
./benchmarks/git/use_after_free_2/git_uaf_2.c:186:27: warning: use location
  186 |         pp->task_finished = task_finished ? task_finished : default_task_finished;
      |                           ^
pp_34(D)->task_finished = _27;
./benchmarks/git/use_after_free_2/git_uaf_2.c:186:27: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
pp_34(D)->start_failure = _26;
bb index := 8
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
pp_34(D)->start_failure = _26;
bb index := 8
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
pp_34(D)->start_failure = _26;
bb index := 8
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 13

======================================================================
pp_34(D)->start_failure = _26;
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:185:27: warning: use location
  185 |         pp->start_failure = start_failure ? start_failure : default_start_failure;
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
pp_34(D)->start_failure = _26;
bb index := 8
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
pp_34(D)->start_failure = _26;
bb index := 8
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
pp_34(D)->start_failure = _26;
bb index := 8
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 13

======================================================================
pp_34(D)->start_failure = _26;
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:185:27: warning: use location
  185 |         pp->start_failure = start_failure ? start_failure : default_start_failure;
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
pp_34(D)->get_next_task = get_next_task_39(D);
bb index := 6
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
pp_34(D)->get_next_task = get_next_task_39(D);
bb index := 6
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
pp_34(D)->get_next_task = get_next_task_39(D);
bb index := 6
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 13

======================================================================
pp_34(D)->get_next_task = get_next_task_39(D);
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:183:27: warning: use location
  183 |         pp->get_next_task = get_next_task;
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
pp_34(D)->get_next_task = get_next_task_39(D);
bb index := 6
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
pp_34(D)->get_next_task = get_next_task_39(D);
bb index := 6
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
pp_34(D)->get_next_task = get_next_task_39(D);
bb index := 6
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 13

======================================================================
pp_34(D)->get_next_task = get_next_task_39(D);
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:183:27: warning: use location
  183 |         pp->get_next_task = get_next_task;
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (get_next_task_39(D) == 0B)
bb index := 4
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (get_next_task_39(D) == 0B)
bb index := 4
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (get_next_task_39(D) == 0B)
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (get_next_task_39(D) == 0B)
bb index := 4
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (get_next_task_39(D) == 0B)
bb index := 4
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (get_next_task_39(D) == 0B)
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
if (get_next_task_39(D) == 0B)
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:181:12: warning: use location
  181 |         if (!get_next_task)
      |            ^
if (get_next_task_39(D) == 0B)

 ================== find cond branch ================= 
./benchmarks/git/use_after_free_2/git_uaf_2.c:181:12: warning: use location
Cond in fucntion pp_init basic block 4
 ================== possible direct basic block ================= 
from pp_init basic block 5
 ================== possible direct basic block ================= 
from pp_init basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
pp_34(D)->data = data_37(D);
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:180:18: warning: use location
  180 |         pp->data = data;
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
pp_34(D)->data = data_37(D);
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:180:18: warning: use location
  180 |         pp->data = data;
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_59>
pp_34(D)->max_processes = n_24;
bb index := 4
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_59>
pp_34(D)->max_processes = n_24;
bb index := 4
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_59>
pp_34(D)->max_processes = n_24;
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_59>
pp_34(D)->max_processes = n_24;
bb index := 4
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_59>
pp_34(D)->max_processes = n_24;
bb index := 4
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_59>
pp_34(D)->max_processes = n_24;
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
pp_34(D)->max_processes = n_24;
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:176:27: warning: use location
  176 |         pp->max_processes = n;
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (n_24 > i_25)
bb index := 12
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (n_24 > i_25)
bb index := 12
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (n_24 > i_25)
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:195:23: warning: use location
  195 |         for (i = 0; i < n; i++) {
      |                       ^
if (n_24 > i_25)

 ================== find cond branch ================= 
./benchmarks/git/use_after_free_2/git_uaf_2.c:195:23: warning: use location
Cond in fucntion pp_init basic block 12
 ================== possible direct basic block ================= 
from pp_init basic block 11
 ================== possible direct basic block ================= 
from pp_init basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_3 = (long unsigned int) n_24;
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:19: warning: use location
  192 |         pp->pfd = xcalloc(n, sizeof(*pp->pfd));
      |                   ^
_1 = (long unsigned int) n_24;
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:24: warning: use location
  191 |         pp->children = xcalloc(n, sizeof(*pp->children));
      |                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
bb index := 4
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
bb index := 4
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
bb index := 4
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
bb index := 4
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:178:9: warning: use location
  178 |         trace_printf("run_processes_parallel: preparing to run up to %d tasks", n);
      |         ^
this stmt is child function---trace_printf-----

 ================== trace ================== 
trace fucntion name:trace_printf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64eed46f30
    type <integer_type 0x7f64ef1f17e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64ef1f1738 precision:64 min <integer_cst 0x7f64ef1dce88 0> max <integer_cst 0x7f64ef1dd500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f64ef1fd7e0>>
   
    def_stmt _3 = (long unsigned int) n_24;
    version:3>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f64eed50000
    type <pointer_type 0x7f64eed13888
        type <record_type 0x7f64eed0c150 strbuf BLK
            size <integer_cst 0x7f64ef1fa078 constant 192>
            unit-size <integer_cst 0x7f64ef1fa048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed0c150 fields <field_decl 0x7f64eed08260 alloc> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed13888>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = &pp_34(D)->buffered_output;
    version:5
    ptr-info 0x7f64eed5c9a8>
_5 = &pp_34(D)->buffered_output;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_76 = VDEF <.MEM_75>
strbuf_init (_5, 0);
strbuf_init (_5, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: use location
  193 |         strbuf_init(&pp->buffered_output, 0);
      |         ^
this stmt is child function---strbuf_init-----

 ================== trace ================== 
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_76 = VDEF <.MEM_75>
strbuf_init (_5, 0);
strbuf_init (_5, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: use location
this stmt is child function---strbuf_init-----

 ================== trace ================== 
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64eed50000
    type <pointer_type 0x7f64eed13888
        type <record_type 0x7f64eed0c150 strbuf BLK
            size <integer_cst 0x7f64ef1fa078 constant 192>
            unit-size <integer_cst 0x7f64ef1fa048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed0c150 fields <field_decl 0x7f64eed08260 alloc> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed13888>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = &pp_34(D)->buffered_output;
    version:5
    ptr-info 0x7f64eed5c9a8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f64eed50168
    type <pointer_type 0x7f64eed13888
        type <record_type 0x7f64eed0c150 strbuf BLK
            size <integer_cst 0x7f64ef1fa078 constant 192>
            unit-size <integer_cst 0x7f64ef1fa048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed0c150 fields <field_decl 0x7f64eed08260 alloc> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed13888>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _10 = &_9->err;
    version:10
    ptr-info 0x7f64eed5c9f0>
_10 = &_9->err;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_60>
strbuf_init (_10, 0);
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_60>
strbuf_init (_10, 0);
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_78 = VDEF <.MEM_60>
strbuf_init (_10, 0);
strbuf_init (_10, 0);
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                 ^
this stmt is child function---strbuf_init-----

 ================== trace ================== 
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_60>
strbuf_init (_10, 0);
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_60>
strbuf_init (_10, 0);
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_78 = VDEF <.MEM_60>
strbuf_init (_10, 0);
strbuf_init (_10, 0);
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                 ^
this stmt is child function---strbuf_init-----

 ================== trace ================== 
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64eed50168
    type <pointer_type 0x7f64eed13888
        type <record_type 0x7f64eed0c150 strbuf BLK
            size <integer_cst 0x7f64ef1fa078 constant 192>
            unit-size <integer_cst 0x7f64ef1fa048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed0c150 fields <field_decl 0x7f64eed08260 alloc> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed13888>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _10 = &_9->err;
    version:10
    ptr-info 0x7f64eed5c9f0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f64eed502d0
    type <pointer_type 0x7f64eed137e0
        type <record_type 0x7f64eed13738 child_process BLK
            size <integer_cst 0x7f64eecfc978 constant 640>
            unit-size <integer_cst 0x7f64eecfc948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed13738 fields <field_decl 0x7f64eed15850 argv> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed137e0>>
        public unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _15 = &_14->process;
    version:15
    ptr-info 0x7f64eed5ca38>
_15 = &_14->process;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_78>
child_process_init (_15);
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_78>
child_process_init (_15);
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_79 = VDEF <.MEM_78>
child_process_init (_15);
child_process_init (_15);
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                 ^
this stmt is child function---child_process_init-----

 ================== trace ================== 
trace fucntion name:child_process_init 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_78>
child_process_init (_15);
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_78>
child_process_init (_15);
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_79 = VDEF <.MEM_78>
child_process_init (_15);
child_process_init (_15);
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                 ^
this stmt is child function---child_process_init-----

 ================== trace ================== 
trace fucntion name:child_process_init 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64eed502d0
    type <pointer_type 0x7f64eed137e0
        type <record_type 0x7f64eed13738 child_process BLK
            size <integer_cst 0x7f64eecfc978 constant 640>
            unit-size <integer_cst 0x7f64eecfc948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed13738 fields <field_decl 0x7f64eed15850 argv> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed137e0>>
        public unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _15 = &_14->process;
    version:15
    ptr-info 0x7f64eed5ca38>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:pp_init========= [0m
[40;42m =======pre_check_funciton:run_processes_parallel========= [0m
[40;42m =======start_check_funciton:run_processes_parallel========= [0m

dot graph START

======================================================================
 <addr_expr 0x7f64eed2c340
    type <pointer_type 0x7f64eed0c5e8
        type <record_type 0x7f64eed0c540 parallel_processes BLK
            size <integer_cst 0x7f64ef2b10a8 constant 704>
            unit-size <integer_cst 0x7f64eecfc828 constant 88>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed0c540 fields <field_decl 0x7f64eed08980 data> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed0c5e8>>
        public unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f64eed16b28>>
   
    arg:0 <var_decl 0x7f64eed25bd0 pp type <record_type 0x7f64eed0c540 parallel_processes>
        addressable BLK ./benchmarks/git/use_after_free_2/git_uaf_2.c:342:28 size <integer_cst 0x7f64ef2b10a8 704> unit-size <integer_cst 0x7f64eecfc828 88>
        align:64 warn_if_not_align:0 context <function_decl 0x7f64eed11200 run_processes_parallel>>
    ./benchmarks/git/use_after_free_2/git_uaf_2.c:344:2 start: ./benchmarks/git/use_after_free_2/git_uaf_2.c:344:2 finish: ./benchmarks/git/use_after_free_2/git_uaf_2.c:344:2>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f64eed2c380
    type <pointer_type 0x7f64eed0c5e8
        type <record_type 0x7f64eed0c540 parallel_processes BLK
            size <integer_cst 0x7f64ef2b10a8 constant 704>
            unit-size <integer_cst 0x7f64eecfc828 constant 88>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed0c540 fields <field_decl 0x7f64eed08980 data> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed0c5e8>>
        public unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f64eed16b28>>
   
    arg:0 <var_decl 0x7f64eed25bd0 pp type <record_type 0x7f64eed0c540 parallel_processes>
        addressable BLK ./benchmarks/git/use_after_free_2/git_uaf_2.c:342:28 size <integer_cst 0x7f64ef2b10a8 704> unit-size <integer_cst 0x7f64eecfc828 88>
        align:64 warn_if_not_align:0 context <function_decl 0x7f64eed11200 run_processes_parallel>>
    ./benchmarks/git/use_after_free_2/git_uaf_2.c:350:11 start: ./benchmarks/git/use_after_free_2/git_uaf_2.c:350:11 finish: ./benchmarks/git/use_after_free_2/git_uaf_2.c:350:11>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f64eed2c3c0
    type <pointer_type 0x7f64eed0c5e8
        type <record_type 0x7f64eed0c540 parallel_processes BLK
            size <integer_cst 0x7f64ef2b10a8 constant 704>
            unit-size <integer_cst 0x7f64eecfc828 constant 88>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed0c540 fields <field_decl 0x7f64eed08980 data> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed0c5e8>>
        public unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f64eed16b28>>
   
    arg:0 <var_decl 0x7f64eed25bd0 pp type <record_type 0x7f64eed0c540 parallel_processes>
        addressable BLK ./benchmarks/git/use_after_free_2/git_uaf_2.c:342:28 size <integer_cst 0x7f64ef2b10a8 704> unit-size <integer_cst 0x7f64eecfc828 88>
        align:64 warn_if_not_align:0 context <function_decl 0x7f64eed11200 run_processes_parallel>>
    ./benchmarks/git/use_after_free_2/git_uaf_2.c:355:5 start: ./benchmarks/git/use_after_free_2/git_uaf_2.c:355:5 finish: ./benchmarks/git/use_after_free_2/git_uaf_2.c:355:5>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f64eed2c400
    type <pointer_type 0x7f64eed0c5e8
        type <record_type 0x7f64eed0c540 parallel_processes BLK
            size <integer_cst 0x7f64ef2b10a8 constant 704>
            unit-size <integer_cst 0x7f64eecfc828 constant 88>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed0c540 fields <field_decl 0x7f64eed08980 data> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed0c5e8>>
        public unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f64eed16b28>>
   
    arg:0 <var_decl 0x7f64eed25bd0 pp type <record_type 0x7f64eed0c540 parallel_processes>
        addressable BLK ./benchmarks/git/use_after_free_2/git_uaf_2.c:342:28 size <integer_cst 0x7f64ef2b10a8 704> unit-size <integer_cst 0x7f64eecfc828 88>
        align:64 warn_if_not_align:0 context <function_decl 0x7f64eed11200 run_processes_parallel>>
    ./benchmarks/git/use_after_free_2/git_uaf_2.c:361:3 start: ./benchmarks/git/use_after_free_2/git_uaf_2.c:361:3 finish: ./benchmarks/git/use_after_free_2/git_uaf_2.c:361:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f64eed2c440
    type <pointer_type 0x7f64eed0c5e8
        type <record_type 0x7f64eed0c540 parallel_processes BLK
            size <integer_cst 0x7f64ef2b10a8 constant 704>
            unit-size <integer_cst 0x7f64eecfc828 constant 88>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed0c540 fields <field_decl 0x7f64eed08980 data> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed0c5e8>>
        public unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f64eed16b28>>
   
    arg:0 <var_decl 0x7f64eed25bd0 pp type <record_type 0x7f64eed0c540 parallel_processes>
        addressable BLK ./benchmarks/git/use_after_free_2/git_uaf_2.c:342:28 size <integer_cst 0x7f64ef2b10a8 704> unit-size <integer_cst 0x7f64eecfc828 88>
        align:64 warn_if_not_align:0 context <function_decl 0x7f64eed11200 run_processes_parallel>>
    ./benchmarks/git/use_after_free_2/git_uaf_2.c:362:3 start: ./benchmarks/git/use_after_free_2/git_uaf_2.c:362:3 finish: ./benchmarks/git/use_after_free_2/git_uaf_2.c:362:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f64eed2c480
    type <pointer_type 0x7f64eed0c5e8
        type <record_type 0x7f64eed0c540 parallel_processes BLK
            size <integer_cst 0x7f64ef2b10a8 constant 704>
            unit-size <integer_cst 0x7f64eecfc828 constant 88>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed0c540 fields <field_decl 0x7f64eed08980 data> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed0c5e8>>
        public unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f64eed16b28>>
   
    arg:0 <var_decl 0x7f64eed25bd0 pp type <record_type 0x7f64eed0c540 parallel_processes>
        addressable BLK ./benchmarks/git/use_after_free_2/git_uaf_2.c:342:28 size <integer_cst 0x7f64ef2b10a8 704> unit-size <integer_cst 0x7f64eecfc828 88>
        align:64 warn_if_not_align:0 context <function_decl 0x7f64eed11200 run_processes_parallel>>
    ./benchmarks/git/use_after_free_2/git_uaf_2.c:363:10 start: ./benchmarks/git/use_after_free_2/git_uaf_2.c:363:10 finish: ./benchmarks/git/use_after_free_2/git_uaf_2.c:363:10>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f64eed2c4c0
    type <pointer_type 0x7f64eed0c5e8
        type <record_type 0x7f64eed0c540 parallel_processes BLK
            size <integer_cst 0x7f64ef2b10a8 constant 704>
            unit-size <integer_cst 0x7f64eecfc828 constant 88>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed0c540 fields <field_decl 0x7f64eed08980 data> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed0c5e8>>
        public unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f64eed16b28>>
   
    arg:0 <var_decl 0x7f64eed25bd0 pp type <record_type 0x7f64eed0c540 parallel_processes>
        addressable BLK ./benchmarks/git/use_after_free_2/git_uaf_2.c:342:28 size <integer_cst 0x7f64ef2b10a8 704> unit-size <integer_cst 0x7f64eecfc828 88>
        align:64 warn_if_not_align:0 context <function_decl 0x7f64eed11200 run_processes_parallel>>
    ./benchmarks/git/use_after_free_2/git_uaf_2.c:367:5 start: ./benchmarks/git/use_after_free_2/git_uaf_2.c:367:5 finish: ./benchmarks/git/use_after_free_2/git_uaf_2.c:367:5>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f64eed2c500
    type <pointer_type 0x7f64eed0c5e8
        type <record_type 0x7f64eed0c540 parallel_processes BLK
            size <integer_cst 0x7f64ef2b10a8 constant 704>
            unit-size <integer_cst 0x7f64eecfc828 constant 88>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed0c540 fields <field_decl 0x7f64eed08980 data> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed0c5e8>>
        public unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f64eed16b28>>
   
    arg:0 <var_decl 0x7f64eed25bd0 pp type <record_type 0x7f64eed0c540 parallel_processes>
        addressable BLK ./benchmarks/git/use_after_free_2/git_uaf_2.c:342:28 size <integer_cst 0x7f64ef2b10a8 704> unit-size <integer_cst 0x7f64eecfc828 88>
        align:64 warn_if_not_align:0 context <function_decl 0x7f64eed11200 run_processes_parallel>>
    ./benchmarks/git/use_after_free_2/git_uaf_2.c:371:2 start: ./benchmarks/git/use_after_free_2/git_uaf_2.c:371:2 finish: ./benchmarks/git/use_after_free_2/git_uaf_2.c:371:2>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:run_processes_parallel========= [0m
[40;42m =======pre add _ fucntion:strcmp========= [0m
[40;33m =======POP node_fun stack:strcmp========= [0m
[40;42m =======pre add _ fucntion:atoi========= [0m
[40;33m =======POP node_fun stack:atoi========= [0m
[40;42m =======pre add _ fucntion:run_command========= [0m
[40;33m =======POP node_fun stack:run_command========= [0m
[40;42m =======pre add _ fucntion:fprintf========= [0m
[40;33m =======POP node_fun stack:fprintf========= [0m
[40;42m =======pre add _ fucntion:__errno_location========= [0m
[40;33m =======POP node_fun stack:__errno_location========= [0m
[40;42m =======pre add _ fucntion:start_command========= [0m
[40;33m =======POP node_fun stack:start_command========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f64ef1e4630
    type <pointer_type 0x7f64eed0c000
        type <integer_type 0x7f64eed05930 char public QI
            size <integer_cst 0x7f64ef1dcca8 constant 8>
            unit-size <integer_cst 0x7f64ef1dccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64ef1f13f0 precision:8 min <integer_cst 0x7f64eecfc7b0 -128> max <integer_cst 0x7f64eecfc798 127>
            pointer_to_this <pointer_type 0x7f64eed0c000>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7f64eed0e690>>
   
    def_stmt _2 = MEM[(char * *)argv_31(D) + 8B];
    version:2
    ptr-info 0x7f64eed21e70>
# VUSE <.MEM_39>
_2 = MEM[(char * *)argv_31(D) + 8B];

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_39>
_3 = strcmp (_2, "start-command-ENOENT");
bb index := 3
# VUSE <.MEM_52>
return _24;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_52>
return _24;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_39>
_3 = strcmp (_2, "start-command-ENOENT");
bb index := 3
# VUSE <.MEM_13>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _6;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_39>
_3 = strcmp (_2, "start-command-ENOENT");
bb index := 3
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_39>
_3 = strcmp (_2, "start-command-ENOENT");
bb index := 3
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_39>
_3 = strcmp (_2, "start-command-ENOENT");
bb index := 3
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_39>
_3 = strcmp (_2, "start-command-ENOENT");
bb index := 3
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================
_3 = strcmp (_2, "start-command-ENOENT");
./benchmarks/git/use_after_free_2/git_uaf_2.c:419:14: warning: use location
  419 |         if (!strcmp(argv[1], "start-command-ENOENT")) {
      |              ^
this stmt is child function---strcmp-----

 ================== trace ================== 
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_52>
return _24;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_52>
return _24;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_13>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _6;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================
if (_3 == 0)
./benchmarks/git/use_after_free_2/git_uaf_2.c:419:12: warning: use location
  419 |         if (!strcmp(argv[1], "start-command-ENOENT")) {
      |            ^
if (_3 == 0)

 ================== find cond branch ================= 
./benchmarks/git/use_after_free_2/git_uaf_2.c:419:12: warning: use location
Cond in fucntion main basic block 3
 ================== possible direct basic block ================= 
from main basic block 4
 ================== possible direct basic block ================= 
from main basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64ef1e4630
    type <pointer_type 0x7f64eed0c000
        type <integer_type 0x7f64eed05930 char public QI
            size <integer_cst 0x7f64ef1dcca8 constant 8>
            unit-size <integer_cst 0x7f64ef1dccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64ef1f13f0 precision:8 min <integer_cst 0x7f64eecfc7b0 -128> max <integer_cst 0x7f64eecfc798 127>
            pointer_to_this <pointer_type 0x7f64eed0c000>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7f64eed0e690>>
   
    def_stmt _2 = MEM[(char * *)argv_31(D) + 8B];
    version:2
    ptr-info 0x7f64eed21e70>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f64ef3d8be0
    type <pointer_type 0x7f64eed137e0
        type <record_type 0x7f64eed13738 child_process BLK
            size <integer_cst 0x7f64eecfc978 constant 640>
            unit-size <integer_cst 0x7f64eecfc948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed13738 fields <field_decl 0x7f64eed15850 argv> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed137e0>>
        public unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    arg:0 <var_decl 0x7f64efa84f30 proc type <record_type 0x7f64eed13738 child_process>
        addressable BLK ./benchmarks/git/use_after_free_2/git_uaf_2.c:412:23 size <integer_cst 0x7f64eecfc978 640> unit-size <integer_cst 0x7f64eecfc948 80>
        align:64 warn_if_not_align:0 context <function_decl 0x7f64eed11600 main>
        chain <var_decl 0x7f64efa84ea0 jobs type <integer_type 0x7f64ef1f15e8 int>
            SI ./benchmarks/git/use_after_free_2/git_uaf_2.c:413:6
            size <integer_cst 0x7f64ef1dcdf8 constant 32>
            unit-size <integer_cst 0x7f64ef1dce10 constant 4>
            align:32 warn_if_not_align:0 context <function_decl 0x7f64eed11600 main>>>
    ./benchmarks/git/use_after_free_2/git_uaf_2.c:420:7 start: ./benchmarks/git/use_after_free_2/git_uaf_2.c:420:7 finish: ./benchmarks/git/use_after_free_2/git_uaf_2.c:420:7>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f64ef1e4708
    type <pointer_type 0x7f64ef1f89d8
        type <integer_type 0x7f64ef1f15e8 int public SI
            size <integer_cst 0x7f64ef1dcdf8 constant 32>
            unit-size <integer_cst 0x7f64ef1dce10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64ef1f15e8 precision:32 min <integer_cst 0x7f64ef1dcdb0 -2147483648> max <integer_cst 0x7f64ef1dcdc8 2147483647>
            pointer_to_this <pointer_type 0x7f64ef1f89d8>>
        public unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = __errno_location ();
    version:5
    ptr-info 0x7f64eed21e88>
_5 = __errno_location ();

 ================== trace ptable================== 
trace fucntion name:__errno_location 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---__errno_location-----
this other function ------__errno_location-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
_6 = *_5;
bb index := 5
# VUSE <.MEM_52>
return _24;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_52>
return _24;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
_6 = *_5;
bb index := 5
# VUSE <.MEM_13>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _6;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_50>
_6 = *_5;
bb index := 5
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================
_6 = *_5;
./benchmarks/git/use_after_free_2/git_uaf_2.c:420:49: warning: use location
  420 |                 if (start_command(&proc) < 0 && errno == ENOENT)
      |                                                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 2)
bb index := 5
# VUSE <.MEM_52>
return _24;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_52>
return _24;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 2)
bb index := 5
# VUSE <.MEM_13>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _6;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 2)
bb index := 5
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================
if (_6 == 2)
./benchmarks/git/use_after_free_2/git_uaf_2.c:420:46: warning: use location
  420 |                 if (start_command(&proc) < 0 && errno == ENOENT)
      |                                              ^
if (_6 == 2)

 ================== find cond branch ================= 
./benchmarks/git/use_after_free_2/git_uaf_2.c:420:46: warning: use location
Cond in fucntion main basic block 5
 ================== possible direct basic block ================= 
from main basic block 16
 ================== possible direct basic block ================= 
from main basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = __errno_location ();
bb index := 5
# VUSE <.MEM_52>
return _24;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_52>
return _24;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = __errno_location ();
bb index := 5
# VUSE <.MEM_13>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _6;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = __errno_location ();
bb index := 5
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================
_5 = __errno_location ();
./benchmarks/git/use_after_free_2/git_uaf_2.c:420:49: warning: use location
  420 |                 if (start_command(&proc) < 0 && errno == ENOENT)
      |                                                 ^
this stmt is child function---__errno_location-----

 ================== trace ================== 
trace fucntion name:__errno_location 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64ef1e4708
    type <pointer_type 0x7f64ef1f89d8
        type <integer_type 0x7f64ef1f15e8 int public SI
            size <integer_cst 0x7f64ef1dcdf8 constant 32>
            unit-size <integer_cst 0x7f64ef1dce10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64ef1f15e8 precision:32 min <integer_cst 0x7f64ef1dcdb0 -2147483648> max <integer_cst 0x7f64ef1dcdc8 2147483647>
            pointer_to_this <pointer_type 0x7f64ef1f89d8>>
        public unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = __errno_location ();
    version:5
    ptr-info 0x7f64eed21e88>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f64ef1e47e0
    type <pointer_type 0x7f64eed0e3f0
        type <record_type 0x7f64eed0e348 FILE BLK
            size <integer_cst 0x7f64eecfc840 constant 1728>
            unit-size <integer_cst 0x7f64eecfc960 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed0e2a0 fields <field_decl 0x7f64eed10b48 _flags> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed0e3f0>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f64eed16e70>>
   
    def_stmt _8 = stderr;
    version:8
    ptr-info 0x7f64eed21eb8>
# VUSE <.MEM_50>
_8 = stderr;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_51 = VDEF <.MEM_50>
fprintf (_8, "FAIL %s\n", _7);
bb index := 6
# VUSE <.MEM_52>
return _24;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_52>
return _24;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_51 = VDEF <.MEM_50>
fprintf (_8, "FAIL %s\n", _7);
bb index := 6
# VUSE <.MEM_13>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _6;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_51 = VDEF <.MEM_50>
fprintf (_8, "FAIL %s\n", _7);
bb index := 6
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 6

======================================================================
# .MEM_51 = VDEF <.MEM_50>
fprintf (_8, "FAIL %s\n", _7);
fprintf (_8, "FAIL %s\n", _7);
./benchmarks/git/use_after_free_2/git_uaf_2.c:422:17: warning: use location
  422 |                 fprintf(stderr, "FAIL %s\n", argv[1]);
      |                 ^
this stmt is child function---fprintf-----

 ================== trace ================== 
trace fucntion name:fprintf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_51 = VDEF <.MEM_50>
fprintf (_8, "FAIL %s\n", _7);
bb index := 6
# VUSE <.MEM_52>
return _24;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_52>
return _24;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_51 = VDEF <.MEM_50>
fprintf (_8, "FAIL %s\n", _7);
bb index := 6
# VUSE <.MEM_13>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _6;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_51 = VDEF <.MEM_50>
fprintf (_8, "FAIL %s\n", _7);
bb index := 6
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 6

======================================================================
# .MEM_51 = VDEF <.MEM_50>
fprintf (_8, "FAIL %s\n", _7);
fprintf (_8, "FAIL %s\n", _7);
./benchmarks/git/use_after_free_2/git_uaf_2.c:422:17: warning: use location
this stmt is child function---fprintf-----

 ================== trace ================== 
trace fucntion name:fprintf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64ef1e47e0
    type <pointer_type 0x7f64eed0e3f0
        type <record_type 0x7f64eed0e348 FILE BLK
            size <integer_cst 0x7f64eecfc840 constant 1728>
            unit-size <integer_cst 0x7f64eecfc960 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed0e2a0 fields <field_decl 0x7f64eed10b48 _flags> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed0e3f0>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f64eed16e70>>
   
    def_stmt _8 = stderr;
    version:8
    ptr-info 0x7f64eed21eb8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f64ef1e4828
    type <pointer_type 0x7f64eed0c000
        type <integer_type 0x7f64eed05930 char public QI
            size <integer_cst 0x7f64ef1dcca8 constant 8>
            unit-size <integer_cst 0x7f64ef1dccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64ef1f13f0 precision:8 min <integer_cst 0x7f64eecfc7b0 -128> max <integer_cst 0x7f64eecfc798 127>
            pointer_to_this <pointer_type 0x7f64eed0c000>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7f64eed0e690>>
   
    def_stmt _9 = MEM[(char * *)argv_31(D) + 8B];
    version:9
    ptr-info 0x7f64eed21ed0>
# VUSE <.MEM_39>
_9 = MEM[(char * *)argv_31(D) + 8B];

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_39>
_10 = strcmp (_9, "run-command");
bb index := 7
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_39>
_10 = strcmp (_9, "run-command");
bb index := 7
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 13

======================================================================
_10 = strcmp (_9, "run-command");
./benchmarks/git/use_after_free_2/git_uaf_2.c:425:14: warning: use location
  425 |         if (!strcmp(argv[1], "run-command"))
      |              ^
this stmt is child function---strcmp-----

 ================== trace ================== 
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_10 == 0)
bb index := 7
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_10 == 0)
bb index := 7
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 13

======================================================================
if (_10 == 0)
./benchmarks/git/use_after_free_2/git_uaf_2.c:425:12: warning: use location
  425 |         if (!strcmp(argv[1], "run-command"))
      |            ^
if (_10 == 0)

 ================== find cond branch ================= 
./benchmarks/git/use_after_free_2/git_uaf_2.c:425:12: warning: use location
Cond in fucntion main basic block 7
 ================== possible direct basic block ================= 
from main basic block 8
 ================== possible direct basic block ================= 
from main basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64ef1e4828
    type <pointer_type 0x7f64eed0c000
        type <integer_type 0x7f64eed05930 char public QI
            size <integer_cst 0x7f64ef1dcca8 constant 8>
            unit-size <integer_cst 0x7f64ef1dccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64ef1f13f0 precision:8 min <integer_cst 0x7f64eecfc7b0 -128> max <integer_cst 0x7f64eecfc798 127>
            pointer_to_this <pointer_type 0x7f64eed0c000>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7f64eed0e690>>
   
    def_stmt _9 = MEM[(char * *)argv_31(D) + 8B];
    version:9
    ptr-info 0x7f64eed21ed0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f64ef3d8d00
    type <pointer_type 0x7f64eed137e0
        type <record_type 0x7f64eed13738 child_process BLK
            size <integer_cst 0x7f64eecfc978 constant 640>
            unit-size <integer_cst 0x7f64eecfc948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed13738 fields <field_decl 0x7f64eed15850 argv> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed137e0>>
        public unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    arg:0 <var_decl 0x7f64efa84f30 proc type <record_type 0x7f64eed13738 child_process>
        addressable BLK ./benchmarks/git/use_after_free_2/git_uaf_2.c:412:23 size <integer_cst 0x7f64eecfc978 640> unit-size <integer_cst 0x7f64eecfc948 80>
        align:64 warn_if_not_align:0 context <function_decl 0x7f64eed11600 main>
        chain <var_decl 0x7f64efa84ea0 jobs type <integer_type 0x7f64ef1f15e8 int>
            SI ./benchmarks/git/use_after_free_2/git_uaf_2.c:413:6
            size <integer_cst 0x7f64ef1dcdf8 constant 32>
            unit-size <integer_cst 0x7f64ef1dce10 constant 4>
            align:32 warn_if_not_align:0 context <function_decl 0x7f64eed11600 main>>>
    ./benchmarks/git/use_after_free_2/git_uaf_2.c:426:3 start: ./benchmarks/git/use_after_free_2/git_uaf_2.c:426:3 finish: ./benchmarks/git/use_after_free_2/git_uaf_2.c:426:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f64ef1e4900
    type <pointer_type 0x7f64eed0c000
        type <integer_type 0x7f64eed05930 char public QI
            size <integer_cst 0x7f64ef1dcca8 constant 8>
            unit-size <integer_cst 0x7f64ef1dccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64ef1f13f0 precision:8 min <integer_cst 0x7f64eecfc7b0 -128> max <integer_cst 0x7f64eecfc798 127>
            pointer_to_this <pointer_type 0x7f64eed0c000>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7f64eed0e690>>
   
    def_stmt _12 = MEM[(char * *)argv_31(D) + 16B];
    version:12
    ptr-info 0x7f64eed21ee8>
# VUSE <.MEM_39>
_12 = MEM[(char * *)argv_31(D) + 16B];

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_39>
jobs_33 = atoi (_12);
bb index := 9
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_39>
jobs_33 = atoi (_12);
bb index := 9
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================
jobs_33 = atoi (_12);
./benchmarks/git/use_after_free_2/git_uaf_2.c:428:16: warning: use location
  428 |         jobs = atoi(argv[2]);
      |                ^
this stmt is child function---atoi-----

 ================== trace ================== 
trace fucntion name:atoi 

 ================== trace ================== 
trace fucntion free:0 
_22 = run_processes_parallel (jobs_33, no_job, 0B, task_finished, &proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:440:17: warning: use location
  440 |                 exit(run_processes_parallel(jobs, no_job,
      |                 ^
this stmt is child function---run_processes_parallel-----

 ================== trace ================== 
trace fucntion name:run_processes_parallel 
[40;44m =======trace_function_path run_processes_parallel  function_call count: 7 level :0========  [0m
[40;36m ======= node_fun:run_processes_parallel========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:pp_cleanup========= [0m
[40;46m =======add node_fun stack:pp_cleanup========= [0m
[40;42m =======pre add _ fucntion:kill_children========= [0m
[40;46m =======add node_fun stack:kill_children========= [0m
[40;44m =======trace_function_path kill_children  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:kill_children========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:kill========= [0m
[40;46m =======add node_fun stack:kill========= [0m
[40;42m =======pre add _ fucntion:pp_collect_finished========= [0m
[40;46m =======add node_fun stack:pp_collect_finished========= [0m
[40;44m =======trace_function_path pp_collect_finished  function_call count: 5 level :1========  [0m
[40;36m ======= node_fun:pp_collect_finished========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:fputs========= [0m
[40;46m =======add node_fun stack:fputs========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:finish_command========= [0m
[40;46m =======add node_fun stack:finish_command========= [0m
[40;44m =======trace_function_path finish_command  function_call count: 2 level :2========  [0m
[40;36m ======= node_fun:finish_command========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_clear========= [0m
[40;46m =======add node_fun stack:child_process_clear========= [0m
[40;44m =======trace_function_path child_process_clear  function_call count: 1 level :3========  [0m
[40;36m ======= node_fun:child_process_clear========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;46m =======add node_fun stack:wait_or_whine========= [0m
[40;42m =======pre add _ fucntion:pp_output========= [0m
[40;46m =======add node_fun stack:pp_output========= [0m
[40;42m =======pre add _ fucntion:pp_buffer_stderr========= [0m
[40;46m =======add node_fun stack:pp_buffer_stderr========= [0m
[40;42m =======pre add _ fucntion:pp_start_one========= [0m
[40;46m =======add node_fun stack:pp_start_one========= [0m
[40;44m =======trace_function_path pp_start_one  function_call count: 5 level :1========  [0m
[40;36m ======= node_fun:pp_start_one========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:start_command========= [0m
[40;46m =======add node_fun stack:start_command========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:pp_init========= [0m
[40;46m =======add node_fun stack:pp_init========= [0m
[40;44m =======trace_function_path pp_init  function_call count: 7 level :1========  [0m
[40;36m ======= node_fun:pp_init========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;46m =======add node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;46m =======add node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;46m =======add node_fun stack:online_cpus========= [0m

 ================== trace ================== 
trace fucntion free:0 
exit (_22);
./benchmarks/git/use_after_free_2/git_uaf_2.c:440:17: warning: use location
this stmt is child function---exit-----

 ================== trace ================== 
trace fucntion name:exit 

 ================== trace ================== 
trace fucntion free:0 
_19 = run_processes_parallel (jobs_33, parallel_next, 0B, task_finished, &proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:436:17: warning: use location
  436 |                 exit(run_processes_parallel(jobs, parallel_next,
      |                 ^
this stmt is child function---run_processes_parallel-----

 ================== trace ================== 
trace fucntion name:run_processes_parallel 
[40;44m =======trace_function_path run_processes_parallel  function_call count: 7 level :0========  [0m
[40;36m ======= node_fun:run_processes_parallel========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:pp_cleanup========= [0m
[40;46m =======add node_fun stack:pp_cleanup========= [0m
[40;42m =======pre add _ fucntion:kill_children========= [0m
[40;46m =======add node_fun stack:kill_children========= [0m
[40;44m =======trace_function_path kill_children  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:kill_children========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:kill========= [0m
[40;46m =======add node_fun stack:kill========= [0m
[40;42m =======pre add _ fucntion:pp_collect_finished========= [0m
[40;46m =======add node_fun stack:pp_collect_finished========= [0m
[40;44m =======trace_function_path pp_collect_finished  function_call count: 5 level :1========  [0m
[40;36m ======= node_fun:pp_collect_finished========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:fputs========= [0m
[40;46m =======add node_fun stack:fputs========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:finish_command========= [0m
[40;46m =======add node_fun stack:finish_command========= [0m
[40;44m =======trace_function_path finish_command  function_call count: 2 level :2========  [0m
[40;36m ======= node_fun:finish_command========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_clear========= [0m
[40;46m =======add node_fun stack:child_process_clear========= [0m
[40;44m =======trace_function_path child_process_clear  function_call count: 1 level :3========  [0m
[40;36m ======= node_fun:child_process_clear========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;46m =======add node_fun stack:wait_or_whine========= [0m
[40;42m =======pre add _ fucntion:pp_output========= [0m
[40;46m =======add node_fun stack:pp_output========= [0m
[40;42m =======pre add _ fucntion:pp_buffer_stderr========= [0m
[40;46m =======add node_fun stack:pp_buffer_stderr========= [0m
[40;42m =======pre add _ fucntion:pp_start_one========= [0m
[40;46m =======add node_fun stack:pp_start_one========= [0m
[40;44m =======trace_function_path pp_start_one  function_call count: 5 level :1========  [0m
[40;36m ======= node_fun:pp_start_one========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:start_command========= [0m
[40;46m =======add node_fun stack:start_command========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:pp_init========= [0m
[40;46m =======add node_fun stack:pp_init========= [0m
[40;44m =======trace_function_path pp_init  function_call count: 7 level :1========  [0m
[40;36m ======= node_fun:pp_init========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;46m =======add node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;46m =======add node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;46m =======add node_fun stack:online_cpus========= [0m

 ================== trace ================== 
trace fucntion free:0 
exit (_19);
./benchmarks/git/use_after_free_2/git_uaf_2.c:436:17: warning: use location
this stmt is child function---exit-----

 ================== trace ================== 
trace fucntion name:exit 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_46 = VDEF <.MEM_40>
_16 = run_processes_parallel (jobs_33, parallel_next, 0B, 0B, &proc);
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_46 = VDEF <.MEM_40>
_16 = run_processes_parallel (jobs_33, parallel_next, 0B, 0B, &proc);
bb index := 10
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
_16 = run_processes_parallel (jobs_33, parallel_next, 0B, 0B, &proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:432:17: warning: use location
  432 |                 exit(run_processes_parallel(jobs, parallel_next,
      |                 ^
this stmt is child function---run_processes_parallel-----

 ================== trace ================== 
trace fucntion name:run_processes_parallel 
[40;44m =======trace_function_path run_processes_parallel  function_call count: 7 level :0========  [0m
[40;36m ======= node_fun:run_processes_parallel========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:pp_cleanup========= [0m
[40;46m =======add node_fun stack:pp_cleanup========= [0m
[40;42m =======pre add _ fucntion:kill_children========= [0m
[40;46m =======add node_fun stack:kill_children========= [0m
[40;44m =======trace_function_path kill_children  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:kill_children========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:kill========= [0m
[40;46m =======add node_fun stack:kill========= [0m
[40;42m =======pre add _ fucntion:pp_collect_finished========= [0m
[40;46m =======add node_fun stack:pp_collect_finished========= [0m
[40;44m =======trace_function_path pp_collect_finished  function_call count: 5 level :1========  [0m
[40;36m ======= node_fun:pp_collect_finished========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:fputs========= [0m
[40;46m =======add node_fun stack:fputs========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:finish_command========= [0m
[40;46m =======add node_fun stack:finish_command========= [0m
[40;44m =======trace_function_path finish_command  function_call count: 2 level :2========  [0m
[40;36m ======= node_fun:finish_command========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_clear========= [0m
[40;46m =======add node_fun stack:child_process_clear========= [0m
[40;44m =======trace_function_path child_process_clear  function_call count: 1 level :3========  [0m
[40;36m ======= node_fun:child_process_clear========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;46m =======add node_fun stack:wait_or_whine========= [0m
[40;42m =======pre add _ fucntion:pp_output========= [0m
[40;46m =======add node_fun stack:pp_output========= [0m
[40;42m =======pre add _ fucntion:pp_buffer_stderr========= [0m
[40;46m =======add node_fun stack:pp_buffer_stderr========= [0m
[40;42m =======pre add _ fucntion:pp_start_one========= [0m
[40;46m =======add node_fun stack:pp_start_one========= [0m
[40;44m =======trace_function_path pp_start_one  function_call count: 5 level :1========  [0m
[40;36m ======= node_fun:pp_start_one========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:start_command========= [0m
[40;46m =======add node_fun stack:start_command========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:pp_init========= [0m
[40;46m =======add node_fun stack:pp_init========= [0m
[40;44m =======trace_function_path pp_init  function_call count: 7 level :1========  [0m
[40;36m ======= node_fun:pp_init========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;46m =======add node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;46m =======add node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;46m =======add node_fun stack:online_cpus========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_46>
exit (_16);
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_46>
exit (_16);
bb index := 10
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
exit (_16);
./benchmarks/git/use_after_free_2/git_uaf_2.c:432:17: warning: use location
  432 |                 exit(run_processes_parallel(jobs, parallel_next,
      |                 ^
this stmt is child function---exit-----

 ================== trace ================== 
trace fucntion name:exit 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64ef1e4900
    type <pointer_type 0x7f64eed0c000
        type <integer_type 0x7f64eed05930 char public QI
            size <integer_cst 0x7f64ef1dcca8 constant 8>
            unit-size <integer_cst 0x7f64ef1dccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64ef1f13f0 precision:8 min <integer_cst 0x7f64eecfc7b0 -128> max <integer_cst 0x7f64eecfc798 127>
            pointer_to_this <pointer_type 0x7f64eed0c000>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7f64eed0e690>>
   
    def_stmt _12 = MEM[(char * *)argv_31(D) + 16B];
    version:12
    ptr-info 0x7f64eed21ee8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f64ef1e4990
    type <pointer_type 0x7f64eed0c000
        type <integer_type 0x7f64eed05930 char public QI
            size <integer_cst 0x7f64ef1dcca8 constant 8>
            unit-size <integer_cst 0x7f64ef1dccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64ef1f13f0 precision:8 min <integer_cst 0x7f64eecfc7b0 -128> max <integer_cst 0x7f64eecfc798 127>
            pointer_to_this <pointer_type 0x7f64eed0c000>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7f64eed0e690>>
   
    def_stmt _14 = MEM[(char * *)argv_31(D) + 8B];
    version:14
    ptr-info 0x7f64eed21f18>
# VUSE <.MEM_40>
_14 = MEM[(char * *)argv_31(D) + 8B];

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_40>
_15 = strcmp (_14, "run-command-parallel");
bb index := 9
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_40>
_15 = strcmp (_14, "run-command-parallel");
bb index := 9
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================
_15 = strcmp (_14, "run-command-parallel");
./benchmarks/git/use_after_free_2/git_uaf_2.c:431:14: warning: use location
  431 |         if (!strcmp(argv[1], "run-command-parallel"))
      |              ^
this stmt is child function---strcmp-----

 ================== trace ================== 
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_15 == 0)
bb index := 9
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_15 == 0)
bb index := 9
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================
if (_15 == 0)
./benchmarks/git/use_after_free_2/git_uaf_2.c:431:12: warning: use location
  431 |         if (!strcmp(argv[1], "run-command-parallel"))
      |            ^
if (_15 == 0)

 ================== find cond branch ================= 
./benchmarks/git/use_after_free_2/git_uaf_2.c:431:12: warning: use location
Cond in fucntion main basic block 9
 ================== possible direct basic block ================= 
from main basic block 10
 ================== possible direct basic block ================= 
from main basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64ef1e4990
    type <pointer_type 0x7f64eed0c000
        type <integer_type 0x7f64eed05930 char public QI
            size <integer_cst 0x7f64ef1dcca8 constant 8>
            unit-size <integer_cst 0x7f64ef1dccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64ef1f13f0 precision:8 min <integer_cst 0x7f64eecfc7b0 -128> max <integer_cst 0x7f64eecfc798 127>
            pointer_to_this <pointer_type 0x7f64eed0c000>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7f64eed0e690>>
   
    def_stmt _14 = MEM[(char * *)argv_31(D) + 8B];
    version:14
    ptr-info 0x7f64eed21f18>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f64ef1e4d38
    type <integer_type 0x7f64ef1f15e8 int public SI
        size <integer_cst 0x7f64ef1dcdf8 constant 32>
        unit-size <integer_cst 0x7f64ef1dce10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64ef1f15e8 precision:32 min <integer_cst 0x7f64ef1dcdb0 -2147483648> max <integer_cst 0x7f64ef1dcdc8 2147483647>
        pointer_to_this <pointer_type 0x7f64ef1f89d8>>
    var <var_decl 0x7f64efa84ea0 jobs>
    def_stmt jobs_33 = atoi (_12);
    version:33>
# VUSE <.MEM_39>
jobs_33 = atoi (_12);

 ================== trace ptable================== 
trace fucntion name:atoi 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---atoi-----
this other function ------atoi-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_39>
jobs_33 = atoi (_12);
bb index := 9
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_39>
jobs_33 = atoi (_12);
bb index := 9
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================
jobs_33 = atoi (_12);
./benchmarks/git/use_after_free_2/git_uaf_2.c:428:16: warning: use location
  428 |         jobs = atoi(argv[2]);
      |                ^
this stmt is child function---atoi-----

 ================== trace ================== 
trace fucntion name:atoi 

 ================== trace ================== 
trace fucntion free:0 
_22 = run_processes_parallel (jobs_33, no_job, 0B, task_finished, &proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:440:17: warning: use location
  440 |                 exit(run_processes_parallel(jobs, no_job,
      |                 ^
this stmt is child function---run_processes_parallel-----

 ================== trace ================== 
trace fucntion name:run_processes_parallel 
[40;44m =======trace_function_path run_processes_parallel  function_call count: 7 level :0========  [0m
[40;42m =======pre add _ fucntion:pp_cleanup========= [0m
[40;46m =======add node_fun stack:pp_cleanup========= [0m
[40;42m =======pre add _ fucntion:kill_children========= [0m
[40;46m =======add node_fun stack:kill_children========= [0m
[40;44m =======trace_function_path kill_children  function_call count: 1 level :1========  [0m
[40;42m =======pre add _ fucntion:kill========= [0m
[40;46m =======add node_fun stack:kill========= [0m
[40;42m =======pre add _ fucntion:pp_collect_finished========= [0m
[40;46m =======add node_fun stack:pp_collect_finished========= [0m
[40;44m =======trace_function_path pp_collect_finished  function_call count: 5 level :1========  [0m
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:fputs========= [0m
[40;46m =======add node_fun stack:fputs========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:finish_command========= [0m
[40;46m =======add node_fun stack:finish_command========= [0m
[40;44m =======trace_function_path finish_command  function_call count: 2 level :2========  [0m
[40;42m =======pre add _ fucntion:child_process_clear========= [0m
[40;46m =======add node_fun stack:child_process_clear========= [0m
[40;44m =======trace_function_path child_process_clear  function_call count: 1 level :3========  [0m
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;46m =======add node_fun stack:wait_or_whine========= [0m
[40;42m =======pre add _ fucntion:pp_output========= [0m
[40;46m =======add node_fun stack:pp_output========= [0m
[40;42m =======pre add _ fucntion:pp_buffer_stderr========= [0m
[40;46m =======add node_fun stack:pp_buffer_stderr========= [0m
[40;42m =======pre add _ fucntion:pp_start_one========= [0m
[40;46m =======add node_fun stack:pp_start_one========= [0m
[40;44m =======trace_function_path pp_start_one  function_call count: 5 level :1========  [0m
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:start_command========= [0m
[40;46m =======add node_fun stack:start_command========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:pp_init========= [0m
[40;46m =======add node_fun stack:pp_init========= [0m
[40;44m =======trace_function_path pp_init  function_call count: 7 level :1========  [0m
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;46m =======add node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;46m =======add node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;46m =======add node_fun stack:online_cpus========= [0m

 ================== trace ================== 
trace fucntion free:0 
exit (_22);
./benchmarks/git/use_after_free_2/git_uaf_2.c:440:17: warning: use location
this stmt is child function---exit-----

 ================== trace ================== 
trace fucntion name:exit 

 ================== trace ================== 
trace fucntion free:0 
_19 = run_processes_parallel (jobs_33, parallel_next, 0B, task_finished, &proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:436:17: warning: use location
  436 |                 exit(run_processes_parallel(jobs, parallel_next,
      |                 ^
this stmt is child function---run_processes_parallel-----

 ================== trace ================== 
trace fucntion name:run_processes_parallel 
[40;44m =======trace_function_path run_processes_parallel  function_call count: 7 level :0========  [0m
[40;42m =======pre add _ fucntion:pp_cleanup========= [0m
[40;46m =======add node_fun stack:pp_cleanup========= [0m
[40;42m =======pre add _ fucntion:kill_children========= [0m
[40;46m =======add node_fun stack:kill_children========= [0m
[40;44m =======trace_function_path kill_children  function_call count: 1 level :1========  [0m
[40;42m =======pre add _ fucntion:kill========= [0m
[40;46m =======add node_fun stack:kill========= [0m
[40;42m =======pre add _ fucntion:pp_collect_finished========= [0m
[40;46m =======add node_fun stack:pp_collect_finished========= [0m
[40;44m =======trace_function_path pp_collect_finished  function_call count: 5 level :1========  [0m
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:fputs========= [0m
[40;46m =======add node_fun stack:fputs========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:finish_command========= [0m
[40;46m =======add node_fun stack:finish_command========= [0m
[40;44m =======trace_function_path finish_command  function_call count: 2 level :2========  [0m
[40;42m =======pre add _ fucntion:child_process_clear========= [0m
[40;46m =======add node_fun stack:child_process_clear========= [0m
[40;44m =======trace_function_path child_process_clear  function_call count: 1 level :3========  [0m
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;46m =======add node_fun stack:wait_or_whine========= [0m
[40;42m =======pre add _ fucntion:pp_output========= [0m
[40;46m =======add node_fun stack:pp_output========= [0m
[40;42m =======pre add _ fucntion:pp_buffer_stderr========= [0m
[40;46m =======add node_fun stack:pp_buffer_stderr========= [0m
[40;42m =======pre add _ fucntion:pp_start_one========= [0m
[40;46m =======add node_fun stack:pp_start_one========= [0m
[40;44m =======trace_function_path pp_start_one  function_call count: 5 level :1========  [0m
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:start_command========= [0m
[40;46m =======add node_fun stack:start_command========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:pp_init========= [0m
[40;46m =======add node_fun stack:pp_init========= [0m
[40;44m =======trace_function_path pp_init  function_call count: 7 level :1========  [0m
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;46m =======add node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;46m =======add node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;46m =======add node_fun stack:online_cpus========= [0m

 ================== trace ================== 
trace fucntion free:0 
exit (_19);
./benchmarks/git/use_after_free_2/git_uaf_2.c:436:17: warning: use location
this stmt is child function---exit-----

 ================== trace ================== 
trace fucntion name:exit 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_46 = VDEF <.MEM_40>
_16 = run_processes_parallel (jobs_33, parallel_next, 0B, 0B, &proc);
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_46 = VDEF <.MEM_40>
_16 = run_processes_parallel (jobs_33, parallel_next, 0B, 0B, &proc);
bb index := 10
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
_16 = run_processes_parallel (jobs_33, parallel_next, 0B, 0B, &proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:432:17: warning: use location
  432 |                 exit(run_processes_parallel(jobs, parallel_next,
      |                 ^
this stmt is child function---run_processes_parallel-----

 ================== trace ================== 
trace fucntion name:run_processes_parallel 
[40;44m =======trace_function_path run_processes_parallel  function_call count: 7 level :0========  [0m
[40;42m =======pre add _ fucntion:pp_cleanup========= [0m
[40;46m =======add node_fun stack:pp_cleanup========= [0m
[40;42m =======pre add _ fucntion:kill_children========= [0m
[40;46m =======add node_fun stack:kill_children========= [0m
[40;44m =======trace_function_path kill_children  function_call count: 1 level :1========  [0m
[40;42m =======pre add _ fucntion:kill========= [0m
[40;46m =======add node_fun stack:kill========= [0m
[40;42m =======pre add _ fucntion:pp_collect_finished========= [0m
[40;46m =======add node_fun stack:pp_collect_finished========= [0m
[40;44m =======trace_function_path pp_collect_finished  function_call count: 5 level :1========  [0m
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:fputs========= [0m
[40;46m =======add node_fun stack:fputs========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:finish_command========= [0m
[40;46m =======add node_fun stack:finish_command========= [0m
[40;44m =======trace_function_path finish_command  function_call count: 2 level :2========  [0m
[40;42m =======pre add _ fucntion:child_process_clear========= [0m
[40;46m =======add node_fun stack:child_process_clear========= [0m
[40;44m =======trace_function_path child_process_clear  function_call count: 1 level :3========  [0m
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;46m =======add node_fun stack:wait_or_whine========= [0m
[40;42m =======pre add _ fucntion:pp_output========= [0m
[40;46m =======add node_fun stack:pp_output========= [0m
[40;42m =======pre add _ fucntion:pp_buffer_stderr========= [0m
[40;46m =======add node_fun stack:pp_buffer_stderr========= [0m
[40;42m =======pre add _ fucntion:pp_start_one========= [0m
[40;46m =======add node_fun stack:pp_start_one========= [0m
[40;44m =======trace_function_path pp_start_one  function_call count: 5 level :1========  [0m
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:start_command========= [0m
[40;46m =======add node_fun stack:start_command========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:pp_init========= [0m
[40;46m =======add node_fun stack:pp_init========= [0m
[40;44m =======trace_function_path pp_init  function_call count: 7 level :1========  [0m
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;46m =======add node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;46m =======add node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;46m =======add node_fun stack:online_cpus========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_46>
exit (_16);
bb index := 10
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_46>
exit (_16);
bb index := 10
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
exit (_16);
./benchmarks/git/use_after_free_2/git_uaf_2.c:432:17: warning: use location
  432 |                 exit(run_processes_parallel(jobs, parallel_next,
      |                 ^
this stmt is child function---exit-----

 ================== trace ================== 
trace fucntion name:exit 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64ef1e4d38
    type <integer_type 0x7f64ef1f15e8 int public SI
        size <integer_cst 0x7f64ef1dcdf8 constant 32>
        unit-size <integer_cst 0x7f64ef1dce10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64ef1f15e8 precision:32 min <integer_cst 0x7f64ef1dcdb0 -2147483648> max <integer_cst 0x7f64ef1dcdc8 2147483647>
        pointer_to_this <pointer_type 0x7f64ef1f89d8>>
    var <var_decl 0x7f64efa84ea0 jobs>
    def_stmt jobs_33 = atoi (_12);
    version:33>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f64ef1e4a68
    type <pointer_type 0x7f64eed0c000
        type <integer_type 0x7f64eed05930 char public QI
            size <integer_cst 0x7f64ef1dcca8 constant 8>
            unit-size <integer_cst 0x7f64ef1dccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64ef1f13f0 precision:8 min <integer_cst 0x7f64eecfc7b0 -128> max <integer_cst 0x7f64eecfc798 127>
            pointer_to_this <pointer_type 0x7f64eed0c000>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7f64eed0e690>>
   
    def_stmt _17 = MEM[(char * *)argv_31(D) + 8B];
    version:17
    ptr-info 0x7f64eed21f30>
# VUSE <.MEM_40>
_17 = MEM[(char * *)argv_31(D) + 8B];

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_18 = strcmp (_17, "run-command-abort");
./benchmarks/git/use_after_free_2/git_uaf_2.c:435:14: warning: use location
  435 |         if (!strcmp(argv[1], "run-command-abort"))
      |              ^
this stmt is child function---strcmp-----

 ================== trace ================== 
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:0 
if (_18 == 0)
./benchmarks/git/use_after_free_2/git_uaf_2.c:435:12: warning: use location
  435 |         if (!strcmp(argv[1], "run-command-abort"))
      |            ^
if (_18 == 0)

 ================== find cond branch ================= 
./benchmarks/git/use_after_free_2/git_uaf_2.c:435:12: warning: use location
Cond in fucntion main basic block 11
 ================== possible direct basic block ================= 
from main basic block 12
 ================== possible direct basic block ================= 
from main basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64ef1e4a68
    type <pointer_type 0x7f64eed0c000
        type <integer_type 0x7f64eed05930 char public QI
            size <integer_cst 0x7f64ef1dcca8 constant 8>
            unit-size <integer_cst 0x7f64ef1dccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64ef1f13f0 precision:8 min <integer_cst 0x7f64eecfc7b0 -128> max <integer_cst 0x7f64eecfc798 127>
            pointer_to_this <pointer_type 0x7f64eed0c000>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7f64eed0e690>>
   
    def_stmt _17 = MEM[(char * *)argv_31(D) + 8B];
    version:17
    ptr-info 0x7f64eed21f30>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f64ef1e4b40
    type <pointer_type 0x7f64eed0c000
        type <integer_type 0x7f64eed05930 char public QI
            size <integer_cst 0x7f64ef1dcca8 constant 8>
            unit-size <integer_cst 0x7f64ef1dccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64ef1f13f0 precision:8 min <integer_cst 0x7f64eecfc7b0 -128> max <integer_cst 0x7f64eecfc798 127>
            pointer_to_this <pointer_type 0x7f64eed0c000>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7f64eed0e690>>
   
    def_stmt _20 = MEM[(char * *)argv_31(D) + 8B];
    version:20
    ptr-info 0x7f64eed21f48>
# VUSE <.MEM_40>
_20 = MEM[(char * *)argv_31(D) + 8B];

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_21 = strcmp (_20, "run-command-no-jobs");
./benchmarks/git/use_after_free_2/git_uaf_2.c:439:14: warning: use location
  439 |         if (!strcmp(argv[1], "run-command-no-jobs"))
      |              ^
this stmt is child function---strcmp-----

 ================== trace ================== 
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:0 
if (_21 == 0)
./benchmarks/git/use_after_free_2/git_uaf_2.c:439:12: warning: use location
  439 |         if (!strcmp(argv[1], "run-command-no-jobs"))
      |            ^
if (_21 == 0)

 ================== find cond branch ================= 
./benchmarks/git/use_after_free_2/git_uaf_2.c:439:12: warning: use location
Cond in fucntion main basic block 13
 ================== possible direct basic block ================= 
from main basic block 14
 ================== possible direct basic block ================= 
from main basic block 15
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64ef1e4b40
    type <pointer_type 0x7f64eed0c000
        type <integer_type 0x7f64eed05930 char public QI
            size <integer_cst 0x7f64ef1dcca8 constant 8>
            unit-size <integer_cst 0x7f64ef1dccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64ef1f13f0 precision:8 min <integer_cst 0x7f64eecfc7b0 -128> max <integer_cst 0x7f64eecfc798 127>
            pointer_to_this <pointer_type 0x7f64eed0c000>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7f64eed0e690>>
   
    def_stmt _20 = MEM[(char * *)argv_31(D) + 8B];
    version:20
    ptr-info 0x7f64eed21f48>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f64eed2c000
    type <pointer_type 0x7f64eed18540
        type <array_type 0x7f64eed18498 type <integer_type 0x7f64eed05930 char>
            BLK
            size <integer_cst 0x7f64eecfce40 constant 104>
            unit-size <integer_cst 0x7f64eecfce28 constant 13>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f64eed183f0>
            pointer_to_this <pointer_type 0x7f64eed18540>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f64eed27ac8 type <array_type 0x7f64eed18498>
        readonly constant static "check usage\012\000">
    ./benchmarks/git/use_after_free_2/git_uaf_2.c:443:18 start: ./benchmarks/git/use_after_free_2/git_uaf_2.c:443:18 finish: ./benchmarks/git/use_after_free_2/git_uaf_2.c:443:18>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:main========= [0m
[40;44m =======node_fun:task_finished========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path task_finished  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:strbuf_addf========= [0m
[40;33m =======POP node_fun stack:strbuf_addf========= [0m
[40;42m =======pre_check_funciton:task_finished========= [0m
[40;42m =======start_check_funciton:task_finished========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f64eed2d318
    type <pointer_type 0x7f64eed13888
        type <record_type 0x7f64eed0c150 strbuf BLK
            size <integer_cst 0x7f64ef1fa078 constant 192>
            unit-size <integer_cst 0x7f64ef1fa048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed0c150 fields <field_decl 0x7f64eed08260 alloc> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed13888>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f64eed1b480 err>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f64eed21f90>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_4 = VDEF <.MEM_3(D)>
strbuf_addf (err_2(D), "asking for a quick stop\n");
strbuf_addf (err_2(D), "asking for a quick stop\n");
In function ‘task_finished’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:406:9: warning: use location
  406 |         strbuf_addf(err, "asking for a quick stop\n");
      |         ^
this stmt is child function---strbuf_addf-----

 ================== trace ================== 
trace fucntion name:strbuf_addf 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_4 = VDEF <.MEM_3(D)>
strbuf_addf (err_2(D), "asking for a quick stop\n");
strbuf_addf (err_2(D), "asking for a quick stop\n");
./benchmarks/git/use_after_free_2/git_uaf_2.c:406:9: warning: use location
this stmt is child function---strbuf_addf-----

 ================== trace ================== 
trace fucntion name:strbuf_addf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64eed2d318
    type <pointer_type 0x7f64eed13888
        type <record_type 0x7f64eed0c150 strbuf BLK
            size <integer_cst 0x7f64ef1fa078 constant 192>
            unit-size <integer_cst 0x7f64ef1fa048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed0c150 fields <field_decl 0x7f64eed08260 alloc> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed13888>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f64eed1b480 err>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f64eed21f90>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:task_finished========= [0m
[40;44m =======node_fun:no_job========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path no_job  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:strbuf_addf========= [0m
[40;33m =======POP node_fun stack:strbuf_addf========= [0m
[40;42m =======pre_check_funciton:no_job========= [0m
[40;42m =======start_check_funciton:no_job========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f64eed2d438
    type <pointer_type 0x7f64eed13888
        type <record_type 0x7f64eed0c150 strbuf BLK
            size <integer_cst 0x7f64ef1fa078 constant 192>
            unit-size <integer_cst 0x7f64ef1fa048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed0c150 fields <field_decl 0x7f64eed08260 alloc> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed13888>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f64eed1b680 err>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f64eed21fa8>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_4 = VDEF <.MEM_3(D)>
strbuf_addf (err_2(D), "no further jobs available\n");
strbuf_addf (err_2(D), "no further jobs available\n");
In function ‘no_job’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:396:9: warning: use location
  396 |         strbuf_addf(err, "no further jobs available\n");
      |         ^
this stmt is child function---strbuf_addf-----

 ================== trace ================== 
trace fucntion name:strbuf_addf 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_4 = VDEF <.MEM_3(D)>
strbuf_addf (err_2(D), "no further jobs available\n");
strbuf_addf (err_2(D), "no further jobs available\n");
./benchmarks/git/use_after_free_2/git_uaf_2.c:396:9: warning: use location
this stmt is child function---strbuf_addf-----

 ================== trace ================== 
trace fucntion name:strbuf_addf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64eed2d438
    type <pointer_type 0x7f64eed13888
        type <record_type 0x7f64eed0c150 strbuf BLK
            size <integer_cst 0x7f64ef1fa078 constant 192>
            unit-size <integer_cst 0x7f64ef1fa048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed0c150 fields <field_decl 0x7f64eed08260 alloc> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed13888>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f64eed1b680 err>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f64eed21fa8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:no_job========= [0m
[40;44m =======node_fun:parallel_next========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path parallel_next  function_call count: 2 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:strbuf_addf========= [0m
[40;33m =======POP node_fun stack:strbuf_addf========= [0m
[40;42m =======pre add _ fucntion:argv_array_pushv========= [0m
[40;33m =======POP node_fun stack:argv_array_pushv========= [0m
[40;42m =======pre_check_funciton:parallel_next========= [0m
[40;42m =======start_check_funciton:parallel_next========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f64eed2d5e8
    type <pointer_type 0x7f64eed170a8
        type <record_type 0x7f64eed13690 argv_array TI
            size <integer_cst 0x7f64ef1dcc00 constant 128>
            unit-size <integer_cst 0x7f64ef1dcc18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed13690 fields <field_decl 0x7f64eed10d10 argv> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed170a8>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _3 = &cp_10(D)->args;
    version:3
    ptr-info 0x7f64eed21fd8>
_3 = &cp_10(D)->args;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14(D)>
argv_array_pushv (_3, _2);
bb index := 3
# VUSE <.MEM_52>
return _24;
In function ‘parallel_next’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_52>
return _24;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14(D)>
argv_array_pushv (_3, _2);
bb index := 3
# VUSE <.MEM_13>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _6;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14(D)>
argv_array_pushv (_3, _2);
bb index := 3
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================
# .MEM_15 = VDEF <.MEM_14(D)>
argv_array_pushv (_3, _2);
argv_array_pushv (_3, _2);
./benchmarks/git/use_after_free_2/git_uaf_2.c:385:9: warning: use location
  385 |         argv_array_pushv(&cp->args, d->argv);
      |         ^
this stmt is child function---argv_array_pushv-----

 ================== trace ================== 
trace fucntion name:argv_array_pushv 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14(D)>
argv_array_pushv (_3, _2);
bb index := 3
# VUSE <.MEM_52>
return _24;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_52>
return _24;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14(D)>
argv_array_pushv (_3, _2);
bb index := 3
# VUSE <.MEM_13>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _6;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14(D)>
argv_array_pushv (_3, _2);
bb index := 3
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================
# .MEM_15 = VDEF <.MEM_14(D)>
argv_array_pushv (_3, _2);
argv_array_pushv (_3, _2);
./benchmarks/git/use_after_free_2/git_uaf_2.c:385:9: warning: use location
this stmt is child function---argv_array_pushv-----

 ================== trace ================== 
trace fucntion name:argv_array_pushv 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64eed2d5e8
    type <pointer_type 0x7f64eed170a8
        type <record_type 0x7f64eed13690 argv_array TI
            size <integer_cst 0x7f64ef1dcc00 constant 128>
            unit-size <integer_cst 0x7f64ef1dcc18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed13690 fields <field_decl 0x7f64eed10d10 argv> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed170a8>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _3 = &cp_10(D)->args;
    version:3
    ptr-info 0x7f64eed21fd8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f64eed2d798
    type <pointer_type 0x7f64eed13888
        type <record_type 0x7f64eed0c150 strbuf BLK
            size <integer_cst 0x7f64ef1fa078 constant 192>
            unit-size <integer_cst 0x7f64ef1fa048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed0c150 fields <field_decl 0x7f64eed08260 alloc> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed13888>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f64eed1b880 err>
    def_stmt GIMPLE_NOP
    version:12
    ptr-info 0x7f64eecfce88>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
strbuf_addf (err_12(D), "preloaded output of a child\n");
bb index := 3
# VUSE <.MEM_52>
return _24;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_52>
return _24;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
strbuf_addf (err_12(D), "preloaded output of a child\n");
bb index := 3
# VUSE <.MEM_13>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _6;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
strbuf_addf (err_12(D), "preloaded output of a child\n");
bb index := 3
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================
# .MEM_16 = VDEF <.MEM_15>
strbuf_addf (err_12(D), "preloaded output of a child\n");
strbuf_addf (err_12(D), "preloaded output of a child\n");
./benchmarks/git/use_after_free_2/git_uaf_2.c:386:9: warning: use location
  386 |         strbuf_addf(err, "preloaded output of a child\n");
      |         ^
this stmt is child function---strbuf_addf-----

 ================== trace ================== 
trace fucntion name:strbuf_addf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
strbuf_addf (err_12(D), "preloaded output of a child\n");
bb index := 3
# VUSE <.MEM_52>
return _24;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_52>
return _24;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
strbuf_addf (err_12(D), "preloaded output of a child\n");
bb index := 3
# VUSE <.MEM_13>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _6;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
strbuf_addf (err_12(D), "preloaded output of a child\n");
bb index := 3
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================
# .MEM_16 = VDEF <.MEM_15>
strbuf_addf (err_12(D), "preloaded output of a child\n");
strbuf_addf (err_12(D), "preloaded output of a child\n");
./benchmarks/git/use_after_free_2/git_uaf_2.c:386:9: warning: use location
this stmt is child function---strbuf_addf-----

 ================== trace ================== 
trace fucntion name:strbuf_addf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64eed2d798
    type <pointer_type 0x7f64eed13888
        type <record_type 0x7f64eed0c150 strbuf BLK
            size <integer_cst 0x7f64ef1fa078 constant 192>
            unit-size <integer_cst 0x7f64ef1fa048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed0c150 fields <field_decl 0x7f64eed08260 alloc> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed13888>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f64eed1b880 err>
    def_stmt GIMPLE_NOP
    version:12
    ptr-info 0x7f64eecfce88>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:parallel_next========= [0m
[40;44m =======node_fun:run_processes_parallel========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path run_processes_parallel  function_call count: 7 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:pp_cleanup========= [0m
[40;33m =======POP node_fun stack:pp_cleanup========= [0m
[40;42m =======pre add _ fucntion:kill_children========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path kill_children  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:kill========= [0m
[40;33m =======POP node_fun stack:kill========= [0m
[40;42m =======pre_check_funciton:kill_children========= [0m
[40;42m =======start_check_funciton:kill_children========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f64eed3c948
    type <integer_type 0x7f64ef1f15e8 int public SI
        size <integer_cst 0x7f64ef1dcdf8 constant 32>
        unit-size <integer_cst 0x7f64ef1dce10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64ef1f15e8 precision:32 min <integer_cst 0x7f64ef1dcdb0 -2147483648> max <integer_cst 0x7f64ef1dcdc8 2147483647>
        pointer_to_this <pointer_type 0x7f64ef1f89d8>>
   
    def_stmt _10 = _9->process.pid;
    version:10>
# VUSE <.MEM_21>
_10 = _9->process.pid;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_23 = VDEF <.MEM_21>
kill (_10, signo_17(D));
kill (_10, signo_17(D));
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:259:25: warning: use location
  259 |                         kill(pp->children[i].process.pid, signo);
      |                         ^
this stmt is child function---kill-----

 ================== trace ================== 
trace fucntion name:kill 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_23 = VDEF <.MEM_21>
kill (_10, signo_17(D));
kill (_10, signo_17(D));
./benchmarks/git/use_after_free_2/git_uaf_2.c:259:25: warning: use location
this stmt is child function---kill-----

 ================== trace ================== 
trace fucntion name:kill 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64eed3c948
    type <integer_type 0x7f64ef1f15e8 int public SI
        size <integer_cst 0x7f64ef1dcdf8 constant 32>
        unit-size <integer_cst 0x7f64ef1dce10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64ef1f15e8 precision:32 min <integer_cst 0x7f64ef1dcdb0 -2147483648> max <integer_cst 0x7f64ef1dcdc8 2147483647>
        pointer_to_this <pointer_type 0x7f64ef1f89d8>>
   
    def_stmt _10 = _9->process.pid;
    version:10>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:kill_children========= [0m
[40;42m =======pre add _ fucntion:pp_collect_finished========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path pp_collect_finished  function_call count: 5 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;33m =======POP node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:fputs========= [0m
[40;33m =======POP node_fun stack:fputs========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;33m =======POP node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;33m =======POP node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:finish_command========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path finish_command  function_call count: 2 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:child_process_clear========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path child_process_clear  function_call count: 1 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;33m =======POP node_fun stack:argv_array_clear========= [0m
[40;42m =======pre_check_funciton:child_process_clear========= [0m
[40;42m =======start_check_funciton:child_process_clear========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f64eed36318
    type <pointer_type 0x7f64eed170a8
        type <record_type 0x7f64eed13690 argv_array TI
            size <integer_cst 0x7f64ef1dcc00 constant 128>
            unit-size <integer_cst 0x7f64ef1dcc18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed13690 fields <field_decl 0x7f64eed10d10 argv> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed170a8>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _1 = &child_3(D)->args;
    version:1
    ptr-info 0x7f64eecfcf00>
_1 = &child_3(D)->args;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_5 = VDEF <.MEM_4(D)>
argv_array_clear (_1);
argv_array_clear (_1);
./benchmarks/git/use_after_free_2/git_uaf_2.c:328:9: warning: use location
  328 |         argv_array_clear(&child->args);
      |         ^
this stmt is child function---argv_array_clear-----

 ================== trace ================== 
trace fucntion name:argv_array_clear 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_5 = VDEF <.MEM_4(D)>
argv_array_clear (_1);
argv_array_clear (_1);
./benchmarks/git/use_after_free_2/git_uaf_2.c:328:9: warning: use location
this stmt is child function---argv_array_clear-----

 ================== trace ================== 
trace fucntion name:argv_array_clear 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64eed36318
    type <pointer_type 0x7f64eed170a8
        type <record_type 0x7f64eed13690 argv_array TI
            size <integer_cst 0x7f64ef1dcc00 constant 128>
            unit-size <integer_cst 0x7f64ef1dcc18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed13690 fields <field_decl 0x7f64eed10d10 argv> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed170a8>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _1 = &child_3(D)->args;
    version:1
    ptr-info 0x7f64eecfcf00>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f64eed36360
    type <pointer_type 0x7f64eed170a8
        type <record_type 0x7f64eed13690 argv_array TI
            size <integer_cst 0x7f64ef1dcc00 constant 128>
            unit-size <integer_cst 0x7f64ef1dcc18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed13690 fields <field_decl 0x7f64eed10d10 argv> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed170a8>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = &child_3(D)->env_array;
    version:2
    ptr-info 0x7f64eecfcf18>
_2 = &child_3(D)->env_array;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_6 = VDEF <.MEM_5>
argv_array_clear (_2);
argv_array_clear (_2);
./benchmarks/git/use_after_free_2/git_uaf_2.c:329:9: warning: use location
  329 |         argv_array_clear(&child->env_array);
      |         ^
this stmt is child function---argv_array_clear-----

 ================== trace ================== 
trace fucntion name:argv_array_clear 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_6 = VDEF <.MEM_5>
argv_array_clear (_2);
argv_array_clear (_2);
./benchmarks/git/use_after_free_2/git_uaf_2.c:329:9: warning: use location
this stmt is child function---argv_array_clear-----

 ================== trace ================== 
trace fucntion name:argv_array_clear 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64eed36360
    type <pointer_type 0x7f64eed170a8
        type <record_type 0x7f64eed13690 argv_array TI
            size <integer_cst 0x7f64ef1dcc00 constant 128>
            unit-size <integer_cst 0x7f64ef1dcc18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed13690 fields <field_decl 0x7f64eed10d10 argv> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed170a8>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = &child_3(D)->env_array;
    version:2
    ptr-info 0x7f64eecfcf18>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:child_process_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;33m =======POP node_fun stack:wait_or_whine========= [0m
[40;42m =======pre_check_funciton:finish_command========= [0m
[40;42m =======start_check_funciton:finish_command========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f64eed36558
    type <integer_type 0x7f64ef1f15e8 int public SI
        size <integer_cst 0x7f64ef1dcdf8 constant 32>
        unit-size <integer_cst 0x7f64ef1dce10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64ef1f15e8 precision:32 min <integer_cst 0x7f64ef1dcdb0 -2147483648> max <integer_cst 0x7f64ef1dcdc8 2147483647>
        pointer_to_this <pointer_type 0x7f64ef1f89d8>>
   
    def_stmt _3 = cmd_5(D)->pid;
    version:3>
# VUSE <.MEM_8(D)>
_3 = cmd_5(D)->pid;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
ret_7 = wait_or_whine (_3, _2, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:15: warning: use location
  321 |     int ret = wait_or_whine(cmd->pid, cmd->argv[0], 0);
      |               ^
this stmt is child function---wait_or_whine-----

 ================== trace ================== 
trace fucntion name:wait_or_whine 

 ================== trace ================== 
trace fucntion free:0 
ret_7 = wait_or_whine (_3, _2, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:15: warning: use location
this stmt is child function---wait_or_whine-----

 ================== trace ================== 
trace fucntion name:wait_or_whine 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64eed36558
    type <integer_type 0x7f64ef1f15e8 int public SI
        size <integer_cst 0x7f64ef1dcdf8 constant 32>
        unit-size <integer_cst 0x7f64ef1dce10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64ef1f15e8 precision:32 min <integer_cst 0x7f64ef1dcdb0 -2147483648> max <integer_cst 0x7f64ef1dcdc8 2147483647>
        pointer_to_this <pointer_type 0x7f64ef1f89d8>>
   
    def_stmt _3 = cmd_5(D)->pid;
    version:3>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f64eed365a0
    type <pointer_type 0x7f64eed137e0
        type <record_type 0x7f64eed13738 child_process BLK
            size <integer_cst 0x7f64eecfc978 constant 640>
            unit-size <integer_cst 0x7f64eecfc948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed13738 fields <field_decl 0x7f64eed15850 argv> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed137e0>>
        public unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f64eed1bd80 cmd>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7f64eecfcf78>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_10 = VDEF <.MEM_9>
child_process_clear (cmd_5(D));
child_process_clear (cmd_5(D));
./benchmarks/git/use_after_free_2/git_uaf_2.c:322:5: warning: use location
  322 |     child_process_clear(cmd);
      |     ^
this stmt is child function---child_process_clear-----

 ================== trace ================== 
trace fucntion name:child_process_clear 
[40;44m =======trace_function_path child_process_clear  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:child_process_clear========= [0m
[40;36m ======= find relate stmt with cmd ========= [0m
[40;36m ======= relate stmt argument:cmd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m

 ================== trace ================== 
trace fucntion free:0 
_3 = cmd_5(D)->pid;
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:15: warning: use location
  321 |     int ret = wait_or_whine(cmd->pid, cmd->argv[0], 0);
      |               ^
ret_7 = wait_or_whine (_3, _2, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:15: warning: use location
this stmt is child function---wait_or_whine-----

 ================== trace ================== 
trace fucntion name:wait_or_whine 

 ================== trace ================== 
trace fucntion free:0 
_1 = cmd_5(D)->argv;
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:42: warning: use location
  321 |     int ret = wait_or_whine(cmd->pid, cmd->argv[0], 0);
      |                                          ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64eed365a0
    type <pointer_type 0x7f64eed137e0
        type <record_type 0x7f64eed13738 child_process BLK
            size <integer_cst 0x7f64eecfc978 constant 640>
            unit-size <integer_cst 0x7f64eecfc948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed13738 fields <field_decl 0x7f64eed15850 argv> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed137e0>>
        public unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f64eed1bd80 cmd>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7f64eecfcf78>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:finish_command========= [0m
[40;42m =======pre_check_funciton:pp_collect_finished========= [0m
[40;42m =======start_check_funciton:pp_collect_finished========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f64eed36a20
    type <pointer_type 0x7f64eed137e0
        type <record_type 0x7f64eed13738 child_process BLK
            size <integer_cst 0x7f64eecfc978 constant 640>
            unit-size <integer_cst 0x7f64eecfc948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed13738 fields <field_decl 0x7f64eed15850 argv> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed137e0>>
        public unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _12 = &_11->process;
    version:12
    ptr-info 0x7f64eed5c048>
_12 = &_11->process;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_113 = VDEF <.MEM_111>
code_97 = finish_command (_12);
bb index := 7
# VUSE <.MEM_110>
return result_87;
In function ‘pp_collect_finished’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_113 = VDEF <.MEM_111>
code_97 = finish_command (_12);
bb index := 7
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_113 = VDEF <.MEM_111>
code_97 = finish_command (_12);
bb index := 7
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
code_97 = finish_command (_12);
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:275:24: warning: use location
  275 |                 code = finish_command(&pp->children[i].process);
      |                        ^
this stmt is child function---finish_command-----

 ================== trace ================== 
trace fucntion name:finish_command 
[40;44m =======trace_function_path finish_command  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:finish_command========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_clear========= [0m
[40;46m =======add node_fun stack:child_process_clear========= [0m
[40;44m =======trace_function_path child_process_clear  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:child_process_clear========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;46m =======add node_fun stack:wait_or_whine========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_113 = VDEF <.MEM_111>
code_97 = finish_command (_12);
bb index := 7
# VUSE <.MEM_110>
return result_87;
In function ‘pp_collect_finished’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_113 = VDEF <.MEM_111>
code_97 = finish_command (_12);
bb index := 7
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_113 = VDEF <.MEM_111>
code_97 = finish_command (_12);
bb index := 7
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
code_97 = finish_command (_12);
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:275:24: warning: use location
  275 |                 code = finish_command(&pp->children[i].process);
      |                        ^
this stmt is child function---finish_command-----

 ================== trace ================== 
trace fucntion name:finish_command 
[40;44m =======trace_function_path finish_command  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:finish_command========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_clear========= [0m
[40;46m =======add node_fun stack:child_process_clear========= [0m
[40;44m =======trace_function_path child_process_clear  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:child_process_clear========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;46m =======add node_fun stack:wait_or_whine========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64eed36a20
    type <pointer_type 0x7f64eed137e0
        type <record_type 0x7f64eed13738 child_process BLK
            size <integer_cst 0x7f64eecfc978 constant 640>
            unit-size <integer_cst 0x7f64eecfc948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed13738 fields <field_decl 0x7f64eed15850 argv> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed137e0>>
        public unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _12 = &_11->process;
    version:12
    ptr-info 0x7f64eed5c048>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f64eed3b360
    type <pointer_type 0x7f64eed137e0
        type <record_type 0x7f64eed13738 child_process BLK
            size <integer_cst 0x7f64eecfc978 constant 640>
            unit-size <integer_cst 0x7f64eecfc948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed13738 fields <field_decl 0x7f64eed15850 argv> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed137e0>>
        public unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _44 = &_43->process;
    version:44
    ptr-info 0x7f64eed5c1f8>
_44 = &_43->process;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_118 = VDEF <.MEM_117>
child_process_init (_44);
bb index := 10
# VUSE <.MEM_110>
return result_87;
In function ‘pp_collect_finished’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_118 = VDEF <.MEM_117>
child_process_init (_44);
bb index := 10
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_118 = VDEF <.MEM_117>
child_process_init (_44);
bb index := 10
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_118 = VDEF <.MEM_117>
child_process_init (_44);
child_process_init (_44);
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:289:17: warning: use location
  289 |                 child_process_init(&pp->children[i].process);
      |                 ^
this stmt is child function---child_process_init-----

 ================== trace ================== 
trace fucntion name:child_process_init 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_118 = VDEF <.MEM_117>
child_process_init (_44);
bb index := 10
# VUSE <.MEM_110>
return result_87;
In function ‘pp_collect_finished’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_118 = VDEF <.MEM_117>
child_process_init (_44);
bb index := 10
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_118 = VDEF <.MEM_117>
child_process_init (_44);
bb index := 10
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_118 = VDEF <.MEM_117>
child_process_init (_44);
child_process_init (_44);
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:289:17: warning: use location
  289 |                 child_process_init(&pp->children[i].process);
      |                 ^
this stmt is child function---child_process_init-----

 ================== trace ================== 
trace fucntion name:child_process_init 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64eed3b360
    type <pointer_type 0x7f64eed137e0
        type <record_type 0x7f64eed13738 child_process BLK
            size <integer_cst 0x7f64eecfc978 constant 640>
            unit-size <integer_cst 0x7f64eecfc948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed13738 fields <field_decl 0x7f64eed15850 argv> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed137e0>>
        public unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _44 = &_43->process;
    version:44
    ptr-info 0x7f64eed5c1f8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f64eed3b558
    type <pointer_type 0x7f64eed13888
        type <record_type 0x7f64eed0c150 strbuf BLK
            size <integer_cst 0x7f64ef1fa078 constant 192>
            unit-size <integer_cst 0x7f64ef1fa048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed0c150 fields <field_decl 0x7f64eed08260 alloc> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed13888>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _51 = &pp_91(D)->buffered_output;
    version:51
    ptr-info 0x7f64eed5c258>
_51 = &pp_91(D)->buffered_output;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_124 = VDEF <.MEM_118>
strbuf_addbuf (_51, _50);
strbuf_addbuf (_51, _50);
./benchmarks/git/use_after_free_2/git_uaf_2.c:292:25: warning: use location
  292 |                         strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);
      |                         ^
this stmt is child function---strbuf_addbuf-----

 ================== trace ================== 
trace fucntion name:strbuf_addbuf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_124 = VDEF <.MEM_118>
strbuf_addbuf (_51, _50);
strbuf_addbuf (_51, _50);
./benchmarks/git/use_after_free_2/git_uaf_2.c:292:25: warning: use location
this stmt is child function---strbuf_addbuf-----

 ================== trace ================== 
trace fucntion name:strbuf_addbuf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64eed3b558
    type <pointer_type 0x7f64eed13888
        type <record_type 0x7f64eed0c150 strbuf BLK
            size <integer_cst 0x7f64ef1fa078 constant 192>
            unit-size <integer_cst 0x7f64ef1fa048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed0c150 fields <field_decl 0x7f64eed08260 alloc> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed13888>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _51 = &pp_91(D)->buffered_output;
    version:51
    ptr-info 0x7f64eed5c258>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f64eed3b6c0
    type <pointer_type 0x7f64eed13888
        type <record_type 0x7f64eed0c150 strbuf BLK
            size <integer_cst 0x7f64ef1fa078 constant 192>
            unit-size <integer_cst 0x7f64ef1fa048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed0c150 fields <field_decl 0x7f64eed08260 alloc> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed13888>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _56 = &_55->err;
    version:56
    ptr-info 0x7f64eed5c2a0>
_56 = &_55->err;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_125 = VDEF <.MEM_124>
strbuf_reset (_56);
strbuf_reset (_56);
./benchmarks/git/use_after_free_2/git_uaf_2.c:293:25: warning: use location
  293 |                         strbuf_reset(&pp->children[i].err);
      |                         ^
this stmt is child function---strbuf_reset-----

 ================== trace ================== 
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_125 = VDEF <.MEM_124>
strbuf_reset (_56);
strbuf_reset (_56);
./benchmarks/git/use_after_free_2/git_uaf_2.c:293:25: warning: use location
this stmt is child function---strbuf_reset-----

 ================== trace ================== 
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64eed3b6c0
    type <pointer_type 0x7f64eed13888
        type <record_type 0x7f64eed0c150 strbuf BLK
            size <integer_cst 0x7f64ef1fa078 constant 192>
            unit-size <integer_cst 0x7f64ef1fa048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed0c150 fields <field_decl 0x7f64eed08260 alloc> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed13888>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _56 = &_55->err;
    version:56
    ptr-info 0x7f64eed5c2a0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f64eed3b870
    type <pointer_type 0x7f64eed0c000
        type <integer_type 0x7f64eed05930 char public QI
            size <integer_cst 0x7f64ef1dcca8 constant 8>
            unit-size <integer_cst 0x7f64ef1dccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64ef1f13f0 precision:8 min <integer_cst 0x7f64eecfc7b0 -128> max <integer_cst 0x7f64eecfc798 127>
            pointer_to_this <pointer_type 0x7f64eed0c000>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7f64eed0e690>>
   
    def_stmt _62 = _61->err.buf;
    version:62
    ptr-info 0x7f64eed5c300>
# VUSE <.MEM_118>
_62 = _61->err.buf;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_119 = VDEF <.MEM_118>
fputs (_62, _57);
fputs (_62, _57);
./benchmarks/git/use_after_free_2/git_uaf_2.c:295:25: warning: use location
  295 |                         fputs(pp->children[i].err.buf, stderr);
      |                         ^
this stmt is child function---fputs-----

 ================== trace ================== 
trace fucntion name:fputs 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_119 = VDEF <.MEM_118>
fputs (_62, _57);
fputs (_62, _57);
./benchmarks/git/use_after_free_2/git_uaf_2.c:295:25: warning: use location
this stmt is child function---fputs-----

 ================== trace ================== 
trace fucntion name:fputs 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64eed3b870
    type <pointer_type 0x7f64eed0c000
        type <integer_type 0x7f64eed05930 char public QI
            size <integer_cst 0x7f64ef1dcca8 constant 8>
            unit-size <integer_cst 0x7f64ef1dccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64ef1f13f0 precision:8 min <integer_cst 0x7f64eecfc7b0 -128> max <integer_cst 0x7f64eecfc798 127>
            pointer_to_this <pointer_type 0x7f64eed0c000>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7f64eed0e690>>
   
    def_stmt _62 = _61->err.buf;
    version:62
    ptr-info 0x7f64eed5c300>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f64eed3b9d8
    type <pointer_type 0x7f64eed13888
        type <record_type 0x7f64eed0c150 strbuf BLK
            size <integer_cst 0x7f64ef1fa078 constant 192>
            unit-size <integer_cst 0x7f64ef1fa048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed0c150 fields <field_decl 0x7f64eed08260 alloc> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed13888>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _67 = &_66->err;
    version:67
    ptr-info 0x7f64eed5c348>
_67 = &_66->err;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_120 = VDEF <.MEM_119>
strbuf_reset (_67);
strbuf_reset (_67);
./benchmarks/git/use_after_free_2/git_uaf_2.c:296:25: warning: use location
  296 |                         strbuf_reset(&pp->children[i].err);
      |                         ^
this stmt is child function---strbuf_reset-----

 ================== trace ================== 
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_120 = VDEF <.MEM_119>
strbuf_reset (_67);
strbuf_reset (_67);
./benchmarks/git/use_after_free_2/git_uaf_2.c:296:25: warning: use location
this stmt is child function---strbuf_reset-----

 ================== trace ================== 
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64eed3b9d8
    type <pointer_type 0x7f64eed13888
        type <record_type 0x7f64eed0c150 strbuf BLK
            size <integer_cst 0x7f64ef1fa078 constant 192>
            unit-size <integer_cst 0x7f64ef1fa048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed0c150 fields <field_decl 0x7f64eed08260 alloc> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed13888>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _67 = &_66->err;
    version:67
    ptr-info 0x7f64eed5c348>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f64eed3ba68
    type <pointer_type 0x7f64eed0c000
        type <integer_type 0x7f64eed05930 char public QI
            size <integer_cst 0x7f64ef1dcca8 constant 8>
            unit-size <integer_cst 0x7f64ef1dccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64ef1f13f0 precision:8 min <integer_cst 0x7f64eecfc7b0 -128> max <integer_cst 0x7f64eecfc798 127>
            pointer_to_this <pointer_type 0x7f64eed0c000>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7f64eed0e690>>
   
    def_stmt _69 = pp_91(D)->buffered_output.buf;
    version:69
    ptr-info 0x7f64eed5c378>
# VUSE <.MEM_120>
_69 = pp_91(D)->buffered_output.buf;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_121 = VDEF <.MEM_120>
fputs (_69, _68);
fputs (_69, _68);
./benchmarks/git/use_after_free_2/git_uaf_2.c:299:25: warning: use location
  299 |                         fputs(pp->buffered_output.buf, stderr);
      |                         ^
this stmt is child function---fputs-----

 ================== trace ================== 
trace fucntion name:fputs 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_121 = VDEF <.MEM_120>
fputs (_69, _68);
fputs (_69, _68);
./benchmarks/git/use_after_free_2/git_uaf_2.c:299:25: warning: use location
this stmt is child function---fputs-----

 ================== trace ================== 
trace fucntion name:fputs 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64eed3ba68
    type <pointer_type 0x7f64eed0c000
        type <integer_type 0x7f64eed05930 char public QI
            size <integer_cst 0x7f64ef1dcca8 constant 8>
            unit-size <integer_cst 0x7f64ef1dccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64ef1f13f0 precision:8 min <integer_cst 0x7f64eecfc7b0 -128> max <integer_cst 0x7f64eecfc798 127>
            pointer_to_this <pointer_type 0x7f64eed0c000>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7f64eed0e690>>
   
    def_stmt _69 = pp_91(D)->buffered_output.buf;
    version:69
    ptr-info 0x7f64eed5c378>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f64eed3bab0
    type <pointer_type 0x7f64eed13888
        type <record_type 0x7f64eed0c150 strbuf BLK
            size <integer_cst 0x7f64ef1fa078 constant 192>
            unit-size <integer_cst 0x7f64ef1fa048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed0c150 fields <field_decl 0x7f64eed08260 alloc> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed13888>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _70 = &pp_91(D)->buffered_output;
    version:70
    ptr-info 0x7f64eed5c390>
_70 = &pp_91(D)->buffered_output;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_122 = VDEF <.MEM_121>
strbuf_reset (_70);
strbuf_reset (_70);
./benchmarks/git/use_after_free_2/git_uaf_2.c:300:25: warning: use location
  300 |                         strbuf_reset(&pp->buffered_output);
      |                         ^
this stmt is child function---strbuf_reset-----

 ================== trace ================== 
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_122 = VDEF <.MEM_121>
strbuf_reset (_70);
strbuf_reset (_70);
./benchmarks/git/use_after_free_2/git_uaf_2.c:300:25: warning: use location
this stmt is child function---strbuf_reset-----

 ================== trace ================== 
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64eed3bab0
    type <pointer_type 0x7f64eed13888
        type <record_type 0x7f64eed0c150 strbuf BLK
            size <integer_cst 0x7f64ef1fa078 constant 192>
            unit-size <integer_cst 0x7f64ef1fa048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed0c150 fields <field_decl 0x7f64eed08260 alloc> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed13888>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _70 = &pp_91(D)->buffered_output;
    version:70
    ptr-info 0x7f64eed5c390>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:pp_collect_finished========= [0m
[40;42m =======pre add _ fucntion:pp_output========= [0m
[40;33m =======POP node_fun stack:pp_output========= [0m
[40;42m =======pre add _ fucntion:pp_buffer_stderr========= [0m
[40;33m =======POP node_fun stack:pp_buffer_stderr========= [0m
[40;42m =======pre add _ fucntion:pp_start_one========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path pp_start_one  function_call count: 5 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;33m =======POP node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;33m =======POP node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:start_command========= [0m
[40;33m =======POP node_fun stack:start_command========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:pp_start_one========= [0m
[40;42m =======start_check_funciton:pp_start_one========= [0m

dot graph START

======================================================================
 <addr_expr 0x7f64eed2ca80
    type <pointer_type 0x7f64eed16d20
        type <array_type 0x7f64eed16c78 type <integer_type 0x7f64eed05930 char>
            BLK
            size <integer_cst 0x7f64eecfccf0 constant 216>
            unit-size <integer_cst 0x7f64eecfccd8 constant 27>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f64eed16bd0>
            pointer_to_this <pointer_type 0x7f64eed16d20>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f64eed48090 type <array_type 0x7f64eed16c78>
        readonly constant static "BUG: bookkeeping is hard%s\000">
    ./benchmarks/git/use_after_free_2/git_uaf_2.c:220:3 start: ./benchmarks/git/use_after_free_2/git_uaf_2.c:220:3 finish: ./benchmarks/git/use_after_free_2/git_uaf_2.c:220:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f64eed45480
    type <pointer_type 0x7f64eed13888
        type <record_type 0x7f64eed0c150 strbuf BLK
            size <integer_cst 0x7f64ef1fa078 constant 192>
            unit-size <integer_cst 0x7f64ef1fa048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed0c150 fields <field_decl 0x7f64eed08260 alloc> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed13888>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _30 = &pp_102(D)->buffered_output;
    version:30
    ptr-info 0x7f64eed5c5e8>
_30 = &pp_102(D)->buffered_output;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_130 = VDEF <.MEM_118>
strbuf_addbuf (_30, _29);
bb index := 9
# VUSE <.MEM_46>
return 0;
In function ‘pp_start_one’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_130 = VDEF <.MEM_118>
strbuf_addbuf (_30, _29);
bb index := 9
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================
# .MEM_130 = VDEF <.MEM_118>
strbuf_addbuf (_30, _29);
strbuf_addbuf (_30, _29);
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:227:17: warning: use location
  227 |                 strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);
      |                 ^
this stmt is child function---strbuf_addbuf-----

 ================== trace ================== 
trace fucntion name:strbuf_addbuf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_130 = VDEF <.MEM_118>
strbuf_addbuf (_30, _29);
bb index := 9
# VUSE <.MEM_46>
return 0;
In function ‘pp_start_one’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_130 = VDEF <.MEM_118>
strbuf_addbuf (_30, _29);
bb index := 9
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================
# .MEM_130 = VDEF <.MEM_118>
strbuf_addbuf (_30, _29);
strbuf_addbuf (_30, _29);
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:227:17: warning: use location
  227 |                 strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);
      |                 ^
this stmt is child function---strbuf_addbuf-----

 ================== trace ================== 
trace fucntion name:strbuf_addbuf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64eed45480
    type <pointer_type 0x7f64eed13888
        type <record_type 0x7f64eed0c150 strbuf BLK
            size <integer_cst 0x7f64ef1fa078 constant 192>
            unit-size <integer_cst 0x7f64ef1fa048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed0c150 fields <field_decl 0x7f64eed08260 alloc> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed13888>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _30 = &pp_102(D)->buffered_output;
    version:30
    ptr-info 0x7f64eed5c5e8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f64eed455e8
    type <pointer_type 0x7f64eed13888
        type <record_type 0x7f64eed0c150 strbuf BLK
            size <integer_cst 0x7f64ef1fa078 constant 192>
            unit-size <integer_cst 0x7f64ef1fa048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed0c150 fields <field_decl 0x7f64eed08260 alloc> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed13888>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _35 = &_34->err;
    version:35
    ptr-info 0x7f64eed5c630>
_35 = &_34->err;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_131 = VDEF <.MEM_130>
strbuf_reset (_35);
bb index := 9
# VUSE <.MEM_46>
return 0;
In function ‘pp_start_one’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_131 = VDEF <.MEM_130>
strbuf_reset (_35);
bb index := 9
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================
# .MEM_131 = VDEF <.MEM_130>
strbuf_reset (_35);
strbuf_reset (_35);
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:228:17: warning: use location
  228 |                 strbuf_reset(&pp->children[i].err);
      |                 ^
this stmt is child function---strbuf_reset-----

 ================== trace ================== 
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_131 = VDEF <.MEM_130>
strbuf_reset (_35);
bb index := 9
# VUSE <.MEM_46>
return 0;
In function ‘pp_start_one’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_131 = VDEF <.MEM_130>
strbuf_reset (_35);
bb index := 9
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================
# .MEM_131 = VDEF <.MEM_130>
strbuf_reset (_35);
strbuf_reset (_35);
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:228:17: warning: use location
  228 |                 strbuf_reset(&pp->children[i].err);
      |                 ^
this stmt is child function---strbuf_reset-----

 ================== trace ================== 
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64eed455e8
    type <pointer_type 0x7f64eed13888
        type <record_type 0x7f64eed0c150 strbuf BLK
            size <integer_cst 0x7f64ef1fa078 constant 192>
            unit-size <integer_cst 0x7f64ef1fa048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed0c150 fields <field_decl 0x7f64eed08260 alloc> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed13888>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _35 = &_34->err;
    version:35
    ptr-info 0x7f64eed5c630>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f64eed45ab0
    type <pointer_type 0x7f64eed137e0
        type <record_type 0x7f64eed13738 child_process BLK
            size <integer_cst 0x7f64eecfc978 constant 640>
            unit-size <integer_cst 0x7f64eecfc948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed13738 fields <field_decl 0x7f64eed15850 argv> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed137e0>>
        public unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _52 = &_51->process;
    version:52
    ptr-info 0x7f64eed5c708>
_52 = &_51->process;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_53 = start_command (_52);
./benchmarks/git/use_after_free_2/git_uaf_2.c:235:13: warning: use location
  235 |         if (start_command(&pp->children[i].process)) {
      |             ^
this stmt is child function---start_command-----

 ================== trace ================== 
trace fucntion name:start_command 

 ================== trace ================== 
trace fucntion free:0 
if (_53 != 0)
./benchmarks/git/use_after_free_2/git_uaf_2.c:235:12: warning: use location
  235 |         if (start_command(&pp->children[i].process)) {
      |            ^
if (_53 != 0)

 ================== find cond branch ================= 
./benchmarks/git/use_after_free_2/git_uaf_2.c:235:12: warning: use location
Cond in fucntion pp_start_one basic block 10
 ================== possible direct basic block ================= 
from pp_start_one basic block 11
 ================== possible direct basic block ================= 
from pp_start_one basic block 14
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64eed45ab0
    type <pointer_type 0x7f64eed137e0
        type <record_type 0x7f64eed13738 child_process BLK
            size <integer_cst 0x7f64eecfc978 constant 640>
            unit-size <integer_cst 0x7f64eecfc948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed13738 fields <field_decl 0x7f64eed15850 argv> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed137e0>>
        public unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _52 = &_51->process;
    version:52
    ptr-info 0x7f64eed5c708>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f64eed461b0
    type <pointer_type 0x7f64eed13888
        type <record_type 0x7f64eed0c150 strbuf BLK
            size <integer_cst 0x7f64ef1fa078 constant 192>
            unit-size <integer_cst 0x7f64ef1fa048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed0c150 fields <field_decl 0x7f64eed08260 alloc> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed13888>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _76 = &pp_102(D)->buffered_output;
    version:76
    ptr-info 0x7f64eed5c870>
_76 = &pp_102(D)->buffered_output;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_127 = VDEF <.MEM_126>
strbuf_addbuf (_76, _75);
strbuf_addbuf (_76, _75);
./benchmarks/git/use_after_free_2/git_uaf_2.c:240:17: warning: use location
  240 |                 strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);
      |                 ^
this stmt is child function---strbuf_addbuf-----

 ================== trace ================== 
trace fucntion name:strbuf_addbuf 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_127 = VDEF <.MEM_126>
strbuf_addbuf (_76, _75);
strbuf_addbuf (_76, _75);
./benchmarks/git/use_after_free_2/git_uaf_2.c:240:17: warning: use location
this stmt is child function---strbuf_addbuf-----

 ================== trace ================== 
trace fucntion name:strbuf_addbuf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64eed461b0
    type <pointer_type 0x7f64eed13888
        type <record_type 0x7f64eed0c150 strbuf BLK
            size <integer_cst 0x7f64ef1fa078 constant 192>
            unit-size <integer_cst 0x7f64ef1fa048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed0c150 fields <field_decl 0x7f64eed08260 alloc> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed13888>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _76 = &pp_102(D)->buffered_output;
    version:76
    ptr-info 0x7f64eed5c870>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f64eed46318
    type <pointer_type 0x7f64eed13888
        type <record_type 0x7f64eed0c150 strbuf BLK
            size <integer_cst 0x7f64ef1fa078 constant 192>
            unit-size <integer_cst 0x7f64ef1fa048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed0c150 fields <field_decl 0x7f64eed08260 alloc> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed13888>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _81 = &_80->err;
    version:81
    ptr-info 0x7f64eed5c8b8>
_81 = &_80->err;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_128 = VDEF <.MEM_127>
strbuf_reset (_81);
strbuf_reset (_81);
./benchmarks/git/use_after_free_2/git_uaf_2.c:241:17: warning: use location
  241 |                 strbuf_reset(&pp->children[i].err);
      |                 ^
this stmt is child function---strbuf_reset-----

 ================== trace ================== 
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_128 = VDEF <.MEM_127>
strbuf_reset (_81);
strbuf_reset (_81);
./benchmarks/git/use_after_free_2/git_uaf_2.c:241:17: warning: use location
this stmt is child function---strbuf_reset-----

 ================== trace ================== 
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64eed46318
    type <pointer_type 0x7f64eed13888
        type <record_type 0x7f64eed0c150 strbuf BLK
            size <integer_cst 0x7f64ef1fa078 constant 192>
            unit-size <integer_cst 0x7f64ef1fa048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed0c150 fields <field_decl 0x7f64eed08260 alloc> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed13888>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _81 = &_80->err;
    version:81
    ptr-info 0x7f64eed5c8b8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:pp_start_one========= [0m
[40;42m =======pre add _ fucntion:pp_init========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path pp_init  function_call count: 7 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;33m =======POP node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;33m =======POP node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;33m =======POP node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;33m =======POP node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;33m =======POP node_fun stack:online_cpus========= [0m
[40;42m =======pre_check_funciton:pp_init========= [0m
[40;42m =======start_check_funciton:pp_init========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f64eed46ee8
    type <pointer_type 0x7f64ef1f8000
        type <void_type 0x7f64ef1f1f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f64ef1f8000>>
        public unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f64eed05498>>
   
    def_stmt _2 = calloc (_1, 120);
    version:2
    ptr-info 0x7f64eed5c978>
# .MEM_72 = VDEF <.MEM_71>
_2 = calloc (_1, 120);

 ================== trace ptable================== 
trace fucntion name:calloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---calloc-----
this Reserved word function ------calloc-----
 
 Start check Pointer Collect  

======================================================================
_2 = calloc (_1, 120);
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:24: warning: use location
  191 |         pp->children = xcalloc(n, sizeof(*pp->children));
      |                        ^
this stmt is child function---calloc-----

 ================== trace ================== 
pp_34(D)->children = _2;
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:22: warning: use location
  191 |         pp->children = xcalloc(n, sizeof(*pp->children));
      |                      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_80>
_20 = pp_34(D)->pfd;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_80>
_20 = pp_34(D)->pfd;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = pp_34(D)->pfd;
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:19: warning: use location
  199 |                 pp->pfd[i].fd = -1;
      |                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_79>
_16 = pp_34(D)->pfd;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_79>
_16 = pp_34(D)->pfd;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = pp_34(D)->pfd;
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:19: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = _16 + _18;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = _16 + _18;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = _16 + _18;
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:24: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_80 = VDEF <.MEM_79>
_19->events = 17;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_80 = VDEF <.MEM_79>
_19->events = 17;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19->events = 17;
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:35: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_78>
_11 = pp_34(D)->children;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_78>
_11 = pp_34(D)->children;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = pp_34(D)->children;
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:39: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _11 + _13;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _11 + _13;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = _11 + _13;
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:49: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = &_14->process;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = &_14->process;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = &_14->process;
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_78>
child_process_init (_15);
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_78>
child_process_init (_15);
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
child_process_init (_15);
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                 ^
this stmt is child function---child_process_init-----

 ================== trace ================== 
trace fucntion name:child_process_init 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_60>
_6 = pp_34(D)->children;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_60>
_6 = pp_34(D)->children;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = pp_34(D)->children;
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:32: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = _6 + _8;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = _6 + _8;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = _6 + _8;
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:42: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = &_9->err;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = &_9->err;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = &_9->err;
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_60>
strbuf_init (_10, 0);
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_60>
strbuf_init (_10, 0);
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strbuf_init (_10, 0);
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                 ^
this stmt is child function---strbuf_init-----

 ================== trace ================== 
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 
_5 = &pp_34(D)->buffered_output;
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: use location
  193 |         strbuf_init(&pp->buffered_output, 0);
      |         ^
strbuf_init (_5, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: use location
this stmt is child function---strbuf_init-----

 ================== trace ================== 
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 
pp_34(D)->pfd = _4;
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:17: warning: use location
  192 |         pp->pfd = xcalloc(n, sizeof(*pp->pfd));
      |                 ^
pp_34(D)->pfd = _4;
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:17: warning: use location
pp_34(D)->shutdown = 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:190:22: warning: use location
  190 |         pp->shutdown = 0;
      |                      ^
pp_34(D)->output_owner = 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:189:26: warning: use location
  189 |         pp->output_owner = 0;
      |                          ^
pp_34(D)->nr_processes = 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:188:26: warning: use location
  188 |         pp->nr_processes = 0;
      |                          ^
pp_34(D)->task_finished = _27;
./benchmarks/git/use_after_free_2/git_uaf_2.c:186:27: warning: use location
  186 |         pp->task_finished = task_finished ? task_finished : default_task_finished;
      |                           ^
pp_34(D)->task_finished = _27;
./benchmarks/git/use_after_free_2/git_uaf_2.c:186:27: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
pp_34(D)->start_failure = _26;
bb index := 8
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
pp_34(D)->start_failure = _26;
bb index := 8
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
pp_34(D)->start_failure = _26;
bb index := 8
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 13

======================================================================
pp_34(D)->start_failure = _26;
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:185:27: warning: use location
  185 |         pp->start_failure = start_failure ? start_failure : default_start_failure;
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
pp_34(D)->start_failure = _26;
bb index := 8
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
pp_34(D)->start_failure = _26;
bb index := 8
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
pp_34(D)->start_failure = _26;
bb index := 8
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 13

======================================================================
pp_34(D)->start_failure = _26;
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:185:27: warning: use location
  185 |         pp->start_failure = start_failure ? start_failure : default_start_failure;
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
pp_34(D)->get_next_task = get_next_task_39(D);
bb index := 6
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
pp_34(D)->get_next_task = get_next_task_39(D);
bb index := 6
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
pp_34(D)->get_next_task = get_next_task_39(D);
bb index := 6
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 13

======================================================================
pp_34(D)->get_next_task = get_next_task_39(D);
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:183:27: warning: use location
  183 |         pp->get_next_task = get_next_task;
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
pp_34(D)->get_next_task = get_next_task_39(D);
bb index := 6
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
pp_34(D)->get_next_task = get_next_task_39(D);
bb index := 6
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
pp_34(D)->get_next_task = get_next_task_39(D);
bb index := 6
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 13

======================================================================
pp_34(D)->get_next_task = get_next_task_39(D);
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:183:27: warning: use location
  183 |         pp->get_next_task = get_next_task;
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (get_next_task_39(D) == 0B)
bb index := 4
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (get_next_task_39(D) == 0B)
bb index := 4
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (get_next_task_39(D) == 0B)
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (get_next_task_39(D) == 0B)
bb index := 4
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (get_next_task_39(D) == 0B)
bb index := 4
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (get_next_task_39(D) == 0B)
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
if (get_next_task_39(D) == 0B)
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:181:12: warning: use location
  181 |         if (!get_next_task)
      |            ^
if (get_next_task_39(D) == 0B)

 ================== find cond branch ================= 
./benchmarks/git/use_after_free_2/git_uaf_2.c:181:12: warning: use location
Cond in fucntion pp_init basic block 4
 ================== possible direct basic block ================= 
from pp_init basic block 5
 ================== possible direct basic block ================= 
from pp_init basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
pp_34(D)->data = data_37(D);
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:180:18: warning: use location
  180 |         pp->data = data;
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
pp_34(D)->data = data_37(D);
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:180:18: warning: use location
  180 |         pp->data = data;
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_59>
pp_34(D)->max_processes = n_24;
bb index := 4
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_59>
pp_34(D)->max_processes = n_24;
bb index := 4
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_59>
pp_34(D)->max_processes = n_24;
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_59>
pp_34(D)->max_processes = n_24;
bb index := 4
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_59>
pp_34(D)->max_processes = n_24;
bb index := 4
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_59>
pp_34(D)->max_processes = n_24;
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
pp_34(D)->max_processes = n_24;
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:176:27: warning: use location
  176 |         pp->max_processes = n;
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (n_24 > i_25)
bb index := 12
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (n_24 > i_25)
bb index := 12
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (n_24 > i_25)
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:195:23: warning: use location
  195 |         for (i = 0; i < n; i++) {
      |                       ^
if (n_24 > i_25)

 ================== find cond branch ================= 
./benchmarks/git/use_after_free_2/git_uaf_2.c:195:23: warning: use location
Cond in fucntion pp_init basic block 12
 ================== possible direct basic block ================= 
from pp_init basic block 11
 ================== possible direct basic block ================= 
from pp_init basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_3 = (long unsigned int) n_24;
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:19: warning: use location
  192 |         pp->pfd = xcalloc(n, sizeof(*pp->pfd));
      |                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
bb index := 4
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
bb index := 4
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
bb index := 4
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
bb index := 4
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:178:9: warning: use location
  178 |         trace_printf("run_processes_parallel: preparing to run up to %d tasks", n);
      |         ^
this stmt is child function---trace_printf-----

 ================== trace ================== 
trace fucntion name:trace_printf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64eed46ee8
    type <pointer_type 0x7f64ef1f8000
        type <void_type 0x7f64ef1f1f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f64ef1f8000>>
        public unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f64eed05498>>
   
    def_stmt _2 = calloc (_1, 120);
    version:2
    ptr-info 0x7f64eed5c978>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f64eed46f78
    type <pointer_type 0x7f64ef1f8000
        type <void_type 0x7f64ef1f1f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f64ef1f8000>>
        public unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f64eed05498>>
   
    def_stmt _4 = calloc (_3, 8);
    version:4
    ptr-info 0x7f64eed5c990>
# .MEM_74 = VDEF <.MEM_73>
_4 = calloc (_3, 8);

 ================== trace ptable================== 
trace fucntion name:calloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---calloc-----
this Reserved word function ------calloc-----
 
 Start check Pointer Collect  

======================================================================
_4 = calloc (_3, 8);
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:19: warning: use location
  192 |         pp->pfd = xcalloc(n, sizeof(*pp->pfd));
      |                   ^
this stmt is child function---calloc-----

 ================== trace ================== 
pp_34(D)->pfd = _4;
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:17: warning: use location
  192 |         pp->pfd = xcalloc(n, sizeof(*pp->pfd));
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_80>
_20 = pp_34(D)->pfd;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_80>
_20 = pp_34(D)->pfd;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = pp_34(D)->pfd;
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:19: warning: use location
  199 |                 pp->pfd[i].fd = -1;
      |                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_79>
_16 = pp_34(D)->pfd;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_79>
_16 = pp_34(D)->pfd;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = pp_34(D)->pfd;
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:19: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = _16 + _18;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = _16 + _18;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = _16 + _18;
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:24: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_80 = VDEF <.MEM_79>
_19->events = 17;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_80 = VDEF <.MEM_79>
_19->events = 17;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19->events = 17;
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:35: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_78>
_11 = pp_34(D)->children;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_78>
_11 = pp_34(D)->children;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = pp_34(D)->children;
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:39: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _11 + _13;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _11 + _13;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = _11 + _13;
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:49: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = &_14->process;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = &_14->process;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = &_14->process;
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_78>
child_process_init (_15);
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_78>
child_process_init (_15);
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
child_process_init (_15);
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                 ^
this stmt is child function---child_process_init-----

 ================== trace ================== 
trace fucntion name:child_process_init 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_60>
_6 = pp_34(D)->children;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_60>
_6 = pp_34(D)->children;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = pp_34(D)->children;
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:32: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = _6 + _8;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = _6 + _8;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = _6 + _8;
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:42: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = &_9->err;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = &_9->err;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = &_9->err;
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_60>
strbuf_init (_10, 0);
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_60>
strbuf_init (_10, 0);
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strbuf_init (_10, 0);
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                 ^
this stmt is child function---strbuf_init-----

 ================== trace ================== 
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 
_5 = &pp_34(D)->buffered_output;
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: use location
  193 |         strbuf_init(&pp->buffered_output, 0);
      |         ^
strbuf_init (_5, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: use location
this stmt is child function---strbuf_init-----

 ================== trace ================== 
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 
pp_34(D)->children = _2;
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:22: warning: use location
  191 |         pp->children = xcalloc(n, sizeof(*pp->children));
      |                      ^
pp_34(D)->children = _2;
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:22: warning: use location
pp_34(D)->shutdown = 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:190:22: warning: use location
  190 |         pp->shutdown = 0;
      |                      ^
pp_34(D)->output_owner = 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:189:26: warning: use location
  189 |         pp->output_owner = 0;
      |                          ^
pp_34(D)->nr_processes = 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:188:26: warning: use location
  188 |         pp->nr_processes = 0;
      |                          ^
pp_34(D)->task_finished = _27;
./benchmarks/git/use_after_free_2/git_uaf_2.c:186:27: warning: use location
  186 |         pp->task_finished = task_finished ? task_finished : default_task_finished;
      |                           ^
pp_34(D)->task_finished = _27;
./benchmarks/git/use_after_free_2/git_uaf_2.c:186:27: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
pp_34(D)->start_failure = _26;
bb index := 8
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
pp_34(D)->start_failure = _26;
bb index := 8
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
pp_34(D)->start_failure = _26;
bb index := 8
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 13

======================================================================
pp_34(D)->start_failure = _26;
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:185:27: warning: use location
  185 |         pp->start_failure = start_failure ? start_failure : default_start_failure;
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
pp_34(D)->start_failure = _26;
bb index := 8
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
pp_34(D)->start_failure = _26;
bb index := 8
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
pp_34(D)->start_failure = _26;
bb index := 8
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 13

======================================================================
pp_34(D)->start_failure = _26;
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:185:27: warning: use location
  185 |         pp->start_failure = start_failure ? start_failure : default_start_failure;
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
pp_34(D)->get_next_task = get_next_task_39(D);
bb index := 6
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
pp_34(D)->get_next_task = get_next_task_39(D);
bb index := 6
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
pp_34(D)->get_next_task = get_next_task_39(D);
bb index := 6
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 13

======================================================================
pp_34(D)->get_next_task = get_next_task_39(D);
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:183:27: warning: use location
  183 |         pp->get_next_task = get_next_task;
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
pp_34(D)->get_next_task = get_next_task_39(D);
bb index := 6
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
pp_34(D)->get_next_task = get_next_task_39(D);
bb index := 6
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
pp_34(D)->get_next_task = get_next_task_39(D);
bb index := 6
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 13

======================================================================
pp_34(D)->get_next_task = get_next_task_39(D);
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:183:27: warning: use location
  183 |         pp->get_next_task = get_next_task;
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (get_next_task_39(D) == 0B)
bb index := 4
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (get_next_task_39(D) == 0B)
bb index := 4
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (get_next_task_39(D) == 0B)
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (get_next_task_39(D) == 0B)
bb index := 4
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (get_next_task_39(D) == 0B)
bb index := 4
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (get_next_task_39(D) == 0B)
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
if (get_next_task_39(D) == 0B)
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:181:12: warning: use location
  181 |         if (!get_next_task)
      |            ^
if (get_next_task_39(D) == 0B)

 ================== find cond branch ================= 
./benchmarks/git/use_after_free_2/git_uaf_2.c:181:12: warning: use location
Cond in fucntion pp_init basic block 4
 ================== possible direct basic block ================= 
from pp_init basic block 5
 ================== possible direct basic block ================= 
from pp_init basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
pp_34(D)->data = data_37(D);
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:180:18: warning: use location
  180 |         pp->data = data;
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
pp_34(D)->data = data_37(D);
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:180:18: warning: use location
  180 |         pp->data = data;
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_59>
pp_34(D)->max_processes = n_24;
bb index := 4
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_59>
pp_34(D)->max_processes = n_24;
bb index := 4
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_59>
pp_34(D)->max_processes = n_24;
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_59>
pp_34(D)->max_processes = n_24;
bb index := 4
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_59>
pp_34(D)->max_processes = n_24;
bb index := 4
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_59>
pp_34(D)->max_processes = n_24;
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
pp_34(D)->max_processes = n_24;
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:176:27: warning: use location
  176 |         pp->max_processes = n;
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (n_24 > i_25)
bb index := 12
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (n_24 > i_25)
bb index := 12
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (n_24 > i_25)
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:195:23: warning: use location
  195 |         for (i = 0; i < n; i++) {
      |                       ^
if (n_24 > i_25)

 ================== find cond branch ================= 
./benchmarks/git/use_after_free_2/git_uaf_2.c:195:23: warning: use location
Cond in fucntion pp_init basic block 12
 ================== possible direct basic block ================= 
from pp_init basic block 11
 ================== possible direct basic block ================= 
from pp_init basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_1 = (long unsigned int) n_24;
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:24: warning: use location
  191 |         pp->children = xcalloc(n, sizeof(*pp->children));
      |                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
bb index := 4
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
bb index := 4
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
bb index := 4
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
bb index := 4
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:178:9: warning: use location
  178 |         trace_printf("run_processes_parallel: preparing to run up to %d tasks", n);
      |         ^
this stmt is child function---trace_printf-----

 ================== trace ================== 
trace fucntion name:trace_printf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64eed46f78
    type <pointer_type 0x7f64ef1f8000
        type <void_type 0x7f64ef1f1f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f64ef1f8000>>
        public unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f64eed05498>>
   
    def_stmt _4 = calloc (_3, 8);
    version:4
    ptr-info 0x7f64eed5c990>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f64eed506c0
    type <integer_type 0x7f64ef1f15e8 int public SI
        size <integer_cst 0x7f64ef1dcdf8 constant 32>
        unit-size <integer_cst 0x7f64ef1dce10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64ef1f15e8 precision:32 min <integer_cst 0x7f64ef1dcdb0 -2147483648> max <integer_cst 0x7f64ef1dcdc8 2147483647>
        pointer_to_this <pointer_type 0x7f64ef1f89d8>>
    var <parm_decl 0x7f64eed4e000 n>
    def_stmt n_33 = online_cpus ();
    version:33>
# .MEM_62 = VDEF <.MEM_61(D)>
n_33 = online_cpus ();

 ================== trace ptable================== 
trace fucntion name:online_cpus 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---online_cpus-----
this other function ------online_cpus-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
n_24 = PHI <n_30(D)(2), n_33(3)>
bb index := 4
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
n_24 = PHI <n_30(D)(2), n_33(3)>
bb index := 4
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
n_24 = PHI <n_30(D)(2), n_33(3)>
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
n_24 = PHI <n_30(D)(2), n_33(3)>
bb index := 4
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
n_24 = PHI <n_30(D)(2), n_33(3)>
bb index := 4
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
n_24 = PHI <n_30(D)(2), n_33(3)>
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
n_24 = PHI <n_30(D)(2), n_33(3)>
In function ‘run_processes_parallel’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (n_24 > i_25)
bb index := 12
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (n_24 > i_25)
bb index := 12
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (n_24 > i_25)
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:195:23: warning: use location
  195 |         for (i = 0; i < n; i++) {
      |                       ^
if (n_24 > i_25)

 ================== find cond branch ================= 
./benchmarks/git/use_after_free_2/git_uaf_2.c:195:23: warning: use location
Cond in fucntion pp_init basic block 12
 ================== possible direct basic block ================= 
from pp_init basic block 11
 ================== possible direct basic block ================= 
from pp_init basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_3 = (long unsigned int) n_24;
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:19: warning: use location
  192 |         pp->pfd = xcalloc(n, sizeof(*pp->pfd));
      |                   ^
_4 = calloc (_3, 8);
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:19: warning: use location
this stmt is child function---calloc-----

 ================== trace ================== 
pp_34(D)->pfd = _4;
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:17: warning: use location
  192 |         pp->pfd = xcalloc(n, sizeof(*pp->pfd));
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_80>
_20 = pp_34(D)->pfd;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_80>
_20 = pp_34(D)->pfd;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = pp_34(D)->pfd;
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:19: warning: use location
  199 |                 pp->pfd[i].fd = -1;
      |                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_79>
_16 = pp_34(D)->pfd;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_79>
_16 = pp_34(D)->pfd;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = pp_34(D)->pfd;
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:19: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = _16 + _18;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = _16 + _18;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = _16 + _18;
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:24: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_80 = VDEF <.MEM_79>
_19->events = 17;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_80 = VDEF <.MEM_79>
_19->events = 17;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19->events = 17;
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:35: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_78>
_11 = pp_34(D)->children;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_78>
_11 = pp_34(D)->children;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = pp_34(D)->children;
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:39: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _11 + _13;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _11 + _13;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = _11 + _13;
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:49: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = &_14->process;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = &_14->process;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = &_14->process;
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_78>
child_process_init (_15);
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_78>
child_process_init (_15);
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
child_process_init (_15);
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                 ^
this stmt is child function---child_process_init-----

 ================== trace ================== 
trace fucntion name:child_process_init 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_60>
_6 = pp_34(D)->children;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_60>
_6 = pp_34(D)->children;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = pp_34(D)->children;
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:32: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = _6 + _8;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = _6 + _8;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = _6 + _8;
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:42: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = &_9->err;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = &_9->err;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = &_9->err;
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_60>
strbuf_init (_10, 0);
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_60>
strbuf_init (_10, 0);
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strbuf_init (_10, 0);
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                 ^
this stmt is child function---strbuf_init-----

 ================== trace ================== 
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 
_5 = &pp_34(D)->buffered_output;
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: use location
  193 |         strbuf_init(&pp->buffered_output, 0);
      |         ^
strbuf_init (_5, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: use location
this stmt is child function---strbuf_init-----

 ================== trace ================== 
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 
pp_34(D)->children = _2;
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:22: warning: use location
  191 |         pp->children = xcalloc(n, sizeof(*pp->children));
      |                      ^
pp_34(D)->children = _2;
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:22: warning: use location
pp_34(D)->shutdown = 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:190:22: warning: use location
  190 |         pp->shutdown = 0;
      |                      ^
pp_34(D)->output_owner = 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:189:26: warning: use location
  189 |         pp->output_owner = 0;
      |                          ^
pp_34(D)->nr_processes = 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:188:26: warning: use location
  188 |         pp->nr_processes = 0;
      |                          ^
pp_34(D)->task_finished = _27;
./benchmarks/git/use_after_free_2/git_uaf_2.c:186:27: warning: use location
  186 |         pp->task_finished = task_finished ? task_finished : default_task_finished;
      |                           ^
pp_34(D)->task_finished = _27;
./benchmarks/git/use_after_free_2/git_uaf_2.c:186:27: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
pp_34(D)->start_failure = _26;
bb index := 8
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
pp_34(D)->start_failure = _26;
bb index := 8
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
pp_34(D)->start_failure = _26;
bb index := 8
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 13

======================================================================
pp_34(D)->start_failure = _26;
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:185:27: warning: use location
  185 |         pp->start_failure = start_failure ? start_failure : default_start_failure;
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
pp_34(D)->start_failure = _26;
bb index := 8
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
pp_34(D)->start_failure = _26;
bb index := 8
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
pp_34(D)->start_failure = _26;
bb index := 8
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 13

======================================================================
pp_34(D)->start_failure = _26;
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:185:27: warning: use location
  185 |         pp->start_failure = start_failure ? start_failure : default_start_failure;
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
pp_34(D)->get_next_task = get_next_task_39(D);
bb index := 6
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
pp_34(D)->get_next_task = get_next_task_39(D);
bb index := 6
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
pp_34(D)->get_next_task = get_next_task_39(D);
bb index := 6
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 13

======================================================================
pp_34(D)->get_next_task = get_next_task_39(D);
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:183:27: warning: use location
  183 |         pp->get_next_task = get_next_task;
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
pp_34(D)->get_next_task = get_next_task_39(D);
bb index := 6
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
pp_34(D)->get_next_task = get_next_task_39(D);
bb index := 6
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
pp_34(D)->get_next_task = get_next_task_39(D);
bb index := 6
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 13

======================================================================
pp_34(D)->get_next_task = get_next_task_39(D);
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:183:27: warning: use location
  183 |         pp->get_next_task = get_next_task;
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (get_next_task_39(D) == 0B)
bb index := 4
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (get_next_task_39(D) == 0B)
bb index := 4
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (get_next_task_39(D) == 0B)
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (get_next_task_39(D) == 0B)
bb index := 4
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (get_next_task_39(D) == 0B)
bb index := 4
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (get_next_task_39(D) == 0B)
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
if (get_next_task_39(D) == 0B)
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:181:12: warning: use location
  181 |         if (!get_next_task)
      |            ^
if (get_next_task_39(D) == 0B)

 ================== find cond branch ================= 
./benchmarks/git/use_after_free_2/git_uaf_2.c:181:12: warning: use location
Cond in fucntion pp_init basic block 4
 ================== possible direct basic block ================= 
from pp_init basic block 5
 ================== possible direct basic block ================= 
from pp_init basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
pp_34(D)->data = data_37(D);
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:180:18: warning: use location
  180 |         pp->data = data;
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
pp_34(D)->data = data_37(D);
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:180:18: warning: use location
  180 |         pp->data = data;
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_59>
pp_34(D)->max_processes = n_24;
bb index := 4
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_59>
pp_34(D)->max_processes = n_24;
bb index := 4
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_59>
pp_34(D)->max_processes = n_24;
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_59>
pp_34(D)->max_processes = n_24;
bb index := 4
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_59>
pp_34(D)->max_processes = n_24;
bb index := 4
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_59>
pp_34(D)->max_processes = n_24;
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
pp_34(D)->max_processes = n_24;
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:176:27: warning: use location
  176 |         pp->max_processes = n;
      |                           ^
_1 = (long unsigned int) n_24;
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:24: warning: use location
  191 |         pp->children = xcalloc(n, sizeof(*pp->children));
      |                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
bb index := 4
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
bb index := 4
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
bb index := 4
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
bb index := 4
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:178:9: warning: use location
  178 |         trace_printf("run_processes_parallel: preparing to run up to %d tasks", n);
      |         ^
this stmt is child function---trace_printf-----

 ================== trace ================== 
trace fucntion name:trace_printf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_62 = VDEF <.MEM_61(D)>
n_33 = online_cpus ();
bb index := 3
# VUSE <.MEM_52>
return _24;
In function ‘pp_init’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_52>
return _24;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_62 = VDEF <.MEM_61(D)>
n_33 = online_cpus ();
bb index := 3
# VUSE <.MEM_13>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _6;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_62 = VDEF <.MEM_61(D)>
n_33 = online_cpus ();
bb index := 3
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_62 = VDEF <.MEM_61(D)>
n_33 = online_cpus ();
bb index := 3
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_62 = VDEF <.MEM_61(D)>
n_33 = online_cpus ();
bb index := 3
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_62 = VDEF <.MEM_61(D)>
n_33 = online_cpus ();
bb index := 3
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_62 = VDEF <.MEM_61(D)>
n_33 = online_cpus ();
bb index := 3
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_62 = VDEF <.MEM_61(D)>
n_33 = online_cpus ();
bb index := 3
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_62 = VDEF <.MEM_61(D)>
n_33 = online_cpus ();
bb index := 3
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================
n_33 = online_cpus ();
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:174:21: warning: use location
  174 |                 n = online_cpus();
      |                     ^
this stmt is child function---online_cpus-----

 ================== trace ================== 
trace fucntion name:online_cpus 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64eed506c0
    type <integer_type 0x7f64ef1f15e8 int public SI
        size <integer_cst 0x7f64ef1dcdf8 constant 32>
        unit-size <integer_cst 0x7f64ef1dce10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64ef1f15e8 precision:32 min <integer_cst 0x7f64ef1dcdb0 -2147483648> max <integer_cst 0x7f64ef1dcdc8 2147483647>
        pointer_to_this <pointer_type 0x7f64ef1f89d8>>
    var <parm_decl 0x7f64eed4e000 n>
    def_stmt n_33 = online_cpus ();
    version:33>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f64eed2cdc0
    type <pointer_type 0x7f64eed16498
        type <array_type 0x7f64eed163f0 type <integer_type 0x7f64eed05930 char>
            BLK
            size <integer_cst 0x7f64eecfcc00 constant 448>
            unit-size <integer_cst 0x7f64eecfcc48 constant 56>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f64eed16348>
            pointer_to_this <pointer_type 0x7f64eed16498>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f64eed4b280 type <array_type 0x7f64eed163f0>
        readonly constant static "run_processes_parallel: preparing to run up to %d tasks\000">
    ./benchmarks/git/use_after_free_2/git_uaf_2.c:178:15 start: ./benchmarks/git/use_after_free_2/git_uaf_2.c:178:15 finish: ./benchmarks/git/use_after_free_2/git_uaf_2.c:178:15>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f64eed2ce00
    type <pointer_type 0x7f64eed16738
        type <array_type 0x7f64eed16690 type <integer_type 0x7f64eed05930 char>
            BLK
            size <integer_cst 0x7f64eecfcc60 constant 416>
            unit-size <integer_cst 0x7f64eecfcc90 constant 52>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f64eed165e8>
            pointer_to_this <pointer_type 0x7f64eed16738>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f64eed4b370 type <array_type 0x7f64eed16690>
        readonly constant static "BUG: you need to specify a get_next_task function%s\000">
    ./benchmarks/git/use_after_free_2/git_uaf_2.c:182:3 start: ./benchmarks/git/use_after_free_2/git_uaf_2.c:182:3 finish: ./benchmarks/git/use_after_free_2/git_uaf_2.c:182:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f64eed46ea0
    type <integer_type 0x7f64ef1f17e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64ef1f1738 precision:64 min <integer_cst 0x7f64ef1dce88 0> max <integer_cst 0x7f64ef1dd500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f64ef1fd7e0>>
   
    def_stmt _1 = (long unsigned int) n_24;
    version:1>
_1 = (long unsigned int) n_24;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_2 = calloc (_1, 120);
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:24: warning: use location
  191 |         pp->children = xcalloc(n, sizeof(*pp->children));
      |                        ^
this stmt is child function---calloc-----

 ================== trace ================== 
pp_34(D)->children = _2;
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:22: warning: use location
  191 |         pp->children = xcalloc(n, sizeof(*pp->children));
      |                      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_80>
_20 = pp_34(D)->pfd;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_80>
_20 = pp_34(D)->pfd;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = pp_34(D)->pfd;
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:19: warning: use location
  199 |                 pp->pfd[i].fd = -1;
      |                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_79>
_16 = pp_34(D)->pfd;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_79>
_16 = pp_34(D)->pfd;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = pp_34(D)->pfd;
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:19: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = _16 + _18;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = _16 + _18;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = _16 + _18;
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:24: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_80 = VDEF <.MEM_79>
_19->events = 17;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_80 = VDEF <.MEM_79>
_19->events = 17;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19->events = 17;
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:35: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_78>
_11 = pp_34(D)->children;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_78>
_11 = pp_34(D)->children;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = pp_34(D)->children;
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:39: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _11 + _13;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _11 + _13;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = _11 + _13;
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:49: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = &_14->process;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = &_14->process;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = &_14->process;
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_78>
child_process_init (_15);
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_78>
child_process_init (_15);
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
child_process_init (_15);
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                 ^
this stmt is child function---child_process_init-----

 ================== trace ================== 
trace fucntion name:child_process_init 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_60>
_6 = pp_34(D)->children;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_60>
_6 = pp_34(D)->children;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = pp_34(D)->children;
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:32: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = _6 + _8;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = _6 + _8;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = _6 + _8;
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:42: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = &_9->err;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = &_9->err;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = &_9->err;
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_60>
strbuf_init (_10, 0);
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_60>
strbuf_init (_10, 0);
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strbuf_init (_10, 0);
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                 ^
this stmt is child function---strbuf_init-----

 ================== trace ================== 
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 
_5 = &pp_34(D)->buffered_output;
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: use location
  193 |         strbuf_init(&pp->buffered_output, 0);
      |         ^
strbuf_init (_5, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: use location
this stmt is child function---strbuf_init-----

 ================== trace ================== 
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 
pp_34(D)->pfd = _4;
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:17: warning: use location
  192 |         pp->pfd = xcalloc(n, sizeof(*pp->pfd));
      |                 ^
pp_34(D)->pfd = _4;
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:17: warning: use location
pp_34(D)->shutdown = 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:190:22: warning: use location
  190 |         pp->shutdown = 0;
      |                      ^
pp_34(D)->output_owner = 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:189:26: warning: use location
  189 |         pp->output_owner = 0;
      |                          ^
pp_34(D)->nr_processes = 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:188:26: warning: use location
  188 |         pp->nr_processes = 0;
      |                          ^
pp_34(D)->task_finished = _27;
./benchmarks/git/use_after_free_2/git_uaf_2.c:186:27: warning: use location
  186 |         pp->task_finished = task_finished ? task_finished : default_task_finished;
      |                           ^
pp_34(D)->task_finished = _27;
./benchmarks/git/use_after_free_2/git_uaf_2.c:186:27: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
pp_34(D)->start_failure = _26;
bb index := 8
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
pp_34(D)->start_failure = _26;
bb index := 8
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
pp_34(D)->start_failure = _26;
bb index := 8
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 13

======================================================================
pp_34(D)->start_failure = _26;
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:185:27: warning: use location
  185 |         pp->start_failure = start_failure ? start_failure : default_start_failure;
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
pp_34(D)->start_failure = _26;
bb index := 8
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
pp_34(D)->start_failure = _26;
bb index := 8
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
pp_34(D)->start_failure = _26;
bb index := 8
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 13

======================================================================
pp_34(D)->start_failure = _26;
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:185:27: warning: use location
  185 |         pp->start_failure = start_failure ? start_failure : default_start_failure;
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
pp_34(D)->get_next_task = get_next_task_39(D);
bb index := 6
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
pp_34(D)->get_next_task = get_next_task_39(D);
bb index := 6
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
pp_34(D)->get_next_task = get_next_task_39(D);
bb index := 6
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 13

======================================================================
pp_34(D)->get_next_task = get_next_task_39(D);
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:183:27: warning: use location
  183 |         pp->get_next_task = get_next_task;
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
pp_34(D)->get_next_task = get_next_task_39(D);
bb index := 6
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
pp_34(D)->get_next_task = get_next_task_39(D);
bb index := 6
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
pp_34(D)->get_next_task = get_next_task_39(D);
bb index := 6
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 13

======================================================================
pp_34(D)->get_next_task = get_next_task_39(D);
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:183:27: warning: use location
  183 |         pp->get_next_task = get_next_task;
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (get_next_task_39(D) == 0B)
bb index := 4
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (get_next_task_39(D) == 0B)
bb index := 4
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (get_next_task_39(D) == 0B)
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (get_next_task_39(D) == 0B)
bb index := 4
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (get_next_task_39(D) == 0B)
bb index := 4
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (get_next_task_39(D) == 0B)
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
if (get_next_task_39(D) == 0B)
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:181:12: warning: use location
  181 |         if (!get_next_task)
      |            ^
if (get_next_task_39(D) == 0B)

 ================== find cond branch ================= 
./benchmarks/git/use_after_free_2/git_uaf_2.c:181:12: warning: use location
Cond in fucntion pp_init basic block 4
 ================== possible direct basic block ================= 
from pp_init basic block 5
 ================== possible direct basic block ================= 
from pp_init basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
pp_34(D)->data = data_37(D);
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:180:18: warning: use location
  180 |         pp->data = data;
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
pp_34(D)->data = data_37(D);
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:180:18: warning: use location
  180 |         pp->data = data;
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_59>
pp_34(D)->max_processes = n_24;
bb index := 4
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_59>
pp_34(D)->max_processes = n_24;
bb index := 4
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_59>
pp_34(D)->max_processes = n_24;
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_59>
pp_34(D)->max_processes = n_24;
bb index := 4
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_59>
pp_34(D)->max_processes = n_24;
bb index := 4
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_59>
pp_34(D)->max_processes = n_24;
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
pp_34(D)->max_processes = n_24;
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:176:27: warning: use location
  176 |         pp->max_processes = n;
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (n_24 > i_25)
bb index := 12
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (n_24 > i_25)
bb index := 12
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (n_24 > i_25)
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:195:23: warning: use location
  195 |         for (i = 0; i < n; i++) {
      |                       ^
if (n_24 > i_25)

 ================== find cond branch ================= 
./benchmarks/git/use_after_free_2/git_uaf_2.c:195:23: warning: use location
Cond in fucntion pp_init basic block 12
 ================== possible direct basic block ================= 
from pp_init basic block 11
 ================== possible direct basic block ================= 
from pp_init basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_3 = (long unsigned int) n_24;
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:19: warning: use location
  192 |         pp->pfd = xcalloc(n, sizeof(*pp->pfd));
      |                   ^
_1 = (long unsigned int) n_24;
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:24: warning: use location
  191 |         pp->children = xcalloc(n, sizeof(*pp->children));
      |                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
bb index := 4
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
bb index := 4
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
bb index := 4
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
bb index := 4
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:178:9: warning: use location
  178 |         trace_printf("run_processes_parallel: preparing to run up to %d tasks", n);
      |         ^
this stmt is child function---trace_printf-----

 ================== trace ================== 
trace fucntion name:trace_printf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64eed46ea0
    type <integer_type 0x7f64ef1f17e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64ef1f1738 precision:64 min <integer_cst 0x7f64ef1dce88 0> max <integer_cst 0x7f64ef1dd500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f64ef1fd7e0>>
   
    def_stmt _1 = (long unsigned int) n_24;
    version:1>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f64eed46f30
    type <integer_type 0x7f64ef1f17e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64ef1f1738 precision:64 min <integer_cst 0x7f64ef1dce88 0> max <integer_cst 0x7f64ef1dd500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f64ef1fd7e0>>
   
    def_stmt _3 = (long unsigned int) n_24;
    version:3>
_3 = (long unsigned int) n_24;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_4 = calloc (_3, 8);
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:19: warning: use location
  192 |         pp->pfd = xcalloc(n, sizeof(*pp->pfd));
      |                   ^
this stmt is child function---calloc-----

 ================== trace ================== 
pp_34(D)->pfd = _4;
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:17: warning: use location
  192 |         pp->pfd = xcalloc(n, sizeof(*pp->pfd));
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_80>
_20 = pp_34(D)->pfd;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_80>
_20 = pp_34(D)->pfd;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = pp_34(D)->pfd;
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:19: warning: use location
  199 |                 pp->pfd[i].fd = -1;
      |                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_79>
_16 = pp_34(D)->pfd;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_79>
_16 = pp_34(D)->pfd;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = pp_34(D)->pfd;
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:19: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = _16 + _18;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = _16 + _18;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = _16 + _18;
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:24: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_80 = VDEF <.MEM_79>
_19->events = 17;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_80 = VDEF <.MEM_79>
_19->events = 17;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19->events = 17;
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:35: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_78>
_11 = pp_34(D)->children;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_78>
_11 = pp_34(D)->children;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = pp_34(D)->children;
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:39: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _11 + _13;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _11 + _13;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = _11 + _13;
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:49: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = &_14->process;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = &_14->process;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = &_14->process;
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_78>
child_process_init (_15);
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_78>
child_process_init (_15);
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
child_process_init (_15);
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                 ^
this stmt is child function---child_process_init-----

 ================== trace ================== 
trace fucntion name:child_process_init 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_60>
_6 = pp_34(D)->children;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_60>
_6 = pp_34(D)->children;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = pp_34(D)->children;
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:32: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = _6 + _8;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = _6 + _8;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = _6 + _8;
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:42: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = &_9->err;
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = &_9->err;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = &_9->err;
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_60>
strbuf_init (_10, 0);
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_60>
strbuf_init (_10, 0);
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strbuf_init (_10, 0);
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                 ^
this stmt is child function---strbuf_init-----

 ================== trace ================== 
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 
_5 = &pp_34(D)->buffered_output;
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: use location
  193 |         strbuf_init(&pp->buffered_output, 0);
      |         ^
strbuf_init (_5, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: use location
this stmt is child function---strbuf_init-----

 ================== trace ================== 
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 
pp_34(D)->children = _2;
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:22: warning: use location
  191 |         pp->children = xcalloc(n, sizeof(*pp->children));
      |                      ^
pp_34(D)->children = _2;
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:22: warning: use location
pp_34(D)->shutdown = 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:190:22: warning: use location
  190 |         pp->shutdown = 0;
      |                      ^
pp_34(D)->output_owner = 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:189:26: warning: use location
  189 |         pp->output_owner = 0;
      |                          ^
pp_34(D)->nr_processes = 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:188:26: warning: use location
  188 |         pp->nr_processes = 0;
      |                          ^
pp_34(D)->task_finished = _27;
./benchmarks/git/use_after_free_2/git_uaf_2.c:186:27: warning: use location
  186 |         pp->task_finished = task_finished ? task_finished : default_task_finished;
      |                           ^
pp_34(D)->task_finished = _27;
./benchmarks/git/use_after_free_2/git_uaf_2.c:186:27: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
pp_34(D)->start_failure = _26;
bb index := 8
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
pp_34(D)->start_failure = _26;
bb index := 8
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
pp_34(D)->start_failure = _26;
bb index := 8
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 13

======================================================================
pp_34(D)->start_failure = _26;
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:185:27: warning: use location
  185 |         pp->start_failure = start_failure ? start_failure : default_start_failure;
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
pp_34(D)->start_failure = _26;
bb index := 8
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
pp_34(D)->start_failure = _26;
bb index := 8
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
pp_34(D)->start_failure = _26;
bb index := 8
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 13

======================================================================
pp_34(D)->start_failure = _26;
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:185:27: warning: use location
  185 |         pp->start_failure = start_failure ? start_failure : default_start_failure;
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
pp_34(D)->get_next_task = get_next_task_39(D);
bb index := 6
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
pp_34(D)->get_next_task = get_next_task_39(D);
bb index := 6
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
pp_34(D)->get_next_task = get_next_task_39(D);
bb index := 6
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 13

======================================================================
pp_34(D)->get_next_task = get_next_task_39(D);
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:183:27: warning: use location
  183 |         pp->get_next_task = get_next_task;
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
pp_34(D)->get_next_task = get_next_task_39(D);
bb index := 6
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
pp_34(D)->get_next_task = get_next_task_39(D);
bb index := 6
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
pp_34(D)->get_next_task = get_next_task_39(D);
bb index := 6
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 13

======================================================================
pp_34(D)->get_next_task = get_next_task_39(D);
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:183:27: warning: use location
  183 |         pp->get_next_task = get_next_task;
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (get_next_task_39(D) == 0B)
bb index := 4
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (get_next_task_39(D) == 0B)
bb index := 4
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (get_next_task_39(D) == 0B)
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (get_next_task_39(D) == 0B)
bb index := 4
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (get_next_task_39(D) == 0B)
bb index := 4
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (get_next_task_39(D) == 0B)
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
if (get_next_task_39(D) == 0B)
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:181:12: warning: use location
  181 |         if (!get_next_task)
      |            ^
if (get_next_task_39(D) == 0B)

 ================== find cond branch ================= 
./benchmarks/git/use_after_free_2/git_uaf_2.c:181:12: warning: use location
Cond in fucntion pp_init basic block 4
 ================== possible direct basic block ================= 
from pp_init basic block 5
 ================== possible direct basic block ================= 
from pp_init basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
pp_34(D)->data = data_37(D);
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:180:18: warning: use location
  180 |         pp->data = data;
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
pp_34(D)->data = data_37(D);
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:180:18: warning: use location
  180 |         pp->data = data;
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_59>
pp_34(D)->max_processes = n_24;
bb index := 4
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_59>
pp_34(D)->max_processes = n_24;
bb index := 4
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_59>
pp_34(D)->max_processes = n_24;
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_59>
pp_34(D)->max_processes = n_24;
bb index := 4
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_59>
pp_34(D)->max_processes = n_24;
bb index := 4
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_59>
pp_34(D)->max_processes = n_24;
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
pp_34(D)->max_processes = n_24;
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:176:27: warning: use location
  176 |         pp->max_processes = n;
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (n_24 > i_25)
bb index := 12
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (n_24 > i_25)
bb index := 12
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (n_24 > i_25)
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:195:23: warning: use location
  195 |         for (i = 0; i < n; i++) {
      |                       ^
if (n_24 > i_25)

 ================== find cond branch ================= 
./benchmarks/git/use_after_free_2/git_uaf_2.c:195:23: warning: use location
Cond in fucntion pp_init basic block 12
 ================== possible direct basic block ================= 
from pp_init basic block 11
 ================== possible direct basic block ================= 
from pp_init basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_3 = (long unsigned int) n_24;
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:19: warning: use location
  192 |         pp->pfd = xcalloc(n, sizeof(*pp->pfd));
      |                   ^
_1 = (long unsigned int) n_24;
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:24: warning: use location
  191 |         pp->children = xcalloc(n, sizeof(*pp->children));
      |                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
bb index := 4
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
bb index := 4
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
bb index := 4
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
bb index := 4
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:178:9: warning: use location
  178 |         trace_printf("run_processes_parallel: preparing to run up to %d tasks", n);
      |         ^
this stmt is child function---trace_printf-----

 ================== trace ================== 
trace fucntion name:trace_printf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64eed46f30
    type <integer_type 0x7f64ef1f17e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64ef1f1738 precision:64 min <integer_cst 0x7f64ef1dce88 0> max <integer_cst 0x7f64ef1dd500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f64ef1fd7e0>>
   
    def_stmt _3 = (long unsigned int) n_24;
    version:3>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f64eed50000
    type <pointer_type 0x7f64eed13888
        type <record_type 0x7f64eed0c150 strbuf BLK
            size <integer_cst 0x7f64ef1fa078 constant 192>
            unit-size <integer_cst 0x7f64ef1fa048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed0c150 fields <field_decl 0x7f64eed08260 alloc> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed13888>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = &pp_34(D)->buffered_output;
    version:5
    ptr-info 0x7f64eed5c9a8>
_5 = &pp_34(D)->buffered_output;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_76 = VDEF <.MEM_75>
strbuf_init (_5, 0);
strbuf_init (_5, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: use location
  193 |         strbuf_init(&pp->buffered_output, 0);
      |         ^
this stmt is child function---strbuf_init-----

 ================== trace ================== 
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_76 = VDEF <.MEM_75>
strbuf_init (_5, 0);
strbuf_init (_5, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: use location
this stmt is child function---strbuf_init-----

 ================== trace ================== 
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64eed50000
    type <pointer_type 0x7f64eed13888
        type <record_type 0x7f64eed0c150 strbuf BLK
            size <integer_cst 0x7f64ef1fa078 constant 192>
            unit-size <integer_cst 0x7f64ef1fa048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed0c150 fields <field_decl 0x7f64eed08260 alloc> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed13888>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = &pp_34(D)->buffered_output;
    version:5
    ptr-info 0x7f64eed5c9a8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f64eed50168
    type <pointer_type 0x7f64eed13888
        type <record_type 0x7f64eed0c150 strbuf BLK
            size <integer_cst 0x7f64ef1fa078 constant 192>
            unit-size <integer_cst 0x7f64ef1fa048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed0c150 fields <field_decl 0x7f64eed08260 alloc> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed13888>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _10 = &_9->err;
    version:10
    ptr-info 0x7f64eed5c9f0>
_10 = &_9->err;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_60>
strbuf_init (_10, 0);
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_60>
strbuf_init (_10, 0);
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_78 = VDEF <.MEM_60>
strbuf_init (_10, 0);
strbuf_init (_10, 0);
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                 ^
this stmt is child function---strbuf_init-----

 ================== trace ================== 
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_60>
strbuf_init (_10, 0);
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_60>
strbuf_init (_10, 0);
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_78 = VDEF <.MEM_60>
strbuf_init (_10, 0);
strbuf_init (_10, 0);
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                 ^
this stmt is child function---strbuf_init-----

 ================== trace ================== 
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64eed50168
    type <pointer_type 0x7f64eed13888
        type <record_type 0x7f64eed0c150 strbuf BLK
            size <integer_cst 0x7f64ef1fa078 constant 192>
            unit-size <integer_cst 0x7f64ef1fa048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed0c150 fields <field_decl 0x7f64eed08260 alloc> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed13888>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _10 = &_9->err;
    version:10
    ptr-info 0x7f64eed5c9f0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f64eed502d0
    type <pointer_type 0x7f64eed137e0
        type <record_type 0x7f64eed13738 child_process BLK
            size <integer_cst 0x7f64eecfc978 constant 640>
            unit-size <integer_cst 0x7f64eecfc948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed13738 fields <field_decl 0x7f64eed15850 argv> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed137e0>>
        public unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _15 = &_14->process;
    version:15
    ptr-info 0x7f64eed5ca38>
_15 = &_14->process;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_78>
child_process_init (_15);
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_78>
child_process_init (_15);
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_79 = VDEF <.MEM_78>
child_process_init (_15);
child_process_init (_15);
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                 ^
this stmt is child function---child_process_init-----

 ================== trace ================== 
trace fucntion name:child_process_init 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_78>
child_process_init (_15);
bb index := 11
# VUSE <.MEM_46>
return 0;
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_78>
child_process_init (_15);
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_79 = VDEF <.MEM_78>
child_process_init (_15);
child_process_init (_15);
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                 ^
this stmt is child function---child_process_init-----

 ================== trace ================== 
trace fucntion name:child_process_init 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64eed502d0
    type <pointer_type 0x7f64eed137e0
        type <record_type 0x7f64eed13738 child_process BLK
            size <integer_cst 0x7f64eecfc978 constant 640>
            unit-size <integer_cst 0x7f64eecfc948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed13738 fields <field_decl 0x7f64eed15850 argv> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed137e0>>
        public unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _15 = &_14->process;
    version:15
    ptr-info 0x7f64eed5ca38>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:pp_init========= [0m
[40;42m =======pre_check_funciton:run_processes_parallel========= [0m
[40;42m =======start_check_funciton:run_processes_parallel========= [0m

dot graph START

======================================================================
 <addr_expr 0x7f64eed2c340
    type <pointer_type 0x7f64eed0c5e8
        type <record_type 0x7f64eed0c540 parallel_processes BLK
            size <integer_cst 0x7f64ef2b10a8 constant 704>
            unit-size <integer_cst 0x7f64eecfc828 constant 88>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed0c540 fields <field_decl 0x7f64eed08980 data> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed0c5e8>>
        public unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f64eed16b28>>
   
    arg:0 <var_decl 0x7f64eed25bd0 pp type <record_type 0x7f64eed0c540 parallel_processes>
        addressable BLK ./benchmarks/git/use_after_free_2/git_uaf_2.c:342:28 size <integer_cst 0x7f64ef2b10a8 704> unit-size <integer_cst 0x7f64eecfc828 88>
        align:64 warn_if_not_align:0 context <function_decl 0x7f64eed11200 run_processes_parallel>>
    ./benchmarks/git/use_after_free_2/git_uaf_2.c:344:2 start: ./benchmarks/git/use_after_free_2/git_uaf_2.c:344:2 finish: ./benchmarks/git/use_after_free_2/git_uaf_2.c:344:2>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f64eed2c380
    type <pointer_type 0x7f64eed0c5e8
        type <record_type 0x7f64eed0c540 parallel_processes BLK
            size <integer_cst 0x7f64ef2b10a8 constant 704>
            unit-size <integer_cst 0x7f64eecfc828 constant 88>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed0c540 fields <field_decl 0x7f64eed08980 data> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed0c5e8>>
        public unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f64eed16b28>>
   
    arg:0 <var_decl 0x7f64eed25bd0 pp type <record_type 0x7f64eed0c540 parallel_processes>
        addressable BLK ./benchmarks/git/use_after_free_2/git_uaf_2.c:342:28 size <integer_cst 0x7f64ef2b10a8 704> unit-size <integer_cst 0x7f64eecfc828 88>
        align:64 warn_if_not_align:0 context <function_decl 0x7f64eed11200 run_processes_parallel>>
    ./benchmarks/git/use_after_free_2/git_uaf_2.c:350:11 start: ./benchmarks/git/use_after_free_2/git_uaf_2.c:350:11 finish: ./benchmarks/git/use_after_free_2/git_uaf_2.c:350:11>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f64eed2c3c0
    type <pointer_type 0x7f64eed0c5e8
        type <record_type 0x7f64eed0c540 parallel_processes BLK
            size <integer_cst 0x7f64ef2b10a8 constant 704>
            unit-size <integer_cst 0x7f64eecfc828 constant 88>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed0c540 fields <field_decl 0x7f64eed08980 data> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed0c5e8>>
        public unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f64eed16b28>>
   
    arg:0 <var_decl 0x7f64eed25bd0 pp type <record_type 0x7f64eed0c540 parallel_processes>
        addressable BLK ./benchmarks/git/use_after_free_2/git_uaf_2.c:342:28 size <integer_cst 0x7f64ef2b10a8 704> unit-size <integer_cst 0x7f64eecfc828 88>
        align:64 warn_if_not_align:0 context <function_decl 0x7f64eed11200 run_processes_parallel>>
    ./benchmarks/git/use_after_free_2/git_uaf_2.c:355:5 start: ./benchmarks/git/use_after_free_2/git_uaf_2.c:355:5 finish: ./benchmarks/git/use_after_free_2/git_uaf_2.c:355:5>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f64eed2c400
    type <pointer_type 0x7f64eed0c5e8
        type <record_type 0x7f64eed0c540 parallel_processes BLK
            size <integer_cst 0x7f64ef2b10a8 constant 704>
            unit-size <integer_cst 0x7f64eecfc828 constant 88>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed0c540 fields <field_decl 0x7f64eed08980 data> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed0c5e8>>
        public unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f64eed16b28>>
   
    arg:0 <var_decl 0x7f64eed25bd0 pp type <record_type 0x7f64eed0c540 parallel_processes>
        addressable BLK ./benchmarks/git/use_after_free_2/git_uaf_2.c:342:28 size <integer_cst 0x7f64ef2b10a8 704> unit-size <integer_cst 0x7f64eecfc828 88>
        align:64 warn_if_not_align:0 context <function_decl 0x7f64eed11200 run_processes_parallel>>
    ./benchmarks/git/use_after_free_2/git_uaf_2.c:361:3 start: ./benchmarks/git/use_after_free_2/git_uaf_2.c:361:3 finish: ./benchmarks/git/use_after_free_2/git_uaf_2.c:361:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f64eed2c440
    type <pointer_type 0x7f64eed0c5e8
        type <record_type 0x7f64eed0c540 parallel_processes BLK
            size <integer_cst 0x7f64ef2b10a8 constant 704>
            unit-size <integer_cst 0x7f64eecfc828 constant 88>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed0c540 fields <field_decl 0x7f64eed08980 data> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed0c5e8>>
        public unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f64eed16b28>>
   
    arg:0 <var_decl 0x7f64eed25bd0 pp type <record_type 0x7f64eed0c540 parallel_processes>
        addressable BLK ./benchmarks/git/use_after_free_2/git_uaf_2.c:342:28 size <integer_cst 0x7f64ef2b10a8 704> unit-size <integer_cst 0x7f64eecfc828 88>
        align:64 warn_if_not_align:0 context <function_decl 0x7f64eed11200 run_processes_parallel>>
    ./benchmarks/git/use_after_free_2/git_uaf_2.c:362:3 start: ./benchmarks/git/use_after_free_2/git_uaf_2.c:362:3 finish: ./benchmarks/git/use_after_free_2/git_uaf_2.c:362:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f64eed2c480
    type <pointer_type 0x7f64eed0c5e8
        type <record_type 0x7f64eed0c540 parallel_processes BLK
            size <integer_cst 0x7f64ef2b10a8 constant 704>
            unit-size <integer_cst 0x7f64eecfc828 constant 88>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed0c540 fields <field_decl 0x7f64eed08980 data> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed0c5e8>>
        public unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f64eed16b28>>
   
    arg:0 <var_decl 0x7f64eed25bd0 pp type <record_type 0x7f64eed0c540 parallel_processes>
        addressable BLK ./benchmarks/git/use_after_free_2/git_uaf_2.c:342:28 size <integer_cst 0x7f64ef2b10a8 704> unit-size <integer_cst 0x7f64eecfc828 88>
        align:64 warn_if_not_align:0 context <function_decl 0x7f64eed11200 run_processes_parallel>>
    ./benchmarks/git/use_after_free_2/git_uaf_2.c:363:10 start: ./benchmarks/git/use_after_free_2/git_uaf_2.c:363:10 finish: ./benchmarks/git/use_after_free_2/git_uaf_2.c:363:10>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f64eed2c4c0
    type <pointer_type 0x7f64eed0c5e8
        type <record_type 0x7f64eed0c540 parallel_processes BLK
            size <integer_cst 0x7f64ef2b10a8 constant 704>
            unit-size <integer_cst 0x7f64eecfc828 constant 88>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed0c540 fields <field_decl 0x7f64eed08980 data> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed0c5e8>>
        public unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f64eed16b28>>
   
    arg:0 <var_decl 0x7f64eed25bd0 pp type <record_type 0x7f64eed0c540 parallel_processes>
        addressable BLK ./benchmarks/git/use_after_free_2/git_uaf_2.c:342:28 size <integer_cst 0x7f64ef2b10a8 704> unit-size <integer_cst 0x7f64eecfc828 88>
        align:64 warn_if_not_align:0 context <function_decl 0x7f64eed11200 run_processes_parallel>>
    ./benchmarks/git/use_after_free_2/git_uaf_2.c:367:5 start: ./benchmarks/git/use_after_free_2/git_uaf_2.c:367:5 finish: ./benchmarks/git/use_after_free_2/git_uaf_2.c:367:5>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f64eed2c500
    type <pointer_type 0x7f64eed0c5e8
        type <record_type 0x7f64eed0c540 parallel_processes BLK
            size <integer_cst 0x7f64ef2b10a8 constant 704>
            unit-size <integer_cst 0x7f64eecfc828 constant 88>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed0c540 fields <field_decl 0x7f64eed08980 data> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed0c5e8>>
        public unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f64eed16b28>>
   
    arg:0 <var_decl 0x7f64eed25bd0 pp type <record_type 0x7f64eed0c540 parallel_processes>
        addressable BLK ./benchmarks/git/use_after_free_2/git_uaf_2.c:342:28 size <integer_cst 0x7f64ef2b10a8 704> unit-size <integer_cst 0x7f64eecfc828 88>
        align:64 warn_if_not_align:0 context <function_decl 0x7f64eed11200 run_processes_parallel>>
    ./benchmarks/git/use_after_free_2/git_uaf_2.c:371:2 start: ./benchmarks/git/use_after_free_2/git_uaf_2.c:371:2 finish: ./benchmarks/git/use_after_free_2/git_uaf_2.c:371:2>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:run_processes_parallel========= [0m
[40;44m =======node_fun:child_process_clear========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path child_process_clear  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;33m =======POP node_fun stack:argv_array_clear========= [0m
[40;42m =======pre_check_funciton:child_process_clear========= [0m
[40;42m =======start_check_funciton:child_process_clear========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f64eed36318
    type <pointer_type 0x7f64eed170a8
        type <record_type 0x7f64eed13690 argv_array TI
            size <integer_cst 0x7f64ef1dcc00 constant 128>
            unit-size <integer_cst 0x7f64ef1dcc18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed13690 fields <field_decl 0x7f64eed10d10 argv> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed170a8>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _1 = &child_3(D)->args;
    version:1
    ptr-info 0x7f64eecfcf00>
_1 = &child_3(D)->args;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_5 = VDEF <.MEM_4(D)>
argv_array_clear (_1);
argv_array_clear (_1);
In function ‘child_process_clear’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:328:9: warning: use location
  328 |         argv_array_clear(&child->args);
      |         ^
this stmt is child function---argv_array_clear-----

 ================== trace ================== 
trace fucntion name:argv_array_clear 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_5 = VDEF <.MEM_4(D)>
argv_array_clear (_1);
argv_array_clear (_1);
./benchmarks/git/use_after_free_2/git_uaf_2.c:328:9: warning: use location
this stmt is child function---argv_array_clear-----

 ================== trace ================== 
trace fucntion name:argv_array_clear 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64eed36318
    type <pointer_type 0x7f64eed170a8
        type <record_type 0x7f64eed13690 argv_array TI
            size <integer_cst 0x7f64ef1dcc00 constant 128>
            unit-size <integer_cst 0x7f64ef1dcc18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed13690 fields <field_decl 0x7f64eed10d10 argv> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed170a8>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _1 = &child_3(D)->args;
    version:1
    ptr-info 0x7f64eecfcf00>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f64eed36360
    type <pointer_type 0x7f64eed170a8
        type <record_type 0x7f64eed13690 argv_array TI
            size <integer_cst 0x7f64ef1dcc00 constant 128>
            unit-size <integer_cst 0x7f64ef1dcc18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed13690 fields <field_decl 0x7f64eed10d10 argv> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed170a8>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = &child_3(D)->env_array;
    version:2
    ptr-info 0x7f64eecfcf18>
_2 = &child_3(D)->env_array;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_6 = VDEF <.MEM_5>
argv_array_clear (_2);
argv_array_clear (_2);
./benchmarks/git/use_after_free_2/git_uaf_2.c:329:9: warning: use location
  329 |         argv_array_clear(&child->env_array);
      |         ^
this stmt is child function---argv_array_clear-----

 ================== trace ================== 
trace fucntion name:argv_array_clear 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_6 = VDEF <.MEM_5>
argv_array_clear (_2);
argv_array_clear (_2);
./benchmarks/git/use_after_free_2/git_uaf_2.c:329:9: warning: use location
this stmt is child function---argv_array_clear-----

 ================== trace ================== 
trace fucntion name:argv_array_clear 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64eed36360
    type <pointer_type 0x7f64eed170a8
        type <record_type 0x7f64eed13690 argv_array TI
            size <integer_cst 0x7f64ef1dcc00 constant 128>
            unit-size <integer_cst 0x7f64ef1dcc18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed13690 fields <field_decl 0x7f64eed10d10 argv> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed170a8>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = &child_3(D)->env_array;
    version:2
    ptr-info 0x7f64eecfcf18>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:child_process_clear========= [0m
[40;44m =======node_fun:finish_command========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path finish_command  function_call count: 2 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:child_process_clear========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path child_process_clear  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;33m =======POP node_fun stack:argv_array_clear========= [0m
[40;42m =======pre_check_funciton:child_process_clear========= [0m
[40;42m =======start_check_funciton:child_process_clear========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f64eed36318
    type <pointer_type 0x7f64eed170a8
        type <record_type 0x7f64eed13690 argv_array TI
            size <integer_cst 0x7f64ef1dcc00 constant 128>
            unit-size <integer_cst 0x7f64ef1dcc18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed13690 fields <field_decl 0x7f64eed10d10 argv> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed170a8>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _1 = &child_3(D)->args;
    version:1
    ptr-info 0x7f64eecfcf00>
_1 = &child_3(D)->args;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_5 = VDEF <.MEM_4(D)>
argv_array_clear (_1);
argv_array_clear (_1);
In function ‘finish_command’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:328:9: warning: use location
  328 |         argv_array_clear(&child->args);
      |         ^
this stmt is child function---argv_array_clear-----

 ================== trace ================== 
trace fucntion name:argv_array_clear 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_5 = VDEF <.MEM_4(D)>
argv_array_clear (_1);
argv_array_clear (_1);
./benchmarks/git/use_after_free_2/git_uaf_2.c:328:9: warning: use location
this stmt is child function---argv_array_clear-----

 ================== trace ================== 
trace fucntion name:argv_array_clear 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64eed36318
    type <pointer_type 0x7f64eed170a8
        type <record_type 0x7f64eed13690 argv_array TI
            size <integer_cst 0x7f64ef1dcc00 constant 128>
            unit-size <integer_cst 0x7f64ef1dcc18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed13690 fields <field_decl 0x7f64eed10d10 argv> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed170a8>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _1 = &child_3(D)->args;
    version:1
    ptr-info 0x7f64eecfcf00>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f64eed36360
    type <pointer_type 0x7f64eed170a8
        type <record_type 0x7f64eed13690 argv_array TI
            size <integer_cst 0x7f64ef1dcc00 constant 128>
            unit-size <integer_cst 0x7f64ef1dcc18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed13690 fields <field_decl 0x7f64eed10d10 argv> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed170a8>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = &child_3(D)->env_array;
    version:2
    ptr-info 0x7f64eecfcf18>
_2 = &child_3(D)->env_array;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_6 = VDEF <.MEM_5>
argv_array_clear (_2);
argv_array_clear (_2);
./benchmarks/git/use_after_free_2/git_uaf_2.c:329:9: warning: use location
  329 |         argv_array_clear(&child->env_array);
      |         ^
this stmt is child function---argv_array_clear-----

 ================== trace ================== 
trace fucntion name:argv_array_clear 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_6 = VDEF <.MEM_5>
argv_array_clear (_2);
argv_array_clear (_2);
./benchmarks/git/use_after_free_2/git_uaf_2.c:329:9: warning: use location
this stmt is child function---argv_array_clear-----

 ================== trace ================== 
trace fucntion name:argv_array_clear 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64eed36360
    type <pointer_type 0x7f64eed170a8
        type <record_type 0x7f64eed13690 argv_array TI
            size <integer_cst 0x7f64ef1dcc00 constant 128>
            unit-size <integer_cst 0x7f64ef1dcc18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed13690 fields <field_decl 0x7f64eed10d10 argv> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed170a8>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = &child_3(D)->env_array;
    version:2
    ptr-info 0x7f64eecfcf18>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:child_process_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;33m =======POP node_fun stack:wait_or_whine========= [0m
[40;42m =======pre_check_funciton:finish_command========= [0m
[40;42m =======start_check_funciton:finish_command========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f64eed36558
    type <integer_type 0x7f64ef1f15e8 int public SI
        size <integer_cst 0x7f64ef1dcdf8 constant 32>
        unit-size <integer_cst 0x7f64ef1dce10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64ef1f15e8 precision:32 min <integer_cst 0x7f64ef1dcdb0 -2147483648> max <integer_cst 0x7f64ef1dcdc8 2147483647>
        pointer_to_this <pointer_type 0x7f64ef1f89d8>>
   
    def_stmt _3 = cmd_5(D)->pid;
    version:3>
# VUSE <.MEM_8(D)>
_3 = cmd_5(D)->pid;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
ret_7 = wait_or_whine (_3, _2, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:15: warning: use location
  321 |     int ret = wait_or_whine(cmd->pid, cmd->argv[0], 0);
      |               ^
this stmt is child function---wait_or_whine-----

 ================== trace ================== 
trace fucntion name:wait_or_whine 

 ================== trace ================== 
trace fucntion free:0 
ret_7 = wait_or_whine (_3, _2, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:15: warning: use location
this stmt is child function---wait_or_whine-----

 ================== trace ================== 
trace fucntion name:wait_or_whine 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64eed36558
    type <integer_type 0x7f64ef1f15e8 int public SI
        size <integer_cst 0x7f64ef1dcdf8 constant 32>
        unit-size <integer_cst 0x7f64ef1dce10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64ef1f15e8 precision:32 min <integer_cst 0x7f64ef1dcdb0 -2147483648> max <integer_cst 0x7f64ef1dcdc8 2147483647>
        pointer_to_this <pointer_type 0x7f64ef1f89d8>>
   
    def_stmt _3 = cmd_5(D)->pid;
    version:3>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f64eed365a0
    type <pointer_type 0x7f64eed137e0
        type <record_type 0x7f64eed13738 child_process BLK
            size <integer_cst 0x7f64eecfc978 constant 640>
            unit-size <integer_cst 0x7f64eecfc948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed13738 fields <field_decl 0x7f64eed15850 argv> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed137e0>>
        public unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f64eed1bd80 cmd>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7f64eecfcf78>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_10 = VDEF <.MEM_9>
child_process_clear (cmd_5(D));
child_process_clear (cmd_5(D));
./benchmarks/git/use_after_free_2/git_uaf_2.c:322:5: warning: use location
  322 |     child_process_clear(cmd);
      |     ^
this stmt is child function---child_process_clear-----

 ================== trace ================== 
trace fucntion name:child_process_clear 
[40;44m =======trace_function_path child_process_clear  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:child_process_clear========= [0m
[40;36m ======= find relate stmt with cmd ========= [0m
[40;36m ======= relate stmt argument:cmd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m

 ================== trace ================== 
trace fucntion free:0 
_3 = cmd_5(D)->pid;
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:15: warning: use location
  321 |     int ret = wait_or_whine(cmd->pid, cmd->argv[0], 0);
      |               ^
ret_7 = wait_or_whine (_3, _2, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:15: warning: use location
this stmt is child function---wait_or_whine-----

 ================== trace ================== 
trace fucntion name:wait_or_whine 

 ================== trace ================== 
trace fucntion free:0 
_1 = cmd_5(D)->argv;
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:42: warning: use location
  321 |     int ret = wait_or_whine(cmd->pid, cmd->argv[0], 0);
      |                                          ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64eed365a0
    type <pointer_type 0x7f64eed137e0
        type <record_type 0x7f64eed13738 child_process BLK
            size <integer_cst 0x7f64eecfc978 constant 640>
            unit-size <integer_cst 0x7f64eecfc948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed13738 fields <field_decl 0x7f64eed15850 argv> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed137e0>>
        public unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f64eed1bd80 cmd>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7f64eecfcf78>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:finish_command========= [0m
[40;44m =======node_fun:pp_collect_finished========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path pp_collect_finished  function_call count: 5 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;33m =======POP node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:fputs========= [0m
[40;33m =======POP node_fun stack:fputs========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;33m =======POP node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;33m =======POP node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:finish_command========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path finish_command  function_call count: 2 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:child_process_clear========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path child_process_clear  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;33m =======POP node_fun stack:argv_array_clear========= [0m
[40;42m =======pre_check_funciton:child_process_clear========= [0m
[40;42m =======start_check_funciton:child_process_clear========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f64eed36318
    type <pointer_type 0x7f64eed170a8
        type <record_type 0x7f64eed13690 argv_array TI
            size <integer_cst 0x7f64ef1dcc00 constant 128>
            unit-size <integer_cst 0x7f64ef1dcc18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed13690 fields <field_decl 0x7f64eed10d10 argv> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed170a8>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _1 = &child_3(D)->args;
    version:1
    ptr-info 0x7f64eecfcf00>
_1 = &child_3(D)->args;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_5 = VDEF <.MEM_4(D)>
argv_array_clear (_1);
argv_array_clear (_1);
In function ‘pp_collect_finished’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:328:9: warning: use location
  328 |         argv_array_clear(&child->args);
      |         ^
this stmt is child function---argv_array_clear-----

 ================== trace ================== 
trace fucntion name:argv_array_clear 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_5 = VDEF <.MEM_4(D)>
argv_array_clear (_1);
argv_array_clear (_1);
./benchmarks/git/use_after_free_2/git_uaf_2.c:328:9: warning: use location
this stmt is child function---argv_array_clear-----

 ================== trace ================== 
trace fucntion name:argv_array_clear 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64eed36318
    type <pointer_type 0x7f64eed170a8
        type <record_type 0x7f64eed13690 argv_array TI
            size <integer_cst 0x7f64ef1dcc00 constant 128>
            unit-size <integer_cst 0x7f64ef1dcc18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed13690 fields <field_decl 0x7f64eed10d10 argv> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed170a8>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _1 = &child_3(D)->args;
    version:1
    ptr-info 0x7f64eecfcf00>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f64eed36360
    type <pointer_type 0x7f64eed170a8
        type <record_type 0x7f64eed13690 argv_array TI
            size <integer_cst 0x7f64ef1dcc00 constant 128>
            unit-size <integer_cst 0x7f64ef1dcc18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed13690 fields <field_decl 0x7f64eed10d10 argv> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed170a8>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = &child_3(D)->env_array;
    version:2
    ptr-info 0x7f64eecfcf18>
_2 = &child_3(D)->env_array;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_6 = VDEF <.MEM_5>
argv_array_clear (_2);
argv_array_clear (_2);
./benchmarks/git/use_after_free_2/git_uaf_2.c:329:9: warning: use location
  329 |         argv_array_clear(&child->env_array);
      |         ^
this stmt is child function---argv_array_clear-----

 ================== trace ================== 
trace fucntion name:argv_array_clear 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_6 = VDEF <.MEM_5>
argv_array_clear (_2);
argv_array_clear (_2);
./benchmarks/git/use_after_free_2/git_uaf_2.c:329:9: warning: use location
this stmt is child function---argv_array_clear-----

 ================== trace ================== 
trace fucntion name:argv_array_clear 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64eed36360
    type <pointer_type 0x7f64eed170a8
        type <record_type 0x7f64eed13690 argv_array TI
            size <integer_cst 0x7f64ef1dcc00 constant 128>
            unit-size <integer_cst 0x7f64ef1dcc18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed13690 fields <field_decl 0x7f64eed10d10 argv> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed170a8>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = &child_3(D)->env_array;
    version:2
    ptr-info 0x7f64eecfcf18>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:child_process_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;33m =======POP node_fun stack:wait_or_whine========= [0m
[40;42m =======pre_check_funciton:finish_command========= [0m
[40;42m =======start_check_funciton:finish_command========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f64eed36558
    type <integer_type 0x7f64ef1f15e8 int public SI
        size <integer_cst 0x7f64ef1dcdf8 constant 32>
        unit-size <integer_cst 0x7f64ef1dce10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64ef1f15e8 precision:32 min <integer_cst 0x7f64ef1dcdb0 -2147483648> max <integer_cst 0x7f64ef1dcdc8 2147483647>
        pointer_to_this <pointer_type 0x7f64ef1f89d8>>
   
    def_stmt _3 = cmd_5(D)->pid;
    version:3>
# VUSE <.MEM_8(D)>
_3 = cmd_5(D)->pid;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
ret_7 = wait_or_whine (_3, _2, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:15: warning: use location
  321 |     int ret = wait_or_whine(cmd->pid, cmd->argv[0], 0);
      |               ^
this stmt is child function---wait_or_whine-----

 ================== trace ================== 
trace fucntion name:wait_or_whine 

 ================== trace ================== 
trace fucntion free:0 
ret_7 = wait_or_whine (_3, _2, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:15: warning: use location
this stmt is child function---wait_or_whine-----

 ================== trace ================== 
trace fucntion name:wait_or_whine 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64eed36558
    type <integer_type 0x7f64ef1f15e8 int public SI
        size <integer_cst 0x7f64ef1dcdf8 constant 32>
        unit-size <integer_cst 0x7f64ef1dce10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64ef1f15e8 precision:32 min <integer_cst 0x7f64ef1dcdb0 -2147483648> max <integer_cst 0x7f64ef1dcdc8 2147483647>
        pointer_to_this <pointer_type 0x7f64ef1f89d8>>
   
    def_stmt _3 = cmd_5(D)->pid;
    version:3>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f64eed365a0
    type <pointer_type 0x7f64eed137e0
        type <record_type 0x7f64eed13738 child_process BLK
            size <integer_cst 0x7f64eecfc978 constant 640>
            unit-size <integer_cst 0x7f64eecfc948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed13738 fields <field_decl 0x7f64eed15850 argv> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed137e0>>
        public unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f64eed1bd80 cmd>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7f64eecfcf78>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_10 = VDEF <.MEM_9>
child_process_clear (cmd_5(D));
child_process_clear (cmd_5(D));
./benchmarks/git/use_after_free_2/git_uaf_2.c:322:5: warning: use location
  322 |     child_process_clear(cmd);
      |     ^
this stmt is child function---child_process_clear-----

 ================== trace ================== 
trace fucntion name:child_process_clear 
[40;44m =======trace_function_path child_process_clear  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:child_process_clear========= [0m
[40;36m ======= find relate stmt with cmd ========= [0m
[40;36m ======= relate stmt argument:cmd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m

 ================== trace ================== 
trace fucntion free:0 
_3 = cmd_5(D)->pid;
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:15: warning: use location
  321 |     int ret = wait_or_whine(cmd->pid, cmd->argv[0], 0);
      |               ^
ret_7 = wait_or_whine (_3, _2, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:15: warning: use location
this stmt is child function---wait_or_whine-----

 ================== trace ================== 
trace fucntion name:wait_or_whine 

 ================== trace ================== 
trace fucntion free:0 
_1 = cmd_5(D)->argv;
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:42: warning: use location
  321 |     int ret = wait_or_whine(cmd->pid, cmd->argv[0], 0);
      |                                          ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64eed365a0
    type <pointer_type 0x7f64eed137e0
        type <record_type 0x7f64eed13738 child_process BLK
            size <integer_cst 0x7f64eecfc978 constant 640>
            unit-size <integer_cst 0x7f64eecfc948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed13738 fields <field_decl 0x7f64eed15850 argv> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed137e0>>
        public unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f64eed1bd80 cmd>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7f64eecfcf78>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:finish_command========= [0m
[40;42m =======pre_check_funciton:pp_collect_finished========= [0m
[40;42m =======start_check_funciton:pp_collect_finished========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f64eed36a20
    type <pointer_type 0x7f64eed137e0
        type <record_type 0x7f64eed13738 child_process BLK
            size <integer_cst 0x7f64eecfc978 constant 640>
            unit-size <integer_cst 0x7f64eecfc948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed13738 fields <field_decl 0x7f64eed15850 argv> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed137e0>>
        public unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _12 = &_11->process;
    version:12
    ptr-info 0x7f64eed5c048>
_12 = &_11->process;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_113 = VDEF <.MEM_111>
code_97 = finish_command (_12);
bb index := 7
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_113 = VDEF <.MEM_111>
code_97 = finish_command (_12);
bb index := 7
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_113 = VDEF <.MEM_111>
code_97 = finish_command (_12);
bb index := 7
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
code_97 = finish_command (_12);
./benchmarks/git/use_after_free_2/git_uaf_2.c:275:24: warning: use location
  275 |                 code = finish_command(&pp->children[i].process);
      |                        ^
this stmt is child function---finish_command-----

 ================== trace ================== 
trace fucntion name:finish_command 
[40;44m =======trace_function_path finish_command  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:finish_command========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_clear========= [0m
[40;46m =======add node_fun stack:child_process_clear========= [0m
[40;44m =======trace_function_path child_process_clear  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:child_process_clear========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;46m =======add node_fun stack:wait_or_whine========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_113 = VDEF <.MEM_111>
code_97 = finish_command (_12);
bb index := 7
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_113 = VDEF <.MEM_111>
code_97 = finish_command (_12);
bb index := 7
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_113 = VDEF <.MEM_111>
code_97 = finish_command (_12);
bb index := 7
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
code_97 = finish_command (_12);
./benchmarks/git/use_after_free_2/git_uaf_2.c:275:24: warning: use location
  275 |                 code = finish_command(&pp->children[i].process);
      |                        ^
this stmt is child function---finish_command-----

 ================== trace ================== 
trace fucntion name:finish_command 
[40;44m =======trace_function_path finish_command  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:finish_command========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_clear========= [0m
[40;46m =======add node_fun stack:child_process_clear========= [0m
[40;44m =======trace_function_path child_process_clear  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:child_process_clear========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;46m =======add node_fun stack:wait_or_whine========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64eed36a20
    type <pointer_type 0x7f64eed137e0
        type <record_type 0x7f64eed13738 child_process BLK
            size <integer_cst 0x7f64eecfc978 constant 640>
            unit-size <integer_cst 0x7f64eecfc948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed13738 fields <field_decl 0x7f64eed15850 argv> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed137e0>>
        public unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _12 = &_11->process;
    version:12
    ptr-info 0x7f64eed5c048>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f64eed3b360
    type <pointer_type 0x7f64eed137e0
        type <record_type 0x7f64eed13738 child_process BLK
            size <integer_cst 0x7f64eecfc978 constant 640>
            unit-size <integer_cst 0x7f64eecfc948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed13738 fields <field_decl 0x7f64eed15850 argv> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed137e0>>
        public unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _44 = &_43->process;
    version:44
    ptr-info 0x7f64eed5c1f8>
_44 = &_43->process;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_118 = VDEF <.MEM_117>
child_process_init (_44);
bb index := 10
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_118 = VDEF <.MEM_117>
child_process_init (_44);
bb index := 10
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_118 = VDEF <.MEM_117>
child_process_init (_44);
bb index := 10
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_118 = VDEF <.MEM_117>
child_process_init (_44);
child_process_init (_44);
./benchmarks/git/use_after_free_2/git_uaf_2.c:289:17: warning: use location
  289 |                 child_process_init(&pp->children[i].process);
      |                 ^
this stmt is child function---child_process_init-----

 ================== trace ================== 
trace fucntion name:child_process_init 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_118 = VDEF <.MEM_117>
child_process_init (_44);
bb index := 10
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_118 = VDEF <.MEM_117>
child_process_init (_44);
bb index := 10
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_118 = VDEF <.MEM_117>
child_process_init (_44);
bb index := 10
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_118 = VDEF <.MEM_117>
child_process_init (_44);
child_process_init (_44);
./benchmarks/git/use_after_free_2/git_uaf_2.c:289:17: warning: use location
  289 |                 child_process_init(&pp->children[i].process);
      |                 ^
this stmt is child function---child_process_init-----

 ================== trace ================== 
trace fucntion name:child_process_init 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64eed3b360
    type <pointer_type 0x7f64eed137e0
        type <record_type 0x7f64eed13738 child_process BLK
            size <integer_cst 0x7f64eecfc978 constant 640>
            unit-size <integer_cst 0x7f64eecfc948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed13738 fields <field_decl 0x7f64eed15850 argv> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed137e0>>
        public unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _44 = &_43->process;
    version:44
    ptr-info 0x7f64eed5c1f8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f64eed3b558
    type <pointer_type 0x7f64eed13888
        type <record_type 0x7f64eed0c150 strbuf BLK
            size <integer_cst 0x7f64ef1fa078 constant 192>
            unit-size <integer_cst 0x7f64ef1fa048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed0c150 fields <field_decl 0x7f64eed08260 alloc> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed13888>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _51 = &pp_91(D)->buffered_output;
    version:51
    ptr-info 0x7f64eed5c258>
_51 = &pp_91(D)->buffered_output;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_124 = VDEF <.MEM_118>
strbuf_addbuf (_51, _50);
strbuf_addbuf (_51, _50);
./benchmarks/git/use_after_free_2/git_uaf_2.c:292:25: warning: use location
  292 |                         strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);
      |                         ^
this stmt is child function---strbuf_addbuf-----

 ================== trace ================== 
trace fucntion name:strbuf_addbuf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_124 = VDEF <.MEM_118>
strbuf_addbuf (_51, _50);
strbuf_addbuf (_51, _50);
./benchmarks/git/use_after_free_2/git_uaf_2.c:292:25: warning: use location
this stmt is child function---strbuf_addbuf-----

 ================== trace ================== 
trace fucntion name:strbuf_addbuf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64eed3b558
    type <pointer_type 0x7f64eed13888
        type <record_type 0x7f64eed0c150 strbuf BLK
            size <integer_cst 0x7f64ef1fa078 constant 192>
            unit-size <integer_cst 0x7f64ef1fa048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed0c150 fields <field_decl 0x7f64eed08260 alloc> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed13888>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _51 = &pp_91(D)->buffered_output;
    version:51
    ptr-info 0x7f64eed5c258>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f64eed3b6c0
    type <pointer_type 0x7f64eed13888
        type <record_type 0x7f64eed0c150 strbuf BLK
            size <integer_cst 0x7f64ef1fa078 constant 192>
            unit-size <integer_cst 0x7f64ef1fa048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed0c150 fields <field_decl 0x7f64eed08260 alloc> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed13888>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _56 = &_55->err;
    version:56
    ptr-info 0x7f64eed5c2a0>
_56 = &_55->err;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_125 = VDEF <.MEM_124>
strbuf_reset (_56);
strbuf_reset (_56);
./benchmarks/git/use_after_free_2/git_uaf_2.c:293:25: warning: use location
  293 |                         strbuf_reset(&pp->children[i].err);
      |                         ^
this stmt is child function---strbuf_reset-----

 ================== trace ================== 
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_125 = VDEF <.MEM_124>
strbuf_reset (_56);
strbuf_reset (_56);
./benchmarks/git/use_after_free_2/git_uaf_2.c:293:25: warning: use location
this stmt is child function---strbuf_reset-----

 ================== trace ================== 
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64eed3b6c0
    type <pointer_type 0x7f64eed13888
        type <record_type 0x7f64eed0c150 strbuf BLK
            size <integer_cst 0x7f64ef1fa078 constant 192>
            unit-size <integer_cst 0x7f64ef1fa048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed0c150 fields <field_decl 0x7f64eed08260 alloc> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed13888>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _56 = &_55->err;
    version:56
    ptr-info 0x7f64eed5c2a0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f64eed3b870
    type <pointer_type 0x7f64eed0c000
        type <integer_type 0x7f64eed05930 char public QI
            size <integer_cst 0x7f64ef1dcca8 constant 8>
            unit-size <integer_cst 0x7f64ef1dccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64ef1f13f0 precision:8 min <integer_cst 0x7f64eecfc7b0 -128> max <integer_cst 0x7f64eecfc798 127>
            pointer_to_this <pointer_type 0x7f64eed0c000>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7f64eed0e690>>
   
    def_stmt _62 = _61->err.buf;
    version:62
    ptr-info 0x7f64eed5c300>
# VUSE <.MEM_118>
_62 = _61->err.buf;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_119 = VDEF <.MEM_118>
fputs (_62, _57);
fputs (_62, _57);
./benchmarks/git/use_after_free_2/git_uaf_2.c:295:25: warning: use location
  295 |                         fputs(pp->children[i].err.buf, stderr);
      |                         ^
this stmt is child function---fputs-----

 ================== trace ================== 
trace fucntion name:fputs 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_119 = VDEF <.MEM_118>
fputs (_62, _57);
fputs (_62, _57);
./benchmarks/git/use_after_free_2/git_uaf_2.c:295:25: warning: use location
this stmt is child function---fputs-----

 ================== trace ================== 
trace fucntion name:fputs 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64eed3b870
    type <pointer_type 0x7f64eed0c000
        type <integer_type 0x7f64eed05930 char public QI
            size <integer_cst 0x7f64ef1dcca8 constant 8>
            unit-size <integer_cst 0x7f64ef1dccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64ef1f13f0 precision:8 min <integer_cst 0x7f64eecfc7b0 -128> max <integer_cst 0x7f64eecfc798 127>
            pointer_to_this <pointer_type 0x7f64eed0c000>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7f64eed0e690>>
   
    def_stmt _62 = _61->err.buf;
    version:62
    ptr-info 0x7f64eed5c300>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f64eed3b9d8
    type <pointer_type 0x7f64eed13888
        type <record_type 0x7f64eed0c150 strbuf BLK
            size <integer_cst 0x7f64ef1fa078 constant 192>
            unit-size <integer_cst 0x7f64ef1fa048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed0c150 fields <field_decl 0x7f64eed08260 alloc> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed13888>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _67 = &_66->err;
    version:67
    ptr-info 0x7f64eed5c348>
_67 = &_66->err;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_120 = VDEF <.MEM_119>
strbuf_reset (_67);
strbuf_reset (_67);
./benchmarks/git/use_after_free_2/git_uaf_2.c:296:25: warning: use location
  296 |                         strbuf_reset(&pp->children[i].err);
      |                         ^
this stmt is child function---strbuf_reset-----

 ================== trace ================== 
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_120 = VDEF <.MEM_119>
strbuf_reset (_67);
strbuf_reset (_67);
./benchmarks/git/use_after_free_2/git_uaf_2.c:296:25: warning: use location
this stmt is child function---strbuf_reset-----

 ================== trace ================== 
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64eed3b9d8
    type <pointer_type 0x7f64eed13888
        type <record_type 0x7f64eed0c150 strbuf BLK
            size <integer_cst 0x7f64ef1fa078 constant 192>
            unit-size <integer_cst 0x7f64ef1fa048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed0c150 fields <field_decl 0x7f64eed08260 alloc> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed13888>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _67 = &_66->err;
    version:67
    ptr-info 0x7f64eed5c348>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f64eed3ba68
    type <pointer_type 0x7f64eed0c000
        type <integer_type 0x7f64eed05930 char public QI
            size <integer_cst 0x7f64ef1dcca8 constant 8>
            unit-size <integer_cst 0x7f64ef1dccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64ef1f13f0 precision:8 min <integer_cst 0x7f64eecfc7b0 -128> max <integer_cst 0x7f64eecfc798 127>
            pointer_to_this <pointer_type 0x7f64eed0c000>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7f64eed0e690>>
   
    def_stmt _69 = pp_91(D)->buffered_output.buf;
    version:69
    ptr-info 0x7f64eed5c378>
# VUSE <.MEM_120>
_69 = pp_91(D)->buffered_output.buf;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_121 = VDEF <.MEM_120>
fputs (_69, _68);
fputs (_69, _68);
./benchmarks/git/use_after_free_2/git_uaf_2.c:299:25: warning: use location
  299 |                         fputs(pp->buffered_output.buf, stderr);
      |                         ^
this stmt is child function---fputs-----

 ================== trace ================== 
trace fucntion name:fputs 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_121 = VDEF <.MEM_120>
fputs (_69, _68);
fputs (_69, _68);
./benchmarks/git/use_after_free_2/git_uaf_2.c:299:25: warning: use location
this stmt is child function---fputs-----

 ================== trace ================== 
trace fucntion name:fputs 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64eed3ba68
    type <pointer_type 0x7f64eed0c000
        type <integer_type 0x7f64eed05930 char public QI
            size <integer_cst 0x7f64ef1dcca8 constant 8>
            unit-size <integer_cst 0x7f64ef1dccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64ef1f13f0 precision:8 min <integer_cst 0x7f64eecfc7b0 -128> max <integer_cst 0x7f64eecfc798 127>
            pointer_to_this <pointer_type 0x7f64eed0c000>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7f64eed0e690>>
   
    def_stmt _69 = pp_91(D)->buffered_output.buf;
    version:69
    ptr-info 0x7f64eed5c378>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f64eed3bab0
    type <pointer_type 0x7f64eed13888
        type <record_type 0x7f64eed0c150 strbuf BLK
            size <integer_cst 0x7f64ef1fa078 constant 192>
            unit-size <integer_cst 0x7f64ef1fa048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed0c150 fields <field_decl 0x7f64eed08260 alloc> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed13888>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _70 = &pp_91(D)->buffered_output;
    version:70
    ptr-info 0x7f64eed5c390>
_70 = &pp_91(D)->buffered_output;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_122 = VDEF <.MEM_121>
strbuf_reset (_70);
strbuf_reset (_70);
./benchmarks/git/use_after_free_2/git_uaf_2.c:300:25: warning: use location
  300 |                         strbuf_reset(&pp->buffered_output);
      |                         ^
this stmt is child function---strbuf_reset-----

 ================== trace ================== 
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_122 = VDEF <.MEM_121>
strbuf_reset (_70);
strbuf_reset (_70);
./benchmarks/git/use_after_free_2/git_uaf_2.c:300:25: warning: use location
this stmt is child function---strbuf_reset-----

 ================== trace ================== 
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64eed3bab0
    type <pointer_type 0x7f64eed13888
        type <record_type 0x7f64eed0c150 strbuf BLK
            size <integer_cst 0x7f64ef1fa078 constant 192>
            unit-size <integer_cst 0x7f64ef1fa048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed0c150 fields <field_decl 0x7f64eed08260 alloc> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed13888>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _70 = &pp_91(D)->buffered_output;
    version:70
    ptr-info 0x7f64eed5c390>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:pp_collect_finished========= [0m
[40;44m =======node_fun:kill_children========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path kill_children  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:kill========= [0m
[40;33m =======POP node_fun stack:kill========= [0m
[40;42m =======pre_check_funciton:kill_children========= [0m
[40;42m =======start_check_funciton:kill_children========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f64eed3c948
    type <integer_type 0x7f64ef1f15e8 int public SI
        size <integer_cst 0x7f64ef1dcdf8 constant 32>
        unit-size <integer_cst 0x7f64ef1dce10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64ef1f15e8 precision:32 min <integer_cst 0x7f64ef1dcdb0 -2147483648> max <integer_cst 0x7f64ef1dcdc8 2147483647>
        pointer_to_this <pointer_type 0x7f64ef1f89d8>>
   
    def_stmt _10 = _9->process.pid;
    version:10>
# VUSE <.MEM_21>
_10 = _9->process.pid;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_23 = VDEF <.MEM_21>
kill (_10, signo_17(D));
kill (_10, signo_17(D));
In function ‘kill_children’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:259:25: warning: use location
  259 |                         kill(pp->children[i].process.pid, signo);
      |                         ^
this stmt is child function---kill-----

 ================== trace ================== 
trace fucntion name:kill 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_23 = VDEF <.MEM_21>
kill (_10, signo_17(D));
kill (_10, signo_17(D));
./benchmarks/git/use_after_free_2/git_uaf_2.c:259:25: warning: use location
this stmt is child function---kill-----

 ================== trace ================== 
trace fucntion name:kill 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64eed3c948
    type <integer_type 0x7f64ef1f15e8 int public SI
        size <integer_cst 0x7f64ef1dcdf8 constant 32>
        unit-size <integer_cst 0x7f64ef1dce10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64ef1f15e8 precision:32 min <integer_cst 0x7f64ef1dcdb0 -2147483648> max <integer_cst 0x7f64ef1dcdc8 2147483647>
        pointer_to_this <pointer_type 0x7f64ef1f89d8>>
   
    def_stmt _10 = _9->process.pid;
    version:10>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:kill_children========= [0m
[40;44m =======node_fun:pp_start_one========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path pp_start_one  function_call count: 5 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;33m =======POP node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;33m =======POP node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:start_command========= [0m
[40;33m =======POP node_fun stack:start_command========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:pp_start_one========= [0m
[40;42m =======start_check_funciton:pp_start_one========= [0m

dot graph START

======================================================================
 <addr_expr 0x7f64eed2ca80
    type <pointer_type 0x7f64eed16d20
        type <array_type 0x7f64eed16c78 type <integer_type 0x7f64eed05930 char>
            BLK
            size <integer_cst 0x7f64eecfccf0 constant 216>
            unit-size <integer_cst 0x7f64eecfccd8 constant 27>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f64eed16bd0>
            pointer_to_this <pointer_type 0x7f64eed16d20>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f64eed48090 type <array_type 0x7f64eed16c78>
        readonly constant static "BUG: bookkeeping is hard%s\000">
    ./benchmarks/git/use_after_free_2/git_uaf_2.c:220:3 start: ./benchmarks/git/use_after_free_2/git_uaf_2.c:220:3 finish: ./benchmarks/git/use_after_free_2/git_uaf_2.c:220:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f64eed45480
    type <pointer_type 0x7f64eed13888
        type <record_type 0x7f64eed0c150 strbuf BLK
            size <integer_cst 0x7f64ef1fa078 constant 192>
            unit-size <integer_cst 0x7f64ef1fa048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed0c150 fields <field_decl 0x7f64eed08260 alloc> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed13888>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _30 = &pp_102(D)->buffered_output;
    version:30
    ptr-info 0x7f64eed5c5e8>
_30 = &pp_102(D)->buffered_output;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_130 = VDEF <.MEM_118>
strbuf_addbuf (_30, _29);
bb index := 9
# VUSE <.MEM_46>
return 0;
In function ‘pp_start_one’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_130 = VDEF <.MEM_118>
strbuf_addbuf (_30, _29);
bb index := 9
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================
# .MEM_130 = VDEF <.MEM_118>
strbuf_addbuf (_30, _29);
strbuf_addbuf (_30, _29);
./benchmarks/git/use_after_free_2/git_uaf_2.c:227:17: warning: use location
  227 |                 strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);
      |                 ^
this stmt is child function---strbuf_addbuf-----

 ================== trace ================== 
trace fucntion name:strbuf_addbuf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_130 = VDEF <.MEM_118>
strbuf_addbuf (_30, _29);
bb index := 9
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_130 = VDEF <.MEM_118>
strbuf_addbuf (_30, _29);
bb index := 9
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================
# .MEM_130 = VDEF <.MEM_118>
strbuf_addbuf (_30, _29);
strbuf_addbuf (_30, _29);
./benchmarks/git/use_after_free_2/git_uaf_2.c:227:17: warning: use location
  227 |                 strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);
      |                 ^
this stmt is child function---strbuf_addbuf-----

 ================== trace ================== 
trace fucntion name:strbuf_addbuf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64eed45480
    type <pointer_type 0x7f64eed13888
        type <record_type 0x7f64eed0c150 strbuf BLK
            size <integer_cst 0x7f64ef1fa078 constant 192>
            unit-size <integer_cst 0x7f64ef1fa048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed0c150 fields <field_decl 0x7f64eed08260 alloc> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed13888>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _30 = &pp_102(D)->buffered_output;
    version:30
    ptr-info 0x7f64eed5c5e8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f64eed455e8
    type <pointer_type 0x7f64eed13888
        type <record_type 0x7f64eed0c150 strbuf BLK
            size <integer_cst 0x7f64ef1fa078 constant 192>
            unit-size <integer_cst 0x7f64ef1fa048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed0c150 fields <field_decl 0x7f64eed08260 alloc> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed13888>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _35 = &_34->err;
    version:35
    ptr-info 0x7f64eed5c630>
_35 = &_34->err;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_131 = VDEF <.MEM_130>
strbuf_reset (_35);
bb index := 9
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_131 = VDEF <.MEM_130>
strbuf_reset (_35);
bb index := 9
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================
# .MEM_131 = VDEF <.MEM_130>
strbuf_reset (_35);
strbuf_reset (_35);
./benchmarks/git/use_after_free_2/git_uaf_2.c:228:17: warning: use location
  228 |                 strbuf_reset(&pp->children[i].err);
      |                 ^
this stmt is child function---strbuf_reset-----

 ================== trace ================== 
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_131 = VDEF <.MEM_130>
strbuf_reset (_35);
bb index := 9
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_131 = VDEF <.MEM_130>
strbuf_reset (_35);
bb index := 9
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================
# .MEM_131 = VDEF <.MEM_130>
strbuf_reset (_35);
strbuf_reset (_35);
./benchmarks/git/use_after_free_2/git_uaf_2.c:228:17: warning: use location
  228 |                 strbuf_reset(&pp->children[i].err);
      |                 ^
this stmt is child function---strbuf_reset-----

 ================== trace ================== 
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64eed455e8
    type <pointer_type 0x7f64eed13888
        type <record_type 0x7f64eed0c150 strbuf BLK
            size <integer_cst 0x7f64ef1fa078 constant 192>
            unit-size <integer_cst 0x7f64ef1fa048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed0c150 fields <field_decl 0x7f64eed08260 alloc> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed13888>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _35 = &_34->err;
    version:35
    ptr-info 0x7f64eed5c630>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f64eed45ab0
    type <pointer_type 0x7f64eed137e0
        type <record_type 0x7f64eed13738 child_process BLK
            size <integer_cst 0x7f64eecfc978 constant 640>
            unit-size <integer_cst 0x7f64eecfc948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed13738 fields <field_decl 0x7f64eed15850 argv> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed137e0>>
        public unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _52 = &_51->process;
    version:52
    ptr-info 0x7f64eed5c708>
_52 = &_51->process;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_53 = start_command (_52);
./benchmarks/git/use_after_free_2/git_uaf_2.c:235:13: warning: use location
  235 |         if (start_command(&pp->children[i].process)) {
      |             ^
this stmt is child function---start_command-----

 ================== trace ================== 
trace fucntion name:start_command 

 ================== trace ================== 
trace fucntion free:0 
if (_53 != 0)
./benchmarks/git/use_after_free_2/git_uaf_2.c:235:12: warning: use location
  235 |         if (start_command(&pp->children[i].process)) {
      |            ^
if (_53 != 0)

 ================== find cond branch ================= 
./benchmarks/git/use_after_free_2/git_uaf_2.c:235:12: warning: use location
Cond in fucntion pp_start_one basic block 10
 ================== possible direct basic block ================= 
from pp_start_one basic block 11
 ================== possible direct basic block ================= 
from pp_start_one basic block 14
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64eed45ab0
    type <pointer_type 0x7f64eed137e0
        type <record_type 0x7f64eed13738 child_process BLK
            size <integer_cst 0x7f64eecfc978 constant 640>
            unit-size <integer_cst 0x7f64eecfc948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed13738 fields <field_decl 0x7f64eed15850 argv> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed137e0>>
        public unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _52 = &_51->process;
    version:52
    ptr-info 0x7f64eed5c708>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f64eed461b0
    type <pointer_type 0x7f64eed13888
        type <record_type 0x7f64eed0c150 strbuf BLK
            size <integer_cst 0x7f64ef1fa078 constant 192>
            unit-size <integer_cst 0x7f64ef1fa048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed0c150 fields <field_decl 0x7f64eed08260 alloc> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed13888>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _76 = &pp_102(D)->buffered_output;
    version:76
    ptr-info 0x7f64eed5c870>
_76 = &pp_102(D)->buffered_output;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_127 = VDEF <.MEM_126>
strbuf_addbuf (_76, _75);
strbuf_addbuf (_76, _75);
./benchmarks/git/use_after_free_2/git_uaf_2.c:240:17: warning: use location
  240 |                 strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);
      |                 ^
this stmt is child function---strbuf_addbuf-----

 ================== trace ================== 
trace fucntion name:strbuf_addbuf 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_127 = VDEF <.MEM_126>
strbuf_addbuf (_76, _75);
strbuf_addbuf (_76, _75);
./benchmarks/git/use_after_free_2/git_uaf_2.c:240:17: warning: use location
this stmt is child function---strbuf_addbuf-----

 ================== trace ================== 
trace fucntion name:strbuf_addbuf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64eed461b0
    type <pointer_type 0x7f64eed13888
        type <record_type 0x7f64eed0c150 strbuf BLK
            size <integer_cst 0x7f64ef1fa078 constant 192>
            unit-size <integer_cst 0x7f64ef1fa048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed0c150 fields <field_decl 0x7f64eed08260 alloc> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed13888>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _76 = &pp_102(D)->buffered_output;
    version:76
    ptr-info 0x7f64eed5c870>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f64eed46318
    type <pointer_type 0x7f64eed13888
        type <record_type 0x7f64eed0c150 strbuf BLK
            size <integer_cst 0x7f64ef1fa078 constant 192>
            unit-size <integer_cst 0x7f64ef1fa048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed0c150 fields <field_decl 0x7f64eed08260 alloc> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed13888>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _81 = &_80->err;
    version:81
    ptr-info 0x7f64eed5c8b8>
_81 = &_80->err;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_128 = VDEF <.MEM_127>
strbuf_reset (_81);
strbuf_reset (_81);
./benchmarks/git/use_after_free_2/git_uaf_2.c:241:17: warning: use location
  241 |                 strbuf_reset(&pp->children[i].err);
      |                 ^
this stmt is child function---strbuf_reset-----

 ================== trace ================== 
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_128 = VDEF <.MEM_127>
strbuf_reset (_81);
strbuf_reset (_81);
./benchmarks/git/use_after_free_2/git_uaf_2.c:241:17: warning: use location
this stmt is child function---strbuf_reset-----

 ================== trace ================== 
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64eed46318
    type <pointer_type 0x7f64eed13888
        type <record_type 0x7f64eed0c150 strbuf BLK
            size <integer_cst 0x7f64ef1fa078 constant 192>
            unit-size <integer_cst 0x7f64ef1fa048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed0c150 fields <field_decl 0x7f64eed08260 alloc> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed13888>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _81 = &_80->err;
    version:81
    ptr-info 0x7f64eed5c8b8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:pp_start_one========= [0m
[40;44m =======node_fun:pp_init========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path pp_init  function_call count: 7 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;33m =======POP node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;33m =======POP node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;33m =======POP node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;33m =======POP node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;33m =======POP node_fun stack:online_cpus========= [0m
[40;42m =======pre_check_funciton:pp_init========= [0m
[40;42m =======start_check_funciton:pp_init========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f64eed46ee8
    type <pointer_type 0x7f64ef1f8000
        type <void_type 0x7f64ef1f1f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f64ef1f8000>>
        public unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f64eed05498>>
   
    def_stmt _2 = calloc (_1, 120);
    version:2
    ptr-info 0x7f64eed5c978>
# .MEM_72 = VDEF <.MEM_71>
_2 = calloc (_1, 120);

 ================== trace ptable================== 
trace fucntion name:calloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---calloc-----
this Reserved word function ------calloc-----
 
 Start check Pointer Collect  

======================================================================
_2 = calloc (_1, 120);
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:24: warning: use location
  191 |         pp->children = xcalloc(n, sizeof(*pp->children));
      |                        ^
this stmt is child function---calloc-----

 ================== trace ================== 
pp_34(D)->children = _2;
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:22: warning: use location
  191 |         pp->children = xcalloc(n, sizeof(*pp->children));
      |                      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_80>
_20 = pp_34(D)->pfd;
bb index := 11
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_80>
_20 = pp_34(D)->pfd;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = pp_34(D)->pfd;
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:19: warning: use location
  199 |                 pp->pfd[i].fd = -1;
      |                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_79>
_16 = pp_34(D)->pfd;
bb index := 11
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_79>
_16 = pp_34(D)->pfd;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = pp_34(D)->pfd;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:19: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = _16 + _18;
bb index := 11
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = _16 + _18;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = _16 + _18;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:24: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_80 = VDEF <.MEM_79>
_19->events = 17;
bb index := 11
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_80 = VDEF <.MEM_79>
_19->events = 17;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19->events = 17;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:35: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_78>
_11 = pp_34(D)->children;
bb index := 11
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_78>
_11 = pp_34(D)->children;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = pp_34(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:39: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _11 + _13;
bb index := 11
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _11 + _13;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = _11 + _13;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:49: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = &_14->process;
bb index := 11
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = &_14->process;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = &_14->process;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_78>
child_process_init (_15);
bb index := 11
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_78>
child_process_init (_15);
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
child_process_init (_15);
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                 ^
this stmt is child function---child_process_init-----

 ================== trace ================== 
trace fucntion name:child_process_init 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_60>
_6 = pp_34(D)->children;
bb index := 11
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_60>
_6 = pp_34(D)->children;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = pp_34(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:32: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = _6 + _8;
bb index := 11
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = _6 + _8;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = _6 + _8;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:42: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = &_9->err;
bb index := 11
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = &_9->err;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = &_9->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_60>
strbuf_init (_10, 0);
bb index := 11
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_60>
strbuf_init (_10, 0);
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strbuf_init (_10, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                 ^
this stmt is child function---strbuf_init-----

 ================== trace ================== 
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 
_5 = &pp_34(D)->buffered_output;
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: use location
  193 |         strbuf_init(&pp->buffered_output, 0);
      |         ^
strbuf_init (_5, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: use location
this stmt is child function---strbuf_init-----

 ================== trace ================== 
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 
pp_34(D)->pfd = _4;
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:17: warning: use location
  192 |         pp->pfd = xcalloc(n, sizeof(*pp->pfd));
      |                 ^
pp_34(D)->pfd = _4;
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:17: warning: use location
pp_34(D)->shutdown = 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:190:22: warning: use location
  190 |         pp->shutdown = 0;
      |                      ^
pp_34(D)->output_owner = 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:189:26: warning: use location
  189 |         pp->output_owner = 0;
      |                          ^
pp_34(D)->nr_processes = 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:188:26: warning: use location
  188 |         pp->nr_processes = 0;
      |                          ^
pp_34(D)->task_finished = _27;
./benchmarks/git/use_after_free_2/git_uaf_2.c:186:27: warning: use location
  186 |         pp->task_finished = task_finished ? task_finished : default_task_finished;
      |                           ^
pp_34(D)->task_finished = _27;
./benchmarks/git/use_after_free_2/git_uaf_2.c:186:27: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
pp_34(D)->start_failure = _26;
bb index := 8
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
pp_34(D)->start_failure = _26;
bb index := 8
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
pp_34(D)->start_failure = _26;
bb index := 8
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 13

======================================================================
pp_34(D)->start_failure = _26;
./benchmarks/git/use_after_free_2/git_uaf_2.c:185:27: warning: use location
  185 |         pp->start_failure = start_failure ? start_failure : default_start_failure;
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
pp_34(D)->start_failure = _26;
bb index := 8
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
pp_34(D)->start_failure = _26;
bb index := 8
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
pp_34(D)->start_failure = _26;
bb index := 8
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 13

======================================================================
pp_34(D)->start_failure = _26;
./benchmarks/git/use_after_free_2/git_uaf_2.c:185:27: warning: use location
  185 |         pp->start_failure = start_failure ? start_failure : default_start_failure;
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
pp_34(D)->get_next_task = get_next_task_39(D);
bb index := 6
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
pp_34(D)->get_next_task = get_next_task_39(D);
bb index := 6
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
pp_34(D)->get_next_task = get_next_task_39(D);
bb index := 6
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 13

======================================================================
pp_34(D)->get_next_task = get_next_task_39(D);
./benchmarks/git/use_after_free_2/git_uaf_2.c:183:27: warning: use location
  183 |         pp->get_next_task = get_next_task;
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
pp_34(D)->get_next_task = get_next_task_39(D);
bb index := 6
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
pp_34(D)->get_next_task = get_next_task_39(D);
bb index := 6
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
pp_34(D)->get_next_task = get_next_task_39(D);
bb index := 6
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 13

======================================================================
pp_34(D)->get_next_task = get_next_task_39(D);
./benchmarks/git/use_after_free_2/git_uaf_2.c:183:27: warning: use location
  183 |         pp->get_next_task = get_next_task;
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (get_next_task_39(D) == 0B)
bb index := 4
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (get_next_task_39(D) == 0B)
bb index := 4
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (get_next_task_39(D) == 0B)
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (get_next_task_39(D) == 0B)
bb index := 4
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (get_next_task_39(D) == 0B)
bb index := 4
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (get_next_task_39(D) == 0B)
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
if (get_next_task_39(D) == 0B)
./benchmarks/git/use_after_free_2/git_uaf_2.c:181:12: warning: use location
  181 |         if (!get_next_task)
      |            ^
if (get_next_task_39(D) == 0B)

 ================== find cond branch ================= 
./benchmarks/git/use_after_free_2/git_uaf_2.c:181:12: warning: use location
Cond in fucntion pp_init basic block 4
 ================== possible direct basic block ================= 
from pp_init basic block 5
 ================== possible direct basic block ================= 
from pp_init basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
pp_34(D)->data = data_37(D);
./benchmarks/git/use_after_free_2/git_uaf_2.c:180:18: warning: use location
  180 |         pp->data = data;
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
pp_34(D)->data = data_37(D);
./benchmarks/git/use_after_free_2/git_uaf_2.c:180:18: warning: use location
  180 |         pp->data = data;
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_59>
pp_34(D)->max_processes = n_24;
bb index := 4
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_59>
pp_34(D)->max_processes = n_24;
bb index := 4
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_59>
pp_34(D)->max_processes = n_24;
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_59>
pp_34(D)->max_processes = n_24;
bb index := 4
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_59>
pp_34(D)->max_processes = n_24;
bb index := 4
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_59>
pp_34(D)->max_processes = n_24;
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
pp_34(D)->max_processes = n_24;
./benchmarks/git/use_after_free_2/git_uaf_2.c:176:27: warning: use location
  176 |         pp->max_processes = n;
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (n_24 > i_25)
bb index := 12
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (n_24 > i_25)
bb index := 12
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (n_24 > i_25)
./benchmarks/git/use_after_free_2/git_uaf_2.c:195:23: warning: use location
  195 |         for (i = 0; i < n; i++) {
      |                       ^
if (n_24 > i_25)

 ================== find cond branch ================= 
./benchmarks/git/use_after_free_2/git_uaf_2.c:195:23: warning: use location
Cond in fucntion pp_init basic block 12
 ================== possible direct basic block ================= 
from pp_init basic block 11
 ================== possible direct basic block ================= 
from pp_init basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_3 = (long unsigned int) n_24;
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:19: warning: use location
  192 |         pp->pfd = xcalloc(n, sizeof(*pp->pfd));
      |                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
bb index := 4
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
bb index := 4
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
bb index := 4
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
bb index := 4
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
./benchmarks/git/use_after_free_2/git_uaf_2.c:178:9: warning: use location
  178 |         trace_printf("run_processes_parallel: preparing to run up to %d tasks", n);
      |         ^
this stmt is child function---trace_printf-----

 ================== trace ================== 
trace fucntion name:trace_printf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64eed46ee8
    type <pointer_type 0x7f64ef1f8000
        type <void_type 0x7f64ef1f1f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f64ef1f8000>>
        public unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f64eed05498>>
   
    def_stmt _2 = calloc (_1, 120);
    version:2
    ptr-info 0x7f64eed5c978>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f64eed46f78
    type <pointer_type 0x7f64ef1f8000
        type <void_type 0x7f64ef1f1f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f64ef1f8000>>
        public unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f64eed05498>>
   
    def_stmt _4 = calloc (_3, 8);
    version:4
    ptr-info 0x7f64eed5c990>
# .MEM_74 = VDEF <.MEM_73>
_4 = calloc (_3, 8);

 ================== trace ptable================== 
trace fucntion name:calloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---calloc-----
this Reserved word function ------calloc-----
 
 Start check Pointer Collect  

======================================================================
_4 = calloc (_3, 8);
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:19: warning: use location
  192 |         pp->pfd = xcalloc(n, sizeof(*pp->pfd));
      |                   ^
this stmt is child function---calloc-----

 ================== trace ================== 
pp_34(D)->pfd = _4;
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:17: warning: use location
  192 |         pp->pfd = xcalloc(n, sizeof(*pp->pfd));
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_80>
_20 = pp_34(D)->pfd;
bb index := 11
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_80>
_20 = pp_34(D)->pfd;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = pp_34(D)->pfd;
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:19: warning: use location
  199 |                 pp->pfd[i].fd = -1;
      |                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_79>
_16 = pp_34(D)->pfd;
bb index := 11
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_79>
_16 = pp_34(D)->pfd;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = pp_34(D)->pfd;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:19: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = _16 + _18;
bb index := 11
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = _16 + _18;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = _16 + _18;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:24: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_80 = VDEF <.MEM_79>
_19->events = 17;
bb index := 11
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_80 = VDEF <.MEM_79>
_19->events = 17;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19->events = 17;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:35: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_78>
_11 = pp_34(D)->children;
bb index := 11
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_78>
_11 = pp_34(D)->children;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = pp_34(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:39: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _11 + _13;
bb index := 11
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _11 + _13;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = _11 + _13;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:49: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = &_14->process;
bb index := 11
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = &_14->process;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = &_14->process;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_78>
child_process_init (_15);
bb index := 11
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_78>
child_process_init (_15);
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
child_process_init (_15);
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                 ^
this stmt is child function---child_process_init-----

 ================== trace ================== 
trace fucntion name:child_process_init 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_60>
_6 = pp_34(D)->children;
bb index := 11
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_60>
_6 = pp_34(D)->children;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = pp_34(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:32: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = _6 + _8;
bb index := 11
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = _6 + _8;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = _6 + _8;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:42: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = &_9->err;
bb index := 11
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = &_9->err;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = &_9->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_60>
strbuf_init (_10, 0);
bb index := 11
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_60>
strbuf_init (_10, 0);
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strbuf_init (_10, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                 ^
this stmt is child function---strbuf_init-----

 ================== trace ================== 
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 
_5 = &pp_34(D)->buffered_output;
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: use location
  193 |         strbuf_init(&pp->buffered_output, 0);
      |         ^
strbuf_init (_5, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: use location
this stmt is child function---strbuf_init-----

 ================== trace ================== 
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 
pp_34(D)->children = _2;
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:22: warning: use location
  191 |         pp->children = xcalloc(n, sizeof(*pp->children));
      |                      ^
pp_34(D)->children = _2;
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:22: warning: use location
pp_34(D)->shutdown = 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:190:22: warning: use location
  190 |         pp->shutdown = 0;
      |                      ^
pp_34(D)->output_owner = 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:189:26: warning: use location
  189 |         pp->output_owner = 0;
      |                          ^
pp_34(D)->nr_processes = 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:188:26: warning: use location
  188 |         pp->nr_processes = 0;
      |                          ^
pp_34(D)->task_finished = _27;
./benchmarks/git/use_after_free_2/git_uaf_2.c:186:27: warning: use location
  186 |         pp->task_finished = task_finished ? task_finished : default_task_finished;
      |                           ^
pp_34(D)->task_finished = _27;
./benchmarks/git/use_after_free_2/git_uaf_2.c:186:27: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
pp_34(D)->start_failure = _26;
bb index := 8
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
pp_34(D)->start_failure = _26;
bb index := 8
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
pp_34(D)->start_failure = _26;
bb index := 8
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 13

======================================================================
pp_34(D)->start_failure = _26;
./benchmarks/git/use_after_free_2/git_uaf_2.c:185:27: warning: use location
  185 |         pp->start_failure = start_failure ? start_failure : default_start_failure;
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
pp_34(D)->start_failure = _26;
bb index := 8
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
pp_34(D)->start_failure = _26;
bb index := 8
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
pp_34(D)->start_failure = _26;
bb index := 8
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 13

======================================================================
pp_34(D)->start_failure = _26;
./benchmarks/git/use_after_free_2/git_uaf_2.c:185:27: warning: use location
  185 |         pp->start_failure = start_failure ? start_failure : default_start_failure;
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
pp_34(D)->get_next_task = get_next_task_39(D);
bb index := 6
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
pp_34(D)->get_next_task = get_next_task_39(D);
bb index := 6
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
pp_34(D)->get_next_task = get_next_task_39(D);
bb index := 6
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 13

======================================================================
pp_34(D)->get_next_task = get_next_task_39(D);
./benchmarks/git/use_after_free_2/git_uaf_2.c:183:27: warning: use location
  183 |         pp->get_next_task = get_next_task;
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
pp_34(D)->get_next_task = get_next_task_39(D);
bb index := 6
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
pp_34(D)->get_next_task = get_next_task_39(D);
bb index := 6
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
pp_34(D)->get_next_task = get_next_task_39(D);
bb index := 6
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 13

======================================================================
pp_34(D)->get_next_task = get_next_task_39(D);
./benchmarks/git/use_after_free_2/git_uaf_2.c:183:27: warning: use location
  183 |         pp->get_next_task = get_next_task;
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (get_next_task_39(D) == 0B)
bb index := 4
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (get_next_task_39(D) == 0B)
bb index := 4
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (get_next_task_39(D) == 0B)
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (get_next_task_39(D) == 0B)
bb index := 4
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (get_next_task_39(D) == 0B)
bb index := 4
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (get_next_task_39(D) == 0B)
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
if (get_next_task_39(D) == 0B)
./benchmarks/git/use_after_free_2/git_uaf_2.c:181:12: warning: use location
  181 |         if (!get_next_task)
      |            ^
if (get_next_task_39(D) == 0B)

 ================== find cond branch ================= 
./benchmarks/git/use_after_free_2/git_uaf_2.c:181:12: warning: use location
Cond in fucntion pp_init basic block 4
 ================== possible direct basic block ================= 
from pp_init basic block 5
 ================== possible direct basic block ================= 
from pp_init basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
pp_34(D)->data = data_37(D);
./benchmarks/git/use_after_free_2/git_uaf_2.c:180:18: warning: use location
  180 |         pp->data = data;
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
pp_34(D)->data = data_37(D);
./benchmarks/git/use_after_free_2/git_uaf_2.c:180:18: warning: use location
  180 |         pp->data = data;
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_59>
pp_34(D)->max_processes = n_24;
bb index := 4
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_59>
pp_34(D)->max_processes = n_24;
bb index := 4
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_59>
pp_34(D)->max_processes = n_24;
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_59>
pp_34(D)->max_processes = n_24;
bb index := 4
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_59>
pp_34(D)->max_processes = n_24;
bb index := 4
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_59>
pp_34(D)->max_processes = n_24;
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
pp_34(D)->max_processes = n_24;
./benchmarks/git/use_after_free_2/git_uaf_2.c:176:27: warning: use location
  176 |         pp->max_processes = n;
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (n_24 > i_25)
bb index := 12
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (n_24 > i_25)
bb index := 12
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (n_24 > i_25)
./benchmarks/git/use_after_free_2/git_uaf_2.c:195:23: warning: use location
  195 |         for (i = 0; i < n; i++) {
      |                       ^
if (n_24 > i_25)

 ================== find cond branch ================= 
./benchmarks/git/use_after_free_2/git_uaf_2.c:195:23: warning: use location
Cond in fucntion pp_init basic block 12
 ================== possible direct basic block ================= 
from pp_init basic block 11
 ================== possible direct basic block ================= 
from pp_init basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_1 = (long unsigned int) n_24;
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:24: warning: use location
  191 |         pp->children = xcalloc(n, sizeof(*pp->children));
      |                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
bb index := 4
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
bb index := 4
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
bb index := 4
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
bb index := 4
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
./benchmarks/git/use_after_free_2/git_uaf_2.c:178:9: warning: use location
  178 |         trace_printf("run_processes_parallel: preparing to run up to %d tasks", n);
      |         ^
this stmt is child function---trace_printf-----

 ================== trace ================== 
trace fucntion name:trace_printf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64eed46f78
    type <pointer_type 0x7f64ef1f8000
        type <void_type 0x7f64ef1f1f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f64ef1f8000>>
        public unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f64eed05498>>
   
    def_stmt _4 = calloc (_3, 8);
    version:4
    ptr-info 0x7f64eed5c990>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f64eed506c0
    type <integer_type 0x7f64ef1f15e8 int public SI
        size <integer_cst 0x7f64ef1dcdf8 constant 32>
        unit-size <integer_cst 0x7f64ef1dce10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64ef1f15e8 precision:32 min <integer_cst 0x7f64ef1dcdb0 -2147483648> max <integer_cst 0x7f64ef1dcdc8 2147483647>
        pointer_to_this <pointer_type 0x7f64ef1f89d8>>
    var <parm_decl 0x7f64eed4e000 n>
    def_stmt n_33 = online_cpus ();
    version:33>
# .MEM_62 = VDEF <.MEM_61(D)>
n_33 = online_cpus ();

 ================== trace ptable================== 
trace fucntion name:online_cpus 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---online_cpus-----
this other function ------online_cpus-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
n_24 = PHI <n_30(D)(2), n_33(3)>
bb index := 4
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
n_24 = PHI <n_30(D)(2), n_33(3)>
bb index := 4
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
n_24 = PHI <n_30(D)(2), n_33(3)>
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
n_24 = PHI <n_30(D)(2), n_33(3)>
bb index := 4
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
n_24 = PHI <n_30(D)(2), n_33(3)>
bb index := 4
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
n_24 = PHI <n_30(D)(2), n_33(3)>
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
n_24 = PHI <n_30(D)(2), n_33(3)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (n_24 > i_25)
bb index := 12
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (n_24 > i_25)
bb index := 12
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (n_24 > i_25)
./benchmarks/git/use_after_free_2/git_uaf_2.c:195:23: warning: use location
  195 |         for (i = 0; i < n; i++) {
      |                       ^
if (n_24 > i_25)

 ================== find cond branch ================= 
./benchmarks/git/use_after_free_2/git_uaf_2.c:195:23: warning: use location
Cond in fucntion pp_init basic block 12
 ================== possible direct basic block ================= 
from pp_init basic block 11
 ================== possible direct basic block ================= 
from pp_init basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_3 = (long unsigned int) n_24;
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:19: warning: use location
  192 |         pp->pfd = xcalloc(n, sizeof(*pp->pfd));
      |                   ^
_4 = calloc (_3, 8);
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:19: warning: use location
this stmt is child function---calloc-----

 ================== trace ================== 
pp_34(D)->pfd = _4;
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:17: warning: use location
  192 |         pp->pfd = xcalloc(n, sizeof(*pp->pfd));
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_80>
_20 = pp_34(D)->pfd;
bb index := 11
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_80>
_20 = pp_34(D)->pfd;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = pp_34(D)->pfd;
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:19: warning: use location
  199 |                 pp->pfd[i].fd = -1;
      |                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_79>
_16 = pp_34(D)->pfd;
bb index := 11
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_79>
_16 = pp_34(D)->pfd;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = pp_34(D)->pfd;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:19: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = _16 + _18;
bb index := 11
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = _16 + _18;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = _16 + _18;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:24: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_80 = VDEF <.MEM_79>
_19->events = 17;
bb index := 11
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_80 = VDEF <.MEM_79>
_19->events = 17;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19->events = 17;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:35: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_78>
_11 = pp_34(D)->children;
bb index := 11
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_78>
_11 = pp_34(D)->children;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = pp_34(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:39: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _11 + _13;
bb index := 11
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _11 + _13;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = _11 + _13;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:49: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = &_14->process;
bb index := 11
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = &_14->process;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = &_14->process;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_78>
child_process_init (_15);
bb index := 11
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_78>
child_process_init (_15);
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
child_process_init (_15);
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                 ^
this stmt is child function---child_process_init-----

 ================== trace ================== 
trace fucntion name:child_process_init 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_60>
_6 = pp_34(D)->children;
bb index := 11
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_60>
_6 = pp_34(D)->children;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = pp_34(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:32: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = _6 + _8;
bb index := 11
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = _6 + _8;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = _6 + _8;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:42: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = &_9->err;
bb index := 11
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = &_9->err;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = &_9->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_60>
strbuf_init (_10, 0);
bb index := 11
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_60>
strbuf_init (_10, 0);
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strbuf_init (_10, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                 ^
this stmt is child function---strbuf_init-----

 ================== trace ================== 
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 
_5 = &pp_34(D)->buffered_output;
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: use location
  193 |         strbuf_init(&pp->buffered_output, 0);
      |         ^
strbuf_init (_5, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: use location
this stmt is child function---strbuf_init-----

 ================== trace ================== 
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 
pp_34(D)->children = _2;
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:22: warning: use location
  191 |         pp->children = xcalloc(n, sizeof(*pp->children));
      |                      ^
pp_34(D)->children = _2;
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:22: warning: use location
pp_34(D)->shutdown = 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:190:22: warning: use location
  190 |         pp->shutdown = 0;
      |                      ^
pp_34(D)->output_owner = 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:189:26: warning: use location
  189 |         pp->output_owner = 0;
      |                          ^
pp_34(D)->nr_processes = 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:188:26: warning: use location
  188 |         pp->nr_processes = 0;
      |                          ^
pp_34(D)->task_finished = _27;
./benchmarks/git/use_after_free_2/git_uaf_2.c:186:27: warning: use location
  186 |         pp->task_finished = task_finished ? task_finished : default_task_finished;
      |                           ^
pp_34(D)->task_finished = _27;
./benchmarks/git/use_after_free_2/git_uaf_2.c:186:27: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
pp_34(D)->start_failure = _26;
bb index := 8
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
pp_34(D)->start_failure = _26;
bb index := 8
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
pp_34(D)->start_failure = _26;
bb index := 8
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 13

======================================================================
pp_34(D)->start_failure = _26;
./benchmarks/git/use_after_free_2/git_uaf_2.c:185:27: warning: use location
  185 |         pp->start_failure = start_failure ? start_failure : default_start_failure;
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
pp_34(D)->start_failure = _26;
bb index := 8
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
pp_34(D)->start_failure = _26;
bb index := 8
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
pp_34(D)->start_failure = _26;
bb index := 8
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 13

======================================================================
pp_34(D)->start_failure = _26;
./benchmarks/git/use_after_free_2/git_uaf_2.c:185:27: warning: use location
  185 |         pp->start_failure = start_failure ? start_failure : default_start_failure;
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
pp_34(D)->get_next_task = get_next_task_39(D);
bb index := 6
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
pp_34(D)->get_next_task = get_next_task_39(D);
bb index := 6
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
pp_34(D)->get_next_task = get_next_task_39(D);
bb index := 6
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 13

======================================================================
pp_34(D)->get_next_task = get_next_task_39(D);
./benchmarks/git/use_after_free_2/git_uaf_2.c:183:27: warning: use location
  183 |         pp->get_next_task = get_next_task;
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
pp_34(D)->get_next_task = get_next_task_39(D);
bb index := 6
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
pp_34(D)->get_next_task = get_next_task_39(D);
bb index := 6
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
pp_34(D)->get_next_task = get_next_task_39(D);
bb index := 6
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 13

======================================================================
pp_34(D)->get_next_task = get_next_task_39(D);
./benchmarks/git/use_after_free_2/git_uaf_2.c:183:27: warning: use location
  183 |         pp->get_next_task = get_next_task;
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (get_next_task_39(D) == 0B)
bb index := 4
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (get_next_task_39(D) == 0B)
bb index := 4
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (get_next_task_39(D) == 0B)
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (get_next_task_39(D) == 0B)
bb index := 4
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (get_next_task_39(D) == 0B)
bb index := 4
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (get_next_task_39(D) == 0B)
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
if (get_next_task_39(D) == 0B)
./benchmarks/git/use_after_free_2/git_uaf_2.c:181:12: warning: use location
  181 |         if (!get_next_task)
      |            ^
if (get_next_task_39(D) == 0B)

 ================== find cond branch ================= 
./benchmarks/git/use_after_free_2/git_uaf_2.c:181:12: warning: use location
Cond in fucntion pp_init basic block 4
 ================== possible direct basic block ================= 
from pp_init basic block 5
 ================== possible direct basic block ================= 
from pp_init basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
pp_34(D)->data = data_37(D);
./benchmarks/git/use_after_free_2/git_uaf_2.c:180:18: warning: use location
  180 |         pp->data = data;
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
pp_34(D)->data = data_37(D);
./benchmarks/git/use_after_free_2/git_uaf_2.c:180:18: warning: use location
  180 |         pp->data = data;
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_59>
pp_34(D)->max_processes = n_24;
bb index := 4
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_59>
pp_34(D)->max_processes = n_24;
bb index := 4
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_59>
pp_34(D)->max_processes = n_24;
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_59>
pp_34(D)->max_processes = n_24;
bb index := 4
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_59>
pp_34(D)->max_processes = n_24;
bb index := 4
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_59>
pp_34(D)->max_processes = n_24;
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
pp_34(D)->max_processes = n_24;
./benchmarks/git/use_after_free_2/git_uaf_2.c:176:27: warning: use location
  176 |         pp->max_processes = n;
      |                           ^
_1 = (long unsigned int) n_24;
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:24: warning: use location
  191 |         pp->children = xcalloc(n, sizeof(*pp->children));
      |                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
bb index := 4
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
bb index := 4
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
bb index := 4
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
bb index := 4
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
./benchmarks/git/use_after_free_2/git_uaf_2.c:178:9: warning: use location
  178 |         trace_printf("run_processes_parallel: preparing to run up to %d tasks", n);
      |         ^
this stmt is child function---trace_printf-----

 ================== trace ================== 
trace fucntion name:trace_printf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_62 = VDEF <.MEM_61(D)>
n_33 = online_cpus ();
bb index := 3
# VUSE <.MEM_52>
return _24;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_52>
return _24;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_62 = VDEF <.MEM_61(D)>
n_33 = online_cpus ();
bb index := 3
# VUSE <.MEM_13>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _6;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_62 = VDEF <.MEM_61(D)>
n_33 = online_cpus ();
bb index := 3
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_62 = VDEF <.MEM_61(D)>
n_33 = online_cpus ();
bb index := 3
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_62 = VDEF <.MEM_61(D)>
n_33 = online_cpus ();
bb index := 3
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_62 = VDEF <.MEM_61(D)>
n_33 = online_cpus ();
bb index := 3
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_62 = VDEF <.MEM_61(D)>
n_33 = online_cpus ();
bb index := 3
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_62 = VDEF <.MEM_61(D)>
n_33 = online_cpus ();
bb index := 3
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_62 = VDEF <.MEM_61(D)>
n_33 = online_cpus ();
bb index := 3
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================
n_33 = online_cpus ();
./benchmarks/git/use_after_free_2/git_uaf_2.c:174:21: warning: use location
  174 |                 n = online_cpus();
      |                     ^
this stmt is child function---online_cpus-----

 ================== trace ================== 
trace fucntion name:online_cpus 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64eed506c0
    type <integer_type 0x7f64ef1f15e8 int public SI
        size <integer_cst 0x7f64ef1dcdf8 constant 32>
        unit-size <integer_cst 0x7f64ef1dce10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64ef1f15e8 precision:32 min <integer_cst 0x7f64ef1dcdb0 -2147483648> max <integer_cst 0x7f64ef1dcdc8 2147483647>
        pointer_to_this <pointer_type 0x7f64ef1f89d8>>
    var <parm_decl 0x7f64eed4e000 n>
    def_stmt n_33 = online_cpus ();
    version:33>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f64eed2cdc0
    type <pointer_type 0x7f64eed16498
        type <array_type 0x7f64eed163f0 type <integer_type 0x7f64eed05930 char>
            BLK
            size <integer_cst 0x7f64eecfcc00 constant 448>
            unit-size <integer_cst 0x7f64eecfcc48 constant 56>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f64eed16348>
            pointer_to_this <pointer_type 0x7f64eed16498>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f64eed4b280 type <array_type 0x7f64eed163f0>
        readonly constant static "run_processes_parallel: preparing to run up to %d tasks\000">
    ./benchmarks/git/use_after_free_2/git_uaf_2.c:178:15 start: ./benchmarks/git/use_after_free_2/git_uaf_2.c:178:15 finish: ./benchmarks/git/use_after_free_2/git_uaf_2.c:178:15>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f64eed2ce00
    type <pointer_type 0x7f64eed16738
        type <array_type 0x7f64eed16690 type <integer_type 0x7f64eed05930 char>
            BLK
            size <integer_cst 0x7f64eecfcc60 constant 416>
            unit-size <integer_cst 0x7f64eecfcc90 constant 52>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f64eed165e8>
            pointer_to_this <pointer_type 0x7f64eed16738>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f64eed4b370 type <array_type 0x7f64eed16690>
        readonly constant static "BUG: you need to specify a get_next_task function%s\000">
    ./benchmarks/git/use_after_free_2/git_uaf_2.c:182:3 start: ./benchmarks/git/use_after_free_2/git_uaf_2.c:182:3 finish: ./benchmarks/git/use_after_free_2/git_uaf_2.c:182:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f64eed46ea0
    type <integer_type 0x7f64ef1f17e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64ef1f1738 precision:64 min <integer_cst 0x7f64ef1dce88 0> max <integer_cst 0x7f64ef1dd500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f64ef1fd7e0>>
   
    def_stmt _1 = (long unsigned int) n_24;
    version:1>
_1 = (long unsigned int) n_24;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_2 = calloc (_1, 120);
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:24: warning: use location
  191 |         pp->children = xcalloc(n, sizeof(*pp->children));
      |                        ^
this stmt is child function---calloc-----

 ================== trace ================== 
pp_34(D)->children = _2;
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:22: warning: use location
  191 |         pp->children = xcalloc(n, sizeof(*pp->children));
      |                      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_80>
_20 = pp_34(D)->pfd;
bb index := 11
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_80>
_20 = pp_34(D)->pfd;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = pp_34(D)->pfd;
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:19: warning: use location
  199 |                 pp->pfd[i].fd = -1;
      |                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_79>
_16 = pp_34(D)->pfd;
bb index := 11
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_79>
_16 = pp_34(D)->pfd;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = pp_34(D)->pfd;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:19: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = _16 + _18;
bb index := 11
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = _16 + _18;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = _16 + _18;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:24: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_80 = VDEF <.MEM_79>
_19->events = 17;
bb index := 11
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_80 = VDEF <.MEM_79>
_19->events = 17;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19->events = 17;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:35: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_78>
_11 = pp_34(D)->children;
bb index := 11
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_78>
_11 = pp_34(D)->children;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = pp_34(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:39: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _11 + _13;
bb index := 11
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _11 + _13;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = _11 + _13;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:49: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = &_14->process;
bb index := 11
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = &_14->process;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = &_14->process;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_78>
child_process_init (_15);
bb index := 11
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_78>
child_process_init (_15);
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
child_process_init (_15);
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                 ^
this stmt is child function---child_process_init-----

 ================== trace ================== 
trace fucntion name:child_process_init 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_60>
_6 = pp_34(D)->children;
bb index := 11
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_60>
_6 = pp_34(D)->children;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = pp_34(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:32: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = _6 + _8;
bb index := 11
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = _6 + _8;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = _6 + _8;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:42: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = &_9->err;
bb index := 11
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = &_9->err;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = &_9->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_60>
strbuf_init (_10, 0);
bb index := 11
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_60>
strbuf_init (_10, 0);
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strbuf_init (_10, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                 ^
this stmt is child function---strbuf_init-----

 ================== trace ================== 
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 
_5 = &pp_34(D)->buffered_output;
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: use location
  193 |         strbuf_init(&pp->buffered_output, 0);
      |         ^
strbuf_init (_5, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: use location
this stmt is child function---strbuf_init-----

 ================== trace ================== 
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 
pp_34(D)->pfd = _4;
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:17: warning: use location
  192 |         pp->pfd = xcalloc(n, sizeof(*pp->pfd));
      |                 ^
pp_34(D)->pfd = _4;
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:17: warning: use location
pp_34(D)->shutdown = 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:190:22: warning: use location
  190 |         pp->shutdown = 0;
      |                      ^
pp_34(D)->output_owner = 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:189:26: warning: use location
  189 |         pp->output_owner = 0;
      |                          ^
pp_34(D)->nr_processes = 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:188:26: warning: use location
  188 |         pp->nr_processes = 0;
      |                          ^
pp_34(D)->task_finished = _27;
./benchmarks/git/use_after_free_2/git_uaf_2.c:186:27: warning: use location
  186 |         pp->task_finished = task_finished ? task_finished : default_task_finished;
      |                           ^
pp_34(D)->task_finished = _27;
./benchmarks/git/use_after_free_2/git_uaf_2.c:186:27: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
pp_34(D)->start_failure = _26;
bb index := 8
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
pp_34(D)->start_failure = _26;
bb index := 8
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
pp_34(D)->start_failure = _26;
bb index := 8
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 13

======================================================================
pp_34(D)->start_failure = _26;
./benchmarks/git/use_after_free_2/git_uaf_2.c:185:27: warning: use location
  185 |         pp->start_failure = start_failure ? start_failure : default_start_failure;
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
pp_34(D)->start_failure = _26;
bb index := 8
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
pp_34(D)->start_failure = _26;
bb index := 8
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
pp_34(D)->start_failure = _26;
bb index := 8
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 13

======================================================================
pp_34(D)->start_failure = _26;
./benchmarks/git/use_after_free_2/git_uaf_2.c:185:27: warning: use location
  185 |         pp->start_failure = start_failure ? start_failure : default_start_failure;
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
pp_34(D)->get_next_task = get_next_task_39(D);
bb index := 6
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
pp_34(D)->get_next_task = get_next_task_39(D);
bb index := 6
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
pp_34(D)->get_next_task = get_next_task_39(D);
bb index := 6
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 13

======================================================================
pp_34(D)->get_next_task = get_next_task_39(D);
./benchmarks/git/use_after_free_2/git_uaf_2.c:183:27: warning: use location
  183 |         pp->get_next_task = get_next_task;
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
pp_34(D)->get_next_task = get_next_task_39(D);
bb index := 6
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
pp_34(D)->get_next_task = get_next_task_39(D);
bb index := 6
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
pp_34(D)->get_next_task = get_next_task_39(D);
bb index := 6
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 13

======================================================================
pp_34(D)->get_next_task = get_next_task_39(D);
./benchmarks/git/use_after_free_2/git_uaf_2.c:183:27: warning: use location
  183 |         pp->get_next_task = get_next_task;
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (get_next_task_39(D) == 0B)
bb index := 4
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (get_next_task_39(D) == 0B)
bb index := 4
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (get_next_task_39(D) == 0B)
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (get_next_task_39(D) == 0B)
bb index := 4
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (get_next_task_39(D) == 0B)
bb index := 4
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (get_next_task_39(D) == 0B)
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
if (get_next_task_39(D) == 0B)
./benchmarks/git/use_after_free_2/git_uaf_2.c:181:12: warning: use location
  181 |         if (!get_next_task)
      |            ^
if (get_next_task_39(D) == 0B)

 ================== find cond branch ================= 
./benchmarks/git/use_after_free_2/git_uaf_2.c:181:12: warning: use location
Cond in fucntion pp_init basic block 4
 ================== possible direct basic block ================= 
from pp_init basic block 5
 ================== possible direct basic block ================= 
from pp_init basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
pp_34(D)->data = data_37(D);
./benchmarks/git/use_after_free_2/git_uaf_2.c:180:18: warning: use location
  180 |         pp->data = data;
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
pp_34(D)->data = data_37(D);
./benchmarks/git/use_after_free_2/git_uaf_2.c:180:18: warning: use location
  180 |         pp->data = data;
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_59>
pp_34(D)->max_processes = n_24;
bb index := 4
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_59>
pp_34(D)->max_processes = n_24;
bb index := 4
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_59>
pp_34(D)->max_processes = n_24;
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_59>
pp_34(D)->max_processes = n_24;
bb index := 4
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_59>
pp_34(D)->max_processes = n_24;
bb index := 4
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_59>
pp_34(D)->max_processes = n_24;
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
pp_34(D)->max_processes = n_24;
./benchmarks/git/use_after_free_2/git_uaf_2.c:176:27: warning: use location
  176 |         pp->max_processes = n;
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (n_24 > i_25)
bb index := 12
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (n_24 > i_25)
bb index := 12
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (n_24 > i_25)
./benchmarks/git/use_after_free_2/git_uaf_2.c:195:23: warning: use location
  195 |         for (i = 0; i < n; i++) {
      |                       ^
if (n_24 > i_25)

 ================== find cond branch ================= 
./benchmarks/git/use_after_free_2/git_uaf_2.c:195:23: warning: use location
Cond in fucntion pp_init basic block 12
 ================== possible direct basic block ================= 
from pp_init basic block 11
 ================== possible direct basic block ================= 
from pp_init basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_3 = (long unsigned int) n_24;
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:19: warning: use location
  192 |         pp->pfd = xcalloc(n, sizeof(*pp->pfd));
      |                   ^
_1 = (long unsigned int) n_24;
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:24: warning: use location
  191 |         pp->children = xcalloc(n, sizeof(*pp->children));
      |                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
bb index := 4
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
bb index := 4
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
bb index := 4
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
bb index := 4
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
./benchmarks/git/use_after_free_2/git_uaf_2.c:178:9: warning: use location
  178 |         trace_printf("run_processes_parallel: preparing to run up to %d tasks", n);
      |         ^
this stmt is child function---trace_printf-----

 ================== trace ================== 
trace fucntion name:trace_printf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64eed46ea0
    type <integer_type 0x7f64ef1f17e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64ef1f1738 precision:64 min <integer_cst 0x7f64ef1dce88 0> max <integer_cst 0x7f64ef1dd500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f64ef1fd7e0>>
   
    def_stmt _1 = (long unsigned int) n_24;
    version:1>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f64eed46f30
    type <integer_type 0x7f64ef1f17e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64ef1f1738 precision:64 min <integer_cst 0x7f64ef1dce88 0> max <integer_cst 0x7f64ef1dd500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f64ef1fd7e0>>
   
    def_stmt _3 = (long unsigned int) n_24;
    version:3>
_3 = (long unsigned int) n_24;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_4 = calloc (_3, 8);
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:19: warning: use location
  192 |         pp->pfd = xcalloc(n, sizeof(*pp->pfd));
      |                   ^
this stmt is child function---calloc-----

 ================== trace ================== 
pp_34(D)->pfd = _4;
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:17: warning: use location
  192 |         pp->pfd = xcalloc(n, sizeof(*pp->pfd));
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_80>
_20 = pp_34(D)->pfd;
bb index := 11
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_80>
_20 = pp_34(D)->pfd;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = pp_34(D)->pfd;
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:19: warning: use location
  199 |                 pp->pfd[i].fd = -1;
      |                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_79>
_16 = pp_34(D)->pfd;
bb index := 11
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_79>
_16 = pp_34(D)->pfd;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = pp_34(D)->pfd;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:19: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = _16 + _18;
bb index := 11
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = _16 + _18;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = _16 + _18;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:24: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_80 = VDEF <.MEM_79>
_19->events = 17;
bb index := 11
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_80 = VDEF <.MEM_79>
_19->events = 17;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19->events = 17;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:35: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_78>
_11 = pp_34(D)->children;
bb index := 11
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_78>
_11 = pp_34(D)->children;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = pp_34(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:39: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _11 + _13;
bb index := 11
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _11 + _13;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = _11 + _13;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:49: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = &_14->process;
bb index := 11
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = &_14->process;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = &_14->process;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_78>
child_process_init (_15);
bb index := 11
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_78>
child_process_init (_15);
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
child_process_init (_15);
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                 ^
this stmt is child function---child_process_init-----

 ================== trace ================== 
trace fucntion name:child_process_init 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_60>
_6 = pp_34(D)->children;
bb index := 11
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_60>
_6 = pp_34(D)->children;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = pp_34(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:32: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = _6 + _8;
bb index := 11
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = _6 + _8;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = _6 + _8;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:42: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = &_9->err;
bb index := 11
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = &_9->err;
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = &_9->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_60>
strbuf_init (_10, 0);
bb index := 11
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_60>
strbuf_init (_10, 0);
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strbuf_init (_10, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                 ^
this stmt is child function---strbuf_init-----

 ================== trace ================== 
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 
_5 = &pp_34(D)->buffered_output;
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: use location
  193 |         strbuf_init(&pp->buffered_output, 0);
      |         ^
strbuf_init (_5, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: use location
this stmt is child function---strbuf_init-----

 ================== trace ================== 
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 
pp_34(D)->children = _2;
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:22: warning: use location
  191 |         pp->children = xcalloc(n, sizeof(*pp->children));
      |                      ^
pp_34(D)->children = _2;
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:22: warning: use location
pp_34(D)->shutdown = 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:190:22: warning: use location
  190 |         pp->shutdown = 0;
      |                      ^
pp_34(D)->output_owner = 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:189:26: warning: use location
  189 |         pp->output_owner = 0;
      |                          ^
pp_34(D)->nr_processes = 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:188:26: warning: use location
  188 |         pp->nr_processes = 0;
      |                          ^
pp_34(D)->task_finished = _27;
./benchmarks/git/use_after_free_2/git_uaf_2.c:186:27: warning: use location
  186 |         pp->task_finished = task_finished ? task_finished : default_task_finished;
      |                           ^
pp_34(D)->task_finished = _27;
./benchmarks/git/use_after_free_2/git_uaf_2.c:186:27: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
pp_34(D)->start_failure = _26;
bb index := 8
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
pp_34(D)->start_failure = _26;
bb index := 8
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
pp_34(D)->start_failure = _26;
bb index := 8
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 13

======================================================================
pp_34(D)->start_failure = _26;
./benchmarks/git/use_after_free_2/git_uaf_2.c:185:27: warning: use location
  185 |         pp->start_failure = start_failure ? start_failure : default_start_failure;
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
pp_34(D)->start_failure = _26;
bb index := 8
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
pp_34(D)->start_failure = _26;
bb index := 8
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
pp_34(D)->start_failure = _26;
bb index := 8
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 13

======================================================================
pp_34(D)->start_failure = _26;
./benchmarks/git/use_after_free_2/git_uaf_2.c:185:27: warning: use location
  185 |         pp->start_failure = start_failure ? start_failure : default_start_failure;
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
pp_34(D)->get_next_task = get_next_task_39(D);
bb index := 6
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
pp_34(D)->get_next_task = get_next_task_39(D);
bb index := 6
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
pp_34(D)->get_next_task = get_next_task_39(D);
bb index := 6
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 13

======================================================================
pp_34(D)->get_next_task = get_next_task_39(D);
./benchmarks/git/use_after_free_2/git_uaf_2.c:183:27: warning: use location
  183 |         pp->get_next_task = get_next_task;
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
pp_34(D)->get_next_task = get_next_task_39(D);
bb index := 6
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
pp_34(D)->get_next_task = get_next_task_39(D);
bb index := 6
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
pp_34(D)->get_next_task = get_next_task_39(D);
bb index := 6
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 13

======================================================================
pp_34(D)->get_next_task = get_next_task_39(D);
./benchmarks/git/use_after_free_2/git_uaf_2.c:183:27: warning: use location
  183 |         pp->get_next_task = get_next_task;
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (get_next_task_39(D) == 0B)
bb index := 4
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (get_next_task_39(D) == 0B)
bb index := 4
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (get_next_task_39(D) == 0B)
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (get_next_task_39(D) == 0B)
bb index := 4
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (get_next_task_39(D) == 0B)
bb index := 4
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (get_next_task_39(D) == 0B)
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
if (get_next_task_39(D) == 0B)
./benchmarks/git/use_after_free_2/git_uaf_2.c:181:12: warning: use location
  181 |         if (!get_next_task)
      |            ^
if (get_next_task_39(D) == 0B)

 ================== find cond branch ================= 
./benchmarks/git/use_after_free_2/git_uaf_2.c:181:12: warning: use location
Cond in fucntion pp_init basic block 4
 ================== possible direct basic block ================= 
from pp_init basic block 5
 ================== possible direct basic block ================= 
from pp_init basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
pp_34(D)->data = data_37(D);
./benchmarks/git/use_after_free_2/git_uaf_2.c:180:18: warning: use location
  180 |         pp->data = data;
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
pp_34(D)->data = data_37(D);
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
pp_34(D)->data = data_37(D);
./benchmarks/git/use_after_free_2/git_uaf_2.c:180:18: warning: use location
  180 |         pp->data = data;
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_59>
pp_34(D)->max_processes = n_24;
bb index := 4
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_59>
pp_34(D)->max_processes = n_24;
bb index := 4
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_59>
pp_34(D)->max_processes = n_24;
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_59>
pp_34(D)->max_processes = n_24;
bb index := 4
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_59>
pp_34(D)->max_processes = n_24;
bb index := 4
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_59>
pp_34(D)->max_processes = n_24;
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
pp_34(D)->max_processes = n_24;
./benchmarks/git/use_after_free_2/git_uaf_2.c:176:27: warning: use location
  176 |         pp->max_processes = n;
      |                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (n_24 > i_25)
bb index := 12
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (n_24 > i_25)
bb index := 12
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (n_24 > i_25)
./benchmarks/git/use_after_free_2/git_uaf_2.c:195:23: warning: use location
  195 |         for (i = 0; i < n; i++) {
      |                       ^
if (n_24 > i_25)

 ================== find cond branch ================= 
./benchmarks/git/use_after_free_2/git_uaf_2.c:195:23: warning: use location
Cond in fucntion pp_init basic block 12
 ================== possible direct basic block ================= 
from pp_init basic block 11
 ================== possible direct basic block ================= 
from pp_init basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_3 = (long unsigned int) n_24;
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:19: warning: use location
  192 |         pp->pfd = xcalloc(n, sizeof(*pp->pfd));
      |                   ^
_1 = (long unsigned int) n_24;
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:24: warning: use location
  191 |         pp->children = xcalloc(n, sizeof(*pp->children));
      |                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
bb index := 4
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
bb index := 4
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
bb index := 4
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
bb index := 4
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
beacuse in succ := 15 have return or exit
# VUSE <.MEM_116>
return _98;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
bb index := 4
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
bb index := 4
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
./benchmarks/git/use_after_free_2/git_uaf_2.c:178:9: warning: use location
  178 |         trace_printf("run_processes_parallel: preparing to run up to %d tasks", n);
      |         ^
this stmt is child function---trace_printf-----

 ================== trace ================== 
trace fucntion name:trace_printf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64eed46f30
    type <integer_type 0x7f64ef1f17e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64ef1f1738 precision:64 min <integer_cst 0x7f64ef1dce88 0> max <integer_cst 0x7f64ef1dd500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f64ef1fd7e0>>
   
    def_stmt _3 = (long unsigned int) n_24;
    version:3>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f64eed50000
    type <pointer_type 0x7f64eed13888
        type <record_type 0x7f64eed0c150 strbuf BLK
            size <integer_cst 0x7f64ef1fa078 constant 192>
            unit-size <integer_cst 0x7f64ef1fa048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed0c150 fields <field_decl 0x7f64eed08260 alloc> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed13888>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = &pp_34(D)->buffered_output;
    version:5
    ptr-info 0x7f64eed5c9a8>
_5 = &pp_34(D)->buffered_output;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_76 = VDEF <.MEM_75>
strbuf_init (_5, 0);
strbuf_init (_5, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: use location
  193 |         strbuf_init(&pp->buffered_output, 0);
      |         ^
this stmt is child function---strbuf_init-----

 ================== trace ================== 
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_76 = VDEF <.MEM_75>
strbuf_init (_5, 0);
strbuf_init (_5, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: use location
this stmt is child function---strbuf_init-----

 ================== trace ================== 
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64eed50000
    type <pointer_type 0x7f64eed13888
        type <record_type 0x7f64eed0c150 strbuf BLK
            size <integer_cst 0x7f64ef1fa078 constant 192>
            unit-size <integer_cst 0x7f64ef1fa048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed0c150 fields <field_decl 0x7f64eed08260 alloc> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed13888>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = &pp_34(D)->buffered_output;
    version:5
    ptr-info 0x7f64eed5c9a8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f64eed50168
    type <pointer_type 0x7f64eed13888
        type <record_type 0x7f64eed0c150 strbuf BLK
            size <integer_cst 0x7f64ef1fa078 constant 192>
            unit-size <integer_cst 0x7f64ef1fa048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed0c150 fields <field_decl 0x7f64eed08260 alloc> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed13888>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _10 = &_9->err;
    version:10
    ptr-info 0x7f64eed5c9f0>
_10 = &_9->err;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_60>
strbuf_init (_10, 0);
bb index := 11
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_60>
strbuf_init (_10, 0);
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_78 = VDEF <.MEM_60>
strbuf_init (_10, 0);
strbuf_init (_10, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                 ^
this stmt is child function---strbuf_init-----

 ================== trace ================== 
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_60>
strbuf_init (_10, 0);
bb index := 11
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_60>
strbuf_init (_10, 0);
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_78 = VDEF <.MEM_60>
strbuf_init (_10, 0);
strbuf_init (_10, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                 ^
this stmt is child function---strbuf_init-----

 ================== trace ================== 
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64eed50168
    type <pointer_type 0x7f64eed13888
        type <record_type 0x7f64eed0c150 strbuf BLK
            size <integer_cst 0x7f64ef1fa078 constant 192>
            unit-size <integer_cst 0x7f64ef1fa048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed0c150 fields <field_decl 0x7f64eed08260 alloc> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed13888>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _10 = &_9->err;
    version:10
    ptr-info 0x7f64eed5c9f0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f64eed502d0
    type <pointer_type 0x7f64eed137e0
        type <record_type 0x7f64eed13738 child_process BLK
            size <integer_cst 0x7f64eecfc978 constant 640>
            unit-size <integer_cst 0x7f64eecfc948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed13738 fields <field_decl 0x7f64eed15850 argv> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed137e0>>
        public unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _15 = &_14->process;
    version:15
    ptr-info 0x7f64eed5ca38>
_15 = &_14->process;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_78>
child_process_init (_15);
bb index := 11
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_78>
child_process_init (_15);
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_79 = VDEF <.MEM_78>
child_process_init (_15);
child_process_init (_15);
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                 ^
this stmt is child function---child_process_init-----

 ================== trace ================== 
trace fucntion name:child_process_init 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_78>
child_process_init (_15);
bb index := 11
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
  372 |         return 0;
      |                ^
beacuse in succ := 15 have return or exit
# VUSE <.MEM_46>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:372:16: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 15

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_78>
child_process_init (_15);
bb index := 11
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
  203 | }
      | ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_60>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:203:1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_79 = VDEF <.MEM_78>
child_process_init (_15);
child_process_init (_15);
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                 ^
this stmt is child function---child_process_init-----

 ================== trace ================== 
trace fucntion name:child_process_init 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64eed502d0
    type <pointer_type 0x7f64eed137e0
        type <record_type 0x7f64eed13738 child_process BLK
            size <integer_cst 0x7f64eecfc978 constant 640>
            unit-size <integer_cst 0x7f64eecfc948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed13738 fields <field_decl 0x7f64eed15850 argv> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed137e0>>
        public unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _15 = &_14->process;
    version:15
    ptr-info 0x7f64eed5ca38>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:pp_init========= [0m
[40;44m =======node_fun:default_task_finished========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path default_task_finished  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:strbuf_addf========= [0m
[40;33m =======POP node_fun stack:strbuf_addf========= [0m
[40;42m =======pre_check_funciton:default_task_finished========= [0m
[40;42m =======start_check_funciton:default_task_finished========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f64eed55360
    type <pointer_type 0x7f64eed13888
        type <record_type 0x7f64eed0c150 strbuf BLK
            size <integer_cst 0x7f64ef1fa078 constant 192>
            unit-size <integer_cst 0x7f64ef1fa048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed0c150 fields <field_decl 0x7f64eed08260 alloc> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed13888>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f64eed4e400 err>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7f64eed5cbe8>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_21>
strbuf_addf (err_16(D), " %s", _5);
bb index := 4
# VUSE <.MEM_52>
return _24;
In function ‘default_task_finished’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_52>
return _24;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_21>
strbuf_addf (err_16(D), " %s", _5);
bb index := 4
# VUSE <.MEM_13>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _6;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_21>
strbuf_addf (err_16(D), " %s", _5);
bb index := 4
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================

 Expand conflict 
 The same function may have multiple branches :strbuf_addf
# .MEM_24 = VDEF <.MEM_23(D)>
strbuf_addf (err_16(D), "A child failed with return code %d:", result_14(D));
./benchmarks/git/use_after_free_2/git_uaf_2.c:156:9: warning: use location
  156 |         strbuf_addf(err, "A child failed with return code %d:", result);
      |         ^
# .MEM_25 = VDEF <.MEM_21>
strbuf_addf (err_16(D), " %s", _5);
./benchmarks/git/use_after_free_2/git_uaf_2.c:158:17: warning: use location
  158 |                 strbuf_addf(err, " %s", cp->argv[i]);
      |                 ^
=======================Path Constaint===========================

=======================Path Constaint===========================


======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23(D)>
strbuf_addf (err_16(D), "A child failed with return code %d:", result_14(D));
bb index := 3
# VUSE <.MEM_52>
return _24;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_52>
return _24;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23(D)>
strbuf_addf (err_16(D), "A child failed with return code %d:", result_14(D));
bb index := 3
# VUSE <.MEM_13>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _6;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23(D)>
strbuf_addf (err_16(D), "A child failed with return code %d:", result_14(D));
bb index := 3
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================
# .MEM_24 = VDEF <.MEM_23(D)>
strbuf_addf (err_16(D), "A child failed with return code %d:", result_14(D));
strbuf_addf (err_16(D), "A child failed with return code %d:", result_14(D));
./benchmarks/git/use_after_free_2/git_uaf_2.c:156:9: warning: use location
  156 |         strbuf_addf(err, "A child failed with return code %d:", result);
      |         ^
this stmt is child function---strbuf_addf-----

 ================== trace ================== 
trace fucntion name:strbuf_addf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23(D)>
strbuf_addf (err_16(D), "A child failed with return code %d:", result_14(D));
bb index := 3
# VUSE <.MEM_52>
return _24;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_52>
return _24;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23(D)>
strbuf_addf (err_16(D), "A child failed with return code %d:", result_14(D));
bb index := 3
# VUSE <.MEM_13>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _6;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23(D)>
strbuf_addf (err_16(D), "A child failed with return code %d:", result_14(D));
bb index := 3
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================
# .MEM_24 = VDEF <.MEM_23(D)>
strbuf_addf (err_16(D), "A child failed with return code %d:", result_14(D));
strbuf_addf (err_16(D), "A child failed with return code %d:", result_14(D));
./benchmarks/git/use_after_free_2/git_uaf_2.c:156:9: warning: use location
this stmt is child function---strbuf_addf-----

 ================== trace ================== 
trace fucntion name:strbuf_addf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64eed55360
    type <pointer_type 0x7f64eed13888
        type <record_type 0x7f64eed0c150 strbuf BLK
            size <integer_cst 0x7f64ef1fa078 constant 192>
            unit-size <integer_cst 0x7f64ef1fa048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed0c150 fields <field_decl 0x7f64eed08260 alloc> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed13888>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f64eed4e400 err>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7f64eed5cbe8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f64eed55360
    type <pointer_type 0x7f64eed13888
        type <record_type 0x7f64eed0c150 strbuf BLK
            size <integer_cst 0x7f64ef1fa078 constant 192>
            unit-size <integer_cst 0x7f64ef1fa048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed0c150 fields <field_decl 0x7f64eed08260 alloc> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed13888>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f64eed4e400 err>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7f64eed5cbe8>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_21>
strbuf_addf (err_16(D), " %s", _5);
bb index := 4
# VUSE <.MEM_52>
return _24;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_52>
return _24;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_21>
strbuf_addf (err_16(D), " %s", _5);
bb index := 4
# VUSE <.MEM_13>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _6;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_21>
strbuf_addf (err_16(D), " %s", _5);
bb index := 4
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_25 = VDEF <.MEM_21>
strbuf_addf (err_16(D), " %s", _5);
strbuf_addf (err_16(D), " %s", _5);
./benchmarks/git/use_after_free_2/git_uaf_2.c:158:17: warning: use location
  158 |                 strbuf_addf(err, " %s", cp->argv[i]);
      |                 ^
this stmt is child function---strbuf_addf-----

 ================== trace ================== 
trace fucntion name:strbuf_addf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23(D)>
strbuf_addf (err_16(D), "A child failed with return code %d:", result_14(D));
bb index := 3
# VUSE <.MEM_52>
return _24;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_52>
return _24;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23(D)>
strbuf_addf (err_16(D), "A child failed with return code %d:", result_14(D));
bb index := 3
# VUSE <.MEM_13>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _6;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23(D)>
strbuf_addf (err_16(D), "A child failed with return code %d:", result_14(D));
bb index := 3
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

 Expand conflict 
 The same function may have multiple branches :strbuf_addf
# .MEM_25 = VDEF <.MEM_21>
strbuf_addf (err_16(D), " %s", _5);
./benchmarks/git/use_after_free_2/git_uaf_2.c:158:17: warning: use location
# .MEM_24 = VDEF <.MEM_23(D)>
strbuf_addf (err_16(D), "A child failed with return code %d:", result_14(D));
./benchmarks/git/use_after_free_2/git_uaf_2.c:156:9: warning: use location
  156 |         strbuf_addf(err, "A child failed with return code %d:", result);
      |         ^
=======================Path Constaint===========================

=succs:= 2
if (result_14(D) == 0)
./benchmarks/git/use_after_free_2/git_uaf_2.c:153:12: warning: use location
  153 |         if (!result)
      |            ^
	relate logic:= 0
=======================Path Constaint===========================


======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23(D)>
strbuf_addf (err_16(D), "A child failed with return code %d:", result_14(D));
bb index := 3
# VUSE <.MEM_52>
return _24;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_52>
return _24;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23(D)>
strbuf_addf (err_16(D), "A child failed with return code %d:", result_14(D));
bb index := 3
# VUSE <.MEM_13>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_13>
return _6;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23(D)>
strbuf_addf (err_16(D), "A child failed with return code %d:", result_14(D));
bb index := 3
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_22>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

 Expand conflict 
 The same function may have multiple branches :strbuf_addf
# .MEM_25 = VDEF <.MEM_21>
strbuf_addf (err_16(D), " %s", _5);
./benchmarks/git/use_after_free_2/git_uaf_2.c:158:17: warning: use location
  158 |                 strbuf_addf(err, " %s", cp->argv[i]);
      |                 ^
# .MEM_24 = VDEF <.MEM_23(D)>
strbuf_addf (err_16(D), "A child failed with return code %d:", result_14(D));
./benchmarks/git/use_after_free_2/git_uaf_2.c:156:9: warning: use location
  156 |         strbuf_addf(err, "A child failed with return code %d:", result);
      |         ^
=======================Path Constaint===========================

=succs:= 2
if (result_14(D) == 0)
./benchmarks/git/use_after_free_2/git_uaf_2.c:153:12: warning: use location
  153 |         if (!result)
      |            ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64eed55360
    type <pointer_type 0x7f64eed13888
        type <record_type 0x7f64eed0c150 strbuf BLK
            size <integer_cst 0x7f64ef1fa078 constant 192>
            unit-size <integer_cst 0x7f64ef1fa048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed0c150 fields <field_decl 0x7f64eed08260 alloc> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed13888>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f64eed4e400 err>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7f64eed5cbe8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:default_task_finished========= [0m
[40;44m =======node_fun:default_start_failure========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path default_start_failure  function_call count: 2 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:strbuf_addf========= [0m
[40;33m =======POP node_fun stack:strbuf_addf========= [0m
[40;42m =======pre add _ fucntion:strbuf_addstr========= [0m
[40;33m =======POP node_fun stack:strbuf_addstr========= [0m
[40;42m =======pre_check_funciton:default_start_failure========= [0m
[40;42m =======start_check_funciton:default_start_failure========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f64eed558b8
    type <pointer_type 0x7f64eed13888
        type <record_type 0x7f64eed0c150 strbuf BLK
            size <integer_cst 0x7f64ef1fa078 constant 192>
            unit-size <integer_cst 0x7f64ef1fa048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed0c150 fields <field_decl 0x7f64eed08260 alloc> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed13888>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f64eed4e600 err>
    def_stmt GIMPLE_NOP
    version:14
    ptr-info 0x7f64eed5cca8>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_19>
strbuf_addf (err_14(D), " %s", _5);
bb index := 3
# VUSE <.MEM_110>
return result_87;
In function ‘default_start_failure’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_19>
strbuf_addf (err_14(D), " %s", _5);
bb index := 3
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_19>
strbuf_addf (err_14(D), " %s", _5);
bb index := 3
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strbuf_addf (err_14(D), " %s", _5);
./benchmarks/git/use_after_free_2/git_uaf_2.c:140:17: warning: use location
  140 |                 strbuf_addf(err, " %s", cp->argv[i]);
      |                 ^
this stmt is child function---strbuf_addf-----

 ================== trace ================== 
trace fucntion name:strbuf_addf 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_21 = VDEF <.MEM_20(D)>
strbuf_addstr (err_14(D), "Starting a child failed:");
strbuf_addstr (err_14(D), "Starting a child failed:");
./benchmarks/git/use_after_free_2/git_uaf_2.c:138:9: warning: use location
  138 |         strbuf_addstr(err, "Starting a child failed:");
      |         ^
this stmt is child function---strbuf_addstr-----

 ================== trace ================== 
trace fucntion name:strbuf_addstr 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_21 = VDEF <.MEM_20(D)>
strbuf_addstr (err_14(D), "Starting a child failed:");
strbuf_addstr (err_14(D), "Starting a child failed:");
./benchmarks/git/use_after_free_2/git_uaf_2.c:138:9: warning: use location
this stmt is child function---strbuf_addstr-----

 ================== trace ================== 
trace fucntion name:strbuf_addstr 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64eed558b8
    type <pointer_type 0x7f64eed13888
        type <record_type 0x7f64eed0c150 strbuf BLK
            size <integer_cst 0x7f64ef1fa078 constant 192>
            unit-size <integer_cst 0x7f64ef1fa048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed0c150 fields <field_decl 0x7f64eed08260 alloc> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed13888>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f64eed4e600 err>
    def_stmt GIMPLE_NOP
    version:14
    ptr-info 0x7f64eed5cca8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f64eed558b8
    type <pointer_type 0x7f64eed13888
        type <record_type 0x7f64eed0c150 strbuf BLK
            size <integer_cst 0x7f64ef1fa078 constant 192>
            unit-size <integer_cst 0x7f64ef1fa048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed0c150 fields <field_decl 0x7f64eed08260 alloc> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed13888>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f64eed4e600 err>
    def_stmt GIMPLE_NOP
    version:14
    ptr-info 0x7f64eed5cca8>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_19>
strbuf_addf (err_14(D), " %s", _5);
bb index := 3
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
  316 |         return result;
      |                ^
beacuse in succ := 18 have return or exit
# VUSE <.MEM_110>
return result_87;
./benchmarks/git/use_after_free_2/git_uaf_2.c:316:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_19>
strbuf_addf (err_14(D), " %s", _5);
bb index := 3
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
  260 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_21>
return;
./benchmarks/git/use_after_free_2/git_uaf_2.c:260:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_19>
strbuf_addf (err_14(D), " %s", _5);
bb index := 3
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
  142 |         return 0;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_19>
return 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:142:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_22 = VDEF <.MEM_19>
strbuf_addf (err_14(D), " %s", _5);
strbuf_addf (err_14(D), " %s", _5);
./benchmarks/git/use_after_free_2/git_uaf_2.c:140:17: warning: use location
  140 |                 strbuf_addf(err, " %s", cp->argv[i]);
      |                 ^
this stmt is child function---strbuf_addf-----

 ================== trace ================== 
trace fucntion name:strbuf_addf 

 ================== trace ================== 
trace fucntion free:0 
strbuf_addstr (err_14(D), "Starting a child failed:");
./benchmarks/git/use_after_free_2/git_uaf_2.c:138:9: warning: use location
  138 |         strbuf_addstr(err, "Starting a child failed:");
      |         ^
this stmt is child function---strbuf_addstr-----

 ================== trace ================== 
trace fucntion name:strbuf_addstr 

 ================== trace ================== 
trace fucntion free:0 
strbuf_addstr (err_14(D), "Starting a child failed:");
./benchmarks/git/use_after_free_2/git_uaf_2.c:138:9: warning: use location
this stmt is child function---strbuf_addstr-----

 ================== trace ================== 
trace fucntion name:strbuf_addstr 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f64eed558b8
    type <pointer_type 0x7f64eed13888
        type <record_type 0x7f64eed0c150 strbuf BLK
            size <integer_cst 0x7f64ef1fa078 constant 192>
            unit-size <integer_cst 0x7f64ef1fa048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f64eed0c150 fields <field_decl 0x7f64eed08260 alloc> context <translation_unit_decl 0x7f64ef1e7168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f64eed13888>>
        unsigned DI
        size <integer_cst 0x7f64ef1dcbb8 constant 64>
        unit-size <integer_cst 0x7f64ef1dcbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f64eed4e600 err>
    def_stmt GIMPLE_NOP
    version:14
    ptr-info 0x7f64eed5cca8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:default_start_failure========= [0m
fucntion collect path finsh

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
proc = {};
proc.args.argv = &empty_argv;
proc.env_array.argv = &empty_argv;
if (argc_30(D) <= 2)
  goto <bb 16>; [34.00%]
else
  goto <bb 3>; [66.00%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 708669601]:
_1 = argv_31(D) + 16;
proc.argv = _1;
_2 = MEM[(char * *)argv_31(D) + 8B];
_3 = strcmp (_2, "start-command-ENOENT");
if (_3 == 0)
  goto <bb 4>; [33.00%]
else
  goto <bb 7>; [67.00%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 233860967]:
_4 = start_command (&proc);
if (_4 < 0)
  goto <bb 5>; [73.25%]
else
  goto <bb 6>; [26.75%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 171303159]:
_5 = __errno_location ();
_6 = *_5;
if (_6 == 2)
  goto <bb 16>; [34.00%]
else
  goto <bb 6>; [66.00%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 175617892]:
_7 = MEM[(char * *)argv_31(D) + 8B];
_8 = stderr;
fprintf (_8, "FAIL %s\n", _7);
goto <bb 16>; [100.00%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 474808634]:
_9 = MEM[(char * *)argv_31(D) + 8B];
_10 = strcmp (_9, "run-command");
if (_10 == 0)
  goto <bb 8>; [0.04%]
else
  goto <bb 9>; [99.96%]

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 189923]:
_11 = run_command (&proc);
exit (_11);

=======is loop:0=========

 bb index 9 
<bb 9> [local count: 474618711]:
_12 = MEM[(char * *)argv_31(D) + 16B];
jobs_33 = atoi (_12);
_13 = argv_31(D) + 24;
proc.argv = _13;
_14 = MEM[(char * *)argv_31(D) + 8B];
_15 = strcmp (_14, "run-command-parallel");
if (_15 == 0)
  goto <bb 10>; [0.04%]
else
  goto <bb 11>; [99.96%]

=======is loop:0=========

 bb index 10 
<bb 10> [local count: 189847]:
_16 = run_processes_parallel (jobs_33, parallel_next, 0B, 0B, &proc);
exit (_16);

=======is loop:0=========

 bb index 11 
<bb 11> [local count: 474428864]:
_17 = MEM[(char * *)argv_31(D) + 8B];
_18 = strcmp (_17, "run-command-abort");
if (_18 == 0)
  goto <bb 12>; [0.04%]
else
  goto <bb 13>; [99.96%]

=======is loop:0=========

 bb index 12 
<bb 12> [local count: 189771]:
_19 = run_processes_parallel (jobs_33, parallel_next, 0B, task_finished, &proc);
exit (_19);

=======is loop:0=========

 bb index 13 
<bb 13> [local count: 474239093]:
_20 = MEM[(char * *)argv_31(D) + 8B];
_21 = strcmp (_20, "run-command-no-jobs");
if (_21 == 0)
  goto <bb 14>; [0.04%]
else
  goto <bb 15>; [99.96%]

=======is loop:0=========

 bb index 14 
<bb 14> [local count: 189695]:
_22 = run_processes_parallel (jobs_33, no_job, 0B, task_finished, &proc);
exit (_22);

=======is loop:0=========

 bb index 15 
<bb 15> [local count: 474049397]:
_23 = stderr;
__builtin_fwrite ("check usage\n", 1, 12, _23);

=======is loop:0=========

 bb index 16 
<bb 16> [local count: 1072982589]:
# _24 = PHI <1(2), 0(5), 1(6), 1(15)>
proc ={v} {CLOBBER};
return _24;

=======Mapping node_fun:task_finished=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
strbuf_addf (err_2(D), "asking for a quick stop\n");
return 1;

=======Mapping node_fun:no_job=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
strbuf_addf (err_2(D), "no further jobs available\n");
return 0;

=======Mapping node_fun:parallel_next=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = number_callbacks;
if (_1 > 3)
  goto <bb 4>; [51.12%]
else
  goto <bb 3>; [48.88%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 524845000]:
_2 = MEM[(struct child_process *)cb_8(D)].argv;
_3 = &cp_10(D)->args;
argv_array_pushv (_3, _2);
strbuf_addf (err_12(D), "preloaded output of a child\n");
_4 = number_callbacks;
_5 = _4 + 1;
number_callbacks = _5;

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073741824]:
# _6 = PHI <0(2), 1(3)>
return _6;

=======Mapping node_fun:run_processes_parallel=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 44310769]:
pp_init (&pp, n_15(D), get_next_task_16(D), start_failure_17(D), task_finished_18(D), pp_cb_19(D));

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 46613822]:

=======is loop:1=========

 bb index 17 
<bb 17> [local count: 86184446]:

=======is loop:1=========

 bb index 16 
<bb 16> [local count: 805650347]:
goto <bb 8>; [100.00%]

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 812398425]:
code_22 = pp_start_one (&pp);
if (code_22 == 0)
  goto <bb 5>; [33.00%]
else
  goto <bb 6>; [67.00%]

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 268091479]:
// predicted unlikely by continue predictor.
i_25 = i_8 + 1;
goto <bb 8>; [100.00%]

=======is loop:1=========

 bb index 6 
<bb 6> [local count: 544306946]:
if (code_22 < 0)
  goto <bb 7>; [25.50%]
else
  goto <bb 11>; [74.50%]

=======is loop:1=========

 bb index 7 
<bb 7> [local count: 138798273]:
pp.shutdown = 1;
_1 = -code_22;
kill_children (&pp, _1);
goto <bb 11>; [100.00%]

=======is loop:1=========

 bb index 8 
<bb 8> [local count: 1073741824]:
# i_8 = PHI <0(16), i_25(5)>
if (i_8 <= 3)
  goto <bb 9>; [80.00%]
else
  goto <bb 11>; [20.00%]

=======is loop:1=========

 bb index 9 
<bb 9> [local count: 858993457]:
_2 = BIT_FIELD_REF <pp, 8, 448>;
_3 = _2 & 1;
if (_3 == 0)
  goto <bb 10>; [97.25%]
else
  goto <bb 11>; [2.75%]

=======is loop:1=========

 bb index 10 
<bb 10> [local count: 835371135]:
_4 = pp.nr_processes;
_5 = pp.max_processes;
if (_4 < _5)
  goto <bb 4>; [97.25%]
else
  goto <bb 11>; [2.75%]

=======is loop:1=========

 bb index 11 
<bb 11> [local count: 805650348]:
_6 = pp.nr_processes;
if (_6 == 0)
  goto <bb 15>; [5.50%]
else
  goto <bb 12>; [94.50%]

=======is loop:1=========

 bb index 12 
<bb 12> [local count: 761339579]:
pp_buffer_stderr (&pp, 100);
pp_output (&pp);
code_29 = pp_collect_finished (&pp);
if (code_29 != 0)
  goto <bb 13>; [5.50%]
else
  goto <bb 19>; [94.50%]

=======is loop:1=========

 bb index 19 
<bb 19> [local count: 719465902]:
goto <bb 16>; [100.00%]

=======is loop:1=========

 bb index 13 
<bb 13> [local count: 41873677]:
pp.shutdown = 1;
if (code_29 < 0)
  goto <bb 14>; [5.50%]
else
  goto <bb 18>; [94.50%]

=======is loop:1=========

 bb index 18 
<bb 18> [local count: 39570624]:
goto <bb 17>; [100.00%]

=======is loop:1=========

 bb index 14 
<bb 14> [local count: 2303052]:
_7 = -code_29;
kill_children (&pp, _7);
goto <bb 3>; [100.00%]

=======is loop:0=========

 bb index 15 
<bb 15> [local count: 44310769]:
pp_cleanup (&pp);
pp ={v} {CLOBBER};
return 0;

=======Mapping node_fun:child_process_clear=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = &child_3(D)->args;
argv_array_clear (_1);
_2 = &child_3(D)->env_array;
argv_array_clear (_2);
return;

=======Mapping node_fun:finish_command=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = cmd_5(D)->argv;
_2 = *_1;
_3 = cmd_5(D)->pid;
ret_7 = wait_or_whine (_3, _2, 0);
child_process_clear (cmd_5(D));
return ret_7;

=======Mapping node_fun:pp_collect_finished=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 12617860]:
n_92 = pp_91(D)->max_processes;
goto <bb 19>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 1014686025]:
_1 = pp_91(D)->children;
_2 = (long unsigned int) i_83;
_3 = _2 * 120;
_4 = _1 + _3;
_5 = _4->state;
if (_5 == 2)
  goto <bb 6>; [5.50%]
else
  goto <bb 4>; [94.50%]

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 958878294]:
i_95 = i_83 + 1;

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 1073741824]:
# i_83 = PHI <i_95(4), 0(20)>
_6 = pp_91(D)->max_processes;
if (_6 > i_83)
  goto <bb 3>; [94.50%]
else
  goto <bb 6>; [5.50%]

=======is loop:1=========

 bb index 6 
<bb 6> [local count: 114863531]:
_7 = pp_91(D)->max_processes;
if (_7 == i_83)
  goto <bb 18>; [3.66%]
else
  goto <bb 7>; [96.34%]

=======is loop:1=========

 bb index 7 
<bb 7> [local count: 110659526]:
_8 = pp_91(D)->children;
_9 = (long unsigned int) i_83;
_10 = _9 * 120;
_11 = _8 + _10;
_12 = &_11->process;
code_97 = finish_command (_12);
_13 = pp_91(D)->task_finished;
_14 = pp_91(D)->children;
_15 = (long unsigned int) i_83;
_16 = _15 * 120;
_17 = _14 + _16;
_18 = &_17->data;
_19 = pp_91(D)->data;
_20 = pp_91(D)->children;
_21 = (long unsigned int) i_83;
_22 = _21 * 120;
_23 = _20 + _22;
_24 = &_23->err;
_25 = pp_91(D)->children;
_26 = (long unsigned int) i_83;
_27 = _26 * 120;
_28 = _25 + _27;
_29 = &_28->process;
code_99 = _13 (code_97, _29, _24, _19, _18);
if (code_99 != 0)
  goto <bb 8>; [50.00%]
else
  goto <bb 9>; [50.00%]

=======is loop:1=========

 bb index 8 
<bb 8> [local count: 55329763]:

=======is loop:1=========

 bb index 9 
<bb 9> [local count: 110659526]:
# result_85 = PHI <result_86(7), code_99(8)>
if (code_99 < 0)
  goto <bb 18>; [3.66%]
else
  goto <bb 10>; [96.34%]

=======is loop:1=========

 bb index 10 
<bb 10> [local count: 106609387]:
_30 = pp_91(D)->nr_processes;
_31 = _30 + -1;
pp_91(D)->nr_processes = _31;
_32 = pp_91(D)->children;
_33 = (long unsigned int) i_83;
_34 = _33 * 120;
_35 = _32 + _34;
_35->state = 0;
_36 = pp_91(D)->pfd;
_37 = (long unsigned int) i_83;
_38 = _37 * 8;
_39 = _36 + _38;
_39->fd = -1;
_40 = pp_91(D)->children;
_41 = (long unsigned int) i_83;
_42 = _41 * 120;
_43 = _40 + _42;
_44 = &_43->process;
child_process_init (_44);
_45 = pp_91(D)->output_owner;
if (_45 != i_83)
  goto <bb 11>; [84.00%]
else
  goto <bb 12>; [16.00%]

=======is loop:1=========

 bb index 11 
<bb 11> [local count: 89551886]:
_46 = pp_91(D)->children;
_47 = (long unsigned int) i_83;
_48 = _47 * 120;
_49 = _46 + _48;
_50 = &_49->err;
_51 = &pp_91(D)->buffered_output;
strbuf_addbuf (_51, _50);
_52 = pp_91(D)->children;
_53 = (long unsigned int) i_83;
_54 = _53 * 120;
_55 = _52 + _54;
_56 = &_55->err;
strbuf_reset (_56);
goto <bb 17>; [100.00%]

=======is loop:1=========

 bb index 12 
<bb 12> [local count: 17057502]:
_57 = stderr;
_58 = pp_91(D)->children;
_59 = (long unsigned int) i_83;
_60 = _59 * 120;
_61 = _58 + _60;
_62 = _61->err.buf;
fputs (_62, _57);
_63 = pp_91(D)->children;
_64 = (long unsigned int) i_83;
_65 = _64 * 120;
_66 = _63 + _65;
_67 = &_66->err;
strbuf_reset (_67);
_68 = stderr;
_69 = pp_91(D)->buffered_output.buf;
fputs (_69, _68);
_70 = &pp_91(D)->buffered_output;
strbuf_reset (_70);
goto <bb 15>; [100.00%]

=======is loop:1=========

 bb index 13 
<bb 13> [local count: 150683236]:
_71 = pp_91(D)->children;
_72 = pp_91(D)->output_owner;
_73 = _72 + i_84;
_74 = _73 % n_92;
_75 = (long unsigned int) _74;
_76 = _75 * 120;
_77 = _71 + _76;
_78 = _77->state;
if (_78 == 1)
  goto <bb 16>; [5.50%]
else
  goto <bb 14>; [94.50%]

=======is loop:1=========

 bb index 14 
<bb 14> [local count: 142395658]:
i_108 = i_84 + 1;

=======is loop:1=========

 bb index 15 
<bb 15> [local count: 159453160]:
# i_84 = PHI <0(12), i_108(14)>
if (i_84 < n_92)
  goto <bb 13>; [94.50%]
else
  goto <bb 16>; [5.50%]

=======is loop:1=========

 bb index 16 
<bb 16> [local count: 17057502]:
_79 = pp_91(D)->output_owner;
_80 = _79 + i_84;
_81 = _80 % n_92;
pp_91(D)->output_owner = _81;

=======is loop:1=========

 bb index 17 
<bb 17> [local count: 106609387]:
# result_93 = PHI <result_85(11), result_85(16)>

=======is loop:1=========

 bb index 19 
<bb 19> [local count: 119227248]:
# result_86 = PHI <0(2), result_93(17)>
_82 = pp_91(D)->nr_processes;
if (_82 > 0)
  goto <bb 20>; [96.34%]
else
  goto <bb 18>; [3.66%]

=======is loop:1=========

 bb index 20 
<bb 20> [local count: 114863530]:
goto <bb 5>; [100.00%]

=======is loop:0=========

 bb index 18 
<bb 18> [local count: 12617862]:
# result_87 = PHI <result_86(6), result_85(9), result_86(19)>
return result_87;

=======Mapping node_fun:kill_children=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 118111600]:
n_16 = pp_15(D)->max_processes;
goto <bb 6>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 955630225]:
_1 = pp_15(D)->children;
_2 = (long unsigned int) i_11;
_3 = _2 * 120;
_4 = _1 + _3;
_5 = _4->state;
if (_5 == 1)
  goto <bb 4>; [20.24%]
else
  goto <bb 5>; [79.76%]

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 193419556]:
_6 = pp_15(D)->children;
_7 = (long unsigned int) i_11;
_8 = _7 * 120;
_9 = _6 + _8;
_10 = _9->process.pid;
kill (_10, signo_17(D));

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 955630227]:
i_19 = i_11 + 1;

=======is loop:1=========

 bb index 6 
<bb 6> [local count: 1073741824]:
# i_11 = PHI <0(2), i_19(5)>
if (i_11 < n_16)
  goto <bb 3>; [89.00%]
else
  goto <bb 7>; [11.00%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 118111600]:
return;

=======Mapping node_fun:pp_start_one=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 114863530]:
goto <bb 5>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 1014686026]:
_1 = pp_102(D)->children;
_2 = (long unsigned int) i_97;
_3 = _2 * 120;
_4 = _1 + _3;
_5 = _4->state;
if (_5 == 0)
  goto <bb 6>; [5.50%]
else
  goto <bb 4>; [94.50%]

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 958878296]:
i_103 = i_97 + 1;

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 1073741824]:
# i_97 = PHI <0(2), i_103(4)>
_6 = pp_102(D)->max_processes;
if (_6 > i_97)
  goto <bb 3>; [94.50%]
else
  goto <bb 6>; [5.50%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 114863531]:
_7 = pp_102(D)->max_processes;
if (_7 == i_97)
  goto <bb 7>; [0.04%]
else
  goto <bb 8>; [99.96%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 45945]:
printf ("BUG: bookkeeping is hard%s", "");
exit (1);

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 114817586]:
_8 = pp_102(D)->get_next_task;
_9 = pp_102(D)->children;
_10 = (long unsigned int) i_97;
_11 = _10 * 120;
_12 = _9 + _11;
_13 = &_12->data;
_14 = pp_102(D)->data;
_15 = pp_102(D)->children;
_16 = (long unsigned int) i_97;
_17 = _16 * 120;
_18 = _15 + _17;
_19 = &_18->err;
_20 = pp_102(D)->children;
_21 = (long unsigned int) i_97;
_22 = _21 * 120;
_23 = _20 + _22;
_24 = &_23->process;
code_105 = _8 (_24, _19, _14, _13);
if (code_105 == 0)
  goto <bb 9>; [34.00%]
else
  goto <bb 10>; [66.00%]

=======is loop:0=========

 bb index 9 
<bb 9> [local count: 39037980]:
_25 = pp_102(D)->children;
_26 = (long unsigned int) i_97;
_27 = _26 * 120;
_28 = _25 + _27;
_29 = &_28->err;
_30 = &pp_102(D)->buffered_output;
strbuf_addbuf (_30, _29);
_31 = pp_102(D)->children;
_32 = (long unsigned int) i_97;
_33 = _32 * 120;
_34 = _31 + _33;
_35 = &_34->err;
strbuf_reset (_35);
goto <bb 15>; [100.00%]

=======is loop:0=========

 bb index 10 
<bb 10> [local count: 75779606]:
_36 = pp_102(D)->children;
_37 = (long unsigned int) i_97;
_38 = _37 * 120;
_39 = _36 + _38;
_39->process.err = -1;
_40 = pp_102(D)->children;
_41 = (long unsigned int) i_97;
_42 = _41 * 120;
_43 = _40 + _42;
_43->process.stdout_to_stderr = 1;
_44 = pp_102(D)->children;
_45 = (long unsigned int) i_97;
_46 = _45 * 120;
_47 = _44 + _46;
_47->process.no_stdin = 1;
_48 = pp_102(D)->children;
_49 = (long unsigned int) i_97;
_50 = _49 * 120;
_51 = _48 + _50;
_52 = &_51->process;
_53 = start_command (_52);
if (_53 != 0)
  goto <bb 11>; [34.00%]
else
  goto <bb 14>; [66.00%]

=======is loop:0=========

 bb index 11 
<bb 11> [local count: 25765066]:
_54 = pp_102(D)->start_failure;
_55 = pp_102(D)->children;
_56 = (long unsigned int) i_97;
_57 = _56 * 120;
_58 = _55 + _57;
_59 = &_58->data;
_60 = pp_102(D)->data;
_61 = pp_102(D)->children;
_62 = (long unsigned int) i_97;
_63 = _62 * 120;
_64 = _61 + _63;
_65 = &_64->err;
_66 = pp_102(D)->children;
_67 = (long unsigned int) i_97;
_68 = _67 * 120;
_69 = _66 + _68;
_70 = &_69->process;
code_114 = _54 (_70, _65, _60, _59);
_71 = pp_102(D)->children;
_72 = (long unsigned int) i_97;
_73 = _72 * 120;
_74 = _71 + _73;
_75 = &_74->err;
_76 = &pp_102(D)->buffered_output;
strbuf_addbuf (_76, _75);
_77 = pp_102(D)->children;
_78 = (long unsigned int) i_97;
_79 = _78 * 120;
_80 = _77 + _79;
_81 = &_80->err;
strbuf_reset (_81);
if (code_114 != 0)
  goto <bb 12>; [50.00%]
else
  goto <bb 13>; [50.00%]

=======is loop:0=========

 bb index 12 
<bb 12> [local count: 12882533]:
pp_102(D)->shutdown = 1;

=======is loop:0=========

 bb index 13 
<bb 13> [local count: 25765066]:
goto <bb 15>; [100.00%]

=======is loop:0=========

 bb index 14 
<bb 14> [local count: 50014540]:
_82 = pp_102(D)->nr_processes;
_83 = _82 + 1;
pp_102(D)->nr_processes = _83;
_84 = pp_102(D)->children;
_85 = (long unsigned int) i_97;
_86 = _85 * 120;
_87 = _84 + _86;
_87->state = 1;
_88 = pp_102(D)->children;
_89 = (long unsigned int) i_97;
_90 = _89 * 120;
_91 = _88 + _90;
_92 = pp_102(D)->pfd;
_93 = (long unsigned int) i_97;
_94 = _93 * 8;
_95 = _92 + _94;
_96 = _91->process.err;
_95->fd = _96;

=======is loop:0=========

 bb index 15 
<bb 15> [local count: 114817586]:
# _98 = PHI <1(9), code_114(13), 0(14)>
return _98;

=======Mapping node_fun:pp_init=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 118158864]:
if (n_30(D) <= 0)
  goto <bb 3>; [25.50%]
else
  goto <bb 4>; [74.50%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 30130511]:
n_33 = online_cpus ();

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 118158864]:
# n_24 = PHI <n_30(D)(2), n_33(3)>
pp_34(D)->max_processes = n_24;
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
pp_34(D)->data = data_37(D);
if (get_next_task_39(D) == 0B)
  goto <bb 5>; [0.04%]
else
  goto <bb 6>; [99.96%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 47263]:
printf ("BUG: you need to specify a get_next_task function%s", "");
exit (1);

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 118111600]:
pp_34(D)->get_next_task = get_next_task_39(D);
if (start_failure_41(D) != 0B)
  goto <bb 8>; [70.00%]
else
  goto <bb 7>; [30.00%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 35433480]:

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 118111600]:
# _26 = PHI <start_failure_41(D)(6), default_start_failure(7)>
pp_34(D)->start_failure = _26;
if (task_finished_43(D) != 0B)
  goto <bb 10>; [70.00%]
else
  goto <bb 9>; [30.00%]

=======is loop:0=========

 bb index 9 
<bb 9> [local count: 35433480]:

=======is loop:0=========

 bb index 10 
<bb 10> [local count: 118111600]:
# _27 = PHI <task_finished_43(D)(8), default_task_finished(9)>
pp_34(D)->task_finished = _27;
pp_34(D)->nr_processes = 0;
pp_34(D)->output_owner = 0;
pp_34(D)->shutdown = 0;
_1 = (long unsigned int) n_24;
_2 = calloc (_1, 120);
pp_34(D)->children = _2;
_3 = (long unsigned int) n_24;
_4 = calloc (_3, 8);
pp_34(D)->pfd = _4;
_5 = &pp_34(D)->buffered_output;
strbuf_init (_5, 0);
goto <bb 12>; [100.00%]

=======is loop:1=========

 bb index 11 
<bb 11> [local count: 955630226]:
_6 = pp_34(D)->children;
_7 = (long unsigned int) i_25;
_8 = _7 * 120;
_9 = _6 + _8;
_10 = &_9->err;
strbuf_init (_10, 0);
_11 = pp_34(D)->children;
_12 = (long unsigned int) i_25;
_13 = _12 * 120;
_14 = _11 + _13;
_15 = &_14->process;
child_process_init (_15);
_16 = pp_34(D)->pfd;
_17 = (long unsigned int) i_25;
_18 = _17 * 8;
_19 = _16 + _18;
_19->events = 17;
_20 = pp_34(D)->pfd;
_21 = (long unsigned int) i_25;
_22 = _21 * 8;
_23 = _20 + _22;
_23->fd = -1;
i_58 = i_25 + 1;

=======is loop:1=========

 bb index 12 
<bb 12> [local count: 1073741824]:
# i_25 = PHI <0(10), i_58(11)>
if (n_24 > i_25)
  goto <bb 11>; [89.00%]
else
  goto <bb 13>; [11.00%]

=======is loop:0=========

 bb index 13 
<bb 13> [local count: 118111600]:
return;

=======Mapping node_fun:default_task_finished=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 241635845]:
if (result_14(D) == 0)
  goto <bb 6>; [51.12%]
else
  goto <bb 3>; [48.88%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 118111600]:
strbuf_addf (err_16(D), "A child failed with return code %d:", result_14(D));
goto <bb 5>; [100.00%]

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 955630225]:
_1 = cp_18(D)->argv;
_2 = (long unsigned int) i_11;
_3 = _2 * 8;
_4 = _1 + _3;
_5 = *_4;
strbuf_addf (err_16(D), " %s", _5);
i_20 = i_11 + 1;

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 1073741824]:
# i_11 = PHI <0(3), i_20(4)>
_6 = cp_18(D)->argv;
_7 = (long unsigned int) i_11;
_8 = _7 * 8;
_9 = _6 + _8;
_10 = *_9;
if (_10 != 0B)
  goto <bb 4>; [89.00%]
else
  goto <bb 6>; [11.00%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 241635845]:
return 0;

=======Mapping node_fun:default_start_failure=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 118111600]:
strbuf_addstr (err_14(D), "Starting a child failed:");
goto <bb 4>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 955630225]:
_1 = cp_16(D)->argv;
_2 = (long unsigned int) i_11;
_3 = _2 * 8;
_4 = _1 + _3;
_5 = *_4;
strbuf_addf (err_14(D), " %s", _5);
i_18 = i_11 + 1;

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 1073741824]:
# i_11 = PHI <0(2), i_18(3)>
_6 = cp_16(D)->argv;
_7 = (long unsigned int) i_11;
_8 = _7 * 8;
_9 = _6 + _8;
_10 = *_9;
if (_10 != 0B)
  goto <bb 3>; [89.00%]
else
  goto <bb 5>; [11.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 118111600]:
return 0;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    gimple malloc count : 2 [0m
[40;34m    gimple free   count : 0 [0m
[40;34m    find Entry point : 41 [0m
[40;34m    used_stmt array stack totalsize of : 0.006008 mb[0m
[40;34m    collect time: : 0.000720 s [0m
[40;34m    algorithm time: 0.397263 s [0m
[40;34m    gimple stmt count : : 422 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
Profile consistency report:

                                 |mismatch     |mismatch     |                     |
Pass name                        |IN    |IN    |OUT   |OUT   |overall              |
                                 |freq  |count |freq  |count |size      |time      |
cp                   ------------|      |      |      |      |          |          |
inline                           |      |      |      |      |     -0.1%|     -0.0%|
fixup_cfg                        |      |      |      |      |     -0.1%|     -0.0%|
adjust_alignment     ------------|      |      |      |      |          |          |
ccp                  ------------|      |      |      |      |          |          |
backprop             ------------|      |      |      |      |          |          |
phiprop              ------------|      |      |      |      |          |          |
forwprop             ------------|      |      |      |      |          |          |
objsz                ------------|      |      |      |      |          |          |
alias                ------------|      |      |      |      |          |          |
retslot              ------------|      |      |      |      |          |          |
mergephi             ------------|      |      |      |      |          |          |
dce                  ------------|      |      |      |      |          |          |
stdarg               ------------|      |      |      |      |          |          |
cdce                 ------------|      |      |      |      |          |          |
cselim               ------------|      |      |      |      |          |          |
copyprop             ------------|      |      |      |      |          |          |
ifcombine            ------------|      |      |      |      |          |          |
mergephi             ------------|      |      |      |      |          |          |
phiopt               ------------|      |      |      |      |          |          |
ch                               |      |      |      |      |     +2.1%|     -0.3%|
cplxlower                        |      |    +2|      |      |     +2.0%|     -0.3%|
sra                  ------------|      |      |      |      |          |          |
dom                              |      |      |      |      |     -4.3%|     -1.2%|
copyprop                         |      |      |      |      |     -4.5%|     -1.2%|
reassoc              ------------|      |      |      |      |          |          |
dce                  ------------|      |      |      |      |          |          |
forwprop             ------------|      |      |      |      |          |          |
phiopt               ------------|      |      |      |      |          |          |
ccp                  ------------|      |      |      |      |          |          |
sincos               ------------|      |      |      |      |          |          |
laddress             ------------|      |      |      |      |          |          |
lim                              |      |      |      |      |          |     -0.3%|
walloca                          |      |      |      |      |          |     -0.3%|
sink                 ------------|      |      |      |      |          |          |
dce                  ------------|      |      |      |      |          |          |
fix_loops            ------------|      |      |      |      |          |          |
loop                 ------------|      |      |      |      |          |          |
loopinit                         |      |      |      |      |    -26.7%|    -47.7%|
sccp                 ------------|      |      |      |      |          |          |
cddce                ------------|      |      |      |      |          |          |
ivcanon                          |      |      |      |      |     +0.1%|     +0.1%|
copyprop                         |      |      |      |      |     +0.1%|     +0.1%|
cunroll              ------------|      |      |      |      |          |          |
ivopts                           |      |      |      |      |     -0.1%|     -1.4%|
lim                              |      |      |      |      |     -0.1%|     -1.4%|
loopdone             ------------|      |      |      |      |          |          |
no_loop                          |      |      |      |      |    +36.4%|    +93.5%|
veclower2            ------------|      |      |      |      |          |          |
switchlower          ------------|      |      |      |      |          |          |
reassoc              ------------|      |      |      |      |          |          |
slsr                 ------------|      |      |      |      |          |          |
dom                              |      |      |      |      |     -0.2%|     -0.3%|
strlen                           |      |    +4|      |      |     -0.2%|     -0.3%|
copyprop             ------------|      |      |      |      |          |          |
wrestrict            ------------|      |      |      |      |          |          |
cddce                ------------|      |      |      |      |          |          |
forwprop                         |      |      |      |      |     -0.2%|     -0.0%|
phiopt                           |      |      |      |      |     -0.2%|     -0.0%|
fab                  ------------|      |      |      |      |          |          |
dce                              |      |      |      |      |     -0.2%|     -0.0%|
crited                           |      |      |      |      |     -0.2%|     -0.0%|
uncprop              ------------|      |      |      |      |          |          |
local-pure-const     ------------|      |      |      |      |          |          |
modref               ------------|      |      |      |      |          |          |
nrv                  ------------|      |      |      |      |          |          |
isel                 ------------|      |      |      |      |          |          |
optimized            ------------|      |      |      |      |          |          |
expand                           |      |      |      |      |----------|----------|
vregs                            |      |      |      |      |    +75.2%|    +54.0%|
into_cfglayout                   |      |      |      |      |     -0.9%|     -0.4%|
jump                             |      |      |      |      |     -1.8%|     -2.3%|
subreg1                          |      |      |      |      |     -1.0%|     -1.9%|
dfinit               ------------|      |      |      |      |          |          |
cse1                 ------------|      |      |      |      |          |          |
fwprop1                          |      |      |      |      |     -1.3%|     -1.4%|
ce1                              |      |      |      |      |     -1.7%|     -1.4%|
reginfo                          |      |      |      |      |     -0.3%|     -0.0%|
loop2                ------------|      |      |      |      |          |          |
loop2_init           ------------|      |      |      |      |          |          |
loop2_invariant                  |      |      |      |      |     +0.1%|     +0.0%|
loop2_done                       |      |      |      |      |     +0.1%|     +0.0%|
dse1                             |      |      |      |      |     -0.1%|     -0.2%|
fwprop2                          |      |      |      |      |     -0.5%|     -0.5%|
init-regs                        |      |      |      |      |     -0.4%|     -0.3%|
combine                          |      |      |      |      |     +1.6%|     +2.3%|
ce2                              |      |      |      |      |     +1.6%|     +2.2%|
outof_cfglayout                  |      |      |      |      |     +0.8%|     +0.3%|
split1                           |      |      |      |      |     +0.8%|     +0.3%|
subreg3              ------------|      |      |      |      |          |          |
mode_sw              ------------|      |      |      |      |          |          |
asmcons              ------------|      |      |      |      |          |          |
ira                              |      |      |      |      |     +0.1%|     +0.0%|
reload                           |      |      |      |      |     -5.0%|     -5.3%|
postreload                       |      |      |      |      |     -5.4%|     -5.6%|
split2                           |      |      |      |      |     +0.2%|     +0.8%|
cmpelim                          |      |      |      |      |     +0.1%|     +0.7%|
pro_and_epilogue                 |      |      |      |      |     +7.4%|     +6.5%|
dse2                             |      |      |      |      |     +7.0%|     +6.0%|
csa                              |      |      |      |      |     -0.1%|     -0.2%|
jump2                ------------|      |      |      |      |          |          |
ce3                              |      |      |      |      |          |     +0.0%|
cprop_hardreg                    |      |      |      |      |          |     +0.0%|
rtl_dce              ------------|      |      |      |      |          |          |
bbro                             |      |      |      |      |          |     -0.1%|
split4                           |      |      |      |      |          |     -0.1%|
stack                ------------|      |      |      |      |          |          |
zero_call_used_regs  ------------|      |      |      |      |          |          |
alignments           ------------|      |      |      |      |          |          |
/usr/bin/ld: /tmp/cciFFhkA.ltrans0.ltrans.o: in function `task_finished':
<artificial>:(.text+0x12): undefined reference to `strbuf_addf'
/usr/bin/ld: /tmp/cciFFhkA.ltrans0.ltrans.o: in function `no_job':
<artificial>:(.text+0x32): undefined reference to `strbuf_addf'
/usr/bin/ld: /tmp/cciFFhkA.ltrans0.ltrans.o: in function `default_task_finished':
<artificial>:(.text+0x64): undefined reference to `strbuf_addf'
/usr/bin/ld: <artificial>:(.text+0x8d): undefined reference to `strbuf_addf'
/usr/bin/ld: /tmp/cciFFhkA.ltrans0.ltrans.o: in function `default_start_failure':
<artificial>:(.text+0xc2): undefined reference to `strbuf_addstr'
/usr/bin/ld: <artificial>:(.text+0xeb): undefined reference to `strbuf_addf'
/usr/bin/ld: /tmp/cciFFhkA.ltrans0.ltrans.o: in function `pp_init':
<artificial>:(.text+0x143): undefined reference to `trace_printf'
/usr/bin/ld: <artificial>:(.text+0x1ca): undefined reference to `strbuf_init'
/usr/bin/ld: <artificial>:(.text+0x200): undefined reference to `strbuf_init'
/usr/bin/ld: <artificial>:(.text+0x213): undefined reference to `child_process_init'
/usr/bin/ld: <artificial>:(.text+0x24d): undefined reference to `online_cpus'
/usr/bin/ld: /tmp/cciFFhkA.ltrans0.ltrans.o: in function `pp_start_one':
<artificial>:(.text+0x32c): undefined reference to `start_command'
/usr/bin/ld: <artificial>:(.text+0x375): undefined reference to `strbuf_addbuf'
/usr/bin/ld: <artificial>:(.text+0x388): undefined reference to `strbuf_reset'
/usr/bin/ld: <artificial>:(.text+0x3c6): undefined reference to `strbuf_addbuf'
/usr/bin/ld: <artificial>:(.text+0x3d9): undefined reference to `strbuf_reset'
/usr/bin/ld: /tmp/cciFFhkA.ltrans0.ltrans.o: in function `child_process_clear':
<artificial>:(.text+0x45f): undefined reference to `argv_array_clear'
/usr/bin/ld: <artificial>:(.text+0x46d): undefined reference to `argv_array_clear'
/usr/bin/ld: /tmp/cciFFhkA.ltrans0.ltrans.o: in function `finish_command':
<artificial>:(.text+0x490): undefined reference to `wait_or_whine'
/usr/bin/ld: /tmp/cciFFhkA.ltrans0.ltrans.o: in function `pp_collect_finished':
<artificial>:(.text+0x55f): undefined reference to `child_process_init'
/usr/bin/ld: <artificial>:(.text+0x57d): undefined reference to `strbuf_addbuf'
/usr/bin/ld: <artificial>:(.text+0x590): undefined reference to `strbuf_reset'
/usr/bin/ld: <artificial>:(.text+0x5fe): undefined reference to `strbuf_reset'
/usr/bin/ld: <artificial>:(.text+0x61c): undefined reference to `strbuf_reset'
/usr/bin/ld: /tmp/cciFFhkA.ltrans0.ltrans.o: in function `run_processes_parallel':
<artificial>:(.text+0x6ae): undefined reference to `pp_buffer_stderr'
/usr/bin/ld: <artificial>:(.text+0x6bb): undefined reference to `pp_output'
/usr/bin/ld: <artificial>:(.text+0x722): undefined reference to `pp_cleanup'
/usr/bin/ld: /tmp/cciFFhkA.ltrans0.ltrans.o: in function `parallel_next':
<artificial>:(.text+0x74c): undefined reference to `argv_array_pushv'
/usr/bin/ld: <artificial>:(.text+0x75e): undefined reference to `strbuf_addf'
/usr/bin/ld: /tmp/cciFFhkA.ltrans0.ltrans.o: in function `main':
<artificial>:(.text+0x7bc): undefined reference to `empty_argv'
/usr/bin/ld: <artificial>:(.text+0x7c5): undefined reference to `empty_argv'
/usr/bin/ld: <artificial>:(.text+0x893): undefined reference to `start_command'
/usr/bin/ld: <artificial>:(.text+0x8ca): undefined reference to `run_command'
collect2: error: ld returned 1 exit status
