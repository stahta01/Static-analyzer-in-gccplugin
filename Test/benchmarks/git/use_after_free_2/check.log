../Compiler/newplugin.so 11.2.0 
In file included from ./benchmarks/git/use_after_free_2/git_uaf_2.c:11:
./benchmarks/git/use_after_free_2/../git.h: In function ‘copy_array’:
./benchmarks/git/use_after_free_2/../git.h:161:17: warning: implicit declaration of function ‘memcpy’ [-Wimplicit-function-declaration]
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                 ^~~~~~
./benchmarks/git/use_after_free_2/../git.h:1:1: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
  +++ |+#include <string.h>
    1 | #define STRING_LIST_INIT_NODUP { NULL, 0, 0, 0, NULL }
./benchmarks/git/use_after_free_2/../git.h:161:17: warning: incompatible implicit declaration of built-in function ‘memcpy’ [-Wbuiltin-declaration-mismatch]
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                 ^~~~~~
./benchmarks/git/use_after_free_2/../git.h:161:17: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
./benchmarks/git/use_after_free_2/../git.h:161:34: warning: implicit declaration of function ‘st_mult’ [-Wimplicit-function-declaration]
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                                  ^~~~~~~
./benchmarks/git/use_after_free_2/../git.h: In function ‘move_array’:
./benchmarks/git/use_after_free_2/../git.h:169:17: warning: implicit declaration of function ‘memmove’ [-Wimplicit-function-declaration]
  169 |                 memmove(dst, src, st_mult(size, n));
      |                 ^~~~~~~
./benchmarks/git/use_after_free_2/../git.h:169:17: note: include ‘<string.h>’ or provide a declaration of ‘memmove’
./benchmarks/git/use_after_free_2/../git.h:169:17: warning: incompatible implicit declaration of built-in function ‘memmove’ [-Wbuiltin-declaration-mismatch]
./benchmarks/git/use_after_free_2/../git.h:169:17: note: include ‘<string.h>’ or provide a declaration of ‘memmove’
In file included from ./benchmarks/git/use_after_free_2/git_uaf_2.c:10:
./benchmarks/git/use_after_free_2/../git.h: In function ‘xstrdup_or_null’:
./benchmarks/git/use_after_free_2/../stdio.h:138:20: warning: implicit declaration of function ‘strdup’ [-Wimplicit-function-declaration]
  138 | #define xstrdup(a) strdup(a)
      |                    ^~~~~~
./benchmarks/git/use_after_free_2/../git.h:174:22: note: in expansion of macro ‘xstrdup’
  174 |         return str ? xstrdup(str) : NULL;
      |                      ^~~~~~~
./benchmarks/git/use_after_free_2/../stdio.h:138:20: warning: incompatible implicit declaration of built-in function ‘strdup’ [-Wbuiltin-declaration-mismatch]
  138 | #define xstrdup(a) strdup(a)
      |                    ^~~~~~
./benchmarks/git/use_after_free_2/../git.h:174:22: note: in expansion of macro ‘xstrdup’
  174 |         return str ? xstrdup(str) : NULL;
      |                      ^~~~~~~
In file included from ./benchmarks/git/use_after_free_2/git_uaf_2.c:11:
./benchmarks/git/use_after_free_2/../git.h: At top level:
./benchmarks/git/use_after_free_2/../git.h:236:62: warning: ‘struct archiver_args’ declared inside parameter list will not be visible outside of this definition or declaration
  236 |         int (*write_archive)(const struct archiver *, struct archiver_args *);
      |                                                              ^~~~~~~~~~~~~
./benchmarks/git/use_after_free_2/../git.h: In function ‘strbuf_swap’:
./benchmarks/git/use_after_free_2/../git.h:126:9: warning: incompatible implicit declaration of built-in function ‘memcpy’ [-Wbuiltin-declaration-mismatch]
  126 |         memcpy(_swap_buffer, _swap_a_ptr, sizeof(a));           \
      |         ^~~~~~
./benchmarks/git/use_after_free_2/../git.h:407:9: note: in expansion of macro ‘SWAP’
  407 |         SWAP(*a, *b);
      |         ^~~~
./benchmarks/git/use_after_free_2/../git.h:126:9: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
  126 |         memcpy(_swap_buffer, _swap_a_ptr, sizeof(a));           \
      |         ^~~~~~
./benchmarks/git/use_after_free_2/../git.h:407:9: note: in expansion of macro ‘SWAP’
  407 |         SWAP(*a, *b);
      |         ^~~~
./benchmarks/git/use_after_free_2/git_uaf_2.c: In function ‘default_start_failure’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:138:9: warning: implicit declaration of function ‘strbuf_addstr’ [-Wimplicit-function-declaration]
  138 |         strbuf_addstr(err, "Starting a child failed:");
      |         ^~~~~~~~~~~~~
./benchmarks/git/use_after_free_2/git_uaf_2.c:140:17: warning: implicit declaration of function ‘strbuf_addf’ [-Wimplicit-function-declaration]
  140 |                 strbuf_addf(err, " %s", cp->argv[i]);
      |                 ^~~~~~~~~~~
./benchmarks/git/use_after_free_2/git_uaf_2.c: In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:174:21: warning: implicit declaration of function ‘online_cpus’ [-Wimplicit-function-declaration]
  174 |                 n = online_cpus();
      |                     ^~~~~~~~~~~
./benchmarks/git/use_after_free_2/git_uaf_2.c:178:9: warning: implicit declaration of function ‘trace_printf’ [-Wimplicit-function-declaration]
  178 |         trace_printf("run_processes_parallel: preparing to run up to %d tasks", n);
      |         ^~~~~~~~~~~~
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: implicit declaration of function ‘strbuf_init’ [-Wimplicit-function-declaration]
  193 |         strbuf_init(&pp->buffered_output, 0);
      |         ^~~~~~~~~~~
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: implicit declaration of function ‘child_process_init’ [-Wimplicit-function-declaration]
  197 |                 child_process_init(&pp->children[i].process);
      |                 ^~~~~~~~~~~~~~~~~~
./benchmarks/git/use_after_free_2/git_uaf_2.c: In function ‘pp_start_one’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:227:17: warning: implicit declaration of function ‘strbuf_addbuf’ [-Wimplicit-function-declaration]
  227 |                 strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);
      |                 ^~~~~~~~~~~~~
./benchmarks/git/use_after_free_2/git_uaf_2.c:228:17: warning: implicit declaration of function ‘strbuf_reset’ [-Wimplicit-function-declaration]
  228 |                 strbuf_reset(&pp->children[i].err);
      |                 ^~~~~~~~~~~~
./benchmarks/git/use_after_free_2/git_uaf_2.c:235:13: warning: implicit declaration of function ‘start_command’ [-Wimplicit-function-declaration]
  235 |         if (start_command(&pp->children[i].process)) {
      |             ^~~~~~~~~~~~~
./benchmarks/git/use_after_free_2/git_uaf_2.c: In function ‘kill_children’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:259:25: warning: implicit declaration of function ‘kill’ [-Wimplicit-function-declaration]
  259 |                         kill(pp->children[i].process.pid, signo);
      |                         ^~~~
./benchmarks/git/use_after_free_2/git_uaf_2.c: In function ‘pp_collect_finished’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:275:24: warning: implicit declaration of function ‘finish_command’ [-Wimplicit-function-declaration]
  275 |                 code = finish_command(&pp->children[i].process);
      |                        ^~~~~~~~~~~~~~
./benchmarks/git/use_after_free_2/git_uaf_2.c: In function ‘finish_command’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:15: warning: implicit declaration of function ‘wait_or_whine’ [-Wimplicit-function-declaration]
  321 |     int ret = wait_or_whine(cmd->pid, cmd->argv[0], 0);
      |               ^~~~~~~~~~~~~
./benchmarks/git/use_after_free_2/git_uaf_2.c:322:5: warning: implicit declaration of function ‘child_process_clear’ [-Wimplicit-function-declaration]
  322 |     child_process_clear(cmd);
      |     ^~~~~~~~~~~~~~~~~~~
./benchmarks/git/use_after_free_2/git_uaf_2.c: At top level:
./benchmarks/git/use_after_free_2/git_uaf_2.c:326:6: warning: conflicting types for ‘child_process_clear’; have ‘void(struct child_process *)’
  326 | void child_process_clear(struct child_process *child)
      |      ^~~~~~~~~~~~~~~~~~~
./benchmarks/git/use_after_free_2/git_uaf_2.c:322:5: note: previous implicit declaration of ‘child_process_clear’ with type ‘void(struct child_process *)’
  322 |     child_process_clear(cmd);
      |     ^~~~~~~~~~~~~~~~~~~
./benchmarks/git/use_after_free_2/git_uaf_2.c: In function ‘child_process_clear’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:328:9: warning: implicit declaration of function ‘argv_array_clear’ [-Wimplicit-function-declaration]
  328 |         argv_array_clear(&child->args);
      |         ^~~~~~~~~~~~~~~~
./benchmarks/git/use_after_free_2/git_uaf_2.c: In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:361:17: warning: implicit declaration of function ‘pp_buffer_stderr’ [-Wimplicit-function-declaration]
  361 |                 pp_buffer_stderr(&pp, output_timeout);
      |                 ^~~~~~~~~~~~~~~~
./benchmarks/git/use_after_free_2/git_uaf_2.c:362:17: warning: implicit declaration of function ‘pp_output’ [-Wimplicit-function-declaration]
  362 |                 pp_output(&pp);
      |                 ^~~~~~~~~
./benchmarks/git/use_after_free_2/git_uaf_2.c:371:9: warning: implicit declaration of function ‘pp_cleanup’ [-Wimplicit-function-declaration]
  371 |         pp_cleanup(&pp);
      |         ^~~~~~~~~~
./benchmarks/git/use_after_free_2/git_uaf_2.c: In function ‘parallel_next’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:385:9: warning: implicit declaration of function ‘argv_array_pushv’ [-Wimplicit-function-declaration]
  385 |         argv_array_pushv(&cp->args, d->argv);
      |         ^~~~~~~~~~~~~~~~
./benchmarks/git/use_after_free_2/git_uaf_2.c: In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:419:14: warning: implicit declaration of function ‘strcmp’ [-Wimplicit-function-declaration]
  419 |         if (!strcmp(argv[1], "start-command-ENOENT")) {
      |              ^~~~~~
./benchmarks/git/use_after_free_2/git_uaf_2.c:12:1: note: include ‘<string.h>’ or provide a declaration of ‘strcmp’
   11 | #include "../git.h"
  +++ |+#include <string.h>
   12 | 
./benchmarks/git/use_after_free_2/git_uaf_2.c:426:22: warning: implicit declaration of function ‘run_command’; did you mean ‘finish_command’? [-Wimplicit-function-declaration]
  426 |                 exit(run_command(&proc));
      |                      ^~~~~~~~~~~
      |                      finish_command

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.00 (  0%)  1298k ( 41%)
 phase parsing                      :   0.04 ( 67%)   0.02 ( 67%)   0.06 ( 67%)  1343k ( 43%)
 phase opt and generate             :   0.02 ( 33%)   0.01 ( 33%)   0.03 ( 33%)   480k ( 15%)
 dump files                         :   0.00 (  0%)   0.00 (  0%)   0.01 ( 11%)     0  (  0%)
 callgraph construction             :   0.00 (  0%)   0.00 (  0%)   0.01 ( 11%)    45k (  1%)
 callgraph ipa passes               :   0.02 ( 33%)   0.01 ( 33%)   0.02 ( 22%)   256k (  8%)
 ipa function summary               :   0.01 ( 17%)   0.00 (  0%)   0.00 (  0%)    28k (  1%)
 ipa lto gimple out                 :   0.00 (  0%)   0.00 (  0%)   0.01 ( 11%)  2768  (  0%)
 ipa free lang data                 :   0.01 ( 17%)   0.01 ( 33%)   0.00 (  0%)    11k (  0%)
 preprocessing                      :   0.00 (  0%)   0.00 (  0%)   0.01 ( 11%)   373k ( 12%)
 parser (global)                    :   0.01 ( 17%)   0.02 ( 67%)   0.02 ( 22%)   626k ( 20%)
 parser function body               :   0.02 ( 33%)   0.00 (  0%)   0.02 ( 22%)   182k (  6%)
 parser inl. func. body             :   0.01 ( 17%)   0.00 (  0%)   0.01 ( 11%)    71k (  2%)
 TOTAL                              :   0.06          0.03          0.09         3132k
../Compiler/newplugin.so 11.2.0 

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.01 (100%)  2157k ( 95%)
 phase stream in                    :   0.01 (100%)   0.00 (  0%)   0.00 (  0%)   108k (  5%)
 lto stream decompression           :   0.01 (100%)   0.00 (  0%)   0.00 (  0%)     0  (  0%)
 TOTAL                              :   0.01          0.00          0.01         2268k
../Compiler/newplugin.so 11.2.0 
=======ipa_pta=========
=============== The first stage : Point of interest stmt collect =================
=======node_fun:main=========
node:= 2 
 	next_branch :=16
	next_branch :=3
node:= 3 
 	next_branch :=4
	next_branch :=7
node:= 4 
 	next_branch :=5
	next_branch :=6
node:= 5 
 	next_branch :=16
	next_branch :=6
node:= 6 
 	next_branch :=16
node:= 7 
 	next_branch :=8
	next_branch :=9
node:= 8 
 node:= 9 
 	next_branch :=10
	next_branch :=11
node:= 10 
 node:= 11 
 	next_branch :=12
	next_branch :=13
node:= 12 
 node:= 13 
 	next_branch :=14
	next_branch :=15
node:= 14 
 node:= 15 
 	next_branch :=16
=======node_fun:task_finished=========
=======node_fun:no_job=========
=======node_fun:parallel_next=========
node:= 2 
 	next_branch :=4
	next_branch :=3
node:= 3 
 	next_branch :=4
=======node_fun:run_processes_parallel=========
node:= 2 
 	next_branch :=3
	next_branch :=4
node:= 3 
 	next_branch :=4
node:= 4 
 	next_branch :=5
	next_branch :=6
node:= 5 
 node:= 6 
 	next_branch :=8
	next_branch :=7
node:= 7 
 	next_branch :=8
node:= 8 
 	next_branch :=10
	next_branch :=9
node:= 9 
 	next_branch :=10
node:= 10 
 	next_branch :=12
node:= 11 
 	next_branch :=12
node:= 12 
 	next_branch :=11
	next_branch :=13
node:= 13 
 	next_branch :=14
node:= 14 
 	next_branch :=15
node:= 15 
 	next_branch :=32
node:= 16 
 	next_branch :=19
	next_branch :=17
node:= 17 
 	next_branch :=18
node:= 18 
 	next_branch :=16
	next_branch :=19
node:= 19 
 	next_branch :=20
	next_branch :=21
node:= 20 
 node:= 21 
 	next_branch :=22
	next_branch :=23
node:= 22 
 	next_branch :=28
node:= 23 
 	next_branch :=24
	next_branch :=27
node:= 24 
 	next_branch :=25
	next_branch :=26
node:= 25 
 	next_branch :=26
node:= 26 
 	next_branch :=28
node:= 27 
 	next_branch :=28
node:= 28 
 	next_branch :=29
	next_branch :=30
node:= 29 
 	next_branch :=32
node:= 30 
 	next_branch :=31
	next_branch :=35
node:= 31 
 	next_branch :=35
node:= 32 
 	next_branch :=33
	next_branch :=35
node:= 33 
 	next_branch :=34
	next_branch :=35
node:= 34 
 	next_branch :=18
	next_branch :=35
node:= 35 
 	next_branch :=57
	next_branch :=36
node:= 36 
 	next_branch :=52
node:= 37 
 	next_branch :=40
	next_branch :=38
node:= 38 
 	next_branch :=39
node:= 39 
 	next_branch :=37
	next_branch :=40
node:= 40 
 	next_branch :=54
	next_branch :=41
node:= 41 
 	next_branch :=42
	next_branch :=43
node:= 42 
 	next_branch :=43
node:= 43 
 	next_branch :=54
	next_branch :=44
node:= 44 
 	next_branch :=45
	next_branch :=46
node:= 45 
 	next_branch :=51
node:= 46 
 	next_branch :=49
node:= 47 
 	next_branch :=50
	next_branch :=48
node:= 48 
 	next_branch :=49
node:= 49 
 	next_branch :=47
	next_branch :=50
node:= 50 
 	next_branch :=51
node:= 51 
 	next_branch :=52
node:= 52 
 	next_branch :=53
	next_branch :=54
node:= 53 
 	next_branch :=39
node:= 54 
 	next_branch :=55
	next_branch :=15
node:= 55 
 	next_branch :=56
	next_branch :=14
node:= 56 
 	next_branch :=13
=======node_fun:kill_children=========
node:= 2 
 	next_branch :=6
node:= 3 
 	next_branch :=4
	next_branch :=5
node:= 4 
 	next_branch :=5
node:= 5 
 	next_branch :=6
node:= 6 
 	next_branch :=3
	next_branch :=7
=======node_fun:default_task_finished=========
node:= 2 
 	next_branch :=6
	next_branch :=3
node:= 3 
 	next_branch :=5
node:= 4 
 	next_branch :=5
node:= 5 
 	next_branch :=4
	next_branch :=6
=======node_fun:default_start_failure=========
node:= 2 
 	next_branch :=4
node:= 3 
 	next_branch :=4
node:= 4 
 	next_branch :=3
	next_branch :=5
=============== The first stage :  record fucntion =================
start PointerConstraint
ptable point 17 
===============The second stage : Mapping stmt=================
# VUSE <.MEM_53>
_3 = strcmp (_2, "start-command-ENOENT");
# .MEM_65 = VDEF <.MEM_53>
_4 = start_command (&proc);
_5 = __errno_location ();
# .MEM_66 = VDEF <.MEM_65>
fprintf (_8, "FAIL %s\n", _7);
# VUSE <.MEM_53>
_10 = strcmp (_9, "run-command");
# .MEM_63 = VDEF <.MEM_53>
_11 = run_command (&proc);
# .MEM_54 = VDEF <.MEM_53>
_46 = strtol (_12, 0B, 10);
# VUSE <.MEM_55>
_15 = strcmp (_14, "run-command-parallel");
# .MEM_61 = VDEF <.MEM_55>
_16 = run_processes_parallel (_47, parallel_next, 0B, 0B, &proc);
# VUSE <.MEM_55>
_18 = strcmp (_17, "run-command-abort");
# .MEM_59 = VDEF <.MEM_55>
_19 = run_processes_parallel (_47, parallel_next, 0B, task_finished, &proc);
# VUSE <.MEM_55>
_21 = strcmp (_20, "run-command-no-jobs");
# .MEM_57 = VDEF <.MEM_55>
_22 = run_processes_parallel (_47, no_job, 0B, task_finished, &proc);
# .MEM_56 = VDEF <.MEM_55>
__builtin_fwrite ("check usage\n", 1, 12, _23);
# .MEM_4 = VDEF <.MEM_3(D)>
strbuf_addf (err_2(D), "asking for a quick stop\n");
# .MEM_4 = VDEF <.MEM_3(D)>
strbuf_addf (err_2(D), "no further jobs available\n");
# .MEM_15 = VDEF <.MEM_14(D)>
argv_array_pushv (_3, _2);
# .MEM_16 = VDEF <.MEM_15>
strbuf_addf (err_12(D), "preloaded output of a child\n");
# .MEM_283 = VDEF <.MEM_35(D)>
n_47 = online_cpus ();
# .MEM_285 = VDEF <.MEM_284>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_48);
# .MEM_293 = VDEF <.MEM_292>
_52 = calloc (_51, 120);
# .MEM_295 = VDEF <.MEM_294>
_54 = calloc (_53, 8);
# .MEM_297 = VDEF <.MEM_296>
strbuf_init (_55, 0);
# .MEM_332 = VDEF <.MEM_277>
strbuf_init (_61, 0);
# .MEM_333 = VDEF <.MEM_332>
child_process_init (_66);
# .MEM_310 = VDEF <.MEM_298>
strbuf_addbuf (_108, _107);
# .MEM_311 = VDEF <.MEM_310>
strbuf_reset (_113);
# .MEM_302 = VDEF <.MEM_301>
_131 = start_command (_130);
# .MEM_307 = VDEF <.MEM_306>
strbuf_addbuf (_155, _154);
# .MEM_308 = VDEF <.MEM_307>
strbuf_reset (_160);
# .MEM_39 = VDEF <.MEM_38>
kill_children (&pp, _1);
# .MEM_40 = VDEF <.MEM_32>
pp_buffer_stderr (&pp, 100);
# .MEM_41 = VDEF <.MEM_40>
pp_output (&pp);
# .MEM_315 = VDEF <.MEM_281>
ret_273 = wait_or_whine (_272, _271, 0);
# .MEM_316 = VDEF <.MEM_315>
argv_array_clear (_274);
# .MEM_317 = VDEF <.MEM_316>
argv_array_clear (_275);
# .MEM_323 = VDEF <.MEM_322>
child_process_init (_225);
# .MEM_329 = VDEF <.MEM_323>
strbuf_addbuf (_232, _231);
# .MEM_330 = VDEF <.MEM_329>
strbuf_reset (_237);
# .MEM_324 = VDEF <.MEM_323>
fputs (_243, _238);
# .MEM_325 = VDEF <.MEM_324>
strbuf_reset (_248);
# .MEM_326 = VDEF <.MEM_325>
fputs (_250, _249);
# .MEM_327 = VDEF <.MEM_326>
strbuf_reset (_251);
# .MEM_44 = VDEF <.MEM_43>
kill_children (&pp, _7);
# .MEM_45 = VDEF <.MEM_32>
pp_cleanup (&pp);
# .MEM_23 = VDEF <.MEM_21>
kill (_10, signo_17(D));
# .MEM_24 = VDEF <.MEM_23(D)>
strbuf_addf (err_16(D), "A child failed with return code %d:", result_14(D));
# .MEM_25 = VDEF <.MEM_21>
strbuf_addf (err_16(D), " %s", _5);
# .MEM_21 = VDEF <.MEM_20(D)>
strbuf_addstr (err_14(D), "Starting a child failed:");
# .MEM_22 = VDEF <.MEM_19>
strbuf_addf (err_14(D), " %s", _5);
===============The second stage : Program slicing=================
=============== *this point analyzable =================
_3 = strcmp (_2, "start-command-ENOENT");
=============== *this point analyzable =================
_4 = start_command (&proc);
=============== *this point analyzable =================
_5 = __errno_location ();
=============== *this point analyzable =================
_10 = strcmp (_9, "run-command");
=============== *this point analyzable =================
_11 = run_command (&proc);
=============== *this point analyzable =================
_46 = strtol (_12, 0B, 10);
=============== *this point analyzable =================
_15 = strcmp (_14, "run-command-parallel");
=============== *this point analyzable =================
_16 = run_processes_parallel (_47, parallel_next, 0B, 0B, &proc);
=============== *this point analyzable =================
_18 = strcmp (_17, "run-command-abort");
=============== *this point analyzable =================
_19 = run_processes_parallel (_47, parallel_next, 0B, task_finished, &proc);
=============== *this point analyzable =================
_21 = strcmp (_20, "run-command-no-jobs");
=============== *this point analyzable =================
_22 = run_processes_parallel (_47, no_job, 0B, task_finished, &proc);
=============== *this point analyzable =================
n_47 = online_cpus ();
=============== *this point analyzable =================
_52 = calloc (_51, 120);
=============== *this point analyzable =================
_54 = calloc (_53, 8);
=============== *this point analyzable =================
_131 = start_command (_130);
=============== *this point analyzable =================
ret_273 = wait_or_whine (_272, _271, 0);
=============== *this point analyzable =================
_3 = strcmp (_2, "start-command-ENOENT");
=============== *this point analyzable =================
fprintf (_8, "FAIL %s\n", _7);
=============== *this point analyzable =================
fprintf (_8, "FAIL %s\n", _7);
=============== *this point analyzable =================
_10 = strcmp (_9, "run-command");
=============== *this point analyzable =================
_46 = strtol (_12, 0B, 10);
=============== *this point analyzable =================
_15 = strcmp (_14, "run-command-parallel");
=============== *this point analyzable =================
_16 = run_processes_parallel (_47, parallel_next, 0B, 0B, &proc);
=============== *this point analyzable =================
_18 = strcmp (_17, "run-command-abort");
=============== *this point analyzable =================
_21 = strcmp (_20, "run-command-no-jobs");
=============== *this point analyzable =================
__builtin_fwrite ("check usage\n", 1, 12, _23);
=============== *this point analyzable =================
strbuf_addf (err_2(D), "asking for a quick stop\n");
=============== *this point analyzable =================
strbuf_addf (err_2(D), "no further jobs available\n");
=============== *this point analyzable =================
argv_array_pushv (_3, _2);
=============== *this point analyzable =================
argv_array_pushv (_3, _2);
=============== *this point analyzable =================
strbuf_addf (err_12(D), "preloaded output of a child\n");
=============== *this point analyzable =================
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_48);
=============== *this point analyzable =================
_52 = calloc (_51, 120);
=============== *this point analyzable =================
_54 = calloc (_53, 8);
=============== *this point analyzable =================
strbuf_init (_55, 0);
=============== *this point analyzable =================
strbuf_init (_61, 0);
=============== *this point analyzable =================
child_process_init (_66);
=============== *this point analyzable =================
strbuf_addbuf (_108, _107);
=============== *this point analyzable =================
strbuf_addbuf (_108, _107);
=============== *this point analyzable =================
strbuf_reset (_113);
=============== *this point analyzable =================
_131 = start_command (_130);
=============== *this point analyzable =================
strbuf_addbuf (_155, _154);
=============== *this point analyzable =================
strbuf_addbuf (_155, _154);
=============== *this point analyzable =================
strbuf_reset (_160);
=============== *this point analyzable =================
kill_children (&pp, _1);
=============== *this point analyzable =================
ret_273 = wait_or_whine (_272, _271, 0);
=============== *this point analyzable =================
ret_273 = wait_or_whine (_272, _271, 0);
=============== *this point analyzable =================
argv_array_clear (_274);
=============== *this point analyzable =================
argv_array_clear (_275);
=============== *this point analyzable =================
child_process_init (_225);
=============== *this point analyzable =================
strbuf_addbuf (_232, _231);
=============== *this point analyzable =================
strbuf_addbuf (_232, _231);
=============== *this point analyzable =================
strbuf_reset (_237);
=============== *this point analyzable =================
fputs (_243, _238);
=============== *this point analyzable =================
fputs (_243, _238);
=============== *this point analyzable =================
strbuf_reset (_248);
=============== *this point analyzable =================
fputs (_250, _249);
=============== *this point analyzable =================
fputs (_250, _249);
=============== *this point analyzable =================
strbuf_reset (_251);
=============== *this point analyzable =================
kill_children (&pp, _7);
=============== *this point analyzable =================
kill (_10, signo_17(D));
=============== *this point analyzable =================
kill (_10, signo_17(D));
=============== *this point analyzable =================
strbuf_addf (err_16(D), "A child failed with return code %d:", result_14(D));
=============== *this point analyzable =================
strbuf_addf (err_16(D), "A child failed with return code %d:", result_14(D));
=============== *this point analyzable =================
strbuf_addf (err_16(D), " %s", _5);
=============== *this point analyzable =================
strbuf_addstr (err_14(D), "Starting a child failed:");
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m

=============== The third stage : Start detection  =================
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 9 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:__builtin_fwrite========= [0m
[40;33m =======POP node_fun stack:__builtin_fwrite========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:run_processes_parallel========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path run_processes_parallel  function_call count: 17 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:pp_cleanup========= [0m
[40;33m =======POP node_fun stack:pp_cleanup========= [0m
[40;42m =======pre add _ fucntion:kill_children========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path kill_children  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:kill========= [0m
[40;33m =======POP node_fun stack:kill========= [0m
[40;42m =======pre_check_funciton:kill_children========= [0m
[40;42m =======start_check_funciton:kill_children========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f1c7968ed80
    type <integer_type 0x7f1c79b2c5e8 int public SI
        size <integer_cst 0x7f1c79b17df8 constant 32>
        unit-size <integer_cst 0x7f1c79b17e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c5e8 precision:32 min <integer_cst 0x7f1c79b17db0 -2147483648> max <integer_cst 0x7f1c79b17dc8 2147483647>
        pointer_to_this <pointer_type 0x7f1c79b339d8>>
   
    def_stmt _10 = _9->process.pid;
    version:10>
# VUSE <.MEM_21>
_10 = _9->process.pid;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_23 = VDEF <.MEM_21>
kill (_10, signo_17(D));
kill (_10, signo_17(D));
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:259:25: warning: use location
  259 |                         kill(pp->children[i].process.pid, signo);
      |                         ^
this stmt call this function :kill
trace fucntion name:kill 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_23 = VDEF <.MEM_21>
kill (_10, signo_17(D));
kill (_10, signo_17(D));
./benchmarks/git/use_after_free_2/git_uaf_2.c:259:25: warning: use location
this stmt call this function :kill
trace fucntion name:kill 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c7968ed80
    type <integer_type 0x7f1c79b2c5e8 int public SI
        size <integer_cst 0x7f1c79b17df8 constant 32>
        unit-size <integer_cst 0x7f1c79b17e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c5e8 precision:32 min <integer_cst 0x7f1c79b17db0 -2147483648> max <integer_cst 0x7f1c79b17dc8 2147483647>
        pointer_to_this <pointer_type 0x7f1c79b339d8>>
   
    def_stmt _10 = _9->process.pid;
    version:10>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c7968eea0
    type <integer_type 0x7f1c79b2c5e8 int public SI
        size <integer_cst 0x7f1c79b17df8 constant 32>
        unit-size <integer_cst 0x7f1c79b17e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c5e8 precision:32 min <integer_cst 0x7f1c79b17db0 -2147483648> max <integer_cst 0x7f1c79b17dc8 2147483647>
        pointer_to_this <pointer_type 0x7f1c79b339d8>>
    var <parm_decl 0x7f1c79666300 signo>
    def_stmt GIMPLE_NOP
    version:17>
GIMPLE_NOP

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_23 = VDEF <.MEM_21>
kill (_10, signo_17(D));
kill (_10, signo_17(D));
./benchmarks/git/use_after_free_2/git_uaf_2.c:259:25: warning: use location
this stmt call this function :kill
trace fucntion name:kill 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_23 = VDEF <.MEM_21>
kill (_10, signo_17(D));
kill (_10, signo_17(D));
./benchmarks/git/use_after_free_2/git_uaf_2.c:259:25: warning: use location
this stmt call this function :kill
trace fucntion name:kill 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c7968eea0
    type <integer_type 0x7f1c79b2c5e8 int public SI
        size <integer_cst 0x7f1c79b17df8 constant 32>
        unit-size <integer_cst 0x7f1c79b17e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c5e8 precision:32 min <integer_cst 0x7f1c79b17db0 -2147483648> max <integer_cst 0x7f1c79b17dc8 2147483647>
        pointer_to_this <pointer_type 0x7f1c79b339d8>>
    var <parm_decl 0x7f1c79666300 signo>
    def_stmt GIMPLE_NOP
    version:17>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:kill_children========= [0m
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;33m =======POP node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:fputs========= [0m
[40;33m =======POP node_fun stack:fputs========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;33m =======POP node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;33m =======POP node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;33m =======POP node_fun stack:argv_array_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;33m =======POP node_fun stack:wait_or_whine========= [0m
[40;42m =======pre add _ fucntion:pp_output========= [0m
[40;33m =======POP node_fun stack:pp_output========= [0m
[40;42m =======pre add _ fucntion:pp_buffer_stderr========= [0m
[40;33m =======POP node_fun stack:pp_buffer_stderr========= [0m
[40;42m =======pre add _ fucntion:start_command========= [0m
[40;33m =======POP node_fun stack:start_command========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;33m =======POP node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;33m =======POP node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;33m =======POP node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;33m =======POP node_fun stack:online_cpus========= [0m
[40;42m =======pre_check_funciton:run_processes_parallel========= [0m
[40;42m =======start_check_funciton:run_processes_parallel========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f1c79661d80
    type <integer_type 0x7f1c79b2c5e8 int public SI
        size <integer_cst 0x7f1c79b17df8 constant 32>
        unit-size <integer_cst 0x7f1c79b17e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c5e8 precision:32 min <integer_cst 0x7f1c79b17db0 -2147483648> max <integer_cst 0x7f1c79b17dc8 2147483647>
        pointer_to_this <pointer_type 0x7f1c79b339d8>>
    var <var_decl 0x7f1c79660750 n>
    def_stmt n_47 = online_cpus ();
    version:47>
# .MEM_283 = VDEF <.MEM_35(D)>
n_47 = online_cpus ();

 ================== pre trace ptable ================== 
trace fucntion name:online_cpus 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function online_cpus
 
 Start check Pointer Collect  

======================================================================
n_48 = PHI <n_15(D)(2), n_47(3)>
lto1: warning: use location
this stmt have mutiple branch ---online_cpus-----
pp.max_processes = n_48;
./benchmarks/git/use_after_free_2/git_uaf_2.c:176:27: warning: use location
  176 |         pp->max_processes = n;
      |                           ^
pp_cleanup (&pp);
./benchmarks/git/use_after_free_2/git_uaf_2.c:371:9: warning: use location
  371 |         pp_cleanup(&pp);
      |         ^
this stmt call this function :pp_cleanup
trace fucntion name:pp_cleanup 

 ================== trace ================== 
trace fucntion free:0 
pp_cleanup (&pp);
./benchmarks/git/use_after_free_2/git_uaf_2.c:371:9: warning: use location
this stmt call this function :pp_cleanup
trace fucntion name:pp_cleanup 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (n_48 > i_57)
./benchmarks/git/use_after_free_2/git_uaf_2.c:195:23: warning: use location
  195 |         for (i = 0; i < n; i++) {
      |                       ^
_53 = (long unsigned int) n_48;
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:19: warning: use location
  192 |         pp->pfd = xcalloc(n, sizeof(*pp->pfd));
      |                   ^
_54 = calloc (_53, 8);
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:19: warning: use location
this stmt call this function :calloc
pp.pfd = _54;
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:17: warning: use location
  192 |         pp->pfd = xcalloc(n, sizeof(*pp->pfd));
      |                 ^
_51 = (long unsigned int) n_48;
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:24: warning: use location
  191 |         pp->children = xcalloc(n, sizeof(*pp->children));
      |                        ^
_52 = calloc (_51, 120);
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:24: warning: use location
this stmt call this function :calloc
pp.children = _52;
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:22: warning: use location
  191 |         pp->children = xcalloc(n, sizeof(*pp->children));
      |                      ^
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_48);
./benchmarks/git/use_after_free_2/git_uaf_2.c:178:9: warning: use location
  178 |         trace_printf("run_processes_parallel: preparing to run up to %d tasks", n);
      |         ^
this stmt call this function :trace_printf
trace fucntion name:trace_printf 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_283 = VDEF <.MEM_35(D)>
n_47 = online_cpus ();
n_47 = online_cpus ();
./benchmarks/git/use_after_free_2/git_uaf_2.c:174:21: warning: use location
  174 |                 n = online_cpus();
      |                     ^
this stmt call this function :online_cpus
trace fucntion name:online_cpus 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c79661d80
    type <integer_type 0x7f1c79b2c5e8 int public SI
        size <integer_cst 0x7f1c79b17df8 constant 32>
        unit-size <integer_cst 0x7f1c79b17e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c5e8 precision:32 min <integer_cst 0x7f1c79b17db0 -2147483648> max <integer_cst 0x7f1c79b17dc8 2147483647>
        pointer_to_this <pointer_type 0x7f1c79b339d8>>
    var <var_decl 0x7f1c79660750 n>
    def_stmt n_47 = online_cpus ();
    version:47>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c79661ee8
    type <pointer_type 0x7f1c79b33000
        type <void_type 0x7f1c79b2cf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f1c79b33000>>
        public unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f1c7962f690>>
   
    def_stmt _52 = calloc (_51, 120);
    version:52
    ptr-info 0x7f1c79626ed0>
# .MEM_293 = VDEF <.MEM_292>
_52 = calloc (_51, 120);

 ================== pre trace ptable ================== 
trace fucntion name:calloc 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Reserved word function :calloc
 
 Start check Pointer Collect  

======================================================================
# .MEM_293 = VDEF <.MEM_292>
_52 = calloc (_51, 120);
_52 = calloc (_51, 120);
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:24: warning: use location
  191 |         pp->children = xcalloc(n, sizeof(*pp->children));
      |                        ^
this stmt call this function :calloc
pp.children = _52;
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:22: warning: use location
  191 |         pp->children = xcalloc(n, sizeof(*pp->children));
      |                      ^
pp_cleanup (&pp);
./benchmarks/git/use_after_free_2/git_uaf_2.c:371:9: warning: use location
  371 |         pp_cleanup(&pp);
      |         ^
this stmt call this function :pp_cleanup
trace fucntion name:pp_cleanup 

 ================== trace ================== 
trace fucntion free:0 
pp_cleanup (&pp);
./benchmarks/git/use_after_free_2/git_uaf_2.c:371:9: warning: use location
this stmt call this function :pp_cleanup
trace fucntion name:pp_cleanup 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c79661ee8
    type <pointer_type 0x7f1c79b33000
        type <void_type 0x7f1c79b2cf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f1c79b33000>>
        public unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f1c7962f690>>
   
    def_stmt _52 = calloc (_51, 120);
    version:52
    ptr-info 0x7f1c79626ed0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c79661f78
    type <pointer_type 0x7f1c79b33000
        type <void_type 0x7f1c79b2cf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f1c79b33000>>
        public unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f1c7962f690>>
   
    def_stmt _54 = calloc (_53, 8);
    version:54
    ptr-info 0x7f1c79626ee8>
# .MEM_295 = VDEF <.MEM_294>
_54 = calloc (_53, 8);

 ================== pre trace ptable ================== 
trace fucntion name:calloc 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Reserved word function :calloc
 
 Start check Pointer Collect  

======================================================================
# .MEM_295 = VDEF <.MEM_294>
_54 = calloc (_53, 8);
_54 = calloc (_53, 8);
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:19: warning: use location
  192 |         pp->pfd = xcalloc(n, sizeof(*pp->pfd));
      |                   ^
this stmt call this function :calloc
pp.pfd = _54;
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:17: warning: use location
  192 |         pp->pfd = xcalloc(n, sizeof(*pp->pfd));
      |                 ^
pp_cleanup (&pp);
./benchmarks/git/use_after_free_2/git_uaf_2.c:371:9: warning: use location
  371 |         pp_cleanup(&pp);
      |         ^
this stmt call this function :pp_cleanup
trace fucntion name:pp_cleanup 

 ================== trace ================== 
trace fucntion free:0 
pp_cleanup (&pp);
./benchmarks/git/use_after_free_2/git_uaf_2.c:371:9: warning: use location
this stmt call this function :pp_cleanup
trace fucntion name:pp_cleanup 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c79661f78
    type <pointer_type 0x7f1c79b33000
        type <void_type 0x7f1c79b2cf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f1c79b33000>>
        public unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f1c7962f690>>
   
    def_stmt _54 = calloc (_53, 8);
    version:54
    ptr-info 0x7f1c79626ee8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c796752d0
    type <integer_type 0x7f1c79b2c5e8 int public SI
        size <integer_cst 0x7f1c79b17df8 constant 32>
        unit-size <integer_cst 0x7f1c79b17e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c5e8 precision:32 min <integer_cst 0x7f1c79b17db0 -2147483648> max <integer_cst 0x7f1c79b17dc8 2147483647>
        pointer_to_this <pointer_type 0x7f1c79b339d8>>
   
    def_stmt _131 = start_command (_130);
    version:131>
# .MEM_302 = VDEF <.MEM_301>
_131 = start_command (_130);

 ================== pre trace ptable ================== 
trace fucntion name:start_command 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function start_command
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_302 = VDEF <.MEM_301>
_131 = start_command (_130);
_131 = start_command (_130);
./benchmarks/git/use_after_free_2/git_uaf_2.c:235:13: warning: use location
  235 |         if (start_command(&pp->children[i].process)) {
      |             ^
this stmt call this function :start_command
trace fucntion name:start_command 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_131 != 0)
./benchmarks/git/use_after_free_2/git_uaf_2.c:235:12: warning: use location
  235 |         if (start_command(&pp->children[i].process)) {
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c796752d0
    type <integer_type 0x7f1c79b2c5e8 int public SI
        size <integer_cst 0x7f1c79b17df8 constant 32>
        unit-size <integer_cst 0x7f1c79b17e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c5e8 precision:32 min <integer_cst 0x7f1c79b17db0 -2147483648> max <integer_cst 0x7f1c79b17dc8 2147483647>
        pointer_to_this <pointer_type 0x7f1c79b339d8>>
   
    def_stmt _131 = start_command (_130);
    version:131>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c79687798
    type <integer_type 0x7f1c79b2c5e8 int public SI
        size <integer_cst 0x7f1c79b17df8 constant 32>
        unit-size <integer_cst 0x7f1c79b17e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c5e8 precision:32 min <integer_cst 0x7f1c79b17db0 -2147483648> max <integer_cst 0x7f1c79b17dc8 2147483647>
        pointer_to_this <pointer_type 0x7f1c79b339d8>>
    var <var_decl 0x7f1c79680cf0 ret>
    def_stmt ret_273 = wait_or_whine (_272, _271, 0);
    version:273>
# .MEM_315 = VDEF <.MEM_281>
ret_273 = wait_or_whine (_272, _271, 0);

 ================== pre trace ptable ================== 
trace fucntion name:wait_or_whine 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function wait_or_whine
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_315 = VDEF <.MEM_281>
ret_273 = wait_or_whine (_272, _271, 0);
ret_273 = wait_or_whine (_272, _271, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:15: warning: use location
  321 |     int ret = wait_or_whine(cmd->pid, cmd->argv[0], 0);
      |               ^
this stmt call this function :wait_or_whine
trace fucntion name:wait_or_whine 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_318 = ret_273;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
code_192 = _318;
./benchmarks/git/use_after_free_2/git_uaf_2.c:275:24: warning: use location
  275 |                 code = finish_command(&pp->children[i].process);
      |                        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c79687798
    type <integer_type 0x7f1c79b2c5e8 int public SI
        size <integer_cst 0x7f1c79b17df8 constant 32>
        unit-size <integer_cst 0x7f1c79b17e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c5e8 precision:32 min <integer_cst 0x7f1c79b17db0 -2147483648> max <integer_cst 0x7f1c79b17dc8 2147483647>
        pointer_to_this <pointer_type 0x7f1c79b339d8>>
    var <var_decl 0x7f1c79680cf0 ret>
    def_stmt ret_273 = wait_or_whine (_272, _271, 0);
    version:273>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c79661dc8
    type <integer_type 0x7f1c79b2c5e8 int public SI
        size <integer_cst 0x7f1c79b17df8 constant 32>
        unit-size <integer_cst 0x7f1c79b17e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c5e8 precision:32 min <integer_cst 0x7f1c79b17db0 -2147483648> max <integer_cst 0x7f1c79b17dc8 2147483647>
        pointer_to_this <pointer_type 0x7f1c79b339d8>>
    var <var_decl 0x7f1c79660750 n>
    def_stmt n_48 = PHI <n_15(D)(2), n_47(3)>
    version:48>
n_48 = PHI <n_15(D)(2), n_47(3)>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
pp.max_processes = n_48;
./benchmarks/git/use_after_free_2/git_uaf_2.c:176:27: warning: use location
  176 |         pp->max_processes = n;
      |                           ^
pp.max_processes = n_48;
./benchmarks/git/use_after_free_2/git_uaf_2.c:176:27: warning: use location
pp_cleanup (&pp);
./benchmarks/git/use_after_free_2/git_uaf_2.c:371:9: warning: use location
  371 |         pp_cleanup(&pp);
      |         ^
this stmt call this function :pp_cleanup
trace fucntion name:pp_cleanup 

 ================== trace ================== 
trace fucntion free:0 
pp_cleanup (&pp);
./benchmarks/git/use_after_free_2/git_uaf_2.c:371:9: warning: use location
this stmt call this function :pp_cleanup
trace fucntion name:pp_cleanup 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (n_48 > i_57)
./benchmarks/git/use_after_free_2/git_uaf_2.c:195:23: warning: use location
  195 |         for (i = 0; i < n; i++) {
      |                       ^
_53 = (long unsigned int) n_48;
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:19: warning: use location
  192 |         pp->pfd = xcalloc(n, sizeof(*pp->pfd));
      |                   ^
_54 = calloc (_53, 8);
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:19: warning: use location
this stmt call this function :calloc
pp.pfd = _54;
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:17: warning: use location
  192 |         pp->pfd = xcalloc(n, sizeof(*pp->pfd));
      |                 ^
_51 = (long unsigned int) n_48;
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:24: warning: use location
  191 |         pp->children = xcalloc(n, sizeof(*pp->children));
      |                        ^
_52 = calloc (_51, 120);
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:24: warning: use location
this stmt call this function :calloc
pp.children = _52;
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:22: warning: use location
  191 |         pp->children = xcalloc(n, sizeof(*pp->children));
      |                      ^
# .MEM_285 = VDEF <.MEM_284>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_48);
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_48);
./benchmarks/git/use_after_free_2/git_uaf_2.c:178:9: warning: use location
  178 |         trace_printf("run_processes_parallel: preparing to run up to %d tasks", n);
      |         ^
this stmt call this function :trace_printf
trace fucntion name:trace_printf 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_285 = VDEF <.MEM_284>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_48);
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_48);
./benchmarks/git/use_after_free_2/git_uaf_2.c:178:9: warning: use location
this stmt call this function :trace_printf
trace fucntion name:trace_printf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c79661dc8
    type <integer_type 0x7f1c79b2c5e8 int public SI
        size <integer_cst 0x7f1c79b17df8 constant 32>
        unit-size <integer_cst 0x7f1c79b17e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c5e8 precision:32 min <integer_cst 0x7f1c79b17db0 -2147483648> max <integer_cst 0x7f1c79b17dc8 2147483647>
        pointer_to_this <pointer_type 0x7f1c79b339d8>>
    var <var_decl 0x7f1c79660750 n>
    def_stmt n_48 = PHI <n_15(D)(2), n_47(3)>
    version:48>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c79661ea0
    type <integer_type 0x7f1c79b2c7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c738 precision:64 min <integer_cst 0x7f1c79b17e88 0> max <integer_cst 0x7f1c79b18500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f1c79b387e0>>
   
    def_stmt _51 = (long unsigned int) n_48;
    version:51>
_51 = (long unsigned int) n_48;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_293 = VDEF <.MEM_292>
_52 = calloc (_51, 120);
_52 = calloc (_51, 120);
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:24: warning: use location
  191 |         pp->children = xcalloc(n, sizeof(*pp->children));
      |                        ^
this stmt call this function :calloc
pp.children = _52;
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:22: warning: use location
  191 |         pp->children = xcalloc(n, sizeof(*pp->children));
      |                      ^
pp_cleanup (&pp);
./benchmarks/git/use_after_free_2/git_uaf_2.c:371:9: warning: use location
  371 |         pp_cleanup(&pp);
      |         ^
this stmt call this function :pp_cleanup
trace fucntion name:pp_cleanup 

 ================== trace ================== 
trace fucntion free:0 
pp_cleanup (&pp);
./benchmarks/git/use_after_free_2/git_uaf_2.c:371:9: warning: use location
this stmt call this function :pp_cleanup
trace fucntion name:pp_cleanup 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c79661ea0
    type <integer_type 0x7f1c79b2c7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c738 precision:64 min <integer_cst 0x7f1c79b17e88 0> max <integer_cst 0x7f1c79b18500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f1c79b387e0>>
   
    def_stmt _51 = (long unsigned int) n_48;
    version:51>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c79661f30
    type <integer_type 0x7f1c79b2c7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c738 precision:64 min <integer_cst 0x7f1c79b17e88 0> max <integer_cst 0x7f1c79b18500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f1c79b387e0>>
   
    def_stmt _53 = (long unsigned int) n_48;
    version:53>
_53 = (long unsigned int) n_48;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_295 = VDEF <.MEM_294>
_54 = calloc (_53, 8);
_54 = calloc (_53, 8);
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:19: warning: use location
  192 |         pp->pfd = xcalloc(n, sizeof(*pp->pfd));
      |                   ^
this stmt call this function :calloc
pp.pfd = _54;
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:17: warning: use location
  192 |         pp->pfd = xcalloc(n, sizeof(*pp->pfd));
      |                 ^
pp_cleanup (&pp);
./benchmarks/git/use_after_free_2/git_uaf_2.c:371:9: warning: use location
  371 |         pp_cleanup(&pp);
      |         ^
this stmt call this function :pp_cleanup
trace fucntion name:pp_cleanup 

 ================== trace ================== 
trace fucntion free:0 
pp_cleanup (&pp);
./benchmarks/git/use_after_free_2/git_uaf_2.c:371:9: warning: use location
this stmt call this function :pp_cleanup
trace fucntion name:pp_cleanup 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c79661f30
    type <integer_type 0x7f1c79b2c7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c738 precision:64 min <integer_cst 0x7f1c79b17e88 0> max <integer_cst 0x7f1c79b18500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f1c79b387e0>>
   
    def_stmt _53 = (long unsigned int) n_48;
    version:53>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c79669000
    type <pointer_type 0x7f1c7963d930
        type <record_type 0x7f1c79638150 strbuf BLK
            size <integer_cst 0x7f1c79b35078 constant 192>
            unit-size <integer_cst 0x7f1c79b35048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79638150 fields <field_decl 0x7f1c79637428 alloc> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c7963d930>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _55 = &pp.buffered_output;
    version:55
    ptr-info 0x7f1c79626f00>
_55 = &pp.buffered_output;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_297 = VDEF <.MEM_296>
strbuf_init (_55, 0);
strbuf_init (_55, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: use location
  193 |         strbuf_init(&pp->buffered_output, 0);
      |         ^
this stmt call this function :strbuf_init
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_297 = VDEF <.MEM_296>
strbuf_init (_55, 0);
strbuf_init (_55, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: use location
this stmt call this function :strbuf_init
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c79669000
    type <pointer_type 0x7f1c7963d930
        type <record_type 0x7f1c79638150 strbuf BLK
            size <integer_cst 0x7f1c79b35078 constant 192>
            unit-size <integer_cst 0x7f1c79b35048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79638150 fields <field_decl 0x7f1c79637428 alloc> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c7963d930>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _55 = &pp.buffered_output;
    version:55
    ptr-info 0x7f1c79626f00>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c796691b0
    type <pointer_type 0x7f1c7963d930
        type <record_type 0x7f1c79638150 strbuf BLK
            size <integer_cst 0x7f1c79b35078 constant 192>
            unit-size <integer_cst 0x7f1c79b35048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79638150 fields <field_decl 0x7f1c79637428 alloc> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c7963d930>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _61 = &_60->err;
    version:61
    ptr-info 0x7f1c79626f48>
_61 = &_60->err;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_332 = VDEF <.MEM_277>
strbuf_init (_61, 0);
strbuf_init (_61, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                 ^
this stmt call this function :strbuf_init
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_332 = VDEF <.MEM_277>
strbuf_init (_61, 0);
strbuf_init (_61, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
this stmt call this function :strbuf_init
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c796691b0
    type <pointer_type 0x7f1c7963d930
        type <record_type 0x7f1c79638150 strbuf BLK
            size <integer_cst 0x7f1c79b35078 constant 192>
            unit-size <integer_cst 0x7f1c79b35048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79638150 fields <field_decl 0x7f1c79637428 alloc> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c7963d930>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _61 = &_60->err;
    version:61
    ptr-info 0x7f1c79626f48>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c79669318
    type <pointer_type 0x7f1c7963d888
        type <record_type 0x7f1c7963d7e0 child_process BLK
            size <integer_cst 0x7f1c796269c0 constant 640>
            unit-size <integer_cst 0x7f1c796268d0 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c7963d7e0 fields <field_decl 0x7f1c7963f850 argv> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c7963d888>>
        public unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _66 = &_65->process;
    version:66
    ptr-info 0x7f1c79626f90>
_66 = &_65->process;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_333 = VDEF <.MEM_332>
child_process_init (_66);
child_process_init (_66);
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                 ^
this stmt call this function :child_process_init
trace fucntion name:child_process_init 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_333 = VDEF <.MEM_332>
child_process_init (_66);
child_process_init (_66);
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
this stmt call this function :child_process_init
trace fucntion name:child_process_init 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c79669318
    type <pointer_type 0x7f1c7963d888
        type <record_type 0x7f1c7963d7e0 child_process BLK
            size <integer_cst 0x7f1c796269c0 constant 640>
            unit-size <integer_cst 0x7f1c796268d0 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c7963d7e0 fields <field_decl 0x7f1c7963f850 argv> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c7963d888>>
        public unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _66 = &_65->process;
    version:66
    ptr-info 0x7f1c79626f90>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c7966dc18
    type <pointer_type 0x7f1c7963d930
        type <record_type 0x7f1c79638150 strbuf BLK
            size <integer_cst 0x7f1c79b35078 constant 192>
            unit-size <integer_cst 0x7f1c79b35048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79638150 fields <field_decl 0x7f1c79637428 alloc> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c7963d930>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _108 = &pp.buffered_output;
    version:108
    ptr-info 0x7f1c796951e0>
_108 = &pp.buffered_output;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_310 = VDEF <.MEM_298>
strbuf_addbuf (_108, _107);
strbuf_addbuf (_108, _107);
./benchmarks/git/use_after_free_2/git_uaf_2.c:227:17: warning: use location
  227 |                 strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);
      |                 ^
this stmt call this function :strbuf_addbuf
trace fucntion name:strbuf_addbuf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_310 = VDEF <.MEM_298>
strbuf_addbuf (_108, _107);
strbuf_addbuf (_108, _107);
./benchmarks/git/use_after_free_2/git_uaf_2.c:227:17: warning: use location
this stmt call this function :strbuf_addbuf
trace fucntion name:strbuf_addbuf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c7966dc18
    type <pointer_type 0x7f1c7963d930
        type <record_type 0x7f1c79638150 strbuf BLK
            size <integer_cst 0x7f1c79b35078 constant 192>
            unit-size <integer_cst 0x7f1c79b35048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79638150 fields <field_decl 0x7f1c79637428 alloc> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c7963d930>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _108 = &pp.buffered_output;
    version:108
    ptr-info 0x7f1c796951e0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c7966dbd0
    type <pointer_type 0x7f1c7963d930
        type <record_type 0x7f1c79638150 strbuf BLK
            size <integer_cst 0x7f1c79b35078 constant 192>
            unit-size <integer_cst 0x7f1c79b35048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79638150 fields <field_decl 0x7f1c79637428 alloc> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c7963d930>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _107 = &_106->err;
    version:107
    ptr-info 0x7f1c796951c8>
_107 = &_106->err;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_310 = VDEF <.MEM_298>
strbuf_addbuf (_108, _107);
strbuf_addbuf (_108, _107);
./benchmarks/git/use_after_free_2/git_uaf_2.c:227:17: warning: use location
this stmt call this function :strbuf_addbuf
trace fucntion name:strbuf_addbuf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_310 = VDEF <.MEM_298>
strbuf_addbuf (_108, _107);
strbuf_addbuf (_108, _107);
./benchmarks/git/use_after_free_2/git_uaf_2.c:227:17: warning: use location
this stmt call this function :strbuf_addbuf
trace fucntion name:strbuf_addbuf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c7966dbd0
    type <pointer_type 0x7f1c7963d930
        type <record_type 0x7f1c79638150 strbuf BLK
            size <integer_cst 0x7f1c79b35078 constant 192>
            unit-size <integer_cst 0x7f1c79b35048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79638150 fields <field_decl 0x7f1c79637428 alloc> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c7963d930>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _107 = &_106->err;
    version:107
    ptr-info 0x7f1c796951c8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c7966dd80
    type <pointer_type 0x7f1c7963d930
        type <record_type 0x7f1c79638150 strbuf BLK
            size <integer_cst 0x7f1c79b35078 constant 192>
            unit-size <integer_cst 0x7f1c79b35048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79638150 fields <field_decl 0x7f1c79637428 alloc> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c7963d930>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _113 = &_112->err;
    version:113
    ptr-info 0x7f1c79695228>
_113 = &_112->err;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_311 = VDEF <.MEM_310>
strbuf_reset (_113);
strbuf_reset (_113);
./benchmarks/git/use_after_free_2/git_uaf_2.c:228:17: warning: use location
  228 |                 strbuf_reset(&pp->children[i].err);
      |                 ^
this stmt call this function :strbuf_reset
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_311 = VDEF <.MEM_310>
strbuf_reset (_113);
strbuf_reset (_113);
./benchmarks/git/use_after_free_2/git_uaf_2.c:228:17: warning: use location
this stmt call this function :strbuf_reset
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c7966dd80
    type <pointer_type 0x7f1c7963d930
        type <record_type 0x7f1c79638150 strbuf BLK
            size <integer_cst 0x7f1c79b35078 constant 192>
            unit-size <integer_cst 0x7f1c79b35048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79638150 fields <field_decl 0x7f1c79637428 alloc> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c7963d930>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _113 = &_112->err;
    version:113
    ptr-info 0x7f1c79695228>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c79675288
    type <pointer_type 0x7f1c7963d888
        type <record_type 0x7f1c7963d7e0 child_process BLK
            size <integer_cst 0x7f1c796269c0 constant 640>
            unit-size <integer_cst 0x7f1c796268d0 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c7963d7e0 fields <field_decl 0x7f1c7963f850 argv> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c7963d888>>
        public unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _130 = &_129->process;
    version:130
    ptr-info 0x7f1c79695300>
_130 = &_129->process;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_302 = VDEF <.MEM_301>
_131 = start_command (_130);
_131 = start_command (_130);
./benchmarks/git/use_after_free_2/git_uaf_2.c:235:13: warning: use location
  235 |         if (start_command(&pp->children[i].process)) {
      |             ^
this stmt call this function :start_command
trace fucntion name:start_command 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_131 != 0)
./benchmarks/git/use_after_free_2/git_uaf_2.c:235:12: warning: use location
  235 |         if (start_command(&pp->children[i].process)) {
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c79675288
    type <pointer_type 0x7f1c7963d888
        type <record_type 0x7f1c7963d7e0 child_process BLK
            size <integer_cst 0x7f1c796269c0 constant 640>
            unit-size <integer_cst 0x7f1c796268d0 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c7963d7e0 fields <field_decl 0x7f1c7963f850 argv> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c7963d888>>
        public unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _130 = &_129->process;
    version:130
    ptr-info 0x7f1c79695300>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c79675990
    type <pointer_type 0x7f1c7963d930
        type <record_type 0x7f1c79638150 strbuf BLK
            size <integer_cst 0x7f1c79b35078 constant 192>
            unit-size <integer_cst 0x7f1c79b35048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79638150 fields <field_decl 0x7f1c79637428 alloc> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c7963d930>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _155 = &pp.buffered_output;
    version:155
    ptr-info 0x7f1c79695468>
_155 = &pp.buffered_output;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_307 = VDEF <.MEM_306>
strbuf_addbuf (_155, _154);
strbuf_addbuf (_155, _154);
./benchmarks/git/use_after_free_2/git_uaf_2.c:240:17: warning: use location
  240 |                 strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);
      |                 ^
this stmt call this function :strbuf_addbuf
trace fucntion name:strbuf_addbuf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_307 = VDEF <.MEM_306>
strbuf_addbuf (_155, _154);
strbuf_addbuf (_155, _154);
./benchmarks/git/use_after_free_2/git_uaf_2.c:240:17: warning: use location
this stmt call this function :strbuf_addbuf
trace fucntion name:strbuf_addbuf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c79675990
    type <pointer_type 0x7f1c7963d930
        type <record_type 0x7f1c79638150 strbuf BLK
            size <integer_cst 0x7f1c79b35078 constant 192>
            unit-size <integer_cst 0x7f1c79b35048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79638150 fields <field_decl 0x7f1c79637428 alloc> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c7963d930>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _155 = &pp.buffered_output;
    version:155
    ptr-info 0x7f1c79695468>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c79675948
    type <pointer_type 0x7f1c7963d930
        type <record_type 0x7f1c79638150 strbuf BLK
            size <integer_cst 0x7f1c79b35078 constant 192>
            unit-size <integer_cst 0x7f1c79b35048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79638150 fields <field_decl 0x7f1c79637428 alloc> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c7963d930>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _154 = &_153->err;
    version:154
    ptr-info 0x7f1c79695450>
_154 = &_153->err;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_307 = VDEF <.MEM_306>
strbuf_addbuf (_155, _154);
strbuf_addbuf (_155, _154);
./benchmarks/git/use_after_free_2/git_uaf_2.c:240:17: warning: use location
this stmt call this function :strbuf_addbuf
trace fucntion name:strbuf_addbuf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_307 = VDEF <.MEM_306>
strbuf_addbuf (_155, _154);
strbuf_addbuf (_155, _154);
./benchmarks/git/use_after_free_2/git_uaf_2.c:240:17: warning: use location
this stmt call this function :strbuf_addbuf
trace fucntion name:strbuf_addbuf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c79675948
    type <pointer_type 0x7f1c7963d930
        type <record_type 0x7f1c79638150 strbuf BLK
            size <integer_cst 0x7f1c79b35078 constant 192>
            unit-size <integer_cst 0x7f1c79b35048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79638150 fields <field_decl 0x7f1c79637428 alloc> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c7963d930>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _154 = &_153->err;
    version:154
    ptr-info 0x7f1c79695450>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c79675af8
    type <pointer_type 0x7f1c7963d930
        type <record_type 0x7f1c79638150 strbuf BLK
            size <integer_cst 0x7f1c79b35078 constant 192>
            unit-size <integer_cst 0x7f1c79b35048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79638150 fields <field_decl 0x7f1c79637428 alloc> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c7963d930>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _160 = &_159->err;
    version:160
    ptr-info 0x7f1c796954b0>
_160 = &_159->err;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_308 = VDEF <.MEM_307>
strbuf_reset (_160);
strbuf_reset (_160);
./benchmarks/git/use_after_free_2/git_uaf_2.c:241:17: warning: use location
  241 |                 strbuf_reset(&pp->children[i].err);
      |                 ^
this stmt call this function :strbuf_reset
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_308 = VDEF <.MEM_307>
strbuf_reset (_160);
strbuf_reset (_160);
./benchmarks/git/use_after_free_2/git_uaf_2.c:241:17: warning: use location
this stmt call this function :strbuf_reset
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c79675af8
    type <pointer_type 0x7f1c7963d930
        type <record_type 0x7f1c79638150 strbuf BLK
            size <integer_cst 0x7f1c79b35078 constant 192>
            unit-size <integer_cst 0x7f1c79b35048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79638150 fields <field_decl 0x7f1c79637428 alloc> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c7963d930>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _160 = &_159->err;
    version:160
    ptr-info 0x7f1c796954b0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c79657a20
    type <integer_type 0x7f1c79b2c5e8 int public SI
        size <integer_cst 0x7f1c79b17df8 constant 32>
        unit-size <integer_cst 0x7f1c79b17e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c5e8 precision:32 min <integer_cst 0x7f1c79b17db0 -2147483648> max <integer_cst 0x7f1c79b17dc8 2147483647>
        pointer_to_this <pointer_type 0x7f1c79b339d8>>
   
    def_stmt _1 = -code_22;
    version:1>
_1 = -code_22;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_39 = VDEF <.MEM_38>
kill_children (&pp, _1);
kill_children (&pp, _1);
./benchmarks/git/use_after_free_2/git_uaf_2.c:355:33: warning: use location
  355 |                                 kill_children(&pp, -code);
      |                                 ^
this stmt call this function :kill_children
trace fucntion name:kill_children 
[40;44m =======trace_function_path kill_children  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:kill========= [0m
[40;46m =======add node_fun stack:kill========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_39 = VDEF <.MEM_38>
kill_children (&pp, _1);
kill_children (&pp, _1);
./benchmarks/git/use_after_free_2/git_uaf_2.c:355:33: warning: use location
this stmt call this function :kill_children
trace fucntion name:kill_children 
[40;44m =======trace_function_path kill_children  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:kill========= [0m
[40;46m =======add node_fun stack:kill========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c79657a20
    type <integer_type 0x7f1c79b2c5e8 int public SI
        size <integer_cst 0x7f1c79b17df8 constant 32>
        unit-size <integer_cst 0x7f1c79b17e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c5e8 precision:32 min <integer_cst 0x7f1c79b17db0 -2147483648> max <integer_cst 0x7f1c79b17dc8 2147483647>
        pointer_to_this <pointer_type 0x7f1c79b339d8>>
   
    def_stmt _1 = -code_22;
    version:1>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c79687750
    type <integer_type 0x7f1c79b2c5e8 int public SI
        size <integer_cst 0x7f1c79b17df8 constant 32>
        unit-size <integer_cst 0x7f1c79b17e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c5e8 precision:32 min <integer_cst 0x7f1c79b17db0 -2147483648> max <integer_cst 0x7f1c79b17dc8 2147483647>
        pointer_to_this <pointer_type 0x7f1c79b339d8>>
   
    def_stmt _272 = _191->pid;
    version:272>
# VUSE <.MEM_281>
_272 = _191->pid;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_315 = VDEF <.MEM_281>
ret_273 = wait_or_whine (_272, _271, 0);
ret_273 = wait_or_whine (_272, _271, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:15: warning: use location
  321 |     int ret = wait_or_whine(cmd->pid, cmd->argv[0], 0);
      |               ^
this stmt call this function :wait_or_whine
trace fucntion name:wait_or_whine 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_318 = ret_273;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
code_192 = _318;
./benchmarks/git/use_after_free_2/git_uaf_2.c:275:24: warning: use location
  275 |                 code = finish_command(&pp->children[i].process);
      |                        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c79687750
    type <integer_type 0x7f1c79b2c5e8 int public SI
        size <integer_cst 0x7f1c79b17df8 constant 32>
        unit-size <integer_cst 0x7f1c79b17e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c5e8 precision:32 min <integer_cst 0x7f1c79b17db0 -2147483648> max <integer_cst 0x7f1c79b17dc8 2147483647>
        pointer_to_this <pointer_type 0x7f1c79b339d8>>
   
    def_stmt _272 = _191->pid;
    version:272>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c79687708
    type <pointer_type 0x7f1c79638888
        type <integer_type 0x7f1c796387e0 char readonly QI
            size <integer_cst 0x7f1c79b17ca8 constant 8>
            unit-size <integer_cst 0x7f1c79b17cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c3f0 precision:8 min <integer_cst 0x7f1c79626888 -128> max <integer_cst 0x7f1c79626870 127>
            pointer_to_this <pointer_type 0x7f1c79638888>>
        public unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f1c7963d690>>
   
    def_stmt _271 = *_270;
    version:271
    ptr-info 0x7f1c79695960>
# VUSE <.MEM_281>
_271 = *_270;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_315 = VDEF <.MEM_281>
ret_273 = wait_or_whine (_272, _271, 0);
ret_273 = wait_or_whine (_272, _271, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:15: warning: use location
  321 |     int ret = wait_or_whine(cmd->pid, cmd->argv[0], 0);
      |               ^
this stmt call this function :wait_or_whine
trace fucntion name:wait_or_whine 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_318 = ret_273;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
code_192 = _318;
./benchmarks/git/use_after_free_2/git_uaf_2.c:275:24: warning: use location
  275 |                 code = finish_command(&pp->children[i].process);
      |                        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c79687708
    type <pointer_type 0x7f1c79638888
        type <integer_type 0x7f1c796387e0 char readonly QI
            size <integer_cst 0x7f1c79b17ca8 constant 8>
            unit-size <integer_cst 0x7f1c79b17cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c3f0 precision:8 min <integer_cst 0x7f1c79626888 -128> max <integer_cst 0x7f1c79626870 127>
            pointer_to_this <pointer_type 0x7f1c79638888>>
        public unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f1c7963d690>>
   
    def_stmt _271 = *_270;
    version:271
    ptr-info 0x7f1c79695960>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c796878b8
    type <pointer_type 0x7f1c79641150
        type <record_type 0x7f1c7963d738 argv_array TI
            size <integer_cst 0x7f1c79b17c00 constant 128>
            unit-size <integer_cst 0x7f1c79b17c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c7963d738 fields <field_decl 0x7f1c79637d10 argv> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c79641150>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _274 = &_191->args;
    version:274
    ptr-info 0x7f1c79695978>
_274 = &_191->args;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_316 = VDEF <.MEM_315>
argv_array_clear (_274);
argv_array_clear (_274);
./benchmarks/git/use_after_free_2/git_uaf_2.c:328:9: warning: use location
  328 |         argv_array_clear(&child->args);
      |         ^
this stmt call this function :argv_array_clear
trace fucntion name:argv_array_clear 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_316 = VDEF <.MEM_315>
argv_array_clear (_274);
argv_array_clear (_274);
./benchmarks/git/use_after_free_2/git_uaf_2.c:328:9: warning: use location
this stmt call this function :argv_array_clear
trace fucntion name:argv_array_clear 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c796878b8
    type <pointer_type 0x7f1c79641150
        type <record_type 0x7f1c7963d738 argv_array TI
            size <integer_cst 0x7f1c79b17c00 constant 128>
            unit-size <integer_cst 0x7f1c79b17c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c7963d738 fields <field_decl 0x7f1c79637d10 argv> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c79641150>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _274 = &_191->args;
    version:274
    ptr-info 0x7f1c79695978>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c79687900
    type <pointer_type 0x7f1c79641150
        type <record_type 0x7f1c7963d738 argv_array TI
            size <integer_cst 0x7f1c79b17c00 constant 128>
            unit-size <integer_cst 0x7f1c79b17c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c7963d738 fields <field_decl 0x7f1c79637d10 argv> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c79641150>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _275 = &_191->env_array;
    version:275
    ptr-info 0x7f1c79695990>
_275 = &_191->env_array;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_317 = VDEF <.MEM_316>
argv_array_clear (_275);
argv_array_clear (_275);
./benchmarks/git/use_after_free_2/git_uaf_2.c:329:9: warning: use location
  329 |         argv_array_clear(&child->env_array);
      |         ^
this stmt call this function :argv_array_clear
trace fucntion name:argv_array_clear 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_317 = VDEF <.MEM_316>
argv_array_clear (_275);
argv_array_clear (_275);
./benchmarks/git/use_after_free_2/git_uaf_2.c:329:9: warning: use location
this stmt call this function :argv_array_clear
trace fucntion name:argv_array_clear 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c79687900
    type <pointer_type 0x7f1c79641150
        type <record_type 0x7f1c7963d738 argv_array TI
            size <integer_cst 0x7f1c79b17c00 constant 128>
            unit-size <integer_cst 0x7f1c79b17c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c7963d738 fields <field_decl 0x7f1c79637d10 argv> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c79641150>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _275 = &_191->env_array;
    version:275
    ptr-info 0x7f1c79695990>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c79683870
    type <pointer_type 0x7f1c7963d888
        type <record_type 0x7f1c7963d7e0 child_process BLK
            size <integer_cst 0x7f1c796269c0 constant 640>
            unit-size <integer_cst 0x7f1c796268d0 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c7963d7e0 fields <field_decl 0x7f1c7963f850 argv> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c7963d888>>
        public unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _225 = &_224->process;
    version:225
    ptr-info 0x7f1c79695768>
_225 = &_224->process;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_323 = VDEF <.MEM_322>
child_process_init (_225);
child_process_init (_225);
./benchmarks/git/use_after_free_2/git_uaf_2.c:289:17: warning: use location
  289 |                 child_process_init(&pp->children[i].process);
      |                 ^
this stmt call this function :child_process_init
trace fucntion name:child_process_init 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_323 = VDEF <.MEM_322>
child_process_init (_225);
child_process_init (_225);
./benchmarks/git/use_after_free_2/git_uaf_2.c:289:17: warning: use location
this stmt call this function :child_process_init
trace fucntion name:child_process_init 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c79683870
    type <pointer_type 0x7f1c7963d888
        type <record_type 0x7f1c7963d7e0 child_process BLK
            size <integer_cst 0x7f1c796269c0 constant 640>
            unit-size <integer_cst 0x7f1c796268d0 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c7963d7e0 fields <field_decl 0x7f1c7963f850 argv> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c7963d888>>
        public unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _225 = &_224->process;
    version:225
    ptr-info 0x7f1c79695768>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c79683a68
    type <pointer_type 0x7f1c7963d930
        type <record_type 0x7f1c79638150 strbuf BLK
            size <integer_cst 0x7f1c79b35078 constant 192>
            unit-size <integer_cst 0x7f1c79b35048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79638150 fields <field_decl 0x7f1c79637428 alloc> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c7963d930>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _232 = &pp.buffered_output;
    version:232
    ptr-info 0x7f1c796957c8>
_232 = &pp.buffered_output;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_329 = VDEF <.MEM_323>
strbuf_addbuf (_232, _231);
strbuf_addbuf (_232, _231);
./benchmarks/git/use_after_free_2/git_uaf_2.c:292:25: warning: use location
  292 |                         strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);
      |                         ^
this stmt call this function :strbuf_addbuf
trace fucntion name:strbuf_addbuf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_329 = VDEF <.MEM_323>
strbuf_addbuf (_232, _231);
strbuf_addbuf (_232, _231);
./benchmarks/git/use_after_free_2/git_uaf_2.c:292:25: warning: use location
this stmt call this function :strbuf_addbuf
trace fucntion name:strbuf_addbuf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c79683a68
    type <pointer_type 0x7f1c7963d930
        type <record_type 0x7f1c79638150 strbuf BLK
            size <integer_cst 0x7f1c79b35078 constant 192>
            unit-size <integer_cst 0x7f1c79b35048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79638150 fields <field_decl 0x7f1c79637428 alloc> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c7963d930>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _232 = &pp.buffered_output;
    version:232
    ptr-info 0x7f1c796957c8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c79683a20
    type <pointer_type 0x7f1c7963d930
        type <record_type 0x7f1c79638150 strbuf BLK
            size <integer_cst 0x7f1c79b35078 constant 192>
            unit-size <integer_cst 0x7f1c79b35048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79638150 fields <field_decl 0x7f1c79637428 alloc> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c7963d930>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _231 = &_230->err;
    version:231
    ptr-info 0x7f1c796957b0>
_231 = &_230->err;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_329 = VDEF <.MEM_323>
strbuf_addbuf (_232, _231);
strbuf_addbuf (_232, _231);
./benchmarks/git/use_after_free_2/git_uaf_2.c:292:25: warning: use location
this stmt call this function :strbuf_addbuf
trace fucntion name:strbuf_addbuf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_329 = VDEF <.MEM_323>
strbuf_addbuf (_232, _231);
strbuf_addbuf (_232, _231);
./benchmarks/git/use_after_free_2/git_uaf_2.c:292:25: warning: use location
this stmt call this function :strbuf_addbuf
trace fucntion name:strbuf_addbuf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c79683a20
    type <pointer_type 0x7f1c7963d930
        type <record_type 0x7f1c79638150 strbuf BLK
            size <integer_cst 0x7f1c79b35078 constant 192>
            unit-size <integer_cst 0x7f1c79b35048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79638150 fields <field_decl 0x7f1c79637428 alloc> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c7963d930>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _231 = &_230->err;
    version:231
    ptr-info 0x7f1c796957b0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c79683bd0
    type <pointer_type 0x7f1c7963d930
        type <record_type 0x7f1c79638150 strbuf BLK
            size <integer_cst 0x7f1c79b35078 constant 192>
            unit-size <integer_cst 0x7f1c79b35048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79638150 fields <field_decl 0x7f1c79637428 alloc> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c7963d930>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _237 = &_236->err;
    version:237
    ptr-info 0x7f1c79695810>
_237 = &_236->err;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_330 = VDEF <.MEM_329>
strbuf_reset (_237);
strbuf_reset (_237);
./benchmarks/git/use_after_free_2/git_uaf_2.c:293:25: warning: use location
  293 |                         strbuf_reset(&pp->children[i].err);
      |                         ^
this stmt call this function :strbuf_reset
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_330 = VDEF <.MEM_329>
strbuf_reset (_237);
strbuf_reset (_237);
./benchmarks/git/use_after_free_2/git_uaf_2.c:293:25: warning: use location
this stmt call this function :strbuf_reset
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c79683bd0
    type <pointer_type 0x7f1c7963d930
        type <record_type 0x7f1c79638150 strbuf BLK
            size <integer_cst 0x7f1c79b35078 constant 192>
            unit-size <integer_cst 0x7f1c79b35048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79638150 fields <field_decl 0x7f1c79637428 alloc> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c7963d930>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _237 = &_236->err;
    version:237
    ptr-info 0x7f1c79695810>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c79683d80
    type <pointer_type 0x7f1c79636b28
        type <integer_type 0x7f1c796367e0 char public QI
            size <integer_cst 0x7f1c79b17ca8 constant 8>
            unit-size <integer_cst 0x7f1c79b17cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c3f0 precision:8 min <integer_cst 0x7f1c79626888 -128> max <integer_cst 0x7f1c79626870 127>
            pointer_to_this <pointer_type 0x7f1c79636b28>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7f1c79638690>>
   
    def_stmt _243 = _242->err.buf;
    version:243
    ptr-info 0x7f1c79695870>
# VUSE <.MEM_323>
_243 = _242->err.buf;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_324 = VDEF <.MEM_323>
fputs (_243, _238);
fputs (_243, _238);
./benchmarks/git/use_after_free_2/git_uaf_2.c:295:25: warning: use location
  295 |                         fputs(pp->children[i].err.buf, stderr);
      |                         ^
this stmt call this function :fputs
trace fucntion name:fputs 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_324 = VDEF <.MEM_323>
fputs (_243, _238);
fputs (_243, _238);
./benchmarks/git/use_after_free_2/git_uaf_2.c:295:25: warning: use location
this stmt call this function :fputs
trace fucntion name:fputs 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c79683d80
    type <pointer_type 0x7f1c79636b28
        type <integer_type 0x7f1c796367e0 char public QI
            size <integer_cst 0x7f1c79b17ca8 constant 8>
            unit-size <integer_cst 0x7f1c79b17cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c3f0 precision:8 min <integer_cst 0x7f1c79626888 -128> max <integer_cst 0x7f1c79626870 127>
            pointer_to_this <pointer_type 0x7f1c79636b28>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7f1c79638690>>
   
    def_stmt _243 = _242->err.buf;
    version:243
    ptr-info 0x7f1c79695870>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c79683c18
    type <pointer_type 0x7f1c79636e70
        type <record_type 0x7f1c79636dc8 FILE BLK
            size <integer_cst 0x7f1c79bec0a8 constant 1728>
            unit-size <integer_cst 0x7f1c79626900 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79636d20 fields <field_decl 0x7f1c79637260 _flags> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c79636e70>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f1c79640f18>>
   
    def_stmt _238 = stderr;
    version:238
    ptr-info 0x7f1c79695828>
# VUSE <.MEM_323>
_238 = stderr;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_324 = VDEF <.MEM_323>
fputs (_243, _238);
fputs (_243, _238);
./benchmarks/git/use_after_free_2/git_uaf_2.c:295:25: warning: use location
this stmt call this function :fputs
trace fucntion name:fputs 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_324 = VDEF <.MEM_323>
fputs (_243, _238);
fputs (_243, _238);
./benchmarks/git/use_after_free_2/git_uaf_2.c:295:25: warning: use location
this stmt call this function :fputs
trace fucntion name:fputs 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c79683c18
    type <pointer_type 0x7f1c79636e70
        type <record_type 0x7f1c79636dc8 FILE BLK
            size <integer_cst 0x7f1c79bec0a8 constant 1728>
            unit-size <integer_cst 0x7f1c79626900 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79636d20 fields <field_decl 0x7f1c79637260 _flags> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c79636e70>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f1c79640f18>>
   
    def_stmt _238 = stderr;
    version:238
    ptr-info 0x7f1c79695828>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c79683ee8
    type <pointer_type 0x7f1c7963d930
        type <record_type 0x7f1c79638150 strbuf BLK
            size <integer_cst 0x7f1c79b35078 constant 192>
            unit-size <integer_cst 0x7f1c79b35048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79638150 fields <field_decl 0x7f1c79637428 alloc> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c7963d930>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _248 = &_247->err;
    version:248
    ptr-info 0x7f1c796958b8>
_248 = &_247->err;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_325 = VDEF <.MEM_324>
strbuf_reset (_248);
strbuf_reset (_248);
./benchmarks/git/use_after_free_2/git_uaf_2.c:296:25: warning: use location
  296 |                         strbuf_reset(&pp->children[i].err);
      |                         ^
this stmt call this function :strbuf_reset
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_325 = VDEF <.MEM_324>
strbuf_reset (_248);
strbuf_reset (_248);
./benchmarks/git/use_after_free_2/git_uaf_2.c:296:25: warning: use location
this stmt call this function :strbuf_reset
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c79683ee8
    type <pointer_type 0x7f1c7963d930
        type <record_type 0x7f1c79638150 strbuf BLK
            size <integer_cst 0x7f1c79b35078 constant 192>
            unit-size <integer_cst 0x7f1c79b35048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79638150 fields <field_decl 0x7f1c79637428 alloc> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c7963d930>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _248 = &_247->err;
    version:248
    ptr-info 0x7f1c796958b8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c79683f78
    type <pointer_type 0x7f1c79636b28
        type <integer_type 0x7f1c796367e0 char public QI
            size <integer_cst 0x7f1c79b17ca8 constant 8>
            unit-size <integer_cst 0x7f1c79b17cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c3f0 precision:8 min <integer_cst 0x7f1c79626888 -128> max <integer_cst 0x7f1c79626870 127>
            pointer_to_this <pointer_type 0x7f1c79636b28>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7f1c79638690>>
   
    def_stmt _250 = pp.buffered_output.buf;
    version:250
    ptr-info 0x7f1c796958e8>
# VUSE <.MEM_325>
_250 = pp.buffered_output.buf;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_326 = VDEF <.MEM_325>
fputs (_250, _249);
fputs (_250, _249);
./benchmarks/git/use_after_free_2/git_uaf_2.c:299:25: warning: use location
  299 |                         fputs(pp->buffered_output.buf, stderr);
      |                         ^
this stmt call this function :fputs
trace fucntion name:fputs 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_326 = VDEF <.MEM_325>
fputs (_250, _249);
fputs (_250, _249);
./benchmarks/git/use_after_free_2/git_uaf_2.c:299:25: warning: use location
this stmt call this function :fputs
trace fucntion name:fputs 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c79683f78
    type <pointer_type 0x7f1c79636b28
        type <integer_type 0x7f1c796367e0 char public QI
            size <integer_cst 0x7f1c79b17ca8 constant 8>
            unit-size <integer_cst 0x7f1c79b17cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c3f0 precision:8 min <integer_cst 0x7f1c79626888 -128> max <integer_cst 0x7f1c79626870 127>
            pointer_to_this <pointer_type 0x7f1c79636b28>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7f1c79638690>>
   
    def_stmt _250 = pp.buffered_output.buf;
    version:250
    ptr-info 0x7f1c796958e8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c79683f30
    type <pointer_type 0x7f1c79636e70
        type <record_type 0x7f1c79636dc8 FILE BLK
            size <integer_cst 0x7f1c79bec0a8 constant 1728>
            unit-size <integer_cst 0x7f1c79626900 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79636d20 fields <field_decl 0x7f1c79637260 _flags> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c79636e70>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f1c79640f18>>
   
    def_stmt _249 = stderr;
    version:249
    ptr-info 0x7f1c796958d0>
# VUSE <.MEM_325>
_249 = stderr;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_326 = VDEF <.MEM_325>
fputs (_250, _249);
fputs (_250, _249);
./benchmarks/git/use_after_free_2/git_uaf_2.c:299:25: warning: use location
this stmt call this function :fputs
trace fucntion name:fputs 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_326 = VDEF <.MEM_325>
fputs (_250, _249);
fputs (_250, _249);
./benchmarks/git/use_after_free_2/git_uaf_2.c:299:25: warning: use location
this stmt call this function :fputs
trace fucntion name:fputs 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c79683f30
    type <pointer_type 0x7f1c79636e70
        type <record_type 0x7f1c79636dc8 FILE BLK
            size <integer_cst 0x7f1c79bec0a8 constant 1728>
            unit-size <integer_cst 0x7f1c79626900 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79636d20 fields <field_decl 0x7f1c79637260 _flags> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c79636e70>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f1c79640f18>>
   
    def_stmt _249 = stderr;
    version:249
    ptr-info 0x7f1c796958d0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c79687000
    type <pointer_type 0x7f1c7963d930
        type <record_type 0x7f1c79638150 strbuf BLK
            size <integer_cst 0x7f1c79b35078 constant 192>
            unit-size <integer_cst 0x7f1c79b35048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79638150 fields <field_decl 0x7f1c79637428 alloc> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c7963d930>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _251 = &pp.buffered_output;
    version:251
    ptr-info 0x7f1c79695900>
_251 = &pp.buffered_output;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_327 = VDEF <.MEM_326>
strbuf_reset (_251);
strbuf_reset (_251);
./benchmarks/git/use_after_free_2/git_uaf_2.c:300:25: warning: use location
  300 |                         strbuf_reset(&pp->buffered_output);
      |                         ^
this stmt call this function :strbuf_reset
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_327 = VDEF <.MEM_326>
strbuf_reset (_251);
strbuf_reset (_251);
./benchmarks/git/use_after_free_2/git_uaf_2.c:300:25: warning: use location
this stmt call this function :strbuf_reset
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c79687000
    type <pointer_type 0x7f1c7963d930
        type <record_type 0x7f1c79638150 strbuf BLK
            size <integer_cst 0x7f1c79b35078 constant 192>
            unit-size <integer_cst 0x7f1c79b35048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79638150 fields <field_decl 0x7f1c79637428 alloc> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c7963d930>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _251 = &pp.buffered_output;
    version:251
    ptr-info 0x7f1c79695900>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c79657bd0
    type <integer_type 0x7f1c79b2c5e8 int public SI
        size <integer_cst 0x7f1c79b17df8 constant 32>
        unit-size <integer_cst 0x7f1c79b17e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c5e8 precision:32 min <integer_cst 0x7f1c79b17db0 -2147483648> max <integer_cst 0x7f1c79b17dc8 2147483647>
        pointer_to_this <pointer_type 0x7f1c79b339d8>>
   
    def_stmt _7 = -code_29;
    version:7>
_7 = -code_29;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_44 = VDEF <.MEM_43>
kill_children (&pp, _7);
kill_children (&pp, _7);
./benchmarks/git/use_after_free_2/git_uaf_2.c:367:33: warning: use location
  367 |                                 kill_children(&pp, -code);
      |                                 ^
this stmt call this function :kill_children
trace fucntion name:kill_children 
[40;44m =======trace_function_path kill_children  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:kill========= [0m
[40;46m =======add node_fun stack:kill========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_44 = VDEF <.MEM_43>
kill_children (&pp, _7);
kill_children (&pp, _7);
./benchmarks/git/use_after_free_2/git_uaf_2.c:367:33: warning: use location
this stmt call this function :kill_children
trace fucntion name:kill_children 
[40;44m =======trace_function_path kill_children  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:kill========= [0m
[40;46m =======add node_fun stack:kill========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c79657bd0
    type <integer_type 0x7f1c79b2c5e8 int public SI
        size <integer_cst 0x7f1c79b17df8 constant 32>
        unit-size <integer_cst 0x7f1c79b17e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c5e8 precision:32 min <integer_cst 0x7f1c79b17db0 -2147483648> max <integer_cst 0x7f1c79b17dc8 2147483647>
        pointer_to_this <pointer_type 0x7f1c79b339d8>>
   
    def_stmt _7 = -code_29;
    version:7>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:run_processes_parallel========= [0m
[40;42m =======pre add _ fucntion:strcmp========= [0m
[40;33m =======POP node_fun stack:strcmp========= [0m
[40;42m =======pre add _ fucntion:strtol========= [0m
[40;33m =======POP node_fun stack:strtol========= [0m
[40;42m =======pre add _ fucntion:run_command========= [0m
[40;33m =======POP node_fun stack:run_command========= [0m
[40;42m =======pre add _ fucntion:fprintf========= [0m
[40;33m =======POP node_fun stack:fprintf========= [0m
[40;42m =======pre add _ fucntion:__errno_location========= [0m
[40;33m =======POP node_fun stack:__errno_location========= [0m
[40;42m =======pre add _ fucntion:start_command========= [0m
[40;33m =======POP node_fun stack:start_command========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f1c79b1f678
    type <integer_type 0x7f1c79b2c5e8 int public SI
        size <integer_cst 0x7f1c79b17df8 constant 32>
        unit-size <integer_cst 0x7f1c79b17e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c5e8 precision:32 min <integer_cst 0x7f1c79b17db0 -2147483648> max <integer_cst 0x7f1c79b17dc8 2147483647>
        pointer_to_this <pointer_type 0x7f1c79b339d8>>
   
    def_stmt _3 = strcmp (_2, "start-command-ENOENT");
    version:3>
# VUSE <.MEM_53>
_3 = strcmp (_2, "start-command-ENOENT");

 ================== pre trace ptable ================== 
trace fucntion name:strcmp 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function strcmp
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_53>
_3 = strcmp (_2, "start-command-ENOENT");
_3 = strcmp (_2, "start-command-ENOENT");
./benchmarks/git/use_after_free_2/git_uaf_2.c:419:14: warning: use location
  419 |         if (!strcmp(argv[1], "start-command-ENOENT")) {
      |              ^
this stmt call this function :strcmp
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:0 
if (_3 == 0)
./benchmarks/git/use_after_free_2/git_uaf_2.c:419:12: warning: use location
  419 |         if (!strcmp(argv[1], "start-command-ENOENT")) {
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c79b1f678
    type <integer_type 0x7f1c79b2c5e8 int public SI
        size <integer_cst 0x7f1c79b17df8 constant 32>
        unit-size <integer_cst 0x7f1c79b17e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c5e8 precision:32 min <integer_cst 0x7f1c79b17db0 -2147483648> max <integer_cst 0x7f1c79b17dc8 2147483647>
        pointer_to_this <pointer_type 0x7f1c79b339d8>>
   
    def_stmt _3 = strcmp (_2, "start-command-ENOENT");
    version:3>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c79b1f6c0
    type <integer_type 0x7f1c79b2c5e8 int public SI
        size <integer_cst 0x7f1c79b17df8 constant 32>
        unit-size <integer_cst 0x7f1c79b17e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c5e8 precision:32 min <integer_cst 0x7f1c79b17db0 -2147483648> max <integer_cst 0x7f1c79b17dc8 2147483647>
        pointer_to_this <pointer_type 0x7f1c79b339d8>>
   
    def_stmt _4 = start_command (&proc);
    version:4>
# .MEM_65 = VDEF <.MEM_53>
_4 = start_command (&proc);

 ================== pre trace ptable ================== 
trace fucntion name:start_command 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function start_command
 
 Start check Pointer Collect  

======================================================================
_11 = run_command (&proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:426:17: warning: use location
  426 |                 exit(run_command(&proc));
      |                 ^
this stmt call this function :run_command
trace fucntion name:run_command 

 ================== trace ================== 
trace fucntion free:0 
proc.argv = _13;
./benchmarks/git/use_after_free_2/git_uaf_2.c:429:19: warning: use location
  429 |         proc.argv = (const char **)argv + 3;
      |                   ^
_16 = run_processes_parallel (_47, parallel_next, 0B, 0B, &proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:432:17: warning: use location
  432 |                 exit(run_processes_parallel(jobs, parallel_next,
      |                 ^
this stmt call this function :run_processes_parallel
trace fucntion name:run_processes_parallel 
[40;44m =======trace_function_path run_processes_parallel  function_call count: 17 level :0========  [0m
[40;42m =======pre add _ fucntion:pp_cleanup========= [0m
[40;46m =======add node_fun stack:pp_cleanup========= [0m
[40;42m =======pre add _ fucntion:kill_children========= [0m
[40;46m =======add node_fun stack:kill_children========= [0m
[40;44m =======trace_function_path kill_children  function_call count: 1 level :1========  [0m
[40;42m =======pre add _ fucntion:kill========= [0m
[40;46m =======add node_fun stack:kill========= [0m
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:fputs========= [0m
[40;46m =======add node_fun stack:fputs========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;46m =======add node_fun stack:wait_or_whine========= [0m
[40;42m =======pre add _ fucntion:pp_output========= [0m
[40;46m =======add node_fun stack:pp_output========= [0m
[40;42m =======pre add _ fucntion:pp_buffer_stderr========= [0m
[40;46m =======add node_fun stack:pp_buffer_stderr========= [0m
[40;42m =======pre add _ fucntion:start_command========= [0m
[40;46m =======add node_fun stack:start_command========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;46m =======add node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;46m =======add node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;46m =======add node_fun stack:online_cpus========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_65 = VDEF <.MEM_53>
_4 = start_command (&proc);
_4 = start_command (&proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:420:21: warning: use location
  420 |                 if (start_command(&proc) < 0 && errno == ENOENT)
      |                     ^
this stmt call this function :start_command
trace fucntion name:start_command 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c79b1f6c0
    type <integer_type 0x7f1c79b2c5e8 int public SI
        size <integer_cst 0x7f1c79b17df8 constant 32>
        unit-size <integer_cst 0x7f1c79b17e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c5e8 precision:32 min <integer_cst 0x7f1c79b17db0 -2147483648> max <integer_cst 0x7f1c79b17dc8 2147483647>
        pointer_to_this <pointer_type 0x7f1c79b339d8>>
   
    def_stmt _4 = start_command (&proc);
    version:4>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c79b1f708
    type <pointer_type 0x7f1c79b339d8
        type <integer_type 0x7f1c79b2c5e8 int public SI
            size <integer_cst 0x7f1c79b17df8 constant 32>
            unit-size <integer_cst 0x7f1c79b17e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c5e8 precision:32 min <integer_cst 0x7f1c79b17db0 -2147483648> max <integer_cst 0x7f1c79b17dc8 2147483647>
            pointer_to_this <pointer_type 0x7f1c79b339d8>>
        public unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = __errno_location ();
    version:5
    ptr-info 0x7f1c7964cea0>
_5 = __errno_location ();

 ================== pre trace ptable ================== 
trace fucntion name:__errno_location 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function __errno_location
 
 Start check Pointer Collect  

======================================================================
_6 = *_5;
./benchmarks/git/use_after_free_2/git_uaf_2.c:420:49: warning: use location
  420 |                 if (start_command(&proc) < 0 && errno == ENOENT)
      |                                                 ^
if (_6 == 2)
./benchmarks/git/use_after_free_2/git_uaf_2.c:420:46: warning: use location
  420 |                 if (start_command(&proc) < 0 && errno == ENOENT)
      |                                              ^
_5 = __errno_location ();
_5 = __errno_location ();
./benchmarks/git/use_after_free_2/git_uaf_2.c:420:49: warning: use location
  420 |                 if (start_command(&proc) < 0 && errno == ENOENT)
      |                                                 ^
this stmt call this function :__errno_location
trace fucntion name:__errno_location 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c79b1f708
    type <pointer_type 0x7f1c79b339d8
        type <integer_type 0x7f1c79b2c5e8 int public SI
            size <integer_cst 0x7f1c79b17df8 constant 32>
            unit-size <integer_cst 0x7f1c79b17e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c5e8 precision:32 min <integer_cst 0x7f1c79b17db0 -2147483648> max <integer_cst 0x7f1c79b17dc8 2147483647>
            pointer_to_this <pointer_type 0x7f1c79b339d8>>
        public unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = __errno_location ();
    version:5
    ptr-info 0x7f1c7964cea0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c79b1f870
    type <integer_type 0x7f1c79b2c5e8 int public SI
        size <integer_cst 0x7f1c79b17df8 constant 32>
        unit-size <integer_cst 0x7f1c79b17e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c5e8 precision:32 min <integer_cst 0x7f1c79b17db0 -2147483648> max <integer_cst 0x7f1c79b17dc8 2147483647>
        pointer_to_this <pointer_type 0x7f1c79b339d8>>
   
    def_stmt _10 = strcmp (_9, "run-command");
    version:10>
# VUSE <.MEM_53>
_10 = strcmp (_9, "run-command");

 ================== pre trace ptable ================== 
trace fucntion name:strcmp 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function strcmp
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_53>
_10 = strcmp (_9, "run-command");
_10 = strcmp (_9, "run-command");
./benchmarks/git/use_after_free_2/git_uaf_2.c:425:14: warning: use location
  425 |         if (!strcmp(argv[1], "run-command"))
      |              ^
this stmt call this function :strcmp
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:0 
if (_10 == 0)
./benchmarks/git/use_after_free_2/git_uaf_2.c:425:12: warning: use location
  425 |         if (!strcmp(argv[1], "run-command"))
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c79b1f870
    type <integer_type 0x7f1c79b2c5e8 int public SI
        size <integer_cst 0x7f1c79b17df8 constant 32>
        unit-size <integer_cst 0x7f1c79b17e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c5e8 precision:32 min <integer_cst 0x7f1c79b17db0 -2147483648> max <integer_cst 0x7f1c79b17dc8 2147483647>
        pointer_to_this <pointer_type 0x7f1c79b339d8>>
   
    def_stmt _10 = strcmp (_9, "run-command");
    version:10>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c79b1f8b8
    type <integer_type 0x7f1c79b2c5e8 int public SI
        size <integer_cst 0x7f1c79b17df8 constant 32>
        unit-size <integer_cst 0x7f1c79b17e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c5e8 precision:32 min <integer_cst 0x7f1c79b17db0 -2147483648> max <integer_cst 0x7f1c79b17dc8 2147483647>
        pointer_to_this <pointer_type 0x7f1c79b339d8>>
   
    def_stmt _11 = run_command (&proc);
    version:11>
# .MEM_63 = VDEF <.MEM_53>
_11 = run_command (&proc);

 ================== pre trace ptable ================== 
trace fucntion name:run_command 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function run_command
 
 Start check Pointer Collect  

======================================================================
# .MEM_63 = VDEF <.MEM_53>
_11 = run_command (&proc);
_11 = run_command (&proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:426:17: warning: use location
  426 |                 exit(run_command(&proc));
      |                 ^
this stmt call this function :run_command
trace fucntion name:run_command 

 ================== trace ================== 
trace fucntion free:0 
proc.argv = _13;
./benchmarks/git/use_after_free_2/git_uaf_2.c:429:19: warning: use location
  429 |         proc.argv = (const char **)argv + 3;
      |                   ^
_16 = run_processes_parallel (_47, parallel_next, 0B, 0B, &proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:432:17: warning: use location
  432 |                 exit(run_processes_parallel(jobs, parallel_next,
      |                 ^
this stmt call this function :run_processes_parallel
trace fucntion name:run_processes_parallel 
[40;44m =======trace_function_path run_processes_parallel  function_call count: 17 level :0========  [0m
[40;42m =======pre add _ fucntion:pp_cleanup========= [0m
[40;46m =======add node_fun stack:pp_cleanup========= [0m
[40;42m =======pre add _ fucntion:kill_children========= [0m
[40;46m =======add node_fun stack:kill_children========= [0m
[40;44m =======trace_function_path kill_children  function_call count: 1 level :1========  [0m
[40;42m =======pre add _ fucntion:kill========= [0m
[40;46m =======add node_fun stack:kill========= [0m
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:fputs========= [0m
[40;46m =======add node_fun stack:fputs========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;46m =======add node_fun stack:wait_or_whine========= [0m
[40;42m =======pre add _ fucntion:pp_output========= [0m
[40;46m =======add node_fun stack:pp_output========= [0m
[40;42m =======pre add _ fucntion:pp_buffer_stderr========= [0m
[40;46m =======add node_fun stack:pp_buffer_stderr========= [0m
[40;42m =======pre add _ fucntion:start_command========= [0m
[40;46m =======add node_fun stack:start_command========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;46m =======add node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;46m =======add node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;46m =======add node_fun stack:online_cpus========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c79b1f8b8
    type <integer_type 0x7f1c79b2c5e8 int public SI
        size <integer_cst 0x7f1c79b17df8 constant 32>
        unit-size <integer_cst 0x7f1c79b17e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c5e8 precision:32 min <integer_cst 0x7f1c79b17db0 -2147483648> max <integer_cst 0x7f1c79b17dc8 2147483647>
        pointer_to_this <pointer_type 0x7f1c79b339d8>>
   
    def_stmt _11 = run_command (&proc);
    version:11>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c79b1fd38
    type <integer_type 0x7f1c79b2c738 long int DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c738 precision:64 min <integer_cst 0x7f1c79b17e40 -9223372036854775808> max <integer_cst 0x7f1c79b17e58 9223372036854775807>
        pointer_to_this <pointer_type 0x7f1c79b38738>>
   
    def_stmt _46 = strtol (_12, 0B, 10);
    version:46>
# .MEM_54 = VDEF <.MEM_53>
_46 = strtol (_12, 0B, 10);

 ================== pre trace ptable ================== 
trace fucntion name:strtol 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function strtol
 
 Start check Pointer Collect  

======================================================================
# .MEM_54 = VDEF <.MEM_53>
_46 = strtol (_12, 0B, 10);
_46 = strtol (_12, 0B, 10);
this stmt call this function :strtol
trace fucntion name:strtol 

 ================== trace ================== 
trace fucntion free:0 
_47 = (int) _46;
_22 = run_processes_parallel (_47, no_job, 0B, task_finished, &proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:440:17: warning: use location
  440 |                 exit(run_processes_parallel(jobs, no_job,
      |                 ^
this stmt call this function :run_processes_parallel
trace fucntion name:run_processes_parallel 
[40;44m =======trace_function_path run_processes_parallel  function_call count: 17 level :0========  [0m
[40;42m =======pre add _ fucntion:pp_cleanup========= [0m
[40;46m =======add node_fun stack:pp_cleanup========= [0m
[40;42m =======pre add _ fucntion:kill_children========= [0m
[40;46m =======add node_fun stack:kill_children========= [0m
[40;44m =======trace_function_path kill_children  function_call count: 1 level :1========  [0m
[40;42m =======pre add _ fucntion:kill========= [0m
[40;46m =======add node_fun stack:kill========= [0m
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:fputs========= [0m
[40;46m =======add node_fun stack:fputs========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;46m =======add node_fun stack:wait_or_whine========= [0m
[40;42m =======pre add _ fucntion:pp_output========= [0m
[40;46m =======add node_fun stack:pp_output========= [0m
[40;42m =======pre add _ fucntion:pp_buffer_stderr========= [0m
[40;46m =======add node_fun stack:pp_buffer_stderr========= [0m
[40;42m =======pre add _ fucntion:start_command========= [0m
[40;46m =======add node_fun stack:start_command========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;46m =======add node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;46m =======add node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;46m =======add node_fun stack:online_cpus========= [0m

 ================== trace ================== 
trace fucntion free:0 
exit (_22);
./benchmarks/git/use_after_free_2/git_uaf_2.c:440:17: warning: use location
this stmt call this function :exit
trace fucntion name:exit 

 ================== trace ================== 
trace fucntion free:0 
_19 = run_processes_parallel (_47, parallel_next, 0B, task_finished, &proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:436:17: warning: use location
  436 |                 exit(run_processes_parallel(jobs, parallel_next,
      |                 ^
this stmt call this function :run_processes_parallel
trace fucntion name:run_processes_parallel 
[40;44m =======trace_function_path run_processes_parallel  function_call count: 17 level :0========  [0m
[40;42m =======pre add _ fucntion:pp_cleanup========= [0m
[40;46m =======add node_fun stack:pp_cleanup========= [0m
[40;42m =======pre add _ fucntion:kill_children========= [0m
[40;46m =======add node_fun stack:kill_children========= [0m
[40;44m =======trace_function_path kill_children  function_call count: 1 level :1========  [0m
[40;42m =======pre add _ fucntion:kill========= [0m
[40;46m =======add node_fun stack:kill========= [0m
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:fputs========= [0m
[40;46m =======add node_fun stack:fputs========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;46m =======add node_fun stack:wait_or_whine========= [0m
[40;42m =======pre add _ fucntion:pp_output========= [0m
[40;46m =======add node_fun stack:pp_output========= [0m
[40;42m =======pre add _ fucntion:pp_buffer_stderr========= [0m
[40;46m =======add node_fun stack:pp_buffer_stderr========= [0m
[40;42m =======pre add _ fucntion:start_command========= [0m
[40;46m =======add node_fun stack:start_command========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;46m =======add node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;46m =======add node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;46m =======add node_fun stack:online_cpus========= [0m

 ================== trace ================== 
trace fucntion free:0 
exit (_19);
./benchmarks/git/use_after_free_2/git_uaf_2.c:436:17: warning: use location
this stmt call this function :exit
trace fucntion name:exit 

 ================== trace ================== 
trace fucntion free:0 
_16 = run_processes_parallel (_47, parallel_next, 0B, 0B, &proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:432:17: warning: use location
  432 |                 exit(run_processes_parallel(jobs, parallel_next,
      |                 ^
this stmt call this function :run_processes_parallel
trace fucntion name:run_processes_parallel 
[40;44m =======trace_function_path run_processes_parallel  function_call count: 17 level :0========  [0m
[40;42m =======pre add _ fucntion:pp_cleanup========= [0m
[40;46m =======add node_fun stack:pp_cleanup========= [0m
[40;42m =======pre add _ fucntion:kill_children========= [0m
[40;46m =======add node_fun stack:kill_children========= [0m
[40;44m =======trace_function_path kill_children  function_call count: 1 level :1========  [0m
[40;42m =======pre add _ fucntion:kill========= [0m
[40;46m =======add node_fun stack:kill========= [0m
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:fputs========= [0m
[40;46m =======add node_fun stack:fputs========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;46m =======add node_fun stack:wait_or_whine========= [0m
[40;42m =======pre add _ fucntion:pp_output========= [0m
[40;46m =======add node_fun stack:pp_output========= [0m
[40;42m =======pre add _ fucntion:pp_buffer_stderr========= [0m
[40;46m =======add node_fun stack:pp_buffer_stderr========= [0m
[40;42m =======pre add _ fucntion:start_command========= [0m
[40;46m =======add node_fun stack:start_command========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;46m =======add node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;46m =======add node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;46m =======add node_fun stack:online_cpus========= [0m

 ================== trace ================== 
trace fucntion free:0 
exit (_16);
./benchmarks/git/use_after_free_2/git_uaf_2.c:432:17: warning: use location
this stmt call this function :exit
trace fucntion name:exit 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c79b1fd38
    type <integer_type 0x7f1c79b2c738 long int DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c738 precision:64 min <integer_cst 0x7f1c79b17e40 -9223372036854775808> max <integer_cst 0x7f1c79b17e58 9223372036854775807>
        pointer_to_this <pointer_type 0x7f1c79b38738>>
   
    def_stmt _46 = strtol (_12, 0B, 10);
    version:46>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c79b1f9d8
    type <integer_type 0x7f1c79b2c5e8 int public SI
        size <integer_cst 0x7f1c79b17df8 constant 32>
        unit-size <integer_cst 0x7f1c79b17e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c5e8 precision:32 min <integer_cst 0x7f1c79b17db0 -2147483648> max <integer_cst 0x7f1c79b17dc8 2147483647>
        pointer_to_this <pointer_type 0x7f1c79b339d8>>
   
    def_stmt _15 = strcmp (_14, "run-command-parallel");
    version:15>
# VUSE <.MEM_55>
_15 = strcmp (_14, "run-command-parallel");

 ================== pre trace ptable ================== 
trace fucntion name:strcmp 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function strcmp
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_55>
_15 = strcmp (_14, "run-command-parallel");
_15 = strcmp (_14, "run-command-parallel");
./benchmarks/git/use_after_free_2/git_uaf_2.c:431:14: warning: use location
  431 |         if (!strcmp(argv[1], "run-command-parallel"))
      |              ^
this stmt call this function :strcmp
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:0 
if (_15 == 0)
./benchmarks/git/use_after_free_2/git_uaf_2.c:431:12: warning: use location
  431 |         if (!strcmp(argv[1], "run-command-parallel"))
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c79b1f9d8
    type <integer_type 0x7f1c79b2c5e8 int public SI
        size <integer_cst 0x7f1c79b17df8 constant 32>
        unit-size <integer_cst 0x7f1c79b17e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c5e8 precision:32 min <integer_cst 0x7f1c79b17db0 -2147483648> max <integer_cst 0x7f1c79b17dc8 2147483647>
        pointer_to_this <pointer_type 0x7f1c79b339d8>>
   
    def_stmt _15 = strcmp (_14, "run-command-parallel");
    version:15>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c79b1fa20
    type <integer_type 0x7f1c79b2c5e8 int public SI
        size <integer_cst 0x7f1c79b17df8 constant 32>
        unit-size <integer_cst 0x7f1c79b17e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c5e8 precision:32 min <integer_cst 0x7f1c79b17db0 -2147483648> max <integer_cst 0x7f1c79b17dc8 2147483647>
        pointer_to_this <pointer_type 0x7f1c79b339d8>>
   
    def_stmt _16 = run_processes_parallel (_47, parallel_next, 0B, 0B, &proc);
    version:16>
# .MEM_61 = VDEF <.MEM_55>
_16 = run_processes_parallel (_47, parallel_next, 0B, 0B, &proc);

 ================== pre trace ptable ================== 
trace fucntion name:run_processes_parallel 
[40;44m =======trace_function_path run_processes_parallel  function_call count: 17 level :888========  [0m
[40;42m =======pre add _ fucntion:pp_cleanup========= [0m
[40;46m =======add node_fun stack:pp_cleanup========= [0m
[40;42m =======pre add _ fucntion:kill_children========= [0m
[40;46m =======add node_fun stack:kill_children========= [0m
[40;44m =======trace_function_path kill_children  function_call count: 1 level :889========  [0m
[40;42m =======pre add _ fucntion:kill========= [0m
[40;46m =======add node_fun stack:kill========= [0m
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:fputs========= [0m
[40;46m =======add node_fun stack:fputs========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;46m =======add node_fun stack:wait_or_whine========= [0m
[40;42m =======pre add _ fucntion:pp_output========= [0m
[40;46m =======add node_fun stack:pp_output========= [0m
[40;42m =======pre add _ fucntion:pp_buffer_stderr========= [0m
[40;46m =======add node_fun stack:pp_buffer_stderr========= [0m
[40;42m =======pre add _ fucntion:start_command========= [0m
[40;46m =======add node_fun stack:start_command========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;46m =======add node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;46m =======add node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;46m =======add node_fun stack:online_cpus========= [0m

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function run_processes_parallel
 
 Start check Pointer Collect  

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :run_processes_parallel
# .MEM_61 = VDEF <.MEM_55>
_16 = run_processes_parallel (_47, parallel_next, 0B, 0B, &proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:432:17: warning: use location
  432 |                 exit(run_processes_parallel(jobs, parallel_next,
      |                 ^
# .MEM_57 = VDEF <.MEM_55>
_22 = run_processes_parallel (_47, no_job, 0B, task_finished, &proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:440:17: warning: use location
  440 |                 exit(run_processes_parallel(jobs, no_job,
      |                 ^
exit (_22);
./benchmarks/git/use_after_free_2/git_uaf_2.c:440:17: warning: use location
this stmt call this function :exit
trace fucntion name:exit 

 ================== trace ================== 
trace fucntion free:0 

======================================================================

 Expand conflict 
 The same function may have multiple branches :run_processes_parallel
# .MEM_61 = VDEF <.MEM_55>
_16 = run_processes_parallel (_47, parallel_next, 0B, 0B, &proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:432:17: warning: use location
  432 |                 exit(run_processes_parallel(jobs, parallel_next,
      |                 ^
# .MEM_59 = VDEF <.MEM_55>
_19 = run_processes_parallel (_47, parallel_next, 0B, task_finished, &proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:436:17: warning: use location
  436 |                 exit(run_processes_parallel(jobs, parallel_next,
      |                 ^
exit (_19);
./benchmarks/git/use_after_free_2/git_uaf_2.c:436:17: warning: use location
this stmt call this function :exit
trace fucntion name:exit 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_61 = VDEF <.MEM_55>
_16 = run_processes_parallel (_47, parallel_next, 0B, 0B, &proc);
_16 = run_processes_parallel (_47, parallel_next, 0B, 0B, &proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:432:17: warning: use location
  432 |                 exit(run_processes_parallel(jobs, parallel_next,
      |                 ^
this stmt call this function :run_processes_parallel
trace fucntion name:run_processes_parallel 
[40;44m =======trace_function_path run_processes_parallel  function_call count: 17 level :0========  [0m
[40;42m =======pre add _ fucntion:pp_cleanup========= [0m
[40;46m =======add node_fun stack:pp_cleanup========= [0m
[40;42m =======pre add _ fucntion:kill_children========= [0m
[40;46m =======add node_fun stack:kill_children========= [0m
[40;44m =======trace_function_path kill_children  function_call count: 1 level :1========  [0m
[40;42m =======pre add _ fucntion:kill========= [0m
[40;46m =======add node_fun stack:kill========= [0m
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:fputs========= [0m
[40;46m =======add node_fun stack:fputs========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;46m =======add node_fun stack:wait_or_whine========= [0m
[40;42m =======pre add _ fucntion:pp_output========= [0m
[40;46m =======add node_fun stack:pp_output========= [0m
[40;42m =======pre add _ fucntion:pp_buffer_stderr========= [0m
[40;46m =======add node_fun stack:pp_buffer_stderr========= [0m
[40;42m =======pre add _ fucntion:start_command========= [0m
[40;46m =======add node_fun stack:start_command========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;46m =======add node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;46m =======add node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;46m =======add node_fun stack:online_cpus========= [0m

 ================== trace ================== 
trace fucntion free:0 
exit (_16);
./benchmarks/git/use_after_free_2/git_uaf_2.c:432:17: warning: use location
this stmt call this function :exit
trace fucntion name:exit 

 ================== trace ================== 
trace fucntion free:0 
_11 = run_command (&proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:426:17: warning: use location
  426 |                 exit(run_command(&proc));
      |                 ^
this stmt call this function :run_command
trace fucntion name:run_command 

 ================== trace ================== 
trace fucntion free:0 
proc.argv = _13;
./benchmarks/git/use_after_free_2/git_uaf_2.c:429:19: warning: use location
  429 |         proc.argv = (const char **)argv + 3;
      |                   ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c79b1fa20
    type <integer_type 0x7f1c79b2c5e8 int public SI
        size <integer_cst 0x7f1c79b17df8 constant 32>
        unit-size <integer_cst 0x7f1c79b17e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c5e8 precision:32 min <integer_cst 0x7f1c79b17db0 -2147483648> max <integer_cst 0x7f1c79b17dc8 2147483647>
        pointer_to_this <pointer_type 0x7f1c79b339d8>>
   
    def_stmt _16 = run_processes_parallel (_47, parallel_next, 0B, 0B, &proc);
    version:16>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c79b1fab0
    type <integer_type 0x7f1c79b2c5e8 int public SI
        size <integer_cst 0x7f1c79b17df8 constant 32>
        unit-size <integer_cst 0x7f1c79b17e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c5e8 precision:32 min <integer_cst 0x7f1c79b17db0 -2147483648> max <integer_cst 0x7f1c79b17dc8 2147483647>
        pointer_to_this <pointer_type 0x7f1c79b339d8>>
   
    def_stmt _18 = strcmp (_17, "run-command-abort");
    version:18>
# VUSE <.MEM_55>
_18 = strcmp (_17, "run-command-abort");

 ================== pre trace ptable ================== 
trace fucntion name:strcmp 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function strcmp
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_55>
_18 = strcmp (_17, "run-command-abort");
_18 = strcmp (_17, "run-command-abort");
./benchmarks/git/use_after_free_2/git_uaf_2.c:435:14: warning: use location
  435 |         if (!strcmp(argv[1], "run-command-abort"))
      |              ^
this stmt call this function :strcmp
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:0 
if (_18 == 0)
./benchmarks/git/use_after_free_2/git_uaf_2.c:435:12: warning: use location
  435 |         if (!strcmp(argv[1], "run-command-abort"))
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c79b1fab0
    type <integer_type 0x7f1c79b2c5e8 int public SI
        size <integer_cst 0x7f1c79b17df8 constant 32>
        unit-size <integer_cst 0x7f1c79b17e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c5e8 precision:32 min <integer_cst 0x7f1c79b17db0 -2147483648> max <integer_cst 0x7f1c79b17dc8 2147483647>
        pointer_to_this <pointer_type 0x7f1c79b339d8>>
   
    def_stmt _18 = strcmp (_17, "run-command-abort");
    version:18>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c79b1faf8
    type <integer_type 0x7f1c79b2c5e8 int public SI
        size <integer_cst 0x7f1c79b17df8 constant 32>
        unit-size <integer_cst 0x7f1c79b17e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c5e8 precision:32 min <integer_cst 0x7f1c79b17db0 -2147483648> max <integer_cst 0x7f1c79b17dc8 2147483647>
        pointer_to_this <pointer_type 0x7f1c79b339d8>>
   
    def_stmt _19 = run_processes_parallel (_47, parallel_next, 0B, task_finished, &proc);
    version:19>
# .MEM_59 = VDEF <.MEM_55>
_19 = run_processes_parallel (_47, parallel_next, 0B, task_finished, &proc);

 ================== pre trace ptable ================== 
trace fucntion name:run_processes_parallel 
[40;44m =======trace_function_path run_processes_parallel  function_call count: 17 level :888========  [0m
[40;42m =======pre add _ fucntion:pp_cleanup========= [0m
[40;46m =======add node_fun stack:pp_cleanup========= [0m
[40;42m =======pre add _ fucntion:kill_children========= [0m
[40;46m =======add node_fun stack:kill_children========= [0m
[40;44m =======trace_function_path kill_children  function_call count: 1 level :889========  [0m
[40;42m =======pre add _ fucntion:kill========= [0m
[40;46m =======add node_fun stack:kill========= [0m
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:fputs========= [0m
[40;46m =======add node_fun stack:fputs========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;46m =======add node_fun stack:wait_or_whine========= [0m
[40;42m =======pre add _ fucntion:pp_output========= [0m
[40;46m =======add node_fun stack:pp_output========= [0m
[40;42m =======pre add _ fucntion:pp_buffer_stderr========= [0m
[40;46m =======add node_fun stack:pp_buffer_stderr========= [0m
[40;42m =======pre add _ fucntion:start_command========= [0m
[40;46m =======add node_fun stack:start_command========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;46m =======add node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;46m =======add node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;46m =======add node_fun stack:online_cpus========= [0m

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function run_processes_parallel
 
 Start check Pointer Collect  

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :run_processes_parallel
# .MEM_59 = VDEF <.MEM_55>
_19 = run_processes_parallel (_47, parallel_next, 0B, task_finished, &proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:436:17: warning: use location
  436 |                 exit(run_processes_parallel(jobs, parallel_next,
      |                 ^
# .MEM_57 = VDEF <.MEM_55>
_22 = run_processes_parallel (_47, no_job, 0B, task_finished, &proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:440:17: warning: use location
  440 |                 exit(run_processes_parallel(jobs, no_job,
      |                 ^
exit (_22);
./benchmarks/git/use_after_free_2/git_uaf_2.c:440:17: warning: use location
this stmt call this function :exit
trace fucntion name:exit 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_59 = VDEF <.MEM_55>
_19 = run_processes_parallel (_47, parallel_next, 0B, task_finished, &proc);
_19 = run_processes_parallel (_47, parallel_next, 0B, task_finished, &proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:436:17: warning: use location
  436 |                 exit(run_processes_parallel(jobs, parallel_next,
      |                 ^
this stmt call this function :run_processes_parallel
trace fucntion name:run_processes_parallel 
[40;44m =======trace_function_path run_processes_parallel  function_call count: 17 level :0========  [0m
[40;42m =======pre add _ fucntion:pp_cleanup========= [0m
[40;46m =======add node_fun stack:pp_cleanup========= [0m
[40;42m =======pre add _ fucntion:kill_children========= [0m
[40;46m =======add node_fun stack:kill_children========= [0m
[40;44m =======trace_function_path kill_children  function_call count: 1 level :1========  [0m
[40;42m =======pre add _ fucntion:kill========= [0m
[40;46m =======add node_fun stack:kill========= [0m
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:fputs========= [0m
[40;46m =======add node_fun stack:fputs========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;46m =======add node_fun stack:wait_or_whine========= [0m
[40;42m =======pre add _ fucntion:pp_output========= [0m
[40;46m =======add node_fun stack:pp_output========= [0m
[40;42m =======pre add _ fucntion:pp_buffer_stderr========= [0m
[40;46m =======add node_fun stack:pp_buffer_stderr========= [0m
[40;42m =======pre add _ fucntion:start_command========= [0m
[40;46m =======add node_fun stack:start_command========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;46m =======add node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;46m =======add node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;46m =======add node_fun stack:online_cpus========= [0m

 ================== trace ================== 
trace fucntion free:0 
exit (_19);
./benchmarks/git/use_after_free_2/git_uaf_2.c:436:17: warning: use location
this stmt call this function :exit
trace fucntion name:exit 

 ================== trace ================== 
trace fucntion free:0 

======================================================================

 Expand conflict 
 The same function may have multiple branches :run_processes_parallel
# .MEM_59 = VDEF <.MEM_55>
_19 = run_processes_parallel (_47, parallel_next, 0B, task_finished, &proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:436:17: warning: use location
# .MEM_61 = VDEF <.MEM_55>
_16 = run_processes_parallel (_47, parallel_next, 0B, 0B, &proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:432:17: warning: use location
  432 |                 exit(run_processes_parallel(jobs, parallel_next,
      |                 ^
exit (_16);
./benchmarks/git/use_after_free_2/git_uaf_2.c:432:17: warning: use location
this stmt call this function :exit
trace fucntion name:exit 

 ================== trace ================== 
trace fucntion free:0 
_11 = run_command (&proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:426:17: warning: use location
  426 |                 exit(run_command(&proc));
      |                 ^
this stmt call this function :run_command
trace fucntion name:run_command 

 ================== trace ================== 
trace fucntion free:0 
proc.argv = _13;
./benchmarks/git/use_after_free_2/git_uaf_2.c:429:19: warning: use location
  429 |         proc.argv = (const char **)argv + 3;
      |                   ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c79b1faf8
    type <integer_type 0x7f1c79b2c5e8 int public SI
        size <integer_cst 0x7f1c79b17df8 constant 32>
        unit-size <integer_cst 0x7f1c79b17e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c5e8 precision:32 min <integer_cst 0x7f1c79b17db0 -2147483648> max <integer_cst 0x7f1c79b17dc8 2147483647>
        pointer_to_this <pointer_type 0x7f1c79b339d8>>
   
    def_stmt _19 = run_processes_parallel (_47, parallel_next, 0B, task_finished, &proc);
    version:19>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c79b1fb88
    type <integer_type 0x7f1c79b2c5e8 int public SI
        size <integer_cst 0x7f1c79b17df8 constant 32>
        unit-size <integer_cst 0x7f1c79b17e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c5e8 precision:32 min <integer_cst 0x7f1c79b17db0 -2147483648> max <integer_cst 0x7f1c79b17dc8 2147483647>
        pointer_to_this <pointer_type 0x7f1c79b339d8>>
   
    def_stmt _21 = strcmp (_20, "run-command-no-jobs");
    version:21>
# VUSE <.MEM_55>
_21 = strcmp (_20, "run-command-no-jobs");

 ================== pre trace ptable ================== 
trace fucntion name:strcmp 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function strcmp
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_55>
_21 = strcmp (_20, "run-command-no-jobs");
_21 = strcmp (_20, "run-command-no-jobs");
./benchmarks/git/use_after_free_2/git_uaf_2.c:439:14: warning: use location
  439 |         if (!strcmp(argv[1], "run-command-no-jobs"))
      |              ^
this stmt call this function :strcmp
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:0 
if (_21 == 0)
./benchmarks/git/use_after_free_2/git_uaf_2.c:439:12: warning: use location
  439 |         if (!strcmp(argv[1], "run-command-no-jobs"))
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c79b1fb88
    type <integer_type 0x7f1c79b2c5e8 int public SI
        size <integer_cst 0x7f1c79b17df8 constant 32>
        unit-size <integer_cst 0x7f1c79b17e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c5e8 precision:32 min <integer_cst 0x7f1c79b17db0 -2147483648> max <integer_cst 0x7f1c79b17dc8 2147483647>
        pointer_to_this <pointer_type 0x7f1c79b339d8>>
   
    def_stmt _21 = strcmp (_20, "run-command-no-jobs");
    version:21>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c79b1fbd0
    type <integer_type 0x7f1c79b2c5e8 int public SI
        size <integer_cst 0x7f1c79b17df8 constant 32>
        unit-size <integer_cst 0x7f1c79b17e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c5e8 precision:32 min <integer_cst 0x7f1c79b17db0 -2147483648> max <integer_cst 0x7f1c79b17dc8 2147483647>
        pointer_to_this <pointer_type 0x7f1c79b339d8>>
   
    def_stmt _22 = run_processes_parallel (_47, no_job, 0B, task_finished, &proc);
    version:22>
# .MEM_57 = VDEF <.MEM_55>
_22 = run_processes_parallel (_47, no_job, 0B, task_finished, &proc);

 ================== pre trace ptable ================== 
trace fucntion name:run_processes_parallel 
[40;44m =======trace_function_path run_processes_parallel  function_call count: 17 level :888========  [0m
[40;42m =======pre add _ fucntion:pp_cleanup========= [0m
[40;46m =======add node_fun stack:pp_cleanup========= [0m
[40;42m =======pre add _ fucntion:kill_children========= [0m
[40;46m =======add node_fun stack:kill_children========= [0m
[40;44m =======trace_function_path kill_children  function_call count: 1 level :889========  [0m
[40;42m =======pre add _ fucntion:kill========= [0m
[40;46m =======add node_fun stack:kill========= [0m
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:fputs========= [0m
[40;46m =======add node_fun stack:fputs========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;46m =======add node_fun stack:wait_or_whine========= [0m
[40;42m =======pre add _ fucntion:pp_output========= [0m
[40;46m =======add node_fun stack:pp_output========= [0m
[40;42m =======pre add _ fucntion:pp_buffer_stderr========= [0m
[40;46m =======add node_fun stack:pp_buffer_stderr========= [0m
[40;42m =======pre add _ fucntion:start_command========= [0m
[40;46m =======add node_fun stack:start_command========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;46m =======add node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;46m =======add node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;46m =======add node_fun stack:online_cpus========= [0m

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function run_processes_parallel
 
 Start check Pointer Collect  

======================================================================
# .MEM_57 = VDEF <.MEM_55>
_22 = run_processes_parallel (_47, no_job, 0B, task_finished, &proc);
_22 = run_processes_parallel (_47, no_job, 0B, task_finished, &proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:440:17: warning: use location
  440 |                 exit(run_processes_parallel(jobs, no_job,
      |                 ^
this stmt call this function :run_processes_parallel
trace fucntion name:run_processes_parallel 
[40;44m =======trace_function_path run_processes_parallel  function_call count: 17 level :0========  [0m
[40;42m =======pre add _ fucntion:pp_cleanup========= [0m
[40;46m =======add node_fun stack:pp_cleanup========= [0m
[40;42m =======pre add _ fucntion:kill_children========= [0m
[40;46m =======add node_fun stack:kill_children========= [0m
[40;44m =======trace_function_path kill_children  function_call count: 1 level :1========  [0m
[40;42m =======pre add _ fucntion:kill========= [0m
[40;46m =======add node_fun stack:kill========= [0m
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:fputs========= [0m
[40;46m =======add node_fun stack:fputs========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;46m =======add node_fun stack:wait_or_whine========= [0m
[40;42m =======pre add _ fucntion:pp_output========= [0m
[40;46m =======add node_fun stack:pp_output========= [0m
[40;42m =======pre add _ fucntion:pp_buffer_stderr========= [0m
[40;46m =======add node_fun stack:pp_buffer_stderr========= [0m
[40;42m =======pre add _ fucntion:start_command========= [0m
[40;46m =======add node_fun stack:start_command========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;46m =======add node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;46m =======add node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;46m =======add node_fun stack:online_cpus========= [0m

 ================== trace ================== 
trace fucntion free:0 
exit (_22);
./benchmarks/git/use_after_free_2/git_uaf_2.c:440:17: warning: use location
this stmt call this function :exit
trace fucntion name:exit 

 ================== trace ================== 
trace fucntion free:0 

======================================================================

 Expand conflict 
 The same function may have multiple branches :run_processes_parallel
# .MEM_57 = VDEF <.MEM_55>
_22 = run_processes_parallel (_47, no_job, 0B, task_finished, &proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:440:17: warning: use location
# .MEM_59 = VDEF <.MEM_55>
_19 = run_processes_parallel (_47, parallel_next, 0B, task_finished, &proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:436:17: warning: use location
  436 |                 exit(run_processes_parallel(jobs, parallel_next,
      |                 ^
exit (_19);
./benchmarks/git/use_after_free_2/git_uaf_2.c:436:17: warning: use location
this stmt call this function :exit
trace fucntion name:exit 

 ================== trace ================== 
trace fucntion free:0 

======================================================================

 Expand conflict 
 The same function may have multiple branches :run_processes_parallel
# .MEM_57 = VDEF <.MEM_55>
_22 = run_processes_parallel (_47, no_job, 0B, task_finished, &proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:440:17: warning: use location
  440 |                 exit(run_processes_parallel(jobs, no_job,
      |                 ^
# .MEM_61 = VDEF <.MEM_55>
_16 = run_processes_parallel (_47, parallel_next, 0B, 0B, &proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:432:17: warning: use location
  432 |                 exit(run_processes_parallel(jobs, parallel_next,
      |                 ^
exit (_16);
./benchmarks/git/use_after_free_2/git_uaf_2.c:432:17: warning: use location
this stmt call this function :exit
trace fucntion name:exit 

 ================== trace ================== 
trace fucntion free:0 
_11 = run_command (&proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:426:17: warning: use location
  426 |                 exit(run_command(&proc));
      |                 ^
this stmt call this function :run_command
trace fucntion name:run_command 

 ================== trace ================== 
trace fucntion free:0 
proc.argv = _13;
./benchmarks/git/use_after_free_2/git_uaf_2.c:429:19: warning: use location
  429 |         proc.argv = (const char **)argv + 3;
      |                   ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c79b1fbd0
    type <integer_type 0x7f1c79b2c5e8 int public SI
        size <integer_cst 0x7f1c79b17df8 constant 32>
        unit-size <integer_cst 0x7f1c79b17e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c5e8 precision:32 min <integer_cst 0x7f1c79b17db0 -2147483648> max <integer_cst 0x7f1c79b17dc8 2147483647>
        pointer_to_this <pointer_type 0x7f1c79b339d8>>
   
    def_stmt _22 = run_processes_parallel (_47, no_job, 0B, task_finished, &proc);
    version:22>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c79b1f630
    type <pointer_type 0x7f1c79636b28
        type <integer_type 0x7f1c796367e0 char public QI
            size <integer_cst 0x7f1c79b17ca8 constant 8>
            unit-size <integer_cst 0x7f1c79b17cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c3f0 precision:8 min <integer_cst 0x7f1c79626888 -128> max <integer_cst 0x7f1c79626870 127>
            pointer_to_this <pointer_type 0x7f1c79636b28>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7f1c79638690>>
   
    def_stmt _2 = MEM[(char * *)argv_31(D) + 8B];
    version:2
    ptr-info 0x7f1c7964ce88>
# VUSE <.MEM_53>
_2 = MEM[(char * *)argv_31(D) + 8B];

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_53>
_3 = strcmp (_2, "start-command-ENOENT");
_3 = strcmp (_2, "start-command-ENOENT");
./benchmarks/git/use_after_free_2/git_uaf_2.c:419:14: warning: use location
  419 |         if (!strcmp(argv[1], "start-command-ENOENT")) {
      |              ^
this stmt call this function :strcmp
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:0 
if (_3 == 0)
./benchmarks/git/use_after_free_2/git_uaf_2.c:419:12: warning: use location
  419 |         if (!strcmp(argv[1], "start-command-ENOENT")) {
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c79b1f630
    type <pointer_type 0x7f1c79636b28
        type <integer_type 0x7f1c796367e0 char public QI
            size <integer_cst 0x7f1c79b17ca8 constant 8>
            unit-size <integer_cst 0x7f1c79b17cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c3f0 precision:8 min <integer_cst 0x7f1c79626888 -128> max <integer_cst 0x7f1c79626870 127>
            pointer_to_this <pointer_type 0x7f1c79636b28>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7f1c79638690>>
   
    def_stmt _2 = MEM[(char * *)argv_31(D) + 8B];
    version:2
    ptr-info 0x7f1c7964ce88>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c79b1f7e0
    type <pointer_type 0x7f1c79636e70
        type <record_type 0x7f1c79636dc8 FILE BLK
            size <integer_cst 0x7f1c79bec0a8 constant 1728>
            unit-size <integer_cst 0x7f1c79626900 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79636d20 fields <field_decl 0x7f1c79637260 _flags> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c79636e70>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f1c79640f18>>
   
    def_stmt _8 = stderr;
    version:8
    ptr-info 0x7f1c7964ced0>
# VUSE <.MEM_65>
_8 = stderr;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_66 = VDEF <.MEM_65>
fprintf (_8, "FAIL %s\n", _7);
fprintf (_8, "FAIL %s\n", _7);
./benchmarks/git/use_after_free_2/git_uaf_2.c:422:17: warning: use location
  422 |                 fprintf(stderr, "FAIL %s\n", argv[1]);
      |                 ^
this stmt call this function :fprintf
trace fucntion name:fprintf 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_66 = VDEF <.MEM_65>
fprintf (_8, "FAIL %s\n", _7);
fprintf (_8, "FAIL %s\n", _7);
./benchmarks/git/use_after_free_2/git_uaf_2.c:422:17: warning: use location
this stmt call this function :fprintf
trace fucntion name:fprintf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c79b1f7e0
    type <pointer_type 0x7f1c79636e70
        type <record_type 0x7f1c79636dc8 FILE BLK
            size <integer_cst 0x7f1c79bec0a8 constant 1728>
            unit-size <integer_cst 0x7f1c79626900 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79636d20 fields <field_decl 0x7f1c79637260 _flags> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c79636e70>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f1c79640f18>>
   
    def_stmt _8 = stderr;
    version:8
    ptr-info 0x7f1c7964ced0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c79b1f798
    type <pointer_type 0x7f1c79636b28
        type <integer_type 0x7f1c796367e0 char public QI
            size <integer_cst 0x7f1c79b17ca8 constant 8>
            unit-size <integer_cst 0x7f1c79b17cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c3f0 precision:8 min <integer_cst 0x7f1c79626888 -128> max <integer_cst 0x7f1c79626870 127>
            pointer_to_this <pointer_type 0x7f1c79636b28>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7f1c79638690>>
   
    def_stmt _7 = MEM[(char * *)argv_31(D) + 8B];
    version:7
    ptr-info 0x7f1c7964ceb8>
# VUSE <.MEM_65>
_7 = MEM[(char * *)argv_31(D) + 8B];

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_66 = VDEF <.MEM_65>
fprintf (_8, "FAIL %s\n", _7);
fprintf (_8, "FAIL %s\n", _7);
./benchmarks/git/use_after_free_2/git_uaf_2.c:422:17: warning: use location
this stmt call this function :fprintf
trace fucntion name:fprintf 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_66 = VDEF <.MEM_65>
fprintf (_8, "FAIL %s\n", _7);
fprintf (_8, "FAIL %s\n", _7);
./benchmarks/git/use_after_free_2/git_uaf_2.c:422:17: warning: use location
this stmt call this function :fprintf
trace fucntion name:fprintf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c79b1f798
    type <pointer_type 0x7f1c79636b28
        type <integer_type 0x7f1c796367e0 char public QI
            size <integer_cst 0x7f1c79b17ca8 constant 8>
            unit-size <integer_cst 0x7f1c79b17cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c3f0 precision:8 min <integer_cst 0x7f1c79626888 -128> max <integer_cst 0x7f1c79626870 127>
            pointer_to_this <pointer_type 0x7f1c79636b28>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7f1c79638690>>
   
    def_stmt _7 = MEM[(char * *)argv_31(D) + 8B];
    version:7
    ptr-info 0x7f1c7964ceb8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c79b1f828
    type <pointer_type 0x7f1c79636b28
        type <integer_type 0x7f1c796367e0 char public QI
            size <integer_cst 0x7f1c79b17ca8 constant 8>
            unit-size <integer_cst 0x7f1c79b17cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c3f0 precision:8 min <integer_cst 0x7f1c79626888 -128> max <integer_cst 0x7f1c79626870 127>
            pointer_to_this <pointer_type 0x7f1c79636b28>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7f1c79638690>>
   
    def_stmt _9 = MEM[(char * *)argv_31(D) + 8B];
    version:9
    ptr-info 0x7f1c7964cee8>
# VUSE <.MEM_53>
_9 = MEM[(char * *)argv_31(D) + 8B];

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_53>
_10 = strcmp (_9, "run-command");
_10 = strcmp (_9, "run-command");
./benchmarks/git/use_after_free_2/git_uaf_2.c:425:14: warning: use location
  425 |         if (!strcmp(argv[1], "run-command"))
      |              ^
this stmt call this function :strcmp
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:0 
if (_10 == 0)
./benchmarks/git/use_after_free_2/git_uaf_2.c:425:12: warning: use location
  425 |         if (!strcmp(argv[1], "run-command"))
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c79b1f828
    type <pointer_type 0x7f1c79636b28
        type <integer_type 0x7f1c796367e0 char public QI
            size <integer_cst 0x7f1c79b17ca8 constant 8>
            unit-size <integer_cst 0x7f1c79b17cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c3f0 precision:8 min <integer_cst 0x7f1c79626888 -128> max <integer_cst 0x7f1c79626870 127>
            pointer_to_this <pointer_type 0x7f1c79636b28>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7f1c79638690>>
   
    def_stmt _9 = MEM[(char * *)argv_31(D) + 8B];
    version:9
    ptr-info 0x7f1c7964cee8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c79b1f900
    type <pointer_type 0x7f1c79636b28
        type <integer_type 0x7f1c796367e0 char public QI
            size <integer_cst 0x7f1c79b17ca8 constant 8>
            unit-size <integer_cst 0x7f1c79b17cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c3f0 precision:8 min <integer_cst 0x7f1c79626888 -128> max <integer_cst 0x7f1c79626870 127>
            pointer_to_this <pointer_type 0x7f1c79636b28>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7f1c79638690>>
   
    def_stmt _12 = MEM[(char * *)argv_31(D) + 16B];
    version:12
    ptr-info 0x7f1c7964cf00>
# VUSE <.MEM_53>
_12 = MEM[(char * *)argv_31(D) + 16B];

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_54 = VDEF <.MEM_53>
_46 = strtol (_12, 0B, 10);
_46 = strtol (_12, 0B, 10);
this stmt call this function :strtol
trace fucntion name:strtol 

 ================== trace ================== 
trace fucntion free:0 
_47 = (int) _46;
_22 = run_processes_parallel (_47, no_job, 0B, task_finished, &proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:440:17: warning: use location
  440 |                 exit(run_processes_parallel(jobs, no_job,
      |                 ^
this stmt call this function :run_processes_parallel
trace fucntion name:run_processes_parallel 
[40;44m =======trace_function_path run_processes_parallel  function_call count: 17 level :0========  [0m
[40;42m =======pre add _ fucntion:pp_cleanup========= [0m
[40;46m =======add node_fun stack:pp_cleanup========= [0m
[40;42m =======pre add _ fucntion:kill_children========= [0m
[40;46m =======add node_fun stack:kill_children========= [0m
[40;44m =======trace_function_path kill_children  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:kill_children========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:kill========= [0m
[40;46m =======add node_fun stack:kill========= [0m
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:fputs========= [0m
[40;46m =======add node_fun stack:fputs========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;46m =======add node_fun stack:wait_or_whine========= [0m
[40;42m =======pre add _ fucntion:pp_output========= [0m
[40;46m =======add node_fun stack:pp_output========= [0m
[40;42m =======pre add _ fucntion:pp_buffer_stderr========= [0m
[40;46m =======add node_fun stack:pp_buffer_stderr========= [0m
[40;42m =======pre add _ fucntion:start_command========= [0m
[40;46m =======add node_fun stack:start_command========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;46m =======add node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;46m =======add node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;46m =======add node_fun stack:online_cpus========= [0m

 ================== trace ================== 
trace fucntion free:0 
exit (_22);
./benchmarks/git/use_after_free_2/git_uaf_2.c:440:17: warning: use location
this stmt call this function :exit
trace fucntion name:exit 

 ================== trace ================== 
trace fucntion free:0 
_19 = run_processes_parallel (_47, parallel_next, 0B, task_finished, &proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:436:17: warning: use location
  436 |                 exit(run_processes_parallel(jobs, parallel_next,
      |                 ^
this stmt call this function :run_processes_parallel
trace fucntion name:run_processes_parallel 
[40;44m =======trace_function_path run_processes_parallel  function_call count: 17 level :0========  [0m
[40;42m =======pre add _ fucntion:pp_cleanup========= [0m
[40;46m =======add node_fun stack:pp_cleanup========= [0m
[40;42m =======pre add _ fucntion:kill_children========= [0m
[40;46m =======add node_fun stack:kill_children========= [0m
[40;44m =======trace_function_path kill_children  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:kill_children========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:kill========= [0m
[40;46m =======add node_fun stack:kill========= [0m
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:fputs========= [0m
[40;46m =======add node_fun stack:fputs========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;46m =======add node_fun stack:wait_or_whine========= [0m
[40;42m =======pre add _ fucntion:pp_output========= [0m
[40;46m =======add node_fun stack:pp_output========= [0m
[40;42m =======pre add _ fucntion:pp_buffer_stderr========= [0m
[40;46m =======add node_fun stack:pp_buffer_stderr========= [0m
[40;42m =======pre add _ fucntion:start_command========= [0m
[40;46m =======add node_fun stack:start_command========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;46m =======add node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;46m =======add node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;46m =======add node_fun stack:online_cpus========= [0m

 ================== trace ================== 
trace fucntion free:0 
exit (_19);
./benchmarks/git/use_after_free_2/git_uaf_2.c:436:17: warning: use location
this stmt call this function :exit
trace fucntion name:exit 

 ================== trace ================== 
trace fucntion free:0 
_16 = run_processes_parallel (_47, parallel_next, 0B, 0B, &proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:432:17: warning: use location
  432 |                 exit(run_processes_parallel(jobs, parallel_next,
      |                 ^
this stmt call this function :run_processes_parallel
trace fucntion name:run_processes_parallel 
[40;44m =======trace_function_path run_processes_parallel  function_call count: 17 level :0========  [0m
[40;42m =======pre add _ fucntion:pp_cleanup========= [0m
[40;46m =======add node_fun stack:pp_cleanup========= [0m
[40;42m =======pre add _ fucntion:kill_children========= [0m
[40;46m =======add node_fun stack:kill_children========= [0m
[40;44m =======trace_function_path kill_children  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:kill_children========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:kill========= [0m
[40;46m =======add node_fun stack:kill========= [0m
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:fputs========= [0m
[40;46m =======add node_fun stack:fputs========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;46m =======add node_fun stack:wait_or_whine========= [0m
[40;42m =======pre add _ fucntion:pp_output========= [0m
[40;46m =======add node_fun stack:pp_output========= [0m
[40;42m =======pre add _ fucntion:pp_buffer_stderr========= [0m
[40;46m =======add node_fun stack:pp_buffer_stderr========= [0m
[40;42m =======pre add _ fucntion:start_command========= [0m
[40;46m =======add node_fun stack:start_command========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;46m =======add node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;46m =======add node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;46m =======add node_fun stack:online_cpus========= [0m

 ================== trace ================== 
trace fucntion free:0 
exit (_16);
./benchmarks/git/use_after_free_2/git_uaf_2.c:432:17: warning: use location
this stmt call this function :exit
trace fucntion name:exit 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c79b1f900
    type <pointer_type 0x7f1c79636b28
        type <integer_type 0x7f1c796367e0 char public QI
            size <integer_cst 0x7f1c79b17ca8 constant 8>
            unit-size <integer_cst 0x7f1c79b17cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c3f0 precision:8 min <integer_cst 0x7f1c79626888 -128> max <integer_cst 0x7f1c79626870 127>
            pointer_to_this <pointer_type 0x7f1c79636b28>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7f1c79638690>>
   
    def_stmt _12 = MEM[(char * *)argv_31(D) + 16B];
    version:12
    ptr-info 0x7f1c7964cf00>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c79b1f990
    type <pointer_type 0x7f1c79636b28
        type <integer_type 0x7f1c796367e0 char public QI
            size <integer_cst 0x7f1c79b17ca8 constant 8>
            unit-size <integer_cst 0x7f1c79b17cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c3f0 precision:8 min <integer_cst 0x7f1c79626888 -128> max <integer_cst 0x7f1c79626870 127>
            pointer_to_this <pointer_type 0x7f1c79636b28>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7f1c79638690>>
   
    def_stmt _14 = MEM[(char * *)argv_31(D) + 8B];
    version:14
    ptr-info 0x7f1c7964cf30>
# VUSE <.MEM_55>
_14 = MEM[(char * *)argv_31(D) + 8B];

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_55>
_15 = strcmp (_14, "run-command-parallel");
_15 = strcmp (_14, "run-command-parallel");
./benchmarks/git/use_after_free_2/git_uaf_2.c:431:14: warning: use location
  431 |         if (!strcmp(argv[1], "run-command-parallel"))
      |              ^
this stmt call this function :strcmp
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:0 
if (_15 == 0)
./benchmarks/git/use_after_free_2/git_uaf_2.c:431:12: warning: use location
  431 |         if (!strcmp(argv[1], "run-command-parallel"))
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c79b1f990
    type <pointer_type 0x7f1c79636b28
        type <integer_type 0x7f1c796367e0 char public QI
            size <integer_cst 0x7f1c79b17ca8 constant 8>
            unit-size <integer_cst 0x7f1c79b17cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c3f0 precision:8 min <integer_cst 0x7f1c79626888 -128> max <integer_cst 0x7f1c79626870 127>
            pointer_to_this <pointer_type 0x7f1c79636b28>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7f1c79638690>>
   
    def_stmt _14 = MEM[(char * *)argv_31(D) + 8B];
    version:14
    ptr-info 0x7f1c7964cf30>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c79b1fd80
    type <integer_type 0x7f1c79b2c5e8 int public SI
        size <integer_cst 0x7f1c79b17df8 constant 32>
        unit-size <integer_cst 0x7f1c79b17e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c5e8 precision:32 min <integer_cst 0x7f1c79b17db0 -2147483648> max <integer_cst 0x7f1c79b17dc8 2147483647>
        pointer_to_this <pointer_type 0x7f1c79b339d8>>
   
    def_stmt _47 = (int) _46;
    version:47>
_47 = (int) _46;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :run_processes_parallel
# .MEM_61 = VDEF <.MEM_55>
_16 = run_processes_parallel (_47, parallel_next, 0B, 0B, &proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:432:17: warning: use location
  432 |                 exit(run_processes_parallel(jobs, parallel_next,
      |                 ^
# .MEM_57 = VDEF <.MEM_55>
_22 = run_processes_parallel (_47, no_job, 0B, task_finished, &proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:440:17: warning: use location
  440 |                 exit(run_processes_parallel(jobs, no_job,
      |                 ^
exit (_22);
./benchmarks/git/use_after_free_2/git_uaf_2.c:440:17: warning: use location
this stmt call this function :exit
trace fucntion name:exit 

 ================== trace ================== 
trace fucntion free:0 

======================================================================

 Expand conflict 
 The same function may have multiple branches :run_processes_parallel
# .MEM_61 = VDEF <.MEM_55>
_16 = run_processes_parallel (_47, parallel_next, 0B, 0B, &proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:432:17: warning: use location
  432 |                 exit(run_processes_parallel(jobs, parallel_next,
      |                 ^
# .MEM_59 = VDEF <.MEM_55>
_19 = run_processes_parallel (_47, parallel_next, 0B, task_finished, &proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:436:17: warning: use location
  436 |                 exit(run_processes_parallel(jobs, parallel_next,
      |                 ^
exit (_19);
./benchmarks/git/use_after_free_2/git_uaf_2.c:436:17: warning: use location
this stmt call this function :exit
trace fucntion name:exit 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_61 = VDEF <.MEM_55>
_16 = run_processes_parallel (_47, parallel_next, 0B, 0B, &proc);
_16 = run_processes_parallel (_47, parallel_next, 0B, 0B, &proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:432:17: warning: use location
  432 |                 exit(run_processes_parallel(jobs, parallel_next,
      |                 ^
this stmt call this function :run_processes_parallel
trace fucntion name:run_processes_parallel 
[40;44m =======trace_function_path run_processes_parallel  function_call count: 17 level :0========  [0m
[40;42m =======pre add _ fucntion:pp_cleanup========= [0m
[40;46m =======add node_fun stack:pp_cleanup========= [0m
[40;42m =======pre add _ fucntion:kill_children========= [0m
[40;46m =======add node_fun stack:kill_children========= [0m
[40;44m =======trace_function_path kill_children  function_call count: 1 level :1========  [0m
[40;42m =======pre add _ fucntion:kill========= [0m
[40;46m =======add node_fun stack:kill========= [0m
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:fputs========= [0m
[40;46m =======add node_fun stack:fputs========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;46m =======add node_fun stack:wait_or_whine========= [0m
[40;42m =======pre add _ fucntion:pp_output========= [0m
[40;46m =======add node_fun stack:pp_output========= [0m
[40;42m =======pre add _ fucntion:pp_buffer_stderr========= [0m
[40;46m =======add node_fun stack:pp_buffer_stderr========= [0m
[40;42m =======pre add _ fucntion:start_command========= [0m
[40;46m =======add node_fun stack:start_command========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;46m =======add node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;46m =======add node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;46m =======add node_fun stack:online_cpus========= [0m

 ================== trace ================== 
trace fucntion free:0 
exit (_16);
./benchmarks/git/use_after_free_2/git_uaf_2.c:432:17: warning: use location
this stmt call this function :exit
trace fucntion name:exit 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c79b1fd80
    type <integer_type 0x7f1c79b2c5e8 int public SI
        size <integer_cst 0x7f1c79b17df8 constant 32>
        unit-size <integer_cst 0x7f1c79b17e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c5e8 precision:32 min <integer_cst 0x7f1c79b17db0 -2147483648> max <integer_cst 0x7f1c79b17dc8 2147483647>
        pointer_to_this <pointer_type 0x7f1c79b339d8>>
   
    def_stmt _47 = (int) _46;
    version:47>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c79b1fa68
    type <pointer_type 0x7f1c79636b28
        type <integer_type 0x7f1c796367e0 char public QI
            size <integer_cst 0x7f1c79b17ca8 constant 8>
            unit-size <integer_cst 0x7f1c79b17cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c3f0 precision:8 min <integer_cst 0x7f1c79626888 -128> max <integer_cst 0x7f1c79626870 127>
            pointer_to_this <pointer_type 0x7f1c79636b28>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7f1c79638690>>
   
    def_stmt _17 = MEM[(char * *)argv_31(D) + 8B];
    version:17
    ptr-info 0x7f1c7964cf48>
# VUSE <.MEM_55>
_17 = MEM[(char * *)argv_31(D) + 8B];

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_55>
_18 = strcmp (_17, "run-command-abort");
_18 = strcmp (_17, "run-command-abort");
./benchmarks/git/use_after_free_2/git_uaf_2.c:435:14: warning: use location
  435 |         if (!strcmp(argv[1], "run-command-abort"))
      |              ^
this stmt call this function :strcmp
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:0 
if (_18 == 0)
./benchmarks/git/use_after_free_2/git_uaf_2.c:435:12: warning: use location
  435 |         if (!strcmp(argv[1], "run-command-abort"))
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c79b1fa68
    type <pointer_type 0x7f1c79636b28
        type <integer_type 0x7f1c796367e0 char public QI
            size <integer_cst 0x7f1c79b17ca8 constant 8>
            unit-size <integer_cst 0x7f1c79b17cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c3f0 precision:8 min <integer_cst 0x7f1c79626888 -128> max <integer_cst 0x7f1c79626870 127>
            pointer_to_this <pointer_type 0x7f1c79636b28>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7f1c79638690>>
   
    def_stmt _17 = MEM[(char * *)argv_31(D) + 8B];
    version:17
    ptr-info 0x7f1c7964cf48>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c79b1fb40
    type <pointer_type 0x7f1c79636b28
        type <integer_type 0x7f1c796367e0 char public QI
            size <integer_cst 0x7f1c79b17ca8 constant 8>
            unit-size <integer_cst 0x7f1c79b17cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c3f0 precision:8 min <integer_cst 0x7f1c79626888 -128> max <integer_cst 0x7f1c79626870 127>
            pointer_to_this <pointer_type 0x7f1c79636b28>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7f1c79638690>>
   
    def_stmt _20 = MEM[(char * *)argv_31(D) + 8B];
    version:20
    ptr-info 0x7f1c7964cf60>
# VUSE <.MEM_55>
_20 = MEM[(char * *)argv_31(D) + 8B];

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_55>
_21 = strcmp (_20, "run-command-no-jobs");
_21 = strcmp (_20, "run-command-no-jobs");
./benchmarks/git/use_after_free_2/git_uaf_2.c:439:14: warning: use location
  439 |         if (!strcmp(argv[1], "run-command-no-jobs"))
      |              ^
this stmt call this function :strcmp
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:0 
if (_21 == 0)
./benchmarks/git/use_after_free_2/git_uaf_2.c:439:12: warning: use location
  439 |         if (!strcmp(argv[1], "run-command-no-jobs"))
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c79b1fb40
    type <pointer_type 0x7f1c79636b28
        type <integer_type 0x7f1c796367e0 char public QI
            size <integer_cst 0x7f1c79b17ca8 constant 8>
            unit-size <integer_cst 0x7f1c79b17cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c3f0 precision:8 min <integer_cst 0x7f1c79626888 -128> max <integer_cst 0x7f1c79626870 127>
            pointer_to_this <pointer_type 0x7f1c79636b28>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7f1c79638690>>
   
    def_stmt _20 = MEM[(char * *)argv_31(D) + 8B];
    version:20
    ptr-info 0x7f1c7964cf60>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c79b1fc18
    type <pointer_type 0x7f1c79636e70
        type <record_type 0x7f1c79636dc8 FILE BLK
            size <integer_cst 0x7f1c79bec0a8 constant 1728>
            unit-size <integer_cst 0x7f1c79626900 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79636d20 fields <field_decl 0x7f1c79637260 _flags> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c79636e70>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f1c79640f18>>
   
    def_stmt _23 = stderr;
    version:23
    ptr-info 0x7f1c7964cf78>
# VUSE <.MEM_55>
_23 = stderr;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_56 = VDEF <.MEM_55>
__builtin_fwrite ("check usage\n", 1, 12, _23);
__builtin_fwrite ("check usage\n", 1, 12, _23);
./benchmarks/git/use_after_free_2/git_uaf_2.c:443:9: warning: use location
  443 |         fprintf(stderr, "check usage\n");
      |         ^
this stmt call this function :__builtin_fwrite
trace fucntion name:__builtin_fwrite 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_56 = VDEF <.MEM_55>
__builtin_fwrite ("check usage\n", 1, 12, _23);
__builtin_fwrite ("check usage\n", 1, 12, _23);
./benchmarks/git/use_after_free_2/git_uaf_2.c:443:9: warning: use location
this stmt call this function :__builtin_fwrite
trace fucntion name:__builtin_fwrite 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c79b1fc18
    type <pointer_type 0x7f1c79636e70
        type <record_type 0x7f1c79636dc8 FILE BLK
            size <integer_cst 0x7f1c79bec0a8 constant 1728>
            unit-size <integer_cst 0x7f1c79626900 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79636d20 fields <field_decl 0x7f1c79637260 _flags> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c79636e70>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f1c79640f18>>
   
    def_stmt _23 = stderr;
    version:23
    ptr-info 0x7f1c7964cf78>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:main========= [0m
[40;44m =======node_fun:task_finished========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path task_finished  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:strbuf_addf========= [0m
[40;33m =======POP node_fun stack:strbuf_addf========= [0m
[40;42m =======pre_check_funciton:task_finished========= [0m
[40;42m =======start_check_funciton:task_finished========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f1c796573a8
    type <pointer_type 0x7f1c7963d930
        type <record_type 0x7f1c79638150 strbuf BLK
            size <integer_cst 0x7f1c79b35078 constant 192>
            unit-size <integer_cst 0x7f1c79b35048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79638150 fields <field_decl 0x7f1c79637428 alloc> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c7963d930>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c79646480 err>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f1c7964cfa8>
GIMPLE_NOP

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_4 = VDEF <.MEM_3(D)>
strbuf_addf (err_2(D), "asking for a quick stop\n");
strbuf_addf (err_2(D), "asking for a quick stop\n");
In function ‘task_finished’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:406:9: warning: use location
  406 |         strbuf_addf(err, "asking for a quick stop\n");
      |         ^
this stmt call this function :strbuf_addf
trace fucntion name:strbuf_addf 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_4 = VDEF <.MEM_3(D)>
strbuf_addf (err_2(D), "asking for a quick stop\n");
strbuf_addf (err_2(D), "asking for a quick stop\n");
./benchmarks/git/use_after_free_2/git_uaf_2.c:406:9: warning: use location
this stmt call this function :strbuf_addf
trace fucntion name:strbuf_addf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c796573a8
    type <pointer_type 0x7f1c7963d930
        type <record_type 0x7f1c79638150 strbuf BLK
            size <integer_cst 0x7f1c79b35078 constant 192>
            unit-size <integer_cst 0x7f1c79b35048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79638150 fields <field_decl 0x7f1c79637428 alloc> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c7963d930>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c79646480 err>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f1c7964cfa8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:task_finished========= [0m
[40;44m =======node_fun:no_job========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path no_job  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:strbuf_addf========= [0m
[40;33m =======POP node_fun stack:strbuf_addf========= [0m
[40;42m =======pre_check_funciton:no_job========= [0m
[40;42m =======start_check_funciton:no_job========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f1c796574c8
    type <pointer_type 0x7f1c7963d930
        type <record_type 0x7f1c79638150 strbuf BLK
            size <integer_cst 0x7f1c79b35078 constant 192>
            unit-size <integer_cst 0x7f1c79b35048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79638150 fields <field_decl 0x7f1c79637428 alloc> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c7963d930>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c79646680 err>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f1c7964cfc0>
GIMPLE_NOP

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_4 = VDEF <.MEM_3(D)>
strbuf_addf (err_2(D), "no further jobs available\n");
strbuf_addf (err_2(D), "no further jobs available\n");
In function ‘no_job’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:396:9: warning: use location
  396 |         strbuf_addf(err, "no further jobs available\n");
      |         ^
this stmt call this function :strbuf_addf
trace fucntion name:strbuf_addf 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_4 = VDEF <.MEM_3(D)>
strbuf_addf (err_2(D), "no further jobs available\n");
strbuf_addf (err_2(D), "no further jobs available\n");
./benchmarks/git/use_after_free_2/git_uaf_2.c:396:9: warning: use location
this stmt call this function :strbuf_addf
trace fucntion name:strbuf_addf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c796574c8
    type <pointer_type 0x7f1c7963d930
        type <record_type 0x7f1c79638150 strbuf BLK
            size <integer_cst 0x7f1c79b35078 constant 192>
            unit-size <integer_cst 0x7f1c79b35048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79638150 fields <field_decl 0x7f1c79637428 alloc> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c7963d930>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c79646680 err>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f1c7964cfc0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:no_job========= [0m
[40;44m =======node_fun:parallel_next========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path parallel_next  function_call count: 2 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:strbuf_addf========= [0m
[40;33m =======POP node_fun stack:strbuf_addf========= [0m
[40;42m =======pre add _ fucntion:argv_array_pushv========= [0m
[40;33m =======POP node_fun stack:argv_array_pushv========= [0m
[40;42m =======pre_check_funciton:parallel_next========= [0m
[40;42m =======start_check_funciton:parallel_next========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f1c79657678
    type <pointer_type 0x7f1c79641150
        type <record_type 0x7f1c7963d738 argv_array TI
            size <integer_cst 0x7f1c79b17c00 constant 128>
            unit-size <integer_cst 0x7f1c79b17c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c7963d738 fields <field_decl 0x7f1c79637d10 argv> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c79641150>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _3 = &cp_10(D)->args;
    version:3
    ptr-info 0x7f1c7964c018>
_3 = &cp_10(D)->args;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_15 = VDEF <.MEM_14(D)>
argv_array_pushv (_3, _2);
argv_array_pushv (_3, _2);
In function ‘parallel_next’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:385:9: warning: use location
  385 |         argv_array_pushv(&cp->args, d->argv);
      |         ^
this stmt call this function :argv_array_pushv
trace fucntion name:argv_array_pushv 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_15 = VDEF <.MEM_14(D)>
argv_array_pushv (_3, _2);
argv_array_pushv (_3, _2);
./benchmarks/git/use_after_free_2/git_uaf_2.c:385:9: warning: use location
this stmt call this function :argv_array_pushv
trace fucntion name:argv_array_pushv 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c79657678
    type <pointer_type 0x7f1c79641150
        type <record_type 0x7f1c7963d738 argv_array TI
            size <integer_cst 0x7f1c79b17c00 constant 128>
            unit-size <integer_cst 0x7f1c79b17c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c7963d738 fields <field_decl 0x7f1c79637d10 argv> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c79641150>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _3 = &cp_10(D)->args;
    version:3
    ptr-info 0x7f1c7964c018>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c79657630
    type <pointer_type 0x7f1c7963d690
        type <pointer_type 0x7f1c79638888 type <integer_type 0x7f1c796387e0 char>
            public unsigned DI
            size <integer_cst 0x7f1c79b17bb8 constant 64>
            unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f1c7963d690>>
        public unsigned DI size <integer_cst 0x7f1c79b17bb8 64> unit-size <integer_cst 0x7f1c79b17bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = MEM[(struct child_process *)cb_8(D)].argv;
    version:2
    ptr-info 0x7f1c7964cfd8>
# VUSE <.MEM_14(D)>
_2 = MEM[(struct child_process *)cb_8(D)].argv;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_15 = VDEF <.MEM_14(D)>
argv_array_pushv (_3, _2);
argv_array_pushv (_3, _2);
./benchmarks/git/use_after_free_2/git_uaf_2.c:385:9: warning: use location
this stmt call this function :argv_array_pushv
trace fucntion name:argv_array_pushv 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_15 = VDEF <.MEM_14(D)>
argv_array_pushv (_3, _2);
argv_array_pushv (_3, _2);
./benchmarks/git/use_after_free_2/git_uaf_2.c:385:9: warning: use location
this stmt call this function :argv_array_pushv
trace fucntion name:argv_array_pushv 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c79657630
    type <pointer_type 0x7f1c7963d690
        type <pointer_type 0x7f1c79638888 type <integer_type 0x7f1c796387e0 char>
            public unsigned DI
            size <integer_cst 0x7f1c79b17bb8 constant 64>
            unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f1c7963d690>>
        public unsigned DI size <integer_cst 0x7f1c79b17bb8 64> unit-size <integer_cst 0x7f1c79b17bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = MEM[(struct child_process *)cb_8(D)].argv;
    version:2
    ptr-info 0x7f1c7964cfd8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c79657828
    type <pointer_type 0x7f1c7963d930
        type <record_type 0x7f1c79638150 strbuf BLK
            size <integer_cst 0x7f1c79b35078 constant 192>
            unit-size <integer_cst 0x7f1c79b35048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79638150 fields <field_decl 0x7f1c79637428 alloc> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c7963d930>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c79646880 err>
    def_stmt GIMPLE_NOP
    version:12
    ptr-info 0x7f1c7964c060>
GIMPLE_NOP

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_16 = VDEF <.MEM_15>
strbuf_addf (err_12(D), "preloaded output of a child\n");
strbuf_addf (err_12(D), "preloaded output of a child\n");
./benchmarks/git/use_after_free_2/git_uaf_2.c:386:9: warning: use location
  386 |         strbuf_addf(err, "preloaded output of a child\n");
      |         ^
this stmt call this function :strbuf_addf
trace fucntion name:strbuf_addf 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_16 = VDEF <.MEM_15>
strbuf_addf (err_12(D), "preloaded output of a child\n");
strbuf_addf (err_12(D), "preloaded output of a child\n");
./benchmarks/git/use_after_free_2/git_uaf_2.c:386:9: warning: use location
this stmt call this function :strbuf_addf
trace fucntion name:strbuf_addf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c79657828
    type <pointer_type 0x7f1c7963d930
        type <record_type 0x7f1c79638150 strbuf BLK
            size <integer_cst 0x7f1c79b35078 constant 192>
            unit-size <integer_cst 0x7f1c79b35048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79638150 fields <field_decl 0x7f1c79637428 alloc> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c7963d930>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c79646880 err>
    def_stmt GIMPLE_NOP
    version:12
    ptr-info 0x7f1c7964c060>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:parallel_next========= [0m
[40;44m =======node_fun:run_processes_parallel========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path run_processes_parallel  function_call count: 17 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:pp_cleanup========= [0m
[40;33m =======POP node_fun stack:pp_cleanup========= [0m
[40;42m =======pre add _ fucntion:kill_children========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path kill_children  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:kill========= [0m
[40;33m =======POP node_fun stack:kill========= [0m
[40;42m =======pre_check_funciton:kill_children========= [0m
[40;42m =======start_check_funciton:kill_children========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f1c7968ed80
    type <integer_type 0x7f1c79b2c5e8 int public SI
        size <integer_cst 0x7f1c79b17df8 constant 32>
        unit-size <integer_cst 0x7f1c79b17e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c5e8 precision:32 min <integer_cst 0x7f1c79b17db0 -2147483648> max <integer_cst 0x7f1c79b17dc8 2147483647>
        pointer_to_this <pointer_type 0x7f1c79b339d8>>
   
    def_stmt _10 = _9->process.pid;
    version:10>
# VUSE <.MEM_21>
_10 = _9->process.pid;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_23 = VDEF <.MEM_21>
kill (_10, signo_17(D));
kill (_10, signo_17(D));
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:259:25: warning: use location
  259 |                         kill(pp->children[i].process.pid, signo);
      |                         ^
this stmt call this function :kill
trace fucntion name:kill 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_23 = VDEF <.MEM_21>
kill (_10, signo_17(D));
kill (_10, signo_17(D));
./benchmarks/git/use_after_free_2/git_uaf_2.c:259:25: warning: use location
this stmt call this function :kill
trace fucntion name:kill 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c7968ed80
    type <integer_type 0x7f1c79b2c5e8 int public SI
        size <integer_cst 0x7f1c79b17df8 constant 32>
        unit-size <integer_cst 0x7f1c79b17e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c5e8 precision:32 min <integer_cst 0x7f1c79b17db0 -2147483648> max <integer_cst 0x7f1c79b17dc8 2147483647>
        pointer_to_this <pointer_type 0x7f1c79b339d8>>
   
    def_stmt _10 = _9->process.pid;
    version:10>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c7968eea0
    type <integer_type 0x7f1c79b2c5e8 int public SI
        size <integer_cst 0x7f1c79b17df8 constant 32>
        unit-size <integer_cst 0x7f1c79b17e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c5e8 precision:32 min <integer_cst 0x7f1c79b17db0 -2147483648> max <integer_cst 0x7f1c79b17dc8 2147483647>
        pointer_to_this <pointer_type 0x7f1c79b339d8>>
    var <parm_decl 0x7f1c79666300 signo>
    def_stmt GIMPLE_NOP
    version:17>
GIMPLE_NOP

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_23 = VDEF <.MEM_21>
kill (_10, signo_17(D));
kill (_10, signo_17(D));
./benchmarks/git/use_after_free_2/git_uaf_2.c:259:25: warning: use location
this stmt call this function :kill
trace fucntion name:kill 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_23 = VDEF <.MEM_21>
kill (_10, signo_17(D));
kill (_10, signo_17(D));
./benchmarks/git/use_after_free_2/git_uaf_2.c:259:25: warning: use location
this stmt call this function :kill
trace fucntion name:kill 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c7968eea0
    type <integer_type 0x7f1c79b2c5e8 int public SI
        size <integer_cst 0x7f1c79b17df8 constant 32>
        unit-size <integer_cst 0x7f1c79b17e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c5e8 precision:32 min <integer_cst 0x7f1c79b17db0 -2147483648> max <integer_cst 0x7f1c79b17dc8 2147483647>
        pointer_to_this <pointer_type 0x7f1c79b339d8>>
    var <parm_decl 0x7f1c79666300 signo>
    def_stmt GIMPLE_NOP
    version:17>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:kill_children========= [0m
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;33m =======POP node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:fputs========= [0m
[40;33m =======POP node_fun stack:fputs========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;33m =======POP node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;33m =======POP node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;33m =======POP node_fun stack:argv_array_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;33m =======POP node_fun stack:wait_or_whine========= [0m
[40;42m =======pre add _ fucntion:pp_output========= [0m
[40;33m =======POP node_fun stack:pp_output========= [0m
[40;42m =======pre add _ fucntion:pp_buffer_stderr========= [0m
[40;33m =======POP node_fun stack:pp_buffer_stderr========= [0m
[40;42m =======pre add _ fucntion:start_command========= [0m
[40;33m =======POP node_fun stack:start_command========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;33m =======POP node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;33m =======POP node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;33m =======POP node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;33m =======POP node_fun stack:online_cpus========= [0m
[40;42m =======pre_check_funciton:run_processes_parallel========= [0m
[40;42m =======start_check_funciton:run_processes_parallel========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f1c79661d80
    type <integer_type 0x7f1c79b2c5e8 int public SI
        size <integer_cst 0x7f1c79b17df8 constant 32>
        unit-size <integer_cst 0x7f1c79b17e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c5e8 precision:32 min <integer_cst 0x7f1c79b17db0 -2147483648> max <integer_cst 0x7f1c79b17dc8 2147483647>
        pointer_to_this <pointer_type 0x7f1c79b339d8>>
    var <var_decl 0x7f1c79660750 n>
    def_stmt n_47 = online_cpus ();
    version:47>
# .MEM_283 = VDEF <.MEM_35(D)>
n_47 = online_cpus ();

 ================== pre trace ptable ================== 
trace fucntion name:online_cpus 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function online_cpus
 
 Start check Pointer Collect  

======================================================================
n_48 = PHI <n_15(D)(2), n_47(3)>
lto1: warning: use location
this stmt have mutiple branch ---online_cpus-----
pp.max_processes = n_48;
./benchmarks/git/use_after_free_2/git_uaf_2.c:176:27: warning: use location
  176 |         pp->max_processes = n;
      |                           ^
pp_cleanup (&pp);
./benchmarks/git/use_after_free_2/git_uaf_2.c:371:9: warning: use location
  371 |         pp_cleanup(&pp);
      |         ^
this stmt call this function :pp_cleanup
trace fucntion name:pp_cleanup 

 ================== trace ================== 
trace fucntion free:0 
pp_cleanup (&pp);
./benchmarks/git/use_after_free_2/git_uaf_2.c:371:9: warning: use location
this stmt call this function :pp_cleanup
trace fucntion name:pp_cleanup 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (n_48 > i_57)
./benchmarks/git/use_after_free_2/git_uaf_2.c:195:23: warning: use location
  195 |         for (i = 0; i < n; i++) {
      |                       ^
_53 = (long unsigned int) n_48;
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:19: warning: use location
  192 |         pp->pfd = xcalloc(n, sizeof(*pp->pfd));
      |                   ^
_54 = calloc (_53, 8);
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:19: warning: use location
this stmt call this function :calloc
pp.pfd = _54;
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:17: warning: use location
  192 |         pp->pfd = xcalloc(n, sizeof(*pp->pfd));
      |                 ^
_51 = (long unsigned int) n_48;
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:24: warning: use location
  191 |         pp->children = xcalloc(n, sizeof(*pp->children));
      |                        ^
_52 = calloc (_51, 120);
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:24: warning: use location
this stmt call this function :calloc
pp.children = _52;
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:22: warning: use location
  191 |         pp->children = xcalloc(n, sizeof(*pp->children));
      |                      ^
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_48);
./benchmarks/git/use_after_free_2/git_uaf_2.c:178:9: warning: use location
  178 |         trace_printf("run_processes_parallel: preparing to run up to %d tasks", n);
      |         ^
this stmt call this function :trace_printf
trace fucntion name:trace_printf 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_283 = VDEF <.MEM_35(D)>
n_47 = online_cpus ();
n_47 = online_cpus ();
./benchmarks/git/use_after_free_2/git_uaf_2.c:174:21: warning: use location
  174 |                 n = online_cpus();
      |                     ^
this stmt call this function :online_cpus
trace fucntion name:online_cpus 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c79661d80
    type <integer_type 0x7f1c79b2c5e8 int public SI
        size <integer_cst 0x7f1c79b17df8 constant 32>
        unit-size <integer_cst 0x7f1c79b17e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c5e8 precision:32 min <integer_cst 0x7f1c79b17db0 -2147483648> max <integer_cst 0x7f1c79b17dc8 2147483647>
        pointer_to_this <pointer_type 0x7f1c79b339d8>>
    var <var_decl 0x7f1c79660750 n>
    def_stmt n_47 = online_cpus ();
    version:47>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c79661ee8
    type <pointer_type 0x7f1c79b33000
        type <void_type 0x7f1c79b2cf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f1c79b33000>>
        public unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f1c7962f690>>
   
    def_stmt _52 = calloc (_51, 120);
    version:52
    ptr-info 0x7f1c79626ed0>
# .MEM_293 = VDEF <.MEM_292>
_52 = calloc (_51, 120);

 ================== pre trace ptable ================== 
trace fucntion name:calloc 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Reserved word function :calloc
 
 Start check Pointer Collect  

======================================================================
# .MEM_293 = VDEF <.MEM_292>
_52 = calloc (_51, 120);
_52 = calloc (_51, 120);
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:24: warning: use location
  191 |         pp->children = xcalloc(n, sizeof(*pp->children));
      |                        ^
this stmt call this function :calloc
pp.children = _52;
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:22: warning: use location
  191 |         pp->children = xcalloc(n, sizeof(*pp->children));
      |                      ^
pp_cleanup (&pp);
./benchmarks/git/use_after_free_2/git_uaf_2.c:371:9: warning: use location
  371 |         pp_cleanup(&pp);
      |         ^
this stmt call this function :pp_cleanup
trace fucntion name:pp_cleanup 

 ================== trace ================== 
trace fucntion free:0 
pp_cleanup (&pp);
./benchmarks/git/use_after_free_2/git_uaf_2.c:371:9: warning: use location
this stmt call this function :pp_cleanup
trace fucntion name:pp_cleanup 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c79661ee8
    type <pointer_type 0x7f1c79b33000
        type <void_type 0x7f1c79b2cf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f1c79b33000>>
        public unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f1c7962f690>>
   
    def_stmt _52 = calloc (_51, 120);
    version:52
    ptr-info 0x7f1c79626ed0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c79661f78
    type <pointer_type 0x7f1c79b33000
        type <void_type 0x7f1c79b2cf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f1c79b33000>>
        public unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f1c7962f690>>
   
    def_stmt _54 = calloc (_53, 8);
    version:54
    ptr-info 0x7f1c79626ee8>
# .MEM_295 = VDEF <.MEM_294>
_54 = calloc (_53, 8);

 ================== pre trace ptable ================== 
trace fucntion name:calloc 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Reserved word function :calloc
 
 Start check Pointer Collect  

======================================================================
# .MEM_295 = VDEF <.MEM_294>
_54 = calloc (_53, 8);
_54 = calloc (_53, 8);
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:19: warning: use location
  192 |         pp->pfd = xcalloc(n, sizeof(*pp->pfd));
      |                   ^
this stmt call this function :calloc
pp.pfd = _54;
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:17: warning: use location
  192 |         pp->pfd = xcalloc(n, sizeof(*pp->pfd));
      |                 ^
pp_cleanup (&pp);
./benchmarks/git/use_after_free_2/git_uaf_2.c:371:9: warning: use location
  371 |         pp_cleanup(&pp);
      |         ^
this stmt call this function :pp_cleanup
trace fucntion name:pp_cleanup 

 ================== trace ================== 
trace fucntion free:0 
pp_cleanup (&pp);
./benchmarks/git/use_after_free_2/git_uaf_2.c:371:9: warning: use location
this stmt call this function :pp_cleanup
trace fucntion name:pp_cleanup 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c79661f78
    type <pointer_type 0x7f1c79b33000
        type <void_type 0x7f1c79b2cf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f1c79b33000>>
        public unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f1c7962f690>>
   
    def_stmt _54 = calloc (_53, 8);
    version:54
    ptr-info 0x7f1c79626ee8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c796752d0
    type <integer_type 0x7f1c79b2c5e8 int public SI
        size <integer_cst 0x7f1c79b17df8 constant 32>
        unit-size <integer_cst 0x7f1c79b17e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c5e8 precision:32 min <integer_cst 0x7f1c79b17db0 -2147483648> max <integer_cst 0x7f1c79b17dc8 2147483647>
        pointer_to_this <pointer_type 0x7f1c79b339d8>>
   
    def_stmt _131 = start_command (_130);
    version:131>
# .MEM_302 = VDEF <.MEM_301>
_131 = start_command (_130);

 ================== pre trace ptable ================== 
trace fucntion name:start_command 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function start_command
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_302 = VDEF <.MEM_301>
_131 = start_command (_130);
_131 = start_command (_130);
./benchmarks/git/use_after_free_2/git_uaf_2.c:235:13: warning: use location
  235 |         if (start_command(&pp->children[i].process)) {
      |             ^
this stmt call this function :start_command
trace fucntion name:start_command 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_131 != 0)
./benchmarks/git/use_after_free_2/git_uaf_2.c:235:12: warning: use location
  235 |         if (start_command(&pp->children[i].process)) {
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c796752d0
    type <integer_type 0x7f1c79b2c5e8 int public SI
        size <integer_cst 0x7f1c79b17df8 constant 32>
        unit-size <integer_cst 0x7f1c79b17e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c5e8 precision:32 min <integer_cst 0x7f1c79b17db0 -2147483648> max <integer_cst 0x7f1c79b17dc8 2147483647>
        pointer_to_this <pointer_type 0x7f1c79b339d8>>
   
    def_stmt _131 = start_command (_130);
    version:131>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c79687798
    type <integer_type 0x7f1c79b2c5e8 int public SI
        size <integer_cst 0x7f1c79b17df8 constant 32>
        unit-size <integer_cst 0x7f1c79b17e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c5e8 precision:32 min <integer_cst 0x7f1c79b17db0 -2147483648> max <integer_cst 0x7f1c79b17dc8 2147483647>
        pointer_to_this <pointer_type 0x7f1c79b339d8>>
    var <var_decl 0x7f1c79680cf0 ret>
    def_stmt ret_273 = wait_or_whine (_272, _271, 0);
    version:273>
# .MEM_315 = VDEF <.MEM_281>
ret_273 = wait_or_whine (_272, _271, 0);

 ================== pre trace ptable ================== 
trace fucntion name:wait_or_whine 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function wait_or_whine
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_315 = VDEF <.MEM_281>
ret_273 = wait_or_whine (_272, _271, 0);
ret_273 = wait_or_whine (_272, _271, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:15: warning: use location
  321 |     int ret = wait_or_whine(cmd->pid, cmd->argv[0], 0);
      |               ^
this stmt call this function :wait_or_whine
trace fucntion name:wait_or_whine 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_318 = ret_273;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
code_192 = _318;
./benchmarks/git/use_after_free_2/git_uaf_2.c:275:24: warning: use location
  275 |                 code = finish_command(&pp->children[i].process);
      |                        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c79687798
    type <integer_type 0x7f1c79b2c5e8 int public SI
        size <integer_cst 0x7f1c79b17df8 constant 32>
        unit-size <integer_cst 0x7f1c79b17e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c5e8 precision:32 min <integer_cst 0x7f1c79b17db0 -2147483648> max <integer_cst 0x7f1c79b17dc8 2147483647>
        pointer_to_this <pointer_type 0x7f1c79b339d8>>
    var <var_decl 0x7f1c79680cf0 ret>
    def_stmt ret_273 = wait_or_whine (_272, _271, 0);
    version:273>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c79661dc8
    type <integer_type 0x7f1c79b2c5e8 int public SI
        size <integer_cst 0x7f1c79b17df8 constant 32>
        unit-size <integer_cst 0x7f1c79b17e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c5e8 precision:32 min <integer_cst 0x7f1c79b17db0 -2147483648> max <integer_cst 0x7f1c79b17dc8 2147483647>
        pointer_to_this <pointer_type 0x7f1c79b339d8>>
    var <var_decl 0x7f1c79660750 n>
    def_stmt n_48 = PHI <n_15(D)(2), n_47(3)>
    version:48>
n_48 = PHI <n_15(D)(2), n_47(3)>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
pp.max_processes = n_48;
./benchmarks/git/use_after_free_2/git_uaf_2.c:176:27: warning: use location
  176 |         pp->max_processes = n;
      |                           ^
pp.max_processes = n_48;
./benchmarks/git/use_after_free_2/git_uaf_2.c:176:27: warning: use location
pp_cleanup (&pp);
./benchmarks/git/use_after_free_2/git_uaf_2.c:371:9: warning: use location
  371 |         pp_cleanup(&pp);
      |         ^
this stmt call this function :pp_cleanup
trace fucntion name:pp_cleanup 

 ================== trace ================== 
trace fucntion free:0 
pp_cleanup (&pp);
./benchmarks/git/use_after_free_2/git_uaf_2.c:371:9: warning: use location
this stmt call this function :pp_cleanup
trace fucntion name:pp_cleanup 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (n_48 > i_57)
./benchmarks/git/use_after_free_2/git_uaf_2.c:195:23: warning: use location
  195 |         for (i = 0; i < n; i++) {
      |                       ^
_53 = (long unsigned int) n_48;
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:19: warning: use location
  192 |         pp->pfd = xcalloc(n, sizeof(*pp->pfd));
      |                   ^
_54 = calloc (_53, 8);
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:19: warning: use location
this stmt call this function :calloc
pp.pfd = _54;
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:17: warning: use location
  192 |         pp->pfd = xcalloc(n, sizeof(*pp->pfd));
      |                 ^
_51 = (long unsigned int) n_48;
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:24: warning: use location
  191 |         pp->children = xcalloc(n, sizeof(*pp->children));
      |                        ^
_52 = calloc (_51, 120);
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:24: warning: use location
this stmt call this function :calloc
pp.children = _52;
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:22: warning: use location
  191 |         pp->children = xcalloc(n, sizeof(*pp->children));
      |                      ^
# .MEM_285 = VDEF <.MEM_284>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_48);
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_48);
./benchmarks/git/use_after_free_2/git_uaf_2.c:178:9: warning: use location
  178 |         trace_printf("run_processes_parallel: preparing to run up to %d tasks", n);
      |         ^
this stmt call this function :trace_printf
trace fucntion name:trace_printf 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_285 = VDEF <.MEM_284>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_48);
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_48);
./benchmarks/git/use_after_free_2/git_uaf_2.c:178:9: warning: use location
this stmt call this function :trace_printf
trace fucntion name:trace_printf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c79661dc8
    type <integer_type 0x7f1c79b2c5e8 int public SI
        size <integer_cst 0x7f1c79b17df8 constant 32>
        unit-size <integer_cst 0x7f1c79b17e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c5e8 precision:32 min <integer_cst 0x7f1c79b17db0 -2147483648> max <integer_cst 0x7f1c79b17dc8 2147483647>
        pointer_to_this <pointer_type 0x7f1c79b339d8>>
    var <var_decl 0x7f1c79660750 n>
    def_stmt n_48 = PHI <n_15(D)(2), n_47(3)>
    version:48>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c79661ea0
    type <integer_type 0x7f1c79b2c7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c738 precision:64 min <integer_cst 0x7f1c79b17e88 0> max <integer_cst 0x7f1c79b18500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f1c79b387e0>>
   
    def_stmt _51 = (long unsigned int) n_48;
    version:51>
_51 = (long unsigned int) n_48;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_293 = VDEF <.MEM_292>
_52 = calloc (_51, 120);
_52 = calloc (_51, 120);
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:24: warning: use location
  191 |         pp->children = xcalloc(n, sizeof(*pp->children));
      |                        ^
this stmt call this function :calloc
pp.children = _52;
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:22: warning: use location
  191 |         pp->children = xcalloc(n, sizeof(*pp->children));
      |                      ^
pp_cleanup (&pp);
./benchmarks/git/use_after_free_2/git_uaf_2.c:371:9: warning: use location
  371 |         pp_cleanup(&pp);
      |         ^
this stmt call this function :pp_cleanup
trace fucntion name:pp_cleanup 

 ================== trace ================== 
trace fucntion free:0 
pp_cleanup (&pp);
./benchmarks/git/use_after_free_2/git_uaf_2.c:371:9: warning: use location
this stmt call this function :pp_cleanup
trace fucntion name:pp_cleanup 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c79661ea0
    type <integer_type 0x7f1c79b2c7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c738 precision:64 min <integer_cst 0x7f1c79b17e88 0> max <integer_cst 0x7f1c79b18500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f1c79b387e0>>
   
    def_stmt _51 = (long unsigned int) n_48;
    version:51>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c79661f30
    type <integer_type 0x7f1c79b2c7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c738 precision:64 min <integer_cst 0x7f1c79b17e88 0> max <integer_cst 0x7f1c79b18500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f1c79b387e0>>
   
    def_stmt _53 = (long unsigned int) n_48;
    version:53>
_53 = (long unsigned int) n_48;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_295 = VDEF <.MEM_294>
_54 = calloc (_53, 8);
_54 = calloc (_53, 8);
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:19: warning: use location
  192 |         pp->pfd = xcalloc(n, sizeof(*pp->pfd));
      |                   ^
this stmt call this function :calloc
pp.pfd = _54;
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:17: warning: use location
  192 |         pp->pfd = xcalloc(n, sizeof(*pp->pfd));
      |                 ^
pp_cleanup (&pp);
./benchmarks/git/use_after_free_2/git_uaf_2.c:371:9: warning: use location
  371 |         pp_cleanup(&pp);
      |         ^
this stmt call this function :pp_cleanup
trace fucntion name:pp_cleanup 

 ================== trace ================== 
trace fucntion free:0 
pp_cleanup (&pp);
./benchmarks/git/use_after_free_2/git_uaf_2.c:371:9: warning: use location
this stmt call this function :pp_cleanup
trace fucntion name:pp_cleanup 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c79661f30
    type <integer_type 0x7f1c79b2c7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c738 precision:64 min <integer_cst 0x7f1c79b17e88 0> max <integer_cst 0x7f1c79b18500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f1c79b387e0>>
   
    def_stmt _53 = (long unsigned int) n_48;
    version:53>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c79669000
    type <pointer_type 0x7f1c7963d930
        type <record_type 0x7f1c79638150 strbuf BLK
            size <integer_cst 0x7f1c79b35078 constant 192>
            unit-size <integer_cst 0x7f1c79b35048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79638150 fields <field_decl 0x7f1c79637428 alloc> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c7963d930>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _55 = &pp.buffered_output;
    version:55
    ptr-info 0x7f1c79626f00>
_55 = &pp.buffered_output;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_297 = VDEF <.MEM_296>
strbuf_init (_55, 0);
strbuf_init (_55, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: use location
  193 |         strbuf_init(&pp->buffered_output, 0);
      |         ^
this stmt call this function :strbuf_init
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_297 = VDEF <.MEM_296>
strbuf_init (_55, 0);
strbuf_init (_55, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: use location
this stmt call this function :strbuf_init
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c79669000
    type <pointer_type 0x7f1c7963d930
        type <record_type 0x7f1c79638150 strbuf BLK
            size <integer_cst 0x7f1c79b35078 constant 192>
            unit-size <integer_cst 0x7f1c79b35048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79638150 fields <field_decl 0x7f1c79637428 alloc> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c7963d930>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _55 = &pp.buffered_output;
    version:55
    ptr-info 0x7f1c79626f00>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c796691b0
    type <pointer_type 0x7f1c7963d930
        type <record_type 0x7f1c79638150 strbuf BLK
            size <integer_cst 0x7f1c79b35078 constant 192>
            unit-size <integer_cst 0x7f1c79b35048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79638150 fields <field_decl 0x7f1c79637428 alloc> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c7963d930>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _61 = &_60->err;
    version:61
    ptr-info 0x7f1c79626f48>
_61 = &_60->err;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_332 = VDEF <.MEM_277>
strbuf_init (_61, 0);
strbuf_init (_61, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                 ^
this stmt call this function :strbuf_init
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_332 = VDEF <.MEM_277>
strbuf_init (_61, 0);
strbuf_init (_61, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
this stmt call this function :strbuf_init
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c796691b0
    type <pointer_type 0x7f1c7963d930
        type <record_type 0x7f1c79638150 strbuf BLK
            size <integer_cst 0x7f1c79b35078 constant 192>
            unit-size <integer_cst 0x7f1c79b35048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79638150 fields <field_decl 0x7f1c79637428 alloc> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c7963d930>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _61 = &_60->err;
    version:61
    ptr-info 0x7f1c79626f48>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c79669318
    type <pointer_type 0x7f1c7963d888
        type <record_type 0x7f1c7963d7e0 child_process BLK
            size <integer_cst 0x7f1c796269c0 constant 640>
            unit-size <integer_cst 0x7f1c796268d0 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c7963d7e0 fields <field_decl 0x7f1c7963f850 argv> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c7963d888>>
        public unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _66 = &_65->process;
    version:66
    ptr-info 0x7f1c79626f90>
_66 = &_65->process;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_333 = VDEF <.MEM_332>
child_process_init (_66);
child_process_init (_66);
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                 ^
this stmt call this function :child_process_init
trace fucntion name:child_process_init 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_333 = VDEF <.MEM_332>
child_process_init (_66);
child_process_init (_66);
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
this stmt call this function :child_process_init
trace fucntion name:child_process_init 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c79669318
    type <pointer_type 0x7f1c7963d888
        type <record_type 0x7f1c7963d7e0 child_process BLK
            size <integer_cst 0x7f1c796269c0 constant 640>
            unit-size <integer_cst 0x7f1c796268d0 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c7963d7e0 fields <field_decl 0x7f1c7963f850 argv> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c7963d888>>
        public unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _66 = &_65->process;
    version:66
    ptr-info 0x7f1c79626f90>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c7966dc18
    type <pointer_type 0x7f1c7963d930
        type <record_type 0x7f1c79638150 strbuf BLK
            size <integer_cst 0x7f1c79b35078 constant 192>
            unit-size <integer_cst 0x7f1c79b35048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79638150 fields <field_decl 0x7f1c79637428 alloc> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c7963d930>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _108 = &pp.buffered_output;
    version:108
    ptr-info 0x7f1c796951e0>
_108 = &pp.buffered_output;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_310 = VDEF <.MEM_298>
strbuf_addbuf (_108, _107);
strbuf_addbuf (_108, _107);
./benchmarks/git/use_after_free_2/git_uaf_2.c:227:17: warning: use location
  227 |                 strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);
      |                 ^
this stmt call this function :strbuf_addbuf
trace fucntion name:strbuf_addbuf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_310 = VDEF <.MEM_298>
strbuf_addbuf (_108, _107);
strbuf_addbuf (_108, _107);
./benchmarks/git/use_after_free_2/git_uaf_2.c:227:17: warning: use location
this stmt call this function :strbuf_addbuf
trace fucntion name:strbuf_addbuf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c7966dc18
    type <pointer_type 0x7f1c7963d930
        type <record_type 0x7f1c79638150 strbuf BLK
            size <integer_cst 0x7f1c79b35078 constant 192>
            unit-size <integer_cst 0x7f1c79b35048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79638150 fields <field_decl 0x7f1c79637428 alloc> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c7963d930>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _108 = &pp.buffered_output;
    version:108
    ptr-info 0x7f1c796951e0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c7966dbd0
    type <pointer_type 0x7f1c7963d930
        type <record_type 0x7f1c79638150 strbuf BLK
            size <integer_cst 0x7f1c79b35078 constant 192>
            unit-size <integer_cst 0x7f1c79b35048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79638150 fields <field_decl 0x7f1c79637428 alloc> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c7963d930>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _107 = &_106->err;
    version:107
    ptr-info 0x7f1c796951c8>
_107 = &_106->err;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_310 = VDEF <.MEM_298>
strbuf_addbuf (_108, _107);
strbuf_addbuf (_108, _107);
./benchmarks/git/use_after_free_2/git_uaf_2.c:227:17: warning: use location
this stmt call this function :strbuf_addbuf
trace fucntion name:strbuf_addbuf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_310 = VDEF <.MEM_298>
strbuf_addbuf (_108, _107);
strbuf_addbuf (_108, _107);
./benchmarks/git/use_after_free_2/git_uaf_2.c:227:17: warning: use location
this stmt call this function :strbuf_addbuf
trace fucntion name:strbuf_addbuf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c7966dbd0
    type <pointer_type 0x7f1c7963d930
        type <record_type 0x7f1c79638150 strbuf BLK
            size <integer_cst 0x7f1c79b35078 constant 192>
            unit-size <integer_cst 0x7f1c79b35048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79638150 fields <field_decl 0x7f1c79637428 alloc> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c7963d930>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _107 = &_106->err;
    version:107
    ptr-info 0x7f1c796951c8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c7966dd80
    type <pointer_type 0x7f1c7963d930
        type <record_type 0x7f1c79638150 strbuf BLK
            size <integer_cst 0x7f1c79b35078 constant 192>
            unit-size <integer_cst 0x7f1c79b35048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79638150 fields <field_decl 0x7f1c79637428 alloc> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c7963d930>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _113 = &_112->err;
    version:113
    ptr-info 0x7f1c79695228>
_113 = &_112->err;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_311 = VDEF <.MEM_310>
strbuf_reset (_113);
strbuf_reset (_113);
./benchmarks/git/use_after_free_2/git_uaf_2.c:228:17: warning: use location
  228 |                 strbuf_reset(&pp->children[i].err);
      |                 ^
this stmt call this function :strbuf_reset
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_311 = VDEF <.MEM_310>
strbuf_reset (_113);
strbuf_reset (_113);
./benchmarks/git/use_after_free_2/git_uaf_2.c:228:17: warning: use location
this stmt call this function :strbuf_reset
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c7966dd80
    type <pointer_type 0x7f1c7963d930
        type <record_type 0x7f1c79638150 strbuf BLK
            size <integer_cst 0x7f1c79b35078 constant 192>
            unit-size <integer_cst 0x7f1c79b35048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79638150 fields <field_decl 0x7f1c79637428 alloc> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c7963d930>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _113 = &_112->err;
    version:113
    ptr-info 0x7f1c79695228>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c79675288
    type <pointer_type 0x7f1c7963d888
        type <record_type 0x7f1c7963d7e0 child_process BLK
            size <integer_cst 0x7f1c796269c0 constant 640>
            unit-size <integer_cst 0x7f1c796268d0 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c7963d7e0 fields <field_decl 0x7f1c7963f850 argv> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c7963d888>>
        public unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _130 = &_129->process;
    version:130
    ptr-info 0x7f1c79695300>
_130 = &_129->process;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_302 = VDEF <.MEM_301>
_131 = start_command (_130);
_131 = start_command (_130);
./benchmarks/git/use_after_free_2/git_uaf_2.c:235:13: warning: use location
  235 |         if (start_command(&pp->children[i].process)) {
      |             ^
this stmt call this function :start_command
trace fucntion name:start_command 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_131 != 0)
./benchmarks/git/use_after_free_2/git_uaf_2.c:235:12: warning: use location
  235 |         if (start_command(&pp->children[i].process)) {
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c79675288
    type <pointer_type 0x7f1c7963d888
        type <record_type 0x7f1c7963d7e0 child_process BLK
            size <integer_cst 0x7f1c796269c0 constant 640>
            unit-size <integer_cst 0x7f1c796268d0 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c7963d7e0 fields <field_decl 0x7f1c7963f850 argv> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c7963d888>>
        public unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _130 = &_129->process;
    version:130
    ptr-info 0x7f1c79695300>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c79675990
    type <pointer_type 0x7f1c7963d930
        type <record_type 0x7f1c79638150 strbuf BLK
            size <integer_cst 0x7f1c79b35078 constant 192>
            unit-size <integer_cst 0x7f1c79b35048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79638150 fields <field_decl 0x7f1c79637428 alloc> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c7963d930>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _155 = &pp.buffered_output;
    version:155
    ptr-info 0x7f1c79695468>
_155 = &pp.buffered_output;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_307 = VDEF <.MEM_306>
strbuf_addbuf (_155, _154);
strbuf_addbuf (_155, _154);
./benchmarks/git/use_after_free_2/git_uaf_2.c:240:17: warning: use location
  240 |                 strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);
      |                 ^
this stmt call this function :strbuf_addbuf
trace fucntion name:strbuf_addbuf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_307 = VDEF <.MEM_306>
strbuf_addbuf (_155, _154);
strbuf_addbuf (_155, _154);
./benchmarks/git/use_after_free_2/git_uaf_2.c:240:17: warning: use location
this stmt call this function :strbuf_addbuf
trace fucntion name:strbuf_addbuf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c79675990
    type <pointer_type 0x7f1c7963d930
        type <record_type 0x7f1c79638150 strbuf BLK
            size <integer_cst 0x7f1c79b35078 constant 192>
            unit-size <integer_cst 0x7f1c79b35048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79638150 fields <field_decl 0x7f1c79637428 alloc> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c7963d930>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _155 = &pp.buffered_output;
    version:155
    ptr-info 0x7f1c79695468>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c79675948
    type <pointer_type 0x7f1c7963d930
        type <record_type 0x7f1c79638150 strbuf BLK
            size <integer_cst 0x7f1c79b35078 constant 192>
            unit-size <integer_cst 0x7f1c79b35048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79638150 fields <field_decl 0x7f1c79637428 alloc> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c7963d930>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _154 = &_153->err;
    version:154
    ptr-info 0x7f1c79695450>
_154 = &_153->err;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_307 = VDEF <.MEM_306>
strbuf_addbuf (_155, _154);
strbuf_addbuf (_155, _154);
./benchmarks/git/use_after_free_2/git_uaf_2.c:240:17: warning: use location
this stmt call this function :strbuf_addbuf
trace fucntion name:strbuf_addbuf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_307 = VDEF <.MEM_306>
strbuf_addbuf (_155, _154);
strbuf_addbuf (_155, _154);
./benchmarks/git/use_after_free_2/git_uaf_2.c:240:17: warning: use location
this stmt call this function :strbuf_addbuf
trace fucntion name:strbuf_addbuf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c79675948
    type <pointer_type 0x7f1c7963d930
        type <record_type 0x7f1c79638150 strbuf BLK
            size <integer_cst 0x7f1c79b35078 constant 192>
            unit-size <integer_cst 0x7f1c79b35048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79638150 fields <field_decl 0x7f1c79637428 alloc> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c7963d930>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _154 = &_153->err;
    version:154
    ptr-info 0x7f1c79695450>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c79675af8
    type <pointer_type 0x7f1c7963d930
        type <record_type 0x7f1c79638150 strbuf BLK
            size <integer_cst 0x7f1c79b35078 constant 192>
            unit-size <integer_cst 0x7f1c79b35048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79638150 fields <field_decl 0x7f1c79637428 alloc> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c7963d930>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _160 = &_159->err;
    version:160
    ptr-info 0x7f1c796954b0>
_160 = &_159->err;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_308 = VDEF <.MEM_307>
strbuf_reset (_160);
strbuf_reset (_160);
./benchmarks/git/use_after_free_2/git_uaf_2.c:241:17: warning: use location
  241 |                 strbuf_reset(&pp->children[i].err);
      |                 ^
this stmt call this function :strbuf_reset
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_308 = VDEF <.MEM_307>
strbuf_reset (_160);
strbuf_reset (_160);
./benchmarks/git/use_after_free_2/git_uaf_2.c:241:17: warning: use location
this stmt call this function :strbuf_reset
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c79675af8
    type <pointer_type 0x7f1c7963d930
        type <record_type 0x7f1c79638150 strbuf BLK
            size <integer_cst 0x7f1c79b35078 constant 192>
            unit-size <integer_cst 0x7f1c79b35048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79638150 fields <field_decl 0x7f1c79637428 alloc> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c7963d930>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _160 = &_159->err;
    version:160
    ptr-info 0x7f1c796954b0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c79657a20
    type <integer_type 0x7f1c79b2c5e8 int public SI
        size <integer_cst 0x7f1c79b17df8 constant 32>
        unit-size <integer_cst 0x7f1c79b17e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c5e8 precision:32 min <integer_cst 0x7f1c79b17db0 -2147483648> max <integer_cst 0x7f1c79b17dc8 2147483647>
        pointer_to_this <pointer_type 0x7f1c79b339d8>>
   
    def_stmt _1 = -code_22;
    version:1>
_1 = -code_22;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_39 = VDEF <.MEM_38>
kill_children (&pp, _1);
kill_children (&pp, _1);
./benchmarks/git/use_after_free_2/git_uaf_2.c:355:33: warning: use location
  355 |                                 kill_children(&pp, -code);
      |                                 ^
this stmt call this function :kill_children
trace fucntion name:kill_children 
[40;44m =======trace_function_path kill_children  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:kill========= [0m
[40;46m =======add node_fun stack:kill========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_39 = VDEF <.MEM_38>
kill_children (&pp, _1);
kill_children (&pp, _1);
./benchmarks/git/use_after_free_2/git_uaf_2.c:355:33: warning: use location
this stmt call this function :kill_children
trace fucntion name:kill_children 
[40;44m =======trace_function_path kill_children  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:kill========= [0m
[40;46m =======add node_fun stack:kill========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c79657a20
    type <integer_type 0x7f1c79b2c5e8 int public SI
        size <integer_cst 0x7f1c79b17df8 constant 32>
        unit-size <integer_cst 0x7f1c79b17e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c5e8 precision:32 min <integer_cst 0x7f1c79b17db0 -2147483648> max <integer_cst 0x7f1c79b17dc8 2147483647>
        pointer_to_this <pointer_type 0x7f1c79b339d8>>
   
    def_stmt _1 = -code_22;
    version:1>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c79687750
    type <integer_type 0x7f1c79b2c5e8 int public SI
        size <integer_cst 0x7f1c79b17df8 constant 32>
        unit-size <integer_cst 0x7f1c79b17e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c5e8 precision:32 min <integer_cst 0x7f1c79b17db0 -2147483648> max <integer_cst 0x7f1c79b17dc8 2147483647>
        pointer_to_this <pointer_type 0x7f1c79b339d8>>
   
    def_stmt _272 = _191->pid;
    version:272>
# VUSE <.MEM_281>
_272 = _191->pid;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_315 = VDEF <.MEM_281>
ret_273 = wait_or_whine (_272, _271, 0);
ret_273 = wait_or_whine (_272, _271, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:15: warning: use location
  321 |     int ret = wait_or_whine(cmd->pid, cmd->argv[0], 0);
      |               ^
this stmt call this function :wait_or_whine
trace fucntion name:wait_or_whine 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_318 = ret_273;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
code_192 = _318;
./benchmarks/git/use_after_free_2/git_uaf_2.c:275:24: warning: use location
  275 |                 code = finish_command(&pp->children[i].process);
      |                        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c79687750
    type <integer_type 0x7f1c79b2c5e8 int public SI
        size <integer_cst 0x7f1c79b17df8 constant 32>
        unit-size <integer_cst 0x7f1c79b17e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c5e8 precision:32 min <integer_cst 0x7f1c79b17db0 -2147483648> max <integer_cst 0x7f1c79b17dc8 2147483647>
        pointer_to_this <pointer_type 0x7f1c79b339d8>>
   
    def_stmt _272 = _191->pid;
    version:272>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c79687708
    type <pointer_type 0x7f1c79638888
        type <integer_type 0x7f1c796387e0 char readonly QI
            size <integer_cst 0x7f1c79b17ca8 constant 8>
            unit-size <integer_cst 0x7f1c79b17cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c3f0 precision:8 min <integer_cst 0x7f1c79626888 -128> max <integer_cst 0x7f1c79626870 127>
            pointer_to_this <pointer_type 0x7f1c79638888>>
        public unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f1c7963d690>>
   
    def_stmt _271 = *_270;
    version:271
    ptr-info 0x7f1c79695960>
# VUSE <.MEM_281>
_271 = *_270;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_315 = VDEF <.MEM_281>
ret_273 = wait_or_whine (_272, _271, 0);
ret_273 = wait_or_whine (_272, _271, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:15: warning: use location
  321 |     int ret = wait_or_whine(cmd->pid, cmd->argv[0], 0);
      |               ^
this stmt call this function :wait_or_whine
trace fucntion name:wait_or_whine 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_318 = ret_273;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
code_192 = _318;
./benchmarks/git/use_after_free_2/git_uaf_2.c:275:24: warning: use location
  275 |                 code = finish_command(&pp->children[i].process);
      |                        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c79687708
    type <pointer_type 0x7f1c79638888
        type <integer_type 0x7f1c796387e0 char readonly QI
            size <integer_cst 0x7f1c79b17ca8 constant 8>
            unit-size <integer_cst 0x7f1c79b17cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c3f0 precision:8 min <integer_cst 0x7f1c79626888 -128> max <integer_cst 0x7f1c79626870 127>
            pointer_to_this <pointer_type 0x7f1c79638888>>
        public unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f1c7963d690>>
   
    def_stmt _271 = *_270;
    version:271
    ptr-info 0x7f1c79695960>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c796878b8
    type <pointer_type 0x7f1c79641150
        type <record_type 0x7f1c7963d738 argv_array TI
            size <integer_cst 0x7f1c79b17c00 constant 128>
            unit-size <integer_cst 0x7f1c79b17c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c7963d738 fields <field_decl 0x7f1c79637d10 argv> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c79641150>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _274 = &_191->args;
    version:274
    ptr-info 0x7f1c79695978>
_274 = &_191->args;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_316 = VDEF <.MEM_315>
argv_array_clear (_274);
argv_array_clear (_274);
./benchmarks/git/use_after_free_2/git_uaf_2.c:328:9: warning: use location
  328 |         argv_array_clear(&child->args);
      |         ^
this stmt call this function :argv_array_clear
trace fucntion name:argv_array_clear 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_316 = VDEF <.MEM_315>
argv_array_clear (_274);
argv_array_clear (_274);
./benchmarks/git/use_after_free_2/git_uaf_2.c:328:9: warning: use location
this stmt call this function :argv_array_clear
trace fucntion name:argv_array_clear 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c796878b8
    type <pointer_type 0x7f1c79641150
        type <record_type 0x7f1c7963d738 argv_array TI
            size <integer_cst 0x7f1c79b17c00 constant 128>
            unit-size <integer_cst 0x7f1c79b17c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c7963d738 fields <field_decl 0x7f1c79637d10 argv> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c79641150>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _274 = &_191->args;
    version:274
    ptr-info 0x7f1c79695978>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c79687900
    type <pointer_type 0x7f1c79641150
        type <record_type 0x7f1c7963d738 argv_array TI
            size <integer_cst 0x7f1c79b17c00 constant 128>
            unit-size <integer_cst 0x7f1c79b17c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c7963d738 fields <field_decl 0x7f1c79637d10 argv> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c79641150>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _275 = &_191->env_array;
    version:275
    ptr-info 0x7f1c79695990>
_275 = &_191->env_array;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_317 = VDEF <.MEM_316>
argv_array_clear (_275);
argv_array_clear (_275);
./benchmarks/git/use_after_free_2/git_uaf_2.c:329:9: warning: use location
  329 |         argv_array_clear(&child->env_array);
      |         ^
this stmt call this function :argv_array_clear
trace fucntion name:argv_array_clear 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_317 = VDEF <.MEM_316>
argv_array_clear (_275);
argv_array_clear (_275);
./benchmarks/git/use_after_free_2/git_uaf_2.c:329:9: warning: use location
this stmt call this function :argv_array_clear
trace fucntion name:argv_array_clear 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c79687900
    type <pointer_type 0x7f1c79641150
        type <record_type 0x7f1c7963d738 argv_array TI
            size <integer_cst 0x7f1c79b17c00 constant 128>
            unit-size <integer_cst 0x7f1c79b17c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c7963d738 fields <field_decl 0x7f1c79637d10 argv> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c79641150>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _275 = &_191->env_array;
    version:275
    ptr-info 0x7f1c79695990>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c79683870
    type <pointer_type 0x7f1c7963d888
        type <record_type 0x7f1c7963d7e0 child_process BLK
            size <integer_cst 0x7f1c796269c0 constant 640>
            unit-size <integer_cst 0x7f1c796268d0 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c7963d7e0 fields <field_decl 0x7f1c7963f850 argv> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c7963d888>>
        public unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _225 = &_224->process;
    version:225
    ptr-info 0x7f1c79695768>
_225 = &_224->process;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_323 = VDEF <.MEM_322>
child_process_init (_225);
child_process_init (_225);
./benchmarks/git/use_after_free_2/git_uaf_2.c:289:17: warning: use location
  289 |                 child_process_init(&pp->children[i].process);
      |                 ^
this stmt call this function :child_process_init
trace fucntion name:child_process_init 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_323 = VDEF <.MEM_322>
child_process_init (_225);
child_process_init (_225);
./benchmarks/git/use_after_free_2/git_uaf_2.c:289:17: warning: use location
this stmt call this function :child_process_init
trace fucntion name:child_process_init 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c79683870
    type <pointer_type 0x7f1c7963d888
        type <record_type 0x7f1c7963d7e0 child_process BLK
            size <integer_cst 0x7f1c796269c0 constant 640>
            unit-size <integer_cst 0x7f1c796268d0 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c7963d7e0 fields <field_decl 0x7f1c7963f850 argv> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c7963d888>>
        public unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _225 = &_224->process;
    version:225
    ptr-info 0x7f1c79695768>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c79683a68
    type <pointer_type 0x7f1c7963d930
        type <record_type 0x7f1c79638150 strbuf BLK
            size <integer_cst 0x7f1c79b35078 constant 192>
            unit-size <integer_cst 0x7f1c79b35048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79638150 fields <field_decl 0x7f1c79637428 alloc> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c7963d930>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _232 = &pp.buffered_output;
    version:232
    ptr-info 0x7f1c796957c8>
_232 = &pp.buffered_output;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_329 = VDEF <.MEM_323>
strbuf_addbuf (_232, _231);
strbuf_addbuf (_232, _231);
./benchmarks/git/use_after_free_2/git_uaf_2.c:292:25: warning: use location
  292 |                         strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);
      |                         ^
this stmt call this function :strbuf_addbuf
trace fucntion name:strbuf_addbuf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_329 = VDEF <.MEM_323>
strbuf_addbuf (_232, _231);
strbuf_addbuf (_232, _231);
./benchmarks/git/use_after_free_2/git_uaf_2.c:292:25: warning: use location
this stmt call this function :strbuf_addbuf
trace fucntion name:strbuf_addbuf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c79683a68
    type <pointer_type 0x7f1c7963d930
        type <record_type 0x7f1c79638150 strbuf BLK
            size <integer_cst 0x7f1c79b35078 constant 192>
            unit-size <integer_cst 0x7f1c79b35048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79638150 fields <field_decl 0x7f1c79637428 alloc> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c7963d930>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _232 = &pp.buffered_output;
    version:232
    ptr-info 0x7f1c796957c8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c79683a20
    type <pointer_type 0x7f1c7963d930
        type <record_type 0x7f1c79638150 strbuf BLK
            size <integer_cst 0x7f1c79b35078 constant 192>
            unit-size <integer_cst 0x7f1c79b35048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79638150 fields <field_decl 0x7f1c79637428 alloc> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c7963d930>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _231 = &_230->err;
    version:231
    ptr-info 0x7f1c796957b0>
_231 = &_230->err;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_329 = VDEF <.MEM_323>
strbuf_addbuf (_232, _231);
strbuf_addbuf (_232, _231);
./benchmarks/git/use_after_free_2/git_uaf_2.c:292:25: warning: use location
this stmt call this function :strbuf_addbuf
trace fucntion name:strbuf_addbuf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_329 = VDEF <.MEM_323>
strbuf_addbuf (_232, _231);
strbuf_addbuf (_232, _231);
./benchmarks/git/use_after_free_2/git_uaf_2.c:292:25: warning: use location
this stmt call this function :strbuf_addbuf
trace fucntion name:strbuf_addbuf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c79683a20
    type <pointer_type 0x7f1c7963d930
        type <record_type 0x7f1c79638150 strbuf BLK
            size <integer_cst 0x7f1c79b35078 constant 192>
            unit-size <integer_cst 0x7f1c79b35048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79638150 fields <field_decl 0x7f1c79637428 alloc> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c7963d930>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _231 = &_230->err;
    version:231
    ptr-info 0x7f1c796957b0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c79683bd0
    type <pointer_type 0x7f1c7963d930
        type <record_type 0x7f1c79638150 strbuf BLK
            size <integer_cst 0x7f1c79b35078 constant 192>
            unit-size <integer_cst 0x7f1c79b35048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79638150 fields <field_decl 0x7f1c79637428 alloc> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c7963d930>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _237 = &_236->err;
    version:237
    ptr-info 0x7f1c79695810>
_237 = &_236->err;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_330 = VDEF <.MEM_329>
strbuf_reset (_237);
strbuf_reset (_237);
./benchmarks/git/use_after_free_2/git_uaf_2.c:293:25: warning: use location
  293 |                         strbuf_reset(&pp->children[i].err);
      |                         ^
this stmt call this function :strbuf_reset
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_330 = VDEF <.MEM_329>
strbuf_reset (_237);
strbuf_reset (_237);
./benchmarks/git/use_after_free_2/git_uaf_2.c:293:25: warning: use location
this stmt call this function :strbuf_reset
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c79683bd0
    type <pointer_type 0x7f1c7963d930
        type <record_type 0x7f1c79638150 strbuf BLK
            size <integer_cst 0x7f1c79b35078 constant 192>
            unit-size <integer_cst 0x7f1c79b35048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79638150 fields <field_decl 0x7f1c79637428 alloc> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c7963d930>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _237 = &_236->err;
    version:237
    ptr-info 0x7f1c79695810>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c79683d80
    type <pointer_type 0x7f1c79636b28
        type <integer_type 0x7f1c796367e0 char public QI
            size <integer_cst 0x7f1c79b17ca8 constant 8>
            unit-size <integer_cst 0x7f1c79b17cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c3f0 precision:8 min <integer_cst 0x7f1c79626888 -128> max <integer_cst 0x7f1c79626870 127>
            pointer_to_this <pointer_type 0x7f1c79636b28>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7f1c79638690>>
   
    def_stmt _243 = _242->err.buf;
    version:243
    ptr-info 0x7f1c79695870>
# VUSE <.MEM_323>
_243 = _242->err.buf;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_324 = VDEF <.MEM_323>
fputs (_243, _238);
fputs (_243, _238);
./benchmarks/git/use_after_free_2/git_uaf_2.c:295:25: warning: use location
  295 |                         fputs(pp->children[i].err.buf, stderr);
      |                         ^
this stmt call this function :fputs
trace fucntion name:fputs 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_324 = VDEF <.MEM_323>
fputs (_243, _238);
fputs (_243, _238);
./benchmarks/git/use_after_free_2/git_uaf_2.c:295:25: warning: use location
this stmt call this function :fputs
trace fucntion name:fputs 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c79683d80
    type <pointer_type 0x7f1c79636b28
        type <integer_type 0x7f1c796367e0 char public QI
            size <integer_cst 0x7f1c79b17ca8 constant 8>
            unit-size <integer_cst 0x7f1c79b17cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c3f0 precision:8 min <integer_cst 0x7f1c79626888 -128> max <integer_cst 0x7f1c79626870 127>
            pointer_to_this <pointer_type 0x7f1c79636b28>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7f1c79638690>>
   
    def_stmt _243 = _242->err.buf;
    version:243
    ptr-info 0x7f1c79695870>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c79683c18
    type <pointer_type 0x7f1c79636e70
        type <record_type 0x7f1c79636dc8 FILE BLK
            size <integer_cst 0x7f1c79bec0a8 constant 1728>
            unit-size <integer_cst 0x7f1c79626900 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79636d20 fields <field_decl 0x7f1c79637260 _flags> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c79636e70>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f1c79640f18>>
   
    def_stmt _238 = stderr;
    version:238
    ptr-info 0x7f1c79695828>
# VUSE <.MEM_323>
_238 = stderr;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_324 = VDEF <.MEM_323>
fputs (_243, _238);
fputs (_243, _238);
./benchmarks/git/use_after_free_2/git_uaf_2.c:295:25: warning: use location
this stmt call this function :fputs
trace fucntion name:fputs 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_324 = VDEF <.MEM_323>
fputs (_243, _238);
fputs (_243, _238);
./benchmarks/git/use_after_free_2/git_uaf_2.c:295:25: warning: use location
this stmt call this function :fputs
trace fucntion name:fputs 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c79683c18
    type <pointer_type 0x7f1c79636e70
        type <record_type 0x7f1c79636dc8 FILE BLK
            size <integer_cst 0x7f1c79bec0a8 constant 1728>
            unit-size <integer_cst 0x7f1c79626900 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79636d20 fields <field_decl 0x7f1c79637260 _flags> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c79636e70>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f1c79640f18>>
   
    def_stmt _238 = stderr;
    version:238
    ptr-info 0x7f1c79695828>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c79683ee8
    type <pointer_type 0x7f1c7963d930
        type <record_type 0x7f1c79638150 strbuf BLK
            size <integer_cst 0x7f1c79b35078 constant 192>
            unit-size <integer_cst 0x7f1c79b35048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79638150 fields <field_decl 0x7f1c79637428 alloc> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c7963d930>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _248 = &_247->err;
    version:248
    ptr-info 0x7f1c796958b8>
_248 = &_247->err;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_325 = VDEF <.MEM_324>
strbuf_reset (_248);
strbuf_reset (_248);
./benchmarks/git/use_after_free_2/git_uaf_2.c:296:25: warning: use location
  296 |                         strbuf_reset(&pp->children[i].err);
      |                         ^
this stmt call this function :strbuf_reset
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_325 = VDEF <.MEM_324>
strbuf_reset (_248);
strbuf_reset (_248);
./benchmarks/git/use_after_free_2/git_uaf_2.c:296:25: warning: use location
this stmt call this function :strbuf_reset
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c79683ee8
    type <pointer_type 0x7f1c7963d930
        type <record_type 0x7f1c79638150 strbuf BLK
            size <integer_cst 0x7f1c79b35078 constant 192>
            unit-size <integer_cst 0x7f1c79b35048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79638150 fields <field_decl 0x7f1c79637428 alloc> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c7963d930>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _248 = &_247->err;
    version:248
    ptr-info 0x7f1c796958b8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c79683f78
    type <pointer_type 0x7f1c79636b28
        type <integer_type 0x7f1c796367e0 char public QI
            size <integer_cst 0x7f1c79b17ca8 constant 8>
            unit-size <integer_cst 0x7f1c79b17cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c3f0 precision:8 min <integer_cst 0x7f1c79626888 -128> max <integer_cst 0x7f1c79626870 127>
            pointer_to_this <pointer_type 0x7f1c79636b28>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7f1c79638690>>
   
    def_stmt _250 = pp.buffered_output.buf;
    version:250
    ptr-info 0x7f1c796958e8>
# VUSE <.MEM_325>
_250 = pp.buffered_output.buf;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_326 = VDEF <.MEM_325>
fputs (_250, _249);
fputs (_250, _249);
./benchmarks/git/use_after_free_2/git_uaf_2.c:299:25: warning: use location
  299 |                         fputs(pp->buffered_output.buf, stderr);
      |                         ^
this stmt call this function :fputs
trace fucntion name:fputs 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_326 = VDEF <.MEM_325>
fputs (_250, _249);
fputs (_250, _249);
./benchmarks/git/use_after_free_2/git_uaf_2.c:299:25: warning: use location
this stmt call this function :fputs
trace fucntion name:fputs 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c79683f78
    type <pointer_type 0x7f1c79636b28
        type <integer_type 0x7f1c796367e0 char public QI
            size <integer_cst 0x7f1c79b17ca8 constant 8>
            unit-size <integer_cst 0x7f1c79b17cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c3f0 precision:8 min <integer_cst 0x7f1c79626888 -128> max <integer_cst 0x7f1c79626870 127>
            pointer_to_this <pointer_type 0x7f1c79636b28>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7f1c79638690>>
   
    def_stmt _250 = pp.buffered_output.buf;
    version:250
    ptr-info 0x7f1c796958e8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c79683f30
    type <pointer_type 0x7f1c79636e70
        type <record_type 0x7f1c79636dc8 FILE BLK
            size <integer_cst 0x7f1c79bec0a8 constant 1728>
            unit-size <integer_cst 0x7f1c79626900 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79636d20 fields <field_decl 0x7f1c79637260 _flags> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c79636e70>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f1c79640f18>>
   
    def_stmt _249 = stderr;
    version:249
    ptr-info 0x7f1c796958d0>
# VUSE <.MEM_325>
_249 = stderr;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_326 = VDEF <.MEM_325>
fputs (_250, _249);
fputs (_250, _249);
./benchmarks/git/use_after_free_2/git_uaf_2.c:299:25: warning: use location
this stmt call this function :fputs
trace fucntion name:fputs 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_326 = VDEF <.MEM_325>
fputs (_250, _249);
fputs (_250, _249);
./benchmarks/git/use_after_free_2/git_uaf_2.c:299:25: warning: use location
this stmt call this function :fputs
trace fucntion name:fputs 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c79683f30
    type <pointer_type 0x7f1c79636e70
        type <record_type 0x7f1c79636dc8 FILE BLK
            size <integer_cst 0x7f1c79bec0a8 constant 1728>
            unit-size <integer_cst 0x7f1c79626900 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79636d20 fields <field_decl 0x7f1c79637260 _flags> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c79636e70>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f1c79640f18>>
   
    def_stmt _249 = stderr;
    version:249
    ptr-info 0x7f1c796958d0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c79687000
    type <pointer_type 0x7f1c7963d930
        type <record_type 0x7f1c79638150 strbuf BLK
            size <integer_cst 0x7f1c79b35078 constant 192>
            unit-size <integer_cst 0x7f1c79b35048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79638150 fields <field_decl 0x7f1c79637428 alloc> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c7963d930>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _251 = &pp.buffered_output;
    version:251
    ptr-info 0x7f1c79695900>
_251 = &pp.buffered_output;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_327 = VDEF <.MEM_326>
strbuf_reset (_251);
strbuf_reset (_251);
./benchmarks/git/use_after_free_2/git_uaf_2.c:300:25: warning: use location
  300 |                         strbuf_reset(&pp->buffered_output);
      |                         ^
this stmt call this function :strbuf_reset
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_327 = VDEF <.MEM_326>
strbuf_reset (_251);
strbuf_reset (_251);
./benchmarks/git/use_after_free_2/git_uaf_2.c:300:25: warning: use location
this stmt call this function :strbuf_reset
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c79687000
    type <pointer_type 0x7f1c7963d930
        type <record_type 0x7f1c79638150 strbuf BLK
            size <integer_cst 0x7f1c79b35078 constant 192>
            unit-size <integer_cst 0x7f1c79b35048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79638150 fields <field_decl 0x7f1c79637428 alloc> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c7963d930>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _251 = &pp.buffered_output;
    version:251
    ptr-info 0x7f1c79695900>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c79657bd0
    type <integer_type 0x7f1c79b2c5e8 int public SI
        size <integer_cst 0x7f1c79b17df8 constant 32>
        unit-size <integer_cst 0x7f1c79b17e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c5e8 precision:32 min <integer_cst 0x7f1c79b17db0 -2147483648> max <integer_cst 0x7f1c79b17dc8 2147483647>
        pointer_to_this <pointer_type 0x7f1c79b339d8>>
   
    def_stmt _7 = -code_29;
    version:7>
_7 = -code_29;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_44 = VDEF <.MEM_43>
kill_children (&pp, _7);
kill_children (&pp, _7);
./benchmarks/git/use_after_free_2/git_uaf_2.c:367:33: warning: use location
  367 |                                 kill_children(&pp, -code);
      |                                 ^
this stmt call this function :kill_children
trace fucntion name:kill_children 
[40;44m =======trace_function_path kill_children  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:kill========= [0m
[40;46m =======add node_fun stack:kill========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_44 = VDEF <.MEM_43>
kill_children (&pp, _7);
kill_children (&pp, _7);
./benchmarks/git/use_after_free_2/git_uaf_2.c:367:33: warning: use location
this stmt call this function :kill_children
trace fucntion name:kill_children 
[40;44m =======trace_function_path kill_children  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:kill========= [0m
[40;46m =======add node_fun stack:kill========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c79657bd0
    type <integer_type 0x7f1c79b2c5e8 int public SI
        size <integer_cst 0x7f1c79b17df8 constant 32>
        unit-size <integer_cst 0x7f1c79b17e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c5e8 precision:32 min <integer_cst 0x7f1c79b17db0 -2147483648> max <integer_cst 0x7f1c79b17dc8 2147483647>
        pointer_to_this <pointer_type 0x7f1c79b339d8>>
   
    def_stmt _7 = -code_29;
    version:7>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:run_processes_parallel========= [0m
[40;44m =======node_fun:kill_children========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path kill_children  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:kill========= [0m
[40;33m =======POP node_fun stack:kill========= [0m
[40;42m =======pre_check_funciton:kill_children========= [0m
[40;42m =======start_check_funciton:kill_children========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f1c7968ed80
    type <integer_type 0x7f1c79b2c5e8 int public SI
        size <integer_cst 0x7f1c79b17df8 constant 32>
        unit-size <integer_cst 0x7f1c79b17e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c5e8 precision:32 min <integer_cst 0x7f1c79b17db0 -2147483648> max <integer_cst 0x7f1c79b17dc8 2147483647>
        pointer_to_this <pointer_type 0x7f1c79b339d8>>
   
    def_stmt _10 = _9->process.pid;
    version:10>
# VUSE <.MEM_21>
_10 = _9->process.pid;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_23 = VDEF <.MEM_21>
kill (_10, signo_17(D));
kill (_10, signo_17(D));
In function ‘kill_children’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:259:25: warning: use location
  259 |                         kill(pp->children[i].process.pid, signo);
      |                         ^
this stmt call this function :kill
trace fucntion name:kill 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_23 = VDEF <.MEM_21>
kill (_10, signo_17(D));
kill (_10, signo_17(D));
./benchmarks/git/use_after_free_2/git_uaf_2.c:259:25: warning: use location
this stmt call this function :kill
trace fucntion name:kill 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c7968ed80
    type <integer_type 0x7f1c79b2c5e8 int public SI
        size <integer_cst 0x7f1c79b17df8 constant 32>
        unit-size <integer_cst 0x7f1c79b17e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c5e8 precision:32 min <integer_cst 0x7f1c79b17db0 -2147483648> max <integer_cst 0x7f1c79b17dc8 2147483647>
        pointer_to_this <pointer_type 0x7f1c79b339d8>>
   
    def_stmt _10 = _9->process.pid;
    version:10>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c7968eea0
    type <integer_type 0x7f1c79b2c5e8 int public SI
        size <integer_cst 0x7f1c79b17df8 constant 32>
        unit-size <integer_cst 0x7f1c79b17e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c5e8 precision:32 min <integer_cst 0x7f1c79b17db0 -2147483648> max <integer_cst 0x7f1c79b17dc8 2147483647>
        pointer_to_this <pointer_type 0x7f1c79b339d8>>
    var <parm_decl 0x7f1c79666300 signo>
    def_stmt GIMPLE_NOP
    version:17>
GIMPLE_NOP

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_23 = VDEF <.MEM_21>
kill (_10, signo_17(D));
kill (_10, signo_17(D));
./benchmarks/git/use_after_free_2/git_uaf_2.c:259:25: warning: use location
this stmt call this function :kill
trace fucntion name:kill 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_23 = VDEF <.MEM_21>
kill (_10, signo_17(D));
kill (_10, signo_17(D));
./benchmarks/git/use_after_free_2/git_uaf_2.c:259:25: warning: use location
this stmt call this function :kill
trace fucntion name:kill 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c7968eea0
    type <integer_type 0x7f1c79b2c5e8 int public SI
        size <integer_cst 0x7f1c79b17df8 constant 32>
        unit-size <integer_cst 0x7f1c79b17e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c5e8 precision:32 min <integer_cst 0x7f1c79b17db0 -2147483648> max <integer_cst 0x7f1c79b17dc8 2147483647>
        pointer_to_this <pointer_type 0x7f1c79b339d8>>
    var <parm_decl 0x7f1c79666300 signo>
    def_stmt GIMPLE_NOP
    version:17>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:kill_children========= [0m
[40;44m =======node_fun:default_task_finished========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path default_task_finished  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:strbuf_addf========= [0m
[40;33m =======POP node_fun stack:strbuf_addf========= [0m
[40;42m =======pre_check_funciton:default_task_finished========= [0m
[40;42m =======start_check_funciton:default_task_finished========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f1c7968f3f0
    type <pointer_type 0x7f1c7963d930
        type <record_type 0x7f1c79638150 strbuf BLK
            size <integer_cst 0x7f1c79b35078 constant 192>
            unit-size <integer_cst 0x7f1c79b35048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79638150 fields <field_decl 0x7f1c79637428 alloc> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c7963d930>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c79666480 err>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7f1c79695ab0>
GIMPLE_NOP

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :strbuf_addf
# .MEM_24 = VDEF <.MEM_23(D)>
strbuf_addf (err_16(D), "A child failed with return code %d:", result_14(D));
In function ‘default_task_finished’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:156:9: warning: use location
  156 |         strbuf_addf(err, "A child failed with return code %d:", result);
      |         ^
# .MEM_25 = VDEF <.MEM_21>
strbuf_addf (err_16(D), " %s", _5);
./benchmarks/git/use_after_free_2/git_uaf_2.c:158:17: warning: use location
  158 |                 strbuf_addf(err, " %s", cp->argv[i]);
      |                 ^
# .MEM_24 = VDEF <.MEM_23(D)>
strbuf_addf (err_16(D), "A child failed with return code %d:", result_14(D));
strbuf_addf (err_16(D), "A child failed with return code %d:", result_14(D));
./benchmarks/git/use_after_free_2/git_uaf_2.c:156:9: warning: use location
  156 |         strbuf_addf(err, "A child failed with return code %d:", result);
      |         ^
this stmt call this function :strbuf_addf
trace fucntion name:strbuf_addf 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_24 = VDEF <.MEM_23(D)>
strbuf_addf (err_16(D), "A child failed with return code %d:", result_14(D));
strbuf_addf (err_16(D), "A child failed with return code %d:", result_14(D));
./benchmarks/git/use_after_free_2/git_uaf_2.c:156:9: warning: use location
this stmt call this function :strbuf_addf
trace fucntion name:strbuf_addf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c7968f3f0
    type <pointer_type 0x7f1c7963d930
        type <record_type 0x7f1c79638150 strbuf BLK
            size <integer_cst 0x7f1c79b35078 constant 192>
            unit-size <integer_cst 0x7f1c79b35048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79638150 fields <field_decl 0x7f1c79637428 alloc> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c7963d930>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c79666480 err>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7f1c79695ab0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c7968f3a8
    type <integer_type 0x7f1c79b2c5e8 int public SI
        size <integer_cst 0x7f1c79b17df8 constant 32>
        unit-size <integer_cst 0x7f1c79b17e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c5e8 precision:32 min <integer_cst 0x7f1c79b17db0 -2147483648> max <integer_cst 0x7f1c79b17dc8 2147483647>
        pointer_to_this <pointer_type 0x7f1c79b339d8>>
    var <parm_decl 0x7f1c79666380 result>
    def_stmt GIMPLE_NOP
    version:14>
GIMPLE_NOP

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_24 = VDEF <.MEM_23(D)>
strbuf_addf (err_16(D), "A child failed with return code %d:", result_14(D));
strbuf_addf (err_16(D), "A child failed with return code %d:", result_14(D));
./benchmarks/git/use_after_free_2/git_uaf_2.c:156:9: warning: use location
this stmt call this function :strbuf_addf
trace fucntion name:strbuf_addf 

 ================== trace ================== 
trace fucntion free:0 
if (result_14(D) == 0)
./benchmarks/git/use_after_free_2/git_uaf_2.c:153:12: warning: use location
  153 |         if (!result)
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c7968f3a8
    type <integer_type 0x7f1c79b2c5e8 int public SI
        size <integer_cst 0x7f1c79b17df8 constant 32>
        unit-size <integer_cst 0x7f1c79b17e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c5e8 precision:32 min <integer_cst 0x7f1c79b17db0 -2147483648> max <integer_cst 0x7f1c79b17dc8 2147483647>
        pointer_to_this <pointer_type 0x7f1c79b339d8>>
    var <parm_decl 0x7f1c79666380 result>
    def_stmt GIMPLE_NOP
    version:14>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c7968f1b0
    type <pointer_type 0x7f1c79638888
        type <integer_type 0x7f1c796387e0 char readonly QI
            size <integer_cst 0x7f1c79b17ca8 constant 8>
            unit-size <integer_cst 0x7f1c79b17cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c3f0 precision:8 min <integer_cst 0x7f1c79626888 -128> max <integer_cst 0x7f1c79626870 127>
            pointer_to_this <pointer_type 0x7f1c79638888>>
        public unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f1c7963d690>>
   
    def_stmt _5 = *_4;
    version:5
    ptr-info 0x7f1c79695a50>
# VUSE <.MEM_21>
_5 = *_4;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_25 = VDEF <.MEM_21>
strbuf_addf (err_16(D), " %s", _5);
strbuf_addf (err_16(D), " %s", _5);
./benchmarks/git/use_after_free_2/git_uaf_2.c:158:17: warning: use location
  158 |                 strbuf_addf(err, " %s", cp->argv[i]);
      |                 ^
this stmt call this function :strbuf_addf
trace fucntion name:strbuf_addf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_25 = VDEF <.MEM_21>
strbuf_addf (err_16(D), " %s", _5);
strbuf_addf (err_16(D), " %s", _5);
./benchmarks/git/use_after_free_2/git_uaf_2.c:158:17: warning: use location
this stmt call this function :strbuf_addf
trace fucntion name:strbuf_addf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c7968f1b0
    type <pointer_type 0x7f1c79638888
        type <integer_type 0x7f1c796387e0 char readonly QI
            size <integer_cst 0x7f1c79b17ca8 constant 8>
            unit-size <integer_cst 0x7f1c79b17cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c3f0 precision:8 min <integer_cst 0x7f1c79626888 -128> max <integer_cst 0x7f1c79626870 127>
            pointer_to_this <pointer_type 0x7f1c79638888>>
        public unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f1c7963d690>>
   
    def_stmt _5 = *_4;
    version:5
    ptr-info 0x7f1c79695a50>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:default_task_finished========= [0m
[40;44m =======node_fun:default_start_failure========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path default_start_failure  function_call count: 2 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:strbuf_addf========= [0m
[40;33m =======POP node_fun stack:strbuf_addf========= [0m
[40;42m =======pre add _ fucntion:strbuf_addstr========= [0m
[40;33m =======POP node_fun stack:strbuf_addstr========= [0m
[40;42m =======pre_check_funciton:default_start_failure========= [0m
[40;42m =======start_check_funciton:default_start_failure========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f1c7968f948
    type <pointer_type 0x7f1c7963d930
        type <record_type 0x7f1c79638150 strbuf BLK
            size <integer_cst 0x7f1c79b35078 constant 192>
            unit-size <integer_cst 0x7f1c79b35048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79638150 fields <field_decl 0x7f1c79637428 alloc> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c7963d930>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c79666680 err>
    def_stmt GIMPLE_NOP
    version:14
    ptr-info 0x7f1c79695b70>
GIMPLE_NOP

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strbuf_addf (err_14(D), " %s", _5);
In function ‘default_start_failure’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:140:17: warning: use location
  140 |                 strbuf_addf(err, " %s", cp->argv[i]);
      |                 ^
this stmt call this function :strbuf_addf
trace fucntion name:strbuf_addf 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_21 = VDEF <.MEM_20(D)>
strbuf_addstr (err_14(D), "Starting a child failed:");
strbuf_addstr (err_14(D), "Starting a child failed:");
./benchmarks/git/use_after_free_2/git_uaf_2.c:138:9: warning: use location
  138 |         strbuf_addstr(err, "Starting a child failed:");
      |         ^
this stmt call this function :strbuf_addstr
trace fucntion name:strbuf_addstr 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_21 = VDEF <.MEM_20(D)>
strbuf_addstr (err_14(D), "Starting a child failed:");
strbuf_addstr (err_14(D), "Starting a child failed:");
./benchmarks/git/use_after_free_2/git_uaf_2.c:138:9: warning: use location
this stmt call this function :strbuf_addstr
trace fucntion name:strbuf_addstr 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c7968f948
    type <pointer_type 0x7f1c7963d930
        type <record_type 0x7f1c79638150 strbuf BLK
            size <integer_cst 0x7f1c79b35078 constant 192>
            unit-size <integer_cst 0x7f1c79b35048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79638150 fields <field_decl 0x7f1c79637428 alloc> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c7963d930>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c79666680 err>
    def_stmt GIMPLE_NOP
    version:14
    ptr-info 0x7f1c79695b70>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c7968f948
    type <pointer_type 0x7f1c7963d930
        type <record_type 0x7f1c79638150 strbuf BLK
            size <integer_cst 0x7f1c79b35078 constant 192>
            unit-size <integer_cst 0x7f1c79b35048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79638150 fields <field_decl 0x7f1c79637428 alloc> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c7963d930>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c79666680 err>
    def_stmt GIMPLE_NOP
    version:14
    ptr-info 0x7f1c79695b70>
GIMPLE_NOP

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_22 = VDEF <.MEM_19>
strbuf_addf (err_14(D), " %s", _5);
strbuf_addf (err_14(D), " %s", _5);
./benchmarks/git/use_after_free_2/git_uaf_2.c:140:17: warning: use location
  140 |                 strbuf_addf(err, " %s", cp->argv[i]);
      |                 ^
this stmt call this function :strbuf_addf
trace fucntion name:strbuf_addf 

 ================== trace ================== 
trace fucntion free:0 
strbuf_addstr (err_14(D), "Starting a child failed:");
./benchmarks/git/use_after_free_2/git_uaf_2.c:138:9: warning: use location
  138 |         strbuf_addstr(err, "Starting a child failed:");
      |         ^
this stmt call this function :strbuf_addstr
trace fucntion name:strbuf_addstr 

 ================== trace ================== 
trace fucntion free:0 
strbuf_addstr (err_14(D), "Starting a child failed:");
./benchmarks/git/use_after_free_2/git_uaf_2.c:138:9: warning: use location
this stmt call this function :strbuf_addstr
trace fucntion name:strbuf_addstr 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c7968f948
    type <pointer_type 0x7f1c7963d930
        type <record_type 0x7f1c79638150 strbuf BLK
            size <integer_cst 0x7f1c79b35078 constant 192>
            unit-size <integer_cst 0x7f1c79b35048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79638150 fields <field_decl 0x7f1c79637428 alloc> context <translation_unit_decl 0x7f1c79b22168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7f1c7963d930>>
        unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c79666680 err>
    def_stmt GIMPLE_NOP
    version:14
    ptr-info 0x7f1c79695b70>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c7968f750
    type <pointer_type 0x7f1c79638888
        type <integer_type 0x7f1c796387e0 char readonly QI
            size <integer_cst 0x7f1c79b17ca8 constant 8>
            unit-size <integer_cst 0x7f1c79b17cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c79b2c3f0 precision:8 min <integer_cst 0x7f1c79626888 -128> max <integer_cst 0x7f1c79626870 127>
            pointer_to_this <pointer_type 0x7f1c79638888>>
        public unsigned DI
        size <integer_cst 0x7f1c79b17bb8 constant 64>
        unit-size <integer_cst 0x7f1c79b17bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f1c7963d690>>
   
    def_stmt _5 = *_4;
    version:5
    ptr-info 0x7f1c79695b10>
# VUSE <.MEM_19>
_5 = *_4;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:default_start_failure========= [0m
fucntion collect path finsh

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
proc = {};
proc.args.argv = &empty_argv;
proc.env_array.argv = &empty_argv;
if (argc_30(D) <= 2)
  goto <bb 16>; [34.00%]
else
  goto <bb 3>; [66.00%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 708669601]:
_1 = argv_31(D) + 16;
proc.argv = _1;
_2 = MEM[(char * *)argv_31(D) + 8B];
_3 = strcmp (_2, "start-command-ENOENT");
if (_3 == 0)
  goto <bb 4>; [33.00%]
else
  goto <bb 7>; [67.00%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 233860967]:
_4 = start_command (&proc);
if (_4 < 0)
  goto <bb 5>; [73.25%]
else
  goto <bb 6>; [26.75%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 171303159]:
_5 = __errno_location ();
_6 = *_5;
if (_6 == 2)
  goto <bb 16>; [34.00%]
else
  goto <bb 6>; [66.00%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 175617892]:
_7 = MEM[(char * *)argv_31(D) + 8B];
_8 = stderr;
fprintf (_8, "FAIL %s\n", _7);
goto <bb 16>; [100.00%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 474808634]:
_9 = MEM[(char * *)argv_31(D) + 8B];
_10 = strcmp (_9, "run-command");
if (_10 == 0)
  goto <bb 8>; [0.04%]
else
  goto <bb 9>; [99.96%]

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 189923]:
_11 = run_command (&proc);
exit (_11);

=======is loop:0=========

 bb index 9 
<bb 9> [local count: 474618711]:
_12 = MEM[(char * *)argv_31(D) + 16B];
_46 = strtol (_12, 0B, 10);
_47 = (int) _46;
_13 = argv_31(D) + 24;
proc.argv = _13;
_14 = MEM[(char * *)argv_31(D) + 8B];
_15 = strcmp (_14, "run-command-parallel");
if (_15 == 0)
  goto <bb 10>; [0.04%]
else
  goto <bb 11>; [99.96%]

=======is loop:0=========

 bb index 10 
<bb 10> [local count: 189847]:
_16 = run_processes_parallel (_47, parallel_next, 0B, 0B, &proc);
exit (_16);

=======is loop:0=========

 bb index 11 
<bb 11> [local count: 474428864]:
_17 = MEM[(char * *)argv_31(D) + 8B];
_18 = strcmp (_17, "run-command-abort");
if (_18 == 0)
  goto <bb 12>; [0.04%]
else
  goto <bb 13>; [99.96%]

=======is loop:0=========

 bb index 12 
<bb 12> [local count: 189771]:
_19 = run_processes_parallel (_47, parallel_next, 0B, task_finished, &proc);
exit (_19);

=======is loop:0=========

 bb index 13 
<bb 13> [local count: 474239093]:
_20 = MEM[(char * *)argv_31(D) + 8B];
_21 = strcmp (_20, "run-command-no-jobs");
if (_21 == 0)
  goto <bb 14>; [0.04%]
else
  goto <bb 15>; [99.96%]

=======is loop:0=========

 bb index 14 
<bb 14> [local count: 189695]:
_22 = run_processes_parallel (_47, no_job, 0B, task_finished, &proc);
exit (_22);

=======is loop:0=========

 bb index 15 
<bb 15> [local count: 474049397]:
_23 = stderr;
__builtin_fwrite ("check usage\n", 1, 12, _23);

=======is loop:0=========

 bb index 16 
<bb 16> [local count: 1072982589]:
# _24 = PHI <1(2), 0(5), 1(6), 1(15)>
proc ={v} {CLOBBER};
return _24;

=======Mapping node_fun:task_finished=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
strbuf_addf (err_2(D), "asking for a quick stop\n");
return 1;

=======Mapping node_fun:no_job=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
strbuf_addf (err_2(D), "no further jobs available\n");
return 0;

=======Mapping node_fun:parallel_next=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = number_callbacks;
if (_1 > 3)
  goto <bb 4>; [51.12%]
else
  goto <bb 3>; [48.88%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 524845000]:
_2 = MEM[(struct child_process *)cb_8(D)].argv;
_3 = &cp_10(D)->args;
argv_array_pushv (_3, _2);
strbuf_addf (err_12(D), "preloaded output of a child\n");
_4 = number_callbacks;
_5 = _4 + 1;
number_callbacks = _5;

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073741824]:
# _6 = PHI <0(2), 1(3)>
return _6;

=======Mapping node_fun:run_processes_parallel=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 740055]:
if (n_15(D) <= 0)
  goto <bb 3>; [25.50%]
else
  goto <bb 4>; [74.50%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 188714]:
n_47 = online_cpus ();

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 740055]:
# n_48 = PHI <n_15(D)(2), n_47(3)>
pp.max_processes = n_48;
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_48);
pp.data = pp_cb_19(D);
if (get_next_task_16(D) == 0B)
  goto <bb 5>; [0.04%]
else
  goto <bb 6>; [99.96%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 296]:
printf ("BUG: you need to specify a get_next_task function%s", "");
exit (1);

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 739759]:
pp.get_next_task = get_next_task_16(D);
if (start_failure_17(D) != 0B)
  goto <bb 8>; [70.00%]
else
  goto <bb 7>; [30.00%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 221928]:

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 739759]:
# _49 = PHI <start_failure_17(D)(6), default_start_failure(7)>
pp.start_failure = _49;
if (task_finished_18(D) != 0B)
  goto <bb 10>; [70.00%]
else
  goto <bb 9>; [30.00%]

=======is loop:0=========

 bb index 9 
<bb 9> [local count: 221928]:

=======is loop:0=========

 bb index 10 
<bb 10> [local count: 739759]:
# _50 = PHI <task_finished_18(D)(8), default_task_finished(9)>
pp.task_finished = _50;
pp.nr_processes = 0;
pp.output_owner = 0;
pp.shutdown = 0;
_51 = (long unsigned int) n_48;
_52 = calloc (_51, 120);
pp.children = _52;
_53 = (long unsigned int) n_48;
_54 = calloc (_53, 8);
pp.pfd = _54;
_55 = &pp.buffered_output;
strbuf_init (_55, 0);
goto <bb 12>; [100.00%]

=======is loop:1=========

 bb index 11 
<bb 11> [local count: 5985319]:
_56 = pp.children;
_58 = (long unsigned int) i_57;
_59 = _58 * 120;
_60 = _56 + _59;
_61 = &_60->err;
strbuf_init (_61, 0);
_62 = pp.children;
_63 = (long unsigned int) i_57;
_64 = _63 * 120;
_65 = _62 + _64;
_66 = &_65->process;
child_process_init (_66);
_67 = pp.pfd;
_68 = (long unsigned int) i_57;
_69 = _68 * 8;
_70 = _67 + _69;
_70->events = 17;
_71 = pp.pfd;
_72 = (long unsigned int) i_57;
_73 = _72 * 8;
_74 = _71 + _73;
_74->fd = -1;
i_75 = i_57 + 1;

=======is loop:1=========

 bb index 12 
<bb 12> [local count: 6725078]:
# i_57 = PHI <0(10), i_75(11)>
if (n_48 > i_57)
  goto <bb 11>; [89.00%]
else
  goto <bb 13>; [11.00%]

=======is loop:1=========

 bb index 13 
<bb 13> [local count: 777928]:

=======is loop:1=========

 bb index 14 
<bb 14> [local count: 1433741]:

=======is loop:1=========

 bb index 15 
<bb 15> [local count: 13357620]:
goto <bb 32>; [100.00%]

=======is loop:1=========

 bb index 16 
<bb 16> [local count: 118971594]:
_76 = pp.children;
_78 = (long unsigned int) i_77;
_79 = _78 * 120;
_80 = _76 + _79;
_81 = _80->state;
if (_81 == 0)
  goto <bb 19>; [5.50%]
else
  goto <bb 17>; [94.50%]

=======is loop:1=========

 bb index 17 
<bb 17> [local count: 112428156]:
i_82 = i_77 + 1;

=======is loop:1=========

 bb index 18 
<bb 18> [local count: 125895866]:
# i_77 = PHI <0(34), i_82(17)>
_83 = pp.max_processes;
if (i_77 < _83)
  goto <bb 16>; [94.50%]
else
  goto <bb 19>; [5.50%]

=======is loop:1=========

 bb index 19 
<bb 19> [local count: 13467710]:
_84 = pp.max_processes;
if (i_77 == _84)
  goto <bb 20>; [0.04%]
else
  goto <bb 21>; [99.96%]

=======is loop:0=========

 bb index 20 
<bb 20> [local count: 5387]:
printf ("BUG: bookkeeping is hard%s", "");
exit (1);

=======is loop:1=========

 bb index 21 
<bb 21> [local count: 13462323]:
_85 = pp.get_next_task;
_86 = pp.children;
_87 = (long unsigned int) i_77;
_88 = _87 * 120;
_89 = _86 + _88;
_90 = &_89->data;
_91 = pp.data;
_92 = pp.children;
_93 = (long unsigned int) i_77;
_94 = _93 * 120;
_95 = _92 + _94;
_96 = &_95->err;
_97 = pp.children;
_98 = (long unsigned int) i_77;
_99 = _98 * 120;
_100 = _97 + _99;
_101 = &_100->process;
code_102 = _85 (_101, _96, _91, _90);
if (code_102 == 0)
  goto <bb 22>; [34.00%]
else
  goto <bb 23>; [66.00%]

=======is loop:1=========

 bb index 22 
<bb 22> [local count: 4577190]:
_103 = pp.children;
_104 = (long unsigned int) i_77;
_105 = _104 * 120;
_106 = _103 + _105;
_107 = &_106->err;
_108 = &pp.buffered_output;
strbuf_addbuf (_108, _107);
_109 = pp.children;
_110 = (long unsigned int) i_77;
_111 = _110 * 120;
_112 = _109 + _111;
_113 = &_112->err;
strbuf_reset (_113);
goto <bb 28>; [100.00%]

=======is loop:1=========

 bb index 23 
<bb 23> [local count: 8885133]:
_114 = pp.children;
_115 = (long unsigned int) i_77;
_116 = _115 * 120;
_117 = _114 + _116;
_117->process.err = -1;
_118 = pp.children;
_119 = (long unsigned int) i_77;
_120 = _119 * 120;
_121 = _118 + _120;
_121->process.stdout_to_stderr = 1;
_122 = pp.children;
_123 = (long unsigned int) i_77;
_124 = _123 * 120;
_125 = _122 + _124;
_125->process.no_stdin = 1;
_126 = pp.children;
_127 = (long unsigned int) i_77;
_128 = _127 * 120;
_129 = _126 + _128;
_130 = &_129->process;
_131 = start_command (_130);
if (_131 != 0)
  goto <bb 24>; [34.00%]
else
  goto <bb 27>; [66.00%]

=======is loop:1=========

 bb index 24 
<bb 24> [local count: 3020945]:
_132 = pp.start_failure;
_133 = pp.children;
_134 = (long unsigned int) i_77;
_135 = _134 * 120;
_136 = _133 + _135;
_137 = &_136->data;
_138 = pp.data;
_139 = pp.children;
_140 = (long unsigned int) i_77;
_141 = _140 * 120;
_142 = _139 + _141;
_143 = &_142->err;
_144 = pp.children;
_145 = (long unsigned int) i_77;
_146 = _145 * 120;
_147 = _144 + _146;
_148 = &_147->process;
code_149 = _132 (_148, _143, _138, _137);
_150 = pp.children;
_151 = (long unsigned int) i_77;
_152 = _151 * 120;
_153 = _150 + _152;
_154 = &_153->err;
_155 = &pp.buffered_output;
strbuf_addbuf (_155, _154);
_156 = pp.children;
_157 = (long unsigned int) i_77;
_158 = _157 * 120;
_159 = _156 + _158;
_160 = &_159->err;
strbuf_reset (_160);
if (code_149 != 0)
  goto <bb 25>; [50.00%]
else
  goto <bb 26>; [50.00%]

=======is loop:1=========

 bb index 25 
<bb 25> [local count: 1510473]:
pp.shutdown = 1;

=======is loop:1=========

 bb index 26 
<bb 26> [local count: 3020945]:
goto <bb 28>; [100.00%]

=======is loop:1=========

 bb index 27 
<bb 27> [local count: 5864188]:
_161 = pp.nr_processes;
_162 = _161 + 1;
pp.nr_processes = _162;
_163 = pp.children;
_164 = (long unsigned int) i_77;
_165 = _164 * 120;
_166 = _163 + _165;
_166->state = 1;
_167 = pp.children;
_168 = (long unsigned int) i_77;
_169 = _168 * 120;
_170 = _167 + _169;
_171 = pp.pfd;
_172 = (long unsigned int) i_77;
_173 = _172 * 8;
_174 = _171 + _173;
_175 = _170->process.err;
_174->fd = _175;

=======is loop:1=========

 bb index 28 
<bb 28> [local count: 13462323]:
# _176 = PHI <1(22), code_149(26), 0(27)>
_312 = _176;
code_22 = _312;
if (code_22 == 0)
  goto <bb 29>; [33.00%]
else
  goto <bb 30>; [67.00%]

=======is loop:1=========

 bb index 29 
<bb 29> [local count: 4442567]:
// predicted unlikely by continue predictor.
i_25 = i_8 + 1;
goto <bb 32>; [100.00%]

=======is loop:1=========

 bb index 30 
<bb 30> [local count: 9019757]:
if (code_22 < 0)
  goto <bb 31>; [25.50%]
else
  goto <bb 35>; [74.50%]

=======is loop:1=========

 bb index 31 
<bb 31> [local count: 2300038]:
pp.shutdown = 1;
_1 = -code_22;
kill_children (&pp, _1);
goto <bb 35>; [100.00%]

=======is loop:1=========

 bb index 32 
<bb 32> [local count: 17800187]:
# i_8 = PHI <0(15), i_25(29)>
if (i_8 <= 3)
  goto <bb 33>; [80.00%]
else
  goto <bb 35>; [20.00%]

=======is loop:1=========

 bb index 33 
<bb 33> [local count: 14240149]:
_2 = BIT_FIELD_REF <pp, 8, 448>;
_3 = _2 & 1;
if (_3 == 0)
  goto <bb 34>; [97.25%]
else
  goto <bb 35>; [2.75%]

=======is loop:1=========

 bb index 34 
<bb 34> [local count: 13848545]:
_4 = pp.nr_processes;
_5 = pp.max_processes;
if (_4 < _5)
  goto <bb 18>; [97.25%]
else
  goto <bb 35>; [2.75%]

=======is loop:1=========

 bb index 35 
<bb 35> [local count: 13352233]:
_6 = pp.nr_processes;
if (_6 == 0)
  goto <bb 57>; [5.50%]
else
  goto <bb 36>; [94.50%]

=======is loop:1=========

 bb index 36 
<bb 36> [local count: 12617860]:
pp_buffer_stderr (&pp, 100);
pp_output (&pp);
n_177 = pp.max_processes;
goto <bb 52>; [100.00%]

=======is loop:1=========

 bb index 37 
<bb 37> [local count: 1014686026]:
_178 = pp.children;
_180 = (long unsigned int) i_179;
_181 = _180 * 120;
_182 = _178 + _181;
_183 = _182->state;
if (_183 == 2)
  goto <bb 40>; [5.50%]
else
  goto <bb 38>; [94.50%]

=======is loop:1=========

 bb index 38 
<bb 38> [local count: 958878295]:
i_184 = i_179 + 1;

=======is loop:1=========

 bb index 39 
<bb 39> [local count: 1073741824]:
# i_179 = PHI <i_184(38), 0(53)>
_185 = pp.max_processes;
if (i_179 < _185)
  goto <bb 37>; [94.50%]
else
  goto <bb 40>; [5.50%]

=======is loop:1=========

 bb index 40 
<bb 40> [local count: 114863531]:
_186 = pp.max_processes;
if (i_179 == _186)
  goto <bb 54>; [3.66%]
else
  goto <bb 41>; [96.34%]

=======is loop:1=========

 bb index 41 
<bb 41> [local count: 110659526]:
_187 = pp.children;
_188 = (long unsigned int) i_179;
_189 = _188 * 120;
_190 = _187 + _189;
_191 = &_190->process;
_270 = _191->argv;
_271 = *_270;
_272 = _191->pid;
ret_273 = wait_or_whine (_272, _271, 0);
_274 = &_191->args;
argv_array_clear (_274);
_275 = &_191->env_array;
argv_array_clear (_275);
_318 = ret_273;
code_192 = _318;
_193 = pp.task_finished;
_194 = pp.children;
_195 = (long unsigned int) i_179;
_196 = _195 * 120;
_197 = _194 + _196;
_198 = &_197->data;
_199 = pp.data;
_200 = pp.children;
_201 = (long unsigned int) i_179;
_202 = _201 * 120;
_203 = _200 + _202;
_204 = &_203->err;
_205 = pp.children;
_206 = (long unsigned int) i_179;
_207 = _206 * 120;
_208 = _205 + _207;
_209 = &_208->process;
code_210 = _193 (code_192, _209, _204, _199, _198);
if (code_210 != 0)
  goto <bb 42>; [50.00%]
else
  goto <bb 43>; [50.00%]

=======is loop:1=========

 bb index 42 
<bb 42> [local count: 55329763]:

=======is loop:1=========

 bb index 43 
<bb 43> [local count: 110659526]:
# result_267 = PHI <result_268(41), code_210(42)>
if (code_210 < 0)
  goto <bb 54>; [3.66%]
else
  goto <bb 44>; [96.34%]

=======is loop:1=========

 bb index 44 
<bb 44> [local count: 106609387]:
_211 = pp.nr_processes;
_212 = _211 + -1;
pp.nr_processes = _212;
_213 = pp.children;
_214 = (long unsigned int) i_179;
_215 = _214 * 120;
_216 = _213 + _215;
_216->state = 0;
_217 = pp.pfd;
_218 = (long unsigned int) i_179;
_219 = _218 * 8;
_220 = _217 + _219;
_220->fd = -1;
_221 = pp.children;
_222 = (long unsigned int) i_179;
_223 = _222 * 120;
_224 = _221 + _223;
_225 = &_224->process;
child_process_init (_225);
_226 = pp.output_owner;
if (i_179 != _226)
  goto <bb 45>; [84.00%]
else
  goto <bb 46>; [16.00%]

=======is loop:1=========

 bb index 45 
<bb 45> [local count: 89551885]:
_227 = pp.children;
_228 = (long unsigned int) i_179;
_229 = _228 * 120;
_230 = _227 + _229;
_231 = &_230->err;
_232 = &pp.buffered_output;
strbuf_addbuf (_232, _231);
_233 = pp.children;
_234 = (long unsigned int) i_179;
_235 = _234 * 120;
_236 = _233 + _235;
_237 = &_236->err;
strbuf_reset (_237);
goto <bb 51>; [100.00%]

=======is loop:1=========

 bb index 46 
<bb 46> [local count: 17057502]:
_238 = stderr;
_239 = pp.children;
_240 = (long unsigned int) i_179;
_241 = _240 * 120;
_242 = _239 + _241;
_243 = _242->err.buf;
fputs (_243, _238);
_244 = pp.children;
_245 = (long unsigned int) i_179;
_246 = _245 * 120;
_247 = _244 + _246;
_248 = &_247->err;
strbuf_reset (_248);
_249 = stderr;
_250 = pp.buffered_output.buf;
fputs (_250, _249);
_251 = &pp.buffered_output;
strbuf_reset (_251);
goto <bb 49>; [100.00%]

=======is loop:1=========

 bb index 47 
<bb 47> [local count: 150683236]:
_252 = pp.children;
_253 = pp.output_owner;
_255 = _253 + i_254;
_256 = _255 % n_177;
_257 = (long unsigned int) _256;
_258 = _257 * 120;
_259 = _252 + _258;
_260 = _259->state;
if (_260 == 1)
  goto <bb 50>; [5.50%]
else
  goto <bb 48>; [94.50%]

=======is loop:1=========

 bb index 48 
<bb 48> [local count: 142395658]:
i_261 = i_254 + 1;

=======is loop:1=========

 bb index 49 
<bb 49> [local count: 159453160]:
# i_254 = PHI <0(46), i_261(48)>
if (n_177 > i_254)
  goto <bb 47>; [94.50%]
else
  goto <bb 50>; [5.50%]

=======is loop:1=========

 bb index 50 
<bb 50> [local count: 17057502]:
_262 = pp.output_owner;
_263 = i_254 + _262;
_264 = _263 % n_177;
pp.output_owner = _264;

=======is loop:1=========

 bb index 51 
<bb 51> [local count: 106609387]:
# result_269 = PHI <result_267(45), result_267(50)>

=======is loop:1=========

 bb index 52 
<bb 52> [local count: 119227248]:
# result_268 = PHI <0(36), result_269(51)>
_265 = pp.nr_processes;
if (_265 > 0)
  goto <bb 53>; [96.34%]
else
  goto <bb 54>; [3.66%]

=======is loop:1=========

 bb index 53 
<bb 53> [local count: 114863530]:
goto <bb 39>; [100.00%]

=======is loop:1=========

 bb index 54 
<bb 54> [local count: 12617862]:
# result_266 = PHI <result_268(40), result_267(43), result_268(52)>
_331 = result_266;
code_29 = _331;
if (code_29 != 0)
  goto <bb 55>; [5.50%]
else
  goto <bb 15>; [94.50%]

=======is loop:1=========

 bb index 55 
<bb 55> [local count: 693982]:
pp.shutdown = 1;
if (code_29 < 0)
  goto <bb 56>; [5.50%]
else
  goto <bb 14>; [94.50%]

=======is loop:1=========

 bb index 56 
<bb 56> [local count: 38169]:
_7 = -code_29;
kill_children (&pp, _7);
goto <bb 13>; [100.00%]

=======is loop:0=========

 bb index 57 
<bb 57> [local count: 734373]:
pp_cleanup (&pp);
pp ={v} {CLOBBER};
return 0;

=======Mapping node_fun:kill_children=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 118111600]:
n_16 = pp_15(D)->max_processes;
goto <bb 6>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 955630225]:
_1 = pp_15(D)->children;
_2 = (long unsigned int) i_11;
_3 = _2 * 120;
_4 = _1 + _3;
_5 = _4->state;
if (_5 == 1)
  goto <bb 4>; [20.24%]
else
  goto <bb 5>; [79.76%]

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 193419556]:
_6 = pp_15(D)->children;
_7 = (long unsigned int) i_11;
_8 = _7 * 120;
_9 = _6 + _8;
_10 = _9->process.pid;
kill (_10, signo_17(D));

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 955630227]:
i_19 = i_11 + 1;

=======is loop:1=========

 bb index 6 
<bb 6> [local count: 1073741824]:
# i_11 = PHI <0(2), i_19(5)>
if (i_11 < n_16)
  goto <bb 3>; [89.00%]
else
  goto <bb 7>; [11.00%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 118111600]:
return;

=======Mapping node_fun:default_task_finished=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 241635845]:
if (result_14(D) == 0)
  goto <bb 6>; [51.12%]
else
  goto <bb 3>; [48.88%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 118111600]:
strbuf_addf (err_16(D), "A child failed with return code %d:", result_14(D));
goto <bb 5>; [100.00%]

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 955630225]:
_1 = cp_18(D)->argv;
_2 = (long unsigned int) i_11;
_3 = _2 * 8;
_4 = _1 + _3;
_5 = *_4;
strbuf_addf (err_16(D), " %s", _5);
i_20 = i_11 + 1;

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 1073741824]:
# i_11 = PHI <0(3), i_20(4)>
_6 = cp_18(D)->argv;
_7 = (long unsigned int) i_11;
_8 = _7 * 8;
_9 = _6 + _8;
_10 = *_9;
if (_10 != 0B)
  goto <bb 4>; [89.00%]
else
  goto <bb 6>; [11.00%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 241635845]:
return 0;

=======Mapping node_fun:default_start_failure=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 118111600]:
strbuf_addstr (err_14(D), "Starting a child failed:");
goto <bb 4>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 955630225]:
_1 = cp_16(D)->argv;
_2 = (long unsigned int) i_11;
_3 = _2 * 8;
_4 = _1 + _3;
_5 = *_4;
strbuf_addf (err_14(D), " %s", _5);
i_18 = i_11 + 1;

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 1073741824]:
# i_11 = PHI <0(2), i_18(3)>
_6 = cp_16(D)->argv;
_7 = (long unsigned int) i_11;
_8 = _7 * 8;
_9 = _6 + _8;
_10 = *_9;
if (_10 != 0B)
  goto <bb 3>; [89.00%]
else
  goto <bb 5>; [11.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 118111600]:
return 0;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    gimple malloc count : 2 [0m
[40;34m    gimple free   count : 0 [0m
[40;34m    all ptable point : 69 [0m
[40;34m    analyzable ptable point : 67 [0m
[40;34m    used_stmt array stack totalsize of : 0.002568 mb[0m
[40;34m    collect time: : 0.002538 s [0m
[40;34m    algorithm time: 0.117600 s [0m
[40;34m    gimple stmt count : : 419 [0m
[40;34m    this report analysis in Fri Feb 18 06:36:44 2022
 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.00 (  0%)  2157k ( 57%)
 phase opt and generate             :   0.08 (100%)   0.11 (100%)   0.18 (100%)  1518k ( 40%)
 callgraph functions expansion      :   0.05 ( 62%)   0.02 ( 18%)   0.05 ( 28%)  1054k ( 28%)
 tree CFG cleanup                   :   0.00 (  0%)   0.00 (  0%)   0.01 (  6%)  2440  (  0%)
 tree operand scan                  :   0.00 (  0%)   0.01 (  9%)   0.00 (  0%)    93k (  2%)
 complete unrolling                 :   0.01 ( 12%)   0.00 (  0%)   0.00 (  0%)    12k (  0%)
 post expand cleanups               :   0.00 (  0%)   0.00 (  0%)   0.01 (  6%)  7192  (  0%)
 dead store elim1                   :   0.01 ( 13%)   0.00 (  0%)   0.00 (  0%)    10k (  0%)
 combiner                           :   0.00 (  0%)   0.01 (  9%)   0.01 (  6%)    33k (  1%)
 final                              :   0.00 (  0%)   0.00 (  0%)   0.01 (  6%)    36k (  1%)
 plugin execution                   :   0.06 ( 75%)   0.09 ( 82%)   0.13 ( 72%)  3984  (  0%)
 rest of compilation                :   0.00 (  0%)   0.00 (  0%)   0.01 (  6%)    28k (  1%)
 TOTAL                              :   0.08          0.11          0.18         3777k
/usr/bin/ld: /tmp/ccnhJ5bH.ltrans0.ltrans.o: in function `task_finished':
<artificial>:(.text+0x12): undefined reference to `strbuf_addf'
/usr/bin/ld: /tmp/ccnhJ5bH.ltrans0.ltrans.o: in function `no_job':
<artificial>:(.text+0x32): undefined reference to `strbuf_addf'
/usr/bin/ld: /tmp/ccnhJ5bH.ltrans0.ltrans.o: in function `default_task_finished':
<artificial>:(.text+0x64): undefined reference to `strbuf_addf'
/usr/bin/ld: <artificial>:(.text+0x8d): undefined reference to `strbuf_addf'
/usr/bin/ld: /tmp/ccnhJ5bH.ltrans0.ltrans.o: in function `default_start_failure':
<artificial>:(.text+0xc2): undefined reference to `strbuf_addstr'
/usr/bin/ld: <artificial>:(.text+0xeb): undefined reference to `strbuf_addf'
/usr/bin/ld: /tmp/ccnhJ5bH.ltrans0.ltrans.o: in function `run_processes_parallel':
<artificial>:(.text+0x19f): undefined reference to `trace_printf'
/usr/bin/ld: <artificial>:(.text+0x224): undefined reference to `strbuf_init'
/usr/bin/ld: <artificial>:(.text+0x260): undefined reference to `strbuf_init'
/usr/bin/ld: <artificial>:(.text+0x273): undefined reference to `child_process_init'
/usr/bin/ld: <artificial>:(.text+0x2a3): undefined reference to `online_cpus'
/usr/bin/ld: <artificial>:(.text+0x327): undefined reference to `start_command'
/usr/bin/ld: <artificial>:(.text+0x374): undefined reference to `strbuf_addbuf'
/usr/bin/ld: <artificial>:(.text+0x387): undefined reference to `strbuf_reset'
/usr/bin/ld: <artificial>:(.text+0x3a6): undefined reference to `pp_buffer_stderr'
/usr/bin/ld: <artificial>:(.text+0x3b5): undefined reference to `pp_output'
/usr/bin/ld: <artificial>:(.text+0x40c): undefined reference to `strbuf_addbuf'
/usr/bin/ld: <artificial>:(.text+0x41f): undefined reference to `strbuf_reset'
/usr/bin/ld: <artificial>:(.text+0x48d): undefined reference to `wait_or_whine'
/usr/bin/ld: <artificial>:(.text+0x4a0): undefined reference to `argv_array_clear'
/usr/bin/ld: <artificial>:(.text+0x4af): undefined reference to `argv_array_clear'
/usr/bin/ld: <artificial>:(.text+0x50d): undefined reference to `child_process_init'
/usr/bin/ld: <artificial>:(.text+0x532): undefined reference to `strbuf_addbuf'
/usr/bin/ld: <artificial>:(.text+0x545): undefined reference to `strbuf_reset'
/usr/bin/ld: <artificial>:(.text+0x60d): undefined reference to `strbuf_reset'
/usr/bin/ld: <artificial>:(.text+0x62d): undefined reference to `strbuf_reset'
/usr/bin/ld: <artificial>:(.text+0x6c9): undefined reference to `pp_cleanup'
/usr/bin/ld: /tmp/ccnhJ5bH.ltrans0.ltrans.o: in function `parallel_next':
<artificial>:(.text+0x6fc): undefined reference to `argv_array_pushv'
/usr/bin/ld: <artificial>:(.text+0x70e): undefined reference to `strbuf_addf'
/usr/bin/ld: /tmp/ccnhJ5bH.ltrans0.ltrans.o: in function `main':
<artificial>:(.text+0x76c): undefined reference to `empty_argv'
/usr/bin/ld: <artificial>:(.text+0x775): undefined reference to `empty_argv'
/usr/bin/ld: <artificial>:(.text+0x851): undefined reference to `start_command'
/usr/bin/ld: <artificial>:(.text+0x888): undefined reference to `run_command'
collect2: error: ld returned 1 exit status
