../Compiler/newplugin.so 11.2.0 
In file included from ./benchmarks/git/use_after_free_2/git_uaf_2.c:11:
./benchmarks/git/use_after_free_2/../git.h: In function ‘copy_array’:
./benchmarks/git/use_after_free_2/../git.h:161:17: warning: implicit declaration of function ‘memcpy’ [-Wimplicit-function-declaration]
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                 ^~~~~~
./benchmarks/git/use_after_free_2/../git.h:1:1: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
  +++ |+#include <string.h>
    1 | #define STRING_LIST_INIT_NODUP { NULL, 0, 0, 0, NULL }
./benchmarks/git/use_after_free_2/../git.h:161:17: warning: incompatible implicit declaration of built-in function ‘memcpy’ [-Wbuiltin-declaration-mismatch]
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                 ^~~~~~
./benchmarks/git/use_after_free_2/../git.h:161:17: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
./benchmarks/git/use_after_free_2/../git.h:161:34: warning: implicit declaration of function ‘st_mult’ [-Wimplicit-function-declaration]
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                                  ^~~~~~~
./benchmarks/git/use_after_free_2/../git.h: In function ‘move_array’:
./benchmarks/git/use_after_free_2/../git.h:169:17: warning: implicit declaration of function ‘memmove’ [-Wimplicit-function-declaration]
  169 |                 memmove(dst, src, st_mult(size, n));
      |                 ^~~~~~~
./benchmarks/git/use_after_free_2/../git.h:169:17: note: include ‘<string.h>’ or provide a declaration of ‘memmove’
./benchmarks/git/use_after_free_2/../git.h:169:17: warning: incompatible implicit declaration of built-in function ‘memmove’ [-Wbuiltin-declaration-mismatch]
./benchmarks/git/use_after_free_2/../git.h:169:17: note: include ‘<string.h>’ or provide a declaration of ‘memmove’
In file included from ./benchmarks/git/use_after_free_2/git_uaf_2.c:10:
./benchmarks/git/use_after_free_2/../git.h: In function ‘xstrdup_or_null’:
./benchmarks/git/use_after_free_2/../stdio.h:138:20: warning: implicit declaration of function ‘strdup’ [-Wimplicit-function-declaration]
  138 | #define xstrdup(a) strdup(a)
      |                    ^~~~~~
./benchmarks/git/use_after_free_2/../git.h:174:22: note: in expansion of macro ‘xstrdup’
  174 |         return str ? xstrdup(str) : NULL;
      |                      ^~~~~~~
./benchmarks/git/use_after_free_2/../stdio.h:138:20: warning: incompatible implicit declaration of built-in function ‘strdup’ [-Wbuiltin-declaration-mismatch]
  138 | #define xstrdup(a) strdup(a)
      |                    ^~~~~~
./benchmarks/git/use_after_free_2/../git.h:174:22: note: in expansion of macro ‘xstrdup’
  174 |         return str ? xstrdup(str) : NULL;
      |                      ^~~~~~~
In file included from ./benchmarks/git/use_after_free_2/git_uaf_2.c:11:
./benchmarks/git/use_after_free_2/../git.h: At top level:
./benchmarks/git/use_after_free_2/../git.h:236:62: warning: ‘struct archiver_args’ declared inside parameter list will not be visible outside of this definition or declaration
  236 |         int (*write_archive)(const struct archiver *, struct archiver_args *);
      |                                                              ^~~~~~~~~~~~~
./benchmarks/git/use_after_free_2/../git.h: In function ‘strbuf_swap’:
./benchmarks/git/use_after_free_2/../git.h:126:9: warning: incompatible implicit declaration of built-in function ‘memcpy’ [-Wbuiltin-declaration-mismatch]
  126 |         memcpy(_swap_buffer, _swap_a_ptr, sizeof(a));           \
      |         ^~~~~~
./benchmarks/git/use_after_free_2/../git.h:407:9: note: in expansion of macro ‘SWAP’
  407 |         SWAP(*a, *b);
      |         ^~~~
./benchmarks/git/use_after_free_2/../git.h:126:9: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
  126 |         memcpy(_swap_buffer, _swap_a_ptr, sizeof(a));           \
      |         ^~~~~~
./benchmarks/git/use_after_free_2/../git.h:407:9: note: in expansion of macro ‘SWAP’
  407 |         SWAP(*a, *b);
      |         ^~~~
./benchmarks/git/use_after_free_2/git_uaf_2.c: In function ‘default_start_failure’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:138:9: warning: implicit declaration of function ‘strbuf_addstr’ [-Wimplicit-function-declaration]
  138 |         strbuf_addstr(err, "Starting a child failed:");
      |         ^~~~~~~~~~~~~
./benchmarks/git/use_after_free_2/git_uaf_2.c:140:17: warning: implicit declaration of function ‘strbuf_addf’ [-Wimplicit-function-declaration]
  140 |                 strbuf_addf(err, " %s", cp->argv[i]);
      |                 ^~~~~~~~~~~
./benchmarks/git/use_after_free_2/git_uaf_2.c: In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:174:21: warning: implicit declaration of function ‘online_cpus’ [-Wimplicit-function-declaration]
  174 |                 n = online_cpus();
      |                     ^~~~~~~~~~~
./benchmarks/git/use_after_free_2/git_uaf_2.c:178:9: warning: implicit declaration of function ‘trace_printf’ [-Wimplicit-function-declaration]
  178 |         trace_printf("run_processes_parallel: preparing to run up to %d tasks", n);
      |         ^~~~~~~~~~~~
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: implicit declaration of function ‘strbuf_init’ [-Wimplicit-function-declaration]
  193 |         strbuf_init(&pp->buffered_output, 0);
      |         ^~~~~~~~~~~
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: implicit declaration of function ‘child_process_init’ [-Wimplicit-function-declaration]
  197 |                 child_process_init(&pp->children[i].process);
      |                 ^~~~~~~~~~~~~~~~~~
./benchmarks/git/use_after_free_2/git_uaf_2.c: In function ‘pp_start_one’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:227:17: warning: implicit declaration of function ‘strbuf_addbuf’ [-Wimplicit-function-declaration]
  227 |                 strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);
      |                 ^~~~~~~~~~~~~
./benchmarks/git/use_after_free_2/git_uaf_2.c:228:17: warning: implicit declaration of function ‘strbuf_reset’ [-Wimplicit-function-declaration]
  228 |                 strbuf_reset(&pp->children[i].err);
      |                 ^~~~~~~~~~~~
./benchmarks/git/use_after_free_2/git_uaf_2.c:235:13: warning: implicit declaration of function ‘start_command’ [-Wimplicit-function-declaration]
  235 |         if (start_command(&pp->children[i].process)) {
      |             ^~~~~~~~~~~~~
./benchmarks/git/use_after_free_2/git_uaf_2.c: In function ‘kill_children’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:259:25: warning: implicit declaration of function ‘kill’ [-Wimplicit-function-declaration]
  259 |                         kill(pp->children[i].process.pid, signo);
      |                         ^~~~
./benchmarks/git/use_after_free_2/git_uaf_2.c: In function ‘pp_collect_finished’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:275:24: warning: implicit declaration of function ‘finish_command’ [-Wimplicit-function-declaration]
  275 |                 code = finish_command(&pp->children[i].process);
      |                        ^~~~~~~~~~~~~~
./benchmarks/git/use_after_free_2/git_uaf_2.c: In function ‘finish_command’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:15: warning: implicit declaration of function ‘wait_or_whine’ [-Wimplicit-function-declaration]
  321 |     int ret = wait_or_whine(cmd->pid, cmd->argv[0], 0);
      |               ^~~~~~~~~~~~~
./benchmarks/git/use_after_free_2/git_uaf_2.c:322:5: warning: implicit declaration of function ‘child_process_clear’ [-Wimplicit-function-declaration]
  322 |     child_process_clear(cmd);
      |     ^~~~~~~~~~~~~~~~~~~
./benchmarks/git/use_after_free_2/git_uaf_2.c: At top level:
./benchmarks/git/use_after_free_2/git_uaf_2.c:326:6: warning: conflicting types for ‘child_process_clear’; have ‘void(struct child_process *)’
  326 | void child_process_clear(struct child_process *child)
      |      ^~~~~~~~~~~~~~~~~~~
./benchmarks/git/use_after_free_2/git_uaf_2.c:322:5: note: previous implicit declaration of ‘child_process_clear’ with type ‘void(struct child_process *)’
  322 |     child_process_clear(cmd);
      |     ^~~~~~~~~~~~~~~~~~~
./benchmarks/git/use_after_free_2/git_uaf_2.c: In function ‘child_process_clear’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:328:9: warning: implicit declaration of function ‘argv_array_clear’ [-Wimplicit-function-declaration]
  328 |         argv_array_clear(&child->args);
      |         ^~~~~~~~~~~~~~~~
./benchmarks/git/use_after_free_2/git_uaf_2.c: In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:361:17: warning: implicit declaration of function ‘pp_buffer_stderr’ [-Wimplicit-function-declaration]
  361 |                 pp_buffer_stderr(&pp, output_timeout);
      |                 ^~~~~~~~~~~~~~~~
./benchmarks/git/use_after_free_2/git_uaf_2.c:362:17: warning: implicit declaration of function ‘pp_output’ [-Wimplicit-function-declaration]
  362 |                 pp_output(&pp);
      |                 ^~~~~~~~~
./benchmarks/git/use_after_free_2/git_uaf_2.c:371:9: warning: implicit declaration of function ‘pp_cleanup’ [-Wimplicit-function-declaration]
  371 |         pp_cleanup(&pp);
      |         ^~~~~~~~~~
./benchmarks/git/use_after_free_2/git_uaf_2.c: In function ‘parallel_next’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:385:9: warning: implicit declaration of function ‘argv_array_pushv’ [-Wimplicit-function-declaration]
  385 |         argv_array_pushv(&cp->args, d->argv);
      |         ^~~~~~~~~~~~~~~~
./benchmarks/git/use_after_free_2/git_uaf_2.c: In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:419:14: warning: implicit declaration of function ‘strcmp’ [-Wimplicit-function-declaration]
  419 |         if (!strcmp(argv[1], "start-command-ENOENT")) {
      |              ^~~~~~
./benchmarks/git/use_after_free_2/git_uaf_2.c:12:1: note: include ‘<string.h>’ or provide a declaration of ‘strcmp’
   11 | #include "../git.h"
  +++ |+#include <string.h>
   12 | 
./benchmarks/git/use_after_free_2/git_uaf_2.c:426:22: warning: implicit declaration of function ‘run_command’; did you mean ‘finish_command’? [-Wimplicit-function-declaration]
  426 |                 exit(run_command(&proc));
      |                      ^~~~~~~~~~~
      |                      finish_command

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.00 (  0%)  1298k ( 43%)
 phase parsing                      :   0.03 ( 75%)   0.03 ( 60%)   0.06 ( 67%)  1197k ( 39%)
 phase opt and generate             :   0.01 ( 25%)   0.02 ( 40%)   0.03 ( 33%)   533k ( 18%)
 callgraph optimization             :   0.00 (  0%)   0.01 ( 20%)   0.01 ( 11%)     0  (  0%)
 callgraph ipa passes               :   0.01 ( 25%)   0.01 ( 20%)   0.03 ( 33%)   251k (  8%)
 lto stream compression             :   0.01 ( 25%)   0.00 (  0%)   0.01 ( 11%)     0  (  0%)
 preprocessing                      :   0.01 ( 25%)   0.01 ( 20%)   0.02 ( 22%)   348k ( 11%)
 lexical analysis                   :   0.01 ( 25%)   0.00 (  0%)   0.01 ( 11%)     0  (  0%)
 parser struct body                 :   0.00 (  0%)   0.01 ( 20%)   0.00 (  0%)    81k (  3%)
 parser function body               :   0.01 ( 25%)   0.01 ( 20%)   0.01 ( 11%)   150k (  5%)
 parser inl. func. body             :   0.00 (  0%)   0.00 (  0%)   0.01 ( 11%)    23k (  1%)
 tree gimplify                      :   0.00 (  0%)   0.01 ( 20%)   0.00 (  0%)   147k (  5%)
 tree PTA                           :   0.00 (  0%)   0.00 (  0%)   0.01 ( 11%)  8752  (  0%)
 plugin execution                   :   0.00 (  0%)   0.00 (  0%)   0.01 ( 11%)     0  (  0%)
 TOTAL                              :   0.04          0.05          0.09         3039k
../Compiler/newplugin.so 11.2.0 

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.01 (100%)   0.00 (  0%)   0.01 (100%)  2157k ( 95%)
 TOTAL                              :   0.01          0.00          0.01         2267k
../Compiler/newplugin.so 11.2.0 
=======ipa_pta=========
=============== The first stage : Point of interest stmt collect =================
=======node_fun:main=========
node:= 2 
 	next_branch :=16
	next_branch :=3
node:= 3 
 	next_branch :=4
	next_branch :=7
addr_expraddr_expraddr_expraddr_expraddr_expr------strcmp--
node:= 4 
 	next_branch :=5
	next_branch :=6
addr_expraddr_expraddr_expraddr_expraddr_expr------start_command--
node:= 5 
 	next_branch :=16
	next_branch :=6
addr_expraddr_expraddr_expraddr_expraddr_expr------__errno_location--
node:= 6 
 	next_branch :=16
addr_expraddr_expraddr_expraddr_expraddr_expr------fprintf--
node:= 7 
 	next_branch :=8
	next_branch :=9
addr_expraddr_expraddr_expraddr_expraddr_expr------strcmp--
node:= 8 
 addr_expraddr_expraddr_expraddr_expraddr_expr------run_command--
addr_expraddr_expraddr_expraddr_expraddr_expr------exit--
node:= 9 
 	next_branch :=10
	next_branch :=11
addr_expraddr_expraddr_expraddr_expraddr_expr------atoi--
addr_expraddr_expraddr_expraddr_expraddr_expr------strcmp--
node:= 10 
 addr_expraddr_expraddr_expraddr_expraddr_expr------run_processes_parallel--
addr_expraddr_expraddr_expraddr_expraddr_expr------exit--
node:= 11 
 	next_branch :=12
	next_branch :=13
addr_expraddr_expraddr_expraddr_expraddr_expr------strcmp--
node:= 12 
 addr_expraddr_expraddr_expraddr_expraddr_expr------run_processes_parallel--
addr_expraddr_expraddr_expraddr_expraddr_expr------exit--
node:= 13 
 	next_branch :=14
	next_branch :=15
addr_expraddr_expraddr_expraddr_expraddr_expr------strcmp--
node:= 14 
 addr_expraddr_expraddr_expraddr_expraddr_expr------run_processes_parallel--
addr_expraddr_expraddr_expraddr_expraddr_expr------exit--
node:= 15 
 	next_branch :=16
addr_expraddr_expraddr_expraddr_expraddr_expr------__builtin_fwrite--
=======node_fun:task_finished=========
addr_expraddr_expraddr_expraddr_expraddr_expr------strbuf_addf--
=======node_fun:no_job=========
addr_expraddr_expraddr_expraddr_expraddr_expr------strbuf_addf--
=======node_fun:parallel_next=========
node:= 2 
 	next_branch :=4
	next_branch :=3
node:= 3 
 	next_branch :=4
addr_expraddr_expraddr_expraddr_expraddr_expr------argv_array_pushv--
addr_expraddr_expraddr_expraddr_expraddr_expr------strbuf_addf--
=======node_fun:run_processes_parallel=========
node:= 2 
 	next_branch :=3
addr_expraddr_expraddr_expraddr_expraddr_expr------pp_init--
node:= 3 
 	next_branch :=17
node:= 17 
 	next_branch :=16
node:= 16 
 	next_branch :=8
node:= 4 
 	next_branch :=5
	next_branch :=6
addr_expraddr_expraddr_expraddr_expraddr_expr------pp_start_one--
node:= 5 
 	next_branch :=8
node:= 6 
 	next_branch :=7
	next_branch :=11
node:= 7 
 	next_branch :=11
addr_expraddr_expraddr_expraddr_expraddr_expr------kill_children--
node:= 8 
 	next_branch :=9
	next_branch :=11
node:= 9 
 	next_branch :=10
	next_branch :=11
node:= 10 
 	next_branch :=4
	next_branch :=11
node:= 11 
 	next_branch :=15
	next_branch :=12
node:= 12 
 	next_branch :=13
	next_branch :=19
addr_expraddr_expraddr_expraddr_expraddr_expr------pp_buffer_stderr--
addr_expraddr_expraddr_expraddr_expraddr_expr------pp_output--
addr_expraddr_expraddr_expraddr_expraddr_expr------pp_collect_finished--
node:= 19 
 	next_branch :=16
node:= 13 
 	next_branch :=14
	next_branch :=18
node:= 18 
 	next_branch :=17
node:= 14 
 	next_branch :=3
addr_expraddr_expraddr_expraddr_expraddr_expr------kill_children--
addr_expraddr_expraddr_expraddr_expraddr_expr------pp_cleanup--
=======node_fun:child_process_clear=========
addr_expraddr_expraddr_expraddr_expraddr_expr------argv_array_clear--
addr_expraddr_expraddr_expraddr_expraddr_expr------argv_array_clear--
=======node_fun:finish_command=========
addr_expraddr_expraddr_expraddr_expraddr_expr------wait_or_whine--
addr_expraddr_expraddr_expraddr_expraddr_expr------child_process_clear--
=======node_fun:pp_collect_finished=========
node:= 2 
 	next_branch :=19
node:= 3 
 	next_branch :=6
	next_branch :=4
node:= 4 
 	next_branch :=5
node:= 5 
 	next_branch :=3
	next_branch :=6
node:= 6 
 	next_branch :=18
	next_branch :=7
node:= 7 
 	next_branch :=8
	next_branch :=9
addr_expraddr_expraddr_expraddr_expraddr_expr------finish_command--
node:= 8 
 	next_branch :=9
node:= 9 
 	next_branch :=18
	next_branch :=10
node:= 10 
 	next_branch :=11
	next_branch :=12
addr_expraddr_expraddr_expraddr_expraddr_expr------child_process_init--
node:= 11 
 	next_branch :=17
addr_expraddr_expraddr_expraddr_expraddr_expr------strbuf_addbuf--
addr_expraddr_expraddr_expraddr_expraddr_expr------strbuf_reset--
node:= 12 
 	next_branch :=15
addr_expraddr_expraddr_expraddr_expraddr_expr------fputs--
addr_expraddr_expraddr_expraddr_expraddr_expr------strbuf_reset--
addr_expraddr_expraddr_expraddr_expraddr_expr------fputs--
addr_expraddr_expraddr_expraddr_expraddr_expr------strbuf_reset--
node:= 13 
 	next_branch :=16
	next_branch :=14
node:= 14 
 	next_branch :=15
node:= 15 
 	next_branch :=13
	next_branch :=16
node:= 16 
 	next_branch :=17
node:= 17 
 	next_branch :=19
node:= 19 
 	next_branch :=20
	next_branch :=18
node:= 20 
 	next_branch :=5
=======node_fun:kill_children=========
node:= 2 
 	next_branch :=6
node:= 3 
 	next_branch :=4
	next_branch :=5
node:= 4 
 	next_branch :=5
addr_expraddr_expraddr_expraddr_expraddr_expr------kill--
node:= 5 
 	next_branch :=6
node:= 6 
 	next_branch :=3
	next_branch :=7
=======node_fun:pp_start_one=========
node:= 2 
 	next_branch :=5
node:= 3 
 	next_branch :=6
	next_branch :=4
node:= 4 
 	next_branch :=5
node:= 5 
 	next_branch :=3
	next_branch :=6
node:= 6 
 	next_branch :=7
	next_branch :=8
node:= 7 
 addr_expraddr_expraddr_expraddr_expraddr_expr------exit--
node:= 8 
 	next_branch :=9
	next_branch :=10
node:= 9 
 	next_branch :=15
addr_expraddr_expraddr_expraddr_expraddr_expr------strbuf_addbuf--
addr_expraddr_expraddr_expraddr_expraddr_expr------strbuf_reset--
node:= 10 
 	next_branch :=11
	next_branch :=14
addr_expraddr_expraddr_expraddr_expraddr_expr------start_command--
node:= 11 
 	next_branch :=12
	next_branch :=13
addr_expraddr_expraddr_expraddr_expraddr_expr------strbuf_addbuf--
addr_expraddr_expraddr_expraddr_expraddr_expr------strbuf_reset--
node:= 12 
 	next_branch :=13
node:= 13 
 	next_branch :=15
node:= 14 
 	next_branch :=15
=======node_fun:pp_init=========
node:= 2 
 	next_branch :=3
	next_branch :=4
node:= 3 
 	next_branch :=4
addr_expraddr_expraddr_expraddr_expraddr_expr------online_cpus--
node:= 4 
 	next_branch :=5
	next_branch :=6
addr_expraddr_expraddr_expraddr_expraddr_expr------trace_printf--
node:= 5 
 addr_expraddr_expraddr_expraddr_expraddr_expr------exit--
node:= 6 
 	next_branch :=8
	next_branch :=7
node:= 7 
 	next_branch :=8
node:= 8 
 	next_branch :=10
	next_branch :=9
node:= 9 
 	next_branch :=10
node:= 10 
 	next_branch :=12
addr_expraddr_expraddr_expraddr_expraddr_expr------strbuf_init--
node:= 11 
 	next_branch :=12
addr_expraddr_expraddr_expraddr_expraddr_expr------strbuf_init--
addr_expraddr_expraddr_expraddr_expraddr_expr------child_process_init--
node:= 12 
 	next_branch :=11
	next_branch :=13
=======node_fun:default_task_finished=========
node:= 2 
 	next_branch :=6
	next_branch :=3
node:= 3 
 	next_branch :=5
addr_expraddr_expraddr_expraddr_expraddr_expr------strbuf_addf--
node:= 4 
 	next_branch :=5
addr_expraddr_expraddr_expraddr_expraddr_expr------strbuf_addf--
node:= 5 
 	next_branch :=4
	next_branch :=6
=======node_fun:default_start_failure=========
node:= 2 
 	next_branch :=4
addr_expraddr_expraddr_expraddr_expraddr_expr------strbuf_addstr--
node:= 3 
 	next_branch :=4
addr_expraddr_expraddr_expraddr_expraddr_expr------strbuf_addf--
node:= 4 
 	next_branch :=3
	next_branch :=5
=============== The first stage :  record fucntion =================
start PointerConstraint
ptable point 99 
===============The second stage : Mapping stmt=================
# VUSE <.MEM_39>
_3 = strcmp (_2, "start-command-ENOENT");
# .MEM_50 = VDEF <.MEM_39>
_4 = start_command (&proc);
_5 = __errno_location ();
# .MEM_51 = VDEF <.MEM_50>
fprintf (_8, "FAIL %s\n", _7);
# VUSE <.MEM_39>
_10 = strcmp (_9, "run-command");
# .MEM_48 = VDEF <.MEM_39>
_11 = run_command (&proc);
# VUSE <.MEM_39>
jobs_33 = atoi (_12);
# VUSE <.MEM_40>
_15 = strcmp (_14, "run-command-parallel");
# .MEM_46 = VDEF <.MEM_40>
_16 = run_processes_parallel (jobs_33, parallel_next, 0B, 0B, &proc);
# VUSE <.MEM_40>
_18 = strcmp (_17, "run-command-abort");
# .MEM_44 = VDEF <.MEM_40>
_19 = run_processes_parallel (jobs_33, parallel_next, 0B, task_finished, &proc);
# VUSE <.MEM_40>
_21 = strcmp (_20, "run-command-no-jobs");
# .MEM_42 = VDEF <.MEM_40>
_22 = run_processes_parallel (jobs_33, no_job, 0B, task_finished, &proc);
# .MEM_41 = VDEF <.MEM_40>
__builtin_fwrite ("check usage\n", 1, 12, _23);
# .MEM_4 = VDEF <.MEM_3(D)>
strbuf_addf (err_2(D), "asking for a quick stop\n");
# .MEM_4 = VDEF <.MEM_3(D)>
strbuf_addf (err_2(D), "no further jobs available\n");
# .MEM_15 = VDEF <.MEM_14(D)>
argv_array_pushv (_3, _2);
# .MEM_16 = VDEF <.MEM_15>
strbuf_addf (err_12(D), "preloaded output of a child\n");
# .MEM_36 = VDEF <.MEM_35(D)>
pp_init (&pp, n_15(D), get_next_task_16(D), start_failure_17(D), task_finished_18(D), pp_cb_19(D));
# .MEM_37 = VDEF <.MEM_31>
code_22 = pp_start_one (&pp);
# .MEM_39 = VDEF <.MEM_38>
kill_children (&pp, _1);
# .MEM_40 = VDEF <.MEM_32>
pp_buffer_stderr (&pp, 100);
# .MEM_41 = VDEF <.MEM_40>
pp_output (&pp);
# .MEM_42 = VDEF <.MEM_41>
code_29 = pp_collect_finished (&pp);
# .MEM_44 = VDEF <.MEM_43>
kill_children (&pp, _7);
# .MEM_45 = VDEF <.MEM_32>
pp_cleanup (&pp);
# .MEM_5 = VDEF <.MEM_4(D)>
argv_array_clear (_1);
# .MEM_6 = VDEF <.MEM_5>
argv_array_clear (_2);
# .MEM_9 = VDEF <.MEM_8(D)>
ret_7 = wait_or_whine (_3, _2, 0);
# .MEM_10 = VDEF <.MEM_9>
child_process_clear (cmd_5(D));
# .MEM_113 = VDEF <.MEM_111>
code_97 = finish_command (_12);
# .MEM_118 = VDEF <.MEM_117>
child_process_init (_44);
# .MEM_124 = VDEF <.MEM_118>
strbuf_addbuf (_51, _50);
# .MEM_125 = VDEF <.MEM_124>
strbuf_reset (_56);
# .MEM_119 = VDEF <.MEM_118>
fputs (_62, _57);
# .MEM_120 = VDEF <.MEM_119>
strbuf_reset (_67);
# .MEM_121 = VDEF <.MEM_120>
fputs (_69, _68);
# .MEM_122 = VDEF <.MEM_121>
strbuf_reset (_70);
# .MEM_23 = VDEF <.MEM_21>
kill (_10, signo_17(D));
# .MEM_130 = VDEF <.MEM_118>
strbuf_addbuf (_30, _29);
# .MEM_131 = VDEF <.MEM_130>
strbuf_reset (_35);
# .MEM_122 = VDEF <.MEM_121>
_53 = start_command (_52);
# .MEM_127 = VDEF <.MEM_126>
strbuf_addbuf (_76, _75);
# .MEM_128 = VDEF <.MEM_127>
strbuf_reset (_81);
# .MEM_62 = VDEF <.MEM_61(D)>
n_33 = online_cpus ();
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
# .MEM_72 = VDEF <.MEM_71>
_2 = calloc (_1, 120);
# .MEM_74 = VDEF <.MEM_73>
_4 = calloc (_3, 8);
# .MEM_76 = VDEF <.MEM_75>
strbuf_init (_5, 0);
# .MEM_78 = VDEF <.MEM_60>
strbuf_init (_10, 0);
# .MEM_79 = VDEF <.MEM_78>
child_process_init (_15);
# .MEM_24 = VDEF <.MEM_23(D)>
strbuf_addf (err_16(D), "A child failed with return code %d:", result_14(D));
# .MEM_25 = VDEF <.MEM_21>
strbuf_addf (err_16(D), " %s", _5);
# .MEM_21 = VDEF <.MEM_20(D)>
strbuf_addstr (err_14(D), "Starting a child failed:");
# .MEM_22 = VDEF <.MEM_19>
strbuf_addf (err_14(D), " %s", _5);
===============The second stage : Program slicing=================
=============== *this point analyzable =================
_3 = strcmp (_2, "start-command-ENOENT");
========================================================
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
_3 = strcmp (_2, "start-command-ENOENT");
========================================================
=============== *this point analyzable =================
_3 = strcmp (_2, "start-command-ENOENT");
========================================================
------------------VAR_DECL : LHS2------------------
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
_4 = start_command (&proc);
========================================================
=============== *this point analyzable =================
_4 = start_command (&proc);
========================================================
=============== *this point analyzable =================
_5 = __errno_location ();
========================================================
 <ssa_name 0x7fdf6679d7e0
    type <pointer_type 0x7fdf662b63f0
        type <record_type 0x7fdf662b6348 FILE BLK
            size <integer_cst 0x7fdf662a4840 constant 1728>
            unit-size <integer_cst 0x7fdf662a4960 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b62a0 fields <field_decl 0x7fdf662b8b48 _flags> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662b63f0>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fdf662bee70>>
   
    def_stmt _8 = stderr;
    version:8
    ptr-info 0x7fdf662c9eb8>
 <ssa_name 0x7fdf662e3870
    type <pointer_type 0x7fdf662b4000
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662b6690>>
   
    def_stmt _62 = _61->err.buf;
    version:62
    ptr-info 0x7fdf66304300>
 <ssa_name 0x7fdf662e3a68
    type <pointer_type 0x7fdf662b4000
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662b6690>>
   
    def_stmt _69 = pp_91(D)->buffered_output.buf;
    version:69
    ptr-info 0x7fdf66304378>
=============== *this point analyzable =================
fprintf (_8, "FAIL %s\n", _7);
========================================================
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
fprintf (_8, "FAIL %s\n", _7);
========================================================
 <ssa_name 0x7fdf6679d7e0
    type <pointer_type 0x7fdf662b63f0
        type <record_type 0x7fdf662b6348 FILE BLK
            size <integer_cst 0x7fdf662a4840 constant 1728>
            unit-size <integer_cst 0x7fdf662a4960 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b62a0 fields <field_decl 0x7fdf662b8b48 _flags> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662b63f0>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fdf662bee70>>
   
    def_stmt _8 = stderr;
    version:8
    ptr-info 0x7fdf662c9eb8>
 <ssa_name 0x7fdf662e3870
    type <pointer_type 0x7fdf662b4000
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662b6690>>
   
    def_stmt _62 = _61->err.buf;
    version:62
    ptr-info 0x7fdf66304300>
 <ssa_name 0x7fdf662e3a68
    type <pointer_type 0x7fdf662b4000
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662b6690>>
   
    def_stmt _69 = pp_91(D)->buffered_output.buf;
    version:69
    ptr-info 0x7fdf66304378>
=============== *this point analyzable =================
fprintf (_8, "FAIL %s\n", _7);
========================================================
=============== *this point analyzable =================
_10 = strcmp (_9, "run-command");
========================================================
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
_10 = strcmp (_9, "run-command");
========================================================
=============== *this point analyzable =================
_10 = strcmp (_9, "run-command");
========================================================
=============== *this point analyzable =================
_11 = run_command (&proc);
========================================================
=============== *this point analyzable =================
jobs_33 = atoi (_12);
========================================================
=============== *this point analyzable =================
jobs_33 = atoi (_12);
========================================================
=============== *this point analyzable =================
_15 = strcmp (_14, "run-command-parallel");
========================================================
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
_15 = strcmp (_14, "run-command-parallel");
========================================================
=============== *this point analyzable =================
_15 = strcmp (_14, "run-command-parallel");
========================================================
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
_16 = run_processes_parallel (jobs_33, parallel_next, 0B, 0B, &proc);
========================================================
=============== *this point analyzable =================
_16 = run_processes_parallel (jobs_33, parallel_next, 0B, 0B, &proc);
========================================================
=============== *this point analyzable =================
_18 = strcmp (_17, "run-command-abort");
========================================================
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
_18 = strcmp (_17, "run-command-abort");
========================================================
=============== *this point analyzable =================
_18 = strcmp (_17, "run-command-abort");
========================================================
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
_19 = run_processes_parallel (jobs_33, parallel_next, 0B, task_finished, &proc);
========================================================
=============== *this point analyzable =================
_19 = run_processes_parallel (jobs_33, parallel_next, 0B, task_finished, &proc);
========================================================
=============== *this point analyzable =================
_21 = strcmp (_20, "run-command-no-jobs");
========================================================
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
_21 = strcmp (_20, "run-command-no-jobs");
========================================================
=============== *this point analyzable =================
_21 = strcmp (_20, "run-command-no-jobs");
========================================================
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
_22 = run_processes_parallel (jobs_33, no_job, 0B, task_finished, &proc);
========================================================
=============== *this point analyzable =================
_22 = run_processes_parallel (jobs_33, no_job, 0B, task_finished, &proc);
========================================================
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
__builtin_fwrite ("check usage\n", 1, 12, _23);
========================================================
=============== *this point analyzable =================
__builtin_fwrite ("check usage\n", 1, 12, _23);
========================================================
 <ssa_name 0x7fdf662d5318
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fdf662c3480 err>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7fdf662c9f90>
=============== *this point analyzable =================
strbuf_addf (err_2(D), "asking for a quick stop\n");
========================================================
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
strbuf_addf (err_2(D), "asking for a quick stop\n");
========================================================
 <ssa_name 0x7fdf662d5438
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fdf662c3680 err>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7fdf662c9fa8>
=============== *this point analyzable =================
strbuf_addf (err_2(D), "no further jobs available\n");
========================================================
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
strbuf_addf (err_2(D), "no further jobs available\n");
========================================================
 <ssa_name 0x7fdf662d55e8
    type <pointer_type 0x7fdf662bf0a8
        type <record_type 0x7fdf662bb690 argv_array TI
            size <integer_cst 0x7fdf66795c00 constant 128>
            unit-size <integer_cst 0x7fdf66795c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb690 fields <field_decl 0x7fdf662b8d10 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bf0a8>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _3 = &cp_10(D)->args;
    version:3
    ptr-info 0x7fdf662c9fd8>
=============== *this point analyzable =================
argv_array_pushv (_3, _2);
========================================================
 <ssa_name 0x7fdf662d55e8
    type <pointer_type 0x7fdf662bf0a8
        type <record_type 0x7fdf662bb690 argv_array TI
            size <integer_cst 0x7fdf66795c00 constant 128>
            unit-size <integer_cst 0x7fdf66795c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb690 fields <field_decl 0x7fdf662b8d10 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bf0a8>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _3 = &cp_10(D)->args;
    version:3
    ptr-info 0x7fdf662c9fd8>
=============== *this point analyzable =================
argv_array_pushv (_3, _2);
========================================================
 <ssa_name 0x7fdf662d5798
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fdf662c3880 err>
    def_stmt GIMPLE_NOP
    version:12
    ptr-info 0x7fdf662a4e88>
=============== *this point analyzable =================
strbuf_addf (err_12(D), "preloaded output of a child\n");
========================================================
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
strbuf_addf (err_12(D), "preloaded output of a child\n");
========================================================
------------------VAR_DECL : LHS2------------------
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
pp_init (&pp, n_15(D), get_next_task_16(D), start_failure_17(D), task_finished_18(D), pp_cb_19(D));
========================================================
=============== *this point analyzable =================
pp_init (&pp, n_15(D), get_next_task_16(D), start_failure_17(D), task_finished_18(D), pp_cb_19(D));
========================================================
=============== *this point analyzable =================
pp_init (&pp, n_15(D), get_next_task_16(D), start_failure_17(D), task_finished_18(D), pp_cb_19(D));
========================================================
=============== *this point analyzable =================
pp_init (&pp, n_15(D), get_next_task_16(D), start_failure_17(D), task_finished_18(D), pp_cb_19(D));
========================================================
=============== *this point analyzable =================
pp_init (&pp, n_15(D), get_next_task_16(D), start_failure_17(D), task_finished_18(D), pp_cb_19(D));
========================================================
=============== *this point analyzable =================
pp_init (&pp, n_15(D), get_next_task_16(D), start_failure_17(D), task_finished_18(D), pp_cb_19(D));
========================================================
=============== *this point analyzable =================
code_22 = pp_start_one (&pp);
========================================================
=============== *this point analyzable =================
kill_children (&pp, _1);
========================================================
=============== *this point analyzable =================
code_29 = pp_collect_finished (&pp);
========================================================
=============== *this point analyzable =================
kill_children (&pp, _7);
========================================================
 <ssa_name 0x7fdf662de318
    type <pointer_type 0x7fdf662bf0a8
        type <record_type 0x7fdf662bb690 argv_array TI
            size <integer_cst 0x7fdf66795c00 constant 128>
            unit-size <integer_cst 0x7fdf66795c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb690 fields <field_decl 0x7fdf662b8d10 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bf0a8>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _1 = &child_3(D)->args;
    version:1
    ptr-info 0x7fdf662a4f00>
=============== *this point analyzable =================
argv_array_clear (_1);
========================================================
 <ssa_name 0x7fdf662de360
    type <pointer_type 0x7fdf662bf0a8
        type <record_type 0x7fdf662bb690 argv_array TI
            size <integer_cst 0x7fdf66795c00 constant 128>
            unit-size <integer_cst 0x7fdf66795c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb690 fields <field_decl 0x7fdf662b8d10 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bf0a8>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = &child_3(D)->env_array;
    version:2
    ptr-info 0x7fdf662a4f18>
=============== *this point analyzable =================
argv_array_clear (_2);
========================================================
=============== *this point analyzable =================
ret_7 = wait_or_whine (_3, _2, 0);
========================================================
=============== *this point analyzable =================
ret_7 = wait_or_whine (_3, _2, 0);
========================================================
=============== *this point analyzable =================
ret_7 = wait_or_whine (_3, _2, 0);
========================================================
 <ssa_name 0x7fdf662de5a0
    type <pointer_type 0x7fdf662bb7e0
        type <record_type 0x7fdf662bb738 child_process BLK
            size <integer_cst 0x7fdf662a4978 constant 640>
            unit-size <integer_cst 0x7fdf662a4948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738 fields <field_decl 0x7fdf662bd850 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fdf662c3d80 cmd>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7fdf662a4f78>
=============== *this point analyzable =================
child_process_clear (cmd_5(D));
========================================================
=============== *this point analyzable =================
code_97 = finish_command (_12);
========================================================
=============== *this point analyzable =================
code_97 = finish_command (_12);
========================================================
 <ssa_name 0x7fdf662e3360
    type <pointer_type 0x7fdf662bb7e0
        type <record_type 0x7fdf662bb738 child_process BLK
            size <integer_cst 0x7fdf662a4978 constant 640>
            unit-size <integer_cst 0x7fdf662a4948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738 fields <field_decl 0x7fdf662bd850 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _44 = &_43->process;
    version:44
    ptr-info 0x7fdf663041f8>
=============== *this point analyzable =================
child_process_init (_44);
========================================================
 <ssa_name 0x7fdf662e3558
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _51 = &pp_91(D)->buffered_output;
    version:51
    ptr-info 0x7fdf66304258>
=============== *this point analyzable =================
strbuf_addbuf (_51, _50);
========================================================
 <ssa_name 0x7fdf662e3558
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _51 = &pp_91(D)->buffered_output;
    version:51
    ptr-info 0x7fdf66304258>
=============== *this point analyzable =================
strbuf_addbuf (_51, _50);
========================================================
 <ssa_name 0x7fdf662e36c0
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _56 = &_55->err;
    version:56
    ptr-info 0x7fdf663042a0>
=============== *this point analyzable =================
strbuf_reset (_56);
========================================================
 <ssa_name 0x7fdf662e3870
    type <pointer_type 0x7fdf662b4000
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662b6690>>
   
    def_stmt _62 = _61->err.buf;
    version:62
    ptr-info 0x7fdf66304300>
=============== *this point analyzable =================
fputs (_62, _57);
========================================================
 <ssa_name 0x7fdf662e3870
    type <pointer_type 0x7fdf662b4000
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662b6690>>
   
    def_stmt _62 = _61->err.buf;
    version:62
    ptr-info 0x7fdf66304300>
=============== *this point analyzable =================
fputs (_62, _57);
========================================================
 <ssa_name 0x7fdf662e39d8
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _67 = &_66->err;
    version:67
    ptr-info 0x7fdf66304348>
=============== *this point analyzable =================
strbuf_reset (_67);
========================================================
 <ssa_name 0x7fdf662e3a68
    type <pointer_type 0x7fdf662b4000
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662b6690>>
   
    def_stmt _69 = pp_91(D)->buffered_output.buf;
    version:69
    ptr-info 0x7fdf66304378>
=============== *this point analyzable =================
fputs (_69, _68);
========================================================
 <ssa_name 0x7fdf662e3a68
    type <pointer_type 0x7fdf662b4000
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662b6690>>
   
    def_stmt _69 = pp_91(D)->buffered_output.buf;
    version:69
    ptr-info 0x7fdf66304378>
=============== *this point analyzable =================
fputs (_69, _68);
========================================================
 <ssa_name 0x7fdf662e3ab0
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _70 = &pp_91(D)->buffered_output;
    version:70
    ptr-info 0x7fdf66304390>
=============== *this point analyzable =================
strbuf_reset (_70);
========================================================
 <ssa_name 0x7fdf662e4948
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _10 = _9->process.pid;
    version:10>
=============== *this point analyzable =================
kill (_10, signo_17(D));
========================================================
 <ssa_name 0x7fdf662e4948
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _10 = _9->process.pid;
    version:10>
=============== *this point analyzable =================
kill (_10, signo_17(D));
========================================================
 <ssa_name 0x7fdf662ed480
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _30 = &pp_102(D)->buffered_output;
    version:30
    ptr-info 0x7fdf663045e8>
=============== *this point analyzable =================
strbuf_addbuf (_30, _29);
========================================================
 <ssa_name 0x7fdf662ed480
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _30 = &pp_102(D)->buffered_output;
    version:30
    ptr-info 0x7fdf663045e8>
=============== *this point analyzable =================
strbuf_addbuf (_30, _29);
========================================================
 <ssa_name 0x7fdf662ed5e8
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _35 = &_34->err;
    version:35
    ptr-info 0x7fdf66304630>
=============== *this point analyzable =================
strbuf_reset (_35);
========================================================
=============== *this point analyzable =================
_53 = start_command (_52);
========================================================
=============== *this point analyzable =================
_53 = start_command (_52);
========================================================
 <ssa_name 0x7fdf662ee1b0
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _76 = &pp_102(D)->buffered_output;
    version:76
    ptr-info 0x7fdf66304870>
=============== *this point analyzable =================
strbuf_addbuf (_76, _75);
========================================================
 <ssa_name 0x7fdf662ee1b0
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _76 = &pp_102(D)->buffered_output;
    version:76
    ptr-info 0x7fdf66304870>
=============== *this point analyzable =================
strbuf_addbuf (_76, _75);
========================================================
 <ssa_name 0x7fdf662ee318
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _81 = &_80->err;
    version:81
    ptr-info 0x7fdf663048b8>
=============== *this point analyzable =================
strbuf_reset (_81);
========================================================
=============== *this point analyzable =================
n_33 = online_cpus ();
========================================================
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
========================================================
=============== *this point analyzable =================
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
========================================================
=============== *this point analyzable =================
_2 = calloc (_1, 120);
========================================================
=============== *this point analyzable =================
_4 = calloc (_3, 8);
========================================================
 <ssa_name 0x7fdf662f8000
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = &pp_34(D)->buffered_output;
    version:5
    ptr-info 0x7fdf663049a8>
=============== *this point analyzable =================
strbuf_init (_5, 0);
========================================================
 <ssa_name 0x7fdf662f8168
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _10 = &_9->err;
    version:10
    ptr-info 0x7fdf663049f0>
=============== *this point analyzable =================
strbuf_init (_10, 0);
========================================================
 <ssa_name 0x7fdf662f82d0
    type <pointer_type 0x7fdf662bb7e0
        type <record_type 0x7fdf662bb738 child_process BLK
            size <integer_cst 0x7fdf662a4978 constant 640>
            unit-size <integer_cst 0x7fdf662a4948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738 fields <field_decl 0x7fdf662bd850 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _15 = &_14->process;
    version:15
    ptr-info 0x7fdf66304a38>
=============== *this point analyzable =================
child_process_init (_15);
========================================================
 <ssa_name 0x7fdf662fd360
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fdf662f6400 err>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7fdf66304be8>
=============== *this point analyzable =================
strbuf_addf (err_16(D), "A child failed with return code %d:", result_14(D));
========================================================
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
strbuf_addf (err_16(D), "A child failed with return code %d:", result_14(D));
========================================================
 <ssa_name 0x7fdf662fd360
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fdf662f6400 err>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7fdf66304be8>
=============== *this point analyzable =================
strbuf_addf (err_16(D), "A child failed with return code %d:", result_14(D));
========================================================
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
strbuf_addf (err_16(D), " %s", _5);
========================================================
 <ssa_name 0x7fdf662fd360
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fdf662f6400 err>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7fdf66304be8>
=============== *this point analyzable =================
strbuf_addf (err_16(D), " %s", _5);
========================================================
 <ssa_name 0x7fdf662fd8b8
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fdf662f6600 err>
    def_stmt GIMPLE_NOP
    version:14
    ptr-info 0x7fdf66304ca8>
=============== *this point analyzable =================
strbuf_addstr (err_14(D), "Starting a child failed:");
========================================================
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
strbuf_addstr (err_14(D), "Starting a child failed:");
========================================================
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
strbuf_addf (err_14(D), " %s", _5);
========================================================
 <ssa_name 0x7fdf662fd8b8
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fdf662f6600 err>
    def_stmt GIMPLE_NOP
    version:14
    ptr-info 0x7fdf66304ca8>
=============== *this point analyzable =================
strbuf_addf (err_14(D), " %s", _5);
========================================================
=============== *this point analyzable =================
_2 = calloc (_1, 120);
========================================================
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m

=============== The third stage : Start detection  =================
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 9 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:__builtin_fwrite========= [0m
[40;33m =======POP node_fun stack:__builtin_fwrite========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:run_processes_parallel========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path run_processes_parallel  function_call count: 7 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:pp_cleanup========= [0m
[40;33m =======POP node_fun stack:pp_cleanup========= [0m
[40;42m =======pre add _ fucntion:kill_children========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path kill_children  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:kill========= [0m
[40;33m =======POP node_fun stack:kill========= [0m
[40;42m =======pre_check_funciton:kill_children========= [0m
[40;42m =======start_check_funciton:kill_children========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fdf662e4948
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _10 = _9->process.pid;
    version:10>
 <ssa_name 0x7fdf662e4948
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _10 = _9->process.pid;
    version:10>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662e4948
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _10 = _9->process.pid;
    version:10>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_23 = VDEF <.MEM_21>
kill (_10, signo_17(D));
kill (_10, signo_17(D));
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:259:25: warning: use location
  259 |                         kill(pp->children[i].process.pid, signo);
      |                         ^
this stmt call this function :kill
trace fucntion name:kill 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_23 = VDEF <.MEM_21>
kill (_10, signo_17(D));
kill (_10, signo_17(D));
./benchmarks/git/use_after_free_2/git_uaf_2.c:259:25: warning: use location
this stmt call this function :kill
trace fucntion name:kill 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662e4948
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _10 = _9->process.pid;
    version:10>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662e4a68
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <parm_decl 0x7fdf662c3f00 signo>
    def_stmt GIMPLE_NOP
    version:17>
 <ssa_name 0x7fdf662e4a68
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <parm_decl 0x7fdf662c3f00 signo>
    def_stmt GIMPLE_NOP
    version:17>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662e4a68
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <parm_decl 0x7fdf662c3f00 signo>
    def_stmt GIMPLE_NOP
    version:17>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_23 = VDEF <.MEM_21>
kill (_10, signo_17(D));
kill (_10, signo_17(D));
./benchmarks/git/use_after_free_2/git_uaf_2.c:259:25: warning: use location
this stmt call this function :kill
trace fucntion name:kill 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_23 = VDEF <.MEM_21>
kill (_10, signo_17(D));
kill (_10, signo_17(D));
./benchmarks/git/use_after_free_2/git_uaf_2.c:259:25: warning: use location
this stmt call this function :kill
trace fucntion name:kill 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662e4a68
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <parm_decl 0x7fdf662c3f00 signo>
    def_stmt GIMPLE_NOP
    version:17>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:kill_children========= [0m
[40;42m =======pre add _ fucntion:pp_collect_finished========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path pp_collect_finished  function_call count: 5 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;33m =======POP node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:fputs========= [0m
[40;33m =======POP node_fun stack:fputs========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;33m =======POP node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;33m =======POP node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:finish_command========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path finish_command  function_call count: 2 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:child_process_clear========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path child_process_clear  function_call count: 1 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;33m =======POP node_fun stack:argv_array_clear========= [0m
[40;42m =======pre_check_funciton:child_process_clear========= [0m
[40;42m =======start_check_funciton:child_process_clear========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fdf662de318
    type <pointer_type 0x7fdf662bf0a8
        type <record_type 0x7fdf662bb690 argv_array TI
            size <integer_cst 0x7fdf66795c00 constant 128>
            unit-size <integer_cst 0x7fdf66795c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb690 fields <field_decl 0x7fdf662b8d10 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bf0a8>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _1 = &child_3(D)->args;
    version:1
    ptr-info 0x7fdf662a4f00>
 <ssa_name 0x7fdf662de318
    type <pointer_type 0x7fdf662bf0a8
        type <record_type 0x7fdf662bb690 argv_array TI
            size <integer_cst 0x7fdf66795c00 constant 128>
            unit-size <integer_cst 0x7fdf66795c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb690 fields <field_decl 0x7fdf662b8d10 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bf0a8>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _1 = &child_3(D)->args;
    version:1
    ptr-info 0x7fdf662a4f00>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662de318
    type <pointer_type 0x7fdf662bf0a8
        type <record_type 0x7fdf662bb690 argv_array TI
            size <integer_cst 0x7fdf66795c00 constant 128>
            unit-size <integer_cst 0x7fdf66795c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb690 fields <field_decl 0x7fdf662b8d10 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bf0a8>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _1 = &child_3(D)->args;
    version:1
    ptr-info 0x7fdf662a4f00>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_5 = VDEF <.MEM_4(D)>
argv_array_clear (_1);
argv_array_clear (_1);
./benchmarks/git/use_after_free_2/git_uaf_2.c:328:9: warning: use location
  328 |         argv_array_clear(&child->args);
      |         ^
this stmt call this function :argv_array_clear
trace fucntion name:argv_array_clear 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_5 = VDEF <.MEM_4(D)>
argv_array_clear (_1);
argv_array_clear (_1);
./benchmarks/git/use_after_free_2/git_uaf_2.c:328:9: warning: use location
this stmt call this function :argv_array_clear
trace fucntion name:argv_array_clear 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662de318
    type <pointer_type 0x7fdf662bf0a8
        type <record_type 0x7fdf662bb690 argv_array TI
            size <integer_cst 0x7fdf66795c00 constant 128>
            unit-size <integer_cst 0x7fdf66795c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb690 fields <field_decl 0x7fdf662b8d10 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bf0a8>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _1 = &child_3(D)->args;
    version:1
    ptr-info 0x7fdf662a4f00>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662de360
    type <pointer_type 0x7fdf662bf0a8
        type <record_type 0x7fdf662bb690 argv_array TI
            size <integer_cst 0x7fdf66795c00 constant 128>
            unit-size <integer_cst 0x7fdf66795c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb690 fields <field_decl 0x7fdf662b8d10 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bf0a8>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = &child_3(D)->env_array;
    version:2
    ptr-info 0x7fdf662a4f18>
 <ssa_name 0x7fdf662de360
    type <pointer_type 0x7fdf662bf0a8
        type <record_type 0x7fdf662bb690 argv_array TI
            size <integer_cst 0x7fdf66795c00 constant 128>
            unit-size <integer_cst 0x7fdf66795c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb690 fields <field_decl 0x7fdf662b8d10 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bf0a8>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = &child_3(D)->env_array;
    version:2
    ptr-info 0x7fdf662a4f18>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662de360
    type <pointer_type 0x7fdf662bf0a8
        type <record_type 0x7fdf662bb690 argv_array TI
            size <integer_cst 0x7fdf66795c00 constant 128>
            unit-size <integer_cst 0x7fdf66795c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb690 fields <field_decl 0x7fdf662b8d10 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bf0a8>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = &child_3(D)->env_array;
    version:2
    ptr-info 0x7fdf662a4f18>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_6 = VDEF <.MEM_5>
argv_array_clear (_2);
argv_array_clear (_2);
./benchmarks/git/use_after_free_2/git_uaf_2.c:329:9: warning: use location
  329 |         argv_array_clear(&child->env_array);
      |         ^
this stmt call this function :argv_array_clear
trace fucntion name:argv_array_clear 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_6 = VDEF <.MEM_5>
argv_array_clear (_2);
argv_array_clear (_2);
./benchmarks/git/use_after_free_2/git_uaf_2.c:329:9: warning: use location
this stmt call this function :argv_array_clear
trace fucntion name:argv_array_clear 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662de360
    type <pointer_type 0x7fdf662bf0a8
        type <record_type 0x7fdf662bb690 argv_array TI
            size <integer_cst 0x7fdf66795c00 constant 128>
            unit-size <integer_cst 0x7fdf66795c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb690 fields <field_decl 0x7fdf662b8d10 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bf0a8>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = &child_3(D)->env_array;
    version:2
    ptr-info 0x7fdf662a4f18>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:child_process_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;33m =======POP node_fun stack:wait_or_whine========= [0m
[40;42m =======pre_check_funciton:finish_command========= [0m
[40;42m =======start_check_funciton:finish_command========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fdf662de558
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _3 = cmd_5(D)->pid;
    version:3>
 <ssa_name 0x7fdf662de558
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _3 = cmd_5(D)->pid;
    version:3>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662de558
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _3 = cmd_5(D)->pid;
    version:3>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_9 = VDEF <.MEM_8(D)>
ret_7 = wait_or_whine (_3, _2, 0);
ret_7 = wait_or_whine (_3, _2, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:15: warning: use location
  321 |     int ret = wait_or_whine(cmd->pid, cmd->argv[0], 0);
      |               ^
this stmt call this function :wait_or_whine
trace fucntion name:wait_or_whine 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_9 = VDEF <.MEM_8(D)>
ret_7 = wait_or_whine (_3, _2, 0);
ret_7 = wait_or_whine (_3, _2, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:15: warning: use location
this stmt call this function :wait_or_whine
trace fucntion name:wait_or_whine 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662de558
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _3 = cmd_5(D)->pid;
    version:3>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662de510
    type <pointer_type 0x7fdf662b6888
        type <integer_type 0x7fdf662b67e0 char readonly QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b6888>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fdf662bb5e8>>
   
    def_stmt _2 = *_1;
    version:2
    ptr-info 0x7fdf662a4f60>
 <ssa_name 0x7fdf662de510
    type <pointer_type 0x7fdf662b6888
        type <integer_type 0x7fdf662b67e0 char readonly QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b6888>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fdf662bb5e8>>
   
    def_stmt _2 = *_1;
    version:2
    ptr-info 0x7fdf662a4f60>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662de510
    type <pointer_type 0x7fdf662b6888
        type <integer_type 0x7fdf662b67e0 char readonly QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b6888>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fdf662bb5e8>>
   
    def_stmt _2 = *_1;
    version:2
    ptr-info 0x7fdf662a4f60>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_9 = VDEF <.MEM_8(D)>
ret_7 = wait_or_whine (_3, _2, 0);
ret_7 = wait_or_whine (_3, _2, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:15: warning: use location
this stmt call this function :wait_or_whine
trace fucntion name:wait_or_whine 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_9 = VDEF <.MEM_8(D)>
ret_7 = wait_or_whine (_3, _2, 0);
ret_7 = wait_or_whine (_3, _2, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:15: warning: use location
this stmt call this function :wait_or_whine
trace fucntion name:wait_or_whine 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662de510
    type <pointer_type 0x7fdf662b6888
        type <integer_type 0x7fdf662b67e0 char readonly QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b6888>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fdf662bb5e8>>
   
    def_stmt _2 = *_1;
    version:2
    ptr-info 0x7fdf662a4f60>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662de5e8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf662db3f0 ret>
    def_stmt ret_7 = wait_or_whine (_3, _2, 0);
    version:7>
 <ssa_name 0x7fdf662de5e8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf662db3f0 ret>
    def_stmt ret_7 = wait_or_whine (_3, _2, 0);
    version:7>

 ================== pre trace ptable ================== 
trace fucntion name:wait_or_whine 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662de5e8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf662db3f0 ret>
    def_stmt ret_7 = wait_or_whine (_3, _2, 0);
    version:7>
is Other function wait_or_whine
 
 Start check Pointer Collect  

======================================================================
# .MEM_9 = VDEF <.MEM_8(D)>
ret_7 = wait_or_whine (_3, _2, 0);
ret_7 = wait_or_whine (_3, _2, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:15: warning: use location
this stmt call this function :wait_or_whine
trace fucntion name:wait_or_whine 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_9 = VDEF <.MEM_8(D)>
ret_7 = wait_or_whine (_3, _2, 0);
ret_7 = wait_or_whine (_3, _2, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:15: warning: use location
this stmt call this function :wait_or_whine
trace fucntion name:wait_or_whine 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662de5e8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf662db3f0 ret>
    def_stmt ret_7 = wait_or_whine (_3, _2, 0);
    version:7>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662de5a0
    type <pointer_type 0x7fdf662bb7e0
        type <record_type 0x7fdf662bb738 child_process BLK
            size <integer_cst 0x7fdf662a4978 constant 640>
            unit-size <integer_cst 0x7fdf662a4948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738 fields <field_decl 0x7fdf662bd850 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fdf662c3d80 cmd>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7fdf662a4f78>
 <ssa_name 0x7fdf662de5a0
    type <pointer_type 0x7fdf662bb7e0
        type <record_type 0x7fdf662bb738 child_process BLK
            size <integer_cst 0x7fdf662a4978 constant 640>
            unit-size <integer_cst 0x7fdf662a4948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738 fields <field_decl 0x7fdf662bd850 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fdf662c3d80 cmd>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7fdf662a4f78>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662de5a0
    type <pointer_type 0x7fdf662bb7e0
        type <record_type 0x7fdf662bb738 child_process BLK
            size <integer_cst 0x7fdf662a4978 constant 640>
            unit-size <integer_cst 0x7fdf662a4948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738 fields <field_decl 0x7fdf662bd850 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fdf662c3d80 cmd>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7fdf662a4f78>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_10 = VDEF <.MEM_9>
child_process_clear (cmd_5(D));
child_process_clear (cmd_5(D));
./benchmarks/git/use_after_free_2/git_uaf_2.c:322:5: warning: use location
  322 |     child_process_clear(cmd);
      |     ^
this stmt call this function :child_process_clear
trace fucntion name:child_process_clear 
[40;44m =======trace_function_path child_process_clear  function_call count: 1 level :0========  [0m
 <ssa_name 0x7fdf662de5a0
    type <pointer_type 0x7fdf662bb7e0
        type <record_type 0x7fdf662bb738 child_process BLK
            size <integer_cst 0x7fdf662a4978 constant 640>
            unit-size <integer_cst 0x7fdf662a4948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738 fields <field_decl 0x7fdf662bd850 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fdf662c3d80 cmd>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7fdf662a4f78>
[40;36m ======= node_fun:child_process_clear========= [0m
[40;36m ======= find relate stmt with cmd ========= [0m
[40;36m ======= relate node_fun argument:cmd========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘child_process_clear’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:328:9: warning: use location
  328 |         argv_array_clear(&child->args);
      |         ^
_1 = &child_3(D)->args;
./benchmarks/git/use_after_free_2/git_uaf_2.c:328:9: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cmd========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:329:9: warning: use location
  329 |         argv_array_clear(&child->env_array);
      |         ^
_2 = &child_3(D)->env_array;
./benchmarks/git/use_after_free_2/git_uaf_2.c:329:9: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m

 ================== trace ================== 
trace fucntion free:0 
_3 = cmd_5(D)->pid;
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:15: warning: use location
  321 |     int ret = wait_or_whine(cmd->pid, cmd->argv[0], 0);
      |               ^
ret_7 = wait_or_whine (_3, _2, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:15: warning: use location
this stmt call this function :wait_or_whine
trace fucntion name:wait_or_whine 

 ================== trace ================== 
trace fucntion free:0 
_1 = cmd_5(D)->argv;
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:42: warning: use location
  321 |     int ret = wait_or_whine(cmd->pid, cmd->argv[0], 0);
      |                                          ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662de5a0
    type <pointer_type 0x7fdf662bb7e0
        type <record_type 0x7fdf662bb738 child_process BLK
            size <integer_cst 0x7fdf662a4978 constant 640>
            unit-size <integer_cst 0x7fdf662a4948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738 fields <field_decl 0x7fdf662bd850 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fdf662c3d80 cmd>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7fdf662a4f78>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:finish_command========= [0m
[40;42m =======pre_check_funciton:pp_collect_finished========= [0m
[40;42m =======start_check_funciton:pp_collect_finished========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fdf662dea20
    type <pointer_type 0x7fdf662bb7e0
        type <record_type 0x7fdf662bb738 child_process BLK
            size <integer_cst 0x7fdf662a4978 constant 640>
            unit-size <integer_cst 0x7fdf662a4948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738 fields <field_decl 0x7fdf662bd850 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _12 = &_11->process;
    version:12
    ptr-info 0x7fdf66304048>
 <ssa_name 0x7fdf662dea20
    type <pointer_type 0x7fdf662bb7e0
        type <record_type 0x7fdf662bb738 child_process BLK
            size <integer_cst 0x7fdf662a4978 constant 640>
            unit-size <integer_cst 0x7fdf662a4948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738 fields <field_decl 0x7fdf662bd850 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _12 = &_11->process;
    version:12
    ptr-info 0x7fdf66304048>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662dea20
    type <pointer_type 0x7fdf662bb7e0
        type <record_type 0x7fdf662bb738 child_process BLK
            size <integer_cst 0x7fdf662a4978 constant 640>
            unit-size <integer_cst 0x7fdf662a4948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738 fields <field_decl 0x7fdf662bd850 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _12 = &_11->process;
    version:12
    ptr-info 0x7fdf66304048>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_113 = VDEF <.MEM_111>
code_97 = finish_command (_12);
code_97 = finish_command (_12);
./benchmarks/git/use_after_free_2/git_uaf_2.c:275:24: warning: use location
  275 |                 code = finish_command(&pp->children[i].process);
      |                        ^
this stmt call this function :finish_command
trace fucntion name:finish_command 
[40;44m =======trace_function_path finish_command  function_call count: 2 level :0========  [0m
 <ssa_name 0x7fdf662dea20
    type <pointer_type 0x7fdf662bb7e0
        type <record_type 0x7fdf662bb738 child_process BLK
            size <integer_cst 0x7fdf662a4978 constant 640>
            unit-size <integer_cst 0x7fdf662a4948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738 fields <field_decl 0x7fdf662bd850 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _12 = &_11->process;
    version:12
    ptr-info 0x7fdf66304048>
[40;36m ======= node_fun:finish_command========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘finish_command’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:42: warning: use location
  321 |     int ret = wait_or_whine(cmd->pid, cmd->argv[0], 0);
      |                                          ^
_1 = cmd_5(D)->argv;
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:42: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:15: warning: use location
  321 |     int ret = wait_or_whine(cmd->pid, cmd->argv[0], 0);
      |               ^
_2 = *_1;
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:15: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_clear========= [0m
[40;46m =======add node_fun stack:child_process_clear========= [0m
[40;44m =======trace_function_path child_process_clear  function_call count: 1 level :1========  [0m
 <ssa_name 0x7fdf662dea20
    type <pointer_type 0x7fdf662bb7e0
        type <record_type 0x7fdf662bb738 child_process BLK
            size <integer_cst 0x7fdf662a4978 constant 640>
            unit-size <integer_cst 0x7fdf662a4948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738 fields <field_decl 0x7fdf662bd850 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _12 = &_11->process;
    version:12
    ptr-info 0x7fdf66304048>
[40;36m ======= node_fun:child_process_clear========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘child_process_clear’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:328:9: warning: use location
  328 |         argv_array_clear(&child->args);
      |         ^
_1 = &child_3(D)->args;
./benchmarks/git/use_after_free_2/git_uaf_2.c:328:9: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:329:9: warning: use location
  329 |         argv_array_clear(&child->env_array);
      |         ^
_2 = &child_3(D)->env_array;
./benchmarks/git/use_after_free_2/git_uaf_2.c:329:9: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;46m =======add node_fun stack:wait_or_whine========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_113 = VDEF <.MEM_111>
code_97 = finish_command (_12);
code_97 = finish_command (_12);
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:275:24: warning: use location
  275 |                 code = finish_command(&pp->children[i].process);
      |                        ^
this stmt call this function :finish_command
trace fucntion name:finish_command 
[40;44m =======trace_function_path finish_command  function_call count: 2 level :0========  [0m
 <ssa_name 0x7fdf662dea20
    type <pointer_type 0x7fdf662bb7e0
        type <record_type 0x7fdf662bb738 child_process BLK
            size <integer_cst 0x7fdf662a4978 constant 640>
            unit-size <integer_cst 0x7fdf662a4948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738 fields <field_decl 0x7fdf662bd850 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _12 = &_11->process;
    version:12
    ptr-info 0x7fdf66304048>
[40;36m ======= node_fun:finish_command========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘finish_command’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:42: warning: use location
  321 |     int ret = wait_or_whine(cmd->pid, cmd->argv[0], 0);
      |                                          ^
_1 = cmd_5(D)->argv;
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:42: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:15: warning: use location
  321 |     int ret = wait_or_whine(cmd->pid, cmd->argv[0], 0);
      |               ^
_2 = *_1;
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:15: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_clear========= [0m
[40;46m =======add node_fun stack:child_process_clear========= [0m
[40;44m =======trace_function_path child_process_clear  function_call count: 1 level :1========  [0m
 <ssa_name 0x7fdf662dea20
    type <pointer_type 0x7fdf662bb7e0
        type <record_type 0x7fdf662bb738 child_process BLK
            size <integer_cst 0x7fdf662a4978 constant 640>
            unit-size <integer_cst 0x7fdf662a4948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738 fields <field_decl 0x7fdf662bd850 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _12 = &_11->process;
    version:12
    ptr-info 0x7fdf66304048>
[40;36m ======= node_fun:child_process_clear========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘child_process_clear’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:328:9: warning: use location
  328 |         argv_array_clear(&child->args);
      |         ^
_1 = &child_3(D)->args;
./benchmarks/git/use_after_free_2/git_uaf_2.c:328:9: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:329:9: warning: use location
  329 |         argv_array_clear(&child->env_array);
      |         ^
_2 = &child_3(D)->env_array;
./benchmarks/git/use_after_free_2/git_uaf_2.c:329:9: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;46m =======add node_fun stack:wait_or_whine========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662dea20
    type <pointer_type 0x7fdf662bb7e0
        type <record_type 0x7fdf662bb738 child_process BLK
            size <integer_cst 0x7fdf662a4978 constant 640>
            unit-size <integer_cst 0x7fdf662a4948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738 fields <field_decl 0x7fdf662bd850 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _12 = &_11->process;
    version:12
    ptr-info 0x7fdf66304048>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662e4120
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf662db6c0 code>
    def_stmt code_97 = finish_command (_12);
    version:97>
 <ssa_name 0x7fdf662e4120
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf662db6c0 code>
    def_stmt code_97 = finish_command (_12);
    version:97>

 ================== pre trace ptable ================== 
trace fucntion name:finish_command 
[40;44m =======trace_function_path finish_command  function_call count: 2 level :888========  [0m
 <ssa_name 0x7fdf662e4120
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf662db6c0 code>
    def_stmt code_97 = finish_command (_12);
    version:97>
[40;36m ======= node_fun:finish_command========= [0m
[40;36m ======= find relate stmt with code ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_clear========= [0m
[40;46m =======add node_fun stack:child_process_clear========= [0m
[40;44m =======trace_function_path child_process_clear  function_call count: 1 level :889========  [0m
 <ssa_name 0x7fdf662e4120
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf662db6c0 code>
    def_stmt code_97 = finish_command (_12);
    version:97>
[40;36m ======= node_fun:child_process_clear========= [0m
[40;36m ======= find relate stmt with code ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;46m =======add node_fun stack:wait_or_whine========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662e4120
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf662db6c0 code>
    def_stmt code_97 = finish_command (_12);
    version:97>
is Other function finish_command
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_113 = VDEF <.MEM_111>
code_97 = finish_command (_12);
code_97 = finish_command (_12);
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:275:24: warning: use location
  275 |                 code = finish_command(&pp->children[i].process);
      |                        ^
this stmt call this function :finish_command
trace fucntion name:finish_command 
[40;44m =======trace_function_path finish_command  function_call count: 2 level :0========  [0m
 <ssa_name 0x7fdf662e4120
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf662db6c0 code>
    def_stmt code_97 = finish_command (_12);
    version:97>
[40;36m ======= node_fun:finish_command========= [0m
[40;36m ======= find relate stmt with code ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_clear========= [0m
[40;46m =======add node_fun stack:child_process_clear========= [0m
[40;44m =======trace_function_path child_process_clear  function_call count: 1 level :1========  [0m
 <ssa_name 0x7fdf662e4120
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf662db6c0 code>
    def_stmt code_97 = finish_command (_12);
    version:97>
[40;36m ======= node_fun:child_process_clear========= [0m
[40;36m ======= find relate stmt with code ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;46m =======add node_fun stack:wait_or_whine========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_113 = VDEF <.MEM_111>
code_97 = finish_command (_12);
code_97 = finish_command (_12);
./benchmarks/git/use_after_free_2/git_uaf_2.c:275:24: warning: use location
this stmt call this function :finish_command
trace fucntion name:finish_command 
[40;44m =======trace_function_path finish_command  function_call count: 2 level :0========  [0m
 <ssa_name 0x7fdf662e4120
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf662db6c0 code>
    def_stmt code_97 = finish_command (_12);
    version:97>
[40;36m ======= node_fun:finish_command========= [0m
[40;36m ======= find relate stmt with code ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_clear========= [0m
[40;46m =======add node_fun stack:child_process_clear========= [0m
[40;44m =======trace_function_path child_process_clear  function_call count: 1 level :1========  [0m
 <ssa_name 0x7fdf662e4120
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf662db6c0 code>
    def_stmt code_97 = finish_command (_12);
    version:97>
[40;36m ======= node_fun:child_process_clear========= [0m
[40;36m ======= find relate stmt with code ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;46m =======add node_fun stack:wait_or_whine========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662e4120
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf662db6c0 code>
    def_stmt code_97 = finish_command (_12);
    version:97>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662e3360
    type <pointer_type 0x7fdf662bb7e0
        type <record_type 0x7fdf662bb738 child_process BLK
            size <integer_cst 0x7fdf662a4978 constant 640>
            unit-size <integer_cst 0x7fdf662a4948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738 fields <field_decl 0x7fdf662bd850 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _44 = &_43->process;
    version:44
    ptr-info 0x7fdf663041f8>
 <ssa_name 0x7fdf662e3360
    type <pointer_type 0x7fdf662bb7e0
        type <record_type 0x7fdf662bb738 child_process BLK
            size <integer_cst 0x7fdf662a4978 constant 640>
            unit-size <integer_cst 0x7fdf662a4948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738 fields <field_decl 0x7fdf662bd850 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _44 = &_43->process;
    version:44
    ptr-info 0x7fdf663041f8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662e3360
    type <pointer_type 0x7fdf662bb7e0
        type <record_type 0x7fdf662bb738 child_process BLK
            size <integer_cst 0x7fdf662a4978 constant 640>
            unit-size <integer_cst 0x7fdf662a4948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738 fields <field_decl 0x7fdf662bd850 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _44 = &_43->process;
    version:44
    ptr-info 0x7fdf663041f8>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_118 = VDEF <.MEM_117>
child_process_init (_44);
child_process_init (_44);
./benchmarks/git/use_after_free_2/git_uaf_2.c:289:17: warning: use location
  289 |                 child_process_init(&pp->children[i].process);
      |                 ^
this stmt call this function :child_process_init
trace fucntion name:child_process_init 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_118 = VDEF <.MEM_117>
child_process_init (_44);
child_process_init (_44);
./benchmarks/git/use_after_free_2/git_uaf_2.c:289:17: warning: use location
this stmt call this function :child_process_init
trace fucntion name:child_process_init 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662e3360
    type <pointer_type 0x7fdf662bb7e0
        type <record_type 0x7fdf662bb738 child_process BLK
            size <integer_cst 0x7fdf662a4978 constant 640>
            unit-size <integer_cst 0x7fdf662a4948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738 fields <field_decl 0x7fdf662bd850 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _44 = &_43->process;
    version:44
    ptr-info 0x7fdf663041f8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662e3558
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _51 = &pp_91(D)->buffered_output;
    version:51
    ptr-info 0x7fdf66304258>
 <ssa_name 0x7fdf662e3558
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _51 = &pp_91(D)->buffered_output;
    version:51
    ptr-info 0x7fdf66304258>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662e3558
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _51 = &pp_91(D)->buffered_output;
    version:51
    ptr-info 0x7fdf66304258>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_124 = VDEF <.MEM_118>
strbuf_addbuf (_51, _50);
strbuf_addbuf (_51, _50);
./benchmarks/git/use_after_free_2/git_uaf_2.c:292:25: warning: use location
  292 |                         strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);
      |                         ^
this stmt call this function :strbuf_addbuf
trace fucntion name:strbuf_addbuf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_124 = VDEF <.MEM_118>
strbuf_addbuf (_51, _50);
strbuf_addbuf (_51, _50);
./benchmarks/git/use_after_free_2/git_uaf_2.c:292:25: warning: use location
this stmt call this function :strbuf_addbuf
trace fucntion name:strbuf_addbuf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662e3558
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _51 = &pp_91(D)->buffered_output;
    version:51
    ptr-info 0x7fdf66304258>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662e3510
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _50 = &_49->err;
    version:50
    ptr-info 0x7fdf66304240>
 <ssa_name 0x7fdf662e3510
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _50 = &_49->err;
    version:50
    ptr-info 0x7fdf66304240>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662e3510
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _50 = &_49->err;
    version:50
    ptr-info 0x7fdf66304240>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_124 = VDEF <.MEM_118>
strbuf_addbuf (_51, _50);
strbuf_addbuf (_51, _50);
./benchmarks/git/use_after_free_2/git_uaf_2.c:292:25: warning: use location
this stmt call this function :strbuf_addbuf
trace fucntion name:strbuf_addbuf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_124 = VDEF <.MEM_118>
strbuf_addbuf (_51, _50);
strbuf_addbuf (_51, _50);
./benchmarks/git/use_after_free_2/git_uaf_2.c:292:25: warning: use location
this stmt call this function :strbuf_addbuf
trace fucntion name:strbuf_addbuf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662e3510
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _50 = &_49->err;
    version:50
    ptr-info 0x7fdf66304240>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662e36c0
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _56 = &_55->err;
    version:56
    ptr-info 0x7fdf663042a0>
 <ssa_name 0x7fdf662e36c0
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _56 = &_55->err;
    version:56
    ptr-info 0x7fdf663042a0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662e36c0
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _56 = &_55->err;
    version:56
    ptr-info 0x7fdf663042a0>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_125 = VDEF <.MEM_124>
strbuf_reset (_56);
strbuf_reset (_56);
./benchmarks/git/use_after_free_2/git_uaf_2.c:293:25: warning: use location
  293 |                         strbuf_reset(&pp->children[i].err);
      |                         ^
this stmt call this function :strbuf_reset
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_125 = VDEF <.MEM_124>
strbuf_reset (_56);
strbuf_reset (_56);
./benchmarks/git/use_after_free_2/git_uaf_2.c:293:25: warning: use location
this stmt call this function :strbuf_reset
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662e36c0
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _56 = &_55->err;
    version:56
    ptr-info 0x7fdf663042a0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662e3870
    type <pointer_type 0x7fdf662b4000
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662b6690>>
   
    def_stmt _62 = _61->err.buf;
    version:62
    ptr-info 0x7fdf66304300>
 <ssa_name 0x7fdf662e3870
    type <pointer_type 0x7fdf662b4000
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662b6690>>
   
    def_stmt _62 = _61->err.buf;
    version:62
    ptr-info 0x7fdf66304300>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662e3870
    type <pointer_type 0x7fdf662b4000
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662b6690>>
   
    def_stmt _62 = _61->err.buf;
    version:62
    ptr-info 0x7fdf66304300>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_119 = VDEF <.MEM_118>
fputs (_62, _57);
fputs (_62, _57);
./benchmarks/git/use_after_free_2/git_uaf_2.c:295:25: warning: use location
  295 |                         fputs(pp->children[i].err.buf, stderr);
      |                         ^
this stmt call this function :fputs
trace fucntion name:fputs 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_119 = VDEF <.MEM_118>
fputs (_62, _57);
fputs (_62, _57);
./benchmarks/git/use_after_free_2/git_uaf_2.c:295:25: warning: use location
this stmt call this function :fputs
trace fucntion name:fputs 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662e3870
    type <pointer_type 0x7fdf662b4000
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662b6690>>
   
    def_stmt _62 = _61->err.buf;
    version:62
    ptr-info 0x7fdf66304300>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662e3708
    type <pointer_type 0x7fdf662b63f0
        type <record_type 0x7fdf662b6348 FILE BLK
            size <integer_cst 0x7fdf662a4840 constant 1728>
            unit-size <integer_cst 0x7fdf662a4960 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b62a0 fields <field_decl 0x7fdf662b8b48 _flags> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662b63f0>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fdf662bee70>>
   
    def_stmt _57 = stderr;
    version:57
    ptr-info 0x7fdf663042b8>
 <ssa_name 0x7fdf662e3708
    type <pointer_type 0x7fdf662b63f0
        type <record_type 0x7fdf662b6348 FILE BLK
            size <integer_cst 0x7fdf662a4840 constant 1728>
            unit-size <integer_cst 0x7fdf662a4960 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b62a0 fields <field_decl 0x7fdf662b8b48 _flags> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662b63f0>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fdf662bee70>>
   
    def_stmt _57 = stderr;
    version:57
    ptr-info 0x7fdf663042b8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662e3708
    type <pointer_type 0x7fdf662b63f0
        type <record_type 0x7fdf662b6348 FILE BLK
            size <integer_cst 0x7fdf662a4840 constant 1728>
            unit-size <integer_cst 0x7fdf662a4960 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b62a0 fields <field_decl 0x7fdf662b8b48 _flags> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662b63f0>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fdf662bee70>>
   
    def_stmt _57 = stderr;
    version:57
    ptr-info 0x7fdf663042b8>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_119 = VDEF <.MEM_118>
fputs (_62, _57);
fputs (_62, _57);
./benchmarks/git/use_after_free_2/git_uaf_2.c:295:25: warning: use location
this stmt call this function :fputs
trace fucntion name:fputs 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_119 = VDEF <.MEM_118>
fputs (_62, _57);
fputs (_62, _57);
./benchmarks/git/use_after_free_2/git_uaf_2.c:295:25: warning: use location
this stmt call this function :fputs
trace fucntion name:fputs 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662e3708
    type <pointer_type 0x7fdf662b63f0
        type <record_type 0x7fdf662b6348 FILE BLK
            size <integer_cst 0x7fdf662a4840 constant 1728>
            unit-size <integer_cst 0x7fdf662a4960 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b62a0 fields <field_decl 0x7fdf662b8b48 _flags> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662b63f0>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fdf662bee70>>
   
    def_stmt _57 = stderr;
    version:57
    ptr-info 0x7fdf663042b8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662e39d8
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _67 = &_66->err;
    version:67
    ptr-info 0x7fdf66304348>
 <ssa_name 0x7fdf662e39d8
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _67 = &_66->err;
    version:67
    ptr-info 0x7fdf66304348>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662e39d8
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _67 = &_66->err;
    version:67
    ptr-info 0x7fdf66304348>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_120 = VDEF <.MEM_119>
strbuf_reset (_67);
strbuf_reset (_67);
./benchmarks/git/use_after_free_2/git_uaf_2.c:296:25: warning: use location
  296 |                         strbuf_reset(&pp->children[i].err);
      |                         ^
this stmt call this function :strbuf_reset
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_120 = VDEF <.MEM_119>
strbuf_reset (_67);
strbuf_reset (_67);
./benchmarks/git/use_after_free_2/git_uaf_2.c:296:25: warning: use location
this stmt call this function :strbuf_reset
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662e39d8
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _67 = &_66->err;
    version:67
    ptr-info 0x7fdf66304348>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662e3a68
    type <pointer_type 0x7fdf662b4000
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662b6690>>
   
    def_stmt _69 = pp_91(D)->buffered_output.buf;
    version:69
    ptr-info 0x7fdf66304378>
 <ssa_name 0x7fdf662e3a68
    type <pointer_type 0x7fdf662b4000
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662b6690>>
   
    def_stmt _69 = pp_91(D)->buffered_output.buf;
    version:69
    ptr-info 0x7fdf66304378>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662e3a68
    type <pointer_type 0x7fdf662b4000
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662b6690>>
   
    def_stmt _69 = pp_91(D)->buffered_output.buf;
    version:69
    ptr-info 0x7fdf66304378>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_121 = VDEF <.MEM_120>
fputs (_69, _68);
fputs (_69, _68);
./benchmarks/git/use_after_free_2/git_uaf_2.c:299:25: warning: use location
  299 |                         fputs(pp->buffered_output.buf, stderr);
      |                         ^
this stmt call this function :fputs
trace fucntion name:fputs 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_121 = VDEF <.MEM_120>
fputs (_69, _68);
fputs (_69, _68);
./benchmarks/git/use_after_free_2/git_uaf_2.c:299:25: warning: use location
this stmt call this function :fputs
trace fucntion name:fputs 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662e3a68
    type <pointer_type 0x7fdf662b4000
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662b6690>>
   
    def_stmt _69 = pp_91(D)->buffered_output.buf;
    version:69
    ptr-info 0x7fdf66304378>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662e3a20
    type <pointer_type 0x7fdf662b63f0
        type <record_type 0x7fdf662b6348 FILE BLK
            size <integer_cst 0x7fdf662a4840 constant 1728>
            unit-size <integer_cst 0x7fdf662a4960 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b62a0 fields <field_decl 0x7fdf662b8b48 _flags> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662b63f0>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fdf662bee70>>
   
    def_stmt _68 = stderr;
    version:68
    ptr-info 0x7fdf66304360>
 <ssa_name 0x7fdf662e3a20
    type <pointer_type 0x7fdf662b63f0
        type <record_type 0x7fdf662b6348 FILE BLK
            size <integer_cst 0x7fdf662a4840 constant 1728>
            unit-size <integer_cst 0x7fdf662a4960 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b62a0 fields <field_decl 0x7fdf662b8b48 _flags> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662b63f0>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fdf662bee70>>
   
    def_stmt _68 = stderr;
    version:68
    ptr-info 0x7fdf66304360>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662e3a20
    type <pointer_type 0x7fdf662b63f0
        type <record_type 0x7fdf662b6348 FILE BLK
            size <integer_cst 0x7fdf662a4840 constant 1728>
            unit-size <integer_cst 0x7fdf662a4960 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b62a0 fields <field_decl 0x7fdf662b8b48 _flags> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662b63f0>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fdf662bee70>>
   
    def_stmt _68 = stderr;
    version:68
    ptr-info 0x7fdf66304360>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_121 = VDEF <.MEM_120>
fputs (_69, _68);
fputs (_69, _68);
./benchmarks/git/use_after_free_2/git_uaf_2.c:299:25: warning: use location
this stmt call this function :fputs
trace fucntion name:fputs 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_121 = VDEF <.MEM_120>
fputs (_69, _68);
fputs (_69, _68);
./benchmarks/git/use_after_free_2/git_uaf_2.c:299:25: warning: use location
this stmt call this function :fputs
trace fucntion name:fputs 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662e3a20
    type <pointer_type 0x7fdf662b63f0
        type <record_type 0x7fdf662b6348 FILE BLK
            size <integer_cst 0x7fdf662a4840 constant 1728>
            unit-size <integer_cst 0x7fdf662a4960 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b62a0 fields <field_decl 0x7fdf662b8b48 _flags> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662b63f0>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fdf662bee70>>
   
    def_stmt _68 = stderr;
    version:68
    ptr-info 0x7fdf66304360>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662e3ab0
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _70 = &pp_91(D)->buffered_output;
    version:70
    ptr-info 0x7fdf66304390>
 <ssa_name 0x7fdf662e3ab0
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _70 = &pp_91(D)->buffered_output;
    version:70
    ptr-info 0x7fdf66304390>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662e3ab0
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _70 = &pp_91(D)->buffered_output;
    version:70
    ptr-info 0x7fdf66304390>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_122 = VDEF <.MEM_121>
strbuf_reset (_70);
strbuf_reset (_70);
./benchmarks/git/use_after_free_2/git_uaf_2.c:300:25: warning: use location
  300 |                         strbuf_reset(&pp->buffered_output);
      |                         ^
this stmt call this function :strbuf_reset
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_122 = VDEF <.MEM_121>
strbuf_reset (_70);
strbuf_reset (_70);
./benchmarks/git/use_after_free_2/git_uaf_2.c:300:25: warning: use location
this stmt call this function :strbuf_reset
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662e3ab0
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _70 = &pp_91(D)->buffered_output;
    version:70
    ptr-info 0x7fdf66304390>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:pp_collect_finished========= [0m
[40;42m =======pre add _ fucntion:pp_output========= [0m
[40;33m =======POP node_fun stack:pp_output========= [0m
[40;42m =======pre add _ fucntion:pp_buffer_stderr========= [0m
[40;33m =======POP node_fun stack:pp_buffer_stderr========= [0m
[40;42m =======pre add _ fucntion:pp_start_one========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path pp_start_one  function_call count: 5 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;33m =======POP node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;33m =======POP node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:start_command========= [0m
[40;33m =======POP node_fun stack:start_command========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:pp_start_one========= [0m
[40;42m =======start_check_funciton:pp_start_one========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fdf662ed480
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _30 = &pp_102(D)->buffered_output;
    version:30
    ptr-info 0x7fdf663045e8>
 <ssa_name 0x7fdf662ed480
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _30 = &pp_102(D)->buffered_output;
    version:30
    ptr-info 0x7fdf663045e8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662ed480
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _30 = &pp_102(D)->buffered_output;
    version:30
    ptr-info 0x7fdf663045e8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_130 = VDEF <.MEM_118>
strbuf_addbuf (_30, _29);
strbuf_addbuf (_30, _29);
./benchmarks/git/use_after_free_2/git_uaf_2.c:227:17: warning: use location
  227 |                 strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);
      |                 ^
this stmt call this function :strbuf_addbuf
trace fucntion name:strbuf_addbuf 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_130 = VDEF <.MEM_118>
strbuf_addbuf (_30, _29);
strbuf_addbuf (_30, _29);
./benchmarks/git/use_after_free_2/git_uaf_2.c:227:17: warning: use location
this stmt call this function :strbuf_addbuf
trace fucntion name:strbuf_addbuf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662ed480
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _30 = &pp_102(D)->buffered_output;
    version:30
    ptr-info 0x7fdf663045e8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662ed438
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _29 = &_28->err;
    version:29
    ptr-info 0x7fdf663045d0>
 <ssa_name 0x7fdf662ed438
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _29 = &_28->err;
    version:29
    ptr-info 0x7fdf663045d0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662ed438
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _29 = &_28->err;
    version:29
    ptr-info 0x7fdf663045d0>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_130 = VDEF <.MEM_118>
strbuf_addbuf (_30, _29);
strbuf_addbuf (_30, _29);
./benchmarks/git/use_after_free_2/git_uaf_2.c:227:17: warning: use location
this stmt call this function :strbuf_addbuf
trace fucntion name:strbuf_addbuf 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_130 = VDEF <.MEM_118>
strbuf_addbuf (_30, _29);
strbuf_addbuf (_30, _29);
./benchmarks/git/use_after_free_2/git_uaf_2.c:227:17: warning: use location
this stmt call this function :strbuf_addbuf
trace fucntion name:strbuf_addbuf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662ed438
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _29 = &_28->err;
    version:29
    ptr-info 0x7fdf663045d0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662ed5e8
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _35 = &_34->err;
    version:35
    ptr-info 0x7fdf66304630>
 <ssa_name 0x7fdf662ed5e8
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _35 = &_34->err;
    version:35
    ptr-info 0x7fdf66304630>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662ed5e8
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _35 = &_34->err;
    version:35
    ptr-info 0x7fdf66304630>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_131 = VDEF <.MEM_130>
strbuf_reset (_35);
strbuf_reset (_35);
./benchmarks/git/use_after_free_2/git_uaf_2.c:228:17: warning: use location
  228 |                 strbuf_reset(&pp->children[i].err);
      |                 ^
this stmt call this function :strbuf_reset
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_131 = VDEF <.MEM_130>
strbuf_reset (_35);
strbuf_reset (_35);
./benchmarks/git/use_after_free_2/git_uaf_2.c:228:17: warning: use location
this stmt call this function :strbuf_reset
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662ed5e8
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _35 = &_34->err;
    version:35
    ptr-info 0x7fdf66304630>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662edab0
    type <pointer_type 0x7fdf662bb7e0
        type <record_type 0x7fdf662bb738 child_process BLK
            size <integer_cst 0x7fdf662a4978 constant 640>
            unit-size <integer_cst 0x7fdf662a4948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738 fields <field_decl 0x7fdf662bd850 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _52 = &_51->process;
    version:52
    ptr-info 0x7fdf66304708>
 <ssa_name 0x7fdf662edab0
    type <pointer_type 0x7fdf662bb7e0
        type <record_type 0x7fdf662bb738 child_process BLK
            size <integer_cst 0x7fdf662a4978 constant 640>
            unit-size <integer_cst 0x7fdf662a4948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738 fields <field_decl 0x7fdf662bd850 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _52 = &_51->process;
    version:52
    ptr-info 0x7fdf66304708>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662edab0
    type <pointer_type 0x7fdf662bb7e0
        type <record_type 0x7fdf662bb738 child_process BLK
            size <integer_cst 0x7fdf662a4978 constant 640>
            unit-size <integer_cst 0x7fdf662a4948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738 fields <field_decl 0x7fdf662bd850 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _52 = &_51->process;
    version:52
    ptr-info 0x7fdf66304708>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_122 = VDEF <.MEM_121>
_53 = start_command (_52);
_53 = start_command (_52);
./benchmarks/git/use_after_free_2/git_uaf_2.c:235:13: warning: use location
  235 |         if (start_command(&pp->children[i].process)) {
      |             ^
this stmt call this function :start_command
trace fucntion name:start_command 

 ================== trace ================== 
trace fucntion free:0 
if (_53 != 0)
./benchmarks/git/use_after_free_2/git_uaf_2.c:235:12: warning: use location
  235 |         if (start_command(&pp->children[i].process)) {
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662edab0
    type <pointer_type 0x7fdf662bb7e0
        type <record_type 0x7fdf662bb738 child_process BLK
            size <integer_cst 0x7fdf662a4978 constant 640>
            unit-size <integer_cst 0x7fdf662a4948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738 fields <field_decl 0x7fdf662bd850 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _52 = &_51->process;
    version:52
    ptr-info 0x7fdf66304708>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662edaf8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _53 = start_command (_52);
    version:53>
 <ssa_name 0x7fdf662edaf8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _53 = start_command (_52);
    version:53>

 ================== pre trace ptable ================== 
trace fucntion name:start_command 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662edaf8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _53 = start_command (_52);
    version:53>
is Other function start_command
 
 Start check Pointer Collect  

======================================================================
# .MEM_122 = VDEF <.MEM_121>
_53 = start_command (_52);
_53 = start_command (_52);
./benchmarks/git/use_after_free_2/git_uaf_2.c:235:13: warning: use location
  235 |         if (start_command(&pp->children[i].process)) {
      |             ^
this stmt call this function :start_command
trace fucntion name:start_command 

 ================== trace ================== 
trace fucntion free:0 
if (_53 != 0)
./benchmarks/git/use_after_free_2/git_uaf_2.c:235:12: warning: use location
  235 |         if (start_command(&pp->children[i].process)) {
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662edaf8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _53 = start_command (_52);
    version:53>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662ee1b0
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _76 = &pp_102(D)->buffered_output;
    version:76
    ptr-info 0x7fdf66304870>
 <ssa_name 0x7fdf662ee1b0
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _76 = &pp_102(D)->buffered_output;
    version:76
    ptr-info 0x7fdf66304870>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662ee1b0
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _76 = &pp_102(D)->buffered_output;
    version:76
    ptr-info 0x7fdf66304870>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_127 = VDEF <.MEM_126>
strbuf_addbuf (_76, _75);
strbuf_addbuf (_76, _75);
./benchmarks/git/use_after_free_2/git_uaf_2.c:240:17: warning: use location
  240 |                 strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);
      |                 ^
this stmt call this function :strbuf_addbuf
trace fucntion name:strbuf_addbuf 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_127 = VDEF <.MEM_126>
strbuf_addbuf (_76, _75);
strbuf_addbuf (_76, _75);
./benchmarks/git/use_after_free_2/git_uaf_2.c:240:17: warning: use location
this stmt call this function :strbuf_addbuf
trace fucntion name:strbuf_addbuf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662ee1b0
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _76 = &pp_102(D)->buffered_output;
    version:76
    ptr-info 0x7fdf66304870>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662ee168
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _75 = &_74->err;
    version:75
    ptr-info 0x7fdf66304858>
 <ssa_name 0x7fdf662ee168
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _75 = &_74->err;
    version:75
    ptr-info 0x7fdf66304858>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662ee168
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _75 = &_74->err;
    version:75
    ptr-info 0x7fdf66304858>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_127 = VDEF <.MEM_126>
strbuf_addbuf (_76, _75);
strbuf_addbuf (_76, _75);
./benchmarks/git/use_after_free_2/git_uaf_2.c:240:17: warning: use location
this stmt call this function :strbuf_addbuf
trace fucntion name:strbuf_addbuf 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_127 = VDEF <.MEM_126>
strbuf_addbuf (_76, _75);
strbuf_addbuf (_76, _75);
./benchmarks/git/use_after_free_2/git_uaf_2.c:240:17: warning: use location
this stmt call this function :strbuf_addbuf
trace fucntion name:strbuf_addbuf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662ee168
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _75 = &_74->err;
    version:75
    ptr-info 0x7fdf66304858>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662ee318
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _81 = &_80->err;
    version:81
    ptr-info 0x7fdf663048b8>
 <ssa_name 0x7fdf662ee318
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _81 = &_80->err;
    version:81
    ptr-info 0x7fdf663048b8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662ee318
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _81 = &_80->err;
    version:81
    ptr-info 0x7fdf663048b8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_128 = VDEF <.MEM_127>
strbuf_reset (_81);
strbuf_reset (_81);
./benchmarks/git/use_after_free_2/git_uaf_2.c:241:17: warning: use location
  241 |                 strbuf_reset(&pp->children[i].err);
      |                 ^
this stmt call this function :strbuf_reset
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_128 = VDEF <.MEM_127>
strbuf_reset (_81);
strbuf_reset (_81);
./benchmarks/git/use_after_free_2/git_uaf_2.c:241:17: warning: use location
this stmt call this function :strbuf_reset
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662ee318
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _81 = &_80->err;
    version:81
    ptr-info 0x7fdf663048b8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:pp_start_one========= [0m
[40;42m =======pre add _ fucntion:pp_init========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path pp_init  function_call count: 7 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;33m =======POP node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;33m =======POP node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;33m =======POP node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;33m =======POP node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;33m =======POP node_fun stack:online_cpus========= [0m
[40;42m =======pre_check_funciton:pp_init========= [0m
[40;42m =======start_check_funciton:pp_init========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fdf662f86c0
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <parm_decl 0x7fdf662f6000 n>
    def_stmt n_33 = online_cpus ();
    version:33>
 <ssa_name 0x7fdf662f86c0
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <parm_decl 0x7fdf662f6000 n>
    def_stmt n_33 = online_cpus ();
    version:33>

 ================== pre trace ptable ================== 
trace fucntion name:online_cpus 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662f86c0
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <parm_decl 0x7fdf662f6000 n>
    def_stmt n_33 = online_cpus ();
    version:33>
is Other function online_cpus
 
 Start check Pointer Collect  

======================================================================
n_24 = PHI <n_30(D)(2), n_33(3)>
lto1: warning: use location
this stmt have mutiple branch ---online_cpus-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (n_24 > i_25)
./benchmarks/git/use_after_free_2/git_uaf_2.c:195:23: warning: use location
  195 |         for (i = 0; i < n; i++) {
      |                       ^
_3 = (long unsigned int) n_24;
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:19: warning: use location
  192 |         pp->pfd = xcalloc(n, sizeof(*pp->pfd));
      |                   ^
_4 = calloc (_3, 8);
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:19: warning: use location
this stmt call this function :calloc
pp_34(D)->pfd = _4;
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:17: warning: use location
  192 |         pp->pfd = xcalloc(n, sizeof(*pp->pfd));
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = pp_34(D)->pfd;
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:19: warning: use location
  199 |                 pp->pfd[i].fd = -1;
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23->fd = -1;
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:31: warning: use location
  199 |                 pp->pfd[i].fd = -1;
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = pp_34(D)->pfd;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:19: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = _16 + _18;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:24: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19->events = 17;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:35: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = pp_34(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:39: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = _11 + _13;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:49: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = &_14->process;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
child_process_init (_15);
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
this stmt call this function :child_process_init
trace fucntion name:child_process_init 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = pp_34(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:32: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = _6 + _8;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:42: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = &_9->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strbuf_init (_10, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
this stmt call this function :strbuf_init
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 
_5 = &pp_34(D)->buffered_output;
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: use location
  193 |         strbuf_init(&pp->buffered_output, 0);
      |         ^
strbuf_init (_5, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: use location
this stmt call this function :strbuf_init
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 
pp_34(D)->children = _2;
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:22: warning: use location
  191 |         pp->children = xcalloc(n, sizeof(*pp->children));
      |                      ^
pp_34(D)->children = _2;
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:22: warning: use location
pp_34(D)->shutdown = 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:190:22: warning: use location
  190 |         pp->shutdown = 0;
      |                      ^
pp_34(D)->output_owner = 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:189:26: warning: use location
  189 |         pp->output_owner = 0;
      |                          ^
pp_34(D)->nr_processes = 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:188:26: warning: use location
  188 |         pp->nr_processes = 0;
      |                          ^
pp_34(D)->task_finished = _27;
./benchmarks/git/use_after_free_2/git_uaf_2.c:186:27: warning: use location
  186 |         pp->task_finished = task_finished ? task_finished : default_task_finished;
      |                           ^
pp_34(D)->task_finished = _27;
./benchmarks/git/use_after_free_2/git_uaf_2.c:186:27: warning: use location
pp_34(D)->start_failure = _26;
./benchmarks/git/use_after_free_2/git_uaf_2.c:185:27: warning: use location
  185 |         pp->start_failure = start_failure ? start_failure : default_start_failure;
      |                           ^
pp_34(D)->start_failure = _26;
./benchmarks/git/use_after_free_2/git_uaf_2.c:185:27: warning: use location
pp_34(D)->get_next_task = get_next_task_39(D);
./benchmarks/git/use_after_free_2/git_uaf_2.c:183:27: warning: use location
  183 |         pp->get_next_task = get_next_task;
      |                           ^
pp_34(D)->get_next_task = get_next_task_39(D);
./benchmarks/git/use_after_free_2/git_uaf_2.c:183:27: warning: use location
if (get_next_task_39(D) == 0B)
./benchmarks/git/use_after_free_2/git_uaf_2.c:181:12: warning: use location
  181 |         if (!get_next_task)
      |            ^
pp_34(D)->data = data_37(D);
./benchmarks/git/use_after_free_2/git_uaf_2.c:180:18: warning: use location
  180 |         pp->data = data;
      |                  ^
pp_34(D)->data = data_37(D);
./benchmarks/git/use_after_free_2/git_uaf_2.c:180:18: warning: use location
pp_34(D)->max_processes = n_24;
./benchmarks/git/use_after_free_2/git_uaf_2.c:176:27: warning: use location
  176 |         pp->max_processes = n;
      |                           ^
_1 = (long unsigned int) n_24;
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:24: warning: use location
  191 |         pp->children = xcalloc(n, sizeof(*pp->children));
      |                        ^
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
./benchmarks/git/use_after_free_2/git_uaf_2.c:178:9: warning: use location
  178 |         trace_printf("run_processes_parallel: preparing to run up to %d tasks", n);
      |         ^
this stmt call this function :trace_printf
trace fucntion name:trace_printf 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_62 = VDEF <.MEM_61(D)>
n_33 = online_cpus ();
n_33 = online_cpus ();
./benchmarks/git/use_after_free_2/git_uaf_2.c:174:21: warning: use location
  174 |                 n = online_cpus();
      |                     ^
this stmt call this function :online_cpus
trace fucntion name:online_cpus 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662f86c0
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <parm_decl 0x7fdf662f6000 n>
    def_stmt n_33 = online_cpus ();
    version:33>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <string_cst 0x7fdf662f3280
    type <array_type 0x7fdf662be3f0
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        BLK
        size <integer_cst 0x7fdf662a4c00 constant 448>
        unit-size <integer_cst 0x7fdf662a4c48 constant 56>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7fdf662be348 type <integer_type 0x7fdf667aa000 sizetype>
            DI
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa738 precision:64 min <integer_cst 0x7fdf66795be8 0> max <integer_cst 0x7fdf662a4c30 55>>
        pointer_to_this <pointer_type 0x7fdf662be498>>
    readonly constant static "run_processes_parallel: preparing to run up to %d tasks\000">

dot graph START

======================================================================
 <ssa_name 0x7fdf662f8558
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <parm_decl 0x7fdf662f6000 n>
    def_stmt n_24 = PHI <n_30(D)(2), n_33(3)>
    version:24>
 <ssa_name 0x7fdf662f8558
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <parm_decl 0x7fdf662f6000 n>
    def_stmt n_24 = PHI <n_30(D)(2), n_33(3)>
    version:24>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662f8558
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <parm_decl 0x7fdf662f6000 n>
    def_stmt n_24 = PHI <n_30(D)(2), n_33(3)>
    version:24>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (n_24 > i_25)
./benchmarks/git/use_after_free_2/git_uaf_2.c:195:23: warning: use location
  195 |         for (i = 0; i < n; i++) {
      |                       ^
_3 = (long unsigned int) n_24;
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:19: warning: use location
  192 |         pp->pfd = xcalloc(n, sizeof(*pp->pfd));
      |                   ^
_4 = calloc (_3, 8);
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:19: warning: use location
this stmt call this function :calloc
pp_34(D)->pfd = _4;
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:17: warning: use location
  192 |         pp->pfd = xcalloc(n, sizeof(*pp->pfd));
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = pp_34(D)->pfd;
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:19: warning: use location
  199 |                 pp->pfd[i].fd = -1;
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23->fd = -1;
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:31: warning: use location
  199 |                 pp->pfd[i].fd = -1;
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = pp_34(D)->pfd;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:19: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = _16 + _18;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:24: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19->events = 17;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:35: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = pp_34(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:39: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = _11 + _13;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:49: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = &_14->process;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
child_process_init (_15);
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
this stmt call this function :child_process_init
trace fucntion name:child_process_init 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = pp_34(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:32: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = _6 + _8;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:42: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = &_9->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strbuf_init (_10, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
this stmt call this function :strbuf_init
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 
_5 = &pp_34(D)->buffered_output;
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: use location
  193 |         strbuf_init(&pp->buffered_output, 0);
      |         ^
strbuf_init (_5, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: use location
this stmt call this function :strbuf_init
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 
pp_34(D)->children = _2;
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:22: warning: use location
  191 |         pp->children = xcalloc(n, sizeof(*pp->children));
      |                      ^
pp_34(D)->children = _2;
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:22: warning: use location
pp_34(D)->shutdown = 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:190:22: warning: use location
  190 |         pp->shutdown = 0;
      |                      ^
pp_34(D)->output_owner = 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:189:26: warning: use location
  189 |         pp->output_owner = 0;
      |                          ^
pp_34(D)->nr_processes = 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:188:26: warning: use location
  188 |         pp->nr_processes = 0;
      |                          ^
pp_34(D)->task_finished = _27;
./benchmarks/git/use_after_free_2/git_uaf_2.c:186:27: warning: use location
  186 |         pp->task_finished = task_finished ? task_finished : default_task_finished;
      |                           ^
pp_34(D)->task_finished = _27;
./benchmarks/git/use_after_free_2/git_uaf_2.c:186:27: warning: use location
pp_34(D)->start_failure = _26;
./benchmarks/git/use_after_free_2/git_uaf_2.c:185:27: warning: use location
  185 |         pp->start_failure = start_failure ? start_failure : default_start_failure;
      |                           ^
pp_34(D)->start_failure = _26;
./benchmarks/git/use_after_free_2/git_uaf_2.c:185:27: warning: use location
pp_34(D)->get_next_task = get_next_task_39(D);
./benchmarks/git/use_after_free_2/git_uaf_2.c:183:27: warning: use location
  183 |         pp->get_next_task = get_next_task;
      |                           ^
pp_34(D)->get_next_task = get_next_task_39(D);
./benchmarks/git/use_after_free_2/git_uaf_2.c:183:27: warning: use location
if (get_next_task_39(D) == 0B)
./benchmarks/git/use_after_free_2/git_uaf_2.c:181:12: warning: use location
  181 |         if (!get_next_task)
      |            ^
pp_34(D)->data = data_37(D);
./benchmarks/git/use_after_free_2/git_uaf_2.c:180:18: warning: use location
  180 |         pp->data = data;
      |                  ^
pp_34(D)->data = data_37(D);
./benchmarks/git/use_after_free_2/git_uaf_2.c:180:18: warning: use location
pp_34(D)->max_processes = n_24;
./benchmarks/git/use_after_free_2/git_uaf_2.c:176:27: warning: use location
  176 |         pp->max_processes = n;
      |                           ^
pp_34(D)->max_processes = n_24;
./benchmarks/git/use_after_free_2/git_uaf_2.c:176:27: warning: use location
_1 = (long unsigned int) n_24;
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:24: warning: use location
  191 |         pp->children = xcalloc(n, sizeof(*pp->children));
      |                        ^
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
./benchmarks/git/use_after_free_2/git_uaf_2.c:178:9: warning: use location
  178 |         trace_printf("run_processes_parallel: preparing to run up to %d tasks", n);
      |         ^
this stmt call this function :trace_printf
trace fucntion name:trace_printf 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
./benchmarks/git/use_after_free_2/git_uaf_2.c:178:9: warning: use location
this stmt call this function :trace_printf
trace fucntion name:trace_printf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662f8558
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <parm_decl 0x7fdf662f6000 n>
    def_stmt n_24 = PHI <n_30(D)(2), n_33(3)>
    version:24>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662eeee8
    type <pointer_type 0x7fdf667b1000
        type <void_type 0x7fdf667aaf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fdf667b1000>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fdf662ad498>>
   
    def_stmt _2 = calloc (_1, 120);
    version:2
    ptr-info 0x7fdf66304978>
 <ssa_name 0x7fdf662eeee8
    type <pointer_type 0x7fdf667b1000
        type <void_type 0x7fdf667aaf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fdf667b1000>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fdf662ad498>>
   
    def_stmt _2 = calloc (_1, 120);
    version:2
    ptr-info 0x7fdf66304978>

 ================== pre trace ptable ================== 
trace fucntion name:calloc 

 ================== pre trace ptable finish================== 
is Reserved word function :calloc
 
 Start check Pointer Collect  

======================================================================
# .MEM_72 = VDEF <.MEM_71>
_2 = calloc (_1, 120);
_2 = calloc (_1, 120);
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:24: warning: use location
  191 |         pp->children = xcalloc(n, sizeof(*pp->children));
      |                        ^
this stmt call this function :calloc
pp_34(D)->children = _2;
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:22: warning: use location
  191 |         pp->children = xcalloc(n, sizeof(*pp->children));
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = pp_34(D)->pfd;
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:19: warning: use location
  199 |                 pp->pfd[i].fd = -1;
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23->fd = -1;
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:31: warning: use location
  199 |                 pp->pfd[i].fd = -1;
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = pp_34(D)->pfd;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:19: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = _16 + _18;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:24: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19->events = 17;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:35: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = pp_34(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:39: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = _11 + _13;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:49: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = &_14->process;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
child_process_init (_15);
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
this stmt call this function :child_process_init
trace fucntion name:child_process_init 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = pp_34(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:32: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = _6 + _8;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:42: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = &_9->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strbuf_init (_10, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
this stmt call this function :strbuf_init
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 
_5 = &pp_34(D)->buffered_output;
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: use location
  193 |         strbuf_init(&pp->buffered_output, 0);
      |         ^
strbuf_init (_5, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: use location
this stmt call this function :strbuf_init
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 
pp_34(D)->pfd = _4;
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:17: warning: use location
  192 |         pp->pfd = xcalloc(n, sizeof(*pp->pfd));
      |                 ^
pp_34(D)->pfd = _4;
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:17: warning: use location
pp_34(D)->shutdown = 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:190:22: warning: use location
  190 |         pp->shutdown = 0;
      |                      ^
pp_34(D)->output_owner = 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:189:26: warning: use location
  189 |         pp->output_owner = 0;
      |                          ^
pp_34(D)->nr_processes = 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:188:26: warning: use location
  188 |         pp->nr_processes = 0;
      |                          ^
pp_34(D)->task_finished = _27;
./benchmarks/git/use_after_free_2/git_uaf_2.c:186:27: warning: use location
  186 |         pp->task_finished = task_finished ? task_finished : default_task_finished;
      |                           ^
pp_34(D)->task_finished = _27;
./benchmarks/git/use_after_free_2/git_uaf_2.c:186:27: warning: use location
pp_34(D)->start_failure = _26;
./benchmarks/git/use_after_free_2/git_uaf_2.c:185:27: warning: use location
  185 |         pp->start_failure = start_failure ? start_failure : default_start_failure;
      |                           ^
pp_34(D)->start_failure = _26;
./benchmarks/git/use_after_free_2/git_uaf_2.c:185:27: warning: use location
pp_34(D)->get_next_task = get_next_task_39(D);
./benchmarks/git/use_after_free_2/git_uaf_2.c:183:27: warning: use location
  183 |         pp->get_next_task = get_next_task;
      |                           ^
pp_34(D)->get_next_task = get_next_task_39(D);
./benchmarks/git/use_after_free_2/git_uaf_2.c:183:27: warning: use location
if (get_next_task_39(D) == 0B)
./benchmarks/git/use_after_free_2/git_uaf_2.c:181:12: warning: use location
  181 |         if (!get_next_task)
      |            ^
pp_34(D)->data = data_37(D);
./benchmarks/git/use_after_free_2/git_uaf_2.c:180:18: warning: use location
  180 |         pp->data = data;
      |                  ^
pp_34(D)->data = data_37(D);
./benchmarks/git/use_after_free_2/git_uaf_2.c:180:18: warning: use location
pp_34(D)->max_processes = n_24;
./benchmarks/git/use_after_free_2/git_uaf_2.c:176:27: warning: use location
  176 |         pp->max_processes = n;
      |                           ^
pp_34(D)->max_processes = n_24;
./benchmarks/git/use_after_free_2/git_uaf_2.c:176:27: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662eeee8
    type <pointer_type 0x7fdf667b1000
        type <void_type 0x7fdf667aaf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fdf667b1000>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fdf662ad498>>
   
    def_stmt _2 = calloc (_1, 120);
    version:2
    ptr-info 0x7fdf66304978>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662eef78
    type <pointer_type 0x7fdf667b1000
        type <void_type 0x7fdf667aaf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fdf667b1000>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fdf662ad498>>
   
    def_stmt _4 = calloc (_3, 8);
    version:4
    ptr-info 0x7fdf66304990>
 <ssa_name 0x7fdf662eef78
    type <pointer_type 0x7fdf667b1000
        type <void_type 0x7fdf667aaf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fdf667b1000>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fdf662ad498>>
   
    def_stmt _4 = calloc (_3, 8);
    version:4
    ptr-info 0x7fdf66304990>

 ================== pre trace ptable ================== 
trace fucntion name:calloc 

 ================== pre trace ptable finish================== 
is Reserved word function :calloc
 
 Start check Pointer Collect  

======================================================================
# .MEM_74 = VDEF <.MEM_73>
_4 = calloc (_3, 8);
_4 = calloc (_3, 8);
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:19: warning: use location
  192 |         pp->pfd = xcalloc(n, sizeof(*pp->pfd));
      |                   ^
this stmt call this function :calloc
pp_34(D)->pfd = _4;
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:17: warning: use location
  192 |         pp->pfd = xcalloc(n, sizeof(*pp->pfd));
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = pp_34(D)->pfd;
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:19: warning: use location
  199 |                 pp->pfd[i].fd = -1;
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23->fd = -1;
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:31: warning: use location
  199 |                 pp->pfd[i].fd = -1;
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = pp_34(D)->pfd;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:19: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = _16 + _18;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:24: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19->events = 17;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:35: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = pp_34(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:39: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = _11 + _13;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:49: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = &_14->process;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
child_process_init (_15);
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
this stmt call this function :child_process_init
trace fucntion name:child_process_init 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = pp_34(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:32: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = _6 + _8;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:42: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = &_9->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strbuf_init (_10, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
this stmt call this function :strbuf_init
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 
_5 = &pp_34(D)->buffered_output;
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: use location
  193 |         strbuf_init(&pp->buffered_output, 0);
      |         ^
strbuf_init (_5, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: use location
this stmt call this function :strbuf_init
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 
pp_34(D)->children = _2;
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:22: warning: use location
  191 |         pp->children = xcalloc(n, sizeof(*pp->children));
      |                      ^
pp_34(D)->children = _2;
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:22: warning: use location
pp_34(D)->shutdown = 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:190:22: warning: use location
  190 |         pp->shutdown = 0;
      |                      ^
pp_34(D)->output_owner = 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:189:26: warning: use location
  189 |         pp->output_owner = 0;
      |                          ^
pp_34(D)->nr_processes = 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:188:26: warning: use location
  188 |         pp->nr_processes = 0;
      |                          ^
pp_34(D)->task_finished = _27;
./benchmarks/git/use_after_free_2/git_uaf_2.c:186:27: warning: use location
  186 |         pp->task_finished = task_finished ? task_finished : default_task_finished;
      |                           ^
pp_34(D)->task_finished = _27;
./benchmarks/git/use_after_free_2/git_uaf_2.c:186:27: warning: use location
pp_34(D)->start_failure = _26;
./benchmarks/git/use_after_free_2/git_uaf_2.c:185:27: warning: use location
  185 |         pp->start_failure = start_failure ? start_failure : default_start_failure;
      |                           ^
pp_34(D)->start_failure = _26;
./benchmarks/git/use_after_free_2/git_uaf_2.c:185:27: warning: use location
pp_34(D)->get_next_task = get_next_task_39(D);
./benchmarks/git/use_after_free_2/git_uaf_2.c:183:27: warning: use location
  183 |         pp->get_next_task = get_next_task;
      |                           ^
pp_34(D)->get_next_task = get_next_task_39(D);
./benchmarks/git/use_after_free_2/git_uaf_2.c:183:27: warning: use location
if (get_next_task_39(D) == 0B)
./benchmarks/git/use_after_free_2/git_uaf_2.c:181:12: warning: use location
  181 |         if (!get_next_task)
      |            ^
pp_34(D)->data = data_37(D);
./benchmarks/git/use_after_free_2/git_uaf_2.c:180:18: warning: use location
  180 |         pp->data = data;
      |                  ^
pp_34(D)->data = data_37(D);
./benchmarks/git/use_after_free_2/git_uaf_2.c:180:18: warning: use location
pp_34(D)->max_processes = n_24;
./benchmarks/git/use_after_free_2/git_uaf_2.c:176:27: warning: use location
  176 |         pp->max_processes = n;
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (n_24 > i_25)
./benchmarks/git/use_after_free_2/git_uaf_2.c:195:23: warning: use location
  195 |         for (i = 0; i < n; i++) {
      |                       ^
_1 = (long unsigned int) n_24;
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:24: warning: use location
  191 |         pp->children = xcalloc(n, sizeof(*pp->children));
      |                        ^
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
./benchmarks/git/use_after_free_2/git_uaf_2.c:178:9: warning: use location
  178 |         trace_printf("run_processes_parallel: preparing to run up to %d tasks", n);
      |         ^
this stmt call this function :trace_printf
trace fucntion name:trace_printf 

 ================== trace ================== 
trace fucntion free:0 
pp_cleanup (&pp);
./benchmarks/git/use_after_free_2/git_uaf_2.c:371:9: warning: use location
  371 |         pp_cleanup(&pp);
      |         ^
this stmt call this function :pp_cleanup
trace fucntion name:pp_cleanup 

 ================== trace ================== 
trace fucntion free:0 
pp_cleanup (&pp);
./benchmarks/git/use_after_free_2/git_uaf_2.c:371:9: warning: use location
this stmt call this function :pp_cleanup
trace fucntion name:pp_cleanup 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662eef78
    type <pointer_type 0x7fdf667b1000
        type <void_type 0x7fdf667aaf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fdf667b1000>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fdf662ad498>>
   
    def_stmt _4 = calloc (_3, 8);
    version:4
    ptr-info 0x7fdf66304990>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662f8000
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = &pp_34(D)->buffered_output;
    version:5
    ptr-info 0x7fdf663049a8>
 <ssa_name 0x7fdf662f8000
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = &pp_34(D)->buffered_output;
    version:5
    ptr-info 0x7fdf663049a8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662f8000
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = &pp_34(D)->buffered_output;
    version:5
    ptr-info 0x7fdf663049a8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_76 = VDEF <.MEM_75>
strbuf_init (_5, 0);
strbuf_init (_5, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: use location
  193 |         strbuf_init(&pp->buffered_output, 0);
      |         ^
this stmt call this function :strbuf_init
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_76 = VDEF <.MEM_75>
strbuf_init (_5, 0);
strbuf_init (_5, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: use location
this stmt call this function :strbuf_init
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662f8000
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = &pp_34(D)->buffered_output;
    version:5
    ptr-info 0x7fdf663049a8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662f8168
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _10 = &_9->err;
    version:10
    ptr-info 0x7fdf663049f0>
 <ssa_name 0x7fdf662f8168
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _10 = &_9->err;
    version:10
    ptr-info 0x7fdf663049f0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662f8168
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _10 = &_9->err;
    version:10
    ptr-info 0x7fdf663049f0>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_78 = VDEF <.MEM_60>
strbuf_init (_10, 0);
strbuf_init (_10, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                 ^
this stmt call this function :strbuf_init
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_78 = VDEF <.MEM_60>
strbuf_init (_10, 0);
strbuf_init (_10, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
this stmt call this function :strbuf_init
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662f8168
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _10 = &_9->err;
    version:10
    ptr-info 0x7fdf663049f0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662f82d0
    type <pointer_type 0x7fdf662bb7e0
        type <record_type 0x7fdf662bb738 child_process BLK
            size <integer_cst 0x7fdf662a4978 constant 640>
            unit-size <integer_cst 0x7fdf662a4948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738 fields <field_decl 0x7fdf662bd850 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _15 = &_14->process;
    version:15
    ptr-info 0x7fdf66304a38>
 <ssa_name 0x7fdf662f82d0
    type <pointer_type 0x7fdf662bb7e0
        type <record_type 0x7fdf662bb738 child_process BLK
            size <integer_cst 0x7fdf662a4978 constant 640>
            unit-size <integer_cst 0x7fdf662a4948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738 fields <field_decl 0x7fdf662bd850 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _15 = &_14->process;
    version:15
    ptr-info 0x7fdf66304a38>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662f82d0
    type <pointer_type 0x7fdf662bb7e0
        type <record_type 0x7fdf662bb738 child_process BLK
            size <integer_cst 0x7fdf662a4978 constant 640>
            unit-size <integer_cst 0x7fdf662a4948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738 fields <field_decl 0x7fdf662bd850 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _15 = &_14->process;
    version:15
    ptr-info 0x7fdf66304a38>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_79 = VDEF <.MEM_78>
child_process_init (_15);
child_process_init (_15);
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                 ^
this stmt call this function :child_process_init
trace fucntion name:child_process_init 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_79 = VDEF <.MEM_78>
child_process_init (_15);
child_process_init (_15);
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
this stmt call this function :child_process_init
trace fucntion name:child_process_init 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662f82d0
    type <pointer_type 0x7fdf662bb7e0
        type <record_type 0x7fdf662bb738 child_process BLK
            size <integer_cst 0x7fdf662a4978 constant 640>
            unit-size <integer_cst 0x7fdf662a4948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738 fields <field_decl 0x7fdf662bd850 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _15 = &_14->process;
    version:15
    ptr-info 0x7fdf66304a38>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662eeea0
    type <integer_type 0x7fdf667aa7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa738 precision:64 min <integer_cst 0x7fdf66795e88 0> max <integer_cst 0x7fdf66796500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fdf667b67e0>>
   
    def_stmt _1 = (long unsigned int) n_24;
    version:1>
 <ssa_name 0x7fdf662eeea0
    type <integer_type 0x7fdf667aa7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa738 precision:64 min <integer_cst 0x7fdf66795e88 0> max <integer_cst 0x7fdf66796500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fdf667b67e0>>
   
    def_stmt _1 = (long unsigned int) n_24;
    version:1>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662eeea0
    type <integer_type 0x7fdf667aa7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa738 precision:64 min <integer_cst 0x7fdf66795e88 0> max <integer_cst 0x7fdf66796500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fdf667b67e0>>
   
    def_stmt _1 = (long unsigned int) n_24;
    version:1>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_72 = VDEF <.MEM_71>
_2 = calloc (_1, 120);
_2 = calloc (_1, 120);
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:24: warning: use location
  191 |         pp->children = xcalloc(n, sizeof(*pp->children));
      |                        ^
this stmt call this function :calloc
pp_34(D)->children = _2;
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:22: warning: use location
  191 |         pp->children = xcalloc(n, sizeof(*pp->children));
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = pp_34(D)->pfd;
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:19: warning: use location
  199 |                 pp->pfd[i].fd = -1;
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23->fd = -1;
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:31: warning: use location
  199 |                 pp->pfd[i].fd = -1;
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = pp_34(D)->pfd;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:19: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = _16 + _18;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:24: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19->events = 17;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:35: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = pp_34(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:39: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = _11 + _13;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:49: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = &_14->process;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
child_process_init (_15);
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
this stmt call this function :child_process_init
trace fucntion name:child_process_init 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = pp_34(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:32: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = _6 + _8;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:42: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = &_9->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strbuf_init (_10, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
this stmt call this function :strbuf_init
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 
_5 = &pp_34(D)->buffered_output;
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: use location
  193 |         strbuf_init(&pp->buffered_output, 0);
      |         ^
strbuf_init (_5, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: use location
this stmt call this function :strbuf_init
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 
pp_34(D)->pfd = _4;
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:17: warning: use location
  192 |         pp->pfd = xcalloc(n, sizeof(*pp->pfd));
      |                 ^
pp_34(D)->pfd = _4;
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:17: warning: use location
pp_34(D)->shutdown = 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:190:22: warning: use location
  190 |         pp->shutdown = 0;
      |                      ^
pp_34(D)->output_owner = 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:189:26: warning: use location
  189 |         pp->output_owner = 0;
      |                          ^
pp_34(D)->nr_processes = 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:188:26: warning: use location
  188 |         pp->nr_processes = 0;
      |                          ^
pp_34(D)->task_finished = _27;
./benchmarks/git/use_after_free_2/git_uaf_2.c:186:27: warning: use location
  186 |         pp->task_finished = task_finished ? task_finished : default_task_finished;
      |                           ^
pp_34(D)->task_finished = _27;
./benchmarks/git/use_after_free_2/git_uaf_2.c:186:27: warning: use location
pp_34(D)->start_failure = _26;
./benchmarks/git/use_after_free_2/git_uaf_2.c:185:27: warning: use location
  185 |         pp->start_failure = start_failure ? start_failure : default_start_failure;
      |                           ^
pp_34(D)->start_failure = _26;
./benchmarks/git/use_after_free_2/git_uaf_2.c:185:27: warning: use location
pp_34(D)->get_next_task = get_next_task_39(D);
./benchmarks/git/use_after_free_2/git_uaf_2.c:183:27: warning: use location
  183 |         pp->get_next_task = get_next_task;
      |                           ^
pp_34(D)->get_next_task = get_next_task_39(D);
./benchmarks/git/use_after_free_2/git_uaf_2.c:183:27: warning: use location
if (get_next_task_39(D) == 0B)
./benchmarks/git/use_after_free_2/git_uaf_2.c:181:12: warning: use location
  181 |         if (!get_next_task)
      |            ^
pp_34(D)->data = data_37(D);
./benchmarks/git/use_after_free_2/git_uaf_2.c:180:18: warning: use location
  180 |         pp->data = data;
      |                  ^
pp_34(D)->data = data_37(D);
./benchmarks/git/use_after_free_2/git_uaf_2.c:180:18: warning: use location
pp_34(D)->max_processes = n_24;
./benchmarks/git/use_after_free_2/git_uaf_2.c:176:27: warning: use location
  176 |         pp->max_processes = n;
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (n_24 > i_25)
./benchmarks/git/use_after_free_2/git_uaf_2.c:195:23: warning: use location
  195 |         for (i = 0; i < n; i++) {
      |                       ^
_3 = (long unsigned int) n_24;
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:19: warning: use location
  192 |         pp->pfd = xcalloc(n, sizeof(*pp->pfd));
      |                   ^
_1 = (long unsigned int) n_24;
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:24: warning: use location
  191 |         pp->children = xcalloc(n, sizeof(*pp->children));
      |                        ^
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
./benchmarks/git/use_after_free_2/git_uaf_2.c:178:9: warning: use location
  178 |         trace_printf("run_processes_parallel: preparing to run up to %d tasks", n);
      |         ^
this stmt call this function :trace_printf
trace fucntion name:trace_printf 

 ================== trace ================== 
trace fucntion free:0 
pp_cleanup (&pp);
./benchmarks/git/use_after_free_2/git_uaf_2.c:371:9: warning: use location
  371 |         pp_cleanup(&pp);
      |         ^
this stmt call this function :pp_cleanup
trace fucntion name:pp_cleanup 

 ================== trace ================== 
trace fucntion free:0 
pp_cleanup (&pp);
./benchmarks/git/use_after_free_2/git_uaf_2.c:371:9: warning: use location
this stmt call this function :pp_cleanup
trace fucntion name:pp_cleanup 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662eeea0
    type <integer_type 0x7fdf667aa7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa738 precision:64 min <integer_cst 0x7fdf66795e88 0> max <integer_cst 0x7fdf66796500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fdf667b67e0>>
   
    def_stmt _1 = (long unsigned int) n_24;
    version:1>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662eef30
    type <integer_type 0x7fdf667aa7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa738 precision:64 min <integer_cst 0x7fdf66795e88 0> max <integer_cst 0x7fdf66796500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fdf667b67e0>>
   
    def_stmt _3 = (long unsigned int) n_24;
    version:3>
 <ssa_name 0x7fdf662eef30
    type <integer_type 0x7fdf667aa7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa738 precision:64 min <integer_cst 0x7fdf66795e88 0> max <integer_cst 0x7fdf66796500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fdf667b67e0>>
   
    def_stmt _3 = (long unsigned int) n_24;
    version:3>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662eef30
    type <integer_type 0x7fdf667aa7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa738 precision:64 min <integer_cst 0x7fdf66795e88 0> max <integer_cst 0x7fdf66796500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fdf667b67e0>>
   
    def_stmt _3 = (long unsigned int) n_24;
    version:3>
is Other function 

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:pp_init========= [0m
[40;42m =======pre_check_funciton:run_processes_parallel========= [0m
[40;42m =======start_check_funciton:run_processes_parallel========= [0m

dot graph START

======================================================================
 <var_decl 0x7fdf662cdbd0 pp
    type <record_type 0x7fdf662b4540 parallel_processes BLK
        size <integer_cst 0x7fdf6686a0a8 constant 704>
        unit-size <integer_cst 0x7fdf662a4828 constant 88>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4540
        fields <field_decl 0x7fdf662b0980 data type <pointer_type 0x7fdf667b1000>
            unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:103:8
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7fdf66795be8 constant 0>
            bit-offset <integer_cst 0x7fdf66795c30 constant 0> context <record_type 0x7fdf662b4540 parallel_processes> chain <field_decl 0x7fdf662b08e8 max_processes>> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662b45e8>>
    addressable BLK ./benchmarks/git/use_after_free_2/git_uaf_2.c:342:28 size <integer_cst 0x7fdf6686a0a8 704> unit-size <integer_cst 0x7fdf662a4828 88>
    align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9200 run_processes_parallel>>

 ================== this stmt hava call fucntion ================== 
 <var_decl 0x7fdf662cdbd0 pp
    type <record_type 0x7fdf662b4540 parallel_processes BLK
        size <integer_cst 0x7fdf6686a0a8 constant 704>
        unit-size <integer_cst 0x7fdf662a4828 constant 88>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4540
        fields <field_decl 0x7fdf662b0980 data type <pointer_type 0x7fdf667b1000>
            unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:103:8
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7fdf66795be8 constant 0>
            bit-offset <integer_cst 0x7fdf66795c30 constant 0> context <record_type 0x7fdf662b4540 parallel_processes> chain <field_decl 0x7fdf662b08e8 max_processes>> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662b45e8>>
    addressable BLK ./benchmarks/git/use_after_free_2/git_uaf_2.c:342:28 size <integer_cst 0x7fdf6686a0a8 704> unit-size <integer_cst 0x7fdf662a4828 88>
    align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9200 run_processes_parallel>>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_36 = VDEF <.MEM_35(D)>
pp_init (&pp, n_15(D), get_next_task_16(D), start_failure_17(D), task_finished_18(D), pp_cb_19(D));
pp_init (&pp, n_15(D), get_next_task_16(D), start_failure_17(D), task_finished_18(D), pp_cb_19(D));
./benchmarks/git/use_after_free_2/git_uaf_2.c:344:9: warning: use location
  344 |         pp_init(&pp, n, get_next_task, start_failure, task_finished, pp_cb);
      |         ^
this stmt call this function :pp_init
trace fucntion name:pp_init 
[40;44m =======trace_function_path pp_init  function_call count: 7 level :0========  [0m
 <var_decl 0x7fdf662cdbd0 pp
    type <record_type 0x7fdf662b4540 parallel_processes BLK
        size <integer_cst 0x7fdf6686a0a8 constant 704>
        unit-size <integer_cst 0x7fdf662a4828 constant 88>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4540
        fields <field_decl 0x7fdf662b0980 data type <pointer_type 0x7fdf667b1000>
            unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:103:8
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7fdf66795be8 constant 0>
            bit-offset <integer_cst 0x7fdf66795c30 constant 0> context <record_type 0x7fdf662b4540 parallel_processes> chain <field_decl 0x7fdf662b08e8 max_processes>> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662b45e8>>
    addressable BLK ./benchmarks/git/use_after_free_2/git_uaf_2.c:342:28 size <integer_cst 0x7fdf6686a0a8 704> unit-size <integer_cst 0x7fdf662a4828 88>
    align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9200 run_processes_parallel>>
[40;36m ======= node_fun:pp_init========= [0m
[40;36m ======= find relate stmt with pp ========= [0m
[40;36m ======= relate node_fun argument:pp========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: use location
  193 |         strbuf_init(&pp->buffered_output, 0);
      |         ^
_5 = &pp_34(D)->buffered_output;
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:pp========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:32: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                ^
_6 = pp_34(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:32: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:pp========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:42: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                          ^
_9 = _6 + _8;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:42: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:pp========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                 ^
_10 = &_9->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:pp========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:39: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                       ^
_11 = pp_34(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:39: warning: use location
_11

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:pp========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:49: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                                 ^
_14 = _11 + _13;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:49: warning: use location
_14

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:pp========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                 ^
_15 = &_14->process;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
_15

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:pp========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:19: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                   ^
_16 = pp_34(D)->pfd;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:19: warning: use location
_16

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:pp========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:24: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                        ^
_19 = _16 + _18;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:24: warning: use location
_19

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:pp========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:19: warning: use location
  199 |                 pp->pfd[i].fd = -1;
      |                   ^
_20 = pp_34(D)->pfd;
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:19: warning: use location
_20

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:pp========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:24: warning: use location
  199 |                 pp->pfd[i].fd = -1;
      |                        ^
_23 = _20 + _22;
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:24: warning: use location
_23

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;46m =======add node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;46m =======add node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;46m =======add node_fun stack:online_cpus========= [0m

 ================== trace ================== 
trace fucntion free:0 
pp_cleanup (&pp);
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:371:9: warning: use location
  371 |         pp_cleanup(&pp);
      |         ^
this stmt call this function :pp_cleanup
trace fucntion name:pp_cleanup 

 ================== trace ================== 
trace fucntion free:0 
pp_cleanup (&pp);
./benchmarks/git/use_after_free_2/git_uaf_2.c:371:9: warning: use location
this stmt call this function :pp_cleanup
trace fucntion name:pp_cleanup 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662d5bd0
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <parm_decl 0x7fdf662c3a80 n>
    def_stmt GIMPLE_NOP
    version:15>
 <ssa_name 0x7fdf662d5bd0
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <parm_decl 0x7fdf662c3a80 n>
    def_stmt GIMPLE_NOP
    version:15>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662d5bd0
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <parm_decl 0x7fdf662c3a80 n>
    def_stmt GIMPLE_NOP
    version:15>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_36 = VDEF <.MEM_35(D)>
pp_init (&pp, n_15(D), get_next_task_16(D), start_failure_17(D), task_finished_18(D), pp_cb_19(D));
pp_init (&pp, n_15(D), get_next_task_16(D), start_failure_17(D), task_finished_18(D), pp_cb_19(D));
./benchmarks/git/use_after_free_2/git_uaf_2.c:344:9: warning: use location
  344 |         pp_init(&pp, n, get_next_task, start_failure, task_finished, pp_cb);
      |         ^
this stmt call this function :pp_init
trace fucntion name:pp_init 
[40;44m =======trace_function_path pp_init  function_call count: 7 level :0========  [0m
 <ssa_name 0x7fdf662d5bd0
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <parm_decl 0x7fdf662c3a80 n>
    def_stmt GIMPLE_NOP
    version:15>
[40;36m ======= node_fun:pp_init========= [0m
[40;36m ======= find relate stmt with n ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;46m =======add node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;46m =======add node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;46m =======add node_fun stack:online_cpus========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_36 = VDEF <.MEM_35(D)>
pp_init (&pp, n_15(D), get_next_task_16(D), start_failure_17(D), task_finished_18(D), pp_cb_19(D));
pp_init (&pp, n_15(D), get_next_task_16(D), start_failure_17(D), task_finished_18(D), pp_cb_19(D));
./benchmarks/git/use_after_free_2/git_uaf_2.c:344:9: warning: use location
this stmt call this function :pp_init
trace fucntion name:pp_init 
[40;44m =======trace_function_path pp_init  function_call count: 7 level :0========  [0m
 <ssa_name 0x7fdf662d5bd0
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <parm_decl 0x7fdf662c3a80 n>
    def_stmt GIMPLE_NOP
    version:15>
[40;36m ======= node_fun:pp_init========= [0m
[40;36m ======= find relate stmt with n ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;46m =======add node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;46m =======add node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;46m =======add node_fun stack:online_cpus========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662d5bd0
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <parm_decl 0x7fdf662c3a80 n>
    def_stmt GIMPLE_NOP
    version:15>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662d5c18
    type <pointer_type 0x7fdf662ad690 get_next_task_fn
        type <function_type 0x7fdf662ad540 type <integer_type 0x7fdf667aa5e8 int>
            QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7fdf662af618 value <pointer_type 0x7fdf662adbd0>
                chain <tree_list 0x7fdf662af5f0 value <pointer_type 0x7fdf662ada80>
                    chain <tree_list 0x7fdf662af5c8 value <pointer_type 0x7fdf667b1000>
                        chain <tree_list 0x7fdf662af5a0 value <pointer_type 0x7fdf662ad498> chain <tree_list 0x7fdf667a9b18>>>>>
            pointer_to_this <pointer_type 0x7fdf662ad5e8>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>>
    var <parm_decl 0x7fdf662c3b00 get_next_task>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7fdf662a4ea0>
 <ssa_name 0x7fdf662d5c18
    type <pointer_type 0x7fdf662ad690 get_next_task_fn
        type <function_type 0x7fdf662ad540 type <integer_type 0x7fdf667aa5e8 int>
            QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7fdf662af618 value <pointer_type 0x7fdf662adbd0>
                chain <tree_list 0x7fdf662af5f0 value <pointer_type 0x7fdf662ada80>
                    chain <tree_list 0x7fdf662af5c8 value <pointer_type 0x7fdf667b1000>
                        chain <tree_list 0x7fdf662af5a0 value <pointer_type 0x7fdf662ad498> chain <tree_list 0x7fdf667a9b18>>>>>
            pointer_to_this <pointer_type 0x7fdf662ad5e8>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>>
    var <parm_decl 0x7fdf662c3b00 get_next_task>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7fdf662a4ea0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662d5c18
    type <pointer_type 0x7fdf662ad690 get_next_task_fn
        type <function_type 0x7fdf662ad540 type <integer_type 0x7fdf667aa5e8 int>
            QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7fdf662af618 value <pointer_type 0x7fdf662adbd0>
                chain <tree_list 0x7fdf662af5f0 value <pointer_type 0x7fdf662ada80>
                    chain <tree_list 0x7fdf662af5c8 value <pointer_type 0x7fdf667b1000>
                        chain <tree_list 0x7fdf662af5a0 value <pointer_type 0x7fdf662ad498> chain <tree_list 0x7fdf667a9b18>>>>>
            pointer_to_this <pointer_type 0x7fdf662ad5e8>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>>
    var <parm_decl 0x7fdf662c3b00 get_next_task>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7fdf662a4ea0>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_36 = VDEF <.MEM_35(D)>
pp_init (&pp, n_15(D), get_next_task_16(D), start_failure_17(D), task_finished_18(D), pp_cb_19(D));
pp_init (&pp, n_15(D), get_next_task_16(D), start_failure_17(D), task_finished_18(D), pp_cb_19(D));
./benchmarks/git/use_after_free_2/git_uaf_2.c:344:9: warning: use location
this stmt call this function :pp_init
trace fucntion name:pp_init 
[40;44m =======trace_function_path pp_init  function_call count: 7 level :0========  [0m
 <ssa_name 0x7fdf662d5c18
    type <pointer_type 0x7fdf662ad690 get_next_task_fn
        type <function_type 0x7fdf662ad540 type <integer_type 0x7fdf667aa5e8 int>
            QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7fdf662af618 value <pointer_type 0x7fdf662adbd0>
                chain <tree_list 0x7fdf662af5f0 value <pointer_type 0x7fdf662ada80>
                    chain <tree_list 0x7fdf662af5c8 value <pointer_type 0x7fdf667b1000>
                        chain <tree_list 0x7fdf662af5a0 value <pointer_type 0x7fdf662ad498> chain <tree_list 0x7fdf667a9b18>>>>>
            pointer_to_this <pointer_type 0x7fdf662ad5e8>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>>
    var <parm_decl 0x7fdf662c3b00 get_next_task>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7fdf662a4ea0>
[40;36m ======= node_fun:pp_init========= [0m
[40;36m ======= find relate stmt with get_next_task ========= [0m
[40;36m ======= relate node_fun argument:get_next_task========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:32: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                ^
_6 = pp_34(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:32: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:get_next_task========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:42: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                          ^
_9 = _6 + _8;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:42: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:get_next_task========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                 ^
_10 = &_9->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:get_next_task========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:39: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                       ^
_11 = pp_34(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:39: warning: use location
_11

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:get_next_task========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:49: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                                 ^
_14 = _11 + _13;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:49: warning: use location
_14

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:get_next_task========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                 ^
_15 = &_14->process;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
_15

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:get_next_task========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:19: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                   ^
_16 = pp_34(D)->pfd;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:19: warning: use location
_16

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:get_next_task========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:24: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                        ^
_19 = _16 + _18;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:24: warning: use location
_19

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:get_next_task========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:19: warning: use location
  199 |                 pp->pfd[i].fd = -1;
      |                   ^
_20 = pp_34(D)->pfd;
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:19: warning: use location
_20

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:get_next_task========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:24: warning: use location
  199 |                 pp->pfd[i].fd = -1;
      |                        ^
_23 = _20 + _22;
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:24: warning: use location
_23

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;46m =======add node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;46m =======add node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;46m =======add node_fun stack:online_cpus========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_36 = VDEF <.MEM_35(D)>
pp_init (&pp, n_15(D), get_next_task_16(D), start_failure_17(D), task_finished_18(D), pp_cb_19(D));
pp_init (&pp, n_15(D), get_next_task_16(D), start_failure_17(D), task_finished_18(D), pp_cb_19(D));
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:344:9: warning: use location
  344 |         pp_init(&pp, n, get_next_task, start_failure, task_finished, pp_cb);
      |         ^
this stmt call this function :pp_init
trace fucntion name:pp_init 
[40;44m =======trace_function_path pp_init  function_call count: 7 level :0========  [0m
 <ssa_name 0x7fdf662d5c18
    type <pointer_type 0x7fdf662ad690 get_next_task_fn
        type <function_type 0x7fdf662ad540 type <integer_type 0x7fdf667aa5e8 int>
            QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7fdf662af618 value <pointer_type 0x7fdf662adbd0>
                chain <tree_list 0x7fdf662af5f0 value <pointer_type 0x7fdf662ada80>
                    chain <tree_list 0x7fdf662af5c8 value <pointer_type 0x7fdf667b1000>
                        chain <tree_list 0x7fdf662af5a0 value <pointer_type 0x7fdf662ad498> chain <tree_list 0x7fdf667a9b18>>>>>
            pointer_to_this <pointer_type 0x7fdf662ad5e8>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>>
    var <parm_decl 0x7fdf662c3b00 get_next_task>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7fdf662a4ea0>
[40;36m ======= node_fun:pp_init========= [0m
[40;36m ======= find relate stmt with get_next_task ========= [0m
[40;36m ======= relate node_fun argument:get_next_task========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:32: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                ^
_6 = pp_34(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:32: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:get_next_task========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:42: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                          ^
_9 = _6 + _8;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:42: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:get_next_task========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                 ^
_10 = &_9->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:get_next_task========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:39: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                       ^
_11 = pp_34(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:39: warning: use location
_11

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:get_next_task========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:49: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                                 ^
_14 = _11 + _13;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:49: warning: use location
_14

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:get_next_task========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                 ^
_15 = &_14->process;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
_15

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:get_next_task========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:19: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                   ^
_16 = pp_34(D)->pfd;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:19: warning: use location
_16

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:get_next_task========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:24: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                        ^
_19 = _16 + _18;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:24: warning: use location
_19

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:get_next_task========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:19: warning: use location
  199 |                 pp->pfd[i].fd = -1;
      |                   ^
_20 = pp_34(D)->pfd;
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:19: warning: use location
_20

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:get_next_task========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:24: warning: use location
  199 |                 pp->pfd[i].fd = -1;
      |                        ^
_23 = _20 + _22;
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:24: warning: use location
_23

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;46m =======add node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;46m =======add node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;46m =======add node_fun stack:online_cpus========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662d5c18
    type <pointer_type 0x7fdf662ad690 get_next_task_fn
        type <function_type 0x7fdf662ad540 type <integer_type 0x7fdf667aa5e8 int>
            QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7fdf662af618 value <pointer_type 0x7fdf662adbd0>
                chain <tree_list 0x7fdf662af5f0 value <pointer_type 0x7fdf662ada80>
                    chain <tree_list 0x7fdf662af5c8 value <pointer_type 0x7fdf667b1000>
                        chain <tree_list 0x7fdf662af5a0 value <pointer_type 0x7fdf662ad498> chain <tree_list 0x7fdf667a9b18>>>>>
            pointer_to_this <pointer_type 0x7fdf662ad5e8>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>>
    var <parm_decl 0x7fdf662c3b00 get_next_task>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7fdf662a4ea0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662d5c60
    type <pointer_type 0x7fdf662ad348 start_failure_fn
        type <function_type 0x7fdf662adc78 type <integer_type 0x7fdf667aa5e8 int>
            QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7fdf662af460 value <pointer_type 0x7fdf662adbd0>
                chain <tree_list 0x7fdf662af410 value <pointer_type 0x7fdf662ada80>
                    chain <tree_list 0x7fdf662af3c0 value <pointer_type 0x7fdf667b1000>
                        chain <tree_list 0x7fdf662af398 value <pointer_type 0x7fdf667b1000> chain <tree_list 0x7fdf667a9b18>>>>>
            pointer_to_this <pointer_type 0x7fdf662adf18>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>>
    var <parm_decl 0x7fdf662c3b80 start_failure>
    def_stmt GIMPLE_NOP
    version:17
    ptr-info 0x7fdf662a4eb8>
 <ssa_name 0x7fdf662d5c60
    type <pointer_type 0x7fdf662ad348 start_failure_fn
        type <function_type 0x7fdf662adc78 type <integer_type 0x7fdf667aa5e8 int>
            QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7fdf662af460 value <pointer_type 0x7fdf662adbd0>
                chain <tree_list 0x7fdf662af410 value <pointer_type 0x7fdf662ada80>
                    chain <tree_list 0x7fdf662af3c0 value <pointer_type 0x7fdf667b1000>
                        chain <tree_list 0x7fdf662af398 value <pointer_type 0x7fdf667b1000> chain <tree_list 0x7fdf667a9b18>>>>>
            pointer_to_this <pointer_type 0x7fdf662adf18>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>>
    var <parm_decl 0x7fdf662c3b80 start_failure>
    def_stmt GIMPLE_NOP
    version:17
    ptr-info 0x7fdf662a4eb8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662d5c60
    type <pointer_type 0x7fdf662ad348 start_failure_fn
        type <function_type 0x7fdf662adc78 type <integer_type 0x7fdf667aa5e8 int>
            QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7fdf662af460 value <pointer_type 0x7fdf662adbd0>
                chain <tree_list 0x7fdf662af410 value <pointer_type 0x7fdf662ada80>
                    chain <tree_list 0x7fdf662af3c0 value <pointer_type 0x7fdf667b1000>
                        chain <tree_list 0x7fdf662af398 value <pointer_type 0x7fdf667b1000> chain <tree_list 0x7fdf667a9b18>>>>>
            pointer_to_this <pointer_type 0x7fdf662adf18>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>>
    var <parm_decl 0x7fdf662c3b80 start_failure>
    def_stmt GIMPLE_NOP
    version:17
    ptr-info 0x7fdf662a4eb8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_36 = VDEF <.MEM_35(D)>
pp_init (&pp, n_15(D), get_next_task_16(D), start_failure_17(D), task_finished_18(D), pp_cb_19(D));
pp_init (&pp, n_15(D), get_next_task_16(D), start_failure_17(D), task_finished_18(D), pp_cb_19(D));
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:344:9: warning: use location
  344 |         pp_init(&pp, n, get_next_task, start_failure, task_finished, pp_cb);
      |         ^
this stmt call this function :pp_init
trace fucntion name:pp_init 
[40;44m =======trace_function_path pp_init  function_call count: 7 level :0========  [0m
 <ssa_name 0x7fdf662d5c60
    type <pointer_type 0x7fdf662ad348 start_failure_fn
        type <function_type 0x7fdf662adc78 type <integer_type 0x7fdf667aa5e8 int>
            QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7fdf662af460 value <pointer_type 0x7fdf662adbd0>
                chain <tree_list 0x7fdf662af410 value <pointer_type 0x7fdf662ada80>
                    chain <tree_list 0x7fdf662af3c0 value <pointer_type 0x7fdf667b1000>
                        chain <tree_list 0x7fdf662af398 value <pointer_type 0x7fdf667b1000> chain <tree_list 0x7fdf667a9b18>>>>>
            pointer_to_this <pointer_type 0x7fdf662adf18>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>>
    var <parm_decl 0x7fdf662c3b80 start_failure>
    def_stmt GIMPLE_NOP
    version:17
    ptr-info 0x7fdf662a4eb8>
[40;36m ======= node_fun:pp_init========= [0m
[40;36m ======= find relate stmt with start_failure ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;46m =======add node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;46m =======add node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;46m =======add node_fun stack:online_cpus========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_36 = VDEF <.MEM_35(D)>
pp_init (&pp, n_15(D), get_next_task_16(D), start_failure_17(D), task_finished_18(D), pp_cb_19(D));
pp_init (&pp, n_15(D), get_next_task_16(D), start_failure_17(D), task_finished_18(D), pp_cb_19(D));
./benchmarks/git/use_after_free_2/git_uaf_2.c:344:9: warning: use location
this stmt call this function :pp_init
trace fucntion name:pp_init 
[40;44m =======trace_function_path pp_init  function_call count: 7 level :0========  [0m
 <ssa_name 0x7fdf662d5c60
    type <pointer_type 0x7fdf662ad348 start_failure_fn
        type <function_type 0x7fdf662adc78 type <integer_type 0x7fdf667aa5e8 int>
            QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7fdf662af460 value <pointer_type 0x7fdf662adbd0>
                chain <tree_list 0x7fdf662af410 value <pointer_type 0x7fdf662ada80>
                    chain <tree_list 0x7fdf662af3c0 value <pointer_type 0x7fdf667b1000>
                        chain <tree_list 0x7fdf662af398 value <pointer_type 0x7fdf667b1000> chain <tree_list 0x7fdf667a9b18>>>>>
            pointer_to_this <pointer_type 0x7fdf662adf18>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>>
    var <parm_decl 0x7fdf662c3b80 start_failure>
    def_stmt GIMPLE_NOP
    version:17
    ptr-info 0x7fdf662a4eb8>
[40;36m ======= node_fun:pp_init========= [0m
[40;36m ======= find relate stmt with start_failure ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;46m =======add node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;46m =======add node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;46m =======add node_fun stack:online_cpus========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662d5c60
    type <pointer_type 0x7fdf662ad348 start_failure_fn
        type <function_type 0x7fdf662adc78 type <integer_type 0x7fdf667aa5e8 int>
            QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7fdf662af460 value <pointer_type 0x7fdf662adbd0>
                chain <tree_list 0x7fdf662af410 value <pointer_type 0x7fdf662ada80>
                    chain <tree_list 0x7fdf662af3c0 value <pointer_type 0x7fdf667b1000>
                        chain <tree_list 0x7fdf662af398 value <pointer_type 0x7fdf667b1000> chain <tree_list 0x7fdf667a9b18>>>>>
            pointer_to_this <pointer_type 0x7fdf662adf18>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>>
    var <parm_decl 0x7fdf662c3b80 start_failure>
    def_stmt GIMPLE_NOP
    version:17
    ptr-info 0x7fdf662a4eb8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662d5ca8
    type <pointer_type 0x7fdf662ade70 task_finished_fn
        type <function_type 0x7fdf662add20 type <integer_type 0x7fdf667aa5e8 int>
            QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7fdf662af4b0 value <integer_type 0x7fdf667aa5e8 int>
                chain <tree_list 0x7fdf662af460 value <pointer_type 0x7fdf662adbd0>
                    chain <tree_list 0x7fdf662af410 value <pointer_type 0x7fdf662ada80>
                        chain <tree_list 0x7fdf662af3c0 value <pointer_type 0x7fdf667b1000> chain <tree_list 0x7fdf662af398>>>>>
            pointer_to_this <pointer_type 0x7fdf662addc8>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>>
    var <parm_decl 0x7fdf662c3c00 task_finished>
    def_stmt GIMPLE_NOP
    version:18
    ptr-info 0x7fdf662a4ed0>
 <ssa_name 0x7fdf662d5ca8
    type <pointer_type 0x7fdf662ade70 task_finished_fn
        type <function_type 0x7fdf662add20 type <integer_type 0x7fdf667aa5e8 int>
            QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7fdf662af4b0 value <integer_type 0x7fdf667aa5e8 int>
                chain <tree_list 0x7fdf662af460 value <pointer_type 0x7fdf662adbd0>
                    chain <tree_list 0x7fdf662af410 value <pointer_type 0x7fdf662ada80>
                        chain <tree_list 0x7fdf662af3c0 value <pointer_type 0x7fdf667b1000> chain <tree_list 0x7fdf662af398>>>>>
            pointer_to_this <pointer_type 0x7fdf662addc8>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>>
    var <parm_decl 0x7fdf662c3c00 task_finished>
    def_stmt GIMPLE_NOP
    version:18
    ptr-info 0x7fdf662a4ed0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662d5ca8
    type <pointer_type 0x7fdf662ade70 task_finished_fn
        type <function_type 0x7fdf662add20 type <integer_type 0x7fdf667aa5e8 int>
            QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7fdf662af4b0 value <integer_type 0x7fdf667aa5e8 int>
                chain <tree_list 0x7fdf662af460 value <pointer_type 0x7fdf662adbd0>
                    chain <tree_list 0x7fdf662af410 value <pointer_type 0x7fdf662ada80>
                        chain <tree_list 0x7fdf662af3c0 value <pointer_type 0x7fdf667b1000> chain <tree_list 0x7fdf662af398>>>>>
            pointer_to_this <pointer_type 0x7fdf662addc8>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>>
    var <parm_decl 0x7fdf662c3c00 task_finished>
    def_stmt GIMPLE_NOP
    version:18
    ptr-info 0x7fdf662a4ed0>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_36 = VDEF <.MEM_35(D)>
pp_init (&pp, n_15(D), get_next_task_16(D), start_failure_17(D), task_finished_18(D), pp_cb_19(D));
pp_init (&pp, n_15(D), get_next_task_16(D), start_failure_17(D), task_finished_18(D), pp_cb_19(D));
./benchmarks/git/use_after_free_2/git_uaf_2.c:344:9: warning: use location
this stmt call this function :pp_init
trace fucntion name:pp_init 
[40;44m =======trace_function_path pp_init  function_call count: 7 level :0========  [0m
 <ssa_name 0x7fdf662d5ca8
    type <pointer_type 0x7fdf662ade70 task_finished_fn
        type <function_type 0x7fdf662add20 type <integer_type 0x7fdf667aa5e8 int>
            QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7fdf662af4b0 value <integer_type 0x7fdf667aa5e8 int>
                chain <tree_list 0x7fdf662af460 value <pointer_type 0x7fdf662adbd0>
                    chain <tree_list 0x7fdf662af410 value <pointer_type 0x7fdf662ada80>
                        chain <tree_list 0x7fdf662af3c0 value <pointer_type 0x7fdf667b1000> chain <tree_list 0x7fdf662af398>>>>>
            pointer_to_this <pointer_type 0x7fdf662addc8>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>>
    var <parm_decl 0x7fdf662c3c00 task_finished>
    def_stmt GIMPLE_NOP
    version:18
    ptr-info 0x7fdf662a4ed0>
[40;36m ======= node_fun:pp_init========= [0m
[40;36m ======= find relate stmt with task_finished ========= [0m
[40;36m ======= relate node_fun argument:task_finished========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:32: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                ^
_6 = pp_34(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:32: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:task_finished========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:42: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                          ^
_9 = _6 + _8;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:42: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:task_finished========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                 ^
_10 = &_9->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:task_finished========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:39: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                       ^
_11 = pp_34(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:39: warning: use location
_11

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:task_finished========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:49: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                                 ^
_14 = _11 + _13;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:49: warning: use location
_14

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:task_finished========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                 ^
_15 = &_14->process;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
_15

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:task_finished========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:19: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                   ^
_16 = pp_34(D)->pfd;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:19: warning: use location
_16

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:task_finished========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:24: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                        ^
_19 = _16 + _18;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:24: warning: use location
_19

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:task_finished========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:19: warning: use location
  199 |                 pp->pfd[i].fd = -1;
      |                   ^
_20 = pp_34(D)->pfd;
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:19: warning: use location
_20

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:task_finished========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:24: warning: use location
  199 |                 pp->pfd[i].fd = -1;
      |                        ^
_23 = _20 + _22;
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:24: warning: use location
_23

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;46m =======add node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;46m =======add node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;46m =======add node_fun stack:online_cpus========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_36 = VDEF <.MEM_35(D)>
pp_init (&pp, n_15(D), get_next_task_16(D), start_failure_17(D), task_finished_18(D), pp_cb_19(D));
pp_init (&pp, n_15(D), get_next_task_16(D), start_failure_17(D), task_finished_18(D), pp_cb_19(D));
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:344:9: warning: use location
  344 |         pp_init(&pp, n, get_next_task, start_failure, task_finished, pp_cb);
      |         ^
this stmt call this function :pp_init
trace fucntion name:pp_init 
[40;44m =======trace_function_path pp_init  function_call count: 7 level :0========  [0m
 <ssa_name 0x7fdf662d5ca8
    type <pointer_type 0x7fdf662ade70 task_finished_fn
        type <function_type 0x7fdf662add20 type <integer_type 0x7fdf667aa5e8 int>
            QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7fdf662af4b0 value <integer_type 0x7fdf667aa5e8 int>
                chain <tree_list 0x7fdf662af460 value <pointer_type 0x7fdf662adbd0>
                    chain <tree_list 0x7fdf662af410 value <pointer_type 0x7fdf662ada80>
                        chain <tree_list 0x7fdf662af3c0 value <pointer_type 0x7fdf667b1000> chain <tree_list 0x7fdf662af398>>>>>
            pointer_to_this <pointer_type 0x7fdf662addc8>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>>
    var <parm_decl 0x7fdf662c3c00 task_finished>
    def_stmt GIMPLE_NOP
    version:18
    ptr-info 0x7fdf662a4ed0>
[40;36m ======= node_fun:pp_init========= [0m
[40;36m ======= find relate stmt with task_finished ========= [0m
[40;36m ======= relate node_fun argument:task_finished========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:32: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                ^
_6 = pp_34(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:32: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:task_finished========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:42: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                          ^
_9 = _6 + _8;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:42: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:task_finished========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                 ^
_10 = &_9->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:task_finished========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:39: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                       ^
_11 = pp_34(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:39: warning: use location
_11

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:task_finished========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:49: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                                 ^
_14 = _11 + _13;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:49: warning: use location
_14

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:task_finished========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                 ^
_15 = &_14->process;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
_15

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:task_finished========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:19: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                   ^
_16 = pp_34(D)->pfd;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:19: warning: use location
_16

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:task_finished========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:24: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                        ^
_19 = _16 + _18;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:24: warning: use location
_19

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:task_finished========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:19: warning: use location
  199 |                 pp->pfd[i].fd = -1;
      |                   ^
_20 = pp_34(D)->pfd;
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:19: warning: use location
_20

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:task_finished========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:24: warning: use location
  199 |                 pp->pfd[i].fd = -1;
      |                        ^
_23 = _20 + _22;
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:24: warning: use location
_23

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;46m =======add node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;46m =======add node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;46m =======add node_fun stack:online_cpus========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662d5ca8
    type <pointer_type 0x7fdf662ade70 task_finished_fn
        type <function_type 0x7fdf662add20 type <integer_type 0x7fdf667aa5e8 int>
            QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7fdf662af4b0 value <integer_type 0x7fdf667aa5e8 int>
                chain <tree_list 0x7fdf662af460 value <pointer_type 0x7fdf662adbd0>
                    chain <tree_list 0x7fdf662af410 value <pointer_type 0x7fdf662ada80>
                        chain <tree_list 0x7fdf662af3c0 value <pointer_type 0x7fdf667b1000> chain <tree_list 0x7fdf662af398>>>>>
            pointer_to_this <pointer_type 0x7fdf662addc8>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>>
    var <parm_decl 0x7fdf662c3c00 task_finished>
    def_stmt GIMPLE_NOP
    version:18
    ptr-info 0x7fdf662a4ed0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662d5cf0
    type <pointer_type 0x7fdf667b1000
        type <void_type 0x7fdf667aaf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fdf667b1000>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fdf662ad498>>
    var <parm_decl 0x7fdf662c3c80 pp_cb>
    def_stmt GIMPLE_NOP
    version:19
    ptr-info 0x7fdf662a4ee8>
 <ssa_name 0x7fdf662d5cf0
    type <pointer_type 0x7fdf667b1000
        type <void_type 0x7fdf667aaf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fdf667b1000>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fdf662ad498>>
    var <parm_decl 0x7fdf662c3c80 pp_cb>
    def_stmt GIMPLE_NOP
    version:19
    ptr-info 0x7fdf662a4ee8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662d5cf0
    type <pointer_type 0x7fdf667b1000
        type <void_type 0x7fdf667aaf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fdf667b1000>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fdf662ad498>>
    var <parm_decl 0x7fdf662c3c80 pp_cb>
    def_stmt GIMPLE_NOP
    version:19
    ptr-info 0x7fdf662a4ee8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_36 = VDEF <.MEM_35(D)>
pp_init (&pp, n_15(D), get_next_task_16(D), start_failure_17(D), task_finished_18(D), pp_cb_19(D));
pp_init (&pp, n_15(D), get_next_task_16(D), start_failure_17(D), task_finished_18(D), pp_cb_19(D));
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:344:9: warning: use location
  344 |         pp_init(&pp, n, get_next_task, start_failure, task_finished, pp_cb);
      |         ^
this stmt call this function :pp_init
trace fucntion name:pp_init 
[40;44m =======trace_function_path pp_init  function_call count: 7 level :0========  [0m
 <ssa_name 0x7fdf662d5cf0
    type <pointer_type 0x7fdf667b1000
        type <void_type 0x7fdf667aaf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fdf667b1000>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fdf662ad498>>
    var <parm_decl 0x7fdf662c3c80 pp_cb>
    def_stmt GIMPLE_NOP
    version:19
    ptr-info 0x7fdf662a4ee8>
[40;36m ======= node_fun:pp_init========= [0m
[40;36m ======= find relate stmt with pp_cb ========= [0m
[40;36m ======= relate node_fun argument:pp_cb========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:32: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                ^
_6 = pp_34(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:32: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:pp_cb========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:42: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                          ^
_9 = _6 + _8;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:42: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:pp_cb========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                 ^
_10 = &_9->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:pp_cb========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:39: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                       ^
_11 = pp_34(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:39: warning: use location
_11

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:pp_cb========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:49: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                                 ^
_14 = _11 + _13;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:49: warning: use location
_14

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:pp_cb========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                 ^
_15 = &_14->process;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
_15

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:pp_cb========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:19: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                   ^
_16 = pp_34(D)->pfd;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:19: warning: use location
_16

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:pp_cb========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:24: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                        ^
_19 = _16 + _18;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:24: warning: use location
_19

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:pp_cb========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:19: warning: use location
  199 |                 pp->pfd[i].fd = -1;
      |                   ^
_20 = pp_34(D)->pfd;
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:19: warning: use location
_20

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:pp_cb========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:24: warning: use location
  199 |                 pp->pfd[i].fd = -1;
      |                        ^
_23 = _20 + _22;
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:24: warning: use location
_23

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;46m =======add node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;46m =======add node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;46m =======add node_fun stack:online_cpus========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_36 = VDEF <.MEM_35(D)>
pp_init (&pp, n_15(D), get_next_task_16(D), start_failure_17(D), task_finished_18(D), pp_cb_19(D));
pp_init (&pp, n_15(D), get_next_task_16(D), start_failure_17(D), task_finished_18(D), pp_cb_19(D));
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:344:9: warning: use location
  344 |         pp_init(&pp, n, get_next_task, start_failure, task_finished, pp_cb);
      |         ^
this stmt call this function :pp_init
trace fucntion name:pp_init 
[40;44m =======trace_function_path pp_init  function_call count: 7 level :0========  [0m
 <ssa_name 0x7fdf662d5cf0
    type <pointer_type 0x7fdf667b1000
        type <void_type 0x7fdf667aaf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fdf667b1000>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fdf662ad498>>
    var <parm_decl 0x7fdf662c3c80 pp_cb>
    def_stmt GIMPLE_NOP
    version:19
    ptr-info 0x7fdf662a4ee8>
[40;36m ======= node_fun:pp_init========= [0m
[40;36m ======= find relate stmt with pp_cb ========= [0m
[40;36m ======= relate node_fun argument:pp_cb========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:32: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                ^
_6 = pp_34(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:32: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:pp_cb========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:42: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                          ^
_9 = _6 + _8;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:42: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:pp_cb========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                 ^
_10 = &_9->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:pp_cb========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:39: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                       ^
_11 = pp_34(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:39: warning: use location
_11

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:pp_cb========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:49: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                                 ^
_14 = _11 + _13;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:49: warning: use location
_14

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:pp_cb========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                 ^
_15 = &_14->process;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
_15

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:pp_cb========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:19: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                   ^
_16 = pp_34(D)->pfd;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:19: warning: use location
_16

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:pp_cb========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:24: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                        ^
_19 = _16 + _18;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:24: warning: use location
_19

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:pp_cb========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:19: warning: use location
  199 |                 pp->pfd[i].fd = -1;
      |                   ^
_20 = pp_34(D)->pfd;
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:19: warning: use location
_20

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:pp_cb========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:24: warning: use location
  199 |                 pp->pfd[i].fd = -1;
      |                        ^
_23 = _20 + _22;
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:24: warning: use location
_23

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;46m =======add node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;46m =======add node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;46m =======add node_fun stack:online_cpus========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662d5cf0
    type <pointer_type 0x7fdf667b1000
        type <void_type 0x7fdf667aaf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fdf667b1000>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fdf662ad498>>
    var <parm_decl 0x7fdf662c3c80 pp_cb>
    def_stmt GIMPLE_NOP
    version:19
    ptr-info 0x7fdf662a4ee8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662d5d38
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf662cdc60 code>
    def_stmt code_22 = pp_start_one (&pp);
    version:22>
 <ssa_name 0x7fdf662d5d38
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf662cdc60 code>
    def_stmt code_22 = pp_start_one (&pp);
    version:22>

 ================== pre trace ptable ================== 
trace fucntion name:pp_start_one 
[40;44m =======trace_function_path pp_start_one  function_call count: 5 level :888========  [0m
 <ssa_name 0x7fdf662d5d38
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf662cdc60 code>
    def_stmt code_22 = pp_start_one (&pp);
    version:22>
[40;36m ======= node_fun:pp_start_one========= [0m
[40;36m ======= find relate stmt with code ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:start_command========= [0m
[40;46m =======add node_fun stack:start_command========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662d5d38
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf662cdc60 code>
    def_stmt code_22 = pp_start_one (&pp);
    version:22>
is Other function pp_start_one
 
 Start check Pointer Collect  

======================================================================
pp_cleanup (&pp);
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:371:9: warning: use location
  371 |         pp_cleanup(&pp);
      |         ^
this stmt call this function :pp_cleanup
trace fucntion name:pp_cleanup 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_1 = -code_22;
./benchmarks/git/use_after_free_2/git_uaf_2.c:355:33: warning: use location
  355 |                                 kill_children(&pp, -code);
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
kill_children (&pp, _1);
./benchmarks/git/use_after_free_2/git_uaf_2.c:355:33: warning: use location
this stmt call this function :kill_children
trace fucntion name:kill_children 
[40;44m =======trace_function_path kill_children  function_call count: 1 level :0========  [0m
 <ssa_name 0x7fdf662d5d38
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf662cdc60 code>
    def_stmt code_22 = pp_start_one (&pp);
    version:22>
[40;36m ======= node_fun:kill_children========= [0m
[40;36m ======= find relate stmt with code ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:kill========= [0m
[40;46m =======add node_fun stack:kill========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (code_22 < 0)
./benchmarks/git/use_after_free_2/git_uaf_2.c:353:28: warning: use location
  353 |                         if (code < 0) {
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_37 = VDEF <.MEM_31>
code_22 = pp_start_one (&pp);
code_22 = pp_start_one (&pp);
./benchmarks/git/use_after_free_2/git_uaf_2.c:350:32: warning: use location
  350 |                         code = pp_start_one(&pp);
      |                                ^
this stmt call this function :pp_start_one
trace fucntion name:pp_start_one 
[40;44m =======trace_function_path pp_start_one  function_call count: 5 level :0========  [0m
 <ssa_name 0x7fdf662d5d38
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf662cdc60 code>
    def_stmt code_22 = pp_start_one (&pp);
    version:22>
[40;36m ======= node_fun:pp_start_one========= [0m
[40;36m ======= find relate stmt with code ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:start_command========= [0m
[40;46m =======add node_fun stack:start_command========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662d5d38
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf662cdc60 code>
    def_stmt code_22 = pp_start_one (&pp);
    version:22>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662d5990
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _1 = -code_22;
    version:1>
 <ssa_name 0x7fdf662d5990
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _1 = -code_22;
    version:1>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662d5990
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _1 = -code_22;
    version:1>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_39 = VDEF <.MEM_38>
kill_children (&pp, _1);
kill_children (&pp, _1);
./benchmarks/git/use_after_free_2/git_uaf_2.c:355:33: warning: use location
  355 |                                 kill_children(&pp, -code);
      |                                 ^
this stmt call this function :kill_children
trace fucntion name:kill_children 
[40;44m =======trace_function_path kill_children  function_call count: 1 level :0========  [0m
 <ssa_name 0x7fdf662d5990
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _1 = -code_22;
    version:1>
[40;36m ======= node_fun:kill_children========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:kill========= [0m
[40;46m =======add node_fun stack:kill========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_39 = VDEF <.MEM_38>
kill_children (&pp, _1);
kill_children (&pp, _1);
./benchmarks/git/use_after_free_2/git_uaf_2.c:355:33: warning: use location
this stmt call this function :kill_children
trace fucntion name:kill_children 
[40;44m =======trace_function_path kill_children  function_call count: 1 level :0========  [0m
 <ssa_name 0x7fdf662d5990
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _1 = -code_22;
    version:1>
[40;36m ======= node_fun:kill_children========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:kill========= [0m
[40;46m =======add node_fun stack:kill========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662d5990
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _1 = -code_22;
    version:1>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662d5dc8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf662cdc60 code>
    def_stmt code_29 = pp_collect_finished (&pp);
    version:29>
 <ssa_name 0x7fdf662d5dc8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf662cdc60 code>
    def_stmt code_29 = pp_collect_finished (&pp);
    version:29>

 ================== pre trace ptable ================== 
trace fucntion name:pp_collect_finished 
[40;44m =======trace_function_path pp_collect_finished  function_call count: 5 level :888========  [0m
 <ssa_name 0x7fdf662d5dc8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf662cdc60 code>
    def_stmt code_29 = pp_collect_finished (&pp);
    version:29>
[40;36m ======= node_fun:pp_collect_finished========= [0m
[40;36m ======= find relate stmt with code ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:fputs========= [0m
[40;46m =======add node_fun stack:fputs========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:finish_command========= [0m
[40;46m =======add node_fun stack:finish_command========= [0m
[40;44m =======trace_function_path finish_command  function_call count: 2 level :889========  [0m
 <ssa_name 0x7fdf662d5dc8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf662cdc60 code>
    def_stmt code_29 = pp_collect_finished (&pp);
    version:29>
[40;36m ======= node_fun:finish_command========= [0m
[40;36m ======= find relate stmt with code ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_clear========= [0m
[40;46m =======add node_fun stack:child_process_clear========= [0m
[40;44m =======trace_function_path child_process_clear  function_call count: 1 level :890========  [0m
 <ssa_name 0x7fdf662d5dc8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf662cdc60 code>
    def_stmt code_29 = pp_collect_finished (&pp);
    version:29>
[40;36m ======= node_fun:child_process_clear========= [0m
[40;36m ======= find relate stmt with code ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;46m =======add node_fun stack:wait_or_whine========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662d5dc8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf662cdc60 code>
    def_stmt code_29 = pp_collect_finished (&pp);
    version:29>
is Other function pp_collect_finished
 
 Start check Pointer Collect  

======================================================================
pp_cleanup (&pp);
./benchmarks/git/use_after_free_2/git_uaf_2.c:371:9: warning: use location
  371 |         pp_cleanup(&pp);
      |         ^
this stmt call this function :pp_cleanup
trace fucntion name:pp_cleanup 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_7 = -code_29;
./benchmarks/git/use_after_free_2/git_uaf_2.c:367:33: warning: use location
  367 |                                 kill_children(&pp, -code);
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
kill_children (&pp, _7);
./benchmarks/git/use_after_free_2/git_uaf_2.c:367:33: warning: use location
this stmt call this function :kill_children
trace fucntion name:kill_children 
[40;44m =======trace_function_path kill_children  function_call count: 1 level :0========  [0m
 <ssa_name 0x7fdf662d5dc8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf662cdc60 code>
    def_stmt code_29 = pp_collect_finished (&pp);
    version:29>
[40;36m ======= node_fun:kill_children========= [0m
[40;36m ======= find relate stmt with code ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:kill========= [0m
[40;46m =======add node_fun stack:kill========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (code_29 < 0)
./benchmarks/git/use_after_free_2/git_uaf_2.c:366:28: warning: use location
  366 |                         if (code < 0)
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_42 = VDEF <.MEM_41>
code_29 = pp_collect_finished (&pp);
code_29 = pp_collect_finished (&pp);
./benchmarks/git/use_after_free_2/git_uaf_2.c:363:24: warning: use location
  363 |                 code = pp_collect_finished(&pp);
      |                        ^
this stmt call this function :pp_collect_finished
trace fucntion name:pp_collect_finished 
[40;44m =======trace_function_path pp_collect_finished  function_call count: 5 level :0========  [0m
 <ssa_name 0x7fdf662d5dc8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf662cdc60 code>
    def_stmt code_29 = pp_collect_finished (&pp);
    version:29>
[40;36m ======= node_fun:pp_collect_finished========= [0m
[40;36m ======= find relate stmt with code ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:fputs========= [0m
[40;46m =======add node_fun stack:fputs========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:finish_command========= [0m
[40;46m =======add node_fun stack:finish_command========= [0m
[40;44m =======trace_function_path finish_command  function_call count: 2 level :1========  [0m
 <ssa_name 0x7fdf662d5dc8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf662cdc60 code>
    def_stmt code_29 = pp_collect_finished (&pp);
    version:29>
[40;36m ======= node_fun:finish_command========= [0m
[40;36m ======= find relate stmt with code ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_clear========= [0m
[40;46m =======add node_fun stack:child_process_clear========= [0m
[40;44m =======trace_function_path child_process_clear  function_call count: 1 level :2========  [0m
 <ssa_name 0x7fdf662d5dc8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf662cdc60 code>
    def_stmt code_29 = pp_collect_finished (&pp);
    version:29>
[40;36m ======= node_fun:child_process_clear========= [0m
[40;36m ======= find relate stmt with code ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;46m =======add node_fun stack:wait_or_whine========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662d5dc8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf662cdc60 code>
    def_stmt code_29 = pp_collect_finished (&pp);
    version:29>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662d5b40
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _7 = -code_29;
    version:7>
 <ssa_name 0x7fdf662d5b40
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _7 = -code_29;
    version:7>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662d5b40
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _7 = -code_29;
    version:7>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_44 = VDEF <.MEM_43>
kill_children (&pp, _7);
kill_children (&pp, _7);
./benchmarks/git/use_after_free_2/git_uaf_2.c:367:33: warning: use location
  367 |                                 kill_children(&pp, -code);
      |                                 ^
this stmt call this function :kill_children
trace fucntion name:kill_children 
[40;44m =======trace_function_path kill_children  function_call count: 1 level :0========  [0m
 <ssa_name 0x7fdf662d5b40
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _7 = -code_29;
    version:7>
[40;36m ======= node_fun:kill_children========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:kill========= [0m
[40;46m =======add node_fun stack:kill========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_44 = VDEF <.MEM_43>
kill_children (&pp, _7);
kill_children (&pp, _7);
./benchmarks/git/use_after_free_2/git_uaf_2.c:367:33: warning: use location
this stmt call this function :kill_children
trace fucntion name:kill_children 
[40;44m =======trace_function_path kill_children  function_call count: 1 level :0========  [0m
 <ssa_name 0x7fdf662d5b40
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _7 = -code_29;
    version:7>
[40;36m ======= node_fun:kill_children========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:kill========= [0m
[40;46m =======add node_fun stack:kill========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662d5b40
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _7 = -code_29;
    version:7>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:run_processes_parallel========= [0m
[40;42m =======pre add _ fucntion:strcmp========= [0m
[40;33m =======POP node_fun stack:strcmp========= [0m
[40;42m =======pre add _ fucntion:atoi========= [0m
[40;33m =======POP node_fun stack:atoi========= [0m
[40;42m =======pre add _ fucntion:run_command========= [0m
[40;33m =======POP node_fun stack:run_command========= [0m
[40;42m =======pre add _ fucntion:fprintf========= [0m
[40;33m =======POP node_fun stack:fprintf========= [0m
[40;42m =======pre add _ fucntion:__errno_location========= [0m
[40;33m =======POP node_fun stack:__errno_location========= [0m
[40;42m =======pre add _ fucntion:start_command========= [0m
[40;33m =======POP node_fun stack:start_command========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fdf6679d630
    type <pointer_type 0x7fdf662b4000
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662b6690>>
   
    def_stmt _2 = MEM[(char * *)argv_31(D) + 8B];
    version:2
    ptr-info 0x7fdf662c9e70>
 <ssa_name 0x7fdf6679d630
    type <pointer_type 0x7fdf662b4000
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662b6690>>
   
    def_stmt _2 = MEM[(char * *)argv_31(D) + 8B];
    version:2
    ptr-info 0x7fdf662c9e70>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf6679d630
    type <pointer_type 0x7fdf662b4000
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662b6690>>
   
    def_stmt _2 = MEM[(char * *)argv_31(D) + 8B];
    version:2
    ptr-info 0x7fdf662c9e70>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_39>
_3 = strcmp (_2, "start-command-ENOENT");
_3 = strcmp (_2, "start-command-ENOENT");
./benchmarks/git/use_after_free_2/git_uaf_2.c:419:14: warning: use location
  419 |         if (!strcmp(argv[1], "start-command-ENOENT")) {
      |              ^
this stmt call this function :strcmp
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:0 
if (_3 == 0)
./benchmarks/git/use_after_free_2/git_uaf_2.c:419:12: warning: use location
  419 |         if (!strcmp(argv[1], "start-command-ENOENT")) {
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf6679d630
    type <pointer_type 0x7fdf662b4000
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662b6690>>
   
    def_stmt _2 = MEM[(char * *)argv_31(D) + 8B];
    version:2
    ptr-info 0x7fdf662c9e70>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <string_cst 0x7fdf66793b70
    type <array_type 0x7fdf662bf738
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        BLK
        size <integer_cst 0x7fdf662a4d68 constant 168>
        unit-size <integer_cst 0x7fdf662a4d50 constant 21>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7fdf662bf690 type <integer_type 0x7fdf667aa000 sizetype>
            DI
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa738 precision:64 min <integer_cst 0x7fdf66795be8 0> max <integer_cst 0x7fdf662a4888 20>>
        pointer_to_this <pointer_type 0x7fdf662bf7e0>>
    readonly constant static "start-command-ENOENT\000">

dot graph START

======================================================================
 <ssa_name 0x7fdf6679d678
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _3 = strcmp (_2, "start-command-ENOENT");
    version:3>
 <ssa_name 0x7fdf6679d678
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _3 = strcmp (_2, "start-command-ENOENT");
    version:3>

 ================== pre trace ptable ================== 
trace fucntion name:strcmp 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf6679d678
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _3 = strcmp (_2, "start-command-ENOENT");
    version:3>
is Other function strcmp
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_39>
_3 = strcmp (_2, "start-command-ENOENT");
_3 = strcmp (_2, "start-command-ENOENT");
./benchmarks/git/use_after_free_2/git_uaf_2.c:419:14: warning: use location
  419 |         if (!strcmp(argv[1], "start-command-ENOENT")) {
      |              ^
this stmt call this function :strcmp
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:0 
if (_3 == 0)
./benchmarks/git/use_after_free_2/git_uaf_2.c:419:12: warning: use location
  419 |         if (!strcmp(argv[1], "start-command-ENOENT")) {
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf6679d678
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _3 = strcmp (_2, "start-command-ENOENT");
    version:3>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <var_decl 0x7fdf6703df30 proc
    type <record_type 0x7fdf662bb738 child_process BLK
        size <integer_cst 0x7fdf662a4978 constant 640>
        unit-size <integer_cst 0x7fdf662a4948 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738
        fields <field_decl 0x7fdf662bd850 argv type <pointer_type 0x7fdf662bb5e8>
            unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:49:15
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7fdf66795be8 constant 0>
            bit-offset <integer_cst 0x7fdf66795c30 constant 0> context <record_type 0x7fdf662bb738 child_process> chain <field_decl 0x7fdf662bd7b8 args>> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662bb7e0>>
    addressable BLK ./benchmarks/git/use_after_free_2/git_uaf_2.c:412:23 size <integer_cst 0x7fdf662a4978 640> unit-size <integer_cst 0x7fdf662a4948 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9600 main> chain <var_decl 0x7fdf6703dea0 jobs>>

 ================== this stmt hava call fucntion ================== 
 <var_decl 0x7fdf6703df30 proc
    type <record_type 0x7fdf662bb738 child_process BLK
        size <integer_cst 0x7fdf662a4978 constant 640>
        unit-size <integer_cst 0x7fdf662a4948 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738
        fields <field_decl 0x7fdf662bd850 argv type <pointer_type 0x7fdf662bb5e8>
            unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:49:15
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7fdf66795be8 constant 0>
            bit-offset <integer_cst 0x7fdf66795c30 constant 0> context <record_type 0x7fdf662bb738 child_process> chain <field_decl 0x7fdf662bd7b8 args>> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662bb7e0>>
    addressable BLK ./benchmarks/git/use_after_free_2/git_uaf_2.c:412:23 size <integer_cst 0x7fdf662a4978 640> unit-size <integer_cst 0x7fdf662a4948 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9600 main> chain <var_decl 0x7fdf6703dea0 jobs>>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_50 = VDEF <.MEM_39>
_4 = start_command (&proc);
_4 = start_command (&proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:420:21: warning: use location
  420 |                 if (start_command(&proc) < 0 && errno == ENOENT)
      |                     ^
this stmt call this function :start_command
trace fucntion name:start_command 

 ================== trace ================== 
trace fucntion free:0 
_11 = run_command (&proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:426:17: warning: use location
  426 |                 exit(run_command(&proc));
      |                 ^
this stmt call this function :run_command
trace fucntion name:run_command 

 ================== trace ================== 
trace fucntion free:0 
_11 = run_command (&proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:426:17: warning: use location
this stmt call this function :run_command
trace fucntion name:run_command 

 ================== trace ================== 
trace fucntion free:0 
proc.argv = _13;
./benchmarks/git/use_after_free_2/git_uaf_2.c:429:19: warning: use location
  429 |         proc.argv = (const char **)argv + 3;
      |                   ^
_16 = run_processes_parallel (jobs_33, parallel_next, 0B, 0B, &proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:432:17: warning: use location
  432 |                 exit(run_processes_parallel(jobs, parallel_next,
      |                 ^
this stmt call this function :run_processes_parallel
trace fucntion name:run_processes_parallel 
[40;44m =======trace_function_path run_processes_parallel  function_call count: 7 level :0========  [0m
 <var_decl 0x7fdf6703df30 proc
    type <record_type 0x7fdf662bb738 child_process BLK
        size <integer_cst 0x7fdf662a4978 constant 640>
        unit-size <integer_cst 0x7fdf662a4948 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738
        fields <field_decl 0x7fdf662bd850 argv type <pointer_type 0x7fdf662bb5e8>
            unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:49:15
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7fdf66795be8 constant 0>
            bit-offset <integer_cst 0x7fdf66795c30 constant 0> context <record_type 0x7fdf662bb738 child_process> chain <field_decl 0x7fdf662bd7b8 args>> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662bb7e0>>
    addressable BLK ./benchmarks/git/use_after_free_2/git_uaf_2.c:412:23 size <integer_cst 0x7fdf662a4978 640> unit-size <integer_cst 0x7fdf662a4948 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9600 main> chain <var_decl 0x7fdf6703dea0 jobs>>
[40;36m ======= node_fun:run_processes_parallel========= [0m
[40;36m ======= find relate stmt with proc ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:pp_cleanup========= [0m
[40;46m =======add node_fun stack:pp_cleanup========= [0m
[40;42m =======pre add _ fucntion:kill_children========= [0m
[40;46m =======add node_fun stack:kill_children========= [0m
[40;44m =======trace_function_path kill_children  function_call count: 1 level :1========  [0m
 <var_decl 0x7fdf6703df30 proc
    type <record_type 0x7fdf662bb738 child_process BLK
        size <integer_cst 0x7fdf662a4978 constant 640>
        unit-size <integer_cst 0x7fdf662a4948 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738
        fields <field_decl 0x7fdf662bd850 argv type <pointer_type 0x7fdf662bb5e8>
            unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:49:15
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7fdf66795be8 constant 0>
            bit-offset <integer_cst 0x7fdf66795c30 constant 0> context <record_type 0x7fdf662bb738 child_process> chain <field_decl 0x7fdf662bd7b8 args>> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662bb7e0>>
    addressable BLK ./benchmarks/git/use_after_free_2/git_uaf_2.c:412:23 size <integer_cst 0x7fdf662a4978 640> unit-size <integer_cst 0x7fdf662a4948 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9600 main> chain <var_decl 0x7fdf6703dea0 jobs>>
[40;36m ======= node_fun:kill_children========= [0m
[40;36m ======= find relate stmt with proc ========= [0m
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘kill_children’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:258:23: warning: use location
  258 |                 if (pp->children[i].state == GIT_CP_WORKING)
      |                       ^
_1 = pp_15(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:258:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:258:33: warning: use location
  258 |                 if (pp->children[i].state == GIT_CP_WORKING)
      |                                 ^
_4 = _1 + _3;
./benchmarks/git/use_after_free_2/git_uaf_2.c:258:33: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:259:32: warning: use location
  259 |                         kill(pp->children[i].process.pid, signo);
      |                                ^
_6 = pp_15(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:259:32: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:259:42: warning: use location
  259 |                         kill(pp->children[i].process.pid, signo);
      |                                          ^
_9 = _6 + _8;
./benchmarks/git/use_after_free_2/git_uaf_2.c:259:42: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:kill========= [0m
[40;46m =======add node_fun stack:kill========= [0m
[40;42m =======pre add _ fucntion:pp_collect_finished========= [0m
[40;46m =======add node_fun stack:pp_collect_finished========= [0m
[40;44m =======trace_function_path pp_collect_finished  function_call count: 5 level :1========  [0m
 <var_decl 0x7fdf6703df30 proc
    type <record_type 0x7fdf662bb738 child_process BLK
        size <integer_cst 0x7fdf662a4978 constant 640>
        unit-size <integer_cst 0x7fdf662a4948 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738
        fields <field_decl 0x7fdf662bd850 argv type <pointer_type 0x7fdf662bb5e8>
            unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:49:15
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7fdf66795be8 constant 0>
            bit-offset <integer_cst 0x7fdf66795c30 constant 0> context <record_type 0x7fdf662bb738 child_process> chain <field_decl 0x7fdf662bd7b8 args>> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662bb7e0>>
    addressable BLK ./benchmarks/git/use_after_free_2/git_uaf_2.c:412:23 size <integer_cst 0x7fdf662a4978 640> unit-size <integer_cst 0x7fdf662a4948 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9600 main> chain <var_decl 0x7fdf6703dea0 jobs>>
[40;36m ======= node_fun:pp_collect_finished========= [0m
[40;36m ======= find relate stmt with proc ========= [0m
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘pp_collect_finished’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:270:31: warning: use location
  270 |                         if (pp->children[i].state == GIT_CP_WAIT_CLEANUP)
      |                               ^
_1 = pp_91(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:270:31: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:270:41: warning: use location
  270 |                         if (pp->children[i].state == GIT_CP_WAIT_CLEANUP)
      |                                         ^
_4 = _1 + _3;
./benchmarks/git/use_after_free_2/git_uaf_2.c:270:41: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:275:42: warning: use location
  275 |                 code = finish_command(&pp->children[i].process);
      |                                          ^
_8 = pp_91(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:275:42: warning: use location
_8

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:275:52: warning: use location
  275 |                 code = finish_command(&pp->children[i].process);
      |                                                    ^
_11 = _8 + _10;
./benchmarks/git/use_after_free_2/git_uaf_2.c:275:52: warning: use location
_11

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:275:24: warning: use location
  275 |                 code = finish_command(&pp->children[i].process);
      |                        ^
_12 = &_11->process;
./benchmarks/git/use_after_free_2/git_uaf_2.c:275:24: warning: use location
_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:277:26: warning: use location
  277 |                 code = pp->task_finished(code, &pp->children[i].process,
      |                          ^
_13 = pp_91(D)->task_finished;
./benchmarks/git/use_after_free_2/git_uaf_2.c:277:26: warning: use location
_13

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:279:45: warning: use location
  279 |                                          &pp->children[i].data);
      |                                             ^
_14 = pp_91(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:279:45: warning: use location
_14

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:279:55: warning: use location
  279 |                                          &pp->children[i].data);
      |                                                       ^
_17 = _14 + _16;
./benchmarks/git/use_after_free_2/git_uaf_2.c:279:55: warning: use location
_17

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:279:42: warning: use location
  279 |                                          &pp->children[i].data);
      |                                          ^
_18 = &_17->data;
./benchmarks/git/use_after_free_2/git_uaf_2.c:279:42: warning: use location
_18

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:277:24: warning: use location
  277 |                 code = pp->task_finished(code, &pp->children[i].process,
      |                        ^
_19 = pp_91(D)->data;
./benchmarks/git/use_after_free_2/git_uaf_2.c:277:24: warning: use location
_19

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:278:45: warning: use location
  278 |                                          &pp->children[i].err, pp->data,
      |                                             ^
_20 = pp_91(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:278:45: warning: use location
_20

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:278:55: warning: use location
  278 |                                          &pp->children[i].err, pp->data,
      |                                                       ^
_23 = _20 + _22;
./benchmarks/git/use_after_free_2/git_uaf_2.c:278:55: warning: use location
_23

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:277:24: warning: use location
  277 |                 code = pp->task_finished(code, &pp->children[i].process,
      |                        ^
_24 = &_23->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:277:24: warning: use location
_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:277:51: warning: use location
  277 |                 code = pp->task_finished(code, &pp->children[i].process,
      |                                                   ^
_25 = pp_91(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:277:51: warning: use location
_25

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:277:61: warning: use location
  277 |                 code = pp->task_finished(code, &pp->children[i].process,
      |                                                             ^
_28 = _25 + _27;
./benchmarks/git/use_after_free_2/git_uaf_2.c:277:61: warning: use location
_28

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:277:24: warning: use location
  277 |                 code = pp->task_finished(code, &pp->children[i].process,
      |                        ^
_29 = &_28->process;
./benchmarks/git/use_after_free_2/git_uaf_2.c:277:24: warning: use location
_29

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:287:19: warning: use location
  287 |                 pp->children[i].state = GIT_CP_FREE;
      |                   ^
_32 = pp_91(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:287:19: warning: use location
_32

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:287:29: warning: use location
  287 |                 pp->children[i].state = GIT_CP_FREE;
      |                             ^
_35 = _32 + _34;
./benchmarks/git/use_after_free_2/git_uaf_2.c:287:29: warning: use location
_35

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:288:19: warning: use location
  288 |                 pp->pfd[i].fd = -1;
      |                   ^
_36 = pp_91(D)->pfd;
./benchmarks/git/use_after_free_2/git_uaf_2.c:288:19: warning: use location
_36

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:288:24: warning: use location
  288 |                 pp->pfd[i].fd = -1;
      |                        ^
_39 = _36 + _38;
./benchmarks/git/use_after_free_2/git_uaf_2.c:288:24: warning: use location
_39

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:289:39: warning: use location
  289 |                 child_process_init(&pp->children[i].process);
      |                                       ^
_40 = pp_91(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:289:39: warning: use location
_40

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:289:49: warning: use location
  289 |                 child_process_init(&pp->children[i].process);
      |                                                 ^
_43 = _40 + _42;
./benchmarks/git/use_after_free_2/git_uaf_2.c:289:49: warning: use location
_43

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:289:17: warning: use location
  289 |                 child_process_init(&pp->children[i].process);
      |                 ^
_44 = &_43->process;
./benchmarks/git/use_after_free_2/git_uaf_2.c:289:17: warning: use location
_44

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:292:64: warning: use location
  292 |                         strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);
      |                                                                ^
_46 = pp_91(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:292:64: warning: use location
_46

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:292:74: warning: use location
  292 |                         strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);
      |                                                                          ^
_49 = _46 + _48;
./benchmarks/git/use_after_free_2/git_uaf_2.c:292:74: warning: use location
_49

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:292:25: warning: use location
  292 |                         strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);
      |                         ^
_50 = &_49->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:292:25: warning: use location
_50

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:292:25: warning: use location
_51 = &pp_91(D)->buffered_output;
./benchmarks/git/use_after_free_2/git_uaf_2.c:292:25: warning: use location
_51

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:293:41: warning: use location
  293 |                         strbuf_reset(&pp->children[i].err);
      |                                         ^
_52 = pp_91(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:293:41: warning: use location
_52

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:293:51: warning: use location
  293 |                         strbuf_reset(&pp->children[i].err);
      |                                                   ^
_55 = _52 + _54;
./benchmarks/git/use_after_free_2/git_uaf_2.c:293:51: warning: use location
_55

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:293:25: warning: use location
  293 |                         strbuf_reset(&pp->children[i].err);
      |                         ^
_56 = &_55->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:293:25: warning: use location
_56

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:295:33: warning: use location
  295 |                         fputs(pp->children[i].err.buf, stderr);
      |                                 ^
_58 = pp_91(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:295:33: warning: use location
_58

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:295:43: warning: use location
  295 |                         fputs(pp->children[i].err.buf, stderr);
      |                                           ^
_61 = _58 + _60;
./benchmarks/git/use_after_free_2/git_uaf_2.c:295:43: warning: use location
_61

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:295:50: warning: use location
  295 |                         fputs(pp->children[i].err.buf, stderr);
      |                                                  ^
_62 = _61->err.buf;
./benchmarks/git/use_after_free_2/git_uaf_2.c:295:50: warning: use location
_62

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:296:41: warning: use location
  296 |                         strbuf_reset(&pp->children[i].err);
      |                                         ^
_63 = pp_91(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:296:41: warning: use location
_63

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:296:51: warning: use location
  296 |                         strbuf_reset(&pp->children[i].err);
      |                                                   ^
_66 = _63 + _65;
./benchmarks/git/use_after_free_2/git_uaf_2.c:296:51: warning: use location
_66

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:296:25: warning: use location
  296 |                         strbuf_reset(&pp->children[i].err);
      |                         ^
_67 = &_66->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:296:25: warning: use location
_67

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:299:50: warning: use location
  299 |                         fputs(pp->buffered_output.buf, stderr);
      |                                                  ^
_69 = pp_91(D)->buffered_output.buf;
./benchmarks/git/use_after_free_2/git_uaf_2.c:299:50: warning: use location
_69

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:300:25: warning: use location
  300 |                         strbuf_reset(&pp->buffered_output);
      |                         ^
_70 = &pp_91(D)->buffered_output;
./benchmarks/git/use_after_free_2/git_uaf_2.c:300:25: warning: use location
_70

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:311:39: warning: use location
  311 |                                 if (pp->children[(pp->output_owner + i) % n].state == GIT_CP_WORKING)
      |                                       ^
_71 = pp_91(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:311:39: warning: use location
_71

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:311:49: warning: use location
  311 |                                 if (pp->children[(pp->output_owner + i) % n].state == GIT_CP_WORKING)
      |                                                 ^
_77 = _71 + _76;
./benchmarks/git/use_after_free_2/git_uaf_2.c:311:49: warning: use location
_77

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:fputs========= [0m
[40;46m =======add node_fun stack:fputs========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:finish_command========= [0m
[40;46m =======add node_fun stack:finish_command========= [0m
[40;44m =======trace_function_path finish_command  function_call count: 2 level :2========  [0m
 <var_decl 0x7fdf6703df30 proc
    type <record_type 0x7fdf662bb738 child_process BLK
        size <integer_cst 0x7fdf662a4978 constant 640>
        unit-size <integer_cst 0x7fdf662a4948 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738
        fields <field_decl 0x7fdf662bd850 argv type <pointer_type 0x7fdf662bb5e8>
            unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:49:15
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7fdf66795be8 constant 0>
            bit-offset <integer_cst 0x7fdf66795c30 constant 0> context <record_type 0x7fdf662bb738 child_process> chain <field_decl 0x7fdf662bd7b8 args>> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662bb7e0>>
    addressable BLK ./benchmarks/git/use_after_free_2/git_uaf_2.c:412:23 size <integer_cst 0x7fdf662a4978 640> unit-size <integer_cst 0x7fdf662a4948 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9600 main> chain <var_decl 0x7fdf6703dea0 jobs>>
[40;36m ======= node_fun:finish_command========= [0m
[40;36m ======= find relate stmt with proc ========= [0m
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘finish_command’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:42: warning: use location
  321 |     int ret = wait_or_whine(cmd->pid, cmd->argv[0], 0);
      |                                          ^
_1 = cmd_5(D)->argv;
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:42: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:15: warning: use location
  321 |     int ret = wait_or_whine(cmd->pid, cmd->argv[0], 0);
      |               ^
_2 = *_1;
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:15: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_clear========= [0m
[40;46m =======add node_fun stack:child_process_clear========= [0m
[40;44m =======trace_function_path child_process_clear  function_call count: 1 level :3========  [0m
 <var_decl 0x7fdf6703df30 proc
    type <record_type 0x7fdf662bb738 child_process BLK
        size <integer_cst 0x7fdf662a4978 constant 640>
        unit-size <integer_cst 0x7fdf662a4948 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738
        fields <field_decl 0x7fdf662bd850 argv type <pointer_type 0x7fdf662bb5e8>
            unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:49:15
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7fdf66795be8 constant 0>
            bit-offset <integer_cst 0x7fdf66795c30 constant 0> context <record_type 0x7fdf662bb738 child_process> chain <field_decl 0x7fdf662bd7b8 args>> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662bb7e0>>
    addressable BLK ./benchmarks/git/use_after_free_2/git_uaf_2.c:412:23 size <integer_cst 0x7fdf662a4978 640> unit-size <integer_cst 0x7fdf662a4948 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9600 main> chain <var_decl 0x7fdf6703dea0 jobs>>
[40;36m ======= node_fun:child_process_clear========= [0m
[40;36m ======= find relate stmt with proc ========= [0m
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘child_process_clear’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:328:9: warning: use location
  328 |         argv_array_clear(&child->args);
      |         ^
_1 = &child_3(D)->args;
./benchmarks/git/use_after_free_2/git_uaf_2.c:328:9: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:329:9: warning: use location
  329 |         argv_array_clear(&child->env_array);
      |         ^
_2 = &child_3(D)->env_array;
./benchmarks/git/use_after_free_2/git_uaf_2.c:329:9: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;46m =======add node_fun stack:wait_or_whine========= [0m
[40;42m =======pre add _ fucntion:pp_output========= [0m
[40;46m =======add node_fun stack:pp_output========= [0m
[40;42m =======pre add _ fucntion:pp_buffer_stderr========= [0m
[40;46m =======add node_fun stack:pp_buffer_stderr========= [0m
[40;42m =======pre add _ fucntion:pp_start_one========= [0m
[40;46m =======add node_fun stack:pp_start_one========= [0m
[40;44m =======trace_function_path pp_start_one  function_call count: 5 level :1========  [0m
 <var_decl 0x7fdf6703df30 proc
    type <record_type 0x7fdf662bb738 child_process BLK
        size <integer_cst 0x7fdf662a4978 constant 640>
        unit-size <integer_cst 0x7fdf662a4948 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738
        fields <field_decl 0x7fdf662bd850 argv type <pointer_type 0x7fdf662bb5e8>
            unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:49:15
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7fdf66795be8 constant 0>
            bit-offset <integer_cst 0x7fdf66795c30 constant 0> context <record_type 0x7fdf662bb738 child_process> chain <field_decl 0x7fdf662bd7b8 args>> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662bb7e0>>
    addressable BLK ./benchmarks/git/use_after_free_2/git_uaf_2.c:412:23 size <integer_cst 0x7fdf662a4978 640> unit-size <integer_cst 0x7fdf662a4948 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9600 main> chain <var_decl 0x7fdf6703dea0 jobs>>
[40;36m ======= node_fun:pp_start_one========= [0m
[40;36m ======= find relate stmt with proc ========= [0m
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘pp_start_one’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:217:23: warning: use location
  217 |                 if (pp->children[i].state == GIT_CP_FREE)
      |                       ^
_1 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:217:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:217:33: warning: use location
  217 |                 if (pp->children[i].state == GIT_CP_FREE)
      |                                 ^
_4 = _1 + _3;
./benchmarks/git/use_after_free_2/git_uaf_2.c:217:33: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:222:18: warning: use location
  222 |         code = pp->get_next_task(&pp->children[i].process,
      |                  ^
_8 = pp_102(D)->get_next_task;
./benchmarks/git/use_after_free_2/git_uaf_2.c:222:18: warning: use location
_8

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:225:37: warning: use location
  225 |                                  &pp->children[i].data);
      |                                     ^
_9 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:225:37: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:225:47: warning: use location
  225 |                                  &pp->children[i].data);
      |                                               ^
_12 = _9 + _11;
./benchmarks/git/use_after_free_2/git_uaf_2.c:225:47: warning: use location
_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:222:16: warning: use location
  222 |         code = pp->get_next_task(&pp->children[i].process,
      |                ^
_13 = &_12->data;
./benchmarks/git/use_after_free_2/git_uaf_2.c:222:16: warning: use location
_13

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:222:16: warning: use location
_14 = pp_102(D)->data;
./benchmarks/git/use_after_free_2/git_uaf_2.c:222:16: warning: use location
_14

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:223:37: warning: use location
  223 |                                  &pp->children[i].err,
      |                                     ^
_15 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:223:37: warning: use location
_15

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:223:47: warning: use location
  223 |                                  &pp->children[i].err,
      |                                               ^
_18 = _15 + _17;
./benchmarks/git/use_after_free_2/git_uaf_2.c:223:47: warning: use location
_18

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:222:16: warning: use location
  222 |         code = pp->get_next_task(&pp->children[i].process,
      |                ^
_19 = &_18->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:222:16: warning: use location
_19

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:222:37: warning: use location
  222 |         code = pp->get_next_task(&pp->children[i].process,
      |                                     ^
_20 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:222:37: warning: use location
_20

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:222:47: warning: use location
  222 |         code = pp->get_next_task(&pp->children[i].process,
      |                                               ^
_23 = _20 + _22;
./benchmarks/git/use_after_free_2/git_uaf_2.c:222:47: warning: use location
_23

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:222:16: warning: use location
  222 |         code = pp->get_next_task(&pp->children[i].process,
      |                ^
_24 = &_23->process;
./benchmarks/git/use_after_free_2/git_uaf_2.c:222:16: warning: use location
_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:227:56: warning: use location
  227 |                 strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);
      |                                                        ^
_25 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:227:56: warning: use location
_25

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:227:66: warning: use location
  227 |                 strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);
      |                                                                  ^
_28 = _25 + _27;
./benchmarks/git/use_after_free_2/git_uaf_2.c:227:66: warning: use location
_28

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:227:17: warning: use location
  227 |                 strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);
      |                 ^
_29 = &_28->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:227:17: warning: use location
_29

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:227:17: warning: use location
_30 = &pp_102(D)->buffered_output;
./benchmarks/git/use_after_free_2/git_uaf_2.c:227:17: warning: use location
_30

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:228:33: warning: use location
  228 |                 strbuf_reset(&pp->children[i].err);
      |                                 ^
_31 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:228:33: warning: use location
_31

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:228:43: warning: use location
  228 |                 strbuf_reset(&pp->children[i].err);
      |                                           ^
_34 = _31 + _33;
./benchmarks/git/use_after_free_2/git_uaf_2.c:228:43: warning: use location
_34

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:228:17: warning: use location
  228 |                 strbuf_reset(&pp->children[i].err);
      |                 ^
_35 = &_34->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:228:17: warning: use location
_35

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:231:11: warning: use location
  231 |         pp->children[i].process.err = -1;
      |           ^
_36 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:231:11: warning: use location
_36

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:231:21: warning: use location
  231 |         pp->children[i].process.err = -1;
      |                     ^
_39 = _36 + _38;
./benchmarks/git/use_after_free_2/git_uaf_2.c:231:21: warning: use location
_39

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:232:11: warning: use location
  232 |         pp->children[i].process.stdout_to_stderr = 1;
      |           ^
_40 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:232:11: warning: use location
_40

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:232:21: warning: use location
  232 |         pp->children[i].process.stdout_to_stderr = 1;
      |                     ^
_43 = _40 + _42;
./benchmarks/git/use_after_free_2/git_uaf_2.c:232:21: warning: use location
_43

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:233:11: warning: use location
  233 |         pp->children[i].process.no_stdin = 1;
      |           ^
_44 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:233:11: warning: use location
_44

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:233:21: warning: use location
  233 |         pp->children[i].process.no_stdin = 1;
      |                     ^
_47 = _44 + _46;
./benchmarks/git/use_after_free_2/git_uaf_2.c:233:21: warning: use location
_47

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:235:30: warning: use location
  235 |         if (start_command(&pp->children[i].process)) {
      |                              ^
_48 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:235:30: warning: use location
_48

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:235:40: warning: use location
  235 |         if (start_command(&pp->children[i].process)) {
      |                                        ^
_51 = _48 + _50;
./benchmarks/git/use_after_free_2/git_uaf_2.c:235:40: warning: use location
_51

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:235:13: warning: use location
  235 |         if (start_command(&pp->children[i].process)) {
      |             ^
_52 = &_51->process;
./benchmarks/git/use_after_free_2/git_uaf_2.c:235:13: warning: use location
_52

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:236:26: warning: use location
  236 |                 code = pp->start_failure(&pp->children[i].process,
      |                          ^
_54 = pp_102(D)->start_failure;
./benchmarks/git/use_after_free_2/git_uaf_2.c:236:26: warning: use location
_54

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:239:45: warning: use location
  239 |                                          &pp->children[i].data);
      |                                             ^
_55 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:239:45: warning: use location
_55

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:239:55: warning: use location
  239 |                                          &pp->children[i].data);
      |                                                       ^
_58 = _55 + _57;
./benchmarks/git/use_after_free_2/git_uaf_2.c:239:55: warning: use location
_58

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:239:42: warning: use location
  239 |                                          &pp->children[i].data);
      |                                          ^
_59 = &_58->data;
./benchmarks/git/use_after_free_2/git_uaf_2.c:239:42: warning: use location
_59

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:236:24: warning: use location
  236 |                 code = pp->start_failure(&pp->children[i].process,
      |                        ^
_60 = pp_102(D)->data;
./benchmarks/git/use_after_free_2/git_uaf_2.c:236:24: warning: use location
_60

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:237:45: warning: use location
  237 |                                          &pp->children[i].err,
      |                                             ^
_61 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:237:45: warning: use location
_61

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:237:55: warning: use location
  237 |                                          &pp->children[i].err,
      |                                                       ^
_64 = _61 + _63;
./benchmarks/git/use_after_free_2/git_uaf_2.c:237:55: warning: use location
_64

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:236:24: warning: use location
  236 |                 code = pp->start_failure(&pp->children[i].process,
      |                        ^
_65 = &_64->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:236:24: warning: use location
_65

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:236:45: warning: use location
  236 |                 code = pp->start_failure(&pp->children[i].process,
      |                                             ^
_66 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:236:45: warning: use location
_66

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:236:55: warning: use location
  236 |                 code = pp->start_failure(&pp->children[i].process,
      |                                                       ^
_69 = _66 + _68;
./benchmarks/git/use_after_free_2/git_uaf_2.c:236:55: warning: use location
_69

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:236:24: warning: use location
  236 |                 code = pp->start_failure(&pp->children[i].process,
      |                        ^
_70 = &_69->process;
./benchmarks/git/use_after_free_2/git_uaf_2.c:236:24: warning: use location
_70

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:240:56: warning: use location
  240 |                 strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);
      |                                                        ^
_71 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:240:56: warning: use location
_71

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:240:66: warning: use location
  240 |                 strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);
      |                                                                  ^
_74 = _71 + _73;
./benchmarks/git/use_after_free_2/git_uaf_2.c:240:66: warning: use location
_74

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:240:17: warning: use location
  240 |                 strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);
      |                 ^
_75 = &_74->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:240:17: warning: use location
_75

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:240:17: warning: use location
_76 = &pp_102(D)->buffered_output;
./benchmarks/git/use_after_free_2/git_uaf_2.c:240:17: warning: use location
_76

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:241:33: warning: use location
  241 |                 strbuf_reset(&pp->children[i].err);
      |                                 ^
_77 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:241:33: warning: use location
_77

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:241:43: warning: use location
  241 |                 strbuf_reset(&pp->children[i].err);
      |                                           ^
_80 = _77 + _79;
./benchmarks/git/use_after_free_2/git_uaf_2.c:241:43: warning: use location
_80

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:241:17: warning: use location
  241 |                 strbuf_reset(&pp->children[i].err);
      |                 ^
_81 = &_80->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:241:17: warning: use location
_81

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:248:11: warning: use location
  248 |         pp->children[i].state = GIT_CP_WORKING;
      |           ^
_84 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:248:11: warning: use location
_84

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:248:21: warning: use location
  248 |         pp->children[i].state = GIT_CP_WORKING;
      |                     ^
_87 = _84 + _86;
./benchmarks/git/use_after_free_2/git_uaf_2.c:248:21: warning: use location
_87

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:249:27: warning: use location
  249 |         pp->pfd[i].fd = pp->children[i].process.err;
      |                           ^
_88 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:249:27: warning: use location
_88

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:249:37: warning: use location
  249 |         pp->pfd[i].fd = pp->children[i].process.err;
      |                                     ^
_91 = _88 + _90;
./benchmarks/git/use_after_free_2/git_uaf_2.c:249:37: warning: use location
_91

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:249:11: warning: use location
  249 |         pp->pfd[i].fd = pp->children[i].process.err;
      |           ^
_92 = pp_102(D)->pfd;
./benchmarks/git/use_after_free_2/git_uaf_2.c:249:11: warning: use location
_92

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:249:16: warning: use location
  249 |         pp->pfd[i].fd = pp->children[i].process.err;
      |                ^
_95 = _92 + _94;
./benchmarks/git/use_after_free_2/git_uaf_2.c:249:16: warning: use location
_95

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:start_command========= [0m
[40;46m =======add node_fun stack:start_command========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:pp_init========= [0m
[40;46m =======add node_fun stack:pp_init========= [0m
[40;44m =======trace_function_path pp_init  function_call count: 7 level :1========  [0m
 <var_decl 0x7fdf6703df30 proc
    type <record_type 0x7fdf662bb738 child_process BLK
        size <integer_cst 0x7fdf662a4978 constant 640>
        unit-size <integer_cst 0x7fdf662a4948 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738
        fields <field_decl 0x7fdf662bd850 argv type <pointer_type 0x7fdf662bb5e8>
            unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:49:15
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7fdf66795be8 constant 0>
            bit-offset <integer_cst 0x7fdf66795c30 constant 0> context <record_type 0x7fdf662bb738 child_process> chain <field_decl 0x7fdf662bd7b8 args>> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662bb7e0>>
    addressable BLK ./benchmarks/git/use_after_free_2/git_uaf_2.c:412:23 size <integer_cst 0x7fdf662a4978 640> unit-size <integer_cst 0x7fdf662a4948 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9600 main> chain <var_decl 0x7fdf6703dea0 jobs>>
[40;36m ======= node_fun:pp_init========= [0m
[40;36m ======= find relate stmt with proc ========= [0m
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: use location
  193 |         strbuf_init(&pp->buffered_output, 0);
      |         ^
_5 = &pp_34(D)->buffered_output;
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:32: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                ^
_6 = pp_34(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:32: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:42: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                          ^
_9 = _6 + _8;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:42: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                 ^
_10 = &_9->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:39: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                       ^
_11 = pp_34(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:39: warning: use location
_11

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:49: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                                 ^
_14 = _11 + _13;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:49: warning: use location
_14

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                 ^
_15 = &_14->process;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
_15

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:19: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                   ^
_16 = pp_34(D)->pfd;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:19: warning: use location
_16

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:24: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                        ^
_19 = _16 + _18;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:24: warning: use location
_19

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:19: warning: use location
  199 |                 pp->pfd[i].fd = -1;
      |                   ^
_20 = pp_34(D)->pfd;
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:19: warning: use location
_20

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:24: warning: use location
  199 |                 pp->pfd[i].fd = -1;
      |                        ^
_23 = _20 + _22;
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:24: warning: use location
_23

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;46m =======add node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;46m =======add node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;46m =======add node_fun stack:online_cpus========= [0m

 ================== trace ================== 
trace fucntion free:0 
_22 = run_processes_parallel (jobs_33, no_job, 0B, task_finished, &proc);
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:440:17: warning: use location
  440 |                 exit(run_processes_parallel(jobs, no_job,
      |                 ^
this stmt call this function :run_processes_parallel
trace fucntion name:run_processes_parallel 
[40;44m =======trace_function_path run_processes_parallel  function_call count: 7 level :0========  [0m
 <var_decl 0x7fdf6703df30 proc
    type <record_type 0x7fdf662bb738 child_process BLK
        size <integer_cst 0x7fdf662a4978 constant 640>
        unit-size <integer_cst 0x7fdf662a4948 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738
        fields <field_decl 0x7fdf662bd850 argv type <pointer_type 0x7fdf662bb5e8>
            unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:49:15
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7fdf66795be8 constant 0>
            bit-offset <integer_cst 0x7fdf66795c30 constant 0> context <record_type 0x7fdf662bb738 child_process> chain <field_decl 0x7fdf662bd7b8 args>> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662bb7e0>>
    addressable BLK ./benchmarks/git/use_after_free_2/git_uaf_2.c:412:23 size <integer_cst 0x7fdf662a4978 640> unit-size <integer_cst 0x7fdf662a4948 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9600 main> chain <var_decl 0x7fdf6703dea0 jobs>>
[40;36m ======= node_fun:run_processes_parallel========= [0m
[40;36m ======= find relate stmt with proc ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:pp_cleanup========= [0m
[40;46m =======add node_fun stack:pp_cleanup========= [0m
[40;42m =======pre add _ fucntion:kill_children========= [0m
[40;46m =======add node_fun stack:kill_children========= [0m
[40;44m =======trace_function_path kill_children  function_call count: 1 level :1========  [0m
 <var_decl 0x7fdf6703df30 proc
    type <record_type 0x7fdf662bb738 child_process BLK
        size <integer_cst 0x7fdf662a4978 constant 640>
        unit-size <integer_cst 0x7fdf662a4948 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738
        fields <field_decl 0x7fdf662bd850 argv type <pointer_type 0x7fdf662bb5e8>
            unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:49:15
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7fdf66795be8 constant 0>
            bit-offset <integer_cst 0x7fdf66795c30 constant 0> context <record_type 0x7fdf662bb738 child_process> chain <field_decl 0x7fdf662bd7b8 args>> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662bb7e0>>
    addressable BLK ./benchmarks/git/use_after_free_2/git_uaf_2.c:412:23 size <integer_cst 0x7fdf662a4978 640> unit-size <integer_cst 0x7fdf662a4948 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9600 main> chain <var_decl 0x7fdf6703dea0 jobs>>
[40;36m ======= node_fun:kill_children========= [0m
[40;36m ======= find relate stmt with proc ========= [0m
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘kill_children’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:258:23: warning: use location
  258 |                 if (pp->children[i].state == GIT_CP_WORKING)
      |                       ^
_1 = pp_15(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:258:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:258:33: warning: use location
  258 |                 if (pp->children[i].state == GIT_CP_WORKING)
      |                                 ^
_4 = _1 + _3;
./benchmarks/git/use_after_free_2/git_uaf_2.c:258:33: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:259:32: warning: use location
  259 |                         kill(pp->children[i].process.pid, signo);
      |                                ^
_6 = pp_15(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:259:32: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:259:42: warning: use location
  259 |                         kill(pp->children[i].process.pid, signo);
      |                                          ^
_9 = _6 + _8;
./benchmarks/git/use_after_free_2/git_uaf_2.c:259:42: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:kill========= [0m
[40;46m =======add node_fun stack:kill========= [0m
[40;42m =======pre add _ fucntion:pp_collect_finished========= [0m
[40;46m =======add node_fun stack:pp_collect_finished========= [0m
[40;44m =======trace_function_path pp_collect_finished  function_call count: 5 level :1========  [0m
 <var_decl 0x7fdf6703df30 proc
    type <record_type 0x7fdf662bb738 child_process BLK
        size <integer_cst 0x7fdf662a4978 constant 640>
        unit-size <integer_cst 0x7fdf662a4948 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738
        fields <field_decl 0x7fdf662bd850 argv type <pointer_type 0x7fdf662bb5e8>
            unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:49:15
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7fdf66795be8 constant 0>
            bit-offset <integer_cst 0x7fdf66795c30 constant 0> context <record_type 0x7fdf662bb738 child_process> chain <field_decl 0x7fdf662bd7b8 args>> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662bb7e0>>
    addressable BLK ./benchmarks/git/use_after_free_2/git_uaf_2.c:412:23 size <integer_cst 0x7fdf662a4978 640> unit-size <integer_cst 0x7fdf662a4948 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9600 main> chain <var_decl 0x7fdf6703dea0 jobs>>
[40;36m ======= node_fun:pp_collect_finished========= [0m
[40;36m ======= find relate stmt with proc ========= [0m
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘pp_collect_finished’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:270:31: warning: use location
  270 |                         if (pp->children[i].state == GIT_CP_WAIT_CLEANUP)
      |                               ^
_1 = pp_91(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:270:31: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:270:41: warning: use location
  270 |                         if (pp->children[i].state == GIT_CP_WAIT_CLEANUP)
      |                                         ^
_4 = _1 + _3;
./benchmarks/git/use_after_free_2/git_uaf_2.c:270:41: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:275:42: warning: use location
  275 |                 code = finish_command(&pp->children[i].process);
      |                                          ^
_8 = pp_91(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:275:42: warning: use location
_8

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:275:52: warning: use location
  275 |                 code = finish_command(&pp->children[i].process);
      |                                                    ^
_11 = _8 + _10;
./benchmarks/git/use_after_free_2/git_uaf_2.c:275:52: warning: use location
_11

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:275:24: warning: use location
  275 |                 code = finish_command(&pp->children[i].process);
      |                        ^
_12 = &_11->process;
./benchmarks/git/use_after_free_2/git_uaf_2.c:275:24: warning: use location
_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:277:26: warning: use location
  277 |                 code = pp->task_finished(code, &pp->children[i].process,
      |                          ^
_13 = pp_91(D)->task_finished;
./benchmarks/git/use_after_free_2/git_uaf_2.c:277:26: warning: use location
_13

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:279:45: warning: use location
  279 |                                          &pp->children[i].data);
      |                                             ^
_14 = pp_91(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:279:45: warning: use location
_14

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:279:55: warning: use location
  279 |                                          &pp->children[i].data);
      |                                                       ^
_17 = _14 + _16;
./benchmarks/git/use_after_free_2/git_uaf_2.c:279:55: warning: use location
_17

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:279:42: warning: use location
  279 |                                          &pp->children[i].data);
      |                                          ^
_18 = &_17->data;
./benchmarks/git/use_after_free_2/git_uaf_2.c:279:42: warning: use location
_18

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:277:24: warning: use location
  277 |                 code = pp->task_finished(code, &pp->children[i].process,
      |                        ^
_19 = pp_91(D)->data;
./benchmarks/git/use_after_free_2/git_uaf_2.c:277:24: warning: use location
_19

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:278:45: warning: use location
  278 |                                          &pp->children[i].err, pp->data,
      |                                             ^
_20 = pp_91(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:278:45: warning: use location
_20

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:278:55: warning: use location
  278 |                                          &pp->children[i].err, pp->data,
      |                                                       ^
_23 = _20 + _22;
./benchmarks/git/use_after_free_2/git_uaf_2.c:278:55: warning: use location
_23

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:277:24: warning: use location
  277 |                 code = pp->task_finished(code, &pp->children[i].process,
      |                        ^
_24 = &_23->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:277:24: warning: use location
_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:277:51: warning: use location
  277 |                 code = pp->task_finished(code, &pp->children[i].process,
      |                                                   ^
_25 = pp_91(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:277:51: warning: use location
_25

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:277:61: warning: use location
  277 |                 code = pp->task_finished(code, &pp->children[i].process,
      |                                                             ^
_28 = _25 + _27;
./benchmarks/git/use_after_free_2/git_uaf_2.c:277:61: warning: use location
_28

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:277:24: warning: use location
  277 |                 code = pp->task_finished(code, &pp->children[i].process,
      |                        ^
_29 = &_28->process;
./benchmarks/git/use_after_free_2/git_uaf_2.c:277:24: warning: use location
_29

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:287:19: warning: use location
  287 |                 pp->children[i].state = GIT_CP_FREE;
      |                   ^
_32 = pp_91(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:287:19: warning: use location
_32

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:287:29: warning: use location
  287 |                 pp->children[i].state = GIT_CP_FREE;
      |                             ^
_35 = _32 + _34;
./benchmarks/git/use_after_free_2/git_uaf_2.c:287:29: warning: use location
_35

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:288:19: warning: use location
  288 |                 pp->pfd[i].fd = -1;
      |                   ^
_36 = pp_91(D)->pfd;
./benchmarks/git/use_after_free_2/git_uaf_2.c:288:19: warning: use location
_36

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:288:24: warning: use location
  288 |                 pp->pfd[i].fd = -1;
      |                        ^
_39 = _36 + _38;
./benchmarks/git/use_after_free_2/git_uaf_2.c:288:24: warning: use location
_39

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:289:39: warning: use location
  289 |                 child_process_init(&pp->children[i].process);
      |                                       ^
_40 = pp_91(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:289:39: warning: use location
_40

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:289:49: warning: use location
  289 |                 child_process_init(&pp->children[i].process);
      |                                                 ^
_43 = _40 + _42;
./benchmarks/git/use_after_free_2/git_uaf_2.c:289:49: warning: use location
_43

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:289:17: warning: use location
  289 |                 child_process_init(&pp->children[i].process);
      |                 ^
_44 = &_43->process;
./benchmarks/git/use_after_free_2/git_uaf_2.c:289:17: warning: use location
_44

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:292:64: warning: use location
  292 |                         strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);
      |                                                                ^
_46 = pp_91(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:292:64: warning: use location
_46

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:292:74: warning: use location
  292 |                         strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);
      |                                                                          ^
_49 = _46 + _48;
./benchmarks/git/use_after_free_2/git_uaf_2.c:292:74: warning: use location
_49

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:292:25: warning: use location
  292 |                         strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);
      |                         ^
_50 = &_49->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:292:25: warning: use location
_50

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:292:25: warning: use location
_51 = &pp_91(D)->buffered_output;
./benchmarks/git/use_after_free_2/git_uaf_2.c:292:25: warning: use location
_51

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:293:41: warning: use location
  293 |                         strbuf_reset(&pp->children[i].err);
      |                                         ^
_52 = pp_91(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:293:41: warning: use location
_52

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:293:51: warning: use location
  293 |                         strbuf_reset(&pp->children[i].err);
      |                                                   ^
_55 = _52 + _54;
./benchmarks/git/use_after_free_2/git_uaf_2.c:293:51: warning: use location
_55

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:293:25: warning: use location
  293 |                         strbuf_reset(&pp->children[i].err);
      |                         ^
_56 = &_55->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:293:25: warning: use location
_56

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:295:33: warning: use location
  295 |                         fputs(pp->children[i].err.buf, stderr);
      |                                 ^
_58 = pp_91(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:295:33: warning: use location
_58

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:295:43: warning: use location
  295 |                         fputs(pp->children[i].err.buf, stderr);
      |                                           ^
_61 = _58 + _60;
./benchmarks/git/use_after_free_2/git_uaf_2.c:295:43: warning: use location
_61

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:295:50: warning: use location
  295 |                         fputs(pp->children[i].err.buf, stderr);
      |                                                  ^
_62 = _61->err.buf;
./benchmarks/git/use_after_free_2/git_uaf_2.c:295:50: warning: use location
_62

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:296:41: warning: use location
  296 |                         strbuf_reset(&pp->children[i].err);
      |                                         ^
_63 = pp_91(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:296:41: warning: use location
_63

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:296:51: warning: use location
  296 |                         strbuf_reset(&pp->children[i].err);
      |                                                   ^
_66 = _63 + _65;
./benchmarks/git/use_after_free_2/git_uaf_2.c:296:51: warning: use location
_66

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:296:25: warning: use location
  296 |                         strbuf_reset(&pp->children[i].err);
      |                         ^
_67 = &_66->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:296:25: warning: use location
_67

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:299:50: warning: use location
  299 |                         fputs(pp->buffered_output.buf, stderr);
      |                                                  ^
_69 = pp_91(D)->buffered_output.buf;
./benchmarks/git/use_after_free_2/git_uaf_2.c:299:50: warning: use location
_69

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:300:25: warning: use location
  300 |                         strbuf_reset(&pp->buffered_output);
      |                         ^
_70 = &pp_91(D)->buffered_output;
./benchmarks/git/use_after_free_2/git_uaf_2.c:300:25: warning: use location
_70

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:311:39: warning: use location
  311 |                                 if (pp->children[(pp->output_owner + i) % n].state == GIT_CP_WORKING)
      |                                       ^
_71 = pp_91(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:311:39: warning: use location
_71

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:311:49: warning: use location
  311 |                                 if (pp->children[(pp->output_owner + i) % n].state == GIT_CP_WORKING)
      |                                                 ^
_77 = _71 + _76;
./benchmarks/git/use_after_free_2/git_uaf_2.c:311:49: warning: use location
_77

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:fputs========= [0m
[40;46m =======add node_fun stack:fputs========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:finish_command========= [0m
[40;46m =======add node_fun stack:finish_command========= [0m
[40;44m =======trace_function_path finish_command  function_call count: 2 level :2========  [0m
 <var_decl 0x7fdf6703df30 proc
    type <record_type 0x7fdf662bb738 child_process BLK
        size <integer_cst 0x7fdf662a4978 constant 640>
        unit-size <integer_cst 0x7fdf662a4948 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738
        fields <field_decl 0x7fdf662bd850 argv type <pointer_type 0x7fdf662bb5e8>
            unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:49:15
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7fdf66795be8 constant 0>
            bit-offset <integer_cst 0x7fdf66795c30 constant 0> context <record_type 0x7fdf662bb738 child_process> chain <field_decl 0x7fdf662bd7b8 args>> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662bb7e0>>
    addressable BLK ./benchmarks/git/use_after_free_2/git_uaf_2.c:412:23 size <integer_cst 0x7fdf662a4978 640> unit-size <integer_cst 0x7fdf662a4948 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9600 main> chain <var_decl 0x7fdf6703dea0 jobs>>
[40;36m ======= node_fun:finish_command========= [0m
[40;36m ======= find relate stmt with proc ========= [0m
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘finish_command’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:42: warning: use location
  321 |     int ret = wait_or_whine(cmd->pid, cmd->argv[0], 0);
      |                                          ^
_1 = cmd_5(D)->argv;
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:42: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:15: warning: use location
  321 |     int ret = wait_or_whine(cmd->pid, cmd->argv[0], 0);
      |               ^
_2 = *_1;
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:15: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_clear========= [0m
[40;46m =======add node_fun stack:child_process_clear========= [0m
[40;44m =======trace_function_path child_process_clear  function_call count: 1 level :3========  [0m
 <var_decl 0x7fdf6703df30 proc
    type <record_type 0x7fdf662bb738 child_process BLK
        size <integer_cst 0x7fdf662a4978 constant 640>
        unit-size <integer_cst 0x7fdf662a4948 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738
        fields <field_decl 0x7fdf662bd850 argv type <pointer_type 0x7fdf662bb5e8>
            unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:49:15
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7fdf66795be8 constant 0>
            bit-offset <integer_cst 0x7fdf66795c30 constant 0> context <record_type 0x7fdf662bb738 child_process> chain <field_decl 0x7fdf662bd7b8 args>> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662bb7e0>>
    addressable BLK ./benchmarks/git/use_after_free_2/git_uaf_2.c:412:23 size <integer_cst 0x7fdf662a4978 640> unit-size <integer_cst 0x7fdf662a4948 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9600 main> chain <var_decl 0x7fdf6703dea0 jobs>>
[40;36m ======= node_fun:child_process_clear========= [0m
[40;36m ======= find relate stmt with proc ========= [0m
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘child_process_clear’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:328:9: warning: use location
  328 |         argv_array_clear(&child->args);
      |         ^
_1 = &child_3(D)->args;
./benchmarks/git/use_after_free_2/git_uaf_2.c:328:9: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:329:9: warning: use location
  329 |         argv_array_clear(&child->env_array);
      |         ^
_2 = &child_3(D)->env_array;
./benchmarks/git/use_after_free_2/git_uaf_2.c:329:9: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;46m =======add node_fun stack:wait_or_whine========= [0m
[40;42m =======pre add _ fucntion:pp_output========= [0m
[40;46m =======add node_fun stack:pp_output========= [0m
[40;42m =======pre add _ fucntion:pp_buffer_stderr========= [0m
[40;46m =======add node_fun stack:pp_buffer_stderr========= [0m
[40;42m =======pre add _ fucntion:pp_start_one========= [0m
[40;46m =======add node_fun stack:pp_start_one========= [0m
[40;44m =======trace_function_path pp_start_one  function_call count: 5 level :1========  [0m
 <var_decl 0x7fdf6703df30 proc
    type <record_type 0x7fdf662bb738 child_process BLK
        size <integer_cst 0x7fdf662a4978 constant 640>
        unit-size <integer_cst 0x7fdf662a4948 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738
        fields <field_decl 0x7fdf662bd850 argv type <pointer_type 0x7fdf662bb5e8>
            unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:49:15
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7fdf66795be8 constant 0>
            bit-offset <integer_cst 0x7fdf66795c30 constant 0> context <record_type 0x7fdf662bb738 child_process> chain <field_decl 0x7fdf662bd7b8 args>> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662bb7e0>>
    addressable BLK ./benchmarks/git/use_after_free_2/git_uaf_2.c:412:23 size <integer_cst 0x7fdf662a4978 640> unit-size <integer_cst 0x7fdf662a4948 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9600 main> chain <var_decl 0x7fdf6703dea0 jobs>>
[40;36m ======= node_fun:pp_start_one========= [0m
[40;36m ======= find relate stmt with proc ========= [0m
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘pp_start_one’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:217:23: warning: use location
  217 |                 if (pp->children[i].state == GIT_CP_FREE)
      |                       ^
_1 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:217:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:217:33: warning: use location
  217 |                 if (pp->children[i].state == GIT_CP_FREE)
      |                                 ^
_4 = _1 + _3;
./benchmarks/git/use_after_free_2/git_uaf_2.c:217:33: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:222:18: warning: use location
  222 |         code = pp->get_next_task(&pp->children[i].process,
      |                  ^
_8 = pp_102(D)->get_next_task;
./benchmarks/git/use_after_free_2/git_uaf_2.c:222:18: warning: use location
_8

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:225:37: warning: use location
  225 |                                  &pp->children[i].data);
      |                                     ^
_9 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:225:37: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:225:47: warning: use location
  225 |                                  &pp->children[i].data);
      |                                               ^
_12 = _9 + _11;
./benchmarks/git/use_after_free_2/git_uaf_2.c:225:47: warning: use location
_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:222:16: warning: use location
  222 |         code = pp->get_next_task(&pp->children[i].process,
      |                ^
_13 = &_12->data;
./benchmarks/git/use_after_free_2/git_uaf_2.c:222:16: warning: use location
_13

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:222:16: warning: use location
_14 = pp_102(D)->data;
./benchmarks/git/use_after_free_2/git_uaf_2.c:222:16: warning: use location
_14

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:223:37: warning: use location
  223 |                                  &pp->children[i].err,
      |                                     ^
_15 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:223:37: warning: use location
_15

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:223:47: warning: use location
  223 |                                  &pp->children[i].err,
      |                                               ^
_18 = _15 + _17;
./benchmarks/git/use_after_free_2/git_uaf_2.c:223:47: warning: use location
_18

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:222:16: warning: use location
  222 |         code = pp->get_next_task(&pp->children[i].process,
      |                ^
_19 = &_18->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:222:16: warning: use location
_19

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:222:37: warning: use location
  222 |         code = pp->get_next_task(&pp->children[i].process,
      |                                     ^
_20 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:222:37: warning: use location
_20

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:222:47: warning: use location
  222 |         code = pp->get_next_task(&pp->children[i].process,
      |                                               ^
_23 = _20 + _22;
./benchmarks/git/use_after_free_2/git_uaf_2.c:222:47: warning: use location
_23

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:222:16: warning: use location
  222 |         code = pp->get_next_task(&pp->children[i].process,
      |                ^
_24 = &_23->process;
./benchmarks/git/use_after_free_2/git_uaf_2.c:222:16: warning: use location
_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:227:56: warning: use location
  227 |                 strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);
      |                                                        ^
_25 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:227:56: warning: use location
_25

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:227:66: warning: use location
  227 |                 strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);
      |                                                                  ^
_28 = _25 + _27;
./benchmarks/git/use_after_free_2/git_uaf_2.c:227:66: warning: use location
_28

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:227:17: warning: use location
  227 |                 strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);
      |                 ^
_29 = &_28->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:227:17: warning: use location
_29

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:227:17: warning: use location
_30 = &pp_102(D)->buffered_output;
./benchmarks/git/use_after_free_2/git_uaf_2.c:227:17: warning: use location
_30

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:228:33: warning: use location
  228 |                 strbuf_reset(&pp->children[i].err);
      |                                 ^
_31 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:228:33: warning: use location
_31

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:228:43: warning: use location
  228 |                 strbuf_reset(&pp->children[i].err);
      |                                           ^
_34 = _31 + _33;
./benchmarks/git/use_after_free_2/git_uaf_2.c:228:43: warning: use location
_34

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:228:17: warning: use location
  228 |                 strbuf_reset(&pp->children[i].err);
      |                 ^
_35 = &_34->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:228:17: warning: use location
_35

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:231:11: warning: use location
  231 |         pp->children[i].process.err = -1;
      |           ^
_36 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:231:11: warning: use location
_36

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:231:21: warning: use location
  231 |         pp->children[i].process.err = -1;
      |                     ^
_39 = _36 + _38;
./benchmarks/git/use_after_free_2/git_uaf_2.c:231:21: warning: use location
_39

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:232:11: warning: use location
  232 |         pp->children[i].process.stdout_to_stderr = 1;
      |           ^
_40 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:232:11: warning: use location
_40

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:232:21: warning: use location
  232 |         pp->children[i].process.stdout_to_stderr = 1;
      |                     ^
_43 = _40 + _42;
./benchmarks/git/use_after_free_2/git_uaf_2.c:232:21: warning: use location
_43

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:233:11: warning: use location
  233 |         pp->children[i].process.no_stdin = 1;
      |           ^
_44 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:233:11: warning: use location
_44

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:233:21: warning: use location
  233 |         pp->children[i].process.no_stdin = 1;
      |                     ^
_47 = _44 + _46;
./benchmarks/git/use_after_free_2/git_uaf_2.c:233:21: warning: use location
_47

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:235:30: warning: use location
  235 |         if (start_command(&pp->children[i].process)) {
      |                              ^
_48 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:235:30: warning: use location
_48

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:235:40: warning: use location
  235 |         if (start_command(&pp->children[i].process)) {
      |                                        ^
_51 = _48 + _50;
./benchmarks/git/use_after_free_2/git_uaf_2.c:235:40: warning: use location
_51

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:235:13: warning: use location
  235 |         if (start_command(&pp->children[i].process)) {
      |             ^
_52 = &_51->process;
./benchmarks/git/use_after_free_2/git_uaf_2.c:235:13: warning: use location
_52

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:236:26: warning: use location
  236 |                 code = pp->start_failure(&pp->children[i].process,
      |                          ^
_54 = pp_102(D)->start_failure;
./benchmarks/git/use_after_free_2/git_uaf_2.c:236:26: warning: use location
_54

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:239:45: warning: use location
  239 |                                          &pp->children[i].data);
      |                                             ^
_55 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:239:45: warning: use location
_55

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:239:55: warning: use location
  239 |                                          &pp->children[i].data);
      |                                                       ^
_58 = _55 + _57;
./benchmarks/git/use_after_free_2/git_uaf_2.c:239:55: warning: use location
_58

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:239:42: warning: use location
  239 |                                          &pp->children[i].data);
      |                                          ^
_59 = &_58->data;
./benchmarks/git/use_after_free_2/git_uaf_2.c:239:42: warning: use location
_59

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:236:24: warning: use location
  236 |                 code = pp->start_failure(&pp->children[i].process,
      |                        ^
_60 = pp_102(D)->data;
./benchmarks/git/use_after_free_2/git_uaf_2.c:236:24: warning: use location
_60

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:237:45: warning: use location
  237 |                                          &pp->children[i].err,
      |                                             ^
_61 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:237:45: warning: use location
_61

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:237:55: warning: use location
  237 |                                          &pp->children[i].err,
      |                                                       ^
_64 = _61 + _63;
./benchmarks/git/use_after_free_2/git_uaf_2.c:237:55: warning: use location
_64

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:236:24: warning: use location
  236 |                 code = pp->start_failure(&pp->children[i].process,
      |                        ^
_65 = &_64->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:236:24: warning: use location
_65

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:236:45: warning: use location
  236 |                 code = pp->start_failure(&pp->children[i].process,
      |                                             ^
_66 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:236:45: warning: use location
_66

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:236:55: warning: use location
  236 |                 code = pp->start_failure(&pp->children[i].process,
      |                                                       ^
_69 = _66 + _68;
./benchmarks/git/use_after_free_2/git_uaf_2.c:236:55: warning: use location
_69

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:236:24: warning: use location
  236 |                 code = pp->start_failure(&pp->children[i].process,
      |                        ^
_70 = &_69->process;
./benchmarks/git/use_after_free_2/git_uaf_2.c:236:24: warning: use location
_70

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:240:56: warning: use location
  240 |                 strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);
      |                                                        ^
_71 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:240:56: warning: use location
_71

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:240:66: warning: use location
  240 |                 strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);
      |                                                                  ^
_74 = _71 + _73;
./benchmarks/git/use_after_free_2/git_uaf_2.c:240:66: warning: use location
_74

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:240:17: warning: use location
  240 |                 strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);
      |                 ^
_75 = &_74->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:240:17: warning: use location
_75

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:240:17: warning: use location
_76 = &pp_102(D)->buffered_output;
./benchmarks/git/use_after_free_2/git_uaf_2.c:240:17: warning: use location
_76

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:241:33: warning: use location
  241 |                 strbuf_reset(&pp->children[i].err);
      |                                 ^
_77 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:241:33: warning: use location
_77

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:241:43: warning: use location
  241 |                 strbuf_reset(&pp->children[i].err);
      |                                           ^
_80 = _77 + _79;
./benchmarks/git/use_after_free_2/git_uaf_2.c:241:43: warning: use location
_80

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:241:17: warning: use location
  241 |                 strbuf_reset(&pp->children[i].err);
      |                 ^
_81 = &_80->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:241:17: warning: use location
_81

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:248:11: warning: use location
  248 |         pp->children[i].state = GIT_CP_WORKING;
      |           ^
_84 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:248:11: warning: use location
_84

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:248:21: warning: use location
  248 |         pp->children[i].state = GIT_CP_WORKING;
      |                     ^
_87 = _84 + _86;
./benchmarks/git/use_after_free_2/git_uaf_2.c:248:21: warning: use location
_87

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:249:27: warning: use location
  249 |         pp->pfd[i].fd = pp->children[i].process.err;
      |                           ^
_88 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:249:27: warning: use location
_88

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:249:37: warning: use location
  249 |         pp->pfd[i].fd = pp->children[i].process.err;
      |                                     ^
_91 = _88 + _90;
./benchmarks/git/use_after_free_2/git_uaf_2.c:249:37: warning: use location
_91

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:249:11: warning: use location
  249 |         pp->pfd[i].fd = pp->children[i].process.err;
      |           ^
_92 = pp_102(D)->pfd;
./benchmarks/git/use_after_free_2/git_uaf_2.c:249:11: warning: use location
_92

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:249:16: warning: use location
  249 |         pp->pfd[i].fd = pp->children[i].process.err;
      |                ^
_95 = _92 + _94;
./benchmarks/git/use_after_free_2/git_uaf_2.c:249:16: warning: use location
_95

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:start_command========= [0m
[40;46m =======add node_fun stack:start_command========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:pp_init========= [0m
[40;46m =======add node_fun stack:pp_init========= [0m
[40;44m =======trace_function_path pp_init  function_call count: 7 level :1========  [0m
 <var_decl 0x7fdf6703df30 proc
    type <record_type 0x7fdf662bb738 child_process BLK
        size <integer_cst 0x7fdf662a4978 constant 640>
        unit-size <integer_cst 0x7fdf662a4948 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738
        fields <field_decl 0x7fdf662bd850 argv type <pointer_type 0x7fdf662bb5e8>
            unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:49:15
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7fdf66795be8 constant 0>
            bit-offset <integer_cst 0x7fdf66795c30 constant 0> context <record_type 0x7fdf662bb738 child_process> chain <field_decl 0x7fdf662bd7b8 args>> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662bb7e0>>
    addressable BLK ./benchmarks/git/use_after_free_2/git_uaf_2.c:412:23 size <integer_cst 0x7fdf662a4978 640> unit-size <integer_cst 0x7fdf662a4948 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9600 main> chain <var_decl 0x7fdf6703dea0 jobs>>
[40;36m ======= node_fun:pp_init========= [0m
[40;36m ======= find relate stmt with proc ========= [0m
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: use location
  193 |         strbuf_init(&pp->buffered_output, 0);
      |         ^
_5 = &pp_34(D)->buffered_output;
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:32: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                ^
_6 = pp_34(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:32: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:42: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                          ^
_9 = _6 + _8;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:42: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                 ^
_10 = &_9->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:39: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                       ^
_11 = pp_34(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:39: warning: use location
_11

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:49: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                                 ^
_14 = _11 + _13;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:49: warning: use location
_14

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                 ^
_15 = &_14->process;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
_15

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:19: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                   ^
_16 = pp_34(D)->pfd;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:19: warning: use location
_16

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:24: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                        ^
_19 = _16 + _18;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:24: warning: use location
_19

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:19: warning: use location
  199 |                 pp->pfd[i].fd = -1;
      |                   ^
_20 = pp_34(D)->pfd;
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:19: warning: use location
_20

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:24: warning: use location
  199 |                 pp->pfd[i].fd = -1;
      |                        ^
_23 = _20 + _22;
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:24: warning: use location
_23

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;46m =======add node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;46m =======add node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;46m =======add node_fun stack:online_cpus========= [0m

 ================== trace ================== 
trace fucntion free:0 
exit (_22);
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:440:17: warning: use location
  440 |                 exit(run_processes_parallel(jobs, no_job,
      |                 ^
this stmt call this function :exit
trace fucntion name:exit 

 ================== trace ================== 
trace fucntion free:0 
_19 = run_processes_parallel (jobs_33, parallel_next, 0B, task_finished, &proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:436:17: warning: use location
  436 |                 exit(run_processes_parallel(jobs, parallel_next,
      |                 ^
this stmt call this function :run_processes_parallel
trace fucntion name:run_processes_parallel 
[40;44m =======trace_function_path run_processes_parallel  function_call count: 7 level :0========  [0m
 <var_decl 0x7fdf6703df30 proc
    type <record_type 0x7fdf662bb738 child_process BLK
        size <integer_cst 0x7fdf662a4978 constant 640>
        unit-size <integer_cst 0x7fdf662a4948 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738
        fields <field_decl 0x7fdf662bd850 argv type <pointer_type 0x7fdf662bb5e8>
            unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:49:15
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7fdf66795be8 constant 0>
            bit-offset <integer_cst 0x7fdf66795c30 constant 0> context <record_type 0x7fdf662bb738 child_process> chain <field_decl 0x7fdf662bd7b8 args>> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662bb7e0>>
    addressable BLK ./benchmarks/git/use_after_free_2/git_uaf_2.c:412:23 size <integer_cst 0x7fdf662a4978 640> unit-size <integer_cst 0x7fdf662a4948 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9600 main> chain <var_decl 0x7fdf6703dea0 jobs>>
[40;36m ======= node_fun:run_processes_parallel========= [0m
[40;36m ======= find relate stmt with proc ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:pp_cleanup========= [0m
[40;46m =======add node_fun stack:pp_cleanup========= [0m
[40;42m =======pre add _ fucntion:kill_children========= [0m
[40;46m =======add node_fun stack:kill_children========= [0m
[40;44m =======trace_function_path kill_children  function_call count: 1 level :1========  [0m
 <var_decl 0x7fdf6703df30 proc
    type <record_type 0x7fdf662bb738 child_process BLK
        size <integer_cst 0x7fdf662a4978 constant 640>
        unit-size <integer_cst 0x7fdf662a4948 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738
        fields <field_decl 0x7fdf662bd850 argv type <pointer_type 0x7fdf662bb5e8>
            unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:49:15
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7fdf66795be8 constant 0>
            bit-offset <integer_cst 0x7fdf66795c30 constant 0> context <record_type 0x7fdf662bb738 child_process> chain <field_decl 0x7fdf662bd7b8 args>> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662bb7e0>>
    addressable BLK ./benchmarks/git/use_after_free_2/git_uaf_2.c:412:23 size <integer_cst 0x7fdf662a4978 640> unit-size <integer_cst 0x7fdf662a4948 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9600 main> chain <var_decl 0x7fdf6703dea0 jobs>>
[40;36m ======= node_fun:kill_children========= [0m
[40;36m ======= find relate stmt with proc ========= [0m
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘kill_children’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:258:23: warning: use location
  258 |                 if (pp->children[i].state == GIT_CP_WORKING)
      |                       ^
_1 = pp_15(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:258:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:258:33: warning: use location
  258 |                 if (pp->children[i].state == GIT_CP_WORKING)
      |                                 ^
_4 = _1 + _3;
./benchmarks/git/use_after_free_2/git_uaf_2.c:258:33: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:259:32: warning: use location
  259 |                         kill(pp->children[i].process.pid, signo);
      |                                ^
_6 = pp_15(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:259:32: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:259:42: warning: use location
  259 |                         kill(pp->children[i].process.pid, signo);
      |                                          ^
_9 = _6 + _8;
./benchmarks/git/use_after_free_2/git_uaf_2.c:259:42: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:kill========= [0m
[40;46m =======add node_fun stack:kill========= [0m
[40;42m =======pre add _ fucntion:pp_collect_finished========= [0m
[40;46m =======add node_fun stack:pp_collect_finished========= [0m
[40;44m =======trace_function_path pp_collect_finished  function_call count: 5 level :1========  [0m
 <var_decl 0x7fdf6703df30 proc
    type <record_type 0x7fdf662bb738 child_process BLK
        size <integer_cst 0x7fdf662a4978 constant 640>
        unit-size <integer_cst 0x7fdf662a4948 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738
        fields <field_decl 0x7fdf662bd850 argv type <pointer_type 0x7fdf662bb5e8>
            unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:49:15
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7fdf66795be8 constant 0>
            bit-offset <integer_cst 0x7fdf66795c30 constant 0> context <record_type 0x7fdf662bb738 child_process> chain <field_decl 0x7fdf662bd7b8 args>> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662bb7e0>>
    addressable BLK ./benchmarks/git/use_after_free_2/git_uaf_2.c:412:23 size <integer_cst 0x7fdf662a4978 640> unit-size <integer_cst 0x7fdf662a4948 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9600 main> chain <var_decl 0x7fdf6703dea0 jobs>>
[40;36m ======= node_fun:pp_collect_finished========= [0m
[40;36m ======= find relate stmt with proc ========= [0m
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘pp_collect_finished’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:270:31: warning: use location
  270 |                         if (pp->children[i].state == GIT_CP_WAIT_CLEANUP)
      |                               ^
_1 = pp_91(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:270:31: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:270:41: warning: use location
  270 |                         if (pp->children[i].state == GIT_CP_WAIT_CLEANUP)
      |                                         ^
_4 = _1 + _3;
./benchmarks/git/use_after_free_2/git_uaf_2.c:270:41: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:275:42: warning: use location
  275 |                 code = finish_command(&pp->children[i].process);
      |                                          ^
_8 = pp_91(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:275:42: warning: use location
_8

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:275:52: warning: use location
  275 |                 code = finish_command(&pp->children[i].process);
      |                                                    ^
_11 = _8 + _10;
./benchmarks/git/use_after_free_2/git_uaf_2.c:275:52: warning: use location
_11

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:275:24: warning: use location
  275 |                 code = finish_command(&pp->children[i].process);
      |                        ^
_12 = &_11->process;
./benchmarks/git/use_after_free_2/git_uaf_2.c:275:24: warning: use location
_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:277:26: warning: use location
  277 |                 code = pp->task_finished(code, &pp->children[i].process,
      |                          ^
_13 = pp_91(D)->task_finished;
./benchmarks/git/use_after_free_2/git_uaf_2.c:277:26: warning: use location
_13

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:279:45: warning: use location
  279 |                                          &pp->children[i].data);
      |                                             ^
_14 = pp_91(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:279:45: warning: use location
_14

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:279:55: warning: use location
  279 |                                          &pp->children[i].data);
      |                                                       ^
_17 = _14 + _16;
./benchmarks/git/use_after_free_2/git_uaf_2.c:279:55: warning: use location
_17

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:279:42: warning: use location
  279 |                                          &pp->children[i].data);
      |                                          ^
_18 = &_17->data;
./benchmarks/git/use_after_free_2/git_uaf_2.c:279:42: warning: use location
_18

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:277:24: warning: use location
  277 |                 code = pp->task_finished(code, &pp->children[i].process,
      |                        ^
_19 = pp_91(D)->data;
./benchmarks/git/use_after_free_2/git_uaf_2.c:277:24: warning: use location
_19

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:278:45: warning: use location
  278 |                                          &pp->children[i].err, pp->data,
      |                                             ^
_20 = pp_91(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:278:45: warning: use location
_20

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:278:55: warning: use location
  278 |                                          &pp->children[i].err, pp->data,
      |                                                       ^
_23 = _20 + _22;
./benchmarks/git/use_after_free_2/git_uaf_2.c:278:55: warning: use location
_23

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:277:24: warning: use location
  277 |                 code = pp->task_finished(code, &pp->children[i].process,
      |                        ^
_24 = &_23->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:277:24: warning: use location
_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:277:51: warning: use location
  277 |                 code = pp->task_finished(code, &pp->children[i].process,
      |                                                   ^
_25 = pp_91(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:277:51: warning: use location
_25

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:277:61: warning: use location
  277 |                 code = pp->task_finished(code, &pp->children[i].process,
      |                                                             ^
_28 = _25 + _27;
./benchmarks/git/use_after_free_2/git_uaf_2.c:277:61: warning: use location
_28

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:277:24: warning: use location
  277 |                 code = pp->task_finished(code, &pp->children[i].process,
      |                        ^
_29 = &_28->process;
./benchmarks/git/use_after_free_2/git_uaf_2.c:277:24: warning: use location
_29

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:287:19: warning: use location
  287 |                 pp->children[i].state = GIT_CP_FREE;
      |                   ^
_32 = pp_91(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:287:19: warning: use location
_32

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:287:29: warning: use location
  287 |                 pp->children[i].state = GIT_CP_FREE;
      |                             ^
_35 = _32 + _34;
./benchmarks/git/use_after_free_2/git_uaf_2.c:287:29: warning: use location
_35

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:288:19: warning: use location
  288 |                 pp->pfd[i].fd = -1;
      |                   ^
_36 = pp_91(D)->pfd;
./benchmarks/git/use_after_free_2/git_uaf_2.c:288:19: warning: use location
_36

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:288:24: warning: use location
  288 |                 pp->pfd[i].fd = -1;
      |                        ^
_39 = _36 + _38;
./benchmarks/git/use_after_free_2/git_uaf_2.c:288:24: warning: use location
_39

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:289:39: warning: use location
  289 |                 child_process_init(&pp->children[i].process);
      |                                       ^
_40 = pp_91(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:289:39: warning: use location
_40

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:289:49: warning: use location
  289 |                 child_process_init(&pp->children[i].process);
      |                                                 ^
_43 = _40 + _42;
./benchmarks/git/use_after_free_2/git_uaf_2.c:289:49: warning: use location
_43

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:289:17: warning: use location
  289 |                 child_process_init(&pp->children[i].process);
      |                 ^
_44 = &_43->process;
./benchmarks/git/use_after_free_2/git_uaf_2.c:289:17: warning: use location
_44

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:292:64: warning: use location
  292 |                         strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);
      |                                                                ^
_46 = pp_91(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:292:64: warning: use location
_46

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:292:74: warning: use location
  292 |                         strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);
      |                                                                          ^
_49 = _46 + _48;
./benchmarks/git/use_after_free_2/git_uaf_2.c:292:74: warning: use location
_49

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:292:25: warning: use location
  292 |                         strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);
      |                         ^
_50 = &_49->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:292:25: warning: use location
_50

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:292:25: warning: use location
_51 = &pp_91(D)->buffered_output;
./benchmarks/git/use_after_free_2/git_uaf_2.c:292:25: warning: use location
_51

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:293:41: warning: use location
  293 |                         strbuf_reset(&pp->children[i].err);
      |                                         ^
_52 = pp_91(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:293:41: warning: use location
_52

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:293:51: warning: use location
  293 |                         strbuf_reset(&pp->children[i].err);
      |                                                   ^
_55 = _52 + _54;
./benchmarks/git/use_after_free_2/git_uaf_2.c:293:51: warning: use location
_55

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:293:25: warning: use location
  293 |                         strbuf_reset(&pp->children[i].err);
      |                         ^
_56 = &_55->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:293:25: warning: use location
_56

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:295:33: warning: use location
  295 |                         fputs(pp->children[i].err.buf, stderr);
      |                                 ^
_58 = pp_91(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:295:33: warning: use location
_58

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:295:43: warning: use location
  295 |                         fputs(pp->children[i].err.buf, stderr);
      |                                           ^
_61 = _58 + _60;
./benchmarks/git/use_after_free_2/git_uaf_2.c:295:43: warning: use location
_61

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:295:50: warning: use location
  295 |                         fputs(pp->children[i].err.buf, stderr);
      |                                                  ^
_62 = _61->err.buf;
./benchmarks/git/use_after_free_2/git_uaf_2.c:295:50: warning: use location
_62

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:296:41: warning: use location
  296 |                         strbuf_reset(&pp->children[i].err);
      |                                         ^
_63 = pp_91(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:296:41: warning: use location
_63

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:296:51: warning: use location
  296 |                         strbuf_reset(&pp->children[i].err);
      |                                                   ^
_66 = _63 + _65;
./benchmarks/git/use_after_free_2/git_uaf_2.c:296:51: warning: use location
_66

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:296:25: warning: use location
  296 |                         strbuf_reset(&pp->children[i].err);
      |                         ^
_67 = &_66->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:296:25: warning: use location
_67

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:299:50: warning: use location
  299 |                         fputs(pp->buffered_output.buf, stderr);
      |                                                  ^
_69 = pp_91(D)->buffered_output.buf;
./benchmarks/git/use_after_free_2/git_uaf_2.c:299:50: warning: use location
_69

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:300:25: warning: use location
  300 |                         strbuf_reset(&pp->buffered_output);
      |                         ^
_70 = &pp_91(D)->buffered_output;
./benchmarks/git/use_after_free_2/git_uaf_2.c:300:25: warning: use location
_70

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:311:39: warning: use location
  311 |                                 if (pp->children[(pp->output_owner + i) % n].state == GIT_CP_WORKING)
      |                                       ^
_71 = pp_91(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:311:39: warning: use location
_71

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:311:49: warning: use location
  311 |                                 if (pp->children[(pp->output_owner + i) % n].state == GIT_CP_WORKING)
      |                                                 ^
_77 = _71 + _76;
./benchmarks/git/use_after_free_2/git_uaf_2.c:311:49: warning: use location
_77

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:fputs========= [0m
[40;46m =======add node_fun stack:fputs========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:finish_command========= [0m
[40;46m =======add node_fun stack:finish_command========= [0m
[40;44m =======trace_function_path finish_command  function_call count: 2 level :2========  [0m
 <var_decl 0x7fdf6703df30 proc
    type <record_type 0x7fdf662bb738 child_process BLK
        size <integer_cst 0x7fdf662a4978 constant 640>
        unit-size <integer_cst 0x7fdf662a4948 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738
        fields <field_decl 0x7fdf662bd850 argv type <pointer_type 0x7fdf662bb5e8>
            unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:49:15
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7fdf66795be8 constant 0>
            bit-offset <integer_cst 0x7fdf66795c30 constant 0> context <record_type 0x7fdf662bb738 child_process> chain <field_decl 0x7fdf662bd7b8 args>> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662bb7e0>>
    addressable BLK ./benchmarks/git/use_after_free_2/git_uaf_2.c:412:23 size <integer_cst 0x7fdf662a4978 640> unit-size <integer_cst 0x7fdf662a4948 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9600 main> chain <var_decl 0x7fdf6703dea0 jobs>>
[40;36m ======= node_fun:finish_command========= [0m
[40;36m ======= find relate stmt with proc ========= [0m
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘finish_command’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:42: warning: use location
  321 |     int ret = wait_or_whine(cmd->pid, cmd->argv[0], 0);
      |                                          ^
_1 = cmd_5(D)->argv;
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:42: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:15: warning: use location
  321 |     int ret = wait_or_whine(cmd->pid, cmd->argv[0], 0);
      |               ^
_2 = *_1;
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:15: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_clear========= [0m
[40;46m =======add node_fun stack:child_process_clear========= [0m
[40;44m =======trace_function_path child_process_clear  function_call count: 1 level :3========  [0m
 <var_decl 0x7fdf6703df30 proc
    type <record_type 0x7fdf662bb738 child_process BLK
        size <integer_cst 0x7fdf662a4978 constant 640>
        unit-size <integer_cst 0x7fdf662a4948 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738
        fields <field_decl 0x7fdf662bd850 argv type <pointer_type 0x7fdf662bb5e8>
            unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:49:15
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7fdf66795be8 constant 0>
            bit-offset <integer_cst 0x7fdf66795c30 constant 0> context <record_type 0x7fdf662bb738 child_process> chain <field_decl 0x7fdf662bd7b8 args>> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662bb7e0>>
    addressable BLK ./benchmarks/git/use_after_free_2/git_uaf_2.c:412:23 size <integer_cst 0x7fdf662a4978 640> unit-size <integer_cst 0x7fdf662a4948 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9600 main> chain <var_decl 0x7fdf6703dea0 jobs>>
[40;36m ======= node_fun:child_process_clear========= [0m
[40;36m ======= find relate stmt with proc ========= [0m
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘child_process_clear’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:328:9: warning: use location
  328 |         argv_array_clear(&child->args);
      |         ^
_1 = &child_3(D)->args;
./benchmarks/git/use_after_free_2/git_uaf_2.c:328:9: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:329:9: warning: use location
  329 |         argv_array_clear(&child->env_array);
      |         ^
_2 = &child_3(D)->env_array;
./benchmarks/git/use_after_free_2/git_uaf_2.c:329:9: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;46m =======add node_fun stack:wait_or_whine========= [0m
[40;42m =======pre add _ fucntion:pp_output========= [0m
[40;46m =======add node_fun stack:pp_output========= [0m
[40;42m =======pre add _ fucntion:pp_buffer_stderr========= [0m
[40;46m =======add node_fun stack:pp_buffer_stderr========= [0m
[40;42m =======pre add _ fucntion:pp_start_one========= [0m
[40;46m =======add node_fun stack:pp_start_one========= [0m
[40;44m =======trace_function_path pp_start_one  function_call count: 5 level :1========  [0m
 <var_decl 0x7fdf6703df30 proc
    type <record_type 0x7fdf662bb738 child_process BLK
        size <integer_cst 0x7fdf662a4978 constant 640>
        unit-size <integer_cst 0x7fdf662a4948 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738
        fields <field_decl 0x7fdf662bd850 argv type <pointer_type 0x7fdf662bb5e8>
            unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:49:15
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7fdf66795be8 constant 0>
            bit-offset <integer_cst 0x7fdf66795c30 constant 0> context <record_type 0x7fdf662bb738 child_process> chain <field_decl 0x7fdf662bd7b8 args>> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662bb7e0>>
    addressable BLK ./benchmarks/git/use_after_free_2/git_uaf_2.c:412:23 size <integer_cst 0x7fdf662a4978 640> unit-size <integer_cst 0x7fdf662a4948 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9600 main> chain <var_decl 0x7fdf6703dea0 jobs>>
[40;36m ======= node_fun:pp_start_one========= [0m
[40;36m ======= find relate stmt with proc ========= [0m
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘pp_start_one’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:217:23: warning: use location
  217 |                 if (pp->children[i].state == GIT_CP_FREE)
      |                       ^
_1 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:217:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:217:33: warning: use location
  217 |                 if (pp->children[i].state == GIT_CP_FREE)
      |                                 ^
_4 = _1 + _3;
./benchmarks/git/use_after_free_2/git_uaf_2.c:217:33: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:222:18: warning: use location
  222 |         code = pp->get_next_task(&pp->children[i].process,
      |                  ^
_8 = pp_102(D)->get_next_task;
./benchmarks/git/use_after_free_2/git_uaf_2.c:222:18: warning: use location
_8

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:225:37: warning: use location
  225 |                                  &pp->children[i].data);
      |                                     ^
_9 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:225:37: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:225:47: warning: use location
  225 |                                  &pp->children[i].data);
      |                                               ^
_12 = _9 + _11;
./benchmarks/git/use_after_free_2/git_uaf_2.c:225:47: warning: use location
_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:222:16: warning: use location
  222 |         code = pp->get_next_task(&pp->children[i].process,
      |                ^
_13 = &_12->data;
./benchmarks/git/use_after_free_2/git_uaf_2.c:222:16: warning: use location
_13

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:222:16: warning: use location
_14 = pp_102(D)->data;
./benchmarks/git/use_after_free_2/git_uaf_2.c:222:16: warning: use location
_14

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:223:37: warning: use location
  223 |                                  &pp->children[i].err,
      |                                     ^
_15 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:223:37: warning: use location
_15

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:223:47: warning: use location
  223 |                                  &pp->children[i].err,
      |                                               ^
_18 = _15 + _17;
./benchmarks/git/use_after_free_2/git_uaf_2.c:223:47: warning: use location
_18

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:222:16: warning: use location
  222 |         code = pp->get_next_task(&pp->children[i].process,
      |                ^
_19 = &_18->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:222:16: warning: use location
_19

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:222:37: warning: use location
  222 |         code = pp->get_next_task(&pp->children[i].process,
      |                                     ^
_20 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:222:37: warning: use location
_20

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:222:47: warning: use location
  222 |         code = pp->get_next_task(&pp->children[i].process,
      |                                               ^
_23 = _20 + _22;
./benchmarks/git/use_after_free_2/git_uaf_2.c:222:47: warning: use location
_23

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:222:16: warning: use location
  222 |         code = pp->get_next_task(&pp->children[i].process,
      |                ^
_24 = &_23->process;
./benchmarks/git/use_after_free_2/git_uaf_2.c:222:16: warning: use location
_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:227:56: warning: use location
  227 |                 strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);
      |                                                        ^
_25 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:227:56: warning: use location
_25

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:227:66: warning: use location
  227 |                 strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);
      |                                                                  ^
_28 = _25 + _27;
./benchmarks/git/use_after_free_2/git_uaf_2.c:227:66: warning: use location
_28

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:227:17: warning: use location
  227 |                 strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);
      |                 ^
_29 = &_28->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:227:17: warning: use location
_29

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:227:17: warning: use location
_30 = &pp_102(D)->buffered_output;
./benchmarks/git/use_after_free_2/git_uaf_2.c:227:17: warning: use location
_30

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:228:33: warning: use location
  228 |                 strbuf_reset(&pp->children[i].err);
      |                                 ^
_31 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:228:33: warning: use location
_31

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:228:43: warning: use location
  228 |                 strbuf_reset(&pp->children[i].err);
      |                                           ^
_34 = _31 + _33;
./benchmarks/git/use_after_free_2/git_uaf_2.c:228:43: warning: use location
_34

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:228:17: warning: use location
  228 |                 strbuf_reset(&pp->children[i].err);
      |                 ^
_35 = &_34->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:228:17: warning: use location
_35

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:231:11: warning: use location
  231 |         pp->children[i].process.err = -1;
      |           ^
_36 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:231:11: warning: use location
_36

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:231:21: warning: use location
  231 |         pp->children[i].process.err = -1;
      |                     ^
_39 = _36 + _38;
./benchmarks/git/use_after_free_2/git_uaf_2.c:231:21: warning: use location
_39

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:232:11: warning: use location
  232 |         pp->children[i].process.stdout_to_stderr = 1;
      |           ^
_40 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:232:11: warning: use location
_40

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:232:21: warning: use location
  232 |         pp->children[i].process.stdout_to_stderr = 1;
      |                     ^
_43 = _40 + _42;
./benchmarks/git/use_after_free_2/git_uaf_2.c:232:21: warning: use location
_43

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:233:11: warning: use location
  233 |         pp->children[i].process.no_stdin = 1;
      |           ^
_44 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:233:11: warning: use location
_44

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:233:21: warning: use location
  233 |         pp->children[i].process.no_stdin = 1;
      |                     ^
_47 = _44 + _46;
./benchmarks/git/use_after_free_2/git_uaf_2.c:233:21: warning: use location
_47

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:235:30: warning: use location
  235 |         if (start_command(&pp->children[i].process)) {
      |                              ^
_48 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:235:30: warning: use location
_48

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:235:40: warning: use location
  235 |         if (start_command(&pp->children[i].process)) {
      |                                        ^
_51 = _48 + _50;
./benchmarks/git/use_after_free_2/git_uaf_2.c:235:40: warning: use location
_51

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:235:13: warning: use location
  235 |         if (start_command(&pp->children[i].process)) {
      |             ^
_52 = &_51->process;
./benchmarks/git/use_after_free_2/git_uaf_2.c:235:13: warning: use location
_52

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:236:26: warning: use location
  236 |                 code = pp->start_failure(&pp->children[i].process,
      |                          ^
_54 = pp_102(D)->start_failure;
./benchmarks/git/use_after_free_2/git_uaf_2.c:236:26: warning: use location
_54

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:239:45: warning: use location
  239 |                                          &pp->children[i].data);
      |                                             ^
_55 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:239:45: warning: use location
_55

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:239:55: warning: use location
  239 |                                          &pp->children[i].data);
      |                                                       ^
_58 = _55 + _57;
./benchmarks/git/use_after_free_2/git_uaf_2.c:239:55: warning: use location
_58

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:239:42: warning: use location
  239 |                                          &pp->children[i].data);
      |                                          ^
_59 = &_58->data;
./benchmarks/git/use_after_free_2/git_uaf_2.c:239:42: warning: use location
_59

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:236:24: warning: use location
  236 |                 code = pp->start_failure(&pp->children[i].process,
      |                        ^
_60 = pp_102(D)->data;
./benchmarks/git/use_after_free_2/git_uaf_2.c:236:24: warning: use location
_60

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:237:45: warning: use location
  237 |                                          &pp->children[i].err,
      |                                             ^
_61 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:237:45: warning: use location
_61

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:237:55: warning: use location
  237 |                                          &pp->children[i].err,
      |                                                       ^
_64 = _61 + _63;
./benchmarks/git/use_after_free_2/git_uaf_2.c:237:55: warning: use location
_64

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:236:24: warning: use location
  236 |                 code = pp->start_failure(&pp->children[i].process,
      |                        ^
_65 = &_64->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:236:24: warning: use location
_65

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:236:45: warning: use location
  236 |                 code = pp->start_failure(&pp->children[i].process,
      |                                             ^
_66 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:236:45: warning: use location
_66

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:236:55: warning: use location
  236 |                 code = pp->start_failure(&pp->children[i].process,
      |                                                       ^
_69 = _66 + _68;
./benchmarks/git/use_after_free_2/git_uaf_2.c:236:55: warning: use location
_69

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:236:24: warning: use location
  236 |                 code = pp->start_failure(&pp->children[i].process,
      |                        ^
_70 = &_69->process;
./benchmarks/git/use_after_free_2/git_uaf_2.c:236:24: warning: use location
_70

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:240:56: warning: use location
  240 |                 strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);
      |                                                        ^
_71 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:240:56: warning: use location
_71

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:240:66: warning: use location
  240 |                 strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);
      |                                                                  ^
_74 = _71 + _73;
./benchmarks/git/use_after_free_2/git_uaf_2.c:240:66: warning: use location
_74

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:240:17: warning: use location
  240 |                 strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);
      |                 ^
_75 = &_74->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:240:17: warning: use location
_75

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:240:17: warning: use location
_76 = &pp_102(D)->buffered_output;
./benchmarks/git/use_after_free_2/git_uaf_2.c:240:17: warning: use location
_76

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:241:33: warning: use location
  241 |                 strbuf_reset(&pp->children[i].err);
      |                                 ^
_77 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:241:33: warning: use location
_77

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:241:43: warning: use location
  241 |                 strbuf_reset(&pp->children[i].err);
      |                                           ^
_80 = _77 + _79;
./benchmarks/git/use_after_free_2/git_uaf_2.c:241:43: warning: use location
_80

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:241:17: warning: use location
  241 |                 strbuf_reset(&pp->children[i].err);
      |                 ^
_81 = &_80->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:241:17: warning: use location
_81

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:248:11: warning: use location
  248 |         pp->children[i].state = GIT_CP_WORKING;
      |           ^
_84 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:248:11: warning: use location
_84

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:248:21: warning: use location
  248 |         pp->children[i].state = GIT_CP_WORKING;
      |                     ^
_87 = _84 + _86;
./benchmarks/git/use_after_free_2/git_uaf_2.c:248:21: warning: use location
_87

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:249:27: warning: use location
  249 |         pp->pfd[i].fd = pp->children[i].process.err;
      |                           ^
_88 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:249:27: warning: use location
_88

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:249:37: warning: use location
  249 |         pp->pfd[i].fd = pp->children[i].process.err;
      |                                     ^
_91 = _88 + _90;
./benchmarks/git/use_after_free_2/git_uaf_2.c:249:37: warning: use location
_91

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:249:11: warning: use location
  249 |         pp->pfd[i].fd = pp->children[i].process.err;
      |           ^
_92 = pp_102(D)->pfd;
./benchmarks/git/use_after_free_2/git_uaf_2.c:249:11: warning: use location
_92

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:249:16: warning: use location
  249 |         pp->pfd[i].fd = pp->children[i].process.err;
      |                ^
_95 = _92 + _94;
./benchmarks/git/use_after_free_2/git_uaf_2.c:249:16: warning: use location
_95

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:start_command========= [0m
[40;46m =======add node_fun stack:start_command========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:pp_init========= [0m
[40;46m =======add node_fun stack:pp_init========= [0m
[40;44m =======trace_function_path pp_init  function_call count: 7 level :1========  [0m
 <var_decl 0x7fdf6703df30 proc
    type <record_type 0x7fdf662bb738 child_process BLK
        size <integer_cst 0x7fdf662a4978 constant 640>
        unit-size <integer_cst 0x7fdf662a4948 constant 80>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738
        fields <field_decl 0x7fdf662bd850 argv type <pointer_type 0x7fdf662bb5e8>
            unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:49:15
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7fdf66795be8 constant 0>
            bit-offset <integer_cst 0x7fdf66795c30 constant 0> context <record_type 0x7fdf662bb738 child_process> chain <field_decl 0x7fdf662bd7b8 args>> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662bb7e0>>
    addressable BLK ./benchmarks/git/use_after_free_2/git_uaf_2.c:412:23 size <integer_cst 0x7fdf662a4978 640> unit-size <integer_cst 0x7fdf662a4948 80>
    align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9600 main> chain <var_decl 0x7fdf6703dea0 jobs>>
[40;36m ======= node_fun:pp_init========= [0m
[40;36m ======= find relate stmt with proc ========= [0m
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: use location
  193 |         strbuf_init(&pp->buffered_output, 0);
      |         ^
_5 = &pp_34(D)->buffered_output;
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:32: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                ^
_6 = pp_34(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:32: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:42: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                          ^
_9 = _6 + _8;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:42: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                 ^
_10 = &_9->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:39: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                       ^
_11 = pp_34(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:39: warning: use location
_11

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:49: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                                 ^
_14 = _11 + _13;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:49: warning: use location
_14

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                 ^
_15 = &_14->process;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
_15

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:19: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                   ^
_16 = pp_34(D)->pfd;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:19: warning: use location
_16

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:24: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                        ^
_19 = _16 + _18;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:24: warning: use location
_19

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:19: warning: use location
  199 |                 pp->pfd[i].fd = -1;
      |                   ^
_20 = pp_34(D)->pfd;
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:19: warning: use location
_20

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:proc========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:24: warning: use location
  199 |                 pp->pfd[i].fd = -1;
      |                        ^
_23 = _20 + _22;
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:24: warning: use location
_23

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;46m =======add node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;46m =======add node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;46m =======add node_fun stack:online_cpus========= [0m

 ================== trace ================== 
trace fucntion free:0 
exit (_19);
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:436:17: warning: use location
  436 |                 exit(run_processes_parallel(jobs, parallel_next,
      |                 ^
this stmt call this function :exit
trace fucntion name:exit 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf6679d6c0
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _4 = start_command (&proc);
    version:4>
 <ssa_name 0x7fdf6679d6c0
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _4 = start_command (&proc);
    version:4>

 ================== pre trace ptable ================== 
trace fucntion name:start_command 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf6679d6c0
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _4 = start_command (&proc);
    version:4>
is Other function start_command
 
 Start check Pointer Collect  

======================================================================
_11 = run_command (&proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:426:17: warning: use location
  426 |                 exit(run_command(&proc));
      |                 ^
this stmt call this function :run_command
trace fucntion name:run_command 

 ================== trace ================== 
trace fucntion free:0 
proc.argv = _13;
./benchmarks/git/use_after_free_2/git_uaf_2.c:429:19: warning: use location
  429 |         proc.argv = (const char **)argv + 3;
      |                   ^
_16 = run_processes_parallel (jobs_33, parallel_next, 0B, 0B, &proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:432:17: warning: use location
  432 |                 exit(run_processes_parallel(jobs, parallel_next,
      |                 ^
this stmt call this function :run_processes_parallel
trace fucntion name:run_processes_parallel 
[40;44m =======trace_function_path run_processes_parallel  function_call count: 7 level :0========  [0m
 <ssa_name 0x7fdf6679d6c0
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _4 = start_command (&proc);
    version:4>
[40;36m ======= node_fun:run_processes_parallel========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:pp_cleanup========= [0m
[40;46m =======add node_fun stack:pp_cleanup========= [0m
[40;42m =======pre add _ fucntion:kill_children========= [0m
[40;46m =======add node_fun stack:kill_children========= [0m
[40;44m =======trace_function_path kill_children  function_call count: 1 level :1========  [0m
 <ssa_name 0x7fdf6679d6c0
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _4 = start_command (&proc);
    version:4>
[40;36m ======= node_fun:kill_children========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:kill========= [0m
[40;46m =======add node_fun stack:kill========= [0m
[40;42m =======pre add _ fucntion:pp_collect_finished========= [0m
[40;46m =======add node_fun stack:pp_collect_finished========= [0m
[40;44m =======trace_function_path pp_collect_finished  function_call count: 5 level :1========  [0m
 <ssa_name 0x7fdf6679d6c0
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _4 = start_command (&proc);
    version:4>
[40;36m ======= node_fun:pp_collect_finished========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:fputs========= [0m
[40;46m =======add node_fun stack:fputs========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:finish_command========= [0m
[40;46m =======add node_fun stack:finish_command========= [0m
[40;44m =======trace_function_path finish_command  function_call count: 2 level :2========  [0m
 <ssa_name 0x7fdf6679d6c0
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _4 = start_command (&proc);
    version:4>
[40;36m ======= node_fun:finish_command========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_clear========= [0m
[40;46m =======add node_fun stack:child_process_clear========= [0m
[40;44m =======trace_function_path child_process_clear  function_call count: 1 level :3========  [0m
 <ssa_name 0x7fdf6679d6c0
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _4 = start_command (&proc);
    version:4>
[40;36m ======= node_fun:child_process_clear========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;46m =======add node_fun stack:wait_or_whine========= [0m
[40;42m =======pre add _ fucntion:pp_output========= [0m
[40;46m =======add node_fun stack:pp_output========= [0m
[40;42m =======pre add _ fucntion:pp_buffer_stderr========= [0m
[40;46m =======add node_fun stack:pp_buffer_stderr========= [0m
[40;42m =======pre add _ fucntion:pp_start_one========= [0m
[40;46m =======add node_fun stack:pp_start_one========= [0m
[40;44m =======trace_function_path pp_start_one  function_call count: 5 level :1========  [0m
 <ssa_name 0x7fdf6679d6c0
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _4 = start_command (&proc);
    version:4>
[40;36m ======= node_fun:pp_start_one========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:start_command========= [0m
[40;46m =======add node_fun stack:start_command========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:pp_init========= [0m
[40;46m =======add node_fun stack:pp_init========= [0m
[40;44m =======trace_function_path pp_init  function_call count: 7 level :1========  [0m
 <ssa_name 0x7fdf6679d6c0
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _4 = start_command (&proc);
    version:4>
[40;36m ======= node_fun:pp_init========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;46m =======add node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;46m =======add node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;46m =======add node_fun stack:online_cpus========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_50 = VDEF <.MEM_39>
_4 = start_command (&proc);
_4 = start_command (&proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:420:21: warning: use location
  420 |                 if (start_command(&proc) < 0 && errno == ENOENT)
      |                     ^
this stmt call this function :start_command
trace fucntion name:start_command 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf6679d6c0
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _4 = start_command (&proc);
    version:4>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf6679d708
    type <pointer_type 0x7fdf667b19d8
        type <integer_type 0x7fdf667aa5e8 int public SI
            size <integer_cst 0x7fdf66795df8 constant 32>
            unit-size <integer_cst 0x7fdf66795e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
            pointer_to_this <pointer_type 0x7fdf667b19d8>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = __errno_location ();
    version:5
    ptr-info 0x7fdf662c9e88>
 <ssa_name 0x7fdf6679d708
    type <pointer_type 0x7fdf667b19d8
        type <integer_type 0x7fdf667aa5e8 int public SI
            size <integer_cst 0x7fdf66795df8 constant 32>
            unit-size <integer_cst 0x7fdf66795e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
            pointer_to_this <pointer_type 0x7fdf667b19d8>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = __errno_location ();
    version:5
    ptr-info 0x7fdf662c9e88>

 ================== pre trace ptable ================== 
trace fucntion name:__errno_location 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf6679d708
    type <pointer_type 0x7fdf667b19d8
        type <integer_type 0x7fdf667aa5e8 int public SI
            size <integer_cst 0x7fdf66795df8 constant 32>
            unit-size <integer_cst 0x7fdf66795e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
            pointer_to_this <pointer_type 0x7fdf667b19d8>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = __errno_location ();
    version:5
    ptr-info 0x7fdf662c9e88>
is Other function __errno_location
 
 Start check Pointer Collect  

======================================================================
_6 = *_5;
./benchmarks/git/use_after_free_2/git_uaf_2.c:420:49: warning: use location
  420 |                 if (start_command(&proc) < 0 && errno == ENOENT)
      |                                                 ^
if (_6 == 2)
./benchmarks/git/use_after_free_2/git_uaf_2.c:420:46: warning: use location
  420 |                 if (start_command(&proc) < 0 && errno == ENOENT)
      |                                              ^
_5 = __errno_location ();
_5 = __errno_location ();
./benchmarks/git/use_after_free_2/git_uaf_2.c:420:49: warning: use location
  420 |                 if (start_command(&proc) < 0 && errno == ENOENT)
      |                                                 ^
this stmt call this function :__errno_location
trace fucntion name:__errno_location 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf6679d708
    type <pointer_type 0x7fdf667b19d8
        type <integer_type 0x7fdf667aa5e8 int public SI
            size <integer_cst 0x7fdf66795df8 constant 32>
            unit-size <integer_cst 0x7fdf66795e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
            pointer_to_this <pointer_type 0x7fdf667b19d8>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = __errno_location ();
    version:5
    ptr-info 0x7fdf662c9e88>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf6679d7e0
    type <pointer_type 0x7fdf662b63f0
        type <record_type 0x7fdf662b6348 FILE BLK
            size <integer_cst 0x7fdf662a4840 constant 1728>
            unit-size <integer_cst 0x7fdf662a4960 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b62a0 fields <field_decl 0x7fdf662b8b48 _flags> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662b63f0>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fdf662bee70>>
   
    def_stmt _8 = stderr;
    version:8
    ptr-info 0x7fdf662c9eb8>
 <ssa_name 0x7fdf6679d7e0
    type <pointer_type 0x7fdf662b63f0
        type <record_type 0x7fdf662b6348 FILE BLK
            size <integer_cst 0x7fdf662a4840 constant 1728>
            unit-size <integer_cst 0x7fdf662a4960 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b62a0 fields <field_decl 0x7fdf662b8b48 _flags> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662b63f0>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fdf662bee70>>
   
    def_stmt _8 = stderr;
    version:8
    ptr-info 0x7fdf662c9eb8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf6679d7e0
    type <pointer_type 0x7fdf662b63f0
        type <record_type 0x7fdf662b6348 FILE BLK
            size <integer_cst 0x7fdf662a4840 constant 1728>
            unit-size <integer_cst 0x7fdf662a4960 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b62a0 fields <field_decl 0x7fdf662b8b48 _flags> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662b63f0>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fdf662bee70>>
   
    def_stmt _8 = stderr;
    version:8
    ptr-info 0x7fdf662c9eb8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_51 = VDEF <.MEM_50>
fprintf (_8, "FAIL %s\n", _7);
fprintf (_8, "FAIL %s\n", _7);
./benchmarks/git/use_after_free_2/git_uaf_2.c:422:17: warning: use location
  422 |                 fprintf(stderr, "FAIL %s\n", argv[1]);
      |                 ^
this stmt call this function :fprintf
trace fucntion name:fprintf 

 ================== trace ================== 
trace fucntion free:0 
_8 = stderr;
./benchmarks/git/use_after_free_2/git_uaf_2.c:422:17: warning: use location
_23 = stderr;
./benchmarks/git/use_after_free_2/git_uaf_2.c:443:9: warning: use location
  443 |         fprintf(stderr, "check usage\n");
      |         ^
__builtin_fwrite ("check usage\n", 1, 12, _23);
./benchmarks/git/use_after_free_2/git_uaf_2.c:443:9: warning: use location
this stmt call this function :__builtin_fwrite
trace fucntion name:__builtin_fwrite 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_57 = stderr;
./benchmarks/git/use_after_free_2/git_uaf_2.c:295:25: warning: use location
  295 |                         fputs(pp->children[i].err.buf, stderr);
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
fputs (_62, _57);
./benchmarks/git/use_after_free_2/git_uaf_2.c:295:25: warning: use location
this stmt call this function :fputs
trace fucntion name:fputs 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = stderr;
./benchmarks/git/use_after_free_2/git_uaf_2.c:299:25: warning: use location
  299 |                         fputs(pp->buffered_output.buf, stderr);
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
fputs (_69, _68);
./benchmarks/git/use_after_free_2/git_uaf_2.c:299:25: warning: use location
this stmt call this function :fputs
trace fucntion name:fputs 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf6679d7e0
    type <pointer_type 0x7fdf662b63f0
        type <record_type 0x7fdf662b6348 FILE BLK
            size <integer_cst 0x7fdf662a4840 constant 1728>
            unit-size <integer_cst 0x7fdf662a4960 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b62a0 fields <field_decl 0x7fdf662b8b48 _flags> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662b63f0>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fdf662bee70>>
   
    def_stmt _8 = stderr;
    version:8
    ptr-info 0x7fdf662c9eb8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <string_cst 0x7fdf66991c60
    type <array_type 0x7fdf662bfbd0
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        BLK
        size <integer_cst 0x7fdf662a4d98 constant 72>
        unit-size <integer_cst 0x7fdf662a4d80 constant 9>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7fdf662bfb28 type <integer_type 0x7fdf667aa000 sizetype>
            DI
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa738 precision:64 min <integer_cst 0x7fdf66795be8 0> max <integer_cst 0x7fdf66795bd0 8>>
        pointer_to_this <pointer_type 0x7fdf662bfc78>>
    readonly constant static "FAIL %s\012\000">

dot graph START

======================================================================
 <ssa_name 0x7fdf6679d798
    type <pointer_type 0x7fdf662b4000
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662b6690>>
   
    def_stmt _7 = MEM[(char * *)argv_31(D) + 8B];
    version:7
    ptr-info 0x7fdf662c9ea0>
 <ssa_name 0x7fdf6679d798
    type <pointer_type 0x7fdf662b4000
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662b6690>>
   
    def_stmt _7 = MEM[(char * *)argv_31(D) + 8B];
    version:7
    ptr-info 0x7fdf662c9ea0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf6679d798
    type <pointer_type 0x7fdf662b4000
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662b6690>>
   
    def_stmt _7 = MEM[(char * *)argv_31(D) + 8B];
    version:7
    ptr-info 0x7fdf662c9ea0>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_51 = VDEF <.MEM_50>
fprintf (_8, "FAIL %s\n", _7);
fprintf (_8, "FAIL %s\n", _7);
./benchmarks/git/use_after_free_2/git_uaf_2.c:422:17: warning: use location
  422 |                 fprintf(stderr, "FAIL %s\n", argv[1]);
      |                 ^
this stmt call this function :fprintf
trace fucntion name:fprintf 

 ================== trace ================== 
trace fucntion free:0 
_8 = stderr;
./benchmarks/git/use_after_free_2/git_uaf_2.c:422:17: warning: use location
_23 = stderr;
./benchmarks/git/use_after_free_2/git_uaf_2.c:443:9: warning: use location
  443 |         fprintf(stderr, "check usage\n");
      |         ^
__builtin_fwrite ("check usage\n", 1, 12, _23);
./benchmarks/git/use_after_free_2/git_uaf_2.c:443:9: warning: use location
this stmt call this function :__builtin_fwrite
trace fucntion name:__builtin_fwrite 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_57 = stderr;
./benchmarks/git/use_after_free_2/git_uaf_2.c:295:25: warning: use location
  295 |                         fputs(pp->children[i].err.buf, stderr);
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
fputs (_62, _57);
./benchmarks/git/use_after_free_2/git_uaf_2.c:295:25: warning: use location
this stmt call this function :fputs
trace fucntion name:fputs 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = stderr;
./benchmarks/git/use_after_free_2/git_uaf_2.c:299:25: warning: use location
  299 |                         fputs(pp->buffered_output.buf, stderr);
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
fputs (_69, _68);
./benchmarks/git/use_after_free_2/git_uaf_2.c:299:25: warning: use location
this stmt call this function :fputs
trace fucntion name:fputs 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf6679d798
    type <pointer_type 0x7fdf662b4000
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662b6690>>
   
    def_stmt _7 = MEM[(char * *)argv_31(D) + 8B];
    version:7
    ptr-info 0x7fdf662c9ea0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf6679d828
    type <pointer_type 0x7fdf662b4000
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662b6690>>
   
    def_stmt _9 = MEM[(char * *)argv_31(D) + 8B];
    version:9
    ptr-info 0x7fdf662c9ed0>
 <ssa_name 0x7fdf6679d828
    type <pointer_type 0x7fdf662b4000
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662b6690>>
   
    def_stmt _9 = MEM[(char * *)argv_31(D) + 8B];
    version:9
    ptr-info 0x7fdf662c9ed0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf6679d828
    type <pointer_type 0x7fdf662b4000
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662b6690>>
   
    def_stmt _9 = MEM[(char * *)argv_31(D) + 8B];
    version:9
    ptr-info 0x7fdf662c9ed0>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_39>
_10 = strcmp (_9, "run-command");
_10 = strcmp (_9, "run-command");
./benchmarks/git/use_after_free_2/git_uaf_2.c:425:14: warning: use location
  425 |         if (!strcmp(argv[1], "run-command"))
      |              ^
this stmt call this function :strcmp
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:0 
if (_10 == 0)
./benchmarks/git/use_after_free_2/git_uaf_2.c:425:12: warning: use location
  425 |         if (!strcmp(argv[1], "run-command"))
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf6679d828
    type <pointer_type 0x7fdf662b4000
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662b6690>>
   
    def_stmt _9 = MEM[(char * *)argv_31(D) + 8B];
    version:9
    ptr-info 0x7fdf662c9ed0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <string_cst 0x7fdf662cf9b0
    type <array_type 0x7fdf662bfdc8
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        BLK
        size <integer_cst 0x7fdf662a47c8 constant 96>
        unit-size <integer_cst 0x7fdf662a4dc8 constant 12>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7fdf662bfd20 type <integer_type 0x7fdf667aa000 sizetype>
            DI
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa738 precision:64 min <integer_cst 0x7fdf66795be8 0> max <integer_cst 0x7fdf662a4db0 11>>
        pointer_to_this <pointer_type 0x7fdf662bfe70>>
    readonly constant static "run-command\000">

dot graph START

======================================================================
 <ssa_name 0x7fdf6679d870
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _10 = strcmp (_9, "run-command");
    version:10>
 <ssa_name 0x7fdf6679d870
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _10 = strcmp (_9, "run-command");
    version:10>

 ================== pre trace ptable ================== 
trace fucntion name:strcmp 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf6679d870
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _10 = strcmp (_9, "run-command");
    version:10>
is Other function strcmp
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_39>
_10 = strcmp (_9, "run-command");
_10 = strcmp (_9, "run-command");
./benchmarks/git/use_after_free_2/git_uaf_2.c:425:14: warning: use location
  425 |         if (!strcmp(argv[1], "run-command"))
      |              ^
this stmt call this function :strcmp
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:0 
if (_10 == 0)
./benchmarks/git/use_after_free_2/git_uaf_2.c:425:12: warning: use location
  425 |         if (!strcmp(argv[1], "run-command"))
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf6679d870
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _10 = strcmp (_9, "run-command");
    version:10>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf6679d8b8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _11 = run_command (&proc);
    version:11>
 <ssa_name 0x7fdf6679d8b8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _11 = run_command (&proc);
    version:11>

 ================== pre trace ptable ================== 
trace fucntion name:run_command 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf6679d8b8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _11 = run_command (&proc);
    version:11>
is Other function run_command
 
 Start check Pointer Collect  

======================================================================
# .MEM_48 = VDEF <.MEM_39>
_11 = run_command (&proc);
_11 = run_command (&proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:426:17: warning: use location
  426 |                 exit(run_command(&proc));
      |                 ^
this stmt call this function :run_command
trace fucntion name:run_command 

 ================== trace ================== 
trace fucntion free:0 
proc.argv = _13;
./benchmarks/git/use_after_free_2/git_uaf_2.c:429:19: warning: use location
  429 |         proc.argv = (const char **)argv + 3;
      |                   ^
_16 = run_processes_parallel (jobs_33, parallel_next, 0B, 0B, &proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:432:17: warning: use location
  432 |                 exit(run_processes_parallel(jobs, parallel_next,
      |                 ^
this stmt call this function :run_processes_parallel
trace fucntion name:run_processes_parallel 
[40;44m =======trace_function_path run_processes_parallel  function_call count: 7 level :0========  [0m
 <ssa_name 0x7fdf6679d8b8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _11 = run_command (&proc);
    version:11>
[40;36m ======= node_fun:run_processes_parallel========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:pp_cleanup========= [0m
[40;46m =======add node_fun stack:pp_cleanup========= [0m
[40;42m =======pre add _ fucntion:kill_children========= [0m
[40;46m =======add node_fun stack:kill_children========= [0m
[40;44m =======trace_function_path kill_children  function_call count: 1 level :1========  [0m
 <ssa_name 0x7fdf6679d8b8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _11 = run_command (&proc);
    version:11>
[40;36m ======= node_fun:kill_children========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:kill========= [0m
[40;46m =======add node_fun stack:kill========= [0m
[40;42m =======pre add _ fucntion:pp_collect_finished========= [0m
[40;46m =======add node_fun stack:pp_collect_finished========= [0m
[40;44m =======trace_function_path pp_collect_finished  function_call count: 5 level :1========  [0m
 <ssa_name 0x7fdf6679d8b8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _11 = run_command (&proc);
    version:11>
[40;36m ======= node_fun:pp_collect_finished========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:fputs========= [0m
[40;46m =======add node_fun stack:fputs========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:finish_command========= [0m
[40;46m =======add node_fun stack:finish_command========= [0m
[40;44m =======trace_function_path finish_command  function_call count: 2 level :2========  [0m
 <ssa_name 0x7fdf6679d8b8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _11 = run_command (&proc);
    version:11>
[40;36m ======= node_fun:finish_command========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_clear========= [0m
[40;46m =======add node_fun stack:child_process_clear========= [0m
[40;44m =======trace_function_path child_process_clear  function_call count: 1 level :3========  [0m
 <ssa_name 0x7fdf6679d8b8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _11 = run_command (&proc);
    version:11>
[40;36m ======= node_fun:child_process_clear========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;46m =======add node_fun stack:wait_or_whine========= [0m
[40;42m =======pre add _ fucntion:pp_output========= [0m
[40;46m =======add node_fun stack:pp_output========= [0m
[40;42m =======pre add _ fucntion:pp_buffer_stderr========= [0m
[40;46m =======add node_fun stack:pp_buffer_stderr========= [0m
[40;42m =======pre add _ fucntion:pp_start_one========= [0m
[40;46m =======add node_fun stack:pp_start_one========= [0m
[40;44m =======trace_function_path pp_start_one  function_call count: 5 level :1========  [0m
 <ssa_name 0x7fdf6679d8b8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _11 = run_command (&proc);
    version:11>
[40;36m ======= node_fun:pp_start_one========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:start_command========= [0m
[40;46m =======add node_fun stack:start_command========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:pp_init========= [0m
[40;46m =======add node_fun stack:pp_init========= [0m
[40;44m =======trace_function_path pp_init  function_call count: 7 level :1========  [0m
 <ssa_name 0x7fdf6679d8b8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _11 = run_command (&proc);
    version:11>
[40;36m ======= node_fun:pp_init========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;46m =======add node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;46m =======add node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;46m =======add node_fun stack:online_cpus========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf6679d8b8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _11 = run_command (&proc);
    version:11>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf6679d8b8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _11 = run_command (&proc);
    version:11>
 <ssa_name 0x7fdf6679d8b8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _11 = run_command (&proc);
    version:11>

 ================== pre trace ptable ================== 
trace fucntion name:run_command 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf6679d8b8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _11 = run_command (&proc);
    version:11>
is Other function run_command
 
 Start check Pointer Collect  

======================================================================
_11 = run_command (&proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:426:17: warning: use location
  426 |                 exit(run_command(&proc));
      |                 ^
this stmt call this function :run_command
trace fucntion name:run_command 

 ================== trace ================== 
trace fucntion free:0 
proc.argv = _13;
./benchmarks/git/use_after_free_2/git_uaf_2.c:429:19: warning: use location
  429 |         proc.argv = (const char **)argv + 3;
      |                   ^
_16 = run_processes_parallel (jobs_33, parallel_next, 0B, 0B, &proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:432:17: warning: use location
  432 |                 exit(run_processes_parallel(jobs, parallel_next,
      |                 ^
this stmt call this function :run_processes_parallel
trace fucntion name:run_processes_parallel 
[40;44m =======trace_function_path run_processes_parallel  function_call count: 7 level :0========  [0m
 <ssa_name 0x7fdf6679d8b8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _11 = run_command (&proc);
    version:11>
[40;36m ======= node_fun:run_processes_parallel========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:pp_cleanup========= [0m
[40;46m =======add node_fun stack:pp_cleanup========= [0m
[40;42m =======pre add _ fucntion:kill_children========= [0m
[40;46m =======add node_fun stack:kill_children========= [0m
[40;44m =======trace_function_path kill_children  function_call count: 1 level :1========  [0m
 <ssa_name 0x7fdf6679d8b8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _11 = run_command (&proc);
    version:11>
[40;36m ======= node_fun:kill_children========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:kill========= [0m
[40;46m =======add node_fun stack:kill========= [0m
[40;42m =======pre add _ fucntion:pp_collect_finished========= [0m
[40;46m =======add node_fun stack:pp_collect_finished========= [0m
[40;44m =======trace_function_path pp_collect_finished  function_call count: 5 level :1========  [0m
 <ssa_name 0x7fdf6679d8b8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _11 = run_command (&proc);
    version:11>
[40;36m ======= node_fun:pp_collect_finished========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:fputs========= [0m
[40;46m =======add node_fun stack:fputs========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:finish_command========= [0m
[40;46m =======add node_fun stack:finish_command========= [0m
[40;44m =======trace_function_path finish_command  function_call count: 2 level :2========  [0m
 <ssa_name 0x7fdf6679d8b8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _11 = run_command (&proc);
    version:11>
[40;36m ======= node_fun:finish_command========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_clear========= [0m
[40;46m =======add node_fun stack:child_process_clear========= [0m
[40;44m =======trace_function_path child_process_clear  function_call count: 1 level :3========  [0m
 <ssa_name 0x7fdf6679d8b8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _11 = run_command (&proc);
    version:11>
[40;36m ======= node_fun:child_process_clear========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;46m =======add node_fun stack:wait_or_whine========= [0m
[40;42m =======pre add _ fucntion:pp_output========= [0m
[40;46m =======add node_fun stack:pp_output========= [0m
[40;42m =======pre add _ fucntion:pp_buffer_stderr========= [0m
[40;46m =======add node_fun stack:pp_buffer_stderr========= [0m
[40;42m =======pre add _ fucntion:pp_start_one========= [0m
[40;46m =======add node_fun stack:pp_start_one========= [0m
[40;44m =======trace_function_path pp_start_one  function_call count: 5 level :1========  [0m
 <ssa_name 0x7fdf6679d8b8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _11 = run_command (&proc);
    version:11>
[40;36m ======= node_fun:pp_start_one========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:start_command========= [0m
[40;46m =======add node_fun stack:start_command========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:pp_init========= [0m
[40;46m =======add node_fun stack:pp_init========= [0m
[40;44m =======trace_function_path pp_init  function_call count: 7 level :1========  [0m
 <ssa_name 0x7fdf6679d8b8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _11 = run_command (&proc);
    version:11>
[40;36m ======= node_fun:pp_init========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;46m =======add node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;46m =======add node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;46m =======add node_fun stack:online_cpus========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf6679d8b8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _11 = run_command (&proc);
    version:11>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf6679d900
    type <pointer_type 0x7fdf662b4000
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662b6690>>
   
    def_stmt _12 = MEM[(char * *)argv_31(D) + 16B];
    version:12
    ptr-info 0x7fdf662c9ee8>
 <ssa_name 0x7fdf6679d900
    type <pointer_type 0x7fdf662b4000
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662b6690>>
   
    def_stmt _12 = MEM[(char * *)argv_31(D) + 16B];
    version:12
    ptr-info 0x7fdf662c9ee8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf6679d900
    type <pointer_type 0x7fdf662b4000
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662b6690>>
   
    def_stmt _12 = MEM[(char * *)argv_31(D) + 16B];
    version:12
    ptr-info 0x7fdf662c9ee8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_39>
jobs_33 = atoi (_12);
jobs_33 = atoi (_12);
./benchmarks/git/use_after_free_2/git_uaf_2.c:428:16: warning: use location
  428 |         jobs = atoi(argv[2]);
      |                ^
this stmt call this function :atoi
trace fucntion name:atoi 

 ================== trace ================== 
trace fucntion free:0 
_22 = run_processes_parallel (jobs_33, no_job, 0B, task_finished, &proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:440:17: warning: use location
  440 |                 exit(run_processes_parallel(jobs, no_job,
      |                 ^
this stmt call this function :run_processes_parallel
trace fucntion name:run_processes_parallel 
[40;44m =======trace_function_path run_processes_parallel  function_call count: 7 level :0========  [0m
 <ssa_name 0x7fdf6679d900
    type <pointer_type 0x7fdf662b4000
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662b6690>>
   
    def_stmt _12 = MEM[(char * *)argv_31(D) + 16B];
    version:12
    ptr-info 0x7fdf662c9ee8>
[40;36m ======= node_fun:run_processes_parallel========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:pp_cleanup========= [0m
[40;46m =======add node_fun stack:pp_cleanup========= [0m
[40;42m =======pre add _ fucntion:kill_children========= [0m
[40;46m =======add node_fun stack:kill_children========= [0m
[40;44m =======trace_function_path kill_children  function_call count: 1 level :1========  [0m
 <ssa_name 0x7fdf6679d900
    type <pointer_type 0x7fdf662b4000
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662b6690>>
   
    def_stmt _12 = MEM[(char * *)argv_31(D) + 16B];
    version:12
    ptr-info 0x7fdf662c9ee8>
[40;36m ======= node_fun:kill_children========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘kill_children’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:258:23: warning: use location
  258 |                 if (pp->children[i].state == GIT_CP_WORKING)
      |                       ^
_1 = pp_15(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:258:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:258:33: warning: use location
  258 |                 if (pp->children[i].state == GIT_CP_WORKING)
      |                                 ^
_4 = _1 + _3;
./benchmarks/git/use_after_free_2/git_uaf_2.c:258:33: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:259:32: warning: use location
  259 |                         kill(pp->children[i].process.pid, signo);
      |                                ^
_6 = pp_15(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:259:32: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:259:42: warning: use location
  259 |                         kill(pp->children[i].process.pid, signo);
      |                                          ^
_9 = _6 + _8;
./benchmarks/git/use_after_free_2/git_uaf_2.c:259:42: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:kill========= [0m
[40;46m =======add node_fun stack:kill========= [0m
[40;42m =======pre add _ fucntion:pp_collect_finished========= [0m
[40;46m =======add node_fun stack:pp_collect_finished========= [0m
[40;44m =======trace_function_path pp_collect_finished  function_call count: 5 level :1========  [0m
 <ssa_name 0x7fdf6679d900
    type <pointer_type 0x7fdf662b4000
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662b6690>>
   
    def_stmt _12 = MEM[(char * *)argv_31(D) + 16B];
    version:12
    ptr-info 0x7fdf662c9ee8>
[40;36m ======= node_fun:pp_collect_finished========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘pp_collect_finished’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:270:31: warning: use location
  270 |                         if (pp->children[i].state == GIT_CP_WAIT_CLEANUP)
      |                               ^
_1 = pp_91(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:270:31: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:270:41: warning: use location
  270 |                         if (pp->children[i].state == GIT_CP_WAIT_CLEANUP)
      |                                         ^
_4 = _1 + _3;
./benchmarks/git/use_after_free_2/git_uaf_2.c:270:41: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:275:42: warning: use location
  275 |                 code = finish_command(&pp->children[i].process);
      |                                          ^
_8 = pp_91(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:275:42: warning: use location
_8

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:275:52: warning: use location
  275 |                 code = finish_command(&pp->children[i].process);
      |                                                    ^
_11 = _8 + _10;
./benchmarks/git/use_after_free_2/git_uaf_2.c:275:52: warning: use location
_11

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:275:24: warning: use location
  275 |                 code = finish_command(&pp->children[i].process);
      |                        ^
_12 = &_11->process;
./benchmarks/git/use_after_free_2/git_uaf_2.c:275:24: warning: use location
_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:277:26: warning: use location
  277 |                 code = pp->task_finished(code, &pp->children[i].process,
      |                          ^
_13 = pp_91(D)->task_finished;
./benchmarks/git/use_after_free_2/git_uaf_2.c:277:26: warning: use location
_13

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:279:45: warning: use location
  279 |                                          &pp->children[i].data);
      |                                             ^
_14 = pp_91(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:279:45: warning: use location
_14

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:279:55: warning: use location
  279 |                                          &pp->children[i].data);
      |                                                       ^
_17 = _14 + _16;
./benchmarks/git/use_after_free_2/git_uaf_2.c:279:55: warning: use location
_17

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:279:42: warning: use location
  279 |                                          &pp->children[i].data);
      |                                          ^
_18 = &_17->data;
./benchmarks/git/use_after_free_2/git_uaf_2.c:279:42: warning: use location
_18

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:277:24: warning: use location
  277 |                 code = pp->task_finished(code, &pp->children[i].process,
      |                        ^
_19 = pp_91(D)->data;
./benchmarks/git/use_after_free_2/git_uaf_2.c:277:24: warning: use location
_19

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:278:45: warning: use location
  278 |                                          &pp->children[i].err, pp->data,
      |                                             ^
_20 = pp_91(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:278:45: warning: use location
_20

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:278:55: warning: use location
  278 |                                          &pp->children[i].err, pp->data,
      |                                                       ^
_23 = _20 + _22;
./benchmarks/git/use_after_free_2/git_uaf_2.c:278:55: warning: use location
_23

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:277:24: warning: use location
  277 |                 code = pp->task_finished(code, &pp->children[i].process,
      |                        ^
_24 = &_23->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:277:24: warning: use location
_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:277:51: warning: use location
  277 |                 code = pp->task_finished(code, &pp->children[i].process,
      |                                                   ^
_25 = pp_91(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:277:51: warning: use location
_25

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:277:61: warning: use location
  277 |                 code = pp->task_finished(code, &pp->children[i].process,
      |                                                             ^
_28 = _25 + _27;
./benchmarks/git/use_after_free_2/git_uaf_2.c:277:61: warning: use location
_28

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:277:24: warning: use location
  277 |                 code = pp->task_finished(code, &pp->children[i].process,
      |                        ^
_29 = &_28->process;
./benchmarks/git/use_after_free_2/git_uaf_2.c:277:24: warning: use location
_29

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:287:19: warning: use location
  287 |                 pp->children[i].state = GIT_CP_FREE;
      |                   ^
_32 = pp_91(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:287:19: warning: use location
_32

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:287:29: warning: use location
  287 |                 pp->children[i].state = GIT_CP_FREE;
      |                             ^
_35 = _32 + _34;
./benchmarks/git/use_after_free_2/git_uaf_2.c:287:29: warning: use location
_35

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:288:19: warning: use location
  288 |                 pp->pfd[i].fd = -1;
      |                   ^
_36 = pp_91(D)->pfd;
./benchmarks/git/use_after_free_2/git_uaf_2.c:288:19: warning: use location
_36

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:288:24: warning: use location
  288 |                 pp->pfd[i].fd = -1;
      |                        ^
_39 = _36 + _38;
./benchmarks/git/use_after_free_2/git_uaf_2.c:288:24: warning: use location
_39

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:289:39: warning: use location
  289 |                 child_process_init(&pp->children[i].process);
      |                                       ^
_40 = pp_91(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:289:39: warning: use location
_40

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:289:49: warning: use location
  289 |                 child_process_init(&pp->children[i].process);
      |                                                 ^
_43 = _40 + _42;
./benchmarks/git/use_after_free_2/git_uaf_2.c:289:49: warning: use location
_43

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:289:17: warning: use location
  289 |                 child_process_init(&pp->children[i].process);
      |                 ^
_44 = &_43->process;
./benchmarks/git/use_after_free_2/git_uaf_2.c:289:17: warning: use location
_44

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:292:64: warning: use location
  292 |                         strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);
      |                                                                ^
_46 = pp_91(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:292:64: warning: use location
_46

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:292:74: warning: use location
  292 |                         strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);
      |                                                                          ^
_49 = _46 + _48;
./benchmarks/git/use_after_free_2/git_uaf_2.c:292:74: warning: use location
_49

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:292:25: warning: use location
  292 |                         strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);
      |                         ^
_50 = &_49->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:292:25: warning: use location
_50

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:292:25: warning: use location
_51 = &pp_91(D)->buffered_output;
./benchmarks/git/use_after_free_2/git_uaf_2.c:292:25: warning: use location
_51

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:293:41: warning: use location
  293 |                         strbuf_reset(&pp->children[i].err);
      |                                         ^
_52 = pp_91(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:293:41: warning: use location
_52

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:293:51: warning: use location
  293 |                         strbuf_reset(&pp->children[i].err);
      |                                                   ^
_55 = _52 + _54;
./benchmarks/git/use_after_free_2/git_uaf_2.c:293:51: warning: use location
_55

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:293:25: warning: use location
  293 |                         strbuf_reset(&pp->children[i].err);
      |                         ^
_56 = &_55->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:293:25: warning: use location
_56

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:295:33: warning: use location
  295 |                         fputs(pp->children[i].err.buf, stderr);
      |                                 ^
_58 = pp_91(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:295:33: warning: use location
_58

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:295:43: warning: use location
  295 |                         fputs(pp->children[i].err.buf, stderr);
      |                                           ^
_61 = _58 + _60;
./benchmarks/git/use_after_free_2/git_uaf_2.c:295:43: warning: use location
_61

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:295:50: warning: use location
  295 |                         fputs(pp->children[i].err.buf, stderr);
      |                                                  ^
_62 = _61->err.buf;
./benchmarks/git/use_after_free_2/git_uaf_2.c:295:50: warning: use location
_62

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:296:41: warning: use location
  296 |                         strbuf_reset(&pp->children[i].err);
      |                                         ^
_63 = pp_91(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:296:41: warning: use location
_63

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:296:51: warning: use location
  296 |                         strbuf_reset(&pp->children[i].err);
      |                                                   ^
_66 = _63 + _65;
./benchmarks/git/use_after_free_2/git_uaf_2.c:296:51: warning: use location
_66

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:296:25: warning: use location
  296 |                         strbuf_reset(&pp->children[i].err);
      |                         ^
_67 = &_66->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:296:25: warning: use location
_67

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:299:50: warning: use location
  299 |                         fputs(pp->buffered_output.buf, stderr);
      |                                                  ^
_69 = pp_91(D)->buffered_output.buf;
./benchmarks/git/use_after_free_2/git_uaf_2.c:299:50: warning: use location
_69

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:300:25: warning: use location
  300 |                         strbuf_reset(&pp->buffered_output);
      |                         ^
_70 = &pp_91(D)->buffered_output;
./benchmarks/git/use_after_free_2/git_uaf_2.c:300:25: warning: use location
_70

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:311:39: warning: use location
  311 |                                 if (pp->children[(pp->output_owner + i) % n].state == GIT_CP_WORKING)
      |                                       ^
_71 = pp_91(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:311:39: warning: use location
_71

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:311:49: warning: use location
  311 |                                 if (pp->children[(pp->output_owner + i) % n].state == GIT_CP_WORKING)
      |                                                 ^
_77 = _71 + _76;
./benchmarks/git/use_after_free_2/git_uaf_2.c:311:49: warning: use location
_77

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:fputs========= [0m
[40;46m =======add node_fun stack:fputs========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:finish_command========= [0m
[40;46m =======add node_fun stack:finish_command========= [0m
[40;44m =======trace_function_path finish_command  function_call count: 2 level :2========  [0m
 <ssa_name 0x7fdf6679d900
    type <pointer_type 0x7fdf662b4000
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662b6690>>
   
    def_stmt _12 = MEM[(char * *)argv_31(D) + 16B];
    version:12
    ptr-info 0x7fdf662c9ee8>
[40;36m ======= node_fun:finish_command========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘finish_command’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:42: warning: use location
  321 |     int ret = wait_or_whine(cmd->pid, cmd->argv[0], 0);
      |                                          ^
_1 = cmd_5(D)->argv;
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:42: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:15: warning: use location
  321 |     int ret = wait_or_whine(cmd->pid, cmd->argv[0], 0);
      |               ^
_2 = *_1;
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:15: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_clear========= [0m
[40;46m =======add node_fun stack:child_process_clear========= [0m
[40;44m =======trace_function_path child_process_clear  function_call count: 1 level :3========  [0m
 <ssa_name 0x7fdf6679d900
    type <pointer_type 0x7fdf662b4000
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662b6690>>
   
    def_stmt _12 = MEM[(char * *)argv_31(D) + 16B];
    version:12
    ptr-info 0x7fdf662c9ee8>
[40;36m ======= node_fun:child_process_clear========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘child_process_clear’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:328:9: warning: use location
  328 |         argv_array_clear(&child->args);
      |         ^
_1 = &child_3(D)->args;
./benchmarks/git/use_after_free_2/git_uaf_2.c:328:9: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:329:9: warning: use location
  329 |         argv_array_clear(&child->env_array);
      |         ^
_2 = &child_3(D)->env_array;
./benchmarks/git/use_after_free_2/git_uaf_2.c:329:9: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;46m =======add node_fun stack:wait_or_whine========= [0m
[40;42m =======pre add _ fucntion:pp_output========= [0m
[40;46m =======add node_fun stack:pp_output========= [0m
[40;42m =======pre add _ fucntion:pp_buffer_stderr========= [0m
[40;46m =======add node_fun stack:pp_buffer_stderr========= [0m
[40;42m =======pre add _ fucntion:pp_start_one========= [0m
[40;46m =======add node_fun stack:pp_start_one========= [0m
[40;44m =======trace_function_path pp_start_one  function_call count: 5 level :1========  [0m
 <ssa_name 0x7fdf6679d900
    type <pointer_type 0x7fdf662b4000
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662b6690>>
   
    def_stmt _12 = MEM[(char * *)argv_31(D) + 16B];
    version:12
    ptr-info 0x7fdf662c9ee8>
[40;36m ======= node_fun:pp_start_one========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘pp_start_one’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:217:23: warning: use location
  217 |                 if (pp->children[i].state == GIT_CP_FREE)
      |                       ^
_1 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:217:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:217:33: warning: use location
  217 |                 if (pp->children[i].state == GIT_CP_FREE)
      |                                 ^
_4 = _1 + _3;
./benchmarks/git/use_after_free_2/git_uaf_2.c:217:33: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:222:18: warning: use location
  222 |         code = pp->get_next_task(&pp->children[i].process,
      |                  ^
_8 = pp_102(D)->get_next_task;
./benchmarks/git/use_after_free_2/git_uaf_2.c:222:18: warning: use location
_8

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:225:37: warning: use location
  225 |                                  &pp->children[i].data);
      |                                     ^
_9 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:225:37: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:225:47: warning: use location
  225 |                                  &pp->children[i].data);
      |                                               ^
_12 = _9 + _11;
./benchmarks/git/use_after_free_2/git_uaf_2.c:225:47: warning: use location
_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:222:16: warning: use location
  222 |         code = pp->get_next_task(&pp->children[i].process,
      |                ^
_13 = &_12->data;
./benchmarks/git/use_after_free_2/git_uaf_2.c:222:16: warning: use location
_13

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:222:16: warning: use location
_14 = pp_102(D)->data;
./benchmarks/git/use_after_free_2/git_uaf_2.c:222:16: warning: use location
_14

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:223:37: warning: use location
  223 |                                  &pp->children[i].err,
      |                                     ^
_15 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:223:37: warning: use location
_15

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:223:47: warning: use location
  223 |                                  &pp->children[i].err,
      |                                               ^
_18 = _15 + _17;
./benchmarks/git/use_after_free_2/git_uaf_2.c:223:47: warning: use location
_18

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:222:16: warning: use location
  222 |         code = pp->get_next_task(&pp->children[i].process,
      |                ^
_19 = &_18->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:222:16: warning: use location
_19

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:222:37: warning: use location
  222 |         code = pp->get_next_task(&pp->children[i].process,
      |                                     ^
_20 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:222:37: warning: use location
_20

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:222:47: warning: use location
  222 |         code = pp->get_next_task(&pp->children[i].process,
      |                                               ^
_23 = _20 + _22;
./benchmarks/git/use_after_free_2/git_uaf_2.c:222:47: warning: use location
_23

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:222:16: warning: use location
  222 |         code = pp->get_next_task(&pp->children[i].process,
      |                ^
_24 = &_23->process;
./benchmarks/git/use_after_free_2/git_uaf_2.c:222:16: warning: use location
_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:227:56: warning: use location
  227 |                 strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);
      |                                                        ^
_25 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:227:56: warning: use location
_25

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:227:66: warning: use location
  227 |                 strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);
      |                                                                  ^
_28 = _25 + _27;
./benchmarks/git/use_after_free_2/git_uaf_2.c:227:66: warning: use location
_28

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:227:17: warning: use location
  227 |                 strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);
      |                 ^
_29 = &_28->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:227:17: warning: use location
_29

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:227:17: warning: use location
_30 = &pp_102(D)->buffered_output;
./benchmarks/git/use_after_free_2/git_uaf_2.c:227:17: warning: use location
_30

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:228:33: warning: use location
  228 |                 strbuf_reset(&pp->children[i].err);
      |                                 ^
_31 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:228:33: warning: use location
_31

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:228:43: warning: use location
  228 |                 strbuf_reset(&pp->children[i].err);
      |                                           ^
_34 = _31 + _33;
./benchmarks/git/use_after_free_2/git_uaf_2.c:228:43: warning: use location
_34

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:228:17: warning: use location
  228 |                 strbuf_reset(&pp->children[i].err);
      |                 ^
_35 = &_34->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:228:17: warning: use location
_35

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:231:11: warning: use location
  231 |         pp->children[i].process.err = -1;
      |           ^
_36 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:231:11: warning: use location
_36

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:231:21: warning: use location
  231 |         pp->children[i].process.err = -1;
      |                     ^
_39 = _36 + _38;
./benchmarks/git/use_after_free_2/git_uaf_2.c:231:21: warning: use location
_39

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:232:11: warning: use location
  232 |         pp->children[i].process.stdout_to_stderr = 1;
      |           ^
_40 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:232:11: warning: use location
_40

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:232:21: warning: use location
  232 |         pp->children[i].process.stdout_to_stderr = 1;
      |                     ^
_43 = _40 + _42;
./benchmarks/git/use_after_free_2/git_uaf_2.c:232:21: warning: use location
_43

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:233:11: warning: use location
  233 |         pp->children[i].process.no_stdin = 1;
      |           ^
_44 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:233:11: warning: use location
_44

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:233:21: warning: use location
  233 |         pp->children[i].process.no_stdin = 1;
      |                     ^
_47 = _44 + _46;
./benchmarks/git/use_after_free_2/git_uaf_2.c:233:21: warning: use location
_47

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:235:30: warning: use location
  235 |         if (start_command(&pp->children[i].process)) {
      |                              ^
_48 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:235:30: warning: use location
_48

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:235:40: warning: use location
  235 |         if (start_command(&pp->children[i].process)) {
      |                                        ^
_51 = _48 + _50;
./benchmarks/git/use_after_free_2/git_uaf_2.c:235:40: warning: use location
_51

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:235:13: warning: use location
  235 |         if (start_command(&pp->children[i].process)) {
      |             ^
_52 = &_51->process;
./benchmarks/git/use_after_free_2/git_uaf_2.c:235:13: warning: use location
_52

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:236:26: warning: use location
  236 |                 code = pp->start_failure(&pp->children[i].process,
      |                          ^
_54 = pp_102(D)->start_failure;
./benchmarks/git/use_after_free_2/git_uaf_2.c:236:26: warning: use location
_54

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:239:45: warning: use location
  239 |                                          &pp->children[i].data);
      |                                             ^
_55 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:239:45: warning: use location
_55

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:239:55: warning: use location
  239 |                                          &pp->children[i].data);
      |                                                       ^
_58 = _55 + _57;
./benchmarks/git/use_after_free_2/git_uaf_2.c:239:55: warning: use location
_58

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:239:42: warning: use location
  239 |                                          &pp->children[i].data);
      |                                          ^
_59 = &_58->data;
./benchmarks/git/use_after_free_2/git_uaf_2.c:239:42: warning: use location
_59

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:236:24: warning: use location
  236 |                 code = pp->start_failure(&pp->children[i].process,
      |                        ^
_60 = pp_102(D)->data;
./benchmarks/git/use_after_free_2/git_uaf_2.c:236:24: warning: use location
_60

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:237:45: warning: use location
  237 |                                          &pp->children[i].err,
      |                                             ^
_61 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:237:45: warning: use location
_61

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:237:55: warning: use location
  237 |                                          &pp->children[i].err,
      |                                                       ^
_64 = _61 + _63;
./benchmarks/git/use_after_free_2/git_uaf_2.c:237:55: warning: use location
_64

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:236:24: warning: use location
  236 |                 code = pp->start_failure(&pp->children[i].process,
      |                        ^
_65 = &_64->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:236:24: warning: use location
_65

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:236:45: warning: use location
  236 |                 code = pp->start_failure(&pp->children[i].process,
      |                                             ^
_66 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:236:45: warning: use location
_66

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:236:55: warning: use location
  236 |                 code = pp->start_failure(&pp->children[i].process,
      |                                                       ^
_69 = _66 + _68;
./benchmarks/git/use_after_free_2/git_uaf_2.c:236:55: warning: use location
_69

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:236:24: warning: use location
  236 |                 code = pp->start_failure(&pp->children[i].process,
      |                        ^
_70 = &_69->process;
./benchmarks/git/use_after_free_2/git_uaf_2.c:236:24: warning: use location
_70

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:240:56: warning: use location
  240 |                 strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);
      |                                                        ^
_71 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:240:56: warning: use location
_71

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:240:66: warning: use location
  240 |                 strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);
      |                                                                  ^
_74 = _71 + _73;
./benchmarks/git/use_after_free_2/git_uaf_2.c:240:66: warning: use location
_74

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:240:17: warning: use location
  240 |                 strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);
      |                 ^
_75 = &_74->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:240:17: warning: use location
_75

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:240:17: warning: use location
_76 = &pp_102(D)->buffered_output;
./benchmarks/git/use_after_free_2/git_uaf_2.c:240:17: warning: use location
_76

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:241:33: warning: use location
  241 |                 strbuf_reset(&pp->children[i].err);
      |                                 ^
_77 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:241:33: warning: use location
_77

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:241:43: warning: use location
  241 |                 strbuf_reset(&pp->children[i].err);
      |                                           ^
_80 = _77 + _79;
./benchmarks/git/use_after_free_2/git_uaf_2.c:241:43: warning: use location
_80

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:241:17: warning: use location
  241 |                 strbuf_reset(&pp->children[i].err);
      |                 ^
_81 = &_80->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:241:17: warning: use location
_81

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:248:11: warning: use location
  248 |         pp->children[i].state = GIT_CP_WORKING;
      |           ^
_84 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:248:11: warning: use location
_84

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:248:21: warning: use location
  248 |         pp->children[i].state = GIT_CP_WORKING;
      |                     ^
_87 = _84 + _86;
./benchmarks/git/use_after_free_2/git_uaf_2.c:248:21: warning: use location
_87

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:249:27: warning: use location
  249 |         pp->pfd[i].fd = pp->children[i].process.err;
      |                           ^
_88 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:249:27: warning: use location
_88

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:249:37: warning: use location
  249 |         pp->pfd[i].fd = pp->children[i].process.err;
      |                                     ^
_91 = _88 + _90;
./benchmarks/git/use_after_free_2/git_uaf_2.c:249:37: warning: use location
_91

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:249:11: warning: use location
  249 |         pp->pfd[i].fd = pp->children[i].process.err;
      |           ^
_92 = pp_102(D)->pfd;
./benchmarks/git/use_after_free_2/git_uaf_2.c:249:11: warning: use location
_92

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:249:16: warning: use location
  249 |         pp->pfd[i].fd = pp->children[i].process.err;
      |                ^
_95 = _92 + _94;
./benchmarks/git/use_after_free_2/git_uaf_2.c:249:16: warning: use location
_95

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:start_command========= [0m
[40;46m =======add node_fun stack:start_command========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:pp_init========= [0m
[40;46m =======add node_fun stack:pp_init========= [0m
[40;44m =======trace_function_path pp_init  function_call count: 7 level :1========  [0m
 <ssa_name 0x7fdf6679d900
    type <pointer_type 0x7fdf662b4000
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662b6690>>
   
    def_stmt _12 = MEM[(char * *)argv_31(D) + 16B];
    version:12
    ptr-info 0x7fdf662c9ee8>
[40;36m ======= node_fun:pp_init========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: use location
  193 |         strbuf_init(&pp->buffered_output, 0);
      |         ^
_5 = &pp_34(D)->buffered_output;
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:32: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                ^
_6 = pp_34(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:32: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:42: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                          ^
_9 = _6 + _8;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:42: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                 ^
_10 = &_9->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:39: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                       ^
_11 = pp_34(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:39: warning: use location
_11

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:49: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                                 ^
_14 = _11 + _13;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:49: warning: use location
_14

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                 ^
_15 = &_14->process;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
_15

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:19: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                   ^
_16 = pp_34(D)->pfd;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:19: warning: use location
_16

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:24: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                        ^
_19 = _16 + _18;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:24: warning: use location
_19

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:19: warning: use location
  199 |                 pp->pfd[i].fd = -1;
      |                   ^
_20 = pp_34(D)->pfd;
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:19: warning: use location
_20

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:24: warning: use location
  199 |                 pp->pfd[i].fd = -1;
      |                        ^
_23 = _20 + _22;
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:24: warning: use location
_23

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;46m =======add node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;46m =======add node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;46m =======add node_fun stack:online_cpus========= [0m

 ================== trace ================== 
trace fucntion free:0 
exit (_22);
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:440:17: warning: use location
  440 |                 exit(run_processes_parallel(jobs, no_job,
      |                 ^
this stmt call this function :exit
trace fucntion name:exit 

 ================== trace ================== 
trace fucntion free:0 
_19 = run_processes_parallel (jobs_33, parallel_next, 0B, task_finished, &proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:436:17: warning: use location
  436 |                 exit(run_processes_parallel(jobs, parallel_next,
      |                 ^
this stmt call this function :run_processes_parallel
trace fucntion name:run_processes_parallel 
[40;44m =======trace_function_path run_processes_parallel  function_call count: 7 level :0========  [0m
 <ssa_name 0x7fdf6679d900
    type <pointer_type 0x7fdf662b4000
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662b6690>>
   
    def_stmt _12 = MEM[(char * *)argv_31(D) + 16B];
    version:12
    ptr-info 0x7fdf662c9ee8>
[40;36m ======= node_fun:run_processes_parallel========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:pp_cleanup========= [0m
[40;46m =======add node_fun stack:pp_cleanup========= [0m
[40;42m =======pre add _ fucntion:kill_children========= [0m
[40;46m =======add node_fun stack:kill_children========= [0m
[40;44m =======trace_function_path kill_children  function_call count: 1 level :1========  [0m
 <ssa_name 0x7fdf6679d900
    type <pointer_type 0x7fdf662b4000
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662b6690>>
   
    def_stmt _12 = MEM[(char * *)argv_31(D) + 16B];
    version:12
    ptr-info 0x7fdf662c9ee8>
[40;36m ======= node_fun:kill_children========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘kill_children’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:258:23: warning: use location
  258 |                 if (pp->children[i].state == GIT_CP_WORKING)
      |                       ^
_1 = pp_15(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:258:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:258:33: warning: use location
  258 |                 if (pp->children[i].state == GIT_CP_WORKING)
      |                                 ^
_4 = _1 + _3;
./benchmarks/git/use_after_free_2/git_uaf_2.c:258:33: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:259:32: warning: use location
  259 |                         kill(pp->children[i].process.pid, signo);
      |                                ^
_6 = pp_15(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:259:32: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:259:42: warning: use location
  259 |                         kill(pp->children[i].process.pid, signo);
      |                                          ^
_9 = _6 + _8;
./benchmarks/git/use_after_free_2/git_uaf_2.c:259:42: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:kill========= [0m
[40;46m =======add node_fun stack:kill========= [0m
[40;42m =======pre add _ fucntion:pp_collect_finished========= [0m
[40;46m =======add node_fun stack:pp_collect_finished========= [0m
[40;44m =======trace_function_path pp_collect_finished  function_call count: 5 level :1========  [0m
 <ssa_name 0x7fdf6679d900
    type <pointer_type 0x7fdf662b4000
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662b6690>>
   
    def_stmt _12 = MEM[(char * *)argv_31(D) + 16B];
    version:12
    ptr-info 0x7fdf662c9ee8>
[40;36m ======= node_fun:pp_collect_finished========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘pp_collect_finished’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:270:31: warning: use location
  270 |                         if (pp->children[i].state == GIT_CP_WAIT_CLEANUP)
      |                               ^
_1 = pp_91(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:270:31: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:270:41: warning: use location
  270 |                         if (pp->children[i].state == GIT_CP_WAIT_CLEANUP)
      |                                         ^
_4 = _1 + _3;
./benchmarks/git/use_after_free_2/git_uaf_2.c:270:41: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:275:42: warning: use location
  275 |                 code = finish_command(&pp->children[i].process);
      |                                          ^
_8 = pp_91(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:275:42: warning: use location
_8

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:275:52: warning: use location
  275 |                 code = finish_command(&pp->children[i].process);
      |                                                    ^
_11 = _8 + _10;
./benchmarks/git/use_after_free_2/git_uaf_2.c:275:52: warning: use location
_11

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:275:24: warning: use location
  275 |                 code = finish_command(&pp->children[i].process);
      |                        ^
_12 = &_11->process;
./benchmarks/git/use_after_free_2/git_uaf_2.c:275:24: warning: use location
_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:277:26: warning: use location
  277 |                 code = pp->task_finished(code, &pp->children[i].process,
      |                          ^
_13 = pp_91(D)->task_finished;
./benchmarks/git/use_after_free_2/git_uaf_2.c:277:26: warning: use location
_13

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:279:45: warning: use location
  279 |                                          &pp->children[i].data);
      |                                             ^
_14 = pp_91(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:279:45: warning: use location
_14

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:279:55: warning: use location
  279 |                                          &pp->children[i].data);
      |                                                       ^
_17 = _14 + _16;
./benchmarks/git/use_after_free_2/git_uaf_2.c:279:55: warning: use location
_17

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:279:42: warning: use location
  279 |                                          &pp->children[i].data);
      |                                          ^
_18 = &_17->data;
./benchmarks/git/use_after_free_2/git_uaf_2.c:279:42: warning: use location
_18

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:277:24: warning: use location
  277 |                 code = pp->task_finished(code, &pp->children[i].process,
      |                        ^
_19 = pp_91(D)->data;
./benchmarks/git/use_after_free_2/git_uaf_2.c:277:24: warning: use location
_19

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:278:45: warning: use location
  278 |                                          &pp->children[i].err, pp->data,
      |                                             ^
_20 = pp_91(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:278:45: warning: use location
_20

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:278:55: warning: use location
  278 |                                          &pp->children[i].err, pp->data,
      |                                                       ^
_23 = _20 + _22;
./benchmarks/git/use_after_free_2/git_uaf_2.c:278:55: warning: use location
_23

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:277:24: warning: use location
  277 |                 code = pp->task_finished(code, &pp->children[i].process,
      |                        ^
_24 = &_23->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:277:24: warning: use location
_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:277:51: warning: use location
  277 |                 code = pp->task_finished(code, &pp->children[i].process,
      |                                                   ^
_25 = pp_91(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:277:51: warning: use location
_25

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:277:61: warning: use location
  277 |                 code = pp->task_finished(code, &pp->children[i].process,
      |                                                             ^
_28 = _25 + _27;
./benchmarks/git/use_after_free_2/git_uaf_2.c:277:61: warning: use location
_28

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:277:24: warning: use location
  277 |                 code = pp->task_finished(code, &pp->children[i].process,
      |                        ^
_29 = &_28->process;
./benchmarks/git/use_after_free_2/git_uaf_2.c:277:24: warning: use location
_29

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:287:19: warning: use location
  287 |                 pp->children[i].state = GIT_CP_FREE;
      |                   ^
_32 = pp_91(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:287:19: warning: use location
_32

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:287:29: warning: use location
  287 |                 pp->children[i].state = GIT_CP_FREE;
      |                             ^
_35 = _32 + _34;
./benchmarks/git/use_after_free_2/git_uaf_2.c:287:29: warning: use location
_35

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:288:19: warning: use location
  288 |                 pp->pfd[i].fd = -1;
      |                   ^
_36 = pp_91(D)->pfd;
./benchmarks/git/use_after_free_2/git_uaf_2.c:288:19: warning: use location
_36

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:288:24: warning: use location
  288 |                 pp->pfd[i].fd = -1;
      |                        ^
_39 = _36 + _38;
./benchmarks/git/use_after_free_2/git_uaf_2.c:288:24: warning: use location
_39

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:289:39: warning: use location
  289 |                 child_process_init(&pp->children[i].process);
      |                                       ^
_40 = pp_91(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:289:39: warning: use location
_40

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:289:49: warning: use location
  289 |                 child_process_init(&pp->children[i].process);
      |                                                 ^
_43 = _40 + _42;
./benchmarks/git/use_after_free_2/git_uaf_2.c:289:49: warning: use location
_43

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:289:17: warning: use location
  289 |                 child_process_init(&pp->children[i].process);
      |                 ^
_44 = &_43->process;
./benchmarks/git/use_after_free_2/git_uaf_2.c:289:17: warning: use location
_44

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:292:64: warning: use location
  292 |                         strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);
      |                                                                ^
_46 = pp_91(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:292:64: warning: use location
_46

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:292:74: warning: use location
  292 |                         strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);
      |                                                                          ^
_49 = _46 + _48;
./benchmarks/git/use_after_free_2/git_uaf_2.c:292:74: warning: use location
_49

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:292:25: warning: use location
  292 |                         strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);
      |                         ^
_50 = &_49->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:292:25: warning: use location
_50

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:292:25: warning: use location
_51 = &pp_91(D)->buffered_output;
./benchmarks/git/use_after_free_2/git_uaf_2.c:292:25: warning: use location
_51

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:293:41: warning: use location
  293 |                         strbuf_reset(&pp->children[i].err);
      |                                         ^
_52 = pp_91(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:293:41: warning: use location
_52

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:293:51: warning: use location
  293 |                         strbuf_reset(&pp->children[i].err);
      |                                                   ^
_55 = _52 + _54;
./benchmarks/git/use_after_free_2/git_uaf_2.c:293:51: warning: use location
_55

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:293:25: warning: use location
  293 |                         strbuf_reset(&pp->children[i].err);
      |                         ^
_56 = &_55->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:293:25: warning: use location
_56

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:295:33: warning: use location
  295 |                         fputs(pp->children[i].err.buf, stderr);
      |                                 ^
_58 = pp_91(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:295:33: warning: use location
_58

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:295:43: warning: use location
  295 |                         fputs(pp->children[i].err.buf, stderr);
      |                                           ^
_61 = _58 + _60;
./benchmarks/git/use_after_free_2/git_uaf_2.c:295:43: warning: use location
_61

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:295:50: warning: use location
  295 |                         fputs(pp->children[i].err.buf, stderr);
      |                                                  ^
_62 = _61->err.buf;
./benchmarks/git/use_after_free_2/git_uaf_2.c:295:50: warning: use location
_62

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:296:41: warning: use location
  296 |                         strbuf_reset(&pp->children[i].err);
      |                                         ^
_63 = pp_91(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:296:41: warning: use location
_63

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:296:51: warning: use location
  296 |                         strbuf_reset(&pp->children[i].err);
      |                                                   ^
_66 = _63 + _65;
./benchmarks/git/use_after_free_2/git_uaf_2.c:296:51: warning: use location
_66

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:296:25: warning: use location
  296 |                         strbuf_reset(&pp->children[i].err);
      |                         ^
_67 = &_66->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:296:25: warning: use location
_67

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:299:50: warning: use location
  299 |                         fputs(pp->buffered_output.buf, stderr);
      |                                                  ^
_69 = pp_91(D)->buffered_output.buf;
./benchmarks/git/use_after_free_2/git_uaf_2.c:299:50: warning: use location
_69

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:300:25: warning: use location
  300 |                         strbuf_reset(&pp->buffered_output);
      |                         ^
_70 = &pp_91(D)->buffered_output;
./benchmarks/git/use_after_free_2/git_uaf_2.c:300:25: warning: use location
_70

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:311:39: warning: use location
  311 |                                 if (pp->children[(pp->output_owner + i) % n].state == GIT_CP_WORKING)
      |                                       ^
_71 = pp_91(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:311:39: warning: use location
_71

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:311:49: warning: use location
  311 |                                 if (pp->children[(pp->output_owner + i) % n].state == GIT_CP_WORKING)
      |                                                 ^
_77 = _71 + _76;
./benchmarks/git/use_after_free_2/git_uaf_2.c:311:49: warning: use location
_77

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:fputs========= [0m
[40;46m =======add node_fun stack:fputs========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:finish_command========= [0m
[40;46m =======add node_fun stack:finish_command========= [0m
[40;44m =======trace_function_path finish_command  function_call count: 2 level :2========  [0m
 <ssa_name 0x7fdf6679d900
    type <pointer_type 0x7fdf662b4000
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662b6690>>
   
    def_stmt _12 = MEM[(char * *)argv_31(D) + 16B];
    version:12
    ptr-info 0x7fdf662c9ee8>
[40;36m ======= node_fun:finish_command========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘finish_command’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:42: warning: use location
  321 |     int ret = wait_or_whine(cmd->pid, cmd->argv[0], 0);
      |                                          ^
_1 = cmd_5(D)->argv;
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:42: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:15: warning: use location
  321 |     int ret = wait_or_whine(cmd->pid, cmd->argv[0], 0);
      |               ^
_2 = *_1;
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:15: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_clear========= [0m
[40;46m =======add node_fun stack:child_process_clear========= [0m
[40;44m =======trace_function_path child_process_clear  function_call count: 1 level :3========  [0m
 <ssa_name 0x7fdf6679d900
    type <pointer_type 0x7fdf662b4000
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662b6690>>
   
    def_stmt _12 = MEM[(char * *)argv_31(D) + 16B];
    version:12
    ptr-info 0x7fdf662c9ee8>
[40;36m ======= node_fun:child_process_clear========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘child_process_clear’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:328:9: warning: use location
  328 |         argv_array_clear(&child->args);
      |         ^
_1 = &child_3(D)->args;
./benchmarks/git/use_after_free_2/git_uaf_2.c:328:9: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:329:9: warning: use location
  329 |         argv_array_clear(&child->env_array);
      |         ^
_2 = &child_3(D)->env_array;
./benchmarks/git/use_after_free_2/git_uaf_2.c:329:9: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;46m =======add node_fun stack:wait_or_whine========= [0m
[40;42m =======pre add _ fucntion:pp_output========= [0m
[40;46m =======add node_fun stack:pp_output========= [0m
[40;42m =======pre add _ fucntion:pp_buffer_stderr========= [0m
[40;46m =======add node_fun stack:pp_buffer_stderr========= [0m
[40;42m =======pre add _ fucntion:pp_start_one========= [0m
[40;46m =======add node_fun stack:pp_start_one========= [0m
[40;44m =======trace_function_path pp_start_one  function_call count: 5 level :1========  [0m
 <ssa_name 0x7fdf6679d900
    type <pointer_type 0x7fdf662b4000
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662b6690>>
   
    def_stmt _12 = MEM[(char * *)argv_31(D) + 16B];
    version:12
    ptr-info 0x7fdf662c9ee8>
[40;36m ======= node_fun:pp_start_one========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘pp_start_one’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:217:23: warning: use location
  217 |                 if (pp->children[i].state == GIT_CP_FREE)
      |                       ^
_1 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:217:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:217:33: warning: use location
  217 |                 if (pp->children[i].state == GIT_CP_FREE)
      |                                 ^
_4 = _1 + _3;
./benchmarks/git/use_after_free_2/git_uaf_2.c:217:33: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:222:18: warning: use location
  222 |         code = pp->get_next_task(&pp->children[i].process,
      |                  ^
_8 = pp_102(D)->get_next_task;
./benchmarks/git/use_after_free_2/git_uaf_2.c:222:18: warning: use location
_8

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:225:37: warning: use location
  225 |                                  &pp->children[i].data);
      |                                     ^
_9 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:225:37: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:225:47: warning: use location
  225 |                                  &pp->children[i].data);
      |                                               ^
_12 = _9 + _11;
./benchmarks/git/use_after_free_2/git_uaf_2.c:225:47: warning: use location
_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:222:16: warning: use location
  222 |         code = pp->get_next_task(&pp->children[i].process,
      |                ^
_13 = &_12->data;
./benchmarks/git/use_after_free_2/git_uaf_2.c:222:16: warning: use location
_13

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:222:16: warning: use location
_14 = pp_102(D)->data;
./benchmarks/git/use_after_free_2/git_uaf_2.c:222:16: warning: use location
_14

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:223:37: warning: use location
  223 |                                  &pp->children[i].err,
      |                                     ^
_15 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:223:37: warning: use location
_15

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:223:47: warning: use location
  223 |                                  &pp->children[i].err,
      |                                               ^
_18 = _15 + _17;
./benchmarks/git/use_after_free_2/git_uaf_2.c:223:47: warning: use location
_18

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:222:16: warning: use location
  222 |         code = pp->get_next_task(&pp->children[i].process,
      |                ^
_19 = &_18->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:222:16: warning: use location
_19

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:222:37: warning: use location
  222 |         code = pp->get_next_task(&pp->children[i].process,
      |                                     ^
_20 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:222:37: warning: use location
_20

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:222:47: warning: use location
  222 |         code = pp->get_next_task(&pp->children[i].process,
      |                                               ^
_23 = _20 + _22;
./benchmarks/git/use_after_free_2/git_uaf_2.c:222:47: warning: use location
_23

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:222:16: warning: use location
  222 |         code = pp->get_next_task(&pp->children[i].process,
      |                ^
_24 = &_23->process;
./benchmarks/git/use_after_free_2/git_uaf_2.c:222:16: warning: use location
_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:227:56: warning: use location
  227 |                 strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);
      |                                                        ^
_25 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:227:56: warning: use location
_25

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:227:66: warning: use location
  227 |                 strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);
      |                                                                  ^
_28 = _25 + _27;
./benchmarks/git/use_after_free_2/git_uaf_2.c:227:66: warning: use location
_28

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:227:17: warning: use location
  227 |                 strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);
      |                 ^
_29 = &_28->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:227:17: warning: use location
_29

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:227:17: warning: use location
_30 = &pp_102(D)->buffered_output;
./benchmarks/git/use_after_free_2/git_uaf_2.c:227:17: warning: use location
_30

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:228:33: warning: use location
  228 |                 strbuf_reset(&pp->children[i].err);
      |                                 ^
_31 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:228:33: warning: use location
_31

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:228:43: warning: use location
  228 |                 strbuf_reset(&pp->children[i].err);
      |                                           ^
_34 = _31 + _33;
./benchmarks/git/use_after_free_2/git_uaf_2.c:228:43: warning: use location
_34

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:228:17: warning: use location
  228 |                 strbuf_reset(&pp->children[i].err);
      |                 ^
_35 = &_34->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:228:17: warning: use location
_35

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:231:11: warning: use location
  231 |         pp->children[i].process.err = -1;
      |           ^
_36 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:231:11: warning: use location
_36

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:231:21: warning: use location
  231 |         pp->children[i].process.err = -1;
      |                     ^
_39 = _36 + _38;
./benchmarks/git/use_after_free_2/git_uaf_2.c:231:21: warning: use location
_39

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:232:11: warning: use location
  232 |         pp->children[i].process.stdout_to_stderr = 1;
      |           ^
_40 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:232:11: warning: use location
_40

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:232:21: warning: use location
  232 |         pp->children[i].process.stdout_to_stderr = 1;
      |                     ^
_43 = _40 + _42;
./benchmarks/git/use_after_free_2/git_uaf_2.c:232:21: warning: use location
_43

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:233:11: warning: use location
  233 |         pp->children[i].process.no_stdin = 1;
      |           ^
_44 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:233:11: warning: use location
_44

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:233:21: warning: use location
  233 |         pp->children[i].process.no_stdin = 1;
      |                     ^
_47 = _44 + _46;
./benchmarks/git/use_after_free_2/git_uaf_2.c:233:21: warning: use location
_47

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:235:30: warning: use location
  235 |         if (start_command(&pp->children[i].process)) {
      |                              ^
_48 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:235:30: warning: use location
_48

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:235:40: warning: use location
  235 |         if (start_command(&pp->children[i].process)) {
      |                                        ^
_51 = _48 + _50;
./benchmarks/git/use_after_free_2/git_uaf_2.c:235:40: warning: use location
_51

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:235:13: warning: use location
  235 |         if (start_command(&pp->children[i].process)) {
      |             ^
_52 = &_51->process;
./benchmarks/git/use_after_free_2/git_uaf_2.c:235:13: warning: use location
_52

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:236:26: warning: use location
  236 |                 code = pp->start_failure(&pp->children[i].process,
      |                          ^
_54 = pp_102(D)->start_failure;
./benchmarks/git/use_after_free_2/git_uaf_2.c:236:26: warning: use location
_54

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:239:45: warning: use location
  239 |                                          &pp->children[i].data);
      |                                             ^
_55 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:239:45: warning: use location
_55

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:239:55: warning: use location
  239 |                                          &pp->children[i].data);
      |                                                       ^
_58 = _55 + _57;
./benchmarks/git/use_after_free_2/git_uaf_2.c:239:55: warning: use location
_58

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:239:42: warning: use location
  239 |                                          &pp->children[i].data);
      |                                          ^
_59 = &_58->data;
./benchmarks/git/use_after_free_2/git_uaf_2.c:239:42: warning: use location
_59

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:236:24: warning: use location
  236 |                 code = pp->start_failure(&pp->children[i].process,
      |                        ^
_60 = pp_102(D)->data;
./benchmarks/git/use_after_free_2/git_uaf_2.c:236:24: warning: use location
_60

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:237:45: warning: use location
  237 |                                          &pp->children[i].err,
      |                                             ^
_61 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:237:45: warning: use location
_61

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:237:55: warning: use location
  237 |                                          &pp->children[i].err,
      |                                                       ^
_64 = _61 + _63;
./benchmarks/git/use_after_free_2/git_uaf_2.c:237:55: warning: use location
_64

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:236:24: warning: use location
  236 |                 code = pp->start_failure(&pp->children[i].process,
      |                        ^
_65 = &_64->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:236:24: warning: use location
_65

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:236:45: warning: use location
  236 |                 code = pp->start_failure(&pp->children[i].process,
      |                                             ^
_66 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:236:45: warning: use location
_66

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:236:55: warning: use location
  236 |                 code = pp->start_failure(&pp->children[i].process,
      |                                                       ^
_69 = _66 + _68;
./benchmarks/git/use_after_free_2/git_uaf_2.c:236:55: warning: use location
_69

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:236:24: warning: use location
  236 |                 code = pp->start_failure(&pp->children[i].process,
      |                        ^
_70 = &_69->process;
./benchmarks/git/use_after_free_2/git_uaf_2.c:236:24: warning: use location
_70

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:240:56: warning: use location
  240 |                 strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);
      |                                                        ^
_71 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:240:56: warning: use location
_71

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:240:66: warning: use location
  240 |                 strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);
      |                                                                  ^
_74 = _71 + _73;
./benchmarks/git/use_after_free_2/git_uaf_2.c:240:66: warning: use location
_74

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:240:17: warning: use location
  240 |                 strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);
      |                 ^
_75 = &_74->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:240:17: warning: use location
_75

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:240:17: warning: use location
_76 = &pp_102(D)->buffered_output;
./benchmarks/git/use_after_free_2/git_uaf_2.c:240:17: warning: use location
_76

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:241:33: warning: use location
  241 |                 strbuf_reset(&pp->children[i].err);
      |                                 ^
_77 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:241:33: warning: use location
_77

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:241:43: warning: use location
  241 |                 strbuf_reset(&pp->children[i].err);
      |                                           ^
_80 = _77 + _79;
./benchmarks/git/use_after_free_2/git_uaf_2.c:241:43: warning: use location
_80

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:241:17: warning: use location
  241 |                 strbuf_reset(&pp->children[i].err);
      |                 ^
_81 = &_80->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:241:17: warning: use location
_81

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:248:11: warning: use location
  248 |         pp->children[i].state = GIT_CP_WORKING;
      |           ^
_84 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:248:11: warning: use location
_84

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:248:21: warning: use location
  248 |         pp->children[i].state = GIT_CP_WORKING;
      |                     ^
_87 = _84 + _86;
./benchmarks/git/use_after_free_2/git_uaf_2.c:248:21: warning: use location
_87

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:249:27: warning: use location
  249 |         pp->pfd[i].fd = pp->children[i].process.err;
      |                           ^
_88 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:249:27: warning: use location
_88

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:249:37: warning: use location
  249 |         pp->pfd[i].fd = pp->children[i].process.err;
      |                                     ^
_91 = _88 + _90;
./benchmarks/git/use_after_free_2/git_uaf_2.c:249:37: warning: use location
_91

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:249:11: warning: use location
  249 |         pp->pfd[i].fd = pp->children[i].process.err;
      |           ^
_92 = pp_102(D)->pfd;
./benchmarks/git/use_after_free_2/git_uaf_2.c:249:11: warning: use location
_92

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:249:16: warning: use location
  249 |         pp->pfd[i].fd = pp->children[i].process.err;
      |                ^
_95 = _92 + _94;
./benchmarks/git/use_after_free_2/git_uaf_2.c:249:16: warning: use location
_95

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:start_command========= [0m
[40;46m =======add node_fun stack:start_command========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:pp_init========= [0m
[40;46m =======add node_fun stack:pp_init========= [0m
[40;44m =======trace_function_path pp_init  function_call count: 7 level :1========  [0m
 <ssa_name 0x7fdf6679d900
    type <pointer_type 0x7fdf662b4000
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662b6690>>
   
    def_stmt _12 = MEM[(char * *)argv_31(D) + 16B];
    version:12
    ptr-info 0x7fdf662c9ee8>
[40;36m ======= node_fun:pp_init========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: use location
  193 |         strbuf_init(&pp->buffered_output, 0);
      |         ^
_5 = &pp_34(D)->buffered_output;
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:32: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                ^
_6 = pp_34(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:32: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:42: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                          ^
_9 = _6 + _8;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:42: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                 ^
_10 = &_9->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:39: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                       ^
_11 = pp_34(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:39: warning: use location
_11

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:49: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                                 ^
_14 = _11 + _13;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:49: warning: use location
_14

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                 ^
_15 = &_14->process;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
_15

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:19: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                   ^
_16 = pp_34(D)->pfd;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:19: warning: use location
_16

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:24: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                        ^
_19 = _16 + _18;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:24: warning: use location
_19

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:19: warning: use location
  199 |                 pp->pfd[i].fd = -1;
      |                   ^
_20 = pp_34(D)->pfd;
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:19: warning: use location
_20

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:24: warning: use location
  199 |                 pp->pfd[i].fd = -1;
      |                        ^
_23 = _20 + _22;
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:24: warning: use location
_23

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;46m =======add node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;46m =======add node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;46m =======add node_fun stack:online_cpus========= [0m

 ================== trace ================== 
trace fucntion free:0 
exit (_19);
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:436:17: warning: use location
  436 |                 exit(run_processes_parallel(jobs, parallel_next,
      |                 ^
this stmt call this function :exit
trace fucntion name:exit 

 ================== trace ================== 
trace fucntion free:0 
_16 = run_processes_parallel (jobs_33, parallel_next, 0B, 0B, &proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:432:17: warning: use location
  432 |                 exit(run_processes_parallel(jobs, parallel_next,
      |                 ^
this stmt call this function :run_processes_parallel
trace fucntion name:run_processes_parallel 
[40;44m =======trace_function_path run_processes_parallel  function_call count: 7 level :0========  [0m
 <ssa_name 0x7fdf6679d900
    type <pointer_type 0x7fdf662b4000
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662b6690>>
   
    def_stmt _12 = MEM[(char * *)argv_31(D) + 16B];
    version:12
    ptr-info 0x7fdf662c9ee8>
[40;36m ======= node_fun:run_processes_parallel========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:pp_cleanup========= [0m
[40;46m =======add node_fun stack:pp_cleanup========= [0m
[40;42m =======pre add _ fucntion:kill_children========= [0m
[40;46m =======add node_fun stack:kill_children========= [0m
[40;44m =======trace_function_path kill_children  function_call count: 1 level :1========  [0m
 <ssa_name 0x7fdf6679d900
    type <pointer_type 0x7fdf662b4000
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662b6690>>
   
    def_stmt _12 = MEM[(char * *)argv_31(D) + 16B];
    version:12
    ptr-info 0x7fdf662c9ee8>
[40;36m ======= node_fun:kill_children========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘kill_children’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:258:23: warning: use location
  258 |                 if (pp->children[i].state == GIT_CP_WORKING)
      |                       ^
_1 = pp_15(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:258:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:258:33: warning: use location
  258 |                 if (pp->children[i].state == GIT_CP_WORKING)
      |                                 ^
_4 = _1 + _3;
./benchmarks/git/use_after_free_2/git_uaf_2.c:258:33: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:259:32: warning: use location
  259 |                         kill(pp->children[i].process.pid, signo);
      |                                ^
_6 = pp_15(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:259:32: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:259:42: warning: use location
  259 |                         kill(pp->children[i].process.pid, signo);
      |                                          ^
_9 = _6 + _8;
./benchmarks/git/use_after_free_2/git_uaf_2.c:259:42: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:kill========= [0m
[40;46m =======add node_fun stack:kill========= [0m
[40;42m =======pre add _ fucntion:pp_collect_finished========= [0m
[40;46m =======add node_fun stack:pp_collect_finished========= [0m
[40;44m =======trace_function_path pp_collect_finished  function_call count: 5 level :1========  [0m
 <ssa_name 0x7fdf6679d900
    type <pointer_type 0x7fdf662b4000
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662b6690>>
   
    def_stmt _12 = MEM[(char * *)argv_31(D) + 16B];
    version:12
    ptr-info 0x7fdf662c9ee8>
[40;36m ======= node_fun:pp_collect_finished========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘pp_collect_finished’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:270:31: warning: use location
  270 |                         if (pp->children[i].state == GIT_CP_WAIT_CLEANUP)
      |                               ^
_1 = pp_91(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:270:31: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:270:41: warning: use location
  270 |                         if (pp->children[i].state == GIT_CP_WAIT_CLEANUP)
      |                                         ^
_4 = _1 + _3;
./benchmarks/git/use_after_free_2/git_uaf_2.c:270:41: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:275:42: warning: use location
  275 |                 code = finish_command(&pp->children[i].process);
      |                                          ^
_8 = pp_91(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:275:42: warning: use location
_8

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:275:52: warning: use location
  275 |                 code = finish_command(&pp->children[i].process);
      |                                                    ^
_11 = _8 + _10;
./benchmarks/git/use_after_free_2/git_uaf_2.c:275:52: warning: use location
_11

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:275:24: warning: use location
  275 |                 code = finish_command(&pp->children[i].process);
      |                        ^
_12 = &_11->process;
./benchmarks/git/use_after_free_2/git_uaf_2.c:275:24: warning: use location
_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:277:26: warning: use location
  277 |                 code = pp->task_finished(code, &pp->children[i].process,
      |                          ^
_13 = pp_91(D)->task_finished;
./benchmarks/git/use_after_free_2/git_uaf_2.c:277:26: warning: use location
_13

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:279:45: warning: use location
  279 |                                          &pp->children[i].data);
      |                                             ^
_14 = pp_91(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:279:45: warning: use location
_14

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:279:55: warning: use location
  279 |                                          &pp->children[i].data);
      |                                                       ^
_17 = _14 + _16;
./benchmarks/git/use_after_free_2/git_uaf_2.c:279:55: warning: use location
_17

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:279:42: warning: use location
  279 |                                          &pp->children[i].data);
      |                                          ^
_18 = &_17->data;
./benchmarks/git/use_after_free_2/git_uaf_2.c:279:42: warning: use location
_18

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:277:24: warning: use location
  277 |                 code = pp->task_finished(code, &pp->children[i].process,
      |                        ^
_19 = pp_91(D)->data;
./benchmarks/git/use_after_free_2/git_uaf_2.c:277:24: warning: use location
_19

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:278:45: warning: use location
  278 |                                          &pp->children[i].err, pp->data,
      |                                             ^
_20 = pp_91(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:278:45: warning: use location
_20

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:278:55: warning: use location
  278 |                                          &pp->children[i].err, pp->data,
      |                                                       ^
_23 = _20 + _22;
./benchmarks/git/use_after_free_2/git_uaf_2.c:278:55: warning: use location
_23

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:277:24: warning: use location
  277 |                 code = pp->task_finished(code, &pp->children[i].process,
      |                        ^
_24 = &_23->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:277:24: warning: use location
_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:277:51: warning: use location
  277 |                 code = pp->task_finished(code, &pp->children[i].process,
      |                                                   ^
_25 = pp_91(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:277:51: warning: use location
_25

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:277:61: warning: use location
  277 |                 code = pp->task_finished(code, &pp->children[i].process,
      |                                                             ^
_28 = _25 + _27;
./benchmarks/git/use_after_free_2/git_uaf_2.c:277:61: warning: use location
_28

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:277:24: warning: use location
  277 |                 code = pp->task_finished(code, &pp->children[i].process,
      |                        ^
_29 = &_28->process;
./benchmarks/git/use_after_free_2/git_uaf_2.c:277:24: warning: use location
_29

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:287:19: warning: use location
  287 |                 pp->children[i].state = GIT_CP_FREE;
      |                   ^
_32 = pp_91(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:287:19: warning: use location
_32

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:287:29: warning: use location
  287 |                 pp->children[i].state = GIT_CP_FREE;
      |                             ^
_35 = _32 + _34;
./benchmarks/git/use_after_free_2/git_uaf_2.c:287:29: warning: use location
_35

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:288:19: warning: use location
  288 |                 pp->pfd[i].fd = -1;
      |                   ^
_36 = pp_91(D)->pfd;
./benchmarks/git/use_after_free_2/git_uaf_2.c:288:19: warning: use location
_36

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:288:24: warning: use location
  288 |                 pp->pfd[i].fd = -1;
      |                        ^
_39 = _36 + _38;
./benchmarks/git/use_after_free_2/git_uaf_2.c:288:24: warning: use location
_39

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:289:39: warning: use location
  289 |                 child_process_init(&pp->children[i].process);
      |                                       ^
_40 = pp_91(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:289:39: warning: use location
_40

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:289:49: warning: use location
  289 |                 child_process_init(&pp->children[i].process);
      |                                                 ^
_43 = _40 + _42;
./benchmarks/git/use_after_free_2/git_uaf_2.c:289:49: warning: use location
_43

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:289:17: warning: use location
  289 |                 child_process_init(&pp->children[i].process);
      |                 ^
_44 = &_43->process;
./benchmarks/git/use_after_free_2/git_uaf_2.c:289:17: warning: use location
_44

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:292:64: warning: use location
  292 |                         strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);
      |                                                                ^
_46 = pp_91(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:292:64: warning: use location
_46

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:292:74: warning: use location
  292 |                         strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);
      |                                                                          ^
_49 = _46 + _48;
./benchmarks/git/use_after_free_2/git_uaf_2.c:292:74: warning: use location
_49

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:292:25: warning: use location
  292 |                         strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);
      |                         ^
_50 = &_49->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:292:25: warning: use location
_50

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:292:25: warning: use location
_51 = &pp_91(D)->buffered_output;
./benchmarks/git/use_after_free_2/git_uaf_2.c:292:25: warning: use location
_51

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:293:41: warning: use location
  293 |                         strbuf_reset(&pp->children[i].err);
      |                                         ^
_52 = pp_91(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:293:41: warning: use location
_52

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:293:51: warning: use location
  293 |                         strbuf_reset(&pp->children[i].err);
      |                                                   ^
_55 = _52 + _54;
./benchmarks/git/use_after_free_2/git_uaf_2.c:293:51: warning: use location
_55

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:293:25: warning: use location
  293 |                         strbuf_reset(&pp->children[i].err);
      |                         ^
_56 = &_55->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:293:25: warning: use location
_56

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:295:33: warning: use location
  295 |                         fputs(pp->children[i].err.buf, stderr);
      |                                 ^
_58 = pp_91(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:295:33: warning: use location
_58

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:295:43: warning: use location
  295 |                         fputs(pp->children[i].err.buf, stderr);
      |                                           ^
_61 = _58 + _60;
./benchmarks/git/use_after_free_2/git_uaf_2.c:295:43: warning: use location
_61

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:295:50: warning: use location
  295 |                         fputs(pp->children[i].err.buf, stderr);
      |                                                  ^
_62 = _61->err.buf;
./benchmarks/git/use_after_free_2/git_uaf_2.c:295:50: warning: use location
_62

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:296:41: warning: use location
  296 |                         strbuf_reset(&pp->children[i].err);
      |                                         ^
_63 = pp_91(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:296:41: warning: use location
_63

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:296:51: warning: use location
  296 |                         strbuf_reset(&pp->children[i].err);
      |                                                   ^
_66 = _63 + _65;
./benchmarks/git/use_after_free_2/git_uaf_2.c:296:51: warning: use location
_66

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:296:25: warning: use location
  296 |                         strbuf_reset(&pp->children[i].err);
      |                         ^
_67 = &_66->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:296:25: warning: use location
_67

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:299:50: warning: use location
  299 |                         fputs(pp->buffered_output.buf, stderr);
      |                                                  ^
_69 = pp_91(D)->buffered_output.buf;
./benchmarks/git/use_after_free_2/git_uaf_2.c:299:50: warning: use location
_69

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:300:25: warning: use location
  300 |                         strbuf_reset(&pp->buffered_output);
      |                         ^
_70 = &pp_91(D)->buffered_output;
./benchmarks/git/use_after_free_2/git_uaf_2.c:300:25: warning: use location
_70

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:311:39: warning: use location
  311 |                                 if (pp->children[(pp->output_owner + i) % n].state == GIT_CP_WORKING)
      |                                       ^
_71 = pp_91(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:311:39: warning: use location
_71

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:311:49: warning: use location
  311 |                                 if (pp->children[(pp->output_owner + i) % n].state == GIT_CP_WORKING)
      |                                                 ^
_77 = _71 + _76;
./benchmarks/git/use_after_free_2/git_uaf_2.c:311:49: warning: use location
_77

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:fputs========= [0m
[40;46m =======add node_fun stack:fputs========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:finish_command========= [0m
[40;46m =======add node_fun stack:finish_command========= [0m
[40;44m =======trace_function_path finish_command  function_call count: 2 level :2========  [0m
 <ssa_name 0x7fdf6679d900
    type <pointer_type 0x7fdf662b4000
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662b6690>>
   
    def_stmt _12 = MEM[(char * *)argv_31(D) + 16B];
    version:12
    ptr-info 0x7fdf662c9ee8>
[40;36m ======= node_fun:finish_command========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘finish_command’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:42: warning: use location
  321 |     int ret = wait_or_whine(cmd->pid, cmd->argv[0], 0);
      |                                          ^
_1 = cmd_5(D)->argv;
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:42: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:15: warning: use location
  321 |     int ret = wait_or_whine(cmd->pid, cmd->argv[0], 0);
      |               ^
_2 = *_1;
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:15: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_clear========= [0m
[40;46m =======add node_fun stack:child_process_clear========= [0m
[40;44m =======trace_function_path child_process_clear  function_call count: 1 level :3========  [0m
 <ssa_name 0x7fdf6679d900
    type <pointer_type 0x7fdf662b4000
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662b6690>>
   
    def_stmt _12 = MEM[(char * *)argv_31(D) + 16B];
    version:12
    ptr-info 0x7fdf662c9ee8>
[40;36m ======= node_fun:child_process_clear========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘child_process_clear’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:328:9: warning: use location
  328 |         argv_array_clear(&child->args);
      |         ^
_1 = &child_3(D)->args;
./benchmarks/git/use_after_free_2/git_uaf_2.c:328:9: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:329:9: warning: use location
  329 |         argv_array_clear(&child->env_array);
      |         ^
_2 = &child_3(D)->env_array;
./benchmarks/git/use_after_free_2/git_uaf_2.c:329:9: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;46m =======add node_fun stack:wait_or_whine========= [0m
[40;42m =======pre add _ fucntion:pp_output========= [0m
[40;46m =======add node_fun stack:pp_output========= [0m
[40;42m =======pre add _ fucntion:pp_buffer_stderr========= [0m
[40;46m =======add node_fun stack:pp_buffer_stderr========= [0m
[40;42m =======pre add _ fucntion:pp_start_one========= [0m
[40;46m =======add node_fun stack:pp_start_one========= [0m
[40;44m =======trace_function_path pp_start_one  function_call count: 5 level :1========  [0m
 <ssa_name 0x7fdf6679d900
    type <pointer_type 0x7fdf662b4000
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662b6690>>
   
    def_stmt _12 = MEM[(char * *)argv_31(D) + 16B];
    version:12
    ptr-info 0x7fdf662c9ee8>
[40;36m ======= node_fun:pp_start_one========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘pp_start_one’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:217:23: warning: use location
  217 |                 if (pp->children[i].state == GIT_CP_FREE)
      |                       ^
_1 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:217:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:217:33: warning: use location
  217 |                 if (pp->children[i].state == GIT_CP_FREE)
      |                                 ^
_4 = _1 + _3;
./benchmarks/git/use_after_free_2/git_uaf_2.c:217:33: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:222:18: warning: use location
  222 |         code = pp->get_next_task(&pp->children[i].process,
      |                  ^
_8 = pp_102(D)->get_next_task;
./benchmarks/git/use_after_free_2/git_uaf_2.c:222:18: warning: use location
_8

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:225:37: warning: use location
  225 |                                  &pp->children[i].data);
      |                                     ^
_9 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:225:37: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:225:47: warning: use location
  225 |                                  &pp->children[i].data);
      |                                               ^
_12 = _9 + _11;
./benchmarks/git/use_after_free_2/git_uaf_2.c:225:47: warning: use location
_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:222:16: warning: use location
  222 |         code = pp->get_next_task(&pp->children[i].process,
      |                ^
_13 = &_12->data;
./benchmarks/git/use_after_free_2/git_uaf_2.c:222:16: warning: use location
_13

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:222:16: warning: use location
_14 = pp_102(D)->data;
./benchmarks/git/use_after_free_2/git_uaf_2.c:222:16: warning: use location
_14

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:223:37: warning: use location
  223 |                                  &pp->children[i].err,
      |                                     ^
_15 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:223:37: warning: use location
_15

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:223:47: warning: use location
  223 |                                  &pp->children[i].err,
      |                                               ^
_18 = _15 + _17;
./benchmarks/git/use_after_free_2/git_uaf_2.c:223:47: warning: use location
_18

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:222:16: warning: use location
  222 |         code = pp->get_next_task(&pp->children[i].process,
      |                ^
_19 = &_18->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:222:16: warning: use location
_19

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:222:37: warning: use location
  222 |         code = pp->get_next_task(&pp->children[i].process,
      |                                     ^
_20 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:222:37: warning: use location
_20

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:222:47: warning: use location
  222 |         code = pp->get_next_task(&pp->children[i].process,
      |                                               ^
_23 = _20 + _22;
./benchmarks/git/use_after_free_2/git_uaf_2.c:222:47: warning: use location
_23

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:222:16: warning: use location
  222 |         code = pp->get_next_task(&pp->children[i].process,
      |                ^
_24 = &_23->process;
./benchmarks/git/use_after_free_2/git_uaf_2.c:222:16: warning: use location
_24

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:227:56: warning: use location
  227 |                 strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);
      |                                                        ^
_25 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:227:56: warning: use location
_25

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:227:66: warning: use location
  227 |                 strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);
      |                                                                  ^
_28 = _25 + _27;
./benchmarks/git/use_after_free_2/git_uaf_2.c:227:66: warning: use location
_28

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:227:17: warning: use location
  227 |                 strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);
      |                 ^
_29 = &_28->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:227:17: warning: use location
_29

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:227:17: warning: use location
_30 = &pp_102(D)->buffered_output;
./benchmarks/git/use_after_free_2/git_uaf_2.c:227:17: warning: use location
_30

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:228:33: warning: use location
  228 |                 strbuf_reset(&pp->children[i].err);
      |                                 ^
_31 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:228:33: warning: use location
_31

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:228:43: warning: use location
  228 |                 strbuf_reset(&pp->children[i].err);
      |                                           ^
_34 = _31 + _33;
./benchmarks/git/use_after_free_2/git_uaf_2.c:228:43: warning: use location
_34

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:228:17: warning: use location
  228 |                 strbuf_reset(&pp->children[i].err);
      |                 ^
_35 = &_34->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:228:17: warning: use location
_35

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:231:11: warning: use location
  231 |         pp->children[i].process.err = -1;
      |           ^
_36 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:231:11: warning: use location
_36

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:231:21: warning: use location
  231 |         pp->children[i].process.err = -1;
      |                     ^
_39 = _36 + _38;
./benchmarks/git/use_after_free_2/git_uaf_2.c:231:21: warning: use location
_39

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:232:11: warning: use location
  232 |         pp->children[i].process.stdout_to_stderr = 1;
      |           ^
_40 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:232:11: warning: use location
_40

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:232:21: warning: use location
  232 |         pp->children[i].process.stdout_to_stderr = 1;
      |                     ^
_43 = _40 + _42;
./benchmarks/git/use_after_free_2/git_uaf_2.c:232:21: warning: use location
_43

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:233:11: warning: use location
  233 |         pp->children[i].process.no_stdin = 1;
      |           ^
_44 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:233:11: warning: use location
_44

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:233:21: warning: use location
  233 |         pp->children[i].process.no_stdin = 1;
      |                     ^
_47 = _44 + _46;
./benchmarks/git/use_after_free_2/git_uaf_2.c:233:21: warning: use location
_47

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:235:30: warning: use location
  235 |         if (start_command(&pp->children[i].process)) {
      |                              ^
_48 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:235:30: warning: use location
_48

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:235:40: warning: use location
  235 |         if (start_command(&pp->children[i].process)) {
      |                                        ^
_51 = _48 + _50;
./benchmarks/git/use_after_free_2/git_uaf_2.c:235:40: warning: use location
_51

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:235:13: warning: use location
  235 |         if (start_command(&pp->children[i].process)) {
      |             ^
_52 = &_51->process;
./benchmarks/git/use_after_free_2/git_uaf_2.c:235:13: warning: use location
_52

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:236:26: warning: use location
  236 |                 code = pp->start_failure(&pp->children[i].process,
      |                          ^
_54 = pp_102(D)->start_failure;
./benchmarks/git/use_after_free_2/git_uaf_2.c:236:26: warning: use location
_54

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:239:45: warning: use location
  239 |                                          &pp->children[i].data);
      |                                             ^
_55 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:239:45: warning: use location
_55

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:239:55: warning: use location
  239 |                                          &pp->children[i].data);
      |                                                       ^
_58 = _55 + _57;
./benchmarks/git/use_after_free_2/git_uaf_2.c:239:55: warning: use location
_58

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:239:42: warning: use location
  239 |                                          &pp->children[i].data);
      |                                          ^
_59 = &_58->data;
./benchmarks/git/use_after_free_2/git_uaf_2.c:239:42: warning: use location
_59

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:236:24: warning: use location
  236 |                 code = pp->start_failure(&pp->children[i].process,
      |                        ^
_60 = pp_102(D)->data;
./benchmarks/git/use_after_free_2/git_uaf_2.c:236:24: warning: use location
_60

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:237:45: warning: use location
  237 |                                          &pp->children[i].err,
      |                                             ^
_61 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:237:45: warning: use location
_61

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:237:55: warning: use location
  237 |                                          &pp->children[i].err,
      |                                                       ^
_64 = _61 + _63;
./benchmarks/git/use_after_free_2/git_uaf_2.c:237:55: warning: use location
_64

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:236:24: warning: use location
  236 |                 code = pp->start_failure(&pp->children[i].process,
      |                        ^
_65 = &_64->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:236:24: warning: use location
_65

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:236:45: warning: use location
  236 |                 code = pp->start_failure(&pp->children[i].process,
      |                                             ^
_66 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:236:45: warning: use location
_66

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:236:55: warning: use location
  236 |                 code = pp->start_failure(&pp->children[i].process,
      |                                                       ^
_69 = _66 + _68;
./benchmarks/git/use_after_free_2/git_uaf_2.c:236:55: warning: use location
_69

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:236:24: warning: use location
  236 |                 code = pp->start_failure(&pp->children[i].process,
      |                        ^
_70 = &_69->process;
./benchmarks/git/use_after_free_2/git_uaf_2.c:236:24: warning: use location
_70

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:240:56: warning: use location
  240 |                 strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);
      |                                                        ^
_71 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:240:56: warning: use location
_71

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:240:66: warning: use location
  240 |                 strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);
      |                                                                  ^
_74 = _71 + _73;
./benchmarks/git/use_after_free_2/git_uaf_2.c:240:66: warning: use location
_74

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:240:17: warning: use location
  240 |                 strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);
      |                 ^
_75 = &_74->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:240:17: warning: use location
_75

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:240:17: warning: use location
_76 = &pp_102(D)->buffered_output;
./benchmarks/git/use_after_free_2/git_uaf_2.c:240:17: warning: use location
_76

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:241:33: warning: use location
  241 |                 strbuf_reset(&pp->children[i].err);
      |                                 ^
_77 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:241:33: warning: use location
_77

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:241:43: warning: use location
  241 |                 strbuf_reset(&pp->children[i].err);
      |                                           ^
_80 = _77 + _79;
./benchmarks/git/use_after_free_2/git_uaf_2.c:241:43: warning: use location
_80

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:241:17: warning: use location
  241 |                 strbuf_reset(&pp->children[i].err);
      |                 ^
_81 = &_80->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:241:17: warning: use location
_81

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:248:11: warning: use location
  248 |         pp->children[i].state = GIT_CP_WORKING;
      |           ^
_84 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:248:11: warning: use location
_84

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:248:21: warning: use location
  248 |         pp->children[i].state = GIT_CP_WORKING;
      |                     ^
_87 = _84 + _86;
./benchmarks/git/use_after_free_2/git_uaf_2.c:248:21: warning: use location
_87

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:249:27: warning: use location
  249 |         pp->pfd[i].fd = pp->children[i].process.err;
      |                           ^
_88 = pp_102(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:249:27: warning: use location
_88

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:249:37: warning: use location
  249 |         pp->pfd[i].fd = pp->children[i].process.err;
      |                                     ^
_91 = _88 + _90;
./benchmarks/git/use_after_free_2/git_uaf_2.c:249:37: warning: use location
_91

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:249:11: warning: use location
  249 |         pp->pfd[i].fd = pp->children[i].process.err;
      |           ^
_92 = pp_102(D)->pfd;
./benchmarks/git/use_after_free_2/git_uaf_2.c:249:11: warning: use location
_92

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:249:16: warning: use location
  249 |         pp->pfd[i].fd = pp->children[i].process.err;
      |                ^
_95 = _92 + _94;
./benchmarks/git/use_after_free_2/git_uaf_2.c:249:16: warning: use location
_95

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:start_command========= [0m
[40;46m =======add node_fun stack:start_command========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:pp_init========= [0m
[40;46m =======add node_fun stack:pp_init========= [0m
[40;44m =======trace_function_path pp_init  function_call count: 7 level :1========  [0m
 <ssa_name 0x7fdf6679d900
    type <pointer_type 0x7fdf662b4000
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662b6690>>
   
    def_stmt _12 = MEM[(char * *)argv_31(D) + 16B];
    version:12
    ptr-info 0x7fdf662c9ee8>
[40;36m ======= node_fun:pp_init========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: use location
  193 |         strbuf_init(&pp->buffered_output, 0);
      |         ^
_5 = &pp_34(D)->buffered_output;
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:32: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                ^
_6 = pp_34(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:32: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:42: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                          ^
_9 = _6 + _8;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:42: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                 ^
_10 = &_9->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:39: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                       ^
_11 = pp_34(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:39: warning: use location
_11

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:49: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                                 ^
_14 = _11 + _13;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:49: warning: use location
_14

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                 ^
_15 = &_14->process;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
_15

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:19: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                   ^
_16 = pp_34(D)->pfd;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:19: warning: use location
_16

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:24: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                        ^
_19 = _16 + _18;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:24: warning: use location
_19

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:19: warning: use location
  199 |                 pp->pfd[i].fd = -1;
      |                   ^
_20 = pp_34(D)->pfd;
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:19: warning: use location
_20

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:24: warning: use location
  199 |                 pp->pfd[i].fd = -1;
      |                        ^
_23 = _20 + _22;
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:24: warning: use location
_23

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;46m =======add node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;46m =======add node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;46m =======add node_fun stack:online_cpus========= [0m

 ================== trace ================== 
trace fucntion free:0 
exit (_16);
In function ‘main’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:432:17: warning: use location
  432 |                 exit(run_processes_parallel(jobs, parallel_next,
      |                 ^
this stmt call this function :exit
trace fucntion name:exit 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf6679d900
    type <pointer_type 0x7fdf662b4000
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662b6690>>
   
    def_stmt _12 = MEM[(char * *)argv_31(D) + 16B];
    version:12
    ptr-info 0x7fdf662c9ee8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf6679dd38
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf6703dea0 jobs>
    def_stmt jobs_33 = atoi (_12);
    version:33>
 <ssa_name 0x7fdf6679dd38
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf6703dea0 jobs>
    def_stmt jobs_33 = atoi (_12);
    version:33>

 ================== pre trace ptable ================== 
trace fucntion name:atoi 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf6679dd38
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf6703dea0 jobs>
    def_stmt jobs_33 = atoi (_12);
    version:33>
is Other function atoi
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_39>
jobs_33 = atoi (_12);
jobs_33 = atoi (_12);
./benchmarks/git/use_after_free_2/git_uaf_2.c:428:16: warning: use location
  428 |         jobs = atoi(argv[2]);
      |                ^
this stmt call this function :atoi
trace fucntion name:atoi 

 ================== trace ================== 
trace fucntion free:0 
_22 = run_processes_parallel (jobs_33, no_job, 0B, task_finished, &proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:440:17: warning: use location
  440 |                 exit(run_processes_parallel(jobs, no_job,
      |                 ^
this stmt call this function :run_processes_parallel
trace fucntion name:run_processes_parallel 
[40;44m =======trace_function_path run_processes_parallel  function_call count: 7 level :0========  [0m
 <ssa_name 0x7fdf6679dd38
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf6703dea0 jobs>
    def_stmt jobs_33 = atoi (_12);
    version:33>
[40;36m ======= node_fun:run_processes_parallel========= [0m
[40;36m ======= find relate stmt with jobs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:pp_cleanup========= [0m
[40;46m =======add node_fun stack:pp_cleanup========= [0m
[40;42m =======pre add _ fucntion:kill_children========= [0m
[40;46m =======add node_fun stack:kill_children========= [0m
[40;44m =======trace_function_path kill_children  function_call count: 1 level :1========  [0m
 <ssa_name 0x7fdf6679dd38
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf6703dea0 jobs>
    def_stmt jobs_33 = atoi (_12);
    version:33>
[40;36m ======= node_fun:kill_children========= [0m
[40;36m ======= find relate stmt with jobs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:kill========= [0m
[40;46m =======add node_fun stack:kill========= [0m
[40;42m =======pre add _ fucntion:pp_collect_finished========= [0m
[40;46m =======add node_fun stack:pp_collect_finished========= [0m
[40;44m =======trace_function_path pp_collect_finished  function_call count: 5 level :1========  [0m
 <ssa_name 0x7fdf6679dd38
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf6703dea0 jobs>
    def_stmt jobs_33 = atoi (_12);
    version:33>
[40;36m ======= node_fun:pp_collect_finished========= [0m
[40;36m ======= find relate stmt with jobs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:fputs========= [0m
[40;46m =======add node_fun stack:fputs========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:finish_command========= [0m
[40;46m =======add node_fun stack:finish_command========= [0m
[40;44m =======trace_function_path finish_command  function_call count: 2 level :2========  [0m
 <ssa_name 0x7fdf6679dd38
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf6703dea0 jobs>
    def_stmt jobs_33 = atoi (_12);
    version:33>
[40;36m ======= node_fun:finish_command========= [0m
[40;36m ======= find relate stmt with jobs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_clear========= [0m
[40;46m =======add node_fun stack:child_process_clear========= [0m
[40;44m =======trace_function_path child_process_clear  function_call count: 1 level :3========  [0m
 <ssa_name 0x7fdf6679dd38
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf6703dea0 jobs>
    def_stmt jobs_33 = atoi (_12);
    version:33>
[40;36m ======= node_fun:child_process_clear========= [0m
[40;36m ======= find relate stmt with jobs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;46m =======add node_fun stack:wait_or_whine========= [0m
[40;42m =======pre add _ fucntion:pp_output========= [0m
[40;46m =======add node_fun stack:pp_output========= [0m
[40;42m =======pre add _ fucntion:pp_buffer_stderr========= [0m
[40;46m =======add node_fun stack:pp_buffer_stderr========= [0m
[40;42m =======pre add _ fucntion:pp_start_one========= [0m
[40;46m =======add node_fun stack:pp_start_one========= [0m
[40;44m =======trace_function_path pp_start_one  function_call count: 5 level :1========  [0m
 <ssa_name 0x7fdf6679dd38
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf6703dea0 jobs>
    def_stmt jobs_33 = atoi (_12);
    version:33>
[40;36m ======= node_fun:pp_start_one========= [0m
[40;36m ======= find relate stmt with jobs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:start_command========= [0m
[40;46m =======add node_fun stack:start_command========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:pp_init========= [0m
[40;46m =======add node_fun stack:pp_init========= [0m
[40;44m =======trace_function_path pp_init  function_call count: 7 level :1========  [0m
 <ssa_name 0x7fdf6679dd38
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf6703dea0 jobs>
    def_stmt jobs_33 = atoi (_12);
    version:33>
[40;36m ======= node_fun:pp_init========= [0m
[40;36m ======= find relate stmt with jobs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;46m =======add node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;46m =======add node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;46m =======add node_fun stack:online_cpus========= [0m

 ================== trace ================== 
trace fucntion free:0 
exit (_22);
./benchmarks/git/use_after_free_2/git_uaf_2.c:440:17: warning: use location
this stmt call this function :exit
trace fucntion name:exit 

 ================== trace ================== 
trace fucntion free:0 
_19 = run_processes_parallel (jobs_33, parallel_next, 0B, task_finished, &proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:436:17: warning: use location
  436 |                 exit(run_processes_parallel(jobs, parallel_next,
      |                 ^
this stmt call this function :run_processes_parallel
trace fucntion name:run_processes_parallel 
[40;44m =======trace_function_path run_processes_parallel  function_call count: 7 level :0========  [0m
 <ssa_name 0x7fdf6679dd38
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf6703dea0 jobs>
    def_stmt jobs_33 = atoi (_12);
    version:33>
[40;36m ======= node_fun:run_processes_parallel========= [0m
[40;36m ======= find relate stmt with jobs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:pp_cleanup========= [0m
[40;46m =======add node_fun stack:pp_cleanup========= [0m
[40;42m =======pre add _ fucntion:kill_children========= [0m
[40;46m =======add node_fun stack:kill_children========= [0m
[40;44m =======trace_function_path kill_children  function_call count: 1 level :1========  [0m
 <ssa_name 0x7fdf6679dd38
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf6703dea0 jobs>
    def_stmt jobs_33 = atoi (_12);
    version:33>
[40;36m ======= node_fun:kill_children========= [0m
[40;36m ======= find relate stmt with jobs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:kill========= [0m
[40;46m =======add node_fun stack:kill========= [0m
[40;42m =======pre add _ fucntion:pp_collect_finished========= [0m
[40;46m =======add node_fun stack:pp_collect_finished========= [0m
[40;44m =======trace_function_path pp_collect_finished  function_call count: 5 level :1========  [0m
 <ssa_name 0x7fdf6679dd38
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf6703dea0 jobs>
    def_stmt jobs_33 = atoi (_12);
    version:33>
[40;36m ======= node_fun:pp_collect_finished========= [0m
[40;36m ======= find relate stmt with jobs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:fputs========= [0m
[40;46m =======add node_fun stack:fputs========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:finish_command========= [0m
[40;46m =======add node_fun stack:finish_command========= [0m
[40;44m =======trace_function_path finish_command  function_call count: 2 level :2========  [0m
 <ssa_name 0x7fdf6679dd38
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf6703dea0 jobs>
    def_stmt jobs_33 = atoi (_12);
    version:33>
[40;36m ======= node_fun:finish_command========= [0m
[40;36m ======= find relate stmt with jobs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_clear========= [0m
[40;46m =======add node_fun stack:child_process_clear========= [0m
[40;44m =======trace_function_path child_process_clear  function_call count: 1 level :3========  [0m
 <ssa_name 0x7fdf6679dd38
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf6703dea0 jobs>
    def_stmt jobs_33 = atoi (_12);
    version:33>
[40;36m ======= node_fun:child_process_clear========= [0m
[40;36m ======= find relate stmt with jobs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;46m =======add node_fun stack:wait_or_whine========= [0m
[40;42m =======pre add _ fucntion:pp_output========= [0m
[40;46m =======add node_fun stack:pp_output========= [0m
[40;42m =======pre add _ fucntion:pp_buffer_stderr========= [0m
[40;46m =======add node_fun stack:pp_buffer_stderr========= [0m
[40;42m =======pre add _ fucntion:pp_start_one========= [0m
[40;46m =======add node_fun stack:pp_start_one========= [0m
[40;44m =======trace_function_path pp_start_one  function_call count: 5 level :1========  [0m
 <ssa_name 0x7fdf6679dd38
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf6703dea0 jobs>
    def_stmt jobs_33 = atoi (_12);
    version:33>
[40;36m ======= node_fun:pp_start_one========= [0m
[40;36m ======= find relate stmt with jobs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:start_command========= [0m
[40;46m =======add node_fun stack:start_command========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:pp_init========= [0m
[40;46m =======add node_fun stack:pp_init========= [0m
[40;44m =======trace_function_path pp_init  function_call count: 7 level :1========  [0m
 <ssa_name 0x7fdf6679dd38
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf6703dea0 jobs>
    def_stmt jobs_33 = atoi (_12);
    version:33>
[40;36m ======= node_fun:pp_init========= [0m
[40;36m ======= find relate stmt with jobs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;46m =======add node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;46m =======add node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;46m =======add node_fun stack:online_cpus========= [0m

 ================== trace ================== 
trace fucntion free:0 
exit (_19);
./benchmarks/git/use_after_free_2/git_uaf_2.c:436:17: warning: use location
this stmt call this function :exit
trace fucntion name:exit 

 ================== trace ================== 
trace fucntion free:0 
_16 = run_processes_parallel (jobs_33, parallel_next, 0B, 0B, &proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:432:17: warning: use location
  432 |                 exit(run_processes_parallel(jobs, parallel_next,
      |                 ^
this stmt call this function :run_processes_parallel
trace fucntion name:run_processes_parallel 
[40;44m =======trace_function_path run_processes_parallel  function_call count: 7 level :0========  [0m
 <ssa_name 0x7fdf6679dd38
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf6703dea0 jobs>
    def_stmt jobs_33 = atoi (_12);
    version:33>
[40;36m ======= node_fun:run_processes_parallel========= [0m
[40;36m ======= find relate stmt with jobs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:pp_cleanup========= [0m
[40;46m =======add node_fun stack:pp_cleanup========= [0m
[40;42m =======pre add _ fucntion:kill_children========= [0m
[40;46m =======add node_fun stack:kill_children========= [0m
[40;44m =======trace_function_path kill_children  function_call count: 1 level :1========  [0m
 <ssa_name 0x7fdf6679dd38
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf6703dea0 jobs>
    def_stmt jobs_33 = atoi (_12);
    version:33>
[40;36m ======= node_fun:kill_children========= [0m
[40;36m ======= find relate stmt with jobs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:kill========= [0m
[40;46m =======add node_fun stack:kill========= [0m
[40;42m =======pre add _ fucntion:pp_collect_finished========= [0m
[40;46m =======add node_fun stack:pp_collect_finished========= [0m
[40;44m =======trace_function_path pp_collect_finished  function_call count: 5 level :1========  [0m
 <ssa_name 0x7fdf6679dd38
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf6703dea0 jobs>
    def_stmt jobs_33 = atoi (_12);
    version:33>
[40;36m ======= node_fun:pp_collect_finished========= [0m
[40;36m ======= find relate stmt with jobs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:fputs========= [0m
[40;46m =======add node_fun stack:fputs========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:finish_command========= [0m
[40;46m =======add node_fun stack:finish_command========= [0m
[40;44m =======trace_function_path finish_command  function_call count: 2 level :2========  [0m
 <ssa_name 0x7fdf6679dd38
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf6703dea0 jobs>
    def_stmt jobs_33 = atoi (_12);
    version:33>
[40;36m ======= node_fun:finish_command========= [0m
[40;36m ======= find relate stmt with jobs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_clear========= [0m
[40;46m =======add node_fun stack:child_process_clear========= [0m
[40;44m =======trace_function_path child_process_clear  function_call count: 1 level :3========  [0m
 <ssa_name 0x7fdf6679dd38
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf6703dea0 jobs>
    def_stmt jobs_33 = atoi (_12);
    version:33>
[40;36m ======= node_fun:child_process_clear========= [0m
[40;36m ======= find relate stmt with jobs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;46m =======add node_fun stack:wait_or_whine========= [0m
[40;42m =======pre add _ fucntion:pp_output========= [0m
[40;46m =======add node_fun stack:pp_output========= [0m
[40;42m =======pre add _ fucntion:pp_buffer_stderr========= [0m
[40;46m =======add node_fun stack:pp_buffer_stderr========= [0m
[40;42m =======pre add _ fucntion:pp_start_one========= [0m
[40;46m =======add node_fun stack:pp_start_one========= [0m
[40;44m =======trace_function_path pp_start_one  function_call count: 5 level :1========  [0m
 <ssa_name 0x7fdf6679dd38
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf6703dea0 jobs>
    def_stmt jobs_33 = atoi (_12);
    version:33>
[40;36m ======= node_fun:pp_start_one========= [0m
[40;36m ======= find relate stmt with jobs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:start_command========= [0m
[40;46m =======add node_fun stack:start_command========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:pp_init========= [0m
[40;46m =======add node_fun stack:pp_init========= [0m
[40;44m =======trace_function_path pp_init  function_call count: 7 level :1========  [0m
 <ssa_name 0x7fdf6679dd38
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf6703dea0 jobs>
    def_stmt jobs_33 = atoi (_12);
    version:33>
[40;36m ======= node_fun:pp_init========= [0m
[40;36m ======= find relate stmt with jobs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;46m =======add node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;46m =======add node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;46m =======add node_fun stack:online_cpus========= [0m

 ================== trace ================== 
trace fucntion free:0 
exit (_16);
./benchmarks/git/use_after_free_2/git_uaf_2.c:432:17: warning: use location
this stmt call this function :exit
trace fucntion name:exit 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf6679dd38
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf6703dea0 jobs>
    def_stmt jobs_33 = atoi (_12);
    version:33>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf6679d990
    type <pointer_type 0x7fdf662b4000
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662b6690>>
   
    def_stmt _14 = MEM[(char * *)argv_31(D) + 8B];
    version:14
    ptr-info 0x7fdf662c9f18>
 <ssa_name 0x7fdf6679d990
    type <pointer_type 0x7fdf662b4000
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662b6690>>
   
    def_stmt _14 = MEM[(char * *)argv_31(D) + 8B];
    version:14
    ptr-info 0x7fdf662c9f18>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf6679d990
    type <pointer_type 0x7fdf662b4000
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662b6690>>
   
    def_stmt _14 = MEM[(char * *)argv_31(D) + 8B];
    version:14
    ptr-info 0x7fdf662c9f18>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_40>
_15 = strcmp (_14, "run-command-parallel");
_15 = strcmp (_14, "run-command-parallel");
./benchmarks/git/use_after_free_2/git_uaf_2.c:431:14: warning: use location
  431 |         if (!strcmp(argv[1], "run-command-parallel"))
      |              ^
this stmt call this function :strcmp
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:0 
if (_15 == 0)
./benchmarks/git/use_after_free_2/git_uaf_2.c:431:12: warning: use location
  431 |         if (!strcmp(argv[1], "run-command-parallel"))
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf6679d990
    type <pointer_type 0x7fdf662b4000
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662b6690>>
   
    def_stmt _14 = MEM[(char * *)argv_31(D) + 8B];
    version:14
    ptr-info 0x7fdf662c9f18>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <string_cst 0x7fdf66793c30
    type <array_type 0x7fdf662bf738
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        BLK
        size <integer_cst 0x7fdf662a4d68 constant 168>
        unit-size <integer_cst 0x7fdf662a4d50 constant 21>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7fdf662bf690 type <integer_type 0x7fdf667aa000 sizetype>
            DI
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa738 precision:64 min <integer_cst 0x7fdf66795be8 0> max <integer_cst 0x7fdf662a4888 20>>
        pointer_to_this <pointer_type 0x7fdf662bf7e0>>
    readonly constant static "run-command-parallel\000">

dot graph START

======================================================================
 <ssa_name 0x7fdf6679d9d8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _15 = strcmp (_14, "run-command-parallel");
    version:15>
 <ssa_name 0x7fdf6679d9d8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _15 = strcmp (_14, "run-command-parallel");
    version:15>

 ================== pre trace ptable ================== 
trace fucntion name:strcmp 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf6679d9d8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _15 = strcmp (_14, "run-command-parallel");
    version:15>
is Other function strcmp
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_40>
_15 = strcmp (_14, "run-command-parallel");
_15 = strcmp (_14, "run-command-parallel");
./benchmarks/git/use_after_free_2/git_uaf_2.c:431:14: warning: use location
  431 |         if (!strcmp(argv[1], "run-command-parallel"))
      |              ^
this stmt call this function :strcmp
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:0 
if (_15 == 0)
./benchmarks/git/use_after_free_2/git_uaf_2.c:431:12: warning: use location
  431 |         if (!strcmp(argv[1], "run-command-parallel"))
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf6679d9d8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _15 = strcmp (_14, "run-command-parallel");
    version:15>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <function_decl 0x7fdf662b9300 parallel_next
    type <function_type 0x7fdf662ad540
        type <integer_type 0x7fdf667aa5e8 int public SI
            size <integer_cst 0x7fdf66795df8 constant 32>
            unit-size <integer_cst 0x7fdf66795e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
            pointer_to_this <pointer_type 0x7fdf667b19d8>>
        QI
        size <integer_cst 0x7fdf66795ca8 constant 8>
        unit-size <integer_cst 0x7fdf66795cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7fdf662af618 value <pointer_type 0x7fdf662adbd0>
            chain <tree_list 0x7fdf662af5f0 value <pointer_type 0x7fdf662ada80>
                chain <tree_list 0x7fdf662af5c8 value <pointer_type 0x7fdf667b1000>
                    chain <tree_list 0x7fdf662af5a0 value <pointer_type 0x7fdf662ad498>
                        chain <tree_list 0x7fdf667a9b18 value <void_type 0x7fdf667aaf18 void>>>>>>
        pointer_to_this <pointer_type 0x7fdf662ad5e8>>
    addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/git/use_after_free_2/git_uaf_2.c:376:12 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c> initial <block 0x7fdf662cb3c0>
    result <result_decl 0x7fdf667a03c0 D.4553 type <integer_type 0x7fdf667aa5e8 int>
        ignored SI ./benchmarks/git/use_after_free_2/git_uaf_2.c:376:12 size <integer_cst 0x7fdf66795df8 32> unit-size <integer_cst 0x7fdf66795e10 4>
        align:32 warn_if_not_align:0 context <function_decl 0x7fdf662b9300 parallel_next>>
    arguments <parm_decl 0x7fdf662c3800 cp
        type <pointer_type 0x7fdf662bb7e0 type <record_type 0x7fdf662bb738 child_process>
            public unsigned DI
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
        unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:376:48 size <integer_cst 0x7fdf66795bb8 64> unit-size <integer_cst 0x7fdf66795bd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9300 parallel_next> arg-type <pointer_type 0x7fdf662bb7e0>
        chain <parm_decl 0x7fdf662c3880 err type <pointer_type 0x7fdf662bb888>
            unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:377:20 size <integer_cst 0x7fdf66795bb8 64> unit-size <integer_cst 0x7fdf66795bd0 8>
            align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9300 parallel_next> arg-type <pointer_type 0x7fdf662bb888> chain <parm_decl 0x7fdf662c3900 cb>>>
    struct-function 0x7fdf662cc228>
 <function_decl 0x7fdf662b9300 parallel_next
    type <function_type 0x7fdf662ad540
        type <integer_type 0x7fdf667aa5e8 int public SI
            size <integer_cst 0x7fdf66795df8 constant 32>
            unit-size <integer_cst 0x7fdf66795e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
            pointer_to_this <pointer_type 0x7fdf667b19d8>>
        QI
        size <integer_cst 0x7fdf66795ca8 constant 8>
        unit-size <integer_cst 0x7fdf66795cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7fdf662af618 value <pointer_type 0x7fdf662adbd0>
            chain <tree_list 0x7fdf662af5f0 value <pointer_type 0x7fdf662ada80>
                chain <tree_list 0x7fdf662af5c8 value <pointer_type 0x7fdf667b1000>
                    chain <tree_list 0x7fdf662af5a0 value <pointer_type 0x7fdf662ad498>
                        chain <tree_list 0x7fdf667a9b18 value <void_type 0x7fdf667aaf18 void>>>>>>
        pointer_to_this <pointer_type 0x7fdf662ad5e8>>
    addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/git/use_after_free_2/git_uaf_2.c:376:12 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c> initial <block 0x7fdf662cb3c0>
    result <result_decl 0x7fdf667a03c0 D.4553 type <integer_type 0x7fdf667aa5e8 int>
        ignored SI ./benchmarks/git/use_after_free_2/git_uaf_2.c:376:12 size <integer_cst 0x7fdf66795df8 32> unit-size <integer_cst 0x7fdf66795e10 4>
        align:32 warn_if_not_align:0 context <function_decl 0x7fdf662b9300 parallel_next>>
    arguments <parm_decl 0x7fdf662c3800 cp
        type <pointer_type 0x7fdf662bb7e0 type <record_type 0x7fdf662bb738 child_process>
            public unsigned DI
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
        unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:376:48 size <integer_cst 0x7fdf66795bb8 64> unit-size <integer_cst 0x7fdf66795bd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9300 parallel_next> arg-type <pointer_type 0x7fdf662bb7e0>
        chain <parm_decl 0x7fdf662c3880 err type <pointer_type 0x7fdf662bb888>
            unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:377:20 size <integer_cst 0x7fdf66795bb8 64> unit-size <integer_cst 0x7fdf66795bd0 8>
            align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9300 parallel_next> arg-type <pointer_type 0x7fdf662bb888> chain <parm_decl 0x7fdf662c3900 cb>>>
    struct-function 0x7fdf662cc228>

 ================== pre trace ptable ================== 
trace fucntion name:parallel_next 
[40;44m =======trace_function_path parallel_next  function_call count: 2 level :888========  [0m
 <function_decl 0x7fdf662b9300 parallel_next
    type <function_type 0x7fdf662ad540
        type <integer_type 0x7fdf667aa5e8 int public SI
            size <integer_cst 0x7fdf66795df8 constant 32>
            unit-size <integer_cst 0x7fdf66795e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
            pointer_to_this <pointer_type 0x7fdf667b19d8>>
        QI
        size <integer_cst 0x7fdf66795ca8 constant 8>
        unit-size <integer_cst 0x7fdf66795cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7fdf662af618 value <pointer_type 0x7fdf662adbd0>
            chain <tree_list 0x7fdf662af5f0 value <pointer_type 0x7fdf662ada80>
                chain <tree_list 0x7fdf662af5c8 value <pointer_type 0x7fdf667b1000>
                    chain <tree_list 0x7fdf662af5a0 value <pointer_type 0x7fdf662ad498>
                        chain <tree_list 0x7fdf667a9b18 value <void_type 0x7fdf667aaf18 void>>>>>>
        pointer_to_this <pointer_type 0x7fdf662ad5e8>>
    addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/git/use_after_free_2/git_uaf_2.c:376:12 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c> initial <block 0x7fdf662cb3c0>
    result <result_decl 0x7fdf667a03c0 D.4553 type <integer_type 0x7fdf667aa5e8 int>
        ignored SI ./benchmarks/git/use_after_free_2/git_uaf_2.c:376:12 size <integer_cst 0x7fdf66795df8 32> unit-size <integer_cst 0x7fdf66795e10 4>
        align:32 warn_if_not_align:0 context <function_decl 0x7fdf662b9300 parallel_next>>
    arguments <parm_decl 0x7fdf662c3800 cp
        type <pointer_type 0x7fdf662bb7e0 type <record_type 0x7fdf662bb738 child_process>
            public unsigned DI
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
        unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:376:48 size <integer_cst 0x7fdf66795bb8 64> unit-size <integer_cst 0x7fdf66795bd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9300 parallel_next> arg-type <pointer_type 0x7fdf662bb7e0>
        chain <parm_decl 0x7fdf662c3880 err type <pointer_type 0x7fdf662bb888>
            unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:377:20 size <integer_cst 0x7fdf66795bb8 64> unit-size <integer_cst 0x7fdf66795bd0 8>
            align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9300 parallel_next> arg-type <pointer_type 0x7fdf662bb888> chain <parm_decl 0x7fdf662c3900 cb>>>
    struct-function 0x7fdf662cc228>
[40;36m ======= node_fun:parallel_next========= [0m
[40;36m ======= find relate stmt with parallel_next ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strbuf_addf========= [0m
[40;46m =======add node_fun stack:strbuf_addf========= [0m
[40;42m =======pre add _ fucntion:argv_array_pushv========= [0m
[40;46m =======add node_fun stack:argv_array_pushv========= [0m

 ================== pre trace ptable finish================== 
 <function_decl 0x7fdf662b9300 parallel_next
    type <function_type 0x7fdf662ad540
        type <integer_type 0x7fdf667aa5e8 int public SI
            size <integer_cst 0x7fdf66795df8 constant 32>
            unit-size <integer_cst 0x7fdf66795e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
            pointer_to_this <pointer_type 0x7fdf667b19d8>>
        QI
        size <integer_cst 0x7fdf66795ca8 constant 8>
        unit-size <integer_cst 0x7fdf66795cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7fdf662af618 value <pointer_type 0x7fdf662adbd0>
            chain <tree_list 0x7fdf662af5f0 value <pointer_type 0x7fdf662ada80>
                chain <tree_list 0x7fdf662af5c8 value <pointer_type 0x7fdf667b1000>
                    chain <tree_list 0x7fdf662af5a0 value <pointer_type 0x7fdf662ad498>
                        chain <tree_list 0x7fdf667a9b18 value <void_type 0x7fdf667aaf18 void>>>>>>
        pointer_to_this <pointer_type 0x7fdf662ad5e8>>
    addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/git/use_after_free_2/git_uaf_2.c:376:12 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c> initial <block 0x7fdf662cb3c0>
    result <result_decl 0x7fdf667a03c0 D.4553 type <integer_type 0x7fdf667aa5e8 int>
        ignored SI ./benchmarks/git/use_after_free_2/git_uaf_2.c:376:12 size <integer_cst 0x7fdf66795df8 32> unit-size <integer_cst 0x7fdf66795e10 4>
        align:32 warn_if_not_align:0 context <function_decl 0x7fdf662b9300 parallel_next>>
    arguments <parm_decl 0x7fdf662c3800 cp
        type <pointer_type 0x7fdf662bb7e0 type <record_type 0x7fdf662bb738 child_process>
            public unsigned DI
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
        unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:376:48 size <integer_cst 0x7fdf66795bb8 64> unit-size <integer_cst 0x7fdf66795bd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9300 parallel_next> arg-type <pointer_type 0x7fdf662bb7e0>
        chain <parm_decl 0x7fdf662c3880 err type <pointer_type 0x7fdf662bb888>
            unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:377:20 size <integer_cst 0x7fdf66795bb8 64> unit-size <integer_cst 0x7fdf66795bd0 8>
            align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9300 parallel_next> arg-type <pointer_type 0x7fdf662bb888> chain <parm_decl 0x7fdf662c3900 cb>>>
    struct-function 0x7fdf662cc228>
is Other function parallel_next
 
 Start check Pointer Collect  

======================================================================
# .MEM_46 = VDEF <.MEM_40>
_16 = run_processes_parallel (jobs_33, parallel_next, 0B, 0B, &proc);
_16 = run_processes_parallel (jobs_33, parallel_next, 0B, 0B, &proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:432:17: warning: use location
  432 |                 exit(run_processes_parallel(jobs, parallel_next,
      |                 ^
this stmt call this function :run_processes_parallel
trace fucntion name:run_processes_parallel 
[40;44m =======trace_function_path run_processes_parallel  function_call count: 7 level :0========  [0m
 <function_decl 0x7fdf662b9300 parallel_next
    type <function_type 0x7fdf662ad540
        type <integer_type 0x7fdf667aa5e8 int public SI
            size <integer_cst 0x7fdf66795df8 constant 32>
            unit-size <integer_cst 0x7fdf66795e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
            pointer_to_this <pointer_type 0x7fdf667b19d8>>
        QI
        size <integer_cst 0x7fdf66795ca8 constant 8>
        unit-size <integer_cst 0x7fdf66795cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7fdf662af618 value <pointer_type 0x7fdf662adbd0>
            chain <tree_list 0x7fdf662af5f0 value <pointer_type 0x7fdf662ada80>
                chain <tree_list 0x7fdf662af5c8 value <pointer_type 0x7fdf667b1000>
                    chain <tree_list 0x7fdf662af5a0 value <pointer_type 0x7fdf662ad498>
                        chain <tree_list 0x7fdf667a9b18 value <void_type 0x7fdf667aaf18 void>>>>>>
        pointer_to_this <pointer_type 0x7fdf662ad5e8>>
    addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/git/use_after_free_2/git_uaf_2.c:376:12 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c> initial <block 0x7fdf662cb3c0>
    result <result_decl 0x7fdf667a03c0 D.4553 type <integer_type 0x7fdf667aa5e8 int>
        ignored SI ./benchmarks/git/use_after_free_2/git_uaf_2.c:376:12 size <integer_cst 0x7fdf66795df8 32> unit-size <integer_cst 0x7fdf66795e10 4>
        align:32 warn_if_not_align:0 context <function_decl 0x7fdf662b9300 parallel_next>>
    arguments <parm_decl 0x7fdf662c3800 cp
        type <pointer_type 0x7fdf662bb7e0 type <record_type 0x7fdf662bb738 child_process>
            public unsigned DI
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
        unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:376:48 size <integer_cst 0x7fdf66795bb8 64> unit-size <integer_cst 0x7fdf66795bd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9300 parallel_next> arg-type <pointer_type 0x7fdf662bb7e0>
        chain <parm_decl 0x7fdf662c3880 err type <pointer_type 0x7fdf662bb888>
            unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:377:20 size <integer_cst 0x7fdf66795bb8 64> unit-size <integer_cst 0x7fdf66795bd0 8>
            align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9300 parallel_next> arg-type <pointer_type 0x7fdf662bb888> chain <parm_decl 0x7fdf662c3900 cb>>>
    struct-function 0x7fdf662cc228>
[40;36m ======= node_fun:run_processes_parallel========= [0m
[40;36m ======= find relate stmt with parallel_next ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:pp_cleanup========= [0m
[40;46m =======add node_fun stack:pp_cleanup========= [0m
[40;42m =======pre add _ fucntion:kill_children========= [0m
[40;46m =======add node_fun stack:kill_children========= [0m
[40;44m =======trace_function_path kill_children  function_call count: 1 level :1========  [0m
 <function_decl 0x7fdf662b9300 parallel_next
    type <function_type 0x7fdf662ad540
        type <integer_type 0x7fdf667aa5e8 int public SI
            size <integer_cst 0x7fdf66795df8 constant 32>
            unit-size <integer_cst 0x7fdf66795e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
            pointer_to_this <pointer_type 0x7fdf667b19d8>>
        QI
        size <integer_cst 0x7fdf66795ca8 constant 8>
        unit-size <integer_cst 0x7fdf66795cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7fdf662af618 value <pointer_type 0x7fdf662adbd0>
            chain <tree_list 0x7fdf662af5f0 value <pointer_type 0x7fdf662ada80>
                chain <tree_list 0x7fdf662af5c8 value <pointer_type 0x7fdf667b1000>
                    chain <tree_list 0x7fdf662af5a0 value <pointer_type 0x7fdf662ad498>
                        chain <tree_list 0x7fdf667a9b18 value <void_type 0x7fdf667aaf18 void>>>>>>
        pointer_to_this <pointer_type 0x7fdf662ad5e8>>
    addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/git/use_after_free_2/git_uaf_2.c:376:12 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c> initial <block 0x7fdf662cb3c0>
    result <result_decl 0x7fdf667a03c0 D.4553 type <integer_type 0x7fdf667aa5e8 int>
        ignored SI ./benchmarks/git/use_after_free_2/git_uaf_2.c:376:12 size <integer_cst 0x7fdf66795df8 32> unit-size <integer_cst 0x7fdf66795e10 4>
        align:32 warn_if_not_align:0 context <function_decl 0x7fdf662b9300 parallel_next>>
    arguments <parm_decl 0x7fdf662c3800 cp
        type <pointer_type 0x7fdf662bb7e0 type <record_type 0x7fdf662bb738 child_process>
            public unsigned DI
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
        unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:376:48 size <integer_cst 0x7fdf66795bb8 64> unit-size <integer_cst 0x7fdf66795bd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9300 parallel_next> arg-type <pointer_type 0x7fdf662bb7e0>
        chain <parm_decl 0x7fdf662c3880 err type <pointer_type 0x7fdf662bb888>
            unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:377:20 size <integer_cst 0x7fdf66795bb8 64> unit-size <integer_cst 0x7fdf66795bd0 8>
            align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9300 parallel_next> arg-type <pointer_type 0x7fdf662bb888> chain <parm_decl 0x7fdf662c3900 cb>>>
    struct-function 0x7fdf662cc228>
[40;36m ======= node_fun:kill_children========= [0m
[40;36m ======= find relate stmt with parallel_next ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:kill========= [0m
[40;46m =======add node_fun stack:kill========= [0m
[40;42m =======pre add _ fucntion:pp_collect_finished========= [0m
[40;46m =======add node_fun stack:pp_collect_finished========= [0m
[40;44m =======trace_function_path pp_collect_finished  function_call count: 5 level :1========  [0m
 <function_decl 0x7fdf662b9300 parallel_next
    type <function_type 0x7fdf662ad540
        type <integer_type 0x7fdf667aa5e8 int public SI
            size <integer_cst 0x7fdf66795df8 constant 32>
            unit-size <integer_cst 0x7fdf66795e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
            pointer_to_this <pointer_type 0x7fdf667b19d8>>
        QI
        size <integer_cst 0x7fdf66795ca8 constant 8>
        unit-size <integer_cst 0x7fdf66795cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7fdf662af618 value <pointer_type 0x7fdf662adbd0>
            chain <tree_list 0x7fdf662af5f0 value <pointer_type 0x7fdf662ada80>
                chain <tree_list 0x7fdf662af5c8 value <pointer_type 0x7fdf667b1000>
                    chain <tree_list 0x7fdf662af5a0 value <pointer_type 0x7fdf662ad498>
                        chain <tree_list 0x7fdf667a9b18 value <void_type 0x7fdf667aaf18 void>>>>>>
        pointer_to_this <pointer_type 0x7fdf662ad5e8>>
    addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/git/use_after_free_2/git_uaf_2.c:376:12 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c> initial <block 0x7fdf662cb3c0>
    result <result_decl 0x7fdf667a03c0 D.4553 type <integer_type 0x7fdf667aa5e8 int>
        ignored SI ./benchmarks/git/use_after_free_2/git_uaf_2.c:376:12 size <integer_cst 0x7fdf66795df8 32> unit-size <integer_cst 0x7fdf66795e10 4>
        align:32 warn_if_not_align:0 context <function_decl 0x7fdf662b9300 parallel_next>>
    arguments <parm_decl 0x7fdf662c3800 cp
        type <pointer_type 0x7fdf662bb7e0 type <record_type 0x7fdf662bb738 child_process>
            public unsigned DI
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
        unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:376:48 size <integer_cst 0x7fdf66795bb8 64> unit-size <integer_cst 0x7fdf66795bd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9300 parallel_next> arg-type <pointer_type 0x7fdf662bb7e0>
        chain <parm_decl 0x7fdf662c3880 err type <pointer_type 0x7fdf662bb888>
            unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:377:20 size <integer_cst 0x7fdf66795bb8 64> unit-size <integer_cst 0x7fdf66795bd0 8>
            align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9300 parallel_next> arg-type <pointer_type 0x7fdf662bb888> chain <parm_decl 0x7fdf662c3900 cb>>>
    struct-function 0x7fdf662cc228>
[40;36m ======= node_fun:pp_collect_finished========= [0m
[40;36m ======= find relate stmt with parallel_next ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:fputs========= [0m
[40;46m =======add node_fun stack:fputs========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:finish_command========= [0m
[40;46m =======add node_fun stack:finish_command========= [0m
[40;44m =======trace_function_path finish_command  function_call count: 2 level :2========  [0m
 <function_decl 0x7fdf662b9300 parallel_next
    type <function_type 0x7fdf662ad540
        type <integer_type 0x7fdf667aa5e8 int public SI
            size <integer_cst 0x7fdf66795df8 constant 32>
            unit-size <integer_cst 0x7fdf66795e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
            pointer_to_this <pointer_type 0x7fdf667b19d8>>
        QI
        size <integer_cst 0x7fdf66795ca8 constant 8>
        unit-size <integer_cst 0x7fdf66795cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7fdf662af618 value <pointer_type 0x7fdf662adbd0>
            chain <tree_list 0x7fdf662af5f0 value <pointer_type 0x7fdf662ada80>
                chain <tree_list 0x7fdf662af5c8 value <pointer_type 0x7fdf667b1000>
                    chain <tree_list 0x7fdf662af5a0 value <pointer_type 0x7fdf662ad498>
                        chain <tree_list 0x7fdf667a9b18 value <void_type 0x7fdf667aaf18 void>>>>>>
        pointer_to_this <pointer_type 0x7fdf662ad5e8>>
    addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/git/use_after_free_2/git_uaf_2.c:376:12 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c> initial <block 0x7fdf662cb3c0>
    result <result_decl 0x7fdf667a03c0 D.4553 type <integer_type 0x7fdf667aa5e8 int>
        ignored SI ./benchmarks/git/use_after_free_2/git_uaf_2.c:376:12 size <integer_cst 0x7fdf66795df8 32> unit-size <integer_cst 0x7fdf66795e10 4>
        align:32 warn_if_not_align:0 context <function_decl 0x7fdf662b9300 parallel_next>>
    arguments <parm_decl 0x7fdf662c3800 cp
        type <pointer_type 0x7fdf662bb7e0 type <record_type 0x7fdf662bb738 child_process>
            public unsigned DI
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
        unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:376:48 size <integer_cst 0x7fdf66795bb8 64> unit-size <integer_cst 0x7fdf66795bd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9300 parallel_next> arg-type <pointer_type 0x7fdf662bb7e0>
        chain <parm_decl 0x7fdf662c3880 err type <pointer_type 0x7fdf662bb888>
            unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:377:20 size <integer_cst 0x7fdf66795bb8 64> unit-size <integer_cst 0x7fdf66795bd0 8>
            align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9300 parallel_next> arg-type <pointer_type 0x7fdf662bb888> chain <parm_decl 0x7fdf662c3900 cb>>>
    struct-function 0x7fdf662cc228>
[40;36m ======= node_fun:finish_command========= [0m
[40;36m ======= find relate stmt with parallel_next ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_clear========= [0m
[40;46m =======add node_fun stack:child_process_clear========= [0m
[40;44m =======trace_function_path child_process_clear  function_call count: 1 level :3========  [0m
 <function_decl 0x7fdf662b9300 parallel_next
    type <function_type 0x7fdf662ad540
        type <integer_type 0x7fdf667aa5e8 int public SI
            size <integer_cst 0x7fdf66795df8 constant 32>
            unit-size <integer_cst 0x7fdf66795e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
            pointer_to_this <pointer_type 0x7fdf667b19d8>>
        QI
        size <integer_cst 0x7fdf66795ca8 constant 8>
        unit-size <integer_cst 0x7fdf66795cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7fdf662af618 value <pointer_type 0x7fdf662adbd0>
            chain <tree_list 0x7fdf662af5f0 value <pointer_type 0x7fdf662ada80>
                chain <tree_list 0x7fdf662af5c8 value <pointer_type 0x7fdf667b1000>
                    chain <tree_list 0x7fdf662af5a0 value <pointer_type 0x7fdf662ad498>
                        chain <tree_list 0x7fdf667a9b18 value <void_type 0x7fdf667aaf18 void>>>>>>
        pointer_to_this <pointer_type 0x7fdf662ad5e8>>
    addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/git/use_after_free_2/git_uaf_2.c:376:12 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c> initial <block 0x7fdf662cb3c0>
    result <result_decl 0x7fdf667a03c0 D.4553 type <integer_type 0x7fdf667aa5e8 int>
        ignored SI ./benchmarks/git/use_after_free_2/git_uaf_2.c:376:12 size <integer_cst 0x7fdf66795df8 32> unit-size <integer_cst 0x7fdf66795e10 4>
        align:32 warn_if_not_align:0 context <function_decl 0x7fdf662b9300 parallel_next>>
    arguments <parm_decl 0x7fdf662c3800 cp
        type <pointer_type 0x7fdf662bb7e0 type <record_type 0x7fdf662bb738 child_process>
            public unsigned DI
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
        unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:376:48 size <integer_cst 0x7fdf66795bb8 64> unit-size <integer_cst 0x7fdf66795bd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9300 parallel_next> arg-type <pointer_type 0x7fdf662bb7e0>
        chain <parm_decl 0x7fdf662c3880 err type <pointer_type 0x7fdf662bb888>
            unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:377:20 size <integer_cst 0x7fdf66795bb8 64> unit-size <integer_cst 0x7fdf66795bd0 8>
            align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9300 parallel_next> arg-type <pointer_type 0x7fdf662bb888> chain <parm_decl 0x7fdf662c3900 cb>>>
    struct-function 0x7fdf662cc228>
[40;36m ======= node_fun:child_process_clear========= [0m
[40;36m ======= find relate stmt with parallel_next ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;46m =======add node_fun stack:wait_or_whine========= [0m
[40;42m =======pre add _ fucntion:pp_output========= [0m
[40;46m =======add node_fun stack:pp_output========= [0m
[40;42m =======pre add _ fucntion:pp_buffer_stderr========= [0m
[40;46m =======add node_fun stack:pp_buffer_stderr========= [0m
[40;42m =======pre add _ fucntion:pp_start_one========= [0m
[40;46m =======add node_fun stack:pp_start_one========= [0m
[40;44m =======trace_function_path pp_start_one  function_call count: 5 level :1========  [0m
 <function_decl 0x7fdf662b9300 parallel_next
    type <function_type 0x7fdf662ad540
        type <integer_type 0x7fdf667aa5e8 int public SI
            size <integer_cst 0x7fdf66795df8 constant 32>
            unit-size <integer_cst 0x7fdf66795e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
            pointer_to_this <pointer_type 0x7fdf667b19d8>>
        QI
        size <integer_cst 0x7fdf66795ca8 constant 8>
        unit-size <integer_cst 0x7fdf66795cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7fdf662af618 value <pointer_type 0x7fdf662adbd0>
            chain <tree_list 0x7fdf662af5f0 value <pointer_type 0x7fdf662ada80>
                chain <tree_list 0x7fdf662af5c8 value <pointer_type 0x7fdf667b1000>
                    chain <tree_list 0x7fdf662af5a0 value <pointer_type 0x7fdf662ad498>
                        chain <tree_list 0x7fdf667a9b18 value <void_type 0x7fdf667aaf18 void>>>>>>
        pointer_to_this <pointer_type 0x7fdf662ad5e8>>
    addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/git/use_after_free_2/git_uaf_2.c:376:12 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c> initial <block 0x7fdf662cb3c0>
    result <result_decl 0x7fdf667a03c0 D.4553 type <integer_type 0x7fdf667aa5e8 int>
        ignored SI ./benchmarks/git/use_after_free_2/git_uaf_2.c:376:12 size <integer_cst 0x7fdf66795df8 32> unit-size <integer_cst 0x7fdf66795e10 4>
        align:32 warn_if_not_align:0 context <function_decl 0x7fdf662b9300 parallel_next>>
    arguments <parm_decl 0x7fdf662c3800 cp
        type <pointer_type 0x7fdf662bb7e0 type <record_type 0x7fdf662bb738 child_process>
            public unsigned DI
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
        unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:376:48 size <integer_cst 0x7fdf66795bb8 64> unit-size <integer_cst 0x7fdf66795bd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9300 parallel_next> arg-type <pointer_type 0x7fdf662bb7e0>
        chain <parm_decl 0x7fdf662c3880 err type <pointer_type 0x7fdf662bb888>
            unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:377:20 size <integer_cst 0x7fdf66795bb8 64> unit-size <integer_cst 0x7fdf66795bd0 8>
            align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9300 parallel_next> arg-type <pointer_type 0x7fdf662bb888> chain <parm_decl 0x7fdf662c3900 cb>>>
    struct-function 0x7fdf662cc228>
[40;36m ======= node_fun:pp_start_one========= [0m
[40;36m ======= find relate stmt with parallel_next ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:start_command========= [0m
[40;46m =======add node_fun stack:start_command========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:pp_init========= [0m
[40;46m =======add node_fun stack:pp_init========= [0m
[40;44m =======trace_function_path pp_init  function_call count: 7 level :1========  [0m
 <function_decl 0x7fdf662b9300 parallel_next
    type <function_type 0x7fdf662ad540
        type <integer_type 0x7fdf667aa5e8 int public SI
            size <integer_cst 0x7fdf66795df8 constant 32>
            unit-size <integer_cst 0x7fdf66795e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
            pointer_to_this <pointer_type 0x7fdf667b19d8>>
        QI
        size <integer_cst 0x7fdf66795ca8 constant 8>
        unit-size <integer_cst 0x7fdf66795cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7fdf662af618 value <pointer_type 0x7fdf662adbd0>
            chain <tree_list 0x7fdf662af5f0 value <pointer_type 0x7fdf662ada80>
                chain <tree_list 0x7fdf662af5c8 value <pointer_type 0x7fdf667b1000>
                    chain <tree_list 0x7fdf662af5a0 value <pointer_type 0x7fdf662ad498>
                        chain <tree_list 0x7fdf667a9b18 value <void_type 0x7fdf667aaf18 void>>>>>>
        pointer_to_this <pointer_type 0x7fdf662ad5e8>>
    addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/git/use_after_free_2/git_uaf_2.c:376:12 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c> initial <block 0x7fdf662cb3c0>
    result <result_decl 0x7fdf667a03c0 D.4553 type <integer_type 0x7fdf667aa5e8 int>
        ignored SI ./benchmarks/git/use_after_free_2/git_uaf_2.c:376:12 size <integer_cst 0x7fdf66795df8 32> unit-size <integer_cst 0x7fdf66795e10 4>
        align:32 warn_if_not_align:0 context <function_decl 0x7fdf662b9300 parallel_next>>
    arguments <parm_decl 0x7fdf662c3800 cp
        type <pointer_type 0x7fdf662bb7e0 type <record_type 0x7fdf662bb738 child_process>
            public unsigned DI
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
        unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:376:48 size <integer_cst 0x7fdf66795bb8 64> unit-size <integer_cst 0x7fdf66795bd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9300 parallel_next> arg-type <pointer_type 0x7fdf662bb7e0>
        chain <parm_decl 0x7fdf662c3880 err type <pointer_type 0x7fdf662bb888>
            unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:377:20 size <integer_cst 0x7fdf66795bb8 64> unit-size <integer_cst 0x7fdf66795bd0 8>
            align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9300 parallel_next> arg-type <pointer_type 0x7fdf662bb888> chain <parm_decl 0x7fdf662c3900 cb>>>
    struct-function 0x7fdf662cc228>
[40;36m ======= node_fun:pp_init========= [0m
[40;36m ======= find relate stmt with parallel_next ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;46m =======add node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;46m =======add node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;46m =======add node_fun stack:online_cpus========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_46 = VDEF <.MEM_40>
_16 = run_processes_parallel (jobs_33, parallel_next, 0B, 0B, &proc);
_16 = run_processes_parallel (jobs_33, parallel_next, 0B, 0B, &proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:432:17: warning: use location
this stmt call this function :run_processes_parallel
trace fucntion name:run_processes_parallel 
[40;44m =======trace_function_path run_processes_parallel  function_call count: 7 level :0========  [0m
 <function_decl 0x7fdf662b9300 parallel_next
    type <function_type 0x7fdf662ad540
        type <integer_type 0x7fdf667aa5e8 int public SI
            size <integer_cst 0x7fdf66795df8 constant 32>
            unit-size <integer_cst 0x7fdf66795e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
            pointer_to_this <pointer_type 0x7fdf667b19d8>>
        QI
        size <integer_cst 0x7fdf66795ca8 constant 8>
        unit-size <integer_cst 0x7fdf66795cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7fdf662af618 value <pointer_type 0x7fdf662adbd0>
            chain <tree_list 0x7fdf662af5f0 value <pointer_type 0x7fdf662ada80>
                chain <tree_list 0x7fdf662af5c8 value <pointer_type 0x7fdf667b1000>
                    chain <tree_list 0x7fdf662af5a0 value <pointer_type 0x7fdf662ad498>
                        chain <tree_list 0x7fdf667a9b18 value <void_type 0x7fdf667aaf18 void>>>>>>
        pointer_to_this <pointer_type 0x7fdf662ad5e8>>
    addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/git/use_after_free_2/git_uaf_2.c:376:12 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c> initial <block 0x7fdf662cb3c0>
    result <result_decl 0x7fdf667a03c0 D.4553 type <integer_type 0x7fdf667aa5e8 int>
        ignored SI ./benchmarks/git/use_after_free_2/git_uaf_2.c:376:12 size <integer_cst 0x7fdf66795df8 32> unit-size <integer_cst 0x7fdf66795e10 4>
        align:32 warn_if_not_align:0 context <function_decl 0x7fdf662b9300 parallel_next>>
    arguments <parm_decl 0x7fdf662c3800 cp
        type <pointer_type 0x7fdf662bb7e0 type <record_type 0x7fdf662bb738 child_process>
            public unsigned DI
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
        unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:376:48 size <integer_cst 0x7fdf66795bb8 64> unit-size <integer_cst 0x7fdf66795bd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9300 parallel_next> arg-type <pointer_type 0x7fdf662bb7e0>
        chain <parm_decl 0x7fdf662c3880 err type <pointer_type 0x7fdf662bb888>
            unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:377:20 size <integer_cst 0x7fdf66795bb8 64> unit-size <integer_cst 0x7fdf66795bd0 8>
            align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9300 parallel_next> arg-type <pointer_type 0x7fdf662bb888> chain <parm_decl 0x7fdf662c3900 cb>>>
    struct-function 0x7fdf662cc228>
[40;36m ======= node_fun:run_processes_parallel========= [0m
[40;36m ======= find relate stmt with parallel_next ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:pp_cleanup========= [0m
[40;46m =======add node_fun stack:pp_cleanup========= [0m
[40;42m =======pre add _ fucntion:kill_children========= [0m
[40;46m =======add node_fun stack:kill_children========= [0m
[40;44m =======trace_function_path kill_children  function_call count: 1 level :1========  [0m
 <function_decl 0x7fdf662b9300 parallel_next
    type <function_type 0x7fdf662ad540
        type <integer_type 0x7fdf667aa5e8 int public SI
            size <integer_cst 0x7fdf66795df8 constant 32>
            unit-size <integer_cst 0x7fdf66795e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
            pointer_to_this <pointer_type 0x7fdf667b19d8>>
        QI
        size <integer_cst 0x7fdf66795ca8 constant 8>
        unit-size <integer_cst 0x7fdf66795cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7fdf662af618 value <pointer_type 0x7fdf662adbd0>
            chain <tree_list 0x7fdf662af5f0 value <pointer_type 0x7fdf662ada80>
                chain <tree_list 0x7fdf662af5c8 value <pointer_type 0x7fdf667b1000>
                    chain <tree_list 0x7fdf662af5a0 value <pointer_type 0x7fdf662ad498>
                        chain <tree_list 0x7fdf667a9b18 value <void_type 0x7fdf667aaf18 void>>>>>>
        pointer_to_this <pointer_type 0x7fdf662ad5e8>>
    addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/git/use_after_free_2/git_uaf_2.c:376:12 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c> initial <block 0x7fdf662cb3c0>
    result <result_decl 0x7fdf667a03c0 D.4553 type <integer_type 0x7fdf667aa5e8 int>
        ignored SI ./benchmarks/git/use_after_free_2/git_uaf_2.c:376:12 size <integer_cst 0x7fdf66795df8 32> unit-size <integer_cst 0x7fdf66795e10 4>
        align:32 warn_if_not_align:0 context <function_decl 0x7fdf662b9300 parallel_next>>
    arguments <parm_decl 0x7fdf662c3800 cp
        type <pointer_type 0x7fdf662bb7e0 type <record_type 0x7fdf662bb738 child_process>
            public unsigned DI
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
        unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:376:48 size <integer_cst 0x7fdf66795bb8 64> unit-size <integer_cst 0x7fdf66795bd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9300 parallel_next> arg-type <pointer_type 0x7fdf662bb7e0>
        chain <parm_decl 0x7fdf662c3880 err type <pointer_type 0x7fdf662bb888>
            unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:377:20 size <integer_cst 0x7fdf66795bb8 64> unit-size <integer_cst 0x7fdf66795bd0 8>
            align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9300 parallel_next> arg-type <pointer_type 0x7fdf662bb888> chain <parm_decl 0x7fdf662c3900 cb>>>
    struct-function 0x7fdf662cc228>
[40;36m ======= node_fun:kill_children========= [0m
[40;36m ======= find relate stmt with parallel_next ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:kill========= [0m
[40;46m =======add node_fun stack:kill========= [0m
[40;42m =======pre add _ fucntion:pp_collect_finished========= [0m
[40;46m =======add node_fun stack:pp_collect_finished========= [0m
[40;44m =======trace_function_path pp_collect_finished  function_call count: 5 level :1========  [0m
 <function_decl 0x7fdf662b9300 parallel_next
    type <function_type 0x7fdf662ad540
        type <integer_type 0x7fdf667aa5e8 int public SI
            size <integer_cst 0x7fdf66795df8 constant 32>
            unit-size <integer_cst 0x7fdf66795e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
            pointer_to_this <pointer_type 0x7fdf667b19d8>>
        QI
        size <integer_cst 0x7fdf66795ca8 constant 8>
        unit-size <integer_cst 0x7fdf66795cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7fdf662af618 value <pointer_type 0x7fdf662adbd0>
            chain <tree_list 0x7fdf662af5f0 value <pointer_type 0x7fdf662ada80>
                chain <tree_list 0x7fdf662af5c8 value <pointer_type 0x7fdf667b1000>
                    chain <tree_list 0x7fdf662af5a0 value <pointer_type 0x7fdf662ad498>
                        chain <tree_list 0x7fdf667a9b18 value <void_type 0x7fdf667aaf18 void>>>>>>
        pointer_to_this <pointer_type 0x7fdf662ad5e8>>
    addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/git/use_after_free_2/git_uaf_2.c:376:12 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c> initial <block 0x7fdf662cb3c0>
    result <result_decl 0x7fdf667a03c0 D.4553 type <integer_type 0x7fdf667aa5e8 int>
        ignored SI ./benchmarks/git/use_after_free_2/git_uaf_2.c:376:12 size <integer_cst 0x7fdf66795df8 32> unit-size <integer_cst 0x7fdf66795e10 4>
        align:32 warn_if_not_align:0 context <function_decl 0x7fdf662b9300 parallel_next>>
    arguments <parm_decl 0x7fdf662c3800 cp
        type <pointer_type 0x7fdf662bb7e0 type <record_type 0x7fdf662bb738 child_process>
            public unsigned DI
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
        unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:376:48 size <integer_cst 0x7fdf66795bb8 64> unit-size <integer_cst 0x7fdf66795bd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9300 parallel_next> arg-type <pointer_type 0x7fdf662bb7e0>
        chain <parm_decl 0x7fdf662c3880 err type <pointer_type 0x7fdf662bb888>
            unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:377:20 size <integer_cst 0x7fdf66795bb8 64> unit-size <integer_cst 0x7fdf66795bd0 8>
            align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9300 parallel_next> arg-type <pointer_type 0x7fdf662bb888> chain <parm_decl 0x7fdf662c3900 cb>>>
    struct-function 0x7fdf662cc228>
[40;36m ======= node_fun:pp_collect_finished========= [0m
[40;36m ======= find relate stmt with parallel_next ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:fputs========= [0m
[40;46m =======add node_fun stack:fputs========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:finish_command========= [0m
[40;46m =======add node_fun stack:finish_command========= [0m
[40;44m =======trace_function_path finish_command  function_call count: 2 level :2========  [0m
 <function_decl 0x7fdf662b9300 parallel_next
    type <function_type 0x7fdf662ad540
        type <integer_type 0x7fdf667aa5e8 int public SI
            size <integer_cst 0x7fdf66795df8 constant 32>
            unit-size <integer_cst 0x7fdf66795e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
            pointer_to_this <pointer_type 0x7fdf667b19d8>>
        QI
        size <integer_cst 0x7fdf66795ca8 constant 8>
        unit-size <integer_cst 0x7fdf66795cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7fdf662af618 value <pointer_type 0x7fdf662adbd0>
            chain <tree_list 0x7fdf662af5f0 value <pointer_type 0x7fdf662ada80>
                chain <tree_list 0x7fdf662af5c8 value <pointer_type 0x7fdf667b1000>
                    chain <tree_list 0x7fdf662af5a0 value <pointer_type 0x7fdf662ad498>
                        chain <tree_list 0x7fdf667a9b18 value <void_type 0x7fdf667aaf18 void>>>>>>
        pointer_to_this <pointer_type 0x7fdf662ad5e8>>
    addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/git/use_after_free_2/git_uaf_2.c:376:12 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c> initial <block 0x7fdf662cb3c0>
    result <result_decl 0x7fdf667a03c0 D.4553 type <integer_type 0x7fdf667aa5e8 int>
        ignored SI ./benchmarks/git/use_after_free_2/git_uaf_2.c:376:12 size <integer_cst 0x7fdf66795df8 32> unit-size <integer_cst 0x7fdf66795e10 4>
        align:32 warn_if_not_align:0 context <function_decl 0x7fdf662b9300 parallel_next>>
    arguments <parm_decl 0x7fdf662c3800 cp
        type <pointer_type 0x7fdf662bb7e0 type <record_type 0x7fdf662bb738 child_process>
            public unsigned DI
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
        unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:376:48 size <integer_cst 0x7fdf66795bb8 64> unit-size <integer_cst 0x7fdf66795bd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9300 parallel_next> arg-type <pointer_type 0x7fdf662bb7e0>
        chain <parm_decl 0x7fdf662c3880 err type <pointer_type 0x7fdf662bb888>
            unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:377:20 size <integer_cst 0x7fdf66795bb8 64> unit-size <integer_cst 0x7fdf66795bd0 8>
            align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9300 parallel_next> arg-type <pointer_type 0x7fdf662bb888> chain <parm_decl 0x7fdf662c3900 cb>>>
    struct-function 0x7fdf662cc228>
[40;36m ======= node_fun:finish_command========= [0m
[40;36m ======= find relate stmt with parallel_next ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_clear========= [0m
[40;46m =======add node_fun stack:child_process_clear========= [0m
[40;44m =======trace_function_path child_process_clear  function_call count: 1 level :3========  [0m
 <function_decl 0x7fdf662b9300 parallel_next
    type <function_type 0x7fdf662ad540
        type <integer_type 0x7fdf667aa5e8 int public SI
            size <integer_cst 0x7fdf66795df8 constant 32>
            unit-size <integer_cst 0x7fdf66795e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
            pointer_to_this <pointer_type 0x7fdf667b19d8>>
        QI
        size <integer_cst 0x7fdf66795ca8 constant 8>
        unit-size <integer_cst 0x7fdf66795cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7fdf662af618 value <pointer_type 0x7fdf662adbd0>
            chain <tree_list 0x7fdf662af5f0 value <pointer_type 0x7fdf662ada80>
                chain <tree_list 0x7fdf662af5c8 value <pointer_type 0x7fdf667b1000>
                    chain <tree_list 0x7fdf662af5a0 value <pointer_type 0x7fdf662ad498>
                        chain <tree_list 0x7fdf667a9b18 value <void_type 0x7fdf667aaf18 void>>>>>>
        pointer_to_this <pointer_type 0x7fdf662ad5e8>>
    addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/git/use_after_free_2/git_uaf_2.c:376:12 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c> initial <block 0x7fdf662cb3c0>
    result <result_decl 0x7fdf667a03c0 D.4553 type <integer_type 0x7fdf667aa5e8 int>
        ignored SI ./benchmarks/git/use_after_free_2/git_uaf_2.c:376:12 size <integer_cst 0x7fdf66795df8 32> unit-size <integer_cst 0x7fdf66795e10 4>
        align:32 warn_if_not_align:0 context <function_decl 0x7fdf662b9300 parallel_next>>
    arguments <parm_decl 0x7fdf662c3800 cp
        type <pointer_type 0x7fdf662bb7e0 type <record_type 0x7fdf662bb738 child_process>
            public unsigned DI
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
        unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:376:48 size <integer_cst 0x7fdf66795bb8 64> unit-size <integer_cst 0x7fdf66795bd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9300 parallel_next> arg-type <pointer_type 0x7fdf662bb7e0>
        chain <parm_decl 0x7fdf662c3880 err type <pointer_type 0x7fdf662bb888>
            unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:377:20 size <integer_cst 0x7fdf66795bb8 64> unit-size <integer_cst 0x7fdf66795bd0 8>
            align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9300 parallel_next> arg-type <pointer_type 0x7fdf662bb888> chain <parm_decl 0x7fdf662c3900 cb>>>
    struct-function 0x7fdf662cc228>
[40;36m ======= node_fun:child_process_clear========= [0m
[40;36m ======= find relate stmt with parallel_next ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;46m =======add node_fun stack:wait_or_whine========= [0m
[40;42m =======pre add _ fucntion:pp_output========= [0m
[40;46m =======add node_fun stack:pp_output========= [0m
[40;42m =======pre add _ fucntion:pp_buffer_stderr========= [0m
[40;46m =======add node_fun stack:pp_buffer_stderr========= [0m
[40;42m =======pre add _ fucntion:pp_start_one========= [0m
[40;46m =======add node_fun stack:pp_start_one========= [0m
[40;44m =======trace_function_path pp_start_one  function_call count: 5 level :1========  [0m
 <function_decl 0x7fdf662b9300 parallel_next
    type <function_type 0x7fdf662ad540
        type <integer_type 0x7fdf667aa5e8 int public SI
            size <integer_cst 0x7fdf66795df8 constant 32>
            unit-size <integer_cst 0x7fdf66795e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
            pointer_to_this <pointer_type 0x7fdf667b19d8>>
        QI
        size <integer_cst 0x7fdf66795ca8 constant 8>
        unit-size <integer_cst 0x7fdf66795cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7fdf662af618 value <pointer_type 0x7fdf662adbd0>
            chain <tree_list 0x7fdf662af5f0 value <pointer_type 0x7fdf662ada80>
                chain <tree_list 0x7fdf662af5c8 value <pointer_type 0x7fdf667b1000>
                    chain <tree_list 0x7fdf662af5a0 value <pointer_type 0x7fdf662ad498>
                        chain <tree_list 0x7fdf667a9b18 value <void_type 0x7fdf667aaf18 void>>>>>>
        pointer_to_this <pointer_type 0x7fdf662ad5e8>>
    addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/git/use_after_free_2/git_uaf_2.c:376:12 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c> initial <block 0x7fdf662cb3c0>
    result <result_decl 0x7fdf667a03c0 D.4553 type <integer_type 0x7fdf667aa5e8 int>
        ignored SI ./benchmarks/git/use_after_free_2/git_uaf_2.c:376:12 size <integer_cst 0x7fdf66795df8 32> unit-size <integer_cst 0x7fdf66795e10 4>
        align:32 warn_if_not_align:0 context <function_decl 0x7fdf662b9300 parallel_next>>
    arguments <parm_decl 0x7fdf662c3800 cp
        type <pointer_type 0x7fdf662bb7e0 type <record_type 0x7fdf662bb738 child_process>
            public unsigned DI
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
        unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:376:48 size <integer_cst 0x7fdf66795bb8 64> unit-size <integer_cst 0x7fdf66795bd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9300 parallel_next> arg-type <pointer_type 0x7fdf662bb7e0>
        chain <parm_decl 0x7fdf662c3880 err type <pointer_type 0x7fdf662bb888>
            unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:377:20 size <integer_cst 0x7fdf66795bb8 64> unit-size <integer_cst 0x7fdf66795bd0 8>
            align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9300 parallel_next> arg-type <pointer_type 0x7fdf662bb888> chain <parm_decl 0x7fdf662c3900 cb>>>
    struct-function 0x7fdf662cc228>
[40;36m ======= node_fun:pp_start_one========= [0m
[40;36m ======= find relate stmt with parallel_next ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:start_command========= [0m
[40;46m =======add node_fun stack:start_command========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:pp_init========= [0m
[40;46m =======add node_fun stack:pp_init========= [0m
[40;44m =======trace_function_path pp_init  function_call count: 7 level :1========  [0m
 <function_decl 0x7fdf662b9300 parallel_next
    type <function_type 0x7fdf662ad540
        type <integer_type 0x7fdf667aa5e8 int public SI
            size <integer_cst 0x7fdf66795df8 constant 32>
            unit-size <integer_cst 0x7fdf66795e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
            pointer_to_this <pointer_type 0x7fdf667b19d8>>
        QI
        size <integer_cst 0x7fdf66795ca8 constant 8>
        unit-size <integer_cst 0x7fdf66795cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7fdf662af618 value <pointer_type 0x7fdf662adbd0>
            chain <tree_list 0x7fdf662af5f0 value <pointer_type 0x7fdf662ada80>
                chain <tree_list 0x7fdf662af5c8 value <pointer_type 0x7fdf667b1000>
                    chain <tree_list 0x7fdf662af5a0 value <pointer_type 0x7fdf662ad498>
                        chain <tree_list 0x7fdf667a9b18 value <void_type 0x7fdf667aaf18 void>>>>>>
        pointer_to_this <pointer_type 0x7fdf662ad5e8>>
    addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/git/use_after_free_2/git_uaf_2.c:376:12 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c> initial <block 0x7fdf662cb3c0>
    result <result_decl 0x7fdf667a03c0 D.4553 type <integer_type 0x7fdf667aa5e8 int>
        ignored SI ./benchmarks/git/use_after_free_2/git_uaf_2.c:376:12 size <integer_cst 0x7fdf66795df8 32> unit-size <integer_cst 0x7fdf66795e10 4>
        align:32 warn_if_not_align:0 context <function_decl 0x7fdf662b9300 parallel_next>>
    arguments <parm_decl 0x7fdf662c3800 cp
        type <pointer_type 0x7fdf662bb7e0 type <record_type 0x7fdf662bb738 child_process>
            public unsigned DI
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
        unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:376:48 size <integer_cst 0x7fdf66795bb8 64> unit-size <integer_cst 0x7fdf66795bd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9300 parallel_next> arg-type <pointer_type 0x7fdf662bb7e0>
        chain <parm_decl 0x7fdf662c3880 err type <pointer_type 0x7fdf662bb888>
            unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:377:20 size <integer_cst 0x7fdf66795bb8 64> unit-size <integer_cst 0x7fdf66795bd0 8>
            align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9300 parallel_next> arg-type <pointer_type 0x7fdf662bb888> chain <parm_decl 0x7fdf662c3900 cb>>>
    struct-function 0x7fdf662cc228>
[40;36m ======= node_fun:pp_init========= [0m
[40;36m ======= find relate stmt with parallel_next ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;46m =======add node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;46m =======add node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;46m =======add node_fun stack:online_cpus========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf6679da20
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _16 = run_processes_parallel (jobs_33, parallel_next, 0B, 0B, &proc);
    version:16>
 <ssa_name 0x7fdf6679da20
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _16 = run_processes_parallel (jobs_33, parallel_next, 0B, 0B, &proc);
    version:16>

 ================== pre trace ptable ================== 
trace fucntion name:run_processes_parallel 
[40;44m =======trace_function_path run_processes_parallel  function_call count: 7 level :888========  [0m
 <ssa_name 0x7fdf6679da20
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _16 = run_processes_parallel (jobs_33, parallel_next, 0B, 0B, &proc);
    version:16>
[40;36m ======= node_fun:run_processes_parallel========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:pp_cleanup========= [0m
[40;46m =======add node_fun stack:pp_cleanup========= [0m
[40;42m =======pre add _ fucntion:kill_children========= [0m
[40;46m =======add node_fun stack:kill_children========= [0m
[40;44m =======trace_function_path kill_children  function_call count: 1 level :889========  [0m
 <ssa_name 0x7fdf6679da20
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _16 = run_processes_parallel (jobs_33, parallel_next, 0B, 0B, &proc);
    version:16>
[40;36m ======= node_fun:kill_children========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:kill========= [0m
[40;46m =======add node_fun stack:kill========= [0m
[40;42m =======pre add _ fucntion:pp_collect_finished========= [0m
[40;46m =======add node_fun stack:pp_collect_finished========= [0m
[40;44m =======trace_function_path pp_collect_finished  function_call count: 5 level :889========  [0m
 <ssa_name 0x7fdf6679da20
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _16 = run_processes_parallel (jobs_33, parallel_next, 0B, 0B, &proc);
    version:16>
[40;36m ======= node_fun:pp_collect_finished========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:fputs========= [0m
[40;46m =======add node_fun stack:fputs========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:finish_command========= [0m
[40;46m =======add node_fun stack:finish_command========= [0m
[40;44m =======trace_function_path finish_command  function_call count: 2 level :890========  [0m
 <ssa_name 0x7fdf6679da20
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _16 = run_processes_parallel (jobs_33, parallel_next, 0B, 0B, &proc);
    version:16>
[40;36m ======= node_fun:finish_command========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_clear========= [0m
[40;46m =======add node_fun stack:child_process_clear========= [0m
[40;44m =======trace_function_path child_process_clear  function_call count: 1 level :891========  [0m
 <ssa_name 0x7fdf6679da20
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _16 = run_processes_parallel (jobs_33, parallel_next, 0B, 0B, &proc);
    version:16>
[40;36m ======= node_fun:child_process_clear========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;46m =======add node_fun stack:wait_or_whine========= [0m
[40;42m =======pre add _ fucntion:pp_output========= [0m
[40;46m =======add node_fun stack:pp_output========= [0m
[40;42m =======pre add _ fucntion:pp_buffer_stderr========= [0m
[40;46m =======add node_fun stack:pp_buffer_stderr========= [0m
[40;42m =======pre add _ fucntion:pp_start_one========= [0m
[40;46m =======add node_fun stack:pp_start_one========= [0m
[40;44m =======trace_function_path pp_start_one  function_call count: 5 level :889========  [0m
 <ssa_name 0x7fdf6679da20
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _16 = run_processes_parallel (jobs_33, parallel_next, 0B, 0B, &proc);
    version:16>
[40;36m ======= node_fun:pp_start_one========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:start_command========= [0m
[40;46m =======add node_fun stack:start_command========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:pp_init========= [0m
[40;46m =======add node_fun stack:pp_init========= [0m
[40;44m =======trace_function_path pp_init  function_call count: 7 level :889========  [0m
 <ssa_name 0x7fdf6679da20
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _16 = run_processes_parallel (jobs_33, parallel_next, 0B, 0B, &proc);
    version:16>
[40;36m ======= node_fun:pp_init========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;46m =======add node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;46m =======add node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;46m =======add node_fun stack:online_cpus========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf6679da20
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _16 = run_processes_parallel (jobs_33, parallel_next, 0B, 0B, &proc);
    version:16>
is Other function run_processes_parallel
 
 Start check Pointer Collect  

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :run_processes_parallel
# .MEM_46 = VDEF <.MEM_40>
_16 = run_processes_parallel (jobs_33, parallel_next, 0B, 0B, &proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:432:17: warning: use location
# .MEM_42 = VDEF <.MEM_40>
_22 = run_processes_parallel (jobs_33, no_job, 0B, task_finished, &proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:440:17: warning: use location
  440 |                 exit(run_processes_parallel(jobs, no_job,
      |                 ^
exit (_22);
./benchmarks/git/use_after_free_2/git_uaf_2.c:440:17: warning: use location
this stmt call this function :exit
trace fucntion name:exit 

 ================== trace ================== 
trace fucntion free:0 

======================================================================

 Expand conflict 
 The same function may have multiple branches :run_processes_parallel
# .MEM_46 = VDEF <.MEM_40>
_16 = run_processes_parallel (jobs_33, parallel_next, 0B, 0B, &proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:432:17: warning: use location
  432 |                 exit(run_processes_parallel(jobs, parallel_next,
      |                 ^
# .MEM_44 = VDEF <.MEM_40>
_19 = run_processes_parallel (jobs_33, parallel_next, 0B, task_finished, &proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:436:17: warning: use location
  436 |                 exit(run_processes_parallel(jobs, parallel_next,
      |                 ^
exit (_19);
./benchmarks/git/use_after_free_2/git_uaf_2.c:436:17: warning: use location
this stmt call this function :exit
trace fucntion name:exit 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_46 = VDEF <.MEM_40>
_16 = run_processes_parallel (jobs_33, parallel_next, 0B, 0B, &proc);
_16 = run_processes_parallel (jobs_33, parallel_next, 0B, 0B, &proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:432:17: warning: use location
  432 |                 exit(run_processes_parallel(jobs, parallel_next,
      |                 ^
this stmt call this function :run_processes_parallel
trace fucntion name:run_processes_parallel 
[40;44m =======trace_function_path run_processes_parallel  function_call count: 7 level :0========  [0m
 <ssa_name 0x7fdf6679da20
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _16 = run_processes_parallel (jobs_33, parallel_next, 0B, 0B, &proc);
    version:16>
[40;36m ======= node_fun:run_processes_parallel========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:pp_cleanup========= [0m
[40;46m =======add node_fun stack:pp_cleanup========= [0m
[40;42m =======pre add _ fucntion:kill_children========= [0m
[40;46m =======add node_fun stack:kill_children========= [0m
[40;44m =======trace_function_path kill_children  function_call count: 1 level :1========  [0m
 <ssa_name 0x7fdf6679da20
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _16 = run_processes_parallel (jobs_33, parallel_next, 0B, 0B, &proc);
    version:16>
[40;36m ======= node_fun:kill_children========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:kill========= [0m
[40;46m =======add node_fun stack:kill========= [0m
[40;42m =======pre add _ fucntion:pp_collect_finished========= [0m
[40;46m =======add node_fun stack:pp_collect_finished========= [0m
[40;44m =======trace_function_path pp_collect_finished  function_call count: 5 level :1========  [0m
 <ssa_name 0x7fdf6679da20
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _16 = run_processes_parallel (jobs_33, parallel_next, 0B, 0B, &proc);
    version:16>
[40;36m ======= node_fun:pp_collect_finished========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:fputs========= [0m
[40;46m =======add node_fun stack:fputs========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:finish_command========= [0m
[40;46m =======add node_fun stack:finish_command========= [0m
[40;44m =======trace_function_path finish_command  function_call count: 2 level :2========  [0m
 <ssa_name 0x7fdf6679da20
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _16 = run_processes_parallel (jobs_33, parallel_next, 0B, 0B, &proc);
    version:16>
[40;36m ======= node_fun:finish_command========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_clear========= [0m
[40;46m =======add node_fun stack:child_process_clear========= [0m
[40;44m =======trace_function_path child_process_clear  function_call count: 1 level :3========  [0m
 <ssa_name 0x7fdf6679da20
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _16 = run_processes_parallel (jobs_33, parallel_next, 0B, 0B, &proc);
    version:16>
[40;36m ======= node_fun:child_process_clear========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;46m =======add node_fun stack:wait_or_whine========= [0m
[40;42m =======pre add _ fucntion:pp_output========= [0m
[40;46m =======add node_fun stack:pp_output========= [0m
[40;42m =======pre add _ fucntion:pp_buffer_stderr========= [0m
[40;46m =======add node_fun stack:pp_buffer_stderr========= [0m
[40;42m =======pre add _ fucntion:pp_start_one========= [0m
[40;46m =======add node_fun stack:pp_start_one========= [0m
[40;44m =======trace_function_path pp_start_one  function_call count: 5 level :1========  [0m
 <ssa_name 0x7fdf6679da20
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _16 = run_processes_parallel (jobs_33, parallel_next, 0B, 0B, &proc);
    version:16>
[40;36m ======= node_fun:pp_start_one========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:start_command========= [0m
[40;46m =======add node_fun stack:start_command========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:pp_init========= [0m
[40;46m =======add node_fun stack:pp_init========= [0m
[40;44m =======trace_function_path pp_init  function_call count: 7 level :1========  [0m
 <ssa_name 0x7fdf6679da20
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _16 = run_processes_parallel (jobs_33, parallel_next, 0B, 0B, &proc);
    version:16>
[40;36m ======= node_fun:pp_init========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;46m =======add node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;46m =======add node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;46m =======add node_fun stack:online_cpus========= [0m

 ================== trace ================== 
trace fucntion free:0 
exit (_16);
./benchmarks/git/use_after_free_2/git_uaf_2.c:432:17: warning: use location
this stmt call this function :exit
trace fucntion name:exit 

 ================== trace ================== 
trace fucntion free:0 
_11 = run_command (&proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:426:17: warning: use location
  426 |                 exit(run_command(&proc));
      |                 ^
this stmt call this function :run_command
trace fucntion name:run_command 

 ================== trace ================== 
trace fucntion free:0 
proc.argv = _13;
./benchmarks/git/use_after_free_2/git_uaf_2.c:429:19: warning: use location
  429 |         proc.argv = (const char **)argv + 3;
      |                   ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf6679da20
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _16 = run_processes_parallel (jobs_33, parallel_next, 0B, 0B, &proc);
    version:16>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf6679da20
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _16 = run_processes_parallel (jobs_33, parallel_next, 0B, 0B, &proc);
    version:16>
 <ssa_name 0x7fdf6679da20
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _16 = run_processes_parallel (jobs_33, parallel_next, 0B, 0B, &proc);
    version:16>

 ================== pre trace ptable ================== 
trace fucntion name:run_processes_parallel 
[40;44m =======trace_function_path run_processes_parallel  function_call count: 7 level :888========  [0m
 <ssa_name 0x7fdf6679da20
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _16 = run_processes_parallel (jobs_33, parallel_next, 0B, 0B, &proc);
    version:16>
[40;36m ======= node_fun:run_processes_parallel========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:pp_cleanup========= [0m
[40;46m =======add node_fun stack:pp_cleanup========= [0m
[40;42m =======pre add _ fucntion:kill_children========= [0m
[40;46m =======add node_fun stack:kill_children========= [0m
[40;44m =======trace_function_path kill_children  function_call count: 1 level :889========  [0m
 <ssa_name 0x7fdf6679da20
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _16 = run_processes_parallel (jobs_33, parallel_next, 0B, 0B, &proc);
    version:16>
[40;36m ======= node_fun:kill_children========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:kill========= [0m
[40;46m =======add node_fun stack:kill========= [0m
[40;42m =======pre add _ fucntion:pp_collect_finished========= [0m
[40;46m =======add node_fun stack:pp_collect_finished========= [0m
[40;44m =======trace_function_path pp_collect_finished  function_call count: 5 level :889========  [0m
 <ssa_name 0x7fdf6679da20
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _16 = run_processes_parallel (jobs_33, parallel_next, 0B, 0B, &proc);
    version:16>
[40;36m ======= node_fun:pp_collect_finished========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:fputs========= [0m
[40;46m =======add node_fun stack:fputs========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:finish_command========= [0m
[40;46m =======add node_fun stack:finish_command========= [0m
[40;44m =======trace_function_path finish_command  function_call count: 2 level :890========  [0m
 <ssa_name 0x7fdf6679da20
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _16 = run_processes_parallel (jobs_33, parallel_next, 0B, 0B, &proc);
    version:16>
[40;36m ======= node_fun:finish_command========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_clear========= [0m
[40;46m =======add node_fun stack:child_process_clear========= [0m
[40;44m =======trace_function_path child_process_clear  function_call count: 1 level :891========  [0m
 <ssa_name 0x7fdf6679da20
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _16 = run_processes_parallel (jobs_33, parallel_next, 0B, 0B, &proc);
    version:16>
[40;36m ======= node_fun:child_process_clear========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;46m =======add node_fun stack:wait_or_whine========= [0m
[40;42m =======pre add _ fucntion:pp_output========= [0m
[40;46m =======add node_fun stack:pp_output========= [0m
[40;42m =======pre add _ fucntion:pp_buffer_stderr========= [0m
[40;46m =======add node_fun stack:pp_buffer_stderr========= [0m
[40;42m =======pre add _ fucntion:pp_start_one========= [0m
[40;46m =======add node_fun stack:pp_start_one========= [0m
[40;44m =======trace_function_path pp_start_one  function_call count: 5 level :889========  [0m
 <ssa_name 0x7fdf6679da20
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _16 = run_processes_parallel (jobs_33, parallel_next, 0B, 0B, &proc);
    version:16>
[40;36m ======= node_fun:pp_start_one========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:start_command========= [0m
[40;46m =======add node_fun stack:start_command========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:pp_init========= [0m
[40;46m =======add node_fun stack:pp_init========= [0m
[40;44m =======trace_function_path pp_init  function_call count: 7 level :889========  [0m
 <ssa_name 0x7fdf6679da20
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _16 = run_processes_parallel (jobs_33, parallel_next, 0B, 0B, &proc);
    version:16>
[40;36m ======= node_fun:pp_init========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;46m =======add node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;46m =======add node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;46m =======add node_fun stack:online_cpus========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf6679da20
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _16 = run_processes_parallel (jobs_33, parallel_next, 0B, 0B, &proc);
    version:16>
is Other function run_processes_parallel
 
 Start check Pointer Collect  

======================================================================
_22 = run_processes_parallel (jobs_33, no_job, 0B, task_finished, &proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:440:17: warning: use location
  440 |                 exit(run_processes_parallel(jobs, no_job,
      |                 ^
this stmt call this function :run_processes_parallel
trace fucntion name:run_processes_parallel 
[40;44m =======trace_function_path run_processes_parallel  function_call count: 7 level :0========  [0m
 <ssa_name 0x7fdf6679da20
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _16 = run_processes_parallel (jobs_33, parallel_next, 0B, 0B, &proc);
    version:16>
[40;36m ======= node_fun:run_processes_parallel========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:pp_cleanup========= [0m
[40;46m =======add node_fun stack:pp_cleanup========= [0m
[40;42m =======pre add _ fucntion:kill_children========= [0m
[40;46m =======add node_fun stack:kill_children========= [0m
[40;44m =======trace_function_path kill_children  function_call count: 1 level :1========  [0m
 <ssa_name 0x7fdf6679da20
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _16 = run_processes_parallel (jobs_33, parallel_next, 0B, 0B, &proc);
    version:16>
[40;36m ======= node_fun:kill_children========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:kill========= [0m
[40;46m =======add node_fun stack:kill========= [0m
[40;42m =======pre add _ fucntion:pp_collect_finished========= [0m
[40;46m =======add node_fun stack:pp_collect_finished========= [0m
[40;44m =======trace_function_path pp_collect_finished  function_call count: 5 level :1========  [0m
 <ssa_name 0x7fdf6679da20
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _16 = run_processes_parallel (jobs_33, parallel_next, 0B, 0B, &proc);
    version:16>
[40;36m ======= node_fun:pp_collect_finished========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:fputs========= [0m
[40;46m =======add node_fun stack:fputs========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:finish_command========= [0m
[40;46m =======add node_fun stack:finish_command========= [0m
[40;44m =======trace_function_path finish_command  function_call count: 2 level :2========  [0m
 <ssa_name 0x7fdf6679da20
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _16 = run_processes_parallel (jobs_33, parallel_next, 0B, 0B, &proc);
    version:16>
[40;36m ======= node_fun:finish_command========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_clear========= [0m
[40;46m =======add node_fun stack:child_process_clear========= [0m
[40;44m =======trace_function_path child_process_clear  function_call count: 1 level :3========  [0m
 <ssa_name 0x7fdf6679da20
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _16 = run_processes_parallel (jobs_33, parallel_next, 0B, 0B, &proc);
    version:16>
[40;36m ======= node_fun:child_process_clear========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;46m =======add node_fun stack:wait_or_whine========= [0m
[40;42m =======pre add _ fucntion:pp_output========= [0m
[40;46m =======add node_fun stack:pp_output========= [0m
[40;42m =======pre add _ fucntion:pp_buffer_stderr========= [0m
[40;46m =======add node_fun stack:pp_buffer_stderr========= [0m
[40;42m =======pre add _ fucntion:pp_start_one========= [0m
[40;46m =======add node_fun stack:pp_start_one========= [0m
[40;44m =======trace_function_path pp_start_one  function_call count: 5 level :1========  [0m
 <ssa_name 0x7fdf6679da20
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _16 = run_processes_parallel (jobs_33, parallel_next, 0B, 0B, &proc);
    version:16>
[40;36m ======= node_fun:pp_start_one========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:start_command========= [0m
[40;46m =======add node_fun stack:start_command========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:pp_init========= [0m
[40;46m =======add node_fun stack:pp_init========= [0m
[40;44m =======trace_function_path pp_init  function_call count: 7 level :1========  [0m
 <ssa_name 0x7fdf6679da20
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _16 = run_processes_parallel (jobs_33, parallel_next, 0B, 0B, &proc);
    version:16>
[40;36m ======= node_fun:pp_init========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;46m =======add node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;46m =======add node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;46m =======add node_fun stack:online_cpus========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================

 Expand conflict 
 The same function may have multiple branches :exit
# .MEM_47 = VDEF <.MEM_46>
exit (_16);
./benchmarks/git/use_after_free_2/git_uaf_2.c:432:17: warning: use location
  432 |                 exit(run_processes_parallel(jobs, parallel_next,
      |                 ^
# .MEM_43 = VDEF <.MEM_42>
exit (_22);
./benchmarks/git/use_after_free_2/git_uaf_2.c:440:17: warning: use location
  440 |                 exit(run_processes_parallel(jobs, no_job,
      |                 ^
_19 = run_processes_parallel (jobs_33, parallel_next, 0B, task_finished, &proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:436:17: warning: use location
  436 |                 exit(run_processes_parallel(jobs, parallel_next,
      |                 ^
this stmt call this function :run_processes_parallel
trace fucntion name:run_processes_parallel 
[40;44m =======trace_function_path run_processes_parallel  function_call count: 7 level :0========  [0m
 <ssa_name 0x7fdf6679da20
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _16 = run_processes_parallel (jobs_33, parallel_next, 0B, 0B, &proc);
    version:16>
[40;36m ======= node_fun:run_processes_parallel========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:pp_cleanup========= [0m
[40;46m =======add node_fun stack:pp_cleanup========= [0m
[40;42m =======pre add _ fucntion:kill_children========= [0m
[40;46m =======add node_fun stack:kill_children========= [0m
[40;44m =======trace_function_path kill_children  function_call count: 1 level :1========  [0m
 <ssa_name 0x7fdf6679da20
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _16 = run_processes_parallel (jobs_33, parallel_next, 0B, 0B, &proc);
    version:16>
[40;36m ======= node_fun:kill_children========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:kill========= [0m
[40;46m =======add node_fun stack:kill========= [0m
[40;42m =======pre add _ fucntion:pp_collect_finished========= [0m
[40;46m =======add node_fun stack:pp_collect_finished========= [0m
[40;44m =======trace_function_path pp_collect_finished  function_call count: 5 level :1========  [0m
 <ssa_name 0x7fdf6679da20
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _16 = run_processes_parallel (jobs_33, parallel_next, 0B, 0B, &proc);
    version:16>
[40;36m ======= node_fun:pp_collect_finished========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:fputs========= [0m
[40;46m =======add node_fun stack:fputs========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:finish_command========= [0m
[40;46m =======add node_fun stack:finish_command========= [0m
[40;44m =======trace_function_path finish_command  function_call count: 2 level :2========  [0m
 <ssa_name 0x7fdf6679da20
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _16 = run_processes_parallel (jobs_33, parallel_next, 0B, 0B, &proc);
    version:16>
[40;36m ======= node_fun:finish_command========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_clear========= [0m
[40;46m =======add node_fun stack:child_process_clear========= [0m
[40;44m =======trace_function_path child_process_clear  function_call count: 1 level :3========  [0m
 <ssa_name 0x7fdf6679da20
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _16 = run_processes_parallel (jobs_33, parallel_next, 0B, 0B, &proc);
    version:16>
[40;36m ======= node_fun:child_process_clear========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;46m =======add node_fun stack:wait_or_whine========= [0m
[40;42m =======pre add _ fucntion:pp_output========= [0m
[40;46m =======add node_fun stack:pp_output========= [0m
[40;42m =======pre add _ fucntion:pp_buffer_stderr========= [0m
[40;46m =======add node_fun stack:pp_buffer_stderr========= [0m
[40;42m =======pre add _ fucntion:pp_start_one========= [0m
[40;46m =======add node_fun stack:pp_start_one========= [0m
[40;44m =======trace_function_path pp_start_one  function_call count: 5 level :1========  [0m
 <ssa_name 0x7fdf6679da20
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _16 = run_processes_parallel (jobs_33, parallel_next, 0B, 0B, &proc);
    version:16>
[40;36m ======= node_fun:pp_start_one========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:start_command========= [0m
[40;46m =======add node_fun stack:start_command========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:pp_init========= [0m
[40;46m =======add node_fun stack:pp_init========= [0m
[40;44m =======trace_function_path pp_init  function_call count: 7 level :1========  [0m
 <ssa_name 0x7fdf6679da20
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _16 = run_processes_parallel (jobs_33, parallel_next, 0B, 0B, &proc);
    version:16>
[40;36m ======= node_fun:pp_init========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;46m =======add node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;46m =======add node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;46m =======add node_fun stack:online_cpus========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================

 Expand conflict 
 The same function may have multiple branches :exit
# .MEM_47 = VDEF <.MEM_46>
exit (_16);
./benchmarks/git/use_after_free_2/git_uaf_2.c:432:17: warning: use location
  432 |                 exit(run_processes_parallel(jobs, parallel_next,
      |                 ^
# .MEM_45 = VDEF <.MEM_44>
exit (_19);
./benchmarks/git/use_after_free_2/git_uaf_2.c:436:17: warning: use location
  436 |                 exit(run_processes_parallel(jobs, parallel_next,
      |                 ^
_16 = run_processes_parallel (jobs_33, parallel_next, 0B, 0B, &proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:432:17: warning: use location
  432 |                 exit(run_processes_parallel(jobs, parallel_next,
      |                 ^
this stmt call this function :run_processes_parallel
trace fucntion name:run_processes_parallel 
[40;44m =======trace_function_path run_processes_parallel  function_call count: 7 level :0========  [0m
 <ssa_name 0x7fdf6679da20
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _16 = run_processes_parallel (jobs_33, parallel_next, 0B, 0B, &proc);
    version:16>
[40;36m ======= node_fun:run_processes_parallel========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:pp_cleanup========= [0m
[40;46m =======add node_fun stack:pp_cleanup========= [0m
[40;42m =======pre add _ fucntion:kill_children========= [0m
[40;46m =======add node_fun stack:kill_children========= [0m
[40;44m =======trace_function_path kill_children  function_call count: 1 level :1========  [0m
 <ssa_name 0x7fdf6679da20
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _16 = run_processes_parallel (jobs_33, parallel_next, 0B, 0B, &proc);
    version:16>
[40;36m ======= node_fun:kill_children========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:kill========= [0m
[40;46m =======add node_fun stack:kill========= [0m
[40;42m =======pre add _ fucntion:pp_collect_finished========= [0m
[40;46m =======add node_fun stack:pp_collect_finished========= [0m
[40;44m =======trace_function_path pp_collect_finished  function_call count: 5 level :1========  [0m
 <ssa_name 0x7fdf6679da20
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _16 = run_processes_parallel (jobs_33, parallel_next, 0B, 0B, &proc);
    version:16>
[40;36m ======= node_fun:pp_collect_finished========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:fputs========= [0m
[40;46m =======add node_fun stack:fputs========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:finish_command========= [0m
[40;46m =======add node_fun stack:finish_command========= [0m
[40;44m =======trace_function_path finish_command  function_call count: 2 level :2========  [0m
 <ssa_name 0x7fdf6679da20
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _16 = run_processes_parallel (jobs_33, parallel_next, 0B, 0B, &proc);
    version:16>
[40;36m ======= node_fun:finish_command========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_clear========= [0m
[40;46m =======add node_fun stack:child_process_clear========= [0m
[40;44m =======trace_function_path child_process_clear  function_call count: 1 level :3========  [0m
 <ssa_name 0x7fdf6679da20
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _16 = run_processes_parallel (jobs_33, parallel_next, 0B, 0B, &proc);
    version:16>
[40;36m ======= node_fun:child_process_clear========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;46m =======add node_fun stack:wait_or_whine========= [0m
[40;42m =======pre add _ fucntion:pp_output========= [0m
[40;46m =======add node_fun stack:pp_output========= [0m
[40;42m =======pre add _ fucntion:pp_buffer_stderr========= [0m
[40;46m =======add node_fun stack:pp_buffer_stderr========= [0m
[40;42m =======pre add _ fucntion:pp_start_one========= [0m
[40;46m =======add node_fun stack:pp_start_one========= [0m
[40;44m =======trace_function_path pp_start_one  function_call count: 5 level :1========  [0m
 <ssa_name 0x7fdf6679da20
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _16 = run_processes_parallel (jobs_33, parallel_next, 0B, 0B, &proc);
    version:16>
[40;36m ======= node_fun:pp_start_one========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:start_command========= [0m
[40;46m =======add node_fun stack:start_command========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:pp_init========= [0m
[40;46m =======add node_fun stack:pp_init========= [0m
[40;44m =======trace_function_path pp_init  function_call count: 7 level :1========  [0m
 <ssa_name 0x7fdf6679da20
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _16 = run_processes_parallel (jobs_33, parallel_next, 0B, 0B, &proc);
    version:16>
[40;36m ======= node_fun:pp_init========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;46m =======add node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;46m =======add node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;46m =======add node_fun stack:online_cpus========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_47 = VDEF <.MEM_46>
exit (_16);
exit (_16);
./benchmarks/git/use_after_free_2/git_uaf_2.c:432:17: warning: use location
this stmt call this function :exit
trace fucntion name:exit 

 ================== trace ================== 
trace fucntion free:0 
_11 = run_command (&proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:426:17: warning: use location
  426 |                 exit(run_command(&proc));
      |                 ^
this stmt call this function :run_command
trace fucntion name:run_command 

 ================== trace ================== 
trace fucntion free:0 
proc.argv = _13;
./benchmarks/git/use_after_free_2/git_uaf_2.c:429:19: warning: use location
  429 |         proc.argv = (const char **)argv + 3;
      |                   ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf6679da20
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _16 = run_processes_parallel (jobs_33, parallel_next, 0B, 0B, &proc);
    version:16>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf6679da68
    type <pointer_type 0x7fdf662b4000
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662b6690>>
   
    def_stmt _17 = MEM[(char * *)argv_31(D) + 8B];
    version:17
    ptr-info 0x7fdf662c9f30>
 <ssa_name 0x7fdf6679da68
    type <pointer_type 0x7fdf662b4000
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662b6690>>
   
    def_stmt _17 = MEM[(char * *)argv_31(D) + 8B];
    version:17
    ptr-info 0x7fdf662c9f30>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf6679da68
    type <pointer_type 0x7fdf662b4000
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662b6690>>
   
    def_stmt _17 = MEM[(char * *)argv_31(D) + 8B];
    version:17
    ptr-info 0x7fdf662c9f30>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_40>
_18 = strcmp (_17, "run-command-abort");
_18 = strcmp (_17, "run-command-abort");
./benchmarks/git/use_after_free_2/git_uaf_2.c:435:14: warning: use location
  435 |         if (!strcmp(argv[1], "run-command-abort"))
      |              ^
this stmt call this function :strcmp
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:0 
if (_18 == 0)
./benchmarks/git/use_after_free_2/git_uaf_2.c:435:12: warning: use location
  435 |         if (!strcmp(argv[1], "run-command-abort"))
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf6679da68
    type <pointer_type 0x7fdf662b4000
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662b6690>>
   
    def_stmt _17 = MEM[(char * *)argv_31(D) + 8B];
    version:17
    ptr-info 0x7fdf662c9f30>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <string_cst 0x7fdf662cfa50
    type <array_type 0x7fdf662c0150
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        BLK
        size <integer_cst 0x7fdf662a4e10 constant 144>
        unit-size <integer_cst 0x7fdf662a4df8 constant 18>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7fdf662c00a8 type <integer_type 0x7fdf667aa000 sizetype>
            DI
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa738 precision:64 min <integer_cst 0x7fdf66795be8 0> max <integer_cst 0x7fdf662a4de0 17>>
        pointer_to_this <pointer_type 0x7fdf662c01f8>>
    readonly constant static "run-command-abort\000">

dot graph START

======================================================================
 <ssa_name 0x7fdf6679dab0
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _18 = strcmp (_17, "run-command-abort");
    version:18>
 <ssa_name 0x7fdf6679dab0
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _18 = strcmp (_17, "run-command-abort");
    version:18>

 ================== pre trace ptable ================== 
trace fucntion name:strcmp 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf6679dab0
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _18 = strcmp (_17, "run-command-abort");
    version:18>
is Other function strcmp
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_40>
_18 = strcmp (_17, "run-command-abort");
_18 = strcmp (_17, "run-command-abort");
./benchmarks/git/use_after_free_2/git_uaf_2.c:435:14: warning: use location
  435 |         if (!strcmp(argv[1], "run-command-abort"))
      |              ^
this stmt call this function :strcmp
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:0 
if (_18 == 0)
./benchmarks/git/use_after_free_2/git_uaf_2.c:435:12: warning: use location
  435 |         if (!strcmp(argv[1], "run-command-abort"))
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf6679dab0
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _18 = strcmp (_17, "run-command-abort");
    version:18>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <function_decl 0x7fdf662b9500 task_finished
    type <function_type 0x7fdf662add20
        type <integer_type 0x7fdf667aa5e8 int public SI
            size <integer_cst 0x7fdf66795df8 constant 32>
            unit-size <integer_cst 0x7fdf66795e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
            pointer_to_this <pointer_type 0x7fdf667b19d8>>
        QI
        size <integer_cst 0x7fdf66795ca8 constant 8>
        unit-size <integer_cst 0x7fdf66795cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7fdf662af4b0 value <integer_type 0x7fdf667aa5e8 int>
            chain <tree_list 0x7fdf662af460 value <pointer_type 0x7fdf662adbd0>
                chain <tree_list 0x7fdf662af410 value <pointer_type 0x7fdf662ada80>
                    chain <tree_list 0x7fdf662af3c0 value <pointer_type 0x7fdf667b1000>
                        chain <tree_list 0x7fdf662af398 value <pointer_type 0x7fdf667b1000> chain <tree_list 0x7fdf667a9b18>>>>>>
        pointer_to_this <pointer_type 0x7fdf662addc8>>
    addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/git/use_after_free_2/git_uaf_2.c:400:12 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c> initial <block 0x7fdf662cb300>
    result <result_decl 0x7fdf667a02d0 D.4540 type <integer_type 0x7fdf667aa5e8 int>
        ignored SI ./benchmarks/git/use_after_free_2/git_uaf_2.c:400:12 size <integer_cst 0x7fdf66795df8 32> unit-size <integer_cst 0x7fdf66795e10 4>
        align:32 warn_if_not_align:0 context <function_decl 0x7fdf662b9500 task_finished>>
    arguments <parm_decl 0x7fdf662c3380 result type <integer_type 0x7fdf667aa5e8 int>
        SI ./benchmarks/git/use_after_free_2/git_uaf_2.c:400:30 size <integer_cst 0x7fdf66795df8 32> unit-size <integer_cst 0x7fdf66795e10 4>
        align:32 warn_if_not_align:0 context <function_decl 0x7fdf662b9500 task_finished> arg-type <integer_type 0x7fdf667aa5e8 int>
        chain <parm_decl 0x7fdf662c3400 cp type <pointer_type 0x7fdf662bb7e0>
            unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:401:27
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9500 task_finished> arg-type <pointer_type 0x7fdf662bb7e0> chain <parm_decl 0x7fdf662c3480 err>>>
    struct-function 0x7fdf662cc0b8>
 <function_decl 0x7fdf662b9500 task_finished
    type <function_type 0x7fdf662add20
        type <integer_type 0x7fdf667aa5e8 int public SI
            size <integer_cst 0x7fdf66795df8 constant 32>
            unit-size <integer_cst 0x7fdf66795e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
            pointer_to_this <pointer_type 0x7fdf667b19d8>>
        QI
        size <integer_cst 0x7fdf66795ca8 constant 8>
        unit-size <integer_cst 0x7fdf66795cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7fdf662af4b0 value <integer_type 0x7fdf667aa5e8 int>
            chain <tree_list 0x7fdf662af460 value <pointer_type 0x7fdf662adbd0>
                chain <tree_list 0x7fdf662af410 value <pointer_type 0x7fdf662ada80>
                    chain <tree_list 0x7fdf662af3c0 value <pointer_type 0x7fdf667b1000>
                        chain <tree_list 0x7fdf662af398 value <pointer_type 0x7fdf667b1000> chain <tree_list 0x7fdf667a9b18>>>>>>
        pointer_to_this <pointer_type 0x7fdf662addc8>>
    addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/git/use_after_free_2/git_uaf_2.c:400:12 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c> initial <block 0x7fdf662cb300>
    result <result_decl 0x7fdf667a02d0 D.4540 type <integer_type 0x7fdf667aa5e8 int>
        ignored SI ./benchmarks/git/use_after_free_2/git_uaf_2.c:400:12 size <integer_cst 0x7fdf66795df8 32> unit-size <integer_cst 0x7fdf66795e10 4>
        align:32 warn_if_not_align:0 context <function_decl 0x7fdf662b9500 task_finished>>
    arguments <parm_decl 0x7fdf662c3380 result type <integer_type 0x7fdf667aa5e8 int>
        SI ./benchmarks/git/use_after_free_2/git_uaf_2.c:400:30 size <integer_cst 0x7fdf66795df8 32> unit-size <integer_cst 0x7fdf66795e10 4>
        align:32 warn_if_not_align:0 context <function_decl 0x7fdf662b9500 task_finished> arg-type <integer_type 0x7fdf667aa5e8 int>
        chain <parm_decl 0x7fdf662c3400 cp type <pointer_type 0x7fdf662bb7e0>
            unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:401:27
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9500 task_finished> arg-type <pointer_type 0x7fdf662bb7e0> chain <parm_decl 0x7fdf662c3480 err>>>
    struct-function 0x7fdf662cc0b8>

 ================== pre trace ptable ================== 
trace fucntion name:task_finished 
[40;44m =======trace_function_path task_finished  function_call count: 1 level :888========  [0m
 <function_decl 0x7fdf662b9500 task_finished
    type <function_type 0x7fdf662add20
        type <integer_type 0x7fdf667aa5e8 int public SI
            size <integer_cst 0x7fdf66795df8 constant 32>
            unit-size <integer_cst 0x7fdf66795e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
            pointer_to_this <pointer_type 0x7fdf667b19d8>>
        QI
        size <integer_cst 0x7fdf66795ca8 constant 8>
        unit-size <integer_cst 0x7fdf66795cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7fdf662af4b0 value <integer_type 0x7fdf667aa5e8 int>
            chain <tree_list 0x7fdf662af460 value <pointer_type 0x7fdf662adbd0>
                chain <tree_list 0x7fdf662af410 value <pointer_type 0x7fdf662ada80>
                    chain <tree_list 0x7fdf662af3c0 value <pointer_type 0x7fdf667b1000>
                        chain <tree_list 0x7fdf662af398 value <pointer_type 0x7fdf667b1000> chain <tree_list 0x7fdf667a9b18>>>>>>
        pointer_to_this <pointer_type 0x7fdf662addc8>>
    addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/git/use_after_free_2/git_uaf_2.c:400:12 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c> initial <block 0x7fdf662cb300>
    result <result_decl 0x7fdf667a02d0 D.4540 type <integer_type 0x7fdf667aa5e8 int>
        ignored SI ./benchmarks/git/use_after_free_2/git_uaf_2.c:400:12 size <integer_cst 0x7fdf66795df8 32> unit-size <integer_cst 0x7fdf66795e10 4>
        align:32 warn_if_not_align:0 context <function_decl 0x7fdf662b9500 task_finished>>
    arguments <parm_decl 0x7fdf662c3380 result type <integer_type 0x7fdf667aa5e8 int>
        SI ./benchmarks/git/use_after_free_2/git_uaf_2.c:400:30 size <integer_cst 0x7fdf66795df8 32> unit-size <integer_cst 0x7fdf66795e10 4>
        align:32 warn_if_not_align:0 context <function_decl 0x7fdf662b9500 task_finished> arg-type <integer_type 0x7fdf667aa5e8 int>
        chain <parm_decl 0x7fdf662c3400 cp type <pointer_type 0x7fdf662bb7e0>
            unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:401:27
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9500 task_finished> arg-type <pointer_type 0x7fdf662bb7e0> chain <parm_decl 0x7fdf662c3480 err>>>
    struct-function 0x7fdf662cc0b8>
[40;36m ======= node_fun:task_finished========= [0m
[40;36m ======= find relate stmt with task_finished ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strbuf_addf========= [0m
[40;46m =======add node_fun stack:strbuf_addf========= [0m

 ================== pre trace ptable finish================== 
 <function_decl 0x7fdf662b9500 task_finished
    type <function_type 0x7fdf662add20
        type <integer_type 0x7fdf667aa5e8 int public SI
            size <integer_cst 0x7fdf66795df8 constant 32>
            unit-size <integer_cst 0x7fdf66795e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
            pointer_to_this <pointer_type 0x7fdf667b19d8>>
        QI
        size <integer_cst 0x7fdf66795ca8 constant 8>
        unit-size <integer_cst 0x7fdf66795cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7fdf662af4b0 value <integer_type 0x7fdf667aa5e8 int>
            chain <tree_list 0x7fdf662af460 value <pointer_type 0x7fdf662adbd0>
                chain <tree_list 0x7fdf662af410 value <pointer_type 0x7fdf662ada80>
                    chain <tree_list 0x7fdf662af3c0 value <pointer_type 0x7fdf667b1000>
                        chain <tree_list 0x7fdf662af398 value <pointer_type 0x7fdf667b1000> chain <tree_list 0x7fdf667a9b18>>>>>>
        pointer_to_this <pointer_type 0x7fdf662addc8>>
    addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/git/use_after_free_2/git_uaf_2.c:400:12 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c> initial <block 0x7fdf662cb300>
    result <result_decl 0x7fdf667a02d0 D.4540 type <integer_type 0x7fdf667aa5e8 int>
        ignored SI ./benchmarks/git/use_after_free_2/git_uaf_2.c:400:12 size <integer_cst 0x7fdf66795df8 32> unit-size <integer_cst 0x7fdf66795e10 4>
        align:32 warn_if_not_align:0 context <function_decl 0x7fdf662b9500 task_finished>>
    arguments <parm_decl 0x7fdf662c3380 result type <integer_type 0x7fdf667aa5e8 int>
        SI ./benchmarks/git/use_after_free_2/git_uaf_2.c:400:30 size <integer_cst 0x7fdf66795df8 32> unit-size <integer_cst 0x7fdf66795e10 4>
        align:32 warn_if_not_align:0 context <function_decl 0x7fdf662b9500 task_finished> arg-type <integer_type 0x7fdf667aa5e8 int>
        chain <parm_decl 0x7fdf662c3400 cp type <pointer_type 0x7fdf662bb7e0>
            unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:401:27
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9500 task_finished> arg-type <pointer_type 0x7fdf662bb7e0> chain <parm_decl 0x7fdf662c3480 err>>>
    struct-function 0x7fdf662cc0b8>
is Other function task_finished
 
 Start check Pointer Collect  

======================================================================
# .MEM_44 = VDEF <.MEM_40>
_19 = run_processes_parallel (jobs_33, parallel_next, 0B, task_finished, &proc);
_19 = run_processes_parallel (jobs_33, parallel_next, 0B, task_finished, &proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:436:17: warning: use location
  436 |                 exit(run_processes_parallel(jobs, parallel_next,
      |                 ^
this stmt call this function :run_processes_parallel
trace fucntion name:run_processes_parallel 
[40;44m =======trace_function_path run_processes_parallel  function_call count: 7 level :0========  [0m
 <function_decl 0x7fdf662b9500 task_finished
    type <function_type 0x7fdf662add20
        type <integer_type 0x7fdf667aa5e8 int public SI
            size <integer_cst 0x7fdf66795df8 constant 32>
            unit-size <integer_cst 0x7fdf66795e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
            pointer_to_this <pointer_type 0x7fdf667b19d8>>
        QI
        size <integer_cst 0x7fdf66795ca8 constant 8>
        unit-size <integer_cst 0x7fdf66795cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7fdf662af4b0 value <integer_type 0x7fdf667aa5e8 int>
            chain <tree_list 0x7fdf662af460 value <pointer_type 0x7fdf662adbd0>
                chain <tree_list 0x7fdf662af410 value <pointer_type 0x7fdf662ada80>
                    chain <tree_list 0x7fdf662af3c0 value <pointer_type 0x7fdf667b1000>
                        chain <tree_list 0x7fdf662af398 value <pointer_type 0x7fdf667b1000> chain <tree_list 0x7fdf667a9b18>>>>>>
        pointer_to_this <pointer_type 0x7fdf662addc8>>
    addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/git/use_after_free_2/git_uaf_2.c:400:12 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c> initial <block 0x7fdf662cb300>
    result <result_decl 0x7fdf667a02d0 D.4540 type <integer_type 0x7fdf667aa5e8 int>
        ignored SI ./benchmarks/git/use_after_free_2/git_uaf_2.c:400:12 size <integer_cst 0x7fdf66795df8 32> unit-size <integer_cst 0x7fdf66795e10 4>
        align:32 warn_if_not_align:0 context <function_decl 0x7fdf662b9500 task_finished>>
    arguments <parm_decl 0x7fdf662c3380 result type <integer_type 0x7fdf667aa5e8 int>
        SI ./benchmarks/git/use_after_free_2/git_uaf_2.c:400:30 size <integer_cst 0x7fdf66795df8 32> unit-size <integer_cst 0x7fdf66795e10 4>
        align:32 warn_if_not_align:0 context <function_decl 0x7fdf662b9500 task_finished> arg-type <integer_type 0x7fdf667aa5e8 int>
        chain <parm_decl 0x7fdf662c3400 cp type <pointer_type 0x7fdf662bb7e0>
            unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:401:27
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9500 task_finished> arg-type <pointer_type 0x7fdf662bb7e0> chain <parm_decl 0x7fdf662c3480 err>>>
    struct-function 0x7fdf662cc0b8>
[40;36m ======= node_fun:run_processes_parallel========= [0m
[40;36m ======= find relate stmt with task_finished ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:pp_cleanup========= [0m
[40;46m =======add node_fun stack:pp_cleanup========= [0m
[40;42m =======pre add _ fucntion:kill_children========= [0m
[40;46m =======add node_fun stack:kill_children========= [0m
[40;44m =======trace_function_path kill_children  function_call count: 1 level :1========  [0m
 <function_decl 0x7fdf662b9500 task_finished
    type <function_type 0x7fdf662add20
        type <integer_type 0x7fdf667aa5e8 int public SI
            size <integer_cst 0x7fdf66795df8 constant 32>
            unit-size <integer_cst 0x7fdf66795e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
            pointer_to_this <pointer_type 0x7fdf667b19d8>>
        QI
        size <integer_cst 0x7fdf66795ca8 constant 8>
        unit-size <integer_cst 0x7fdf66795cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7fdf662af4b0 value <integer_type 0x7fdf667aa5e8 int>
            chain <tree_list 0x7fdf662af460 value <pointer_type 0x7fdf662adbd0>
                chain <tree_list 0x7fdf662af410 value <pointer_type 0x7fdf662ada80>
                    chain <tree_list 0x7fdf662af3c0 value <pointer_type 0x7fdf667b1000>
                        chain <tree_list 0x7fdf662af398 value <pointer_type 0x7fdf667b1000> chain <tree_list 0x7fdf667a9b18>>>>>>
        pointer_to_this <pointer_type 0x7fdf662addc8>>
    addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/git/use_after_free_2/git_uaf_2.c:400:12 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c> initial <block 0x7fdf662cb300>
    result <result_decl 0x7fdf667a02d0 D.4540 type <integer_type 0x7fdf667aa5e8 int>
        ignored SI ./benchmarks/git/use_after_free_2/git_uaf_2.c:400:12 size <integer_cst 0x7fdf66795df8 32> unit-size <integer_cst 0x7fdf66795e10 4>
        align:32 warn_if_not_align:0 context <function_decl 0x7fdf662b9500 task_finished>>
    arguments <parm_decl 0x7fdf662c3380 result type <integer_type 0x7fdf667aa5e8 int>
        SI ./benchmarks/git/use_after_free_2/git_uaf_2.c:400:30 size <integer_cst 0x7fdf66795df8 32> unit-size <integer_cst 0x7fdf66795e10 4>
        align:32 warn_if_not_align:0 context <function_decl 0x7fdf662b9500 task_finished> arg-type <integer_type 0x7fdf667aa5e8 int>
        chain <parm_decl 0x7fdf662c3400 cp type <pointer_type 0x7fdf662bb7e0>
            unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:401:27
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9500 task_finished> arg-type <pointer_type 0x7fdf662bb7e0> chain <parm_decl 0x7fdf662c3480 err>>>
    struct-function 0x7fdf662cc0b8>
[40;36m ======= node_fun:kill_children========= [0m
[40;36m ======= find relate stmt with task_finished ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:kill========= [0m
[40;46m =======add node_fun stack:kill========= [0m
[40;42m =======pre add _ fucntion:pp_collect_finished========= [0m
[40;46m =======add node_fun stack:pp_collect_finished========= [0m
[40;44m =======trace_function_path pp_collect_finished  function_call count: 5 level :1========  [0m
 <function_decl 0x7fdf662b9500 task_finished
    type <function_type 0x7fdf662add20
        type <integer_type 0x7fdf667aa5e8 int public SI
            size <integer_cst 0x7fdf66795df8 constant 32>
            unit-size <integer_cst 0x7fdf66795e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
            pointer_to_this <pointer_type 0x7fdf667b19d8>>
        QI
        size <integer_cst 0x7fdf66795ca8 constant 8>
        unit-size <integer_cst 0x7fdf66795cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7fdf662af4b0 value <integer_type 0x7fdf667aa5e8 int>
            chain <tree_list 0x7fdf662af460 value <pointer_type 0x7fdf662adbd0>
                chain <tree_list 0x7fdf662af410 value <pointer_type 0x7fdf662ada80>
                    chain <tree_list 0x7fdf662af3c0 value <pointer_type 0x7fdf667b1000>
                        chain <tree_list 0x7fdf662af398 value <pointer_type 0x7fdf667b1000> chain <tree_list 0x7fdf667a9b18>>>>>>
        pointer_to_this <pointer_type 0x7fdf662addc8>>
    addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/git/use_after_free_2/git_uaf_2.c:400:12 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c> initial <block 0x7fdf662cb300>
    result <result_decl 0x7fdf667a02d0 D.4540 type <integer_type 0x7fdf667aa5e8 int>
        ignored SI ./benchmarks/git/use_after_free_2/git_uaf_2.c:400:12 size <integer_cst 0x7fdf66795df8 32> unit-size <integer_cst 0x7fdf66795e10 4>
        align:32 warn_if_not_align:0 context <function_decl 0x7fdf662b9500 task_finished>>
    arguments <parm_decl 0x7fdf662c3380 result type <integer_type 0x7fdf667aa5e8 int>
        SI ./benchmarks/git/use_after_free_2/git_uaf_2.c:400:30 size <integer_cst 0x7fdf66795df8 32> unit-size <integer_cst 0x7fdf66795e10 4>
        align:32 warn_if_not_align:0 context <function_decl 0x7fdf662b9500 task_finished> arg-type <integer_type 0x7fdf667aa5e8 int>
        chain <parm_decl 0x7fdf662c3400 cp type <pointer_type 0x7fdf662bb7e0>
            unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:401:27
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9500 task_finished> arg-type <pointer_type 0x7fdf662bb7e0> chain <parm_decl 0x7fdf662c3480 err>>>
    struct-function 0x7fdf662cc0b8>
[40;36m ======= node_fun:pp_collect_finished========= [0m
[40;36m ======= find relate stmt with task_finished ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:fputs========= [0m
[40;46m =======add node_fun stack:fputs========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:finish_command========= [0m
[40;46m =======add node_fun stack:finish_command========= [0m
[40;44m =======trace_function_path finish_command  function_call count: 2 level :2========  [0m
 <function_decl 0x7fdf662b9500 task_finished
    type <function_type 0x7fdf662add20
        type <integer_type 0x7fdf667aa5e8 int public SI
            size <integer_cst 0x7fdf66795df8 constant 32>
            unit-size <integer_cst 0x7fdf66795e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
            pointer_to_this <pointer_type 0x7fdf667b19d8>>
        QI
        size <integer_cst 0x7fdf66795ca8 constant 8>
        unit-size <integer_cst 0x7fdf66795cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7fdf662af4b0 value <integer_type 0x7fdf667aa5e8 int>
            chain <tree_list 0x7fdf662af460 value <pointer_type 0x7fdf662adbd0>
                chain <tree_list 0x7fdf662af410 value <pointer_type 0x7fdf662ada80>
                    chain <tree_list 0x7fdf662af3c0 value <pointer_type 0x7fdf667b1000>
                        chain <tree_list 0x7fdf662af398 value <pointer_type 0x7fdf667b1000> chain <tree_list 0x7fdf667a9b18>>>>>>
        pointer_to_this <pointer_type 0x7fdf662addc8>>
    addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/git/use_after_free_2/git_uaf_2.c:400:12 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c> initial <block 0x7fdf662cb300>
    result <result_decl 0x7fdf667a02d0 D.4540 type <integer_type 0x7fdf667aa5e8 int>
        ignored SI ./benchmarks/git/use_after_free_2/git_uaf_2.c:400:12 size <integer_cst 0x7fdf66795df8 32> unit-size <integer_cst 0x7fdf66795e10 4>
        align:32 warn_if_not_align:0 context <function_decl 0x7fdf662b9500 task_finished>>
    arguments <parm_decl 0x7fdf662c3380 result type <integer_type 0x7fdf667aa5e8 int>
        SI ./benchmarks/git/use_after_free_2/git_uaf_2.c:400:30 size <integer_cst 0x7fdf66795df8 32> unit-size <integer_cst 0x7fdf66795e10 4>
        align:32 warn_if_not_align:0 context <function_decl 0x7fdf662b9500 task_finished> arg-type <integer_type 0x7fdf667aa5e8 int>
        chain <parm_decl 0x7fdf662c3400 cp type <pointer_type 0x7fdf662bb7e0>
            unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:401:27
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9500 task_finished> arg-type <pointer_type 0x7fdf662bb7e0> chain <parm_decl 0x7fdf662c3480 err>>>
    struct-function 0x7fdf662cc0b8>
[40;36m ======= node_fun:finish_command========= [0m
[40;36m ======= find relate stmt with task_finished ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_clear========= [0m
[40;46m =======add node_fun stack:child_process_clear========= [0m
[40;44m =======trace_function_path child_process_clear  function_call count: 1 level :3========  [0m
 <function_decl 0x7fdf662b9500 task_finished
    type <function_type 0x7fdf662add20
        type <integer_type 0x7fdf667aa5e8 int public SI
            size <integer_cst 0x7fdf66795df8 constant 32>
            unit-size <integer_cst 0x7fdf66795e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
            pointer_to_this <pointer_type 0x7fdf667b19d8>>
        QI
        size <integer_cst 0x7fdf66795ca8 constant 8>
        unit-size <integer_cst 0x7fdf66795cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7fdf662af4b0 value <integer_type 0x7fdf667aa5e8 int>
            chain <tree_list 0x7fdf662af460 value <pointer_type 0x7fdf662adbd0>
                chain <tree_list 0x7fdf662af410 value <pointer_type 0x7fdf662ada80>
                    chain <tree_list 0x7fdf662af3c0 value <pointer_type 0x7fdf667b1000>
                        chain <tree_list 0x7fdf662af398 value <pointer_type 0x7fdf667b1000> chain <tree_list 0x7fdf667a9b18>>>>>>
        pointer_to_this <pointer_type 0x7fdf662addc8>>
    addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/git/use_after_free_2/git_uaf_2.c:400:12 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c> initial <block 0x7fdf662cb300>
    result <result_decl 0x7fdf667a02d0 D.4540 type <integer_type 0x7fdf667aa5e8 int>
        ignored SI ./benchmarks/git/use_after_free_2/git_uaf_2.c:400:12 size <integer_cst 0x7fdf66795df8 32> unit-size <integer_cst 0x7fdf66795e10 4>
        align:32 warn_if_not_align:0 context <function_decl 0x7fdf662b9500 task_finished>>
    arguments <parm_decl 0x7fdf662c3380 result type <integer_type 0x7fdf667aa5e8 int>
        SI ./benchmarks/git/use_after_free_2/git_uaf_2.c:400:30 size <integer_cst 0x7fdf66795df8 32> unit-size <integer_cst 0x7fdf66795e10 4>
        align:32 warn_if_not_align:0 context <function_decl 0x7fdf662b9500 task_finished> arg-type <integer_type 0x7fdf667aa5e8 int>
        chain <parm_decl 0x7fdf662c3400 cp type <pointer_type 0x7fdf662bb7e0>
            unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:401:27
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9500 task_finished> arg-type <pointer_type 0x7fdf662bb7e0> chain <parm_decl 0x7fdf662c3480 err>>>
    struct-function 0x7fdf662cc0b8>
[40;36m ======= node_fun:child_process_clear========= [0m
[40;36m ======= find relate stmt with task_finished ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;46m =======add node_fun stack:wait_or_whine========= [0m
[40;42m =======pre add _ fucntion:pp_output========= [0m
[40;46m =======add node_fun stack:pp_output========= [0m
[40;42m =======pre add _ fucntion:pp_buffer_stderr========= [0m
[40;46m =======add node_fun stack:pp_buffer_stderr========= [0m
[40;42m =======pre add _ fucntion:pp_start_one========= [0m
[40;46m =======add node_fun stack:pp_start_one========= [0m
[40;44m =======trace_function_path pp_start_one  function_call count: 5 level :1========  [0m
 <function_decl 0x7fdf662b9500 task_finished
    type <function_type 0x7fdf662add20
        type <integer_type 0x7fdf667aa5e8 int public SI
            size <integer_cst 0x7fdf66795df8 constant 32>
            unit-size <integer_cst 0x7fdf66795e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
            pointer_to_this <pointer_type 0x7fdf667b19d8>>
        QI
        size <integer_cst 0x7fdf66795ca8 constant 8>
        unit-size <integer_cst 0x7fdf66795cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7fdf662af4b0 value <integer_type 0x7fdf667aa5e8 int>
            chain <tree_list 0x7fdf662af460 value <pointer_type 0x7fdf662adbd0>
                chain <tree_list 0x7fdf662af410 value <pointer_type 0x7fdf662ada80>
                    chain <tree_list 0x7fdf662af3c0 value <pointer_type 0x7fdf667b1000>
                        chain <tree_list 0x7fdf662af398 value <pointer_type 0x7fdf667b1000> chain <tree_list 0x7fdf667a9b18>>>>>>
        pointer_to_this <pointer_type 0x7fdf662addc8>>
    addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/git/use_after_free_2/git_uaf_2.c:400:12 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c> initial <block 0x7fdf662cb300>
    result <result_decl 0x7fdf667a02d0 D.4540 type <integer_type 0x7fdf667aa5e8 int>
        ignored SI ./benchmarks/git/use_after_free_2/git_uaf_2.c:400:12 size <integer_cst 0x7fdf66795df8 32> unit-size <integer_cst 0x7fdf66795e10 4>
        align:32 warn_if_not_align:0 context <function_decl 0x7fdf662b9500 task_finished>>
    arguments <parm_decl 0x7fdf662c3380 result type <integer_type 0x7fdf667aa5e8 int>
        SI ./benchmarks/git/use_after_free_2/git_uaf_2.c:400:30 size <integer_cst 0x7fdf66795df8 32> unit-size <integer_cst 0x7fdf66795e10 4>
        align:32 warn_if_not_align:0 context <function_decl 0x7fdf662b9500 task_finished> arg-type <integer_type 0x7fdf667aa5e8 int>
        chain <parm_decl 0x7fdf662c3400 cp type <pointer_type 0x7fdf662bb7e0>
            unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:401:27
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9500 task_finished> arg-type <pointer_type 0x7fdf662bb7e0> chain <parm_decl 0x7fdf662c3480 err>>>
    struct-function 0x7fdf662cc0b8>
[40;36m ======= node_fun:pp_start_one========= [0m
[40;36m ======= find relate stmt with task_finished ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:start_command========= [0m
[40;46m =======add node_fun stack:start_command========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:pp_init========= [0m
[40;46m =======add node_fun stack:pp_init========= [0m
[40;44m =======trace_function_path pp_init  function_call count: 7 level :1========  [0m
 <function_decl 0x7fdf662b9500 task_finished
    type <function_type 0x7fdf662add20
        type <integer_type 0x7fdf667aa5e8 int public SI
            size <integer_cst 0x7fdf66795df8 constant 32>
            unit-size <integer_cst 0x7fdf66795e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
            pointer_to_this <pointer_type 0x7fdf667b19d8>>
        QI
        size <integer_cst 0x7fdf66795ca8 constant 8>
        unit-size <integer_cst 0x7fdf66795cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7fdf662af4b0 value <integer_type 0x7fdf667aa5e8 int>
            chain <tree_list 0x7fdf662af460 value <pointer_type 0x7fdf662adbd0>
                chain <tree_list 0x7fdf662af410 value <pointer_type 0x7fdf662ada80>
                    chain <tree_list 0x7fdf662af3c0 value <pointer_type 0x7fdf667b1000>
                        chain <tree_list 0x7fdf662af398 value <pointer_type 0x7fdf667b1000> chain <tree_list 0x7fdf667a9b18>>>>>>
        pointer_to_this <pointer_type 0x7fdf662addc8>>
    addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/git/use_after_free_2/git_uaf_2.c:400:12 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c> initial <block 0x7fdf662cb300>
    result <result_decl 0x7fdf667a02d0 D.4540 type <integer_type 0x7fdf667aa5e8 int>
        ignored SI ./benchmarks/git/use_after_free_2/git_uaf_2.c:400:12 size <integer_cst 0x7fdf66795df8 32> unit-size <integer_cst 0x7fdf66795e10 4>
        align:32 warn_if_not_align:0 context <function_decl 0x7fdf662b9500 task_finished>>
    arguments <parm_decl 0x7fdf662c3380 result type <integer_type 0x7fdf667aa5e8 int>
        SI ./benchmarks/git/use_after_free_2/git_uaf_2.c:400:30 size <integer_cst 0x7fdf66795df8 32> unit-size <integer_cst 0x7fdf66795e10 4>
        align:32 warn_if_not_align:0 context <function_decl 0x7fdf662b9500 task_finished> arg-type <integer_type 0x7fdf667aa5e8 int>
        chain <parm_decl 0x7fdf662c3400 cp type <pointer_type 0x7fdf662bb7e0>
            unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:401:27
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9500 task_finished> arg-type <pointer_type 0x7fdf662bb7e0> chain <parm_decl 0x7fdf662c3480 err>>>
    struct-function 0x7fdf662cc0b8>
[40;36m ======= node_fun:pp_init========= [0m
[40;36m ======= find relate stmt with task_finished ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;46m =======add node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;46m =======add node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;46m =======add node_fun stack:online_cpus========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_44 = VDEF <.MEM_40>
_19 = run_processes_parallel (jobs_33, parallel_next, 0B, task_finished, &proc);
_19 = run_processes_parallel (jobs_33, parallel_next, 0B, task_finished, &proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:436:17: warning: use location
this stmt call this function :run_processes_parallel
trace fucntion name:run_processes_parallel 
[40;44m =======trace_function_path run_processes_parallel  function_call count: 7 level :0========  [0m
 <function_decl 0x7fdf662b9500 task_finished
    type <function_type 0x7fdf662add20
        type <integer_type 0x7fdf667aa5e8 int public SI
            size <integer_cst 0x7fdf66795df8 constant 32>
            unit-size <integer_cst 0x7fdf66795e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
            pointer_to_this <pointer_type 0x7fdf667b19d8>>
        QI
        size <integer_cst 0x7fdf66795ca8 constant 8>
        unit-size <integer_cst 0x7fdf66795cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7fdf662af4b0 value <integer_type 0x7fdf667aa5e8 int>
            chain <tree_list 0x7fdf662af460 value <pointer_type 0x7fdf662adbd0>
                chain <tree_list 0x7fdf662af410 value <pointer_type 0x7fdf662ada80>
                    chain <tree_list 0x7fdf662af3c0 value <pointer_type 0x7fdf667b1000>
                        chain <tree_list 0x7fdf662af398 value <pointer_type 0x7fdf667b1000> chain <tree_list 0x7fdf667a9b18>>>>>>
        pointer_to_this <pointer_type 0x7fdf662addc8>>
    addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/git/use_after_free_2/git_uaf_2.c:400:12 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c> initial <block 0x7fdf662cb300>
    result <result_decl 0x7fdf667a02d0 D.4540 type <integer_type 0x7fdf667aa5e8 int>
        ignored SI ./benchmarks/git/use_after_free_2/git_uaf_2.c:400:12 size <integer_cst 0x7fdf66795df8 32> unit-size <integer_cst 0x7fdf66795e10 4>
        align:32 warn_if_not_align:0 context <function_decl 0x7fdf662b9500 task_finished>>
    arguments <parm_decl 0x7fdf662c3380 result type <integer_type 0x7fdf667aa5e8 int>
        SI ./benchmarks/git/use_after_free_2/git_uaf_2.c:400:30 size <integer_cst 0x7fdf66795df8 32> unit-size <integer_cst 0x7fdf66795e10 4>
        align:32 warn_if_not_align:0 context <function_decl 0x7fdf662b9500 task_finished> arg-type <integer_type 0x7fdf667aa5e8 int>
        chain <parm_decl 0x7fdf662c3400 cp type <pointer_type 0x7fdf662bb7e0>
            unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:401:27
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9500 task_finished> arg-type <pointer_type 0x7fdf662bb7e0> chain <parm_decl 0x7fdf662c3480 err>>>
    struct-function 0x7fdf662cc0b8>
[40;36m ======= node_fun:run_processes_parallel========= [0m
[40;36m ======= find relate stmt with task_finished ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:pp_cleanup========= [0m
[40;46m =======add node_fun stack:pp_cleanup========= [0m
[40;42m =======pre add _ fucntion:kill_children========= [0m
[40;46m =======add node_fun stack:kill_children========= [0m
[40;44m =======trace_function_path kill_children  function_call count: 1 level :1========  [0m
 <function_decl 0x7fdf662b9500 task_finished
    type <function_type 0x7fdf662add20
        type <integer_type 0x7fdf667aa5e8 int public SI
            size <integer_cst 0x7fdf66795df8 constant 32>
            unit-size <integer_cst 0x7fdf66795e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
            pointer_to_this <pointer_type 0x7fdf667b19d8>>
        QI
        size <integer_cst 0x7fdf66795ca8 constant 8>
        unit-size <integer_cst 0x7fdf66795cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7fdf662af4b0 value <integer_type 0x7fdf667aa5e8 int>
            chain <tree_list 0x7fdf662af460 value <pointer_type 0x7fdf662adbd0>
                chain <tree_list 0x7fdf662af410 value <pointer_type 0x7fdf662ada80>
                    chain <tree_list 0x7fdf662af3c0 value <pointer_type 0x7fdf667b1000>
                        chain <tree_list 0x7fdf662af398 value <pointer_type 0x7fdf667b1000> chain <tree_list 0x7fdf667a9b18>>>>>>
        pointer_to_this <pointer_type 0x7fdf662addc8>>
    addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/git/use_after_free_2/git_uaf_2.c:400:12 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c> initial <block 0x7fdf662cb300>
    result <result_decl 0x7fdf667a02d0 D.4540 type <integer_type 0x7fdf667aa5e8 int>
        ignored SI ./benchmarks/git/use_after_free_2/git_uaf_2.c:400:12 size <integer_cst 0x7fdf66795df8 32> unit-size <integer_cst 0x7fdf66795e10 4>
        align:32 warn_if_not_align:0 context <function_decl 0x7fdf662b9500 task_finished>>
    arguments <parm_decl 0x7fdf662c3380 result type <integer_type 0x7fdf667aa5e8 int>
        SI ./benchmarks/git/use_after_free_2/git_uaf_2.c:400:30 size <integer_cst 0x7fdf66795df8 32> unit-size <integer_cst 0x7fdf66795e10 4>
        align:32 warn_if_not_align:0 context <function_decl 0x7fdf662b9500 task_finished> arg-type <integer_type 0x7fdf667aa5e8 int>
        chain <parm_decl 0x7fdf662c3400 cp type <pointer_type 0x7fdf662bb7e0>
            unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:401:27
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9500 task_finished> arg-type <pointer_type 0x7fdf662bb7e0> chain <parm_decl 0x7fdf662c3480 err>>>
    struct-function 0x7fdf662cc0b8>
[40;36m ======= node_fun:kill_children========= [0m
[40;36m ======= find relate stmt with task_finished ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:kill========= [0m
[40;46m =======add node_fun stack:kill========= [0m
[40;42m =======pre add _ fucntion:pp_collect_finished========= [0m
[40;46m =======add node_fun stack:pp_collect_finished========= [0m
[40;44m =======trace_function_path pp_collect_finished  function_call count: 5 level :1========  [0m
 <function_decl 0x7fdf662b9500 task_finished
    type <function_type 0x7fdf662add20
        type <integer_type 0x7fdf667aa5e8 int public SI
            size <integer_cst 0x7fdf66795df8 constant 32>
            unit-size <integer_cst 0x7fdf66795e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
            pointer_to_this <pointer_type 0x7fdf667b19d8>>
        QI
        size <integer_cst 0x7fdf66795ca8 constant 8>
        unit-size <integer_cst 0x7fdf66795cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7fdf662af4b0 value <integer_type 0x7fdf667aa5e8 int>
            chain <tree_list 0x7fdf662af460 value <pointer_type 0x7fdf662adbd0>
                chain <tree_list 0x7fdf662af410 value <pointer_type 0x7fdf662ada80>
                    chain <tree_list 0x7fdf662af3c0 value <pointer_type 0x7fdf667b1000>
                        chain <tree_list 0x7fdf662af398 value <pointer_type 0x7fdf667b1000> chain <tree_list 0x7fdf667a9b18>>>>>>
        pointer_to_this <pointer_type 0x7fdf662addc8>>
    addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/git/use_after_free_2/git_uaf_2.c:400:12 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c> initial <block 0x7fdf662cb300>
    result <result_decl 0x7fdf667a02d0 D.4540 type <integer_type 0x7fdf667aa5e8 int>
        ignored SI ./benchmarks/git/use_after_free_2/git_uaf_2.c:400:12 size <integer_cst 0x7fdf66795df8 32> unit-size <integer_cst 0x7fdf66795e10 4>
        align:32 warn_if_not_align:0 context <function_decl 0x7fdf662b9500 task_finished>>
    arguments <parm_decl 0x7fdf662c3380 result type <integer_type 0x7fdf667aa5e8 int>
        SI ./benchmarks/git/use_after_free_2/git_uaf_2.c:400:30 size <integer_cst 0x7fdf66795df8 32> unit-size <integer_cst 0x7fdf66795e10 4>
        align:32 warn_if_not_align:0 context <function_decl 0x7fdf662b9500 task_finished> arg-type <integer_type 0x7fdf667aa5e8 int>
        chain <parm_decl 0x7fdf662c3400 cp type <pointer_type 0x7fdf662bb7e0>
            unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:401:27
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9500 task_finished> arg-type <pointer_type 0x7fdf662bb7e0> chain <parm_decl 0x7fdf662c3480 err>>>
    struct-function 0x7fdf662cc0b8>
[40;36m ======= node_fun:pp_collect_finished========= [0m
[40;36m ======= find relate stmt with task_finished ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:fputs========= [0m
[40;46m =======add node_fun stack:fputs========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:finish_command========= [0m
[40;46m =======add node_fun stack:finish_command========= [0m
[40;44m =======trace_function_path finish_command  function_call count: 2 level :2========  [0m
 <function_decl 0x7fdf662b9500 task_finished
    type <function_type 0x7fdf662add20
        type <integer_type 0x7fdf667aa5e8 int public SI
            size <integer_cst 0x7fdf66795df8 constant 32>
            unit-size <integer_cst 0x7fdf66795e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
            pointer_to_this <pointer_type 0x7fdf667b19d8>>
        QI
        size <integer_cst 0x7fdf66795ca8 constant 8>
        unit-size <integer_cst 0x7fdf66795cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7fdf662af4b0 value <integer_type 0x7fdf667aa5e8 int>
            chain <tree_list 0x7fdf662af460 value <pointer_type 0x7fdf662adbd0>
                chain <tree_list 0x7fdf662af410 value <pointer_type 0x7fdf662ada80>
                    chain <tree_list 0x7fdf662af3c0 value <pointer_type 0x7fdf667b1000>
                        chain <tree_list 0x7fdf662af398 value <pointer_type 0x7fdf667b1000> chain <tree_list 0x7fdf667a9b18>>>>>>
        pointer_to_this <pointer_type 0x7fdf662addc8>>
    addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/git/use_after_free_2/git_uaf_2.c:400:12 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c> initial <block 0x7fdf662cb300>
    result <result_decl 0x7fdf667a02d0 D.4540 type <integer_type 0x7fdf667aa5e8 int>
        ignored SI ./benchmarks/git/use_after_free_2/git_uaf_2.c:400:12 size <integer_cst 0x7fdf66795df8 32> unit-size <integer_cst 0x7fdf66795e10 4>
        align:32 warn_if_not_align:0 context <function_decl 0x7fdf662b9500 task_finished>>
    arguments <parm_decl 0x7fdf662c3380 result type <integer_type 0x7fdf667aa5e8 int>
        SI ./benchmarks/git/use_after_free_2/git_uaf_2.c:400:30 size <integer_cst 0x7fdf66795df8 32> unit-size <integer_cst 0x7fdf66795e10 4>
        align:32 warn_if_not_align:0 context <function_decl 0x7fdf662b9500 task_finished> arg-type <integer_type 0x7fdf667aa5e8 int>
        chain <parm_decl 0x7fdf662c3400 cp type <pointer_type 0x7fdf662bb7e0>
            unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:401:27
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9500 task_finished> arg-type <pointer_type 0x7fdf662bb7e0> chain <parm_decl 0x7fdf662c3480 err>>>
    struct-function 0x7fdf662cc0b8>
[40;36m ======= node_fun:finish_command========= [0m
[40;36m ======= find relate stmt with task_finished ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_clear========= [0m
[40;46m =======add node_fun stack:child_process_clear========= [0m
[40;44m =======trace_function_path child_process_clear  function_call count: 1 level :3========  [0m
 <function_decl 0x7fdf662b9500 task_finished
    type <function_type 0x7fdf662add20
        type <integer_type 0x7fdf667aa5e8 int public SI
            size <integer_cst 0x7fdf66795df8 constant 32>
            unit-size <integer_cst 0x7fdf66795e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
            pointer_to_this <pointer_type 0x7fdf667b19d8>>
        QI
        size <integer_cst 0x7fdf66795ca8 constant 8>
        unit-size <integer_cst 0x7fdf66795cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7fdf662af4b0 value <integer_type 0x7fdf667aa5e8 int>
            chain <tree_list 0x7fdf662af460 value <pointer_type 0x7fdf662adbd0>
                chain <tree_list 0x7fdf662af410 value <pointer_type 0x7fdf662ada80>
                    chain <tree_list 0x7fdf662af3c0 value <pointer_type 0x7fdf667b1000>
                        chain <tree_list 0x7fdf662af398 value <pointer_type 0x7fdf667b1000> chain <tree_list 0x7fdf667a9b18>>>>>>
        pointer_to_this <pointer_type 0x7fdf662addc8>>
    addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/git/use_after_free_2/git_uaf_2.c:400:12 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c> initial <block 0x7fdf662cb300>
    result <result_decl 0x7fdf667a02d0 D.4540 type <integer_type 0x7fdf667aa5e8 int>
        ignored SI ./benchmarks/git/use_after_free_2/git_uaf_2.c:400:12 size <integer_cst 0x7fdf66795df8 32> unit-size <integer_cst 0x7fdf66795e10 4>
        align:32 warn_if_not_align:0 context <function_decl 0x7fdf662b9500 task_finished>>
    arguments <parm_decl 0x7fdf662c3380 result type <integer_type 0x7fdf667aa5e8 int>
        SI ./benchmarks/git/use_after_free_2/git_uaf_2.c:400:30 size <integer_cst 0x7fdf66795df8 32> unit-size <integer_cst 0x7fdf66795e10 4>
        align:32 warn_if_not_align:0 context <function_decl 0x7fdf662b9500 task_finished> arg-type <integer_type 0x7fdf667aa5e8 int>
        chain <parm_decl 0x7fdf662c3400 cp type <pointer_type 0x7fdf662bb7e0>
            unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:401:27
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9500 task_finished> arg-type <pointer_type 0x7fdf662bb7e0> chain <parm_decl 0x7fdf662c3480 err>>>
    struct-function 0x7fdf662cc0b8>
[40;36m ======= node_fun:child_process_clear========= [0m
[40;36m ======= find relate stmt with task_finished ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;46m =======add node_fun stack:wait_or_whine========= [0m
[40;42m =======pre add _ fucntion:pp_output========= [0m
[40;46m =======add node_fun stack:pp_output========= [0m
[40;42m =======pre add _ fucntion:pp_buffer_stderr========= [0m
[40;46m =======add node_fun stack:pp_buffer_stderr========= [0m
[40;42m =======pre add _ fucntion:pp_start_one========= [0m
[40;46m =======add node_fun stack:pp_start_one========= [0m
[40;44m =======trace_function_path pp_start_one  function_call count: 5 level :1========  [0m
 <function_decl 0x7fdf662b9500 task_finished
    type <function_type 0x7fdf662add20
        type <integer_type 0x7fdf667aa5e8 int public SI
            size <integer_cst 0x7fdf66795df8 constant 32>
            unit-size <integer_cst 0x7fdf66795e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
            pointer_to_this <pointer_type 0x7fdf667b19d8>>
        QI
        size <integer_cst 0x7fdf66795ca8 constant 8>
        unit-size <integer_cst 0x7fdf66795cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7fdf662af4b0 value <integer_type 0x7fdf667aa5e8 int>
            chain <tree_list 0x7fdf662af460 value <pointer_type 0x7fdf662adbd0>
                chain <tree_list 0x7fdf662af410 value <pointer_type 0x7fdf662ada80>
                    chain <tree_list 0x7fdf662af3c0 value <pointer_type 0x7fdf667b1000>
                        chain <tree_list 0x7fdf662af398 value <pointer_type 0x7fdf667b1000> chain <tree_list 0x7fdf667a9b18>>>>>>
        pointer_to_this <pointer_type 0x7fdf662addc8>>
    addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/git/use_after_free_2/git_uaf_2.c:400:12 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c> initial <block 0x7fdf662cb300>
    result <result_decl 0x7fdf667a02d0 D.4540 type <integer_type 0x7fdf667aa5e8 int>
        ignored SI ./benchmarks/git/use_after_free_2/git_uaf_2.c:400:12 size <integer_cst 0x7fdf66795df8 32> unit-size <integer_cst 0x7fdf66795e10 4>
        align:32 warn_if_not_align:0 context <function_decl 0x7fdf662b9500 task_finished>>
    arguments <parm_decl 0x7fdf662c3380 result type <integer_type 0x7fdf667aa5e8 int>
        SI ./benchmarks/git/use_after_free_2/git_uaf_2.c:400:30 size <integer_cst 0x7fdf66795df8 32> unit-size <integer_cst 0x7fdf66795e10 4>
        align:32 warn_if_not_align:0 context <function_decl 0x7fdf662b9500 task_finished> arg-type <integer_type 0x7fdf667aa5e8 int>
        chain <parm_decl 0x7fdf662c3400 cp type <pointer_type 0x7fdf662bb7e0>
            unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:401:27
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9500 task_finished> arg-type <pointer_type 0x7fdf662bb7e0> chain <parm_decl 0x7fdf662c3480 err>>>
    struct-function 0x7fdf662cc0b8>
[40;36m ======= node_fun:pp_start_one========= [0m
[40;36m ======= find relate stmt with task_finished ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:start_command========= [0m
[40;46m =======add node_fun stack:start_command========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:pp_init========= [0m
[40;46m =======add node_fun stack:pp_init========= [0m
[40;44m =======trace_function_path pp_init  function_call count: 7 level :1========  [0m
 <function_decl 0x7fdf662b9500 task_finished
    type <function_type 0x7fdf662add20
        type <integer_type 0x7fdf667aa5e8 int public SI
            size <integer_cst 0x7fdf66795df8 constant 32>
            unit-size <integer_cst 0x7fdf66795e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
            pointer_to_this <pointer_type 0x7fdf667b19d8>>
        QI
        size <integer_cst 0x7fdf66795ca8 constant 8>
        unit-size <integer_cst 0x7fdf66795cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7fdf662af4b0 value <integer_type 0x7fdf667aa5e8 int>
            chain <tree_list 0x7fdf662af460 value <pointer_type 0x7fdf662adbd0>
                chain <tree_list 0x7fdf662af410 value <pointer_type 0x7fdf662ada80>
                    chain <tree_list 0x7fdf662af3c0 value <pointer_type 0x7fdf667b1000>
                        chain <tree_list 0x7fdf662af398 value <pointer_type 0x7fdf667b1000> chain <tree_list 0x7fdf667a9b18>>>>>>
        pointer_to_this <pointer_type 0x7fdf662addc8>>
    addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/git/use_after_free_2/git_uaf_2.c:400:12 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c> initial <block 0x7fdf662cb300>
    result <result_decl 0x7fdf667a02d0 D.4540 type <integer_type 0x7fdf667aa5e8 int>
        ignored SI ./benchmarks/git/use_after_free_2/git_uaf_2.c:400:12 size <integer_cst 0x7fdf66795df8 32> unit-size <integer_cst 0x7fdf66795e10 4>
        align:32 warn_if_not_align:0 context <function_decl 0x7fdf662b9500 task_finished>>
    arguments <parm_decl 0x7fdf662c3380 result type <integer_type 0x7fdf667aa5e8 int>
        SI ./benchmarks/git/use_after_free_2/git_uaf_2.c:400:30 size <integer_cst 0x7fdf66795df8 32> unit-size <integer_cst 0x7fdf66795e10 4>
        align:32 warn_if_not_align:0 context <function_decl 0x7fdf662b9500 task_finished> arg-type <integer_type 0x7fdf667aa5e8 int>
        chain <parm_decl 0x7fdf662c3400 cp type <pointer_type 0x7fdf662bb7e0>
            unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:401:27
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9500 task_finished> arg-type <pointer_type 0x7fdf662bb7e0> chain <parm_decl 0x7fdf662c3480 err>>>
    struct-function 0x7fdf662cc0b8>
[40;36m ======= node_fun:pp_init========= [0m
[40;36m ======= find relate stmt with task_finished ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;46m =======add node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;46m =======add node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;46m =======add node_fun stack:online_cpus========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf6679daf8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _19 = run_processes_parallel (jobs_33, parallel_next, 0B, task_finished, &proc);
    version:19>
 <ssa_name 0x7fdf6679daf8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _19 = run_processes_parallel (jobs_33, parallel_next, 0B, task_finished, &proc);
    version:19>

 ================== pre trace ptable ================== 
trace fucntion name:run_processes_parallel 
[40;44m =======trace_function_path run_processes_parallel  function_call count: 7 level :888========  [0m
 <ssa_name 0x7fdf6679daf8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _19 = run_processes_parallel (jobs_33, parallel_next, 0B, task_finished, &proc);
    version:19>
[40;36m ======= node_fun:run_processes_parallel========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:pp_cleanup========= [0m
[40;46m =======add node_fun stack:pp_cleanup========= [0m
[40;42m =======pre add _ fucntion:kill_children========= [0m
[40;46m =======add node_fun stack:kill_children========= [0m
[40;44m =======trace_function_path kill_children  function_call count: 1 level :889========  [0m
 <ssa_name 0x7fdf6679daf8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _19 = run_processes_parallel (jobs_33, parallel_next, 0B, task_finished, &proc);
    version:19>
[40;36m ======= node_fun:kill_children========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:kill========= [0m
[40;46m =======add node_fun stack:kill========= [0m
[40;42m =======pre add _ fucntion:pp_collect_finished========= [0m
[40;46m =======add node_fun stack:pp_collect_finished========= [0m
[40;44m =======trace_function_path pp_collect_finished  function_call count: 5 level :889========  [0m
 <ssa_name 0x7fdf6679daf8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _19 = run_processes_parallel (jobs_33, parallel_next, 0B, task_finished, &proc);
    version:19>
[40;36m ======= node_fun:pp_collect_finished========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:fputs========= [0m
[40;46m =======add node_fun stack:fputs========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:finish_command========= [0m
[40;46m =======add node_fun stack:finish_command========= [0m
[40;44m =======trace_function_path finish_command  function_call count: 2 level :890========  [0m
 <ssa_name 0x7fdf6679daf8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _19 = run_processes_parallel (jobs_33, parallel_next, 0B, task_finished, &proc);
    version:19>
[40;36m ======= node_fun:finish_command========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_clear========= [0m
[40;46m =======add node_fun stack:child_process_clear========= [0m
[40;44m =======trace_function_path child_process_clear  function_call count: 1 level :891========  [0m
 <ssa_name 0x7fdf6679daf8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _19 = run_processes_parallel (jobs_33, parallel_next, 0B, task_finished, &proc);
    version:19>
[40;36m ======= node_fun:child_process_clear========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;46m =======add node_fun stack:wait_or_whine========= [0m
[40;42m =======pre add _ fucntion:pp_output========= [0m
[40;46m =======add node_fun stack:pp_output========= [0m
[40;42m =======pre add _ fucntion:pp_buffer_stderr========= [0m
[40;46m =======add node_fun stack:pp_buffer_stderr========= [0m
[40;42m =======pre add _ fucntion:pp_start_one========= [0m
[40;46m =======add node_fun stack:pp_start_one========= [0m
[40;44m =======trace_function_path pp_start_one  function_call count: 5 level :889========  [0m
 <ssa_name 0x7fdf6679daf8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _19 = run_processes_parallel (jobs_33, parallel_next, 0B, task_finished, &proc);
    version:19>
[40;36m ======= node_fun:pp_start_one========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:start_command========= [0m
[40;46m =======add node_fun stack:start_command========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:pp_init========= [0m
[40;46m =======add node_fun stack:pp_init========= [0m
[40;44m =======trace_function_path pp_init  function_call count: 7 level :889========  [0m
 <ssa_name 0x7fdf6679daf8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _19 = run_processes_parallel (jobs_33, parallel_next, 0B, task_finished, &proc);
    version:19>
[40;36m ======= node_fun:pp_init========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;46m =======add node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;46m =======add node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;46m =======add node_fun stack:online_cpus========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf6679daf8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _19 = run_processes_parallel (jobs_33, parallel_next, 0B, task_finished, &proc);
    version:19>
is Other function run_processes_parallel
 
 Start check Pointer Collect  

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :run_processes_parallel
# .MEM_44 = VDEF <.MEM_40>
_19 = run_processes_parallel (jobs_33, parallel_next, 0B, task_finished, &proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:436:17: warning: use location
# .MEM_42 = VDEF <.MEM_40>
_22 = run_processes_parallel (jobs_33, no_job, 0B, task_finished, &proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:440:17: warning: use location
  440 |                 exit(run_processes_parallel(jobs, no_job,
      |                 ^
exit (_22);
./benchmarks/git/use_after_free_2/git_uaf_2.c:440:17: warning: use location
this stmt call this function :exit
trace fucntion name:exit 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_44 = VDEF <.MEM_40>
_19 = run_processes_parallel (jobs_33, parallel_next, 0B, task_finished, &proc);
_19 = run_processes_parallel (jobs_33, parallel_next, 0B, task_finished, &proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:436:17: warning: use location
  436 |                 exit(run_processes_parallel(jobs, parallel_next,
      |                 ^
this stmt call this function :run_processes_parallel
trace fucntion name:run_processes_parallel 
[40;44m =======trace_function_path run_processes_parallel  function_call count: 7 level :0========  [0m
 <ssa_name 0x7fdf6679daf8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _19 = run_processes_parallel (jobs_33, parallel_next, 0B, task_finished, &proc);
    version:19>
[40;36m ======= node_fun:run_processes_parallel========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:pp_cleanup========= [0m
[40;46m =======add node_fun stack:pp_cleanup========= [0m
[40;42m =======pre add _ fucntion:kill_children========= [0m
[40;46m =======add node_fun stack:kill_children========= [0m
[40;44m =======trace_function_path kill_children  function_call count: 1 level :1========  [0m
 <ssa_name 0x7fdf6679daf8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _19 = run_processes_parallel (jobs_33, parallel_next, 0B, task_finished, &proc);
    version:19>
[40;36m ======= node_fun:kill_children========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:kill========= [0m
[40;46m =======add node_fun stack:kill========= [0m
[40;42m =======pre add _ fucntion:pp_collect_finished========= [0m
[40;46m =======add node_fun stack:pp_collect_finished========= [0m
[40;44m =======trace_function_path pp_collect_finished  function_call count: 5 level :1========  [0m
 <ssa_name 0x7fdf6679daf8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _19 = run_processes_parallel (jobs_33, parallel_next, 0B, task_finished, &proc);
    version:19>
[40;36m ======= node_fun:pp_collect_finished========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:fputs========= [0m
[40;46m =======add node_fun stack:fputs========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:finish_command========= [0m
[40;46m =======add node_fun stack:finish_command========= [0m
[40;44m =======trace_function_path finish_command  function_call count: 2 level :2========  [0m
 <ssa_name 0x7fdf6679daf8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _19 = run_processes_parallel (jobs_33, parallel_next, 0B, task_finished, &proc);
    version:19>
[40;36m ======= node_fun:finish_command========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_clear========= [0m
[40;46m =======add node_fun stack:child_process_clear========= [0m
[40;44m =======trace_function_path child_process_clear  function_call count: 1 level :3========  [0m
 <ssa_name 0x7fdf6679daf8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _19 = run_processes_parallel (jobs_33, parallel_next, 0B, task_finished, &proc);
    version:19>
[40;36m ======= node_fun:child_process_clear========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;46m =======add node_fun stack:wait_or_whine========= [0m
[40;42m =======pre add _ fucntion:pp_output========= [0m
[40;46m =======add node_fun stack:pp_output========= [0m
[40;42m =======pre add _ fucntion:pp_buffer_stderr========= [0m
[40;46m =======add node_fun stack:pp_buffer_stderr========= [0m
[40;42m =======pre add _ fucntion:pp_start_one========= [0m
[40;46m =======add node_fun stack:pp_start_one========= [0m
[40;44m =======trace_function_path pp_start_one  function_call count: 5 level :1========  [0m
 <ssa_name 0x7fdf6679daf8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _19 = run_processes_parallel (jobs_33, parallel_next, 0B, task_finished, &proc);
    version:19>
[40;36m ======= node_fun:pp_start_one========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:start_command========= [0m
[40;46m =======add node_fun stack:start_command========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:pp_init========= [0m
[40;46m =======add node_fun stack:pp_init========= [0m
[40;44m =======trace_function_path pp_init  function_call count: 7 level :1========  [0m
 <ssa_name 0x7fdf6679daf8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _19 = run_processes_parallel (jobs_33, parallel_next, 0B, task_finished, &proc);
    version:19>
[40;36m ======= node_fun:pp_init========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;46m =======add node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;46m =======add node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;46m =======add node_fun stack:online_cpus========= [0m

 ================== trace ================== 
trace fucntion free:0 
exit (_19);
./benchmarks/git/use_after_free_2/git_uaf_2.c:436:17: warning: use location
this stmt call this function :exit
trace fucntion name:exit 

 ================== trace ================== 
trace fucntion free:0 

======================================================================

 Expand conflict 
 The same function may have multiple branches :run_processes_parallel
# .MEM_44 = VDEF <.MEM_40>
_19 = run_processes_parallel (jobs_33, parallel_next, 0B, task_finished, &proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:436:17: warning: use location
# .MEM_46 = VDEF <.MEM_40>
_16 = run_processes_parallel (jobs_33, parallel_next, 0B, 0B, &proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:432:17: warning: use location
  432 |                 exit(run_processes_parallel(jobs, parallel_next,
      |                 ^
exit (_16);
./benchmarks/git/use_after_free_2/git_uaf_2.c:432:17: warning: use location
this stmt call this function :exit
trace fucntion name:exit 

 ================== trace ================== 
trace fucntion free:0 
_11 = run_command (&proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:426:17: warning: use location
  426 |                 exit(run_command(&proc));
      |                 ^
this stmt call this function :run_command
trace fucntion name:run_command 

 ================== trace ================== 
trace fucntion free:0 
proc.argv = _13;
./benchmarks/git/use_after_free_2/git_uaf_2.c:429:19: warning: use location
  429 |         proc.argv = (const char **)argv + 3;
      |                   ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf6679daf8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _19 = run_processes_parallel (jobs_33, parallel_next, 0B, task_finished, &proc);
    version:19>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf6679daf8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _19 = run_processes_parallel (jobs_33, parallel_next, 0B, task_finished, &proc);
    version:19>
 <ssa_name 0x7fdf6679daf8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _19 = run_processes_parallel (jobs_33, parallel_next, 0B, task_finished, &proc);
    version:19>

 ================== pre trace ptable ================== 
trace fucntion name:run_processes_parallel 
[40;44m =======trace_function_path run_processes_parallel  function_call count: 7 level :888========  [0m
 <ssa_name 0x7fdf6679daf8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _19 = run_processes_parallel (jobs_33, parallel_next, 0B, task_finished, &proc);
    version:19>
[40;36m ======= node_fun:run_processes_parallel========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:pp_cleanup========= [0m
[40;46m =======add node_fun stack:pp_cleanup========= [0m
[40;42m =======pre add _ fucntion:kill_children========= [0m
[40;46m =======add node_fun stack:kill_children========= [0m
[40;44m =======trace_function_path kill_children  function_call count: 1 level :889========  [0m
 <ssa_name 0x7fdf6679daf8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _19 = run_processes_parallel (jobs_33, parallel_next, 0B, task_finished, &proc);
    version:19>
[40;36m ======= node_fun:kill_children========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:kill========= [0m
[40;46m =======add node_fun stack:kill========= [0m
[40;42m =======pre add _ fucntion:pp_collect_finished========= [0m
[40;46m =======add node_fun stack:pp_collect_finished========= [0m
[40;44m =======trace_function_path pp_collect_finished  function_call count: 5 level :889========  [0m
 <ssa_name 0x7fdf6679daf8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _19 = run_processes_parallel (jobs_33, parallel_next, 0B, task_finished, &proc);
    version:19>
[40;36m ======= node_fun:pp_collect_finished========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:fputs========= [0m
[40;46m =======add node_fun stack:fputs========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:finish_command========= [0m
[40;46m =======add node_fun stack:finish_command========= [0m
[40;44m =======trace_function_path finish_command  function_call count: 2 level :890========  [0m
 <ssa_name 0x7fdf6679daf8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _19 = run_processes_parallel (jobs_33, parallel_next, 0B, task_finished, &proc);
    version:19>
[40;36m ======= node_fun:finish_command========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_clear========= [0m
[40;46m =======add node_fun stack:child_process_clear========= [0m
[40;44m =======trace_function_path child_process_clear  function_call count: 1 level :891========  [0m
 <ssa_name 0x7fdf6679daf8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _19 = run_processes_parallel (jobs_33, parallel_next, 0B, task_finished, &proc);
    version:19>
[40;36m ======= node_fun:child_process_clear========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;46m =======add node_fun stack:wait_or_whine========= [0m
[40;42m =======pre add _ fucntion:pp_output========= [0m
[40;46m =======add node_fun stack:pp_output========= [0m
[40;42m =======pre add _ fucntion:pp_buffer_stderr========= [0m
[40;46m =======add node_fun stack:pp_buffer_stderr========= [0m
[40;42m =======pre add _ fucntion:pp_start_one========= [0m
[40;46m =======add node_fun stack:pp_start_one========= [0m
[40;44m =======trace_function_path pp_start_one  function_call count: 5 level :889========  [0m
 <ssa_name 0x7fdf6679daf8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _19 = run_processes_parallel (jobs_33, parallel_next, 0B, task_finished, &proc);
    version:19>
[40;36m ======= node_fun:pp_start_one========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:start_command========= [0m
[40;46m =======add node_fun stack:start_command========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:pp_init========= [0m
[40;46m =======add node_fun stack:pp_init========= [0m
[40;44m =======trace_function_path pp_init  function_call count: 7 level :889========  [0m
 <ssa_name 0x7fdf6679daf8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _19 = run_processes_parallel (jobs_33, parallel_next, 0B, task_finished, &proc);
    version:19>
[40;36m ======= node_fun:pp_init========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;46m =======add node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;46m =======add node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;46m =======add node_fun stack:online_cpus========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf6679daf8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _19 = run_processes_parallel (jobs_33, parallel_next, 0B, task_finished, &proc);
    version:19>
is Other function run_processes_parallel
 
 Start check Pointer Collect  

======================================================================
_22 = run_processes_parallel (jobs_33, no_job, 0B, task_finished, &proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:440:17: warning: use location
  440 |                 exit(run_processes_parallel(jobs, no_job,
      |                 ^
this stmt call this function :run_processes_parallel
trace fucntion name:run_processes_parallel 
[40;44m =======trace_function_path run_processes_parallel  function_call count: 7 level :0========  [0m
 <ssa_name 0x7fdf6679daf8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _19 = run_processes_parallel (jobs_33, parallel_next, 0B, task_finished, &proc);
    version:19>
[40;36m ======= node_fun:run_processes_parallel========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:pp_cleanup========= [0m
[40;46m =======add node_fun stack:pp_cleanup========= [0m
[40;42m =======pre add _ fucntion:kill_children========= [0m
[40;46m =======add node_fun stack:kill_children========= [0m
[40;44m =======trace_function_path kill_children  function_call count: 1 level :1========  [0m
 <ssa_name 0x7fdf6679daf8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _19 = run_processes_parallel (jobs_33, parallel_next, 0B, task_finished, &proc);
    version:19>
[40;36m ======= node_fun:kill_children========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:kill========= [0m
[40;46m =======add node_fun stack:kill========= [0m
[40;42m =======pre add _ fucntion:pp_collect_finished========= [0m
[40;46m =======add node_fun stack:pp_collect_finished========= [0m
[40;44m =======trace_function_path pp_collect_finished  function_call count: 5 level :1========  [0m
 <ssa_name 0x7fdf6679daf8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _19 = run_processes_parallel (jobs_33, parallel_next, 0B, task_finished, &proc);
    version:19>
[40;36m ======= node_fun:pp_collect_finished========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:fputs========= [0m
[40;46m =======add node_fun stack:fputs========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:finish_command========= [0m
[40;46m =======add node_fun stack:finish_command========= [0m
[40;44m =======trace_function_path finish_command  function_call count: 2 level :2========  [0m
 <ssa_name 0x7fdf6679daf8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _19 = run_processes_parallel (jobs_33, parallel_next, 0B, task_finished, &proc);
    version:19>
[40;36m ======= node_fun:finish_command========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_clear========= [0m
[40;46m =======add node_fun stack:child_process_clear========= [0m
[40;44m =======trace_function_path child_process_clear  function_call count: 1 level :3========  [0m
 <ssa_name 0x7fdf6679daf8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _19 = run_processes_parallel (jobs_33, parallel_next, 0B, task_finished, &proc);
    version:19>
[40;36m ======= node_fun:child_process_clear========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;46m =======add node_fun stack:wait_or_whine========= [0m
[40;42m =======pre add _ fucntion:pp_output========= [0m
[40;46m =======add node_fun stack:pp_output========= [0m
[40;42m =======pre add _ fucntion:pp_buffer_stderr========= [0m
[40;46m =======add node_fun stack:pp_buffer_stderr========= [0m
[40;42m =======pre add _ fucntion:pp_start_one========= [0m
[40;46m =======add node_fun stack:pp_start_one========= [0m
[40;44m =======trace_function_path pp_start_one  function_call count: 5 level :1========  [0m
 <ssa_name 0x7fdf6679daf8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _19 = run_processes_parallel (jobs_33, parallel_next, 0B, task_finished, &proc);
    version:19>
[40;36m ======= node_fun:pp_start_one========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:start_command========= [0m
[40;46m =======add node_fun stack:start_command========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:pp_init========= [0m
[40;46m =======add node_fun stack:pp_init========= [0m
[40;44m =======trace_function_path pp_init  function_call count: 7 level :1========  [0m
 <ssa_name 0x7fdf6679daf8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _19 = run_processes_parallel (jobs_33, parallel_next, 0B, task_finished, &proc);
    version:19>
[40;36m ======= node_fun:pp_init========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;46m =======add node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;46m =======add node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;46m =======add node_fun stack:online_cpus========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================

 Expand conflict 
 The same function may have multiple branches :exit
# .MEM_45 = VDEF <.MEM_44>
exit (_19);
./benchmarks/git/use_after_free_2/git_uaf_2.c:436:17: warning: use location
  436 |                 exit(run_processes_parallel(jobs, parallel_next,
      |                 ^
# .MEM_43 = VDEF <.MEM_42>
exit (_22);
./benchmarks/git/use_after_free_2/git_uaf_2.c:440:17: warning: use location
  440 |                 exit(run_processes_parallel(jobs, no_job,
      |                 ^
_19 = run_processes_parallel (jobs_33, parallel_next, 0B, task_finished, &proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:436:17: warning: use location
  436 |                 exit(run_processes_parallel(jobs, parallel_next,
      |                 ^
this stmt call this function :run_processes_parallel
trace fucntion name:run_processes_parallel 
[40;44m =======trace_function_path run_processes_parallel  function_call count: 7 level :0========  [0m
 <ssa_name 0x7fdf6679daf8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _19 = run_processes_parallel (jobs_33, parallel_next, 0B, task_finished, &proc);
    version:19>
[40;36m ======= node_fun:run_processes_parallel========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:pp_cleanup========= [0m
[40;46m =======add node_fun stack:pp_cleanup========= [0m
[40;42m =======pre add _ fucntion:kill_children========= [0m
[40;46m =======add node_fun stack:kill_children========= [0m
[40;44m =======trace_function_path kill_children  function_call count: 1 level :1========  [0m
 <ssa_name 0x7fdf6679daf8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _19 = run_processes_parallel (jobs_33, parallel_next, 0B, task_finished, &proc);
    version:19>
[40;36m ======= node_fun:kill_children========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:kill========= [0m
[40;46m =======add node_fun stack:kill========= [0m
[40;42m =======pre add _ fucntion:pp_collect_finished========= [0m
[40;46m =======add node_fun stack:pp_collect_finished========= [0m
[40;44m =======trace_function_path pp_collect_finished  function_call count: 5 level :1========  [0m
 <ssa_name 0x7fdf6679daf8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _19 = run_processes_parallel (jobs_33, parallel_next, 0B, task_finished, &proc);
    version:19>
[40;36m ======= node_fun:pp_collect_finished========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:fputs========= [0m
[40;46m =======add node_fun stack:fputs========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:finish_command========= [0m
[40;46m =======add node_fun stack:finish_command========= [0m
[40;44m =======trace_function_path finish_command  function_call count: 2 level :2========  [0m
 <ssa_name 0x7fdf6679daf8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _19 = run_processes_parallel (jobs_33, parallel_next, 0B, task_finished, &proc);
    version:19>
[40;36m ======= node_fun:finish_command========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_clear========= [0m
[40;46m =======add node_fun stack:child_process_clear========= [0m
[40;44m =======trace_function_path child_process_clear  function_call count: 1 level :3========  [0m
 <ssa_name 0x7fdf6679daf8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _19 = run_processes_parallel (jobs_33, parallel_next, 0B, task_finished, &proc);
    version:19>
[40;36m ======= node_fun:child_process_clear========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;46m =======add node_fun stack:wait_or_whine========= [0m
[40;42m =======pre add _ fucntion:pp_output========= [0m
[40;46m =======add node_fun stack:pp_output========= [0m
[40;42m =======pre add _ fucntion:pp_buffer_stderr========= [0m
[40;46m =======add node_fun stack:pp_buffer_stderr========= [0m
[40;42m =======pre add _ fucntion:pp_start_one========= [0m
[40;46m =======add node_fun stack:pp_start_one========= [0m
[40;44m =======trace_function_path pp_start_one  function_call count: 5 level :1========  [0m
 <ssa_name 0x7fdf6679daf8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _19 = run_processes_parallel (jobs_33, parallel_next, 0B, task_finished, &proc);
    version:19>
[40;36m ======= node_fun:pp_start_one========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:start_command========= [0m
[40;46m =======add node_fun stack:start_command========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:pp_init========= [0m
[40;46m =======add node_fun stack:pp_init========= [0m
[40;44m =======trace_function_path pp_init  function_call count: 7 level :1========  [0m
 <ssa_name 0x7fdf6679daf8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _19 = run_processes_parallel (jobs_33, parallel_next, 0B, task_finished, &proc);
    version:19>
[40;36m ======= node_fun:pp_init========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;46m =======add node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;46m =======add node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;46m =======add node_fun stack:online_cpus========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_45 = VDEF <.MEM_44>
exit (_19);
exit (_19);
./benchmarks/git/use_after_free_2/git_uaf_2.c:436:17: warning: use location
this stmt call this function :exit
trace fucntion name:exit 

 ================== trace ================== 
trace fucntion free:0 
_16 = run_processes_parallel (jobs_33, parallel_next, 0B, 0B, &proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:432:17: warning: use location
  432 |                 exit(run_processes_parallel(jobs, parallel_next,
      |                 ^
this stmt call this function :run_processes_parallel
trace fucntion name:run_processes_parallel 
[40;44m =======trace_function_path run_processes_parallel  function_call count: 7 level :0========  [0m
 <ssa_name 0x7fdf6679daf8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _19 = run_processes_parallel (jobs_33, parallel_next, 0B, task_finished, &proc);
    version:19>
[40;36m ======= node_fun:run_processes_parallel========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:pp_cleanup========= [0m
[40;46m =======add node_fun stack:pp_cleanup========= [0m
[40;42m =======pre add _ fucntion:kill_children========= [0m
[40;46m =======add node_fun stack:kill_children========= [0m
[40;44m =======trace_function_path kill_children  function_call count: 1 level :1========  [0m
 <ssa_name 0x7fdf6679daf8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _19 = run_processes_parallel (jobs_33, parallel_next, 0B, task_finished, &proc);
    version:19>
[40;36m ======= node_fun:kill_children========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:kill========= [0m
[40;46m =======add node_fun stack:kill========= [0m
[40;42m =======pre add _ fucntion:pp_collect_finished========= [0m
[40;46m =======add node_fun stack:pp_collect_finished========= [0m
[40;44m =======trace_function_path pp_collect_finished  function_call count: 5 level :1========  [0m
 <ssa_name 0x7fdf6679daf8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _19 = run_processes_parallel (jobs_33, parallel_next, 0B, task_finished, &proc);
    version:19>
[40;36m ======= node_fun:pp_collect_finished========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:fputs========= [0m
[40;46m =======add node_fun stack:fputs========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:finish_command========= [0m
[40;46m =======add node_fun stack:finish_command========= [0m
[40;44m =======trace_function_path finish_command  function_call count: 2 level :2========  [0m
 <ssa_name 0x7fdf6679daf8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _19 = run_processes_parallel (jobs_33, parallel_next, 0B, task_finished, &proc);
    version:19>
[40;36m ======= node_fun:finish_command========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_clear========= [0m
[40;46m =======add node_fun stack:child_process_clear========= [0m
[40;44m =======trace_function_path child_process_clear  function_call count: 1 level :3========  [0m
 <ssa_name 0x7fdf6679daf8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _19 = run_processes_parallel (jobs_33, parallel_next, 0B, task_finished, &proc);
    version:19>
[40;36m ======= node_fun:child_process_clear========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;46m =======add node_fun stack:wait_or_whine========= [0m
[40;42m =======pre add _ fucntion:pp_output========= [0m
[40;46m =======add node_fun stack:pp_output========= [0m
[40;42m =======pre add _ fucntion:pp_buffer_stderr========= [0m
[40;46m =======add node_fun stack:pp_buffer_stderr========= [0m
[40;42m =======pre add _ fucntion:pp_start_one========= [0m
[40;46m =======add node_fun stack:pp_start_one========= [0m
[40;44m =======trace_function_path pp_start_one  function_call count: 5 level :1========  [0m
 <ssa_name 0x7fdf6679daf8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _19 = run_processes_parallel (jobs_33, parallel_next, 0B, task_finished, &proc);
    version:19>
[40;36m ======= node_fun:pp_start_one========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:start_command========= [0m
[40;46m =======add node_fun stack:start_command========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:pp_init========= [0m
[40;46m =======add node_fun stack:pp_init========= [0m
[40;44m =======trace_function_path pp_init  function_call count: 7 level :1========  [0m
 <ssa_name 0x7fdf6679daf8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _19 = run_processes_parallel (jobs_33, parallel_next, 0B, task_finished, &proc);
    version:19>
[40;36m ======= node_fun:pp_init========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;46m =======add node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;46m =======add node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;46m =======add node_fun stack:online_cpus========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================

 Expand conflict 
 The same function may have multiple branches :exit
# .MEM_45 = VDEF <.MEM_44>
exit (_19);
./benchmarks/git/use_after_free_2/git_uaf_2.c:436:17: warning: use location
  436 |                 exit(run_processes_parallel(jobs, parallel_next,
      |                 ^
# .MEM_47 = VDEF <.MEM_46>
exit (_16);
./benchmarks/git/use_after_free_2/git_uaf_2.c:432:17: warning: use location
  432 |                 exit(run_processes_parallel(jobs, parallel_next,
      |                 ^
_11 = run_command (&proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:426:17: warning: use location
  426 |                 exit(run_command(&proc));
      |                 ^
this stmt call this function :run_command
trace fucntion name:run_command 

 ================== trace ================== 
trace fucntion free:0 
proc.argv = _13;
./benchmarks/git/use_after_free_2/git_uaf_2.c:429:19: warning: use location
  429 |         proc.argv = (const char **)argv + 3;
      |                   ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf6679daf8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _19 = run_processes_parallel (jobs_33, parallel_next, 0B, task_finished, &proc);
    version:19>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf6679db40
    type <pointer_type 0x7fdf662b4000
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662b6690>>
   
    def_stmt _20 = MEM[(char * *)argv_31(D) + 8B];
    version:20
    ptr-info 0x7fdf662c9f48>
 <ssa_name 0x7fdf6679db40
    type <pointer_type 0x7fdf662b4000
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662b6690>>
   
    def_stmt _20 = MEM[(char * *)argv_31(D) + 8B];
    version:20
    ptr-info 0x7fdf662c9f48>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf6679db40
    type <pointer_type 0x7fdf662b4000
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662b6690>>
   
    def_stmt _20 = MEM[(char * *)argv_31(D) + 8B];
    version:20
    ptr-info 0x7fdf662c9f48>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_40>
_21 = strcmp (_20, "run-command-no-jobs");
_21 = strcmp (_20, "run-command-no-jobs");
./benchmarks/git/use_after_free_2/git_uaf_2.c:439:14: warning: use location
  439 |         if (!strcmp(argv[1], "run-command-no-jobs"))
      |              ^
this stmt call this function :strcmp
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:0 
if (_21 == 0)
./benchmarks/git/use_after_free_2/git_uaf_2.c:439:12: warning: use location
  439 |         if (!strcmp(argv[1], "run-command-no-jobs"))
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf6679db40
    type <pointer_type 0x7fdf662b4000
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662b6690>>
   
    def_stmt _20 = MEM[(char * *)argv_31(D) + 8B];
    version:20
    ptr-info 0x7fdf662c9f48>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <string_cst 0x7fdf66793cc0
    type <array_type 0x7fdf662b61f8
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        BLK
        size <integer_cst 0x7fdf662a48a0 constant 160>
        unit-size <integer_cst 0x7fdf662a4888 constant 20>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7fdf662b6150 type <integer_type 0x7fdf667aa000 sizetype>
            DI
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa738 precision:64 min <integer_cst 0x7fdf66795be8 0> max <integer_cst 0x7fdf662a4990 19>>
        pointer_to_this <pointer_type 0x7fdf662c02a0>>
    readonly constant static "run-command-no-jobs\000">

dot graph START

======================================================================
 <ssa_name 0x7fdf6679db88
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _21 = strcmp (_20, "run-command-no-jobs");
    version:21>
 <ssa_name 0x7fdf6679db88
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _21 = strcmp (_20, "run-command-no-jobs");
    version:21>

 ================== pre trace ptable ================== 
trace fucntion name:strcmp 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf6679db88
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _21 = strcmp (_20, "run-command-no-jobs");
    version:21>
is Other function strcmp
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_40>
_21 = strcmp (_20, "run-command-no-jobs");
_21 = strcmp (_20, "run-command-no-jobs");
./benchmarks/git/use_after_free_2/git_uaf_2.c:439:14: warning: use location
  439 |         if (!strcmp(argv[1], "run-command-no-jobs"))
      |              ^
this stmt call this function :strcmp
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:0 
if (_21 == 0)
./benchmarks/git/use_after_free_2/git_uaf_2.c:439:12: warning: use location
  439 |         if (!strcmp(argv[1], "run-command-no-jobs"))
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf6679db88
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _21 = strcmp (_20, "run-command-no-jobs");
    version:21>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <function_decl 0x7fdf662b9400 no_job
    type <function_type 0x7fdf662ad540
        type <integer_type 0x7fdf667aa5e8 int public SI
            size <integer_cst 0x7fdf66795df8 constant 32>
            unit-size <integer_cst 0x7fdf66795e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
            pointer_to_this <pointer_type 0x7fdf667b19d8>>
        QI
        size <integer_cst 0x7fdf66795ca8 constant 8>
        unit-size <integer_cst 0x7fdf66795cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7fdf662af618 value <pointer_type 0x7fdf662adbd0>
            chain <tree_list 0x7fdf662af5f0 value <pointer_type 0x7fdf662ada80>
                chain <tree_list 0x7fdf662af5c8 value <pointer_type 0x7fdf667b1000>
                    chain <tree_list 0x7fdf662af5a0 value <pointer_type 0x7fdf662ad498>
                        chain <tree_list 0x7fdf667a9b18 value <void_type 0x7fdf667aaf18 void>>>>>>
        pointer_to_this <pointer_type 0x7fdf662ad5e8>>
    addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/git/use_after_free_2/git_uaf_2.c:391:12 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c> initial <block 0x7fdf662cb360>
    result <result_decl 0x7fdf667a0348 D.4547 type <integer_type 0x7fdf667aa5e8 int>
        ignored SI ./benchmarks/git/use_after_free_2/git_uaf_2.c:391:12 size <integer_cst 0x7fdf66795df8 32> unit-size <integer_cst 0x7fdf66795e10 4>
        align:32 warn_if_not_align:0 context <function_decl 0x7fdf662b9400 no_job>>
    arguments <parm_decl 0x7fdf662c3600 cp
        type <pointer_type 0x7fdf662bb7e0 type <record_type 0x7fdf662bb738 child_process>
            public unsigned DI
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
        unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:391:41 size <integer_cst 0x7fdf66795bb8 64> unit-size <integer_cst 0x7fdf66795bd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9400 no_job> arg-type <pointer_type 0x7fdf662bb7e0>
        chain <parm_decl 0x7fdf662c3680 err type <pointer_type 0x7fdf662bb888>
            unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:392:20 size <integer_cst 0x7fdf66795bb8 64> unit-size <integer_cst 0x7fdf66795bd0 8>
            align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9400 no_job> arg-type <pointer_type 0x7fdf662bb888> chain <parm_decl 0x7fdf662c3700 cb>>>
    struct-function 0x7fdf662cc170>
 <function_decl 0x7fdf662b9400 no_job
    type <function_type 0x7fdf662ad540
        type <integer_type 0x7fdf667aa5e8 int public SI
            size <integer_cst 0x7fdf66795df8 constant 32>
            unit-size <integer_cst 0x7fdf66795e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
            pointer_to_this <pointer_type 0x7fdf667b19d8>>
        QI
        size <integer_cst 0x7fdf66795ca8 constant 8>
        unit-size <integer_cst 0x7fdf66795cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7fdf662af618 value <pointer_type 0x7fdf662adbd0>
            chain <tree_list 0x7fdf662af5f0 value <pointer_type 0x7fdf662ada80>
                chain <tree_list 0x7fdf662af5c8 value <pointer_type 0x7fdf667b1000>
                    chain <tree_list 0x7fdf662af5a0 value <pointer_type 0x7fdf662ad498>
                        chain <tree_list 0x7fdf667a9b18 value <void_type 0x7fdf667aaf18 void>>>>>>
        pointer_to_this <pointer_type 0x7fdf662ad5e8>>
    addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/git/use_after_free_2/git_uaf_2.c:391:12 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c> initial <block 0x7fdf662cb360>
    result <result_decl 0x7fdf667a0348 D.4547 type <integer_type 0x7fdf667aa5e8 int>
        ignored SI ./benchmarks/git/use_after_free_2/git_uaf_2.c:391:12 size <integer_cst 0x7fdf66795df8 32> unit-size <integer_cst 0x7fdf66795e10 4>
        align:32 warn_if_not_align:0 context <function_decl 0x7fdf662b9400 no_job>>
    arguments <parm_decl 0x7fdf662c3600 cp
        type <pointer_type 0x7fdf662bb7e0 type <record_type 0x7fdf662bb738 child_process>
            public unsigned DI
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
        unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:391:41 size <integer_cst 0x7fdf66795bb8 64> unit-size <integer_cst 0x7fdf66795bd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9400 no_job> arg-type <pointer_type 0x7fdf662bb7e0>
        chain <parm_decl 0x7fdf662c3680 err type <pointer_type 0x7fdf662bb888>
            unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:392:20 size <integer_cst 0x7fdf66795bb8 64> unit-size <integer_cst 0x7fdf66795bd0 8>
            align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9400 no_job> arg-type <pointer_type 0x7fdf662bb888> chain <parm_decl 0x7fdf662c3700 cb>>>
    struct-function 0x7fdf662cc170>

 ================== pre trace ptable ================== 
trace fucntion name:no_job 
[40;44m =======trace_function_path no_job  function_call count: 1 level :888========  [0m
 <function_decl 0x7fdf662b9400 no_job
    type <function_type 0x7fdf662ad540
        type <integer_type 0x7fdf667aa5e8 int public SI
            size <integer_cst 0x7fdf66795df8 constant 32>
            unit-size <integer_cst 0x7fdf66795e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
            pointer_to_this <pointer_type 0x7fdf667b19d8>>
        QI
        size <integer_cst 0x7fdf66795ca8 constant 8>
        unit-size <integer_cst 0x7fdf66795cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7fdf662af618 value <pointer_type 0x7fdf662adbd0>
            chain <tree_list 0x7fdf662af5f0 value <pointer_type 0x7fdf662ada80>
                chain <tree_list 0x7fdf662af5c8 value <pointer_type 0x7fdf667b1000>
                    chain <tree_list 0x7fdf662af5a0 value <pointer_type 0x7fdf662ad498>
                        chain <tree_list 0x7fdf667a9b18 value <void_type 0x7fdf667aaf18 void>>>>>>
        pointer_to_this <pointer_type 0x7fdf662ad5e8>>
    addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/git/use_after_free_2/git_uaf_2.c:391:12 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c> initial <block 0x7fdf662cb360>
    result <result_decl 0x7fdf667a0348 D.4547 type <integer_type 0x7fdf667aa5e8 int>
        ignored SI ./benchmarks/git/use_after_free_2/git_uaf_2.c:391:12 size <integer_cst 0x7fdf66795df8 32> unit-size <integer_cst 0x7fdf66795e10 4>
        align:32 warn_if_not_align:0 context <function_decl 0x7fdf662b9400 no_job>>
    arguments <parm_decl 0x7fdf662c3600 cp
        type <pointer_type 0x7fdf662bb7e0 type <record_type 0x7fdf662bb738 child_process>
            public unsigned DI
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
        unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:391:41 size <integer_cst 0x7fdf66795bb8 64> unit-size <integer_cst 0x7fdf66795bd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9400 no_job> arg-type <pointer_type 0x7fdf662bb7e0>
        chain <parm_decl 0x7fdf662c3680 err type <pointer_type 0x7fdf662bb888>
            unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:392:20 size <integer_cst 0x7fdf66795bb8 64> unit-size <integer_cst 0x7fdf66795bd0 8>
            align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9400 no_job> arg-type <pointer_type 0x7fdf662bb888> chain <parm_decl 0x7fdf662c3700 cb>>>
    struct-function 0x7fdf662cc170>
[40;36m ======= node_fun:no_job========= [0m
[40;36m ======= find relate stmt with no_job ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strbuf_addf========= [0m
[40;46m =======add node_fun stack:strbuf_addf========= [0m

 ================== pre trace ptable finish================== 
 <function_decl 0x7fdf662b9400 no_job
    type <function_type 0x7fdf662ad540
        type <integer_type 0x7fdf667aa5e8 int public SI
            size <integer_cst 0x7fdf66795df8 constant 32>
            unit-size <integer_cst 0x7fdf66795e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
            pointer_to_this <pointer_type 0x7fdf667b19d8>>
        QI
        size <integer_cst 0x7fdf66795ca8 constant 8>
        unit-size <integer_cst 0x7fdf66795cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7fdf662af618 value <pointer_type 0x7fdf662adbd0>
            chain <tree_list 0x7fdf662af5f0 value <pointer_type 0x7fdf662ada80>
                chain <tree_list 0x7fdf662af5c8 value <pointer_type 0x7fdf667b1000>
                    chain <tree_list 0x7fdf662af5a0 value <pointer_type 0x7fdf662ad498>
                        chain <tree_list 0x7fdf667a9b18 value <void_type 0x7fdf667aaf18 void>>>>>>
        pointer_to_this <pointer_type 0x7fdf662ad5e8>>
    addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/git/use_after_free_2/git_uaf_2.c:391:12 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c> initial <block 0x7fdf662cb360>
    result <result_decl 0x7fdf667a0348 D.4547 type <integer_type 0x7fdf667aa5e8 int>
        ignored SI ./benchmarks/git/use_after_free_2/git_uaf_2.c:391:12 size <integer_cst 0x7fdf66795df8 32> unit-size <integer_cst 0x7fdf66795e10 4>
        align:32 warn_if_not_align:0 context <function_decl 0x7fdf662b9400 no_job>>
    arguments <parm_decl 0x7fdf662c3600 cp
        type <pointer_type 0x7fdf662bb7e0 type <record_type 0x7fdf662bb738 child_process>
            public unsigned DI
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
        unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:391:41 size <integer_cst 0x7fdf66795bb8 64> unit-size <integer_cst 0x7fdf66795bd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9400 no_job> arg-type <pointer_type 0x7fdf662bb7e0>
        chain <parm_decl 0x7fdf662c3680 err type <pointer_type 0x7fdf662bb888>
            unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:392:20 size <integer_cst 0x7fdf66795bb8 64> unit-size <integer_cst 0x7fdf66795bd0 8>
            align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9400 no_job> arg-type <pointer_type 0x7fdf662bb888> chain <parm_decl 0x7fdf662c3700 cb>>>
    struct-function 0x7fdf662cc170>
is Other function no_job
 
 Start check Pointer Collect  

======================================================================
# .MEM_42 = VDEF <.MEM_40>
_22 = run_processes_parallel (jobs_33, no_job, 0B, task_finished, &proc);
_22 = run_processes_parallel (jobs_33, no_job, 0B, task_finished, &proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:440:17: warning: use location
  440 |                 exit(run_processes_parallel(jobs, no_job,
      |                 ^
this stmt call this function :run_processes_parallel
trace fucntion name:run_processes_parallel 
[40;44m =======trace_function_path run_processes_parallel  function_call count: 7 level :0========  [0m
 <function_decl 0x7fdf662b9400 no_job
    type <function_type 0x7fdf662ad540
        type <integer_type 0x7fdf667aa5e8 int public SI
            size <integer_cst 0x7fdf66795df8 constant 32>
            unit-size <integer_cst 0x7fdf66795e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
            pointer_to_this <pointer_type 0x7fdf667b19d8>>
        QI
        size <integer_cst 0x7fdf66795ca8 constant 8>
        unit-size <integer_cst 0x7fdf66795cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7fdf662af618 value <pointer_type 0x7fdf662adbd0>
            chain <tree_list 0x7fdf662af5f0 value <pointer_type 0x7fdf662ada80>
                chain <tree_list 0x7fdf662af5c8 value <pointer_type 0x7fdf667b1000>
                    chain <tree_list 0x7fdf662af5a0 value <pointer_type 0x7fdf662ad498>
                        chain <tree_list 0x7fdf667a9b18 value <void_type 0x7fdf667aaf18 void>>>>>>
        pointer_to_this <pointer_type 0x7fdf662ad5e8>>
    addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/git/use_after_free_2/git_uaf_2.c:391:12 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c> initial <block 0x7fdf662cb360>
    result <result_decl 0x7fdf667a0348 D.4547 type <integer_type 0x7fdf667aa5e8 int>
        ignored SI ./benchmarks/git/use_after_free_2/git_uaf_2.c:391:12 size <integer_cst 0x7fdf66795df8 32> unit-size <integer_cst 0x7fdf66795e10 4>
        align:32 warn_if_not_align:0 context <function_decl 0x7fdf662b9400 no_job>>
    arguments <parm_decl 0x7fdf662c3600 cp
        type <pointer_type 0x7fdf662bb7e0 type <record_type 0x7fdf662bb738 child_process>
            public unsigned DI
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
        unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:391:41 size <integer_cst 0x7fdf66795bb8 64> unit-size <integer_cst 0x7fdf66795bd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9400 no_job> arg-type <pointer_type 0x7fdf662bb7e0>
        chain <parm_decl 0x7fdf662c3680 err type <pointer_type 0x7fdf662bb888>
            unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:392:20 size <integer_cst 0x7fdf66795bb8 64> unit-size <integer_cst 0x7fdf66795bd0 8>
            align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9400 no_job> arg-type <pointer_type 0x7fdf662bb888> chain <parm_decl 0x7fdf662c3700 cb>>>
    struct-function 0x7fdf662cc170>
[40;36m ======= node_fun:run_processes_parallel========= [0m
[40;36m ======= find relate stmt with no_job ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:pp_cleanup========= [0m
[40;46m =======add node_fun stack:pp_cleanup========= [0m
[40;42m =======pre add _ fucntion:kill_children========= [0m
[40;46m =======add node_fun stack:kill_children========= [0m
[40;44m =======trace_function_path kill_children  function_call count: 1 level :1========  [0m
 <function_decl 0x7fdf662b9400 no_job
    type <function_type 0x7fdf662ad540
        type <integer_type 0x7fdf667aa5e8 int public SI
            size <integer_cst 0x7fdf66795df8 constant 32>
            unit-size <integer_cst 0x7fdf66795e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
            pointer_to_this <pointer_type 0x7fdf667b19d8>>
        QI
        size <integer_cst 0x7fdf66795ca8 constant 8>
        unit-size <integer_cst 0x7fdf66795cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7fdf662af618 value <pointer_type 0x7fdf662adbd0>
            chain <tree_list 0x7fdf662af5f0 value <pointer_type 0x7fdf662ada80>
                chain <tree_list 0x7fdf662af5c8 value <pointer_type 0x7fdf667b1000>
                    chain <tree_list 0x7fdf662af5a0 value <pointer_type 0x7fdf662ad498>
                        chain <tree_list 0x7fdf667a9b18 value <void_type 0x7fdf667aaf18 void>>>>>>
        pointer_to_this <pointer_type 0x7fdf662ad5e8>>
    addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/git/use_after_free_2/git_uaf_2.c:391:12 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c> initial <block 0x7fdf662cb360>
    result <result_decl 0x7fdf667a0348 D.4547 type <integer_type 0x7fdf667aa5e8 int>
        ignored SI ./benchmarks/git/use_after_free_2/git_uaf_2.c:391:12 size <integer_cst 0x7fdf66795df8 32> unit-size <integer_cst 0x7fdf66795e10 4>
        align:32 warn_if_not_align:0 context <function_decl 0x7fdf662b9400 no_job>>
    arguments <parm_decl 0x7fdf662c3600 cp
        type <pointer_type 0x7fdf662bb7e0 type <record_type 0x7fdf662bb738 child_process>
            public unsigned DI
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
        unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:391:41 size <integer_cst 0x7fdf66795bb8 64> unit-size <integer_cst 0x7fdf66795bd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9400 no_job> arg-type <pointer_type 0x7fdf662bb7e0>
        chain <parm_decl 0x7fdf662c3680 err type <pointer_type 0x7fdf662bb888>
            unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:392:20 size <integer_cst 0x7fdf66795bb8 64> unit-size <integer_cst 0x7fdf66795bd0 8>
            align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9400 no_job> arg-type <pointer_type 0x7fdf662bb888> chain <parm_decl 0x7fdf662c3700 cb>>>
    struct-function 0x7fdf662cc170>
[40;36m ======= node_fun:kill_children========= [0m
[40;36m ======= find relate stmt with no_job ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:kill========= [0m
[40;46m =======add node_fun stack:kill========= [0m
[40;42m =======pre add _ fucntion:pp_collect_finished========= [0m
[40;46m =======add node_fun stack:pp_collect_finished========= [0m
[40;44m =======trace_function_path pp_collect_finished  function_call count: 5 level :1========  [0m
 <function_decl 0x7fdf662b9400 no_job
    type <function_type 0x7fdf662ad540
        type <integer_type 0x7fdf667aa5e8 int public SI
            size <integer_cst 0x7fdf66795df8 constant 32>
            unit-size <integer_cst 0x7fdf66795e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
            pointer_to_this <pointer_type 0x7fdf667b19d8>>
        QI
        size <integer_cst 0x7fdf66795ca8 constant 8>
        unit-size <integer_cst 0x7fdf66795cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7fdf662af618 value <pointer_type 0x7fdf662adbd0>
            chain <tree_list 0x7fdf662af5f0 value <pointer_type 0x7fdf662ada80>
                chain <tree_list 0x7fdf662af5c8 value <pointer_type 0x7fdf667b1000>
                    chain <tree_list 0x7fdf662af5a0 value <pointer_type 0x7fdf662ad498>
                        chain <tree_list 0x7fdf667a9b18 value <void_type 0x7fdf667aaf18 void>>>>>>
        pointer_to_this <pointer_type 0x7fdf662ad5e8>>
    addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/git/use_after_free_2/git_uaf_2.c:391:12 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c> initial <block 0x7fdf662cb360>
    result <result_decl 0x7fdf667a0348 D.4547 type <integer_type 0x7fdf667aa5e8 int>
        ignored SI ./benchmarks/git/use_after_free_2/git_uaf_2.c:391:12 size <integer_cst 0x7fdf66795df8 32> unit-size <integer_cst 0x7fdf66795e10 4>
        align:32 warn_if_not_align:0 context <function_decl 0x7fdf662b9400 no_job>>
    arguments <parm_decl 0x7fdf662c3600 cp
        type <pointer_type 0x7fdf662bb7e0 type <record_type 0x7fdf662bb738 child_process>
            public unsigned DI
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
        unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:391:41 size <integer_cst 0x7fdf66795bb8 64> unit-size <integer_cst 0x7fdf66795bd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9400 no_job> arg-type <pointer_type 0x7fdf662bb7e0>
        chain <parm_decl 0x7fdf662c3680 err type <pointer_type 0x7fdf662bb888>
            unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:392:20 size <integer_cst 0x7fdf66795bb8 64> unit-size <integer_cst 0x7fdf66795bd0 8>
            align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9400 no_job> arg-type <pointer_type 0x7fdf662bb888> chain <parm_decl 0x7fdf662c3700 cb>>>
    struct-function 0x7fdf662cc170>
[40;36m ======= node_fun:pp_collect_finished========= [0m
[40;36m ======= find relate stmt with no_job ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:fputs========= [0m
[40;46m =======add node_fun stack:fputs========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:finish_command========= [0m
[40;46m =======add node_fun stack:finish_command========= [0m
[40;44m =======trace_function_path finish_command  function_call count: 2 level :2========  [0m
 <function_decl 0x7fdf662b9400 no_job
    type <function_type 0x7fdf662ad540
        type <integer_type 0x7fdf667aa5e8 int public SI
            size <integer_cst 0x7fdf66795df8 constant 32>
            unit-size <integer_cst 0x7fdf66795e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
            pointer_to_this <pointer_type 0x7fdf667b19d8>>
        QI
        size <integer_cst 0x7fdf66795ca8 constant 8>
        unit-size <integer_cst 0x7fdf66795cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7fdf662af618 value <pointer_type 0x7fdf662adbd0>
            chain <tree_list 0x7fdf662af5f0 value <pointer_type 0x7fdf662ada80>
                chain <tree_list 0x7fdf662af5c8 value <pointer_type 0x7fdf667b1000>
                    chain <tree_list 0x7fdf662af5a0 value <pointer_type 0x7fdf662ad498>
                        chain <tree_list 0x7fdf667a9b18 value <void_type 0x7fdf667aaf18 void>>>>>>
        pointer_to_this <pointer_type 0x7fdf662ad5e8>>
    addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/git/use_after_free_2/git_uaf_2.c:391:12 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c> initial <block 0x7fdf662cb360>
    result <result_decl 0x7fdf667a0348 D.4547 type <integer_type 0x7fdf667aa5e8 int>
        ignored SI ./benchmarks/git/use_after_free_2/git_uaf_2.c:391:12 size <integer_cst 0x7fdf66795df8 32> unit-size <integer_cst 0x7fdf66795e10 4>
        align:32 warn_if_not_align:0 context <function_decl 0x7fdf662b9400 no_job>>
    arguments <parm_decl 0x7fdf662c3600 cp
        type <pointer_type 0x7fdf662bb7e0 type <record_type 0x7fdf662bb738 child_process>
            public unsigned DI
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
        unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:391:41 size <integer_cst 0x7fdf66795bb8 64> unit-size <integer_cst 0x7fdf66795bd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9400 no_job> arg-type <pointer_type 0x7fdf662bb7e0>
        chain <parm_decl 0x7fdf662c3680 err type <pointer_type 0x7fdf662bb888>
            unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:392:20 size <integer_cst 0x7fdf66795bb8 64> unit-size <integer_cst 0x7fdf66795bd0 8>
            align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9400 no_job> arg-type <pointer_type 0x7fdf662bb888> chain <parm_decl 0x7fdf662c3700 cb>>>
    struct-function 0x7fdf662cc170>
[40;36m ======= node_fun:finish_command========= [0m
[40;36m ======= find relate stmt with no_job ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_clear========= [0m
[40;46m =======add node_fun stack:child_process_clear========= [0m
[40;44m =======trace_function_path child_process_clear  function_call count: 1 level :3========  [0m
 <function_decl 0x7fdf662b9400 no_job
    type <function_type 0x7fdf662ad540
        type <integer_type 0x7fdf667aa5e8 int public SI
            size <integer_cst 0x7fdf66795df8 constant 32>
            unit-size <integer_cst 0x7fdf66795e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
            pointer_to_this <pointer_type 0x7fdf667b19d8>>
        QI
        size <integer_cst 0x7fdf66795ca8 constant 8>
        unit-size <integer_cst 0x7fdf66795cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7fdf662af618 value <pointer_type 0x7fdf662adbd0>
            chain <tree_list 0x7fdf662af5f0 value <pointer_type 0x7fdf662ada80>
                chain <tree_list 0x7fdf662af5c8 value <pointer_type 0x7fdf667b1000>
                    chain <tree_list 0x7fdf662af5a0 value <pointer_type 0x7fdf662ad498>
                        chain <tree_list 0x7fdf667a9b18 value <void_type 0x7fdf667aaf18 void>>>>>>
        pointer_to_this <pointer_type 0x7fdf662ad5e8>>
    addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/git/use_after_free_2/git_uaf_2.c:391:12 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c> initial <block 0x7fdf662cb360>
    result <result_decl 0x7fdf667a0348 D.4547 type <integer_type 0x7fdf667aa5e8 int>
        ignored SI ./benchmarks/git/use_after_free_2/git_uaf_2.c:391:12 size <integer_cst 0x7fdf66795df8 32> unit-size <integer_cst 0x7fdf66795e10 4>
        align:32 warn_if_not_align:0 context <function_decl 0x7fdf662b9400 no_job>>
    arguments <parm_decl 0x7fdf662c3600 cp
        type <pointer_type 0x7fdf662bb7e0 type <record_type 0x7fdf662bb738 child_process>
            public unsigned DI
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
        unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:391:41 size <integer_cst 0x7fdf66795bb8 64> unit-size <integer_cst 0x7fdf66795bd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9400 no_job> arg-type <pointer_type 0x7fdf662bb7e0>
        chain <parm_decl 0x7fdf662c3680 err type <pointer_type 0x7fdf662bb888>
            unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:392:20 size <integer_cst 0x7fdf66795bb8 64> unit-size <integer_cst 0x7fdf66795bd0 8>
            align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9400 no_job> arg-type <pointer_type 0x7fdf662bb888> chain <parm_decl 0x7fdf662c3700 cb>>>
    struct-function 0x7fdf662cc170>
[40;36m ======= node_fun:child_process_clear========= [0m
[40;36m ======= find relate stmt with no_job ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;46m =======add node_fun stack:wait_or_whine========= [0m
[40;42m =======pre add _ fucntion:pp_output========= [0m
[40;46m =======add node_fun stack:pp_output========= [0m
[40;42m =======pre add _ fucntion:pp_buffer_stderr========= [0m
[40;46m =======add node_fun stack:pp_buffer_stderr========= [0m
[40;42m =======pre add _ fucntion:pp_start_one========= [0m
[40;46m =======add node_fun stack:pp_start_one========= [0m
[40;44m =======trace_function_path pp_start_one  function_call count: 5 level :1========  [0m
 <function_decl 0x7fdf662b9400 no_job
    type <function_type 0x7fdf662ad540
        type <integer_type 0x7fdf667aa5e8 int public SI
            size <integer_cst 0x7fdf66795df8 constant 32>
            unit-size <integer_cst 0x7fdf66795e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
            pointer_to_this <pointer_type 0x7fdf667b19d8>>
        QI
        size <integer_cst 0x7fdf66795ca8 constant 8>
        unit-size <integer_cst 0x7fdf66795cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7fdf662af618 value <pointer_type 0x7fdf662adbd0>
            chain <tree_list 0x7fdf662af5f0 value <pointer_type 0x7fdf662ada80>
                chain <tree_list 0x7fdf662af5c8 value <pointer_type 0x7fdf667b1000>
                    chain <tree_list 0x7fdf662af5a0 value <pointer_type 0x7fdf662ad498>
                        chain <tree_list 0x7fdf667a9b18 value <void_type 0x7fdf667aaf18 void>>>>>>
        pointer_to_this <pointer_type 0x7fdf662ad5e8>>
    addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/git/use_after_free_2/git_uaf_2.c:391:12 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c> initial <block 0x7fdf662cb360>
    result <result_decl 0x7fdf667a0348 D.4547 type <integer_type 0x7fdf667aa5e8 int>
        ignored SI ./benchmarks/git/use_after_free_2/git_uaf_2.c:391:12 size <integer_cst 0x7fdf66795df8 32> unit-size <integer_cst 0x7fdf66795e10 4>
        align:32 warn_if_not_align:0 context <function_decl 0x7fdf662b9400 no_job>>
    arguments <parm_decl 0x7fdf662c3600 cp
        type <pointer_type 0x7fdf662bb7e0 type <record_type 0x7fdf662bb738 child_process>
            public unsigned DI
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
        unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:391:41 size <integer_cst 0x7fdf66795bb8 64> unit-size <integer_cst 0x7fdf66795bd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9400 no_job> arg-type <pointer_type 0x7fdf662bb7e0>
        chain <parm_decl 0x7fdf662c3680 err type <pointer_type 0x7fdf662bb888>
            unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:392:20 size <integer_cst 0x7fdf66795bb8 64> unit-size <integer_cst 0x7fdf66795bd0 8>
            align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9400 no_job> arg-type <pointer_type 0x7fdf662bb888> chain <parm_decl 0x7fdf662c3700 cb>>>
    struct-function 0x7fdf662cc170>
[40;36m ======= node_fun:pp_start_one========= [0m
[40;36m ======= find relate stmt with no_job ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:start_command========= [0m
[40;46m =======add node_fun stack:start_command========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:pp_init========= [0m
[40;46m =======add node_fun stack:pp_init========= [0m
[40;44m =======trace_function_path pp_init  function_call count: 7 level :1========  [0m
 <function_decl 0x7fdf662b9400 no_job
    type <function_type 0x7fdf662ad540
        type <integer_type 0x7fdf667aa5e8 int public SI
            size <integer_cst 0x7fdf66795df8 constant 32>
            unit-size <integer_cst 0x7fdf66795e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
            pointer_to_this <pointer_type 0x7fdf667b19d8>>
        QI
        size <integer_cst 0x7fdf66795ca8 constant 8>
        unit-size <integer_cst 0x7fdf66795cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7fdf662af618 value <pointer_type 0x7fdf662adbd0>
            chain <tree_list 0x7fdf662af5f0 value <pointer_type 0x7fdf662ada80>
                chain <tree_list 0x7fdf662af5c8 value <pointer_type 0x7fdf667b1000>
                    chain <tree_list 0x7fdf662af5a0 value <pointer_type 0x7fdf662ad498>
                        chain <tree_list 0x7fdf667a9b18 value <void_type 0x7fdf667aaf18 void>>>>>>
        pointer_to_this <pointer_type 0x7fdf662ad5e8>>
    addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/git/use_after_free_2/git_uaf_2.c:391:12 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c> initial <block 0x7fdf662cb360>
    result <result_decl 0x7fdf667a0348 D.4547 type <integer_type 0x7fdf667aa5e8 int>
        ignored SI ./benchmarks/git/use_after_free_2/git_uaf_2.c:391:12 size <integer_cst 0x7fdf66795df8 32> unit-size <integer_cst 0x7fdf66795e10 4>
        align:32 warn_if_not_align:0 context <function_decl 0x7fdf662b9400 no_job>>
    arguments <parm_decl 0x7fdf662c3600 cp
        type <pointer_type 0x7fdf662bb7e0 type <record_type 0x7fdf662bb738 child_process>
            public unsigned DI
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
        unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:391:41 size <integer_cst 0x7fdf66795bb8 64> unit-size <integer_cst 0x7fdf66795bd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9400 no_job> arg-type <pointer_type 0x7fdf662bb7e0>
        chain <parm_decl 0x7fdf662c3680 err type <pointer_type 0x7fdf662bb888>
            unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:392:20 size <integer_cst 0x7fdf66795bb8 64> unit-size <integer_cst 0x7fdf66795bd0 8>
            align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9400 no_job> arg-type <pointer_type 0x7fdf662bb888> chain <parm_decl 0x7fdf662c3700 cb>>>
    struct-function 0x7fdf662cc170>
[40;36m ======= node_fun:pp_init========= [0m
[40;36m ======= find relate stmt with no_job ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;46m =======add node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;46m =======add node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;46m =======add node_fun stack:online_cpus========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_42 = VDEF <.MEM_40>
_22 = run_processes_parallel (jobs_33, no_job, 0B, task_finished, &proc);
_22 = run_processes_parallel (jobs_33, no_job, 0B, task_finished, &proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:440:17: warning: use location
this stmt call this function :run_processes_parallel
trace fucntion name:run_processes_parallel 
[40;44m =======trace_function_path run_processes_parallel  function_call count: 7 level :0========  [0m
 <function_decl 0x7fdf662b9400 no_job
    type <function_type 0x7fdf662ad540
        type <integer_type 0x7fdf667aa5e8 int public SI
            size <integer_cst 0x7fdf66795df8 constant 32>
            unit-size <integer_cst 0x7fdf66795e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
            pointer_to_this <pointer_type 0x7fdf667b19d8>>
        QI
        size <integer_cst 0x7fdf66795ca8 constant 8>
        unit-size <integer_cst 0x7fdf66795cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7fdf662af618 value <pointer_type 0x7fdf662adbd0>
            chain <tree_list 0x7fdf662af5f0 value <pointer_type 0x7fdf662ada80>
                chain <tree_list 0x7fdf662af5c8 value <pointer_type 0x7fdf667b1000>
                    chain <tree_list 0x7fdf662af5a0 value <pointer_type 0x7fdf662ad498>
                        chain <tree_list 0x7fdf667a9b18 value <void_type 0x7fdf667aaf18 void>>>>>>
        pointer_to_this <pointer_type 0x7fdf662ad5e8>>
    addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/git/use_after_free_2/git_uaf_2.c:391:12 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c> initial <block 0x7fdf662cb360>
    result <result_decl 0x7fdf667a0348 D.4547 type <integer_type 0x7fdf667aa5e8 int>
        ignored SI ./benchmarks/git/use_after_free_2/git_uaf_2.c:391:12 size <integer_cst 0x7fdf66795df8 32> unit-size <integer_cst 0x7fdf66795e10 4>
        align:32 warn_if_not_align:0 context <function_decl 0x7fdf662b9400 no_job>>
    arguments <parm_decl 0x7fdf662c3600 cp
        type <pointer_type 0x7fdf662bb7e0 type <record_type 0x7fdf662bb738 child_process>
            public unsigned DI
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
        unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:391:41 size <integer_cst 0x7fdf66795bb8 64> unit-size <integer_cst 0x7fdf66795bd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9400 no_job> arg-type <pointer_type 0x7fdf662bb7e0>
        chain <parm_decl 0x7fdf662c3680 err type <pointer_type 0x7fdf662bb888>
            unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:392:20 size <integer_cst 0x7fdf66795bb8 64> unit-size <integer_cst 0x7fdf66795bd0 8>
            align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9400 no_job> arg-type <pointer_type 0x7fdf662bb888> chain <parm_decl 0x7fdf662c3700 cb>>>
    struct-function 0x7fdf662cc170>
[40;36m ======= node_fun:run_processes_parallel========= [0m
[40;36m ======= find relate stmt with no_job ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:pp_cleanup========= [0m
[40;46m =======add node_fun stack:pp_cleanup========= [0m
[40;42m =======pre add _ fucntion:kill_children========= [0m
[40;46m =======add node_fun stack:kill_children========= [0m
[40;44m =======trace_function_path kill_children  function_call count: 1 level :1========  [0m
 <function_decl 0x7fdf662b9400 no_job
    type <function_type 0x7fdf662ad540
        type <integer_type 0x7fdf667aa5e8 int public SI
            size <integer_cst 0x7fdf66795df8 constant 32>
            unit-size <integer_cst 0x7fdf66795e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
            pointer_to_this <pointer_type 0x7fdf667b19d8>>
        QI
        size <integer_cst 0x7fdf66795ca8 constant 8>
        unit-size <integer_cst 0x7fdf66795cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7fdf662af618 value <pointer_type 0x7fdf662adbd0>
            chain <tree_list 0x7fdf662af5f0 value <pointer_type 0x7fdf662ada80>
                chain <tree_list 0x7fdf662af5c8 value <pointer_type 0x7fdf667b1000>
                    chain <tree_list 0x7fdf662af5a0 value <pointer_type 0x7fdf662ad498>
                        chain <tree_list 0x7fdf667a9b18 value <void_type 0x7fdf667aaf18 void>>>>>>
        pointer_to_this <pointer_type 0x7fdf662ad5e8>>
    addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/git/use_after_free_2/git_uaf_2.c:391:12 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c> initial <block 0x7fdf662cb360>
    result <result_decl 0x7fdf667a0348 D.4547 type <integer_type 0x7fdf667aa5e8 int>
        ignored SI ./benchmarks/git/use_after_free_2/git_uaf_2.c:391:12 size <integer_cst 0x7fdf66795df8 32> unit-size <integer_cst 0x7fdf66795e10 4>
        align:32 warn_if_not_align:0 context <function_decl 0x7fdf662b9400 no_job>>
    arguments <parm_decl 0x7fdf662c3600 cp
        type <pointer_type 0x7fdf662bb7e0 type <record_type 0x7fdf662bb738 child_process>
            public unsigned DI
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
        unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:391:41 size <integer_cst 0x7fdf66795bb8 64> unit-size <integer_cst 0x7fdf66795bd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9400 no_job> arg-type <pointer_type 0x7fdf662bb7e0>
        chain <parm_decl 0x7fdf662c3680 err type <pointer_type 0x7fdf662bb888>
            unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:392:20 size <integer_cst 0x7fdf66795bb8 64> unit-size <integer_cst 0x7fdf66795bd0 8>
            align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9400 no_job> arg-type <pointer_type 0x7fdf662bb888> chain <parm_decl 0x7fdf662c3700 cb>>>
    struct-function 0x7fdf662cc170>
[40;36m ======= node_fun:kill_children========= [0m
[40;36m ======= find relate stmt with no_job ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:kill========= [0m
[40;46m =======add node_fun stack:kill========= [0m
[40;42m =======pre add _ fucntion:pp_collect_finished========= [0m
[40;46m =======add node_fun stack:pp_collect_finished========= [0m
[40;44m =======trace_function_path pp_collect_finished  function_call count: 5 level :1========  [0m
 <function_decl 0x7fdf662b9400 no_job
    type <function_type 0x7fdf662ad540
        type <integer_type 0x7fdf667aa5e8 int public SI
            size <integer_cst 0x7fdf66795df8 constant 32>
            unit-size <integer_cst 0x7fdf66795e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
            pointer_to_this <pointer_type 0x7fdf667b19d8>>
        QI
        size <integer_cst 0x7fdf66795ca8 constant 8>
        unit-size <integer_cst 0x7fdf66795cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7fdf662af618 value <pointer_type 0x7fdf662adbd0>
            chain <tree_list 0x7fdf662af5f0 value <pointer_type 0x7fdf662ada80>
                chain <tree_list 0x7fdf662af5c8 value <pointer_type 0x7fdf667b1000>
                    chain <tree_list 0x7fdf662af5a0 value <pointer_type 0x7fdf662ad498>
                        chain <tree_list 0x7fdf667a9b18 value <void_type 0x7fdf667aaf18 void>>>>>>
        pointer_to_this <pointer_type 0x7fdf662ad5e8>>
    addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/git/use_after_free_2/git_uaf_2.c:391:12 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c> initial <block 0x7fdf662cb360>
    result <result_decl 0x7fdf667a0348 D.4547 type <integer_type 0x7fdf667aa5e8 int>
        ignored SI ./benchmarks/git/use_after_free_2/git_uaf_2.c:391:12 size <integer_cst 0x7fdf66795df8 32> unit-size <integer_cst 0x7fdf66795e10 4>
        align:32 warn_if_not_align:0 context <function_decl 0x7fdf662b9400 no_job>>
    arguments <parm_decl 0x7fdf662c3600 cp
        type <pointer_type 0x7fdf662bb7e0 type <record_type 0x7fdf662bb738 child_process>
            public unsigned DI
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
        unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:391:41 size <integer_cst 0x7fdf66795bb8 64> unit-size <integer_cst 0x7fdf66795bd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9400 no_job> arg-type <pointer_type 0x7fdf662bb7e0>
        chain <parm_decl 0x7fdf662c3680 err type <pointer_type 0x7fdf662bb888>
            unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:392:20 size <integer_cst 0x7fdf66795bb8 64> unit-size <integer_cst 0x7fdf66795bd0 8>
            align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9400 no_job> arg-type <pointer_type 0x7fdf662bb888> chain <parm_decl 0x7fdf662c3700 cb>>>
    struct-function 0x7fdf662cc170>
[40;36m ======= node_fun:pp_collect_finished========= [0m
[40;36m ======= find relate stmt with no_job ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:fputs========= [0m
[40;46m =======add node_fun stack:fputs========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:finish_command========= [0m
[40;46m =======add node_fun stack:finish_command========= [0m
[40;44m =======trace_function_path finish_command  function_call count: 2 level :2========  [0m
 <function_decl 0x7fdf662b9400 no_job
    type <function_type 0x7fdf662ad540
        type <integer_type 0x7fdf667aa5e8 int public SI
            size <integer_cst 0x7fdf66795df8 constant 32>
            unit-size <integer_cst 0x7fdf66795e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
            pointer_to_this <pointer_type 0x7fdf667b19d8>>
        QI
        size <integer_cst 0x7fdf66795ca8 constant 8>
        unit-size <integer_cst 0x7fdf66795cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7fdf662af618 value <pointer_type 0x7fdf662adbd0>
            chain <tree_list 0x7fdf662af5f0 value <pointer_type 0x7fdf662ada80>
                chain <tree_list 0x7fdf662af5c8 value <pointer_type 0x7fdf667b1000>
                    chain <tree_list 0x7fdf662af5a0 value <pointer_type 0x7fdf662ad498>
                        chain <tree_list 0x7fdf667a9b18 value <void_type 0x7fdf667aaf18 void>>>>>>
        pointer_to_this <pointer_type 0x7fdf662ad5e8>>
    addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/git/use_after_free_2/git_uaf_2.c:391:12 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c> initial <block 0x7fdf662cb360>
    result <result_decl 0x7fdf667a0348 D.4547 type <integer_type 0x7fdf667aa5e8 int>
        ignored SI ./benchmarks/git/use_after_free_2/git_uaf_2.c:391:12 size <integer_cst 0x7fdf66795df8 32> unit-size <integer_cst 0x7fdf66795e10 4>
        align:32 warn_if_not_align:0 context <function_decl 0x7fdf662b9400 no_job>>
    arguments <parm_decl 0x7fdf662c3600 cp
        type <pointer_type 0x7fdf662bb7e0 type <record_type 0x7fdf662bb738 child_process>
            public unsigned DI
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
        unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:391:41 size <integer_cst 0x7fdf66795bb8 64> unit-size <integer_cst 0x7fdf66795bd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9400 no_job> arg-type <pointer_type 0x7fdf662bb7e0>
        chain <parm_decl 0x7fdf662c3680 err type <pointer_type 0x7fdf662bb888>
            unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:392:20 size <integer_cst 0x7fdf66795bb8 64> unit-size <integer_cst 0x7fdf66795bd0 8>
            align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9400 no_job> arg-type <pointer_type 0x7fdf662bb888> chain <parm_decl 0x7fdf662c3700 cb>>>
    struct-function 0x7fdf662cc170>
[40;36m ======= node_fun:finish_command========= [0m
[40;36m ======= find relate stmt with no_job ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_clear========= [0m
[40;46m =======add node_fun stack:child_process_clear========= [0m
[40;44m =======trace_function_path child_process_clear  function_call count: 1 level :3========  [0m
 <function_decl 0x7fdf662b9400 no_job
    type <function_type 0x7fdf662ad540
        type <integer_type 0x7fdf667aa5e8 int public SI
            size <integer_cst 0x7fdf66795df8 constant 32>
            unit-size <integer_cst 0x7fdf66795e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
            pointer_to_this <pointer_type 0x7fdf667b19d8>>
        QI
        size <integer_cst 0x7fdf66795ca8 constant 8>
        unit-size <integer_cst 0x7fdf66795cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7fdf662af618 value <pointer_type 0x7fdf662adbd0>
            chain <tree_list 0x7fdf662af5f0 value <pointer_type 0x7fdf662ada80>
                chain <tree_list 0x7fdf662af5c8 value <pointer_type 0x7fdf667b1000>
                    chain <tree_list 0x7fdf662af5a0 value <pointer_type 0x7fdf662ad498>
                        chain <tree_list 0x7fdf667a9b18 value <void_type 0x7fdf667aaf18 void>>>>>>
        pointer_to_this <pointer_type 0x7fdf662ad5e8>>
    addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/git/use_after_free_2/git_uaf_2.c:391:12 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c> initial <block 0x7fdf662cb360>
    result <result_decl 0x7fdf667a0348 D.4547 type <integer_type 0x7fdf667aa5e8 int>
        ignored SI ./benchmarks/git/use_after_free_2/git_uaf_2.c:391:12 size <integer_cst 0x7fdf66795df8 32> unit-size <integer_cst 0x7fdf66795e10 4>
        align:32 warn_if_not_align:0 context <function_decl 0x7fdf662b9400 no_job>>
    arguments <parm_decl 0x7fdf662c3600 cp
        type <pointer_type 0x7fdf662bb7e0 type <record_type 0x7fdf662bb738 child_process>
            public unsigned DI
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
        unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:391:41 size <integer_cst 0x7fdf66795bb8 64> unit-size <integer_cst 0x7fdf66795bd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9400 no_job> arg-type <pointer_type 0x7fdf662bb7e0>
        chain <parm_decl 0x7fdf662c3680 err type <pointer_type 0x7fdf662bb888>
            unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:392:20 size <integer_cst 0x7fdf66795bb8 64> unit-size <integer_cst 0x7fdf66795bd0 8>
            align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9400 no_job> arg-type <pointer_type 0x7fdf662bb888> chain <parm_decl 0x7fdf662c3700 cb>>>
    struct-function 0x7fdf662cc170>
[40;36m ======= node_fun:child_process_clear========= [0m
[40;36m ======= find relate stmt with no_job ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;46m =======add node_fun stack:wait_or_whine========= [0m
[40;42m =======pre add _ fucntion:pp_output========= [0m
[40;46m =======add node_fun stack:pp_output========= [0m
[40;42m =======pre add _ fucntion:pp_buffer_stderr========= [0m
[40;46m =======add node_fun stack:pp_buffer_stderr========= [0m
[40;42m =======pre add _ fucntion:pp_start_one========= [0m
[40;46m =======add node_fun stack:pp_start_one========= [0m
[40;44m =======trace_function_path pp_start_one  function_call count: 5 level :1========  [0m
 <function_decl 0x7fdf662b9400 no_job
    type <function_type 0x7fdf662ad540
        type <integer_type 0x7fdf667aa5e8 int public SI
            size <integer_cst 0x7fdf66795df8 constant 32>
            unit-size <integer_cst 0x7fdf66795e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
            pointer_to_this <pointer_type 0x7fdf667b19d8>>
        QI
        size <integer_cst 0x7fdf66795ca8 constant 8>
        unit-size <integer_cst 0x7fdf66795cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7fdf662af618 value <pointer_type 0x7fdf662adbd0>
            chain <tree_list 0x7fdf662af5f0 value <pointer_type 0x7fdf662ada80>
                chain <tree_list 0x7fdf662af5c8 value <pointer_type 0x7fdf667b1000>
                    chain <tree_list 0x7fdf662af5a0 value <pointer_type 0x7fdf662ad498>
                        chain <tree_list 0x7fdf667a9b18 value <void_type 0x7fdf667aaf18 void>>>>>>
        pointer_to_this <pointer_type 0x7fdf662ad5e8>>
    addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/git/use_after_free_2/git_uaf_2.c:391:12 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c> initial <block 0x7fdf662cb360>
    result <result_decl 0x7fdf667a0348 D.4547 type <integer_type 0x7fdf667aa5e8 int>
        ignored SI ./benchmarks/git/use_after_free_2/git_uaf_2.c:391:12 size <integer_cst 0x7fdf66795df8 32> unit-size <integer_cst 0x7fdf66795e10 4>
        align:32 warn_if_not_align:0 context <function_decl 0x7fdf662b9400 no_job>>
    arguments <parm_decl 0x7fdf662c3600 cp
        type <pointer_type 0x7fdf662bb7e0 type <record_type 0x7fdf662bb738 child_process>
            public unsigned DI
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
        unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:391:41 size <integer_cst 0x7fdf66795bb8 64> unit-size <integer_cst 0x7fdf66795bd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9400 no_job> arg-type <pointer_type 0x7fdf662bb7e0>
        chain <parm_decl 0x7fdf662c3680 err type <pointer_type 0x7fdf662bb888>
            unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:392:20 size <integer_cst 0x7fdf66795bb8 64> unit-size <integer_cst 0x7fdf66795bd0 8>
            align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9400 no_job> arg-type <pointer_type 0x7fdf662bb888> chain <parm_decl 0x7fdf662c3700 cb>>>
    struct-function 0x7fdf662cc170>
[40;36m ======= node_fun:pp_start_one========= [0m
[40;36m ======= find relate stmt with no_job ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:start_command========= [0m
[40;46m =======add node_fun stack:start_command========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:pp_init========= [0m
[40;46m =======add node_fun stack:pp_init========= [0m
[40;44m =======trace_function_path pp_init  function_call count: 7 level :1========  [0m
 <function_decl 0x7fdf662b9400 no_job
    type <function_type 0x7fdf662ad540
        type <integer_type 0x7fdf667aa5e8 int public SI
            size <integer_cst 0x7fdf66795df8 constant 32>
            unit-size <integer_cst 0x7fdf66795e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
            pointer_to_this <pointer_type 0x7fdf667b19d8>>
        QI
        size <integer_cst 0x7fdf66795ca8 constant 8>
        unit-size <integer_cst 0x7fdf66795cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7fdf662af618 value <pointer_type 0x7fdf662adbd0>
            chain <tree_list 0x7fdf662af5f0 value <pointer_type 0x7fdf662ada80>
                chain <tree_list 0x7fdf662af5c8 value <pointer_type 0x7fdf667b1000>
                    chain <tree_list 0x7fdf662af5a0 value <pointer_type 0x7fdf662ad498>
                        chain <tree_list 0x7fdf667a9b18 value <void_type 0x7fdf667aaf18 void>>>>>>
        pointer_to_this <pointer_type 0x7fdf662ad5e8>>
    addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/git/use_after_free_2/git_uaf_2.c:391:12 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c> initial <block 0x7fdf662cb360>
    result <result_decl 0x7fdf667a0348 D.4547 type <integer_type 0x7fdf667aa5e8 int>
        ignored SI ./benchmarks/git/use_after_free_2/git_uaf_2.c:391:12 size <integer_cst 0x7fdf66795df8 32> unit-size <integer_cst 0x7fdf66795e10 4>
        align:32 warn_if_not_align:0 context <function_decl 0x7fdf662b9400 no_job>>
    arguments <parm_decl 0x7fdf662c3600 cp
        type <pointer_type 0x7fdf662bb7e0 type <record_type 0x7fdf662bb738 child_process>
            public unsigned DI
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
        unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:391:41 size <integer_cst 0x7fdf66795bb8 64> unit-size <integer_cst 0x7fdf66795bd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9400 no_job> arg-type <pointer_type 0x7fdf662bb7e0>
        chain <parm_decl 0x7fdf662c3680 err type <pointer_type 0x7fdf662bb888>
            unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:392:20 size <integer_cst 0x7fdf66795bb8 64> unit-size <integer_cst 0x7fdf66795bd0 8>
            align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9400 no_job> arg-type <pointer_type 0x7fdf662bb888> chain <parm_decl 0x7fdf662c3700 cb>>>
    struct-function 0x7fdf662cc170>
[40;36m ======= node_fun:pp_init========= [0m
[40;36m ======= find relate stmt with no_job ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;46m =======add node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;46m =======add node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;46m =======add node_fun stack:online_cpus========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf6679dbd0
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _22 = run_processes_parallel (jobs_33, no_job, 0B, task_finished, &proc);
    version:22>
 <ssa_name 0x7fdf6679dbd0
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _22 = run_processes_parallel (jobs_33, no_job, 0B, task_finished, &proc);
    version:22>

 ================== pre trace ptable ================== 
trace fucntion name:run_processes_parallel 
[40;44m =======trace_function_path run_processes_parallel  function_call count: 7 level :888========  [0m
 <ssa_name 0x7fdf6679dbd0
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _22 = run_processes_parallel (jobs_33, no_job, 0B, task_finished, &proc);
    version:22>
[40;36m ======= node_fun:run_processes_parallel========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:pp_cleanup========= [0m
[40;46m =======add node_fun stack:pp_cleanup========= [0m
[40;42m =======pre add _ fucntion:kill_children========= [0m
[40;46m =======add node_fun stack:kill_children========= [0m
[40;44m =======trace_function_path kill_children  function_call count: 1 level :889========  [0m
 <ssa_name 0x7fdf6679dbd0
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _22 = run_processes_parallel (jobs_33, no_job, 0B, task_finished, &proc);
    version:22>
[40;36m ======= node_fun:kill_children========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:kill========= [0m
[40;46m =======add node_fun stack:kill========= [0m
[40;42m =======pre add _ fucntion:pp_collect_finished========= [0m
[40;46m =======add node_fun stack:pp_collect_finished========= [0m
[40;44m =======trace_function_path pp_collect_finished  function_call count: 5 level :889========  [0m
 <ssa_name 0x7fdf6679dbd0
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _22 = run_processes_parallel (jobs_33, no_job, 0B, task_finished, &proc);
    version:22>
[40;36m ======= node_fun:pp_collect_finished========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:fputs========= [0m
[40;46m =======add node_fun stack:fputs========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:finish_command========= [0m
[40;46m =======add node_fun stack:finish_command========= [0m
[40;44m =======trace_function_path finish_command  function_call count: 2 level :890========  [0m
 <ssa_name 0x7fdf6679dbd0
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _22 = run_processes_parallel (jobs_33, no_job, 0B, task_finished, &proc);
    version:22>
[40;36m ======= node_fun:finish_command========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_clear========= [0m
[40;46m =======add node_fun stack:child_process_clear========= [0m
[40;44m =======trace_function_path child_process_clear  function_call count: 1 level :891========  [0m
 <ssa_name 0x7fdf6679dbd0
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _22 = run_processes_parallel (jobs_33, no_job, 0B, task_finished, &proc);
    version:22>
[40;36m ======= node_fun:child_process_clear========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;46m =======add node_fun stack:wait_or_whine========= [0m
[40;42m =======pre add _ fucntion:pp_output========= [0m
[40;46m =======add node_fun stack:pp_output========= [0m
[40;42m =======pre add _ fucntion:pp_buffer_stderr========= [0m
[40;46m =======add node_fun stack:pp_buffer_stderr========= [0m
[40;42m =======pre add _ fucntion:pp_start_one========= [0m
[40;46m =======add node_fun stack:pp_start_one========= [0m
[40;44m =======trace_function_path pp_start_one  function_call count: 5 level :889========  [0m
 <ssa_name 0x7fdf6679dbd0
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _22 = run_processes_parallel (jobs_33, no_job, 0B, task_finished, &proc);
    version:22>
[40;36m ======= node_fun:pp_start_one========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:start_command========= [0m
[40;46m =======add node_fun stack:start_command========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:pp_init========= [0m
[40;46m =======add node_fun stack:pp_init========= [0m
[40;44m =======trace_function_path pp_init  function_call count: 7 level :889========  [0m
 <ssa_name 0x7fdf6679dbd0
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _22 = run_processes_parallel (jobs_33, no_job, 0B, task_finished, &proc);
    version:22>
[40;36m ======= node_fun:pp_init========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;46m =======add node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;46m =======add node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;46m =======add node_fun stack:online_cpus========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf6679dbd0
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _22 = run_processes_parallel (jobs_33, no_job, 0B, task_finished, &proc);
    version:22>
is Other function run_processes_parallel
 
 Start check Pointer Collect  

======================================================================
# .MEM_42 = VDEF <.MEM_40>
_22 = run_processes_parallel (jobs_33, no_job, 0B, task_finished, &proc);
_22 = run_processes_parallel (jobs_33, no_job, 0B, task_finished, &proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:440:17: warning: use location
this stmt call this function :run_processes_parallel
trace fucntion name:run_processes_parallel 
[40;44m =======trace_function_path run_processes_parallel  function_call count: 7 level :0========  [0m
 <ssa_name 0x7fdf6679dbd0
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _22 = run_processes_parallel (jobs_33, no_job, 0B, task_finished, &proc);
    version:22>
[40;36m ======= node_fun:run_processes_parallel========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:pp_cleanup========= [0m
[40;46m =======add node_fun stack:pp_cleanup========= [0m
[40;42m =======pre add _ fucntion:kill_children========= [0m
[40;46m =======add node_fun stack:kill_children========= [0m
[40;44m =======trace_function_path kill_children  function_call count: 1 level :1========  [0m
 <ssa_name 0x7fdf6679dbd0
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _22 = run_processes_parallel (jobs_33, no_job, 0B, task_finished, &proc);
    version:22>
[40;36m ======= node_fun:kill_children========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:kill========= [0m
[40;46m =======add node_fun stack:kill========= [0m
[40;42m =======pre add _ fucntion:pp_collect_finished========= [0m
[40;46m =======add node_fun stack:pp_collect_finished========= [0m
[40;44m =======trace_function_path pp_collect_finished  function_call count: 5 level :1========  [0m
 <ssa_name 0x7fdf6679dbd0
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _22 = run_processes_parallel (jobs_33, no_job, 0B, task_finished, &proc);
    version:22>
[40;36m ======= node_fun:pp_collect_finished========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:fputs========= [0m
[40;46m =======add node_fun stack:fputs========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:finish_command========= [0m
[40;46m =======add node_fun stack:finish_command========= [0m
[40;44m =======trace_function_path finish_command  function_call count: 2 level :2========  [0m
 <ssa_name 0x7fdf6679dbd0
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _22 = run_processes_parallel (jobs_33, no_job, 0B, task_finished, &proc);
    version:22>
[40;36m ======= node_fun:finish_command========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_clear========= [0m
[40;46m =======add node_fun stack:child_process_clear========= [0m
[40;44m =======trace_function_path child_process_clear  function_call count: 1 level :3========  [0m
 <ssa_name 0x7fdf6679dbd0
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _22 = run_processes_parallel (jobs_33, no_job, 0B, task_finished, &proc);
    version:22>
[40;36m ======= node_fun:child_process_clear========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;46m =======add node_fun stack:wait_or_whine========= [0m
[40;42m =======pre add _ fucntion:pp_output========= [0m
[40;46m =======add node_fun stack:pp_output========= [0m
[40;42m =======pre add _ fucntion:pp_buffer_stderr========= [0m
[40;46m =======add node_fun stack:pp_buffer_stderr========= [0m
[40;42m =======pre add _ fucntion:pp_start_one========= [0m
[40;46m =======add node_fun stack:pp_start_one========= [0m
[40;44m =======trace_function_path pp_start_one  function_call count: 5 level :1========  [0m
 <ssa_name 0x7fdf6679dbd0
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _22 = run_processes_parallel (jobs_33, no_job, 0B, task_finished, &proc);
    version:22>
[40;36m ======= node_fun:pp_start_one========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:start_command========= [0m
[40;46m =======add node_fun stack:start_command========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:pp_init========= [0m
[40;46m =======add node_fun stack:pp_init========= [0m
[40;44m =======trace_function_path pp_init  function_call count: 7 level :1========  [0m
 <ssa_name 0x7fdf6679dbd0
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _22 = run_processes_parallel (jobs_33, no_job, 0B, task_finished, &proc);
    version:22>
[40;36m ======= node_fun:pp_init========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;46m =======add node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;46m =======add node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;46m =======add node_fun stack:online_cpus========= [0m

 ================== trace ================== 
trace fucntion free:0 
exit (_22);
./benchmarks/git/use_after_free_2/git_uaf_2.c:440:17: warning: use location
this stmt call this function :exit
trace fucntion name:exit 

 ================== trace ================== 
trace fucntion free:0 

======================================================================

 Expand conflict 
 The same function may have multiple branches :run_processes_parallel
# .MEM_42 = VDEF <.MEM_40>
_22 = run_processes_parallel (jobs_33, no_job, 0B, task_finished, &proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:440:17: warning: use location
# .MEM_44 = VDEF <.MEM_40>
_19 = run_processes_parallel (jobs_33, parallel_next, 0B, task_finished, &proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:436:17: warning: use location
  436 |                 exit(run_processes_parallel(jobs, parallel_next,
      |                 ^
exit (_19);
./benchmarks/git/use_after_free_2/git_uaf_2.c:436:17: warning: use location
this stmt call this function :exit
trace fucntion name:exit 

 ================== trace ================== 
trace fucntion free:0 

======================================================================

 Expand conflict 
 The same function may have multiple branches :run_processes_parallel
# .MEM_42 = VDEF <.MEM_40>
_22 = run_processes_parallel (jobs_33, no_job, 0B, task_finished, &proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:440:17: warning: use location
  440 |                 exit(run_processes_parallel(jobs, no_job,
      |                 ^
# .MEM_46 = VDEF <.MEM_40>
_16 = run_processes_parallel (jobs_33, parallel_next, 0B, 0B, &proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:432:17: warning: use location
  432 |                 exit(run_processes_parallel(jobs, parallel_next,
      |                 ^
exit (_16);
./benchmarks/git/use_after_free_2/git_uaf_2.c:432:17: warning: use location
this stmt call this function :exit
trace fucntion name:exit 

 ================== trace ================== 
trace fucntion free:0 
_11 = run_command (&proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:426:17: warning: use location
  426 |                 exit(run_command(&proc));
      |                 ^
this stmt call this function :run_command
trace fucntion name:run_command 

 ================== trace ================== 
trace fucntion free:0 
proc.argv = _13;
./benchmarks/git/use_after_free_2/git_uaf_2.c:429:19: warning: use location
  429 |         proc.argv = (const char **)argv + 3;
      |                   ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf6679dbd0
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _22 = run_processes_parallel (jobs_33, no_job, 0B, task_finished, &proc);
    version:22>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf6679dbd0
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _22 = run_processes_parallel (jobs_33, no_job, 0B, task_finished, &proc);
    version:22>
 <ssa_name 0x7fdf6679dbd0
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _22 = run_processes_parallel (jobs_33, no_job, 0B, task_finished, &proc);
    version:22>

 ================== pre trace ptable ================== 
trace fucntion name:run_processes_parallel 
[40;44m =======trace_function_path run_processes_parallel  function_call count: 7 level :888========  [0m
 <ssa_name 0x7fdf6679dbd0
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _22 = run_processes_parallel (jobs_33, no_job, 0B, task_finished, &proc);
    version:22>
[40;36m ======= node_fun:run_processes_parallel========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:pp_cleanup========= [0m
[40;46m =======add node_fun stack:pp_cleanup========= [0m
[40;42m =======pre add _ fucntion:kill_children========= [0m
[40;46m =======add node_fun stack:kill_children========= [0m
[40;44m =======trace_function_path kill_children  function_call count: 1 level :889========  [0m
 <ssa_name 0x7fdf6679dbd0
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _22 = run_processes_parallel (jobs_33, no_job, 0B, task_finished, &proc);
    version:22>
[40;36m ======= node_fun:kill_children========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:kill========= [0m
[40;46m =======add node_fun stack:kill========= [0m
[40;42m =======pre add _ fucntion:pp_collect_finished========= [0m
[40;46m =======add node_fun stack:pp_collect_finished========= [0m
[40;44m =======trace_function_path pp_collect_finished  function_call count: 5 level :889========  [0m
 <ssa_name 0x7fdf6679dbd0
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _22 = run_processes_parallel (jobs_33, no_job, 0B, task_finished, &proc);
    version:22>
[40;36m ======= node_fun:pp_collect_finished========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:fputs========= [0m
[40;46m =======add node_fun stack:fputs========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:finish_command========= [0m
[40;46m =======add node_fun stack:finish_command========= [0m
[40;44m =======trace_function_path finish_command  function_call count: 2 level :890========  [0m
 <ssa_name 0x7fdf6679dbd0
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _22 = run_processes_parallel (jobs_33, no_job, 0B, task_finished, &proc);
    version:22>
[40;36m ======= node_fun:finish_command========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_clear========= [0m
[40;46m =======add node_fun stack:child_process_clear========= [0m
[40;44m =======trace_function_path child_process_clear  function_call count: 1 level :891========  [0m
 <ssa_name 0x7fdf6679dbd0
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _22 = run_processes_parallel (jobs_33, no_job, 0B, task_finished, &proc);
    version:22>
[40;36m ======= node_fun:child_process_clear========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;46m =======add node_fun stack:wait_or_whine========= [0m
[40;42m =======pre add _ fucntion:pp_output========= [0m
[40;46m =======add node_fun stack:pp_output========= [0m
[40;42m =======pre add _ fucntion:pp_buffer_stderr========= [0m
[40;46m =======add node_fun stack:pp_buffer_stderr========= [0m
[40;42m =======pre add _ fucntion:pp_start_one========= [0m
[40;46m =======add node_fun stack:pp_start_one========= [0m
[40;44m =======trace_function_path pp_start_one  function_call count: 5 level :889========  [0m
 <ssa_name 0x7fdf6679dbd0
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _22 = run_processes_parallel (jobs_33, no_job, 0B, task_finished, &proc);
    version:22>
[40;36m ======= node_fun:pp_start_one========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:start_command========= [0m
[40;46m =======add node_fun stack:start_command========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:pp_init========= [0m
[40;46m =======add node_fun stack:pp_init========= [0m
[40;44m =======trace_function_path pp_init  function_call count: 7 level :889========  [0m
 <ssa_name 0x7fdf6679dbd0
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _22 = run_processes_parallel (jobs_33, no_job, 0B, task_finished, &proc);
    version:22>
[40;36m ======= node_fun:pp_init========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;46m =======add node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;46m =======add node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;46m =======add node_fun stack:online_cpus========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf6679dbd0
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _22 = run_processes_parallel (jobs_33, no_job, 0B, task_finished, &proc);
    version:22>
is Other function run_processes_parallel
 
 Start check Pointer Collect  

======================================================================
_22 = run_processes_parallel (jobs_33, no_job, 0B, task_finished, &proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:440:17: warning: use location
  440 |                 exit(run_processes_parallel(jobs, no_job,
      |                 ^
this stmt call this function :run_processes_parallel
trace fucntion name:run_processes_parallel 
[40;44m =======trace_function_path run_processes_parallel  function_call count: 7 level :0========  [0m
 <ssa_name 0x7fdf6679dbd0
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _22 = run_processes_parallel (jobs_33, no_job, 0B, task_finished, &proc);
    version:22>
[40;36m ======= node_fun:run_processes_parallel========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:pp_cleanup========= [0m
[40;46m =======add node_fun stack:pp_cleanup========= [0m
[40;42m =======pre add _ fucntion:kill_children========= [0m
[40;46m =======add node_fun stack:kill_children========= [0m
[40;44m =======trace_function_path kill_children  function_call count: 1 level :1========  [0m
 <ssa_name 0x7fdf6679dbd0
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _22 = run_processes_parallel (jobs_33, no_job, 0B, task_finished, &proc);
    version:22>
[40;36m ======= node_fun:kill_children========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:kill========= [0m
[40;46m =======add node_fun stack:kill========= [0m
[40;42m =======pre add _ fucntion:pp_collect_finished========= [0m
[40;46m =======add node_fun stack:pp_collect_finished========= [0m
[40;44m =======trace_function_path pp_collect_finished  function_call count: 5 level :1========  [0m
 <ssa_name 0x7fdf6679dbd0
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _22 = run_processes_parallel (jobs_33, no_job, 0B, task_finished, &proc);
    version:22>
[40;36m ======= node_fun:pp_collect_finished========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:fputs========= [0m
[40;46m =======add node_fun stack:fputs========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:finish_command========= [0m
[40;46m =======add node_fun stack:finish_command========= [0m
[40;44m =======trace_function_path finish_command  function_call count: 2 level :2========  [0m
 <ssa_name 0x7fdf6679dbd0
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _22 = run_processes_parallel (jobs_33, no_job, 0B, task_finished, &proc);
    version:22>
[40;36m ======= node_fun:finish_command========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_clear========= [0m
[40;46m =======add node_fun stack:child_process_clear========= [0m
[40;44m =======trace_function_path child_process_clear  function_call count: 1 level :3========  [0m
 <ssa_name 0x7fdf6679dbd0
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _22 = run_processes_parallel (jobs_33, no_job, 0B, task_finished, &proc);
    version:22>
[40;36m ======= node_fun:child_process_clear========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;46m =======add node_fun stack:wait_or_whine========= [0m
[40;42m =======pre add _ fucntion:pp_output========= [0m
[40;46m =======add node_fun stack:pp_output========= [0m
[40;42m =======pre add _ fucntion:pp_buffer_stderr========= [0m
[40;46m =======add node_fun stack:pp_buffer_stderr========= [0m
[40;42m =======pre add _ fucntion:pp_start_one========= [0m
[40;46m =======add node_fun stack:pp_start_one========= [0m
[40;44m =======trace_function_path pp_start_one  function_call count: 5 level :1========  [0m
 <ssa_name 0x7fdf6679dbd0
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _22 = run_processes_parallel (jobs_33, no_job, 0B, task_finished, &proc);
    version:22>
[40;36m ======= node_fun:pp_start_one========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:start_command========= [0m
[40;46m =======add node_fun stack:start_command========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:pp_init========= [0m
[40;46m =======add node_fun stack:pp_init========= [0m
[40;44m =======trace_function_path pp_init  function_call count: 7 level :1========  [0m
 <ssa_name 0x7fdf6679dbd0
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _22 = run_processes_parallel (jobs_33, no_job, 0B, task_finished, &proc);
    version:22>
[40;36m ======= node_fun:pp_init========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;46m =======add node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;46m =======add node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;46m =======add node_fun stack:online_cpus========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_43 = VDEF <.MEM_42>
exit (_22);
exit (_22);
./benchmarks/git/use_after_free_2/git_uaf_2.c:440:17: warning: use location
this stmt call this function :exit
trace fucntion name:exit 

 ================== trace ================== 
trace fucntion free:0 
_19 = run_processes_parallel (jobs_33, parallel_next, 0B, task_finished, &proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:436:17: warning: use location
  436 |                 exit(run_processes_parallel(jobs, parallel_next,
      |                 ^
this stmt call this function :run_processes_parallel
trace fucntion name:run_processes_parallel 
[40;44m =======trace_function_path run_processes_parallel  function_call count: 7 level :0========  [0m
 <ssa_name 0x7fdf6679dbd0
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _22 = run_processes_parallel (jobs_33, no_job, 0B, task_finished, &proc);
    version:22>
[40;36m ======= node_fun:run_processes_parallel========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:pp_cleanup========= [0m
[40;46m =======add node_fun stack:pp_cleanup========= [0m
[40;42m =======pre add _ fucntion:kill_children========= [0m
[40;46m =======add node_fun stack:kill_children========= [0m
[40;44m =======trace_function_path kill_children  function_call count: 1 level :1========  [0m
 <ssa_name 0x7fdf6679dbd0
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _22 = run_processes_parallel (jobs_33, no_job, 0B, task_finished, &proc);
    version:22>
[40;36m ======= node_fun:kill_children========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:kill========= [0m
[40;46m =======add node_fun stack:kill========= [0m
[40;42m =======pre add _ fucntion:pp_collect_finished========= [0m
[40;46m =======add node_fun stack:pp_collect_finished========= [0m
[40;44m =======trace_function_path pp_collect_finished  function_call count: 5 level :1========  [0m
 <ssa_name 0x7fdf6679dbd0
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _22 = run_processes_parallel (jobs_33, no_job, 0B, task_finished, &proc);
    version:22>
[40;36m ======= node_fun:pp_collect_finished========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:fputs========= [0m
[40;46m =======add node_fun stack:fputs========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:finish_command========= [0m
[40;46m =======add node_fun stack:finish_command========= [0m
[40;44m =======trace_function_path finish_command  function_call count: 2 level :2========  [0m
 <ssa_name 0x7fdf6679dbd0
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _22 = run_processes_parallel (jobs_33, no_job, 0B, task_finished, &proc);
    version:22>
[40;36m ======= node_fun:finish_command========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_clear========= [0m
[40;46m =======add node_fun stack:child_process_clear========= [0m
[40;44m =======trace_function_path child_process_clear  function_call count: 1 level :3========  [0m
 <ssa_name 0x7fdf6679dbd0
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _22 = run_processes_parallel (jobs_33, no_job, 0B, task_finished, &proc);
    version:22>
[40;36m ======= node_fun:child_process_clear========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;46m =======add node_fun stack:wait_or_whine========= [0m
[40;42m =======pre add _ fucntion:pp_output========= [0m
[40;46m =======add node_fun stack:pp_output========= [0m
[40;42m =======pre add _ fucntion:pp_buffer_stderr========= [0m
[40;46m =======add node_fun stack:pp_buffer_stderr========= [0m
[40;42m =======pre add _ fucntion:pp_start_one========= [0m
[40;46m =======add node_fun stack:pp_start_one========= [0m
[40;44m =======trace_function_path pp_start_one  function_call count: 5 level :1========  [0m
 <ssa_name 0x7fdf6679dbd0
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _22 = run_processes_parallel (jobs_33, no_job, 0B, task_finished, &proc);
    version:22>
[40;36m ======= node_fun:pp_start_one========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:start_command========= [0m
[40;46m =======add node_fun stack:start_command========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:pp_init========= [0m
[40;46m =======add node_fun stack:pp_init========= [0m
[40;44m =======trace_function_path pp_init  function_call count: 7 level :1========  [0m
 <ssa_name 0x7fdf6679dbd0
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _22 = run_processes_parallel (jobs_33, no_job, 0B, task_finished, &proc);
    version:22>
[40;36m ======= node_fun:pp_init========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;46m =======add node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;46m =======add node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;46m =======add node_fun stack:online_cpus========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================

 Expand conflict 
 The same function may have multiple branches :exit
# .MEM_43 = VDEF <.MEM_42>
exit (_22);
./benchmarks/git/use_after_free_2/git_uaf_2.c:440:17: warning: use location
  440 |                 exit(run_processes_parallel(jobs, no_job,
      |                 ^
# .MEM_45 = VDEF <.MEM_44>
exit (_19);
./benchmarks/git/use_after_free_2/git_uaf_2.c:436:17: warning: use location
  436 |                 exit(run_processes_parallel(jobs, parallel_next,
      |                 ^
_16 = run_processes_parallel (jobs_33, parallel_next, 0B, 0B, &proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:432:17: warning: use location
  432 |                 exit(run_processes_parallel(jobs, parallel_next,
      |                 ^
this stmt call this function :run_processes_parallel
trace fucntion name:run_processes_parallel 
[40;44m =======trace_function_path run_processes_parallel  function_call count: 7 level :0========  [0m
 <ssa_name 0x7fdf6679dbd0
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _22 = run_processes_parallel (jobs_33, no_job, 0B, task_finished, &proc);
    version:22>
[40;36m ======= node_fun:run_processes_parallel========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:pp_cleanup========= [0m
[40;46m =======add node_fun stack:pp_cleanup========= [0m
[40;42m =======pre add _ fucntion:kill_children========= [0m
[40;46m =======add node_fun stack:kill_children========= [0m
[40;44m =======trace_function_path kill_children  function_call count: 1 level :1========  [0m
 <ssa_name 0x7fdf6679dbd0
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _22 = run_processes_parallel (jobs_33, no_job, 0B, task_finished, &proc);
    version:22>
[40;36m ======= node_fun:kill_children========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:kill========= [0m
[40;46m =======add node_fun stack:kill========= [0m
[40;42m =======pre add _ fucntion:pp_collect_finished========= [0m
[40;46m =======add node_fun stack:pp_collect_finished========= [0m
[40;44m =======trace_function_path pp_collect_finished  function_call count: 5 level :1========  [0m
 <ssa_name 0x7fdf6679dbd0
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _22 = run_processes_parallel (jobs_33, no_job, 0B, task_finished, &proc);
    version:22>
[40;36m ======= node_fun:pp_collect_finished========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:fputs========= [0m
[40;46m =======add node_fun stack:fputs========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:finish_command========= [0m
[40;46m =======add node_fun stack:finish_command========= [0m
[40;44m =======trace_function_path finish_command  function_call count: 2 level :2========  [0m
 <ssa_name 0x7fdf6679dbd0
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _22 = run_processes_parallel (jobs_33, no_job, 0B, task_finished, &proc);
    version:22>
[40;36m ======= node_fun:finish_command========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_clear========= [0m
[40;46m =======add node_fun stack:child_process_clear========= [0m
[40;44m =======trace_function_path child_process_clear  function_call count: 1 level :3========  [0m
 <ssa_name 0x7fdf6679dbd0
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _22 = run_processes_parallel (jobs_33, no_job, 0B, task_finished, &proc);
    version:22>
[40;36m ======= node_fun:child_process_clear========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;46m =======add node_fun stack:wait_or_whine========= [0m
[40;42m =======pre add _ fucntion:pp_output========= [0m
[40;46m =======add node_fun stack:pp_output========= [0m
[40;42m =======pre add _ fucntion:pp_buffer_stderr========= [0m
[40;46m =======add node_fun stack:pp_buffer_stderr========= [0m
[40;42m =======pre add _ fucntion:pp_start_one========= [0m
[40;46m =======add node_fun stack:pp_start_one========= [0m
[40;44m =======trace_function_path pp_start_one  function_call count: 5 level :1========  [0m
 <ssa_name 0x7fdf6679dbd0
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _22 = run_processes_parallel (jobs_33, no_job, 0B, task_finished, &proc);
    version:22>
[40;36m ======= node_fun:pp_start_one========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:start_command========= [0m
[40;46m =======add node_fun stack:start_command========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:pp_init========= [0m
[40;46m =======add node_fun stack:pp_init========= [0m
[40;44m =======trace_function_path pp_init  function_call count: 7 level :1========  [0m
 <ssa_name 0x7fdf6679dbd0
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _22 = run_processes_parallel (jobs_33, no_job, 0B, task_finished, &proc);
    version:22>
[40;36m ======= node_fun:pp_init========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;46m =======add node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;46m =======add node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;46m =======add node_fun stack:online_cpus========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================

 Expand conflict 
 The same function may have multiple branches :exit
# .MEM_43 = VDEF <.MEM_42>
exit (_22);
./benchmarks/git/use_after_free_2/git_uaf_2.c:440:17: warning: use location
  440 |                 exit(run_processes_parallel(jobs, no_job,
      |                 ^
# .MEM_47 = VDEF <.MEM_46>
exit (_16);
./benchmarks/git/use_after_free_2/git_uaf_2.c:432:17: warning: use location
  432 |                 exit(run_processes_parallel(jobs, parallel_next,
      |                 ^
_11 = run_command (&proc);
./benchmarks/git/use_after_free_2/git_uaf_2.c:426:17: warning: use location
  426 |                 exit(run_command(&proc));
      |                 ^
this stmt call this function :run_command
trace fucntion name:run_command 

 ================== trace ================== 
trace fucntion free:0 
proc.argv = _13;
./benchmarks/git/use_after_free_2/git_uaf_2.c:429:19: warning: use location
  429 |         proc.argv = (const char **)argv + 3;
      |                   ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf6679dbd0
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _22 = run_processes_parallel (jobs_33, no_job, 0B, task_finished, &proc);
    version:22>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <string_cst 0x7fdf662cfac8
    type <array_type 0x7fdf662c0498
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        BLK
        size <integer_cst 0x7fdf662a4e40 constant 104>
        unit-size <integer_cst 0x7fdf662a4e28 constant 13>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7fdf662c03f0 type <integer_type 0x7fdf667aa000 sizetype>
            DI
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa738 precision:64 min <integer_cst 0x7fdf66795be8 0> max <integer_cst 0x7fdf662a4dc8 12>>
        pointer_to_this <pointer_type 0x7fdf662c0540>>
    readonly constant static "check usage\012\000">

dot graph START

======================================================================
 <ssa_name 0x7fdf6679dc18
    type <pointer_type 0x7fdf662b63f0
        type <record_type 0x7fdf662b6348 FILE BLK
            size <integer_cst 0x7fdf662a4840 constant 1728>
            unit-size <integer_cst 0x7fdf662a4960 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b62a0 fields <field_decl 0x7fdf662b8b48 _flags> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662b63f0>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fdf662bee70>>
   
    def_stmt _23 = stderr;
    version:23
    ptr-info 0x7fdf662c9f60>
 <ssa_name 0x7fdf6679dc18
    type <pointer_type 0x7fdf662b63f0
        type <record_type 0x7fdf662b6348 FILE BLK
            size <integer_cst 0x7fdf662a4840 constant 1728>
            unit-size <integer_cst 0x7fdf662a4960 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b62a0 fields <field_decl 0x7fdf662b8b48 _flags> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662b63f0>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fdf662bee70>>
   
    def_stmt _23 = stderr;
    version:23
    ptr-info 0x7fdf662c9f60>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf6679dc18
    type <pointer_type 0x7fdf662b63f0
        type <record_type 0x7fdf662b6348 FILE BLK
            size <integer_cst 0x7fdf662a4840 constant 1728>
            unit-size <integer_cst 0x7fdf662a4960 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b62a0 fields <field_decl 0x7fdf662b8b48 _flags> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662b63f0>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fdf662bee70>>
   
    def_stmt _23 = stderr;
    version:23
    ptr-info 0x7fdf662c9f60>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_41 = VDEF <.MEM_40>
__builtin_fwrite ("check usage\n", 1, 12, _23);
__builtin_fwrite ("check usage\n", 1, 12, _23);
./benchmarks/git/use_after_free_2/git_uaf_2.c:443:9: warning: use location
  443 |         fprintf(stderr, "check usage\n");
      |         ^
this stmt call this function :__builtin_fwrite
trace fucntion name:__builtin_fwrite 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_41 = VDEF <.MEM_40>
__builtin_fwrite ("check usage\n", 1, 12, _23);
__builtin_fwrite ("check usage\n", 1, 12, _23);
./benchmarks/git/use_after_free_2/git_uaf_2.c:443:9: warning: use location
this stmt call this function :__builtin_fwrite
trace fucntion name:__builtin_fwrite 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf6679dc18
    type <pointer_type 0x7fdf662b63f0
        type <record_type 0x7fdf662b6348 FILE BLK
            size <integer_cst 0x7fdf662a4840 constant 1728>
            unit-size <integer_cst 0x7fdf662a4960 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b62a0 fields <field_decl 0x7fdf662b8b48 _flags> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662b63f0>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fdf662bee70>>
   
    def_stmt _23 = stderr;
    version:23
    ptr-info 0x7fdf662c9f60>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:main========= [0m
[40;44m =======node_fun:task_finished========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path task_finished  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:strbuf_addf========= [0m
[40;33m =======POP node_fun stack:strbuf_addf========= [0m
[40;42m =======pre_check_funciton:task_finished========= [0m
[40;42m =======start_check_funciton:task_finished========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fdf662d5318
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fdf662c3480 err>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7fdf662c9f90>
 <ssa_name 0x7fdf662d5318
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fdf662c3480 err>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7fdf662c9f90>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662d5318
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fdf662c3480 err>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7fdf662c9f90>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_4 = VDEF <.MEM_3(D)>
strbuf_addf (err_2(D), "asking for a quick stop\n");
strbuf_addf (err_2(D), "asking for a quick stop\n");
In function ‘task_finished’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:406:9: warning: use location
  406 |         strbuf_addf(err, "asking for a quick stop\n");
      |         ^
this stmt call this function :strbuf_addf
trace fucntion name:strbuf_addf 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_4 = VDEF <.MEM_3(D)>
strbuf_addf (err_2(D), "asking for a quick stop\n");
strbuf_addf (err_2(D), "asking for a quick stop\n");
./benchmarks/git/use_after_free_2/git_uaf_2.c:406:9: warning: use location
this stmt call this function :strbuf_addf
trace fucntion name:strbuf_addf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662d5318
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fdf662c3480 err>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7fdf662c9f90>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <string_cst 0x7fdf66793db0
    type <array_type 0x7fdf662bba80
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        BLK
        size <integer_cst 0x7fdf662a4b70 constant 200>
        unit-size <integer_cst 0x7fdf662a4b58 constant 25>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7fdf662bb9d8 type <integer_type 0x7fdf667aa000 sizetype>
            DI
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa738 precision:64 min <integer_cst 0x7fdf66795be8 0> max <integer_cst 0x7fdf667b3048 24>>
        pointer_to_this <pointer_type 0x7fdf662bbb28>>
    readonly constant static "asking for a quick stop\012\000">
[40;33m =======POP node_fun stack:task_finished========= [0m
[40;44m =======node_fun:no_job========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path no_job  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:strbuf_addf========= [0m
[40;33m =======POP node_fun stack:strbuf_addf========= [0m
[40;42m =======pre_check_funciton:no_job========= [0m
[40;42m =======start_check_funciton:no_job========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fdf662d5438
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fdf662c3680 err>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7fdf662c9fa8>
 <ssa_name 0x7fdf662d5438
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fdf662c3680 err>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7fdf662c9fa8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662d5438
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fdf662c3680 err>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7fdf662c9fa8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_4 = VDEF <.MEM_3(D)>
strbuf_addf (err_2(D), "no further jobs available\n");
strbuf_addf (err_2(D), "no further jobs available\n");
In function ‘no_job’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:396:9: warning: use location
  396 |         strbuf_addf(err, "no further jobs available\n");
      |         ^
this stmt call this function :strbuf_addf
trace fucntion name:strbuf_addf 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_4 = VDEF <.MEM_3(D)>
strbuf_addf (err_2(D), "no further jobs available\n");
strbuf_addf (err_2(D), "no further jobs available\n");
./benchmarks/git/use_after_free_2/git_uaf_2.c:396:9: warning: use location
this stmt call this function :strbuf_addf
trace fucntion name:strbuf_addf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662d5438
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fdf662c3680 err>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7fdf662c9fa8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <string_cst 0x7fdf66793ea0
    type <array_type 0x7fdf662bec78
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        BLK
        size <integer_cst 0x7fdf662a4cf0 constant 216>
        unit-size <integer_cst 0x7fdf662a4cd8 constant 27>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7fdf662bebd0 type <integer_type 0x7fdf667aa000 sizetype>
            DI
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa738 precision:64 min <integer_cst 0x7fdf66795be8 0> max <integer_cst 0x7fdf662a4cc0 26>>
        pointer_to_this <pointer_type 0x7fdf662bed20>>
    readonly constant static "no further jobs available\012\000">
[40;33m =======POP node_fun stack:no_job========= [0m
[40;44m =======node_fun:parallel_next========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path parallel_next  function_call count: 2 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:strbuf_addf========= [0m
[40;33m =======POP node_fun stack:strbuf_addf========= [0m
[40;42m =======pre add _ fucntion:argv_array_pushv========= [0m
[40;33m =======POP node_fun stack:argv_array_pushv========= [0m
[40;42m =======pre_check_funciton:parallel_next========= [0m
[40;42m =======start_check_funciton:parallel_next========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fdf662d55e8
    type <pointer_type 0x7fdf662bf0a8
        type <record_type 0x7fdf662bb690 argv_array TI
            size <integer_cst 0x7fdf66795c00 constant 128>
            unit-size <integer_cst 0x7fdf66795c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb690 fields <field_decl 0x7fdf662b8d10 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bf0a8>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _3 = &cp_10(D)->args;
    version:3
    ptr-info 0x7fdf662c9fd8>
 <ssa_name 0x7fdf662d55e8
    type <pointer_type 0x7fdf662bf0a8
        type <record_type 0x7fdf662bb690 argv_array TI
            size <integer_cst 0x7fdf66795c00 constant 128>
            unit-size <integer_cst 0x7fdf66795c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb690 fields <field_decl 0x7fdf662b8d10 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bf0a8>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _3 = &cp_10(D)->args;
    version:3
    ptr-info 0x7fdf662c9fd8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662d55e8
    type <pointer_type 0x7fdf662bf0a8
        type <record_type 0x7fdf662bb690 argv_array TI
            size <integer_cst 0x7fdf66795c00 constant 128>
            unit-size <integer_cst 0x7fdf66795c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb690 fields <field_decl 0x7fdf662b8d10 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bf0a8>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _3 = &cp_10(D)->args;
    version:3
    ptr-info 0x7fdf662c9fd8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_15 = VDEF <.MEM_14(D)>
argv_array_pushv (_3, _2);
argv_array_pushv (_3, _2);
In function ‘parallel_next’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:385:9: warning: use location
  385 |         argv_array_pushv(&cp->args, d->argv);
      |         ^
this stmt call this function :argv_array_pushv
trace fucntion name:argv_array_pushv 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_15 = VDEF <.MEM_14(D)>
argv_array_pushv (_3, _2);
argv_array_pushv (_3, _2);
./benchmarks/git/use_after_free_2/git_uaf_2.c:385:9: warning: use location
this stmt call this function :argv_array_pushv
trace fucntion name:argv_array_pushv 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662d55e8
    type <pointer_type 0x7fdf662bf0a8
        type <record_type 0x7fdf662bb690 argv_array TI
            size <integer_cst 0x7fdf66795c00 constant 128>
            unit-size <integer_cst 0x7fdf66795c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb690 fields <field_decl 0x7fdf662b8d10 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bf0a8>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _3 = &cp_10(D)->args;
    version:3
    ptr-info 0x7fdf662c9fd8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662d55a0
    type <pointer_type 0x7fdf662bb5e8
        type <pointer_type 0x7fdf662b6888 type <integer_type 0x7fdf662b67e0 char>
            public unsigned DI
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fdf662bb5e8>>
        public unsigned DI size <integer_cst 0x7fdf66795bb8 64> unit-size <integer_cst 0x7fdf66795bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = MEM[(struct child_process *)cb_8(D)].argv;
    version:2
    ptr-info 0x7fdf662c9fc0>
 <ssa_name 0x7fdf662d55a0
    type <pointer_type 0x7fdf662bb5e8
        type <pointer_type 0x7fdf662b6888 type <integer_type 0x7fdf662b67e0 char>
            public unsigned DI
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fdf662bb5e8>>
        public unsigned DI size <integer_cst 0x7fdf66795bb8 64> unit-size <integer_cst 0x7fdf66795bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = MEM[(struct child_process *)cb_8(D)].argv;
    version:2
    ptr-info 0x7fdf662c9fc0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662d55a0
    type <pointer_type 0x7fdf662bb5e8
        type <pointer_type 0x7fdf662b6888 type <integer_type 0x7fdf662b67e0 char>
            public unsigned DI
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fdf662bb5e8>>
        public unsigned DI size <integer_cst 0x7fdf66795bb8 64> unit-size <integer_cst 0x7fdf66795bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = MEM[(struct child_process *)cb_8(D)].argv;
    version:2
    ptr-info 0x7fdf662c9fc0>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_15 = VDEF <.MEM_14(D)>
argv_array_pushv (_3, _2);
argv_array_pushv (_3, _2);
./benchmarks/git/use_after_free_2/git_uaf_2.c:385:9: warning: use location
this stmt call this function :argv_array_pushv
trace fucntion name:argv_array_pushv 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_15 = VDEF <.MEM_14(D)>
argv_array_pushv (_3, _2);
argv_array_pushv (_3, _2);
./benchmarks/git/use_after_free_2/git_uaf_2.c:385:9: warning: use location
this stmt call this function :argv_array_pushv
trace fucntion name:argv_array_pushv 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662d55a0
    type <pointer_type 0x7fdf662bb5e8
        type <pointer_type 0x7fdf662b6888 type <integer_type 0x7fdf662b67e0 char>
            public unsigned DI
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fdf662bb5e8>>
        public unsigned DI size <integer_cst 0x7fdf66795bb8 64> unit-size <integer_cst 0x7fdf66795bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = MEM[(struct child_process *)cb_8(D)].argv;
    version:2
    ptr-info 0x7fdf662c9fc0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662d5798
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fdf662c3880 err>
    def_stmt GIMPLE_NOP
    version:12
    ptr-info 0x7fdf662a4e88>
 <ssa_name 0x7fdf662d5798
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fdf662c3880 err>
    def_stmt GIMPLE_NOP
    version:12
    ptr-info 0x7fdf662a4e88>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662d5798
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fdf662c3880 err>
    def_stmt GIMPLE_NOP
    version:12
    ptr-info 0x7fdf662a4e88>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_16 = VDEF <.MEM_15>
strbuf_addf (err_12(D), "preloaded output of a child\n");
strbuf_addf (err_12(D), "preloaded output of a child\n");
./benchmarks/git/use_after_free_2/git_uaf_2.c:386:9: warning: use location
  386 |         strbuf_addf(err, "preloaded output of a child\n");
      |         ^
this stmt call this function :strbuf_addf
trace fucntion name:strbuf_addf 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_16 = VDEF <.MEM_15>
strbuf_addf (err_12(D), "preloaded output of a child\n");
strbuf_addf (err_12(D), "preloaded output of a child\n");
./benchmarks/git/use_after_free_2/git_uaf_2.c:386:9: warning: use location
this stmt call this function :strbuf_addf
trace fucntion name:strbuf_addf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662d5798
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fdf662c3880 err>
    def_stmt GIMPLE_NOP
    version:12
    ptr-info 0x7fdf662a4e88>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <string_cst 0x7fdf6679f0a8
    type <array_type 0x7fdf662bf3f0
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        BLK
        size <integer_cst 0x7fdf662a4d38 constant 232>
        unit-size <integer_cst 0x7fdf662a4d20 constant 29>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7fdf662bf348 type <integer_type 0x7fdf667aa000 sizetype>
            DI
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa738 precision:64 min <integer_cst 0x7fdf66795be8 0> max <integer_cst 0x7fdf662a4d08 28>>
        pointer_to_this <pointer_type 0x7fdf662bf498>>
    readonly constant static "preloaded output of a child\012\000">
[40;33m =======POP node_fun stack:parallel_next========= [0m
[40;44m =======node_fun:run_processes_parallel========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path run_processes_parallel  function_call count: 7 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:pp_cleanup========= [0m
[40;33m =======POP node_fun stack:pp_cleanup========= [0m
[40;42m =======pre add _ fucntion:kill_children========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path kill_children  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:kill========= [0m
[40;33m =======POP node_fun stack:kill========= [0m
[40;42m =======pre_check_funciton:kill_children========= [0m
[40;42m =======start_check_funciton:kill_children========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fdf662e4948
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _10 = _9->process.pid;
    version:10>
 <ssa_name 0x7fdf662e4948
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _10 = _9->process.pid;
    version:10>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662e4948
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _10 = _9->process.pid;
    version:10>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_23 = VDEF <.MEM_21>
kill (_10, signo_17(D));
kill (_10, signo_17(D));
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:259:25: warning: use location
  259 |                         kill(pp->children[i].process.pid, signo);
      |                         ^
this stmt call this function :kill
trace fucntion name:kill 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_23 = VDEF <.MEM_21>
kill (_10, signo_17(D));
kill (_10, signo_17(D));
./benchmarks/git/use_after_free_2/git_uaf_2.c:259:25: warning: use location
this stmt call this function :kill
trace fucntion name:kill 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662e4948
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _10 = _9->process.pid;
    version:10>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662e4a68
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <parm_decl 0x7fdf662c3f00 signo>
    def_stmt GIMPLE_NOP
    version:17>
 <ssa_name 0x7fdf662e4a68
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <parm_decl 0x7fdf662c3f00 signo>
    def_stmt GIMPLE_NOP
    version:17>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662e4a68
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <parm_decl 0x7fdf662c3f00 signo>
    def_stmt GIMPLE_NOP
    version:17>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_23 = VDEF <.MEM_21>
kill (_10, signo_17(D));
kill (_10, signo_17(D));
./benchmarks/git/use_after_free_2/git_uaf_2.c:259:25: warning: use location
this stmt call this function :kill
trace fucntion name:kill 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_23 = VDEF <.MEM_21>
kill (_10, signo_17(D));
kill (_10, signo_17(D));
./benchmarks/git/use_after_free_2/git_uaf_2.c:259:25: warning: use location
this stmt call this function :kill
trace fucntion name:kill 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662e4a68
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <parm_decl 0x7fdf662c3f00 signo>
    def_stmt GIMPLE_NOP
    version:17>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:kill_children========= [0m
[40;42m =======pre add _ fucntion:pp_collect_finished========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path pp_collect_finished  function_call count: 5 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;33m =======POP node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:fputs========= [0m
[40;33m =======POP node_fun stack:fputs========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;33m =======POP node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;33m =======POP node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:finish_command========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path finish_command  function_call count: 2 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:child_process_clear========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path child_process_clear  function_call count: 1 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;33m =======POP node_fun stack:argv_array_clear========= [0m
[40;42m =======pre_check_funciton:child_process_clear========= [0m
[40;42m =======start_check_funciton:child_process_clear========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fdf662de318
    type <pointer_type 0x7fdf662bf0a8
        type <record_type 0x7fdf662bb690 argv_array TI
            size <integer_cst 0x7fdf66795c00 constant 128>
            unit-size <integer_cst 0x7fdf66795c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb690 fields <field_decl 0x7fdf662b8d10 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bf0a8>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _1 = &child_3(D)->args;
    version:1
    ptr-info 0x7fdf662a4f00>
 <ssa_name 0x7fdf662de318
    type <pointer_type 0x7fdf662bf0a8
        type <record_type 0x7fdf662bb690 argv_array TI
            size <integer_cst 0x7fdf66795c00 constant 128>
            unit-size <integer_cst 0x7fdf66795c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb690 fields <field_decl 0x7fdf662b8d10 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bf0a8>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _1 = &child_3(D)->args;
    version:1
    ptr-info 0x7fdf662a4f00>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662de318
    type <pointer_type 0x7fdf662bf0a8
        type <record_type 0x7fdf662bb690 argv_array TI
            size <integer_cst 0x7fdf66795c00 constant 128>
            unit-size <integer_cst 0x7fdf66795c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb690 fields <field_decl 0x7fdf662b8d10 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bf0a8>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _1 = &child_3(D)->args;
    version:1
    ptr-info 0x7fdf662a4f00>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_5 = VDEF <.MEM_4(D)>
argv_array_clear (_1);
argv_array_clear (_1);
./benchmarks/git/use_after_free_2/git_uaf_2.c:328:9: warning: use location
  328 |         argv_array_clear(&child->args);
      |         ^
this stmt call this function :argv_array_clear
trace fucntion name:argv_array_clear 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_5 = VDEF <.MEM_4(D)>
argv_array_clear (_1);
argv_array_clear (_1);
./benchmarks/git/use_after_free_2/git_uaf_2.c:328:9: warning: use location
this stmt call this function :argv_array_clear
trace fucntion name:argv_array_clear 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662de318
    type <pointer_type 0x7fdf662bf0a8
        type <record_type 0x7fdf662bb690 argv_array TI
            size <integer_cst 0x7fdf66795c00 constant 128>
            unit-size <integer_cst 0x7fdf66795c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb690 fields <field_decl 0x7fdf662b8d10 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bf0a8>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _1 = &child_3(D)->args;
    version:1
    ptr-info 0x7fdf662a4f00>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662de360
    type <pointer_type 0x7fdf662bf0a8
        type <record_type 0x7fdf662bb690 argv_array TI
            size <integer_cst 0x7fdf66795c00 constant 128>
            unit-size <integer_cst 0x7fdf66795c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb690 fields <field_decl 0x7fdf662b8d10 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bf0a8>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = &child_3(D)->env_array;
    version:2
    ptr-info 0x7fdf662a4f18>
 <ssa_name 0x7fdf662de360
    type <pointer_type 0x7fdf662bf0a8
        type <record_type 0x7fdf662bb690 argv_array TI
            size <integer_cst 0x7fdf66795c00 constant 128>
            unit-size <integer_cst 0x7fdf66795c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb690 fields <field_decl 0x7fdf662b8d10 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bf0a8>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = &child_3(D)->env_array;
    version:2
    ptr-info 0x7fdf662a4f18>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662de360
    type <pointer_type 0x7fdf662bf0a8
        type <record_type 0x7fdf662bb690 argv_array TI
            size <integer_cst 0x7fdf66795c00 constant 128>
            unit-size <integer_cst 0x7fdf66795c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb690 fields <field_decl 0x7fdf662b8d10 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bf0a8>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = &child_3(D)->env_array;
    version:2
    ptr-info 0x7fdf662a4f18>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_6 = VDEF <.MEM_5>
argv_array_clear (_2);
argv_array_clear (_2);
./benchmarks/git/use_after_free_2/git_uaf_2.c:329:9: warning: use location
  329 |         argv_array_clear(&child->env_array);
      |         ^
this stmt call this function :argv_array_clear
trace fucntion name:argv_array_clear 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_6 = VDEF <.MEM_5>
argv_array_clear (_2);
argv_array_clear (_2);
./benchmarks/git/use_after_free_2/git_uaf_2.c:329:9: warning: use location
this stmt call this function :argv_array_clear
trace fucntion name:argv_array_clear 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662de360
    type <pointer_type 0x7fdf662bf0a8
        type <record_type 0x7fdf662bb690 argv_array TI
            size <integer_cst 0x7fdf66795c00 constant 128>
            unit-size <integer_cst 0x7fdf66795c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb690 fields <field_decl 0x7fdf662b8d10 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bf0a8>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = &child_3(D)->env_array;
    version:2
    ptr-info 0x7fdf662a4f18>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:child_process_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;33m =======POP node_fun stack:wait_or_whine========= [0m
[40;42m =======pre_check_funciton:finish_command========= [0m
[40;42m =======start_check_funciton:finish_command========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fdf662de558
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _3 = cmd_5(D)->pid;
    version:3>
 <ssa_name 0x7fdf662de558
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _3 = cmd_5(D)->pid;
    version:3>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662de558
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _3 = cmd_5(D)->pid;
    version:3>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_9 = VDEF <.MEM_8(D)>
ret_7 = wait_or_whine (_3, _2, 0);
ret_7 = wait_or_whine (_3, _2, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:15: warning: use location
  321 |     int ret = wait_or_whine(cmd->pid, cmd->argv[0], 0);
      |               ^
this stmt call this function :wait_or_whine
trace fucntion name:wait_or_whine 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_9 = VDEF <.MEM_8(D)>
ret_7 = wait_or_whine (_3, _2, 0);
ret_7 = wait_or_whine (_3, _2, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:15: warning: use location
this stmt call this function :wait_or_whine
trace fucntion name:wait_or_whine 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662de558
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _3 = cmd_5(D)->pid;
    version:3>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662de510
    type <pointer_type 0x7fdf662b6888
        type <integer_type 0x7fdf662b67e0 char readonly QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b6888>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fdf662bb5e8>>
   
    def_stmt _2 = *_1;
    version:2
    ptr-info 0x7fdf662a4f60>
 <ssa_name 0x7fdf662de510
    type <pointer_type 0x7fdf662b6888
        type <integer_type 0x7fdf662b67e0 char readonly QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b6888>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fdf662bb5e8>>
   
    def_stmt _2 = *_1;
    version:2
    ptr-info 0x7fdf662a4f60>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662de510
    type <pointer_type 0x7fdf662b6888
        type <integer_type 0x7fdf662b67e0 char readonly QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b6888>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fdf662bb5e8>>
   
    def_stmt _2 = *_1;
    version:2
    ptr-info 0x7fdf662a4f60>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_9 = VDEF <.MEM_8(D)>
ret_7 = wait_or_whine (_3, _2, 0);
ret_7 = wait_or_whine (_3, _2, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:15: warning: use location
this stmt call this function :wait_or_whine
trace fucntion name:wait_or_whine 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_9 = VDEF <.MEM_8(D)>
ret_7 = wait_or_whine (_3, _2, 0);
ret_7 = wait_or_whine (_3, _2, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:15: warning: use location
this stmt call this function :wait_or_whine
trace fucntion name:wait_or_whine 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662de510
    type <pointer_type 0x7fdf662b6888
        type <integer_type 0x7fdf662b67e0 char readonly QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b6888>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fdf662bb5e8>>
   
    def_stmt _2 = *_1;
    version:2
    ptr-info 0x7fdf662a4f60>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662de5e8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf662db3f0 ret>
    def_stmt ret_7 = wait_or_whine (_3, _2, 0);
    version:7>
 <ssa_name 0x7fdf662de5e8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf662db3f0 ret>
    def_stmt ret_7 = wait_or_whine (_3, _2, 0);
    version:7>

 ================== pre trace ptable ================== 
trace fucntion name:wait_or_whine 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662de5e8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf662db3f0 ret>
    def_stmt ret_7 = wait_or_whine (_3, _2, 0);
    version:7>
is Other function wait_or_whine
 
 Start check Pointer Collect  

======================================================================
# .MEM_9 = VDEF <.MEM_8(D)>
ret_7 = wait_or_whine (_3, _2, 0);
ret_7 = wait_or_whine (_3, _2, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:15: warning: use location
this stmt call this function :wait_or_whine
trace fucntion name:wait_or_whine 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_9 = VDEF <.MEM_8(D)>
ret_7 = wait_or_whine (_3, _2, 0);
ret_7 = wait_or_whine (_3, _2, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:15: warning: use location
this stmt call this function :wait_or_whine
trace fucntion name:wait_or_whine 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662de5e8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf662db3f0 ret>
    def_stmt ret_7 = wait_or_whine (_3, _2, 0);
    version:7>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662de5a0
    type <pointer_type 0x7fdf662bb7e0
        type <record_type 0x7fdf662bb738 child_process BLK
            size <integer_cst 0x7fdf662a4978 constant 640>
            unit-size <integer_cst 0x7fdf662a4948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738 fields <field_decl 0x7fdf662bd850 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fdf662c3d80 cmd>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7fdf662a4f78>
 <ssa_name 0x7fdf662de5a0
    type <pointer_type 0x7fdf662bb7e0
        type <record_type 0x7fdf662bb738 child_process BLK
            size <integer_cst 0x7fdf662a4978 constant 640>
            unit-size <integer_cst 0x7fdf662a4948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738 fields <field_decl 0x7fdf662bd850 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fdf662c3d80 cmd>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7fdf662a4f78>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662de5a0
    type <pointer_type 0x7fdf662bb7e0
        type <record_type 0x7fdf662bb738 child_process BLK
            size <integer_cst 0x7fdf662a4978 constant 640>
            unit-size <integer_cst 0x7fdf662a4948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738 fields <field_decl 0x7fdf662bd850 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fdf662c3d80 cmd>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7fdf662a4f78>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_10 = VDEF <.MEM_9>
child_process_clear (cmd_5(D));
child_process_clear (cmd_5(D));
./benchmarks/git/use_after_free_2/git_uaf_2.c:322:5: warning: use location
  322 |     child_process_clear(cmd);
      |     ^
this stmt call this function :child_process_clear
trace fucntion name:child_process_clear 
[40;44m =======trace_function_path child_process_clear  function_call count: 1 level :0========  [0m
 <ssa_name 0x7fdf662de5a0
    type <pointer_type 0x7fdf662bb7e0
        type <record_type 0x7fdf662bb738 child_process BLK
            size <integer_cst 0x7fdf662a4978 constant 640>
            unit-size <integer_cst 0x7fdf662a4948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738 fields <field_decl 0x7fdf662bd850 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fdf662c3d80 cmd>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7fdf662a4f78>
[40;36m ======= node_fun:child_process_clear========= [0m
[40;36m ======= find relate stmt with cmd ========= [0m
[40;36m ======= relate node_fun argument:cmd========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘child_process_clear’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:328:9: warning: use location
  328 |         argv_array_clear(&child->args);
      |         ^
_1 = &child_3(D)->args;
./benchmarks/git/use_after_free_2/git_uaf_2.c:328:9: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cmd========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:329:9: warning: use location
  329 |         argv_array_clear(&child->env_array);
      |         ^
_2 = &child_3(D)->env_array;
./benchmarks/git/use_after_free_2/git_uaf_2.c:329:9: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m

 ================== trace ================== 
trace fucntion free:0 
_3 = cmd_5(D)->pid;
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:15: warning: use location
  321 |     int ret = wait_or_whine(cmd->pid, cmd->argv[0], 0);
      |               ^
ret_7 = wait_or_whine (_3, _2, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:15: warning: use location
this stmt call this function :wait_or_whine
trace fucntion name:wait_or_whine 

 ================== trace ================== 
trace fucntion free:0 
_1 = cmd_5(D)->argv;
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:42: warning: use location
  321 |     int ret = wait_or_whine(cmd->pid, cmd->argv[0], 0);
      |                                          ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662de5a0
    type <pointer_type 0x7fdf662bb7e0
        type <record_type 0x7fdf662bb738 child_process BLK
            size <integer_cst 0x7fdf662a4978 constant 640>
            unit-size <integer_cst 0x7fdf662a4948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738 fields <field_decl 0x7fdf662bd850 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fdf662c3d80 cmd>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7fdf662a4f78>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:finish_command========= [0m
[40;42m =======pre_check_funciton:pp_collect_finished========= [0m
[40;42m =======start_check_funciton:pp_collect_finished========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fdf662dea20
    type <pointer_type 0x7fdf662bb7e0
        type <record_type 0x7fdf662bb738 child_process BLK
            size <integer_cst 0x7fdf662a4978 constant 640>
            unit-size <integer_cst 0x7fdf662a4948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738 fields <field_decl 0x7fdf662bd850 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _12 = &_11->process;
    version:12
    ptr-info 0x7fdf66304048>
 <ssa_name 0x7fdf662dea20
    type <pointer_type 0x7fdf662bb7e0
        type <record_type 0x7fdf662bb738 child_process BLK
            size <integer_cst 0x7fdf662a4978 constant 640>
            unit-size <integer_cst 0x7fdf662a4948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738 fields <field_decl 0x7fdf662bd850 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _12 = &_11->process;
    version:12
    ptr-info 0x7fdf66304048>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662dea20
    type <pointer_type 0x7fdf662bb7e0
        type <record_type 0x7fdf662bb738 child_process BLK
            size <integer_cst 0x7fdf662a4978 constant 640>
            unit-size <integer_cst 0x7fdf662a4948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738 fields <field_decl 0x7fdf662bd850 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _12 = &_11->process;
    version:12
    ptr-info 0x7fdf66304048>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_113 = VDEF <.MEM_111>
code_97 = finish_command (_12);
code_97 = finish_command (_12);
./benchmarks/git/use_after_free_2/git_uaf_2.c:275:24: warning: use location
  275 |                 code = finish_command(&pp->children[i].process);
      |                        ^
this stmt call this function :finish_command
trace fucntion name:finish_command 
[40;44m =======trace_function_path finish_command  function_call count: 2 level :0========  [0m
 <ssa_name 0x7fdf662dea20
    type <pointer_type 0x7fdf662bb7e0
        type <record_type 0x7fdf662bb738 child_process BLK
            size <integer_cst 0x7fdf662a4978 constant 640>
            unit-size <integer_cst 0x7fdf662a4948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738 fields <field_decl 0x7fdf662bd850 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _12 = &_11->process;
    version:12
    ptr-info 0x7fdf66304048>
[40;36m ======= node_fun:finish_command========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘finish_command’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:42: warning: use location
  321 |     int ret = wait_or_whine(cmd->pid, cmd->argv[0], 0);
      |                                          ^
_1 = cmd_5(D)->argv;
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:42: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:15: warning: use location
  321 |     int ret = wait_or_whine(cmd->pid, cmd->argv[0], 0);
      |               ^
_2 = *_1;
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:15: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_clear========= [0m
[40;46m =======add node_fun stack:child_process_clear========= [0m
[40;44m =======trace_function_path child_process_clear  function_call count: 1 level :1========  [0m
 <ssa_name 0x7fdf662dea20
    type <pointer_type 0x7fdf662bb7e0
        type <record_type 0x7fdf662bb738 child_process BLK
            size <integer_cst 0x7fdf662a4978 constant 640>
            unit-size <integer_cst 0x7fdf662a4948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738 fields <field_decl 0x7fdf662bd850 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _12 = &_11->process;
    version:12
    ptr-info 0x7fdf66304048>
[40;36m ======= node_fun:child_process_clear========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘child_process_clear’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:328:9: warning: use location
  328 |         argv_array_clear(&child->args);
      |         ^
_1 = &child_3(D)->args;
./benchmarks/git/use_after_free_2/git_uaf_2.c:328:9: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:329:9: warning: use location
  329 |         argv_array_clear(&child->env_array);
      |         ^
_2 = &child_3(D)->env_array;
./benchmarks/git/use_after_free_2/git_uaf_2.c:329:9: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;46m =======add node_fun stack:wait_or_whine========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_113 = VDEF <.MEM_111>
code_97 = finish_command (_12);
code_97 = finish_command (_12);
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:275:24: warning: use location
  275 |                 code = finish_command(&pp->children[i].process);
      |                        ^
this stmt call this function :finish_command
trace fucntion name:finish_command 
[40;44m =======trace_function_path finish_command  function_call count: 2 level :0========  [0m
 <ssa_name 0x7fdf662dea20
    type <pointer_type 0x7fdf662bb7e0
        type <record_type 0x7fdf662bb738 child_process BLK
            size <integer_cst 0x7fdf662a4978 constant 640>
            unit-size <integer_cst 0x7fdf662a4948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738 fields <field_decl 0x7fdf662bd850 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _12 = &_11->process;
    version:12
    ptr-info 0x7fdf66304048>
[40;36m ======= node_fun:finish_command========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘finish_command’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:42: warning: use location
  321 |     int ret = wait_or_whine(cmd->pid, cmd->argv[0], 0);
      |                                          ^
_1 = cmd_5(D)->argv;
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:42: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:15: warning: use location
  321 |     int ret = wait_or_whine(cmd->pid, cmd->argv[0], 0);
      |               ^
_2 = *_1;
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:15: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_clear========= [0m
[40;46m =======add node_fun stack:child_process_clear========= [0m
[40;44m =======trace_function_path child_process_clear  function_call count: 1 level :1========  [0m
 <ssa_name 0x7fdf662dea20
    type <pointer_type 0x7fdf662bb7e0
        type <record_type 0x7fdf662bb738 child_process BLK
            size <integer_cst 0x7fdf662a4978 constant 640>
            unit-size <integer_cst 0x7fdf662a4948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738 fields <field_decl 0x7fdf662bd850 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _12 = &_11->process;
    version:12
    ptr-info 0x7fdf66304048>
[40;36m ======= node_fun:child_process_clear========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘child_process_clear’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:328:9: warning: use location
  328 |         argv_array_clear(&child->args);
      |         ^
_1 = &child_3(D)->args;
./benchmarks/git/use_after_free_2/git_uaf_2.c:328:9: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:329:9: warning: use location
  329 |         argv_array_clear(&child->env_array);
      |         ^
_2 = &child_3(D)->env_array;
./benchmarks/git/use_after_free_2/git_uaf_2.c:329:9: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;46m =======add node_fun stack:wait_or_whine========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662dea20
    type <pointer_type 0x7fdf662bb7e0
        type <record_type 0x7fdf662bb738 child_process BLK
            size <integer_cst 0x7fdf662a4978 constant 640>
            unit-size <integer_cst 0x7fdf662a4948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738 fields <field_decl 0x7fdf662bd850 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _12 = &_11->process;
    version:12
    ptr-info 0x7fdf66304048>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662e4120
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf662db6c0 code>
    def_stmt code_97 = finish_command (_12);
    version:97>
 <ssa_name 0x7fdf662e4120
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf662db6c0 code>
    def_stmt code_97 = finish_command (_12);
    version:97>

 ================== pre trace ptable ================== 
trace fucntion name:finish_command 
[40;44m =======trace_function_path finish_command  function_call count: 2 level :888========  [0m
 <ssa_name 0x7fdf662e4120
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf662db6c0 code>
    def_stmt code_97 = finish_command (_12);
    version:97>
[40;36m ======= node_fun:finish_command========= [0m
[40;36m ======= find relate stmt with code ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_clear========= [0m
[40;46m =======add node_fun stack:child_process_clear========= [0m
[40;44m =======trace_function_path child_process_clear  function_call count: 1 level :889========  [0m
 <ssa_name 0x7fdf662e4120
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf662db6c0 code>
    def_stmt code_97 = finish_command (_12);
    version:97>
[40;36m ======= node_fun:child_process_clear========= [0m
[40;36m ======= find relate stmt with code ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;46m =======add node_fun stack:wait_or_whine========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662e4120
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf662db6c0 code>
    def_stmt code_97 = finish_command (_12);
    version:97>
is Other function finish_command
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_113 = VDEF <.MEM_111>
code_97 = finish_command (_12);
code_97 = finish_command (_12);
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:275:24: warning: use location
  275 |                 code = finish_command(&pp->children[i].process);
      |                        ^
this stmt call this function :finish_command
trace fucntion name:finish_command 
[40;44m =======trace_function_path finish_command  function_call count: 2 level :0========  [0m
 <ssa_name 0x7fdf662e4120
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf662db6c0 code>
    def_stmt code_97 = finish_command (_12);
    version:97>
[40;36m ======= node_fun:finish_command========= [0m
[40;36m ======= find relate stmt with code ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_clear========= [0m
[40;46m =======add node_fun stack:child_process_clear========= [0m
[40;44m =======trace_function_path child_process_clear  function_call count: 1 level :1========  [0m
 <ssa_name 0x7fdf662e4120
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf662db6c0 code>
    def_stmt code_97 = finish_command (_12);
    version:97>
[40;36m ======= node_fun:child_process_clear========= [0m
[40;36m ======= find relate stmt with code ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;46m =======add node_fun stack:wait_or_whine========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_113 = VDEF <.MEM_111>
code_97 = finish_command (_12);
code_97 = finish_command (_12);
./benchmarks/git/use_after_free_2/git_uaf_2.c:275:24: warning: use location
this stmt call this function :finish_command
trace fucntion name:finish_command 
[40;44m =======trace_function_path finish_command  function_call count: 2 level :0========  [0m
 <ssa_name 0x7fdf662e4120
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf662db6c0 code>
    def_stmt code_97 = finish_command (_12);
    version:97>
[40;36m ======= node_fun:finish_command========= [0m
[40;36m ======= find relate stmt with code ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_clear========= [0m
[40;46m =======add node_fun stack:child_process_clear========= [0m
[40;44m =======trace_function_path child_process_clear  function_call count: 1 level :1========  [0m
 <ssa_name 0x7fdf662e4120
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf662db6c0 code>
    def_stmt code_97 = finish_command (_12);
    version:97>
[40;36m ======= node_fun:child_process_clear========= [0m
[40;36m ======= find relate stmt with code ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;46m =======add node_fun stack:wait_or_whine========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662e4120
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf662db6c0 code>
    def_stmt code_97 = finish_command (_12);
    version:97>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662e3360
    type <pointer_type 0x7fdf662bb7e0
        type <record_type 0x7fdf662bb738 child_process BLK
            size <integer_cst 0x7fdf662a4978 constant 640>
            unit-size <integer_cst 0x7fdf662a4948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738 fields <field_decl 0x7fdf662bd850 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _44 = &_43->process;
    version:44
    ptr-info 0x7fdf663041f8>
 <ssa_name 0x7fdf662e3360
    type <pointer_type 0x7fdf662bb7e0
        type <record_type 0x7fdf662bb738 child_process BLK
            size <integer_cst 0x7fdf662a4978 constant 640>
            unit-size <integer_cst 0x7fdf662a4948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738 fields <field_decl 0x7fdf662bd850 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _44 = &_43->process;
    version:44
    ptr-info 0x7fdf663041f8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662e3360
    type <pointer_type 0x7fdf662bb7e0
        type <record_type 0x7fdf662bb738 child_process BLK
            size <integer_cst 0x7fdf662a4978 constant 640>
            unit-size <integer_cst 0x7fdf662a4948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738 fields <field_decl 0x7fdf662bd850 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _44 = &_43->process;
    version:44
    ptr-info 0x7fdf663041f8>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_118 = VDEF <.MEM_117>
child_process_init (_44);
child_process_init (_44);
./benchmarks/git/use_after_free_2/git_uaf_2.c:289:17: warning: use location
  289 |                 child_process_init(&pp->children[i].process);
      |                 ^
this stmt call this function :child_process_init
trace fucntion name:child_process_init 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_118 = VDEF <.MEM_117>
child_process_init (_44);
child_process_init (_44);
./benchmarks/git/use_after_free_2/git_uaf_2.c:289:17: warning: use location
this stmt call this function :child_process_init
trace fucntion name:child_process_init 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662e3360
    type <pointer_type 0x7fdf662bb7e0
        type <record_type 0x7fdf662bb738 child_process BLK
            size <integer_cst 0x7fdf662a4978 constant 640>
            unit-size <integer_cst 0x7fdf662a4948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738 fields <field_decl 0x7fdf662bd850 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _44 = &_43->process;
    version:44
    ptr-info 0x7fdf663041f8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662e3558
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _51 = &pp_91(D)->buffered_output;
    version:51
    ptr-info 0x7fdf66304258>
 <ssa_name 0x7fdf662e3558
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _51 = &pp_91(D)->buffered_output;
    version:51
    ptr-info 0x7fdf66304258>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662e3558
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _51 = &pp_91(D)->buffered_output;
    version:51
    ptr-info 0x7fdf66304258>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_124 = VDEF <.MEM_118>
strbuf_addbuf (_51, _50);
strbuf_addbuf (_51, _50);
./benchmarks/git/use_after_free_2/git_uaf_2.c:292:25: warning: use location
  292 |                         strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);
      |                         ^
this stmt call this function :strbuf_addbuf
trace fucntion name:strbuf_addbuf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_124 = VDEF <.MEM_118>
strbuf_addbuf (_51, _50);
strbuf_addbuf (_51, _50);
./benchmarks/git/use_after_free_2/git_uaf_2.c:292:25: warning: use location
this stmt call this function :strbuf_addbuf
trace fucntion name:strbuf_addbuf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662e3558
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _51 = &pp_91(D)->buffered_output;
    version:51
    ptr-info 0x7fdf66304258>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662e3510
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _50 = &_49->err;
    version:50
    ptr-info 0x7fdf66304240>
 <ssa_name 0x7fdf662e3510
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _50 = &_49->err;
    version:50
    ptr-info 0x7fdf66304240>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662e3510
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _50 = &_49->err;
    version:50
    ptr-info 0x7fdf66304240>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_124 = VDEF <.MEM_118>
strbuf_addbuf (_51, _50);
strbuf_addbuf (_51, _50);
./benchmarks/git/use_after_free_2/git_uaf_2.c:292:25: warning: use location
this stmt call this function :strbuf_addbuf
trace fucntion name:strbuf_addbuf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_124 = VDEF <.MEM_118>
strbuf_addbuf (_51, _50);
strbuf_addbuf (_51, _50);
./benchmarks/git/use_after_free_2/git_uaf_2.c:292:25: warning: use location
this stmt call this function :strbuf_addbuf
trace fucntion name:strbuf_addbuf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662e3510
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _50 = &_49->err;
    version:50
    ptr-info 0x7fdf66304240>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662e36c0
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _56 = &_55->err;
    version:56
    ptr-info 0x7fdf663042a0>
 <ssa_name 0x7fdf662e36c0
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _56 = &_55->err;
    version:56
    ptr-info 0x7fdf663042a0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662e36c0
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _56 = &_55->err;
    version:56
    ptr-info 0x7fdf663042a0>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_125 = VDEF <.MEM_124>
strbuf_reset (_56);
strbuf_reset (_56);
./benchmarks/git/use_after_free_2/git_uaf_2.c:293:25: warning: use location
  293 |                         strbuf_reset(&pp->children[i].err);
      |                         ^
this stmt call this function :strbuf_reset
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_125 = VDEF <.MEM_124>
strbuf_reset (_56);
strbuf_reset (_56);
./benchmarks/git/use_after_free_2/git_uaf_2.c:293:25: warning: use location
this stmt call this function :strbuf_reset
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662e36c0
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _56 = &_55->err;
    version:56
    ptr-info 0x7fdf663042a0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662e3870
    type <pointer_type 0x7fdf662b4000
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662b6690>>
   
    def_stmt _62 = _61->err.buf;
    version:62
    ptr-info 0x7fdf66304300>
 <ssa_name 0x7fdf662e3870
    type <pointer_type 0x7fdf662b4000
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662b6690>>
   
    def_stmt _62 = _61->err.buf;
    version:62
    ptr-info 0x7fdf66304300>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662e3870
    type <pointer_type 0x7fdf662b4000
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662b6690>>
   
    def_stmt _62 = _61->err.buf;
    version:62
    ptr-info 0x7fdf66304300>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_119 = VDEF <.MEM_118>
fputs (_62, _57);
fputs (_62, _57);
./benchmarks/git/use_after_free_2/git_uaf_2.c:295:25: warning: use location
  295 |                         fputs(pp->children[i].err.buf, stderr);
      |                         ^
this stmt call this function :fputs
trace fucntion name:fputs 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_119 = VDEF <.MEM_118>
fputs (_62, _57);
fputs (_62, _57);
./benchmarks/git/use_after_free_2/git_uaf_2.c:295:25: warning: use location
this stmt call this function :fputs
trace fucntion name:fputs 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662e3870
    type <pointer_type 0x7fdf662b4000
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662b6690>>
   
    def_stmt _62 = _61->err.buf;
    version:62
    ptr-info 0x7fdf66304300>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662e3708
    type <pointer_type 0x7fdf662b63f0
        type <record_type 0x7fdf662b6348 FILE BLK
            size <integer_cst 0x7fdf662a4840 constant 1728>
            unit-size <integer_cst 0x7fdf662a4960 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b62a0 fields <field_decl 0x7fdf662b8b48 _flags> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662b63f0>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fdf662bee70>>
   
    def_stmt _57 = stderr;
    version:57
    ptr-info 0x7fdf663042b8>
 <ssa_name 0x7fdf662e3708
    type <pointer_type 0x7fdf662b63f0
        type <record_type 0x7fdf662b6348 FILE BLK
            size <integer_cst 0x7fdf662a4840 constant 1728>
            unit-size <integer_cst 0x7fdf662a4960 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b62a0 fields <field_decl 0x7fdf662b8b48 _flags> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662b63f0>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fdf662bee70>>
   
    def_stmt _57 = stderr;
    version:57
    ptr-info 0x7fdf663042b8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662e3708
    type <pointer_type 0x7fdf662b63f0
        type <record_type 0x7fdf662b6348 FILE BLK
            size <integer_cst 0x7fdf662a4840 constant 1728>
            unit-size <integer_cst 0x7fdf662a4960 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b62a0 fields <field_decl 0x7fdf662b8b48 _flags> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662b63f0>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fdf662bee70>>
   
    def_stmt _57 = stderr;
    version:57
    ptr-info 0x7fdf663042b8>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_119 = VDEF <.MEM_118>
fputs (_62, _57);
fputs (_62, _57);
./benchmarks/git/use_after_free_2/git_uaf_2.c:295:25: warning: use location
this stmt call this function :fputs
trace fucntion name:fputs 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_119 = VDEF <.MEM_118>
fputs (_62, _57);
fputs (_62, _57);
./benchmarks/git/use_after_free_2/git_uaf_2.c:295:25: warning: use location
this stmt call this function :fputs
trace fucntion name:fputs 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662e3708
    type <pointer_type 0x7fdf662b63f0
        type <record_type 0x7fdf662b6348 FILE BLK
            size <integer_cst 0x7fdf662a4840 constant 1728>
            unit-size <integer_cst 0x7fdf662a4960 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b62a0 fields <field_decl 0x7fdf662b8b48 _flags> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662b63f0>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fdf662bee70>>
   
    def_stmt _57 = stderr;
    version:57
    ptr-info 0x7fdf663042b8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662e39d8
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _67 = &_66->err;
    version:67
    ptr-info 0x7fdf66304348>
 <ssa_name 0x7fdf662e39d8
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _67 = &_66->err;
    version:67
    ptr-info 0x7fdf66304348>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662e39d8
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _67 = &_66->err;
    version:67
    ptr-info 0x7fdf66304348>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_120 = VDEF <.MEM_119>
strbuf_reset (_67);
strbuf_reset (_67);
./benchmarks/git/use_after_free_2/git_uaf_2.c:296:25: warning: use location
  296 |                         strbuf_reset(&pp->children[i].err);
      |                         ^
this stmt call this function :strbuf_reset
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_120 = VDEF <.MEM_119>
strbuf_reset (_67);
strbuf_reset (_67);
./benchmarks/git/use_after_free_2/git_uaf_2.c:296:25: warning: use location
this stmt call this function :strbuf_reset
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662e39d8
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _67 = &_66->err;
    version:67
    ptr-info 0x7fdf66304348>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662e3a68
    type <pointer_type 0x7fdf662b4000
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662b6690>>
   
    def_stmt _69 = pp_91(D)->buffered_output.buf;
    version:69
    ptr-info 0x7fdf66304378>
 <ssa_name 0x7fdf662e3a68
    type <pointer_type 0x7fdf662b4000
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662b6690>>
   
    def_stmt _69 = pp_91(D)->buffered_output.buf;
    version:69
    ptr-info 0x7fdf66304378>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662e3a68
    type <pointer_type 0x7fdf662b4000
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662b6690>>
   
    def_stmt _69 = pp_91(D)->buffered_output.buf;
    version:69
    ptr-info 0x7fdf66304378>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_121 = VDEF <.MEM_120>
fputs (_69, _68);
fputs (_69, _68);
./benchmarks/git/use_after_free_2/git_uaf_2.c:299:25: warning: use location
  299 |                         fputs(pp->buffered_output.buf, stderr);
      |                         ^
this stmt call this function :fputs
trace fucntion name:fputs 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_121 = VDEF <.MEM_120>
fputs (_69, _68);
fputs (_69, _68);
./benchmarks/git/use_after_free_2/git_uaf_2.c:299:25: warning: use location
this stmt call this function :fputs
trace fucntion name:fputs 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662e3a68
    type <pointer_type 0x7fdf662b4000
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662b6690>>
   
    def_stmt _69 = pp_91(D)->buffered_output.buf;
    version:69
    ptr-info 0x7fdf66304378>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662e3a20
    type <pointer_type 0x7fdf662b63f0
        type <record_type 0x7fdf662b6348 FILE BLK
            size <integer_cst 0x7fdf662a4840 constant 1728>
            unit-size <integer_cst 0x7fdf662a4960 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b62a0 fields <field_decl 0x7fdf662b8b48 _flags> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662b63f0>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fdf662bee70>>
   
    def_stmt _68 = stderr;
    version:68
    ptr-info 0x7fdf66304360>
 <ssa_name 0x7fdf662e3a20
    type <pointer_type 0x7fdf662b63f0
        type <record_type 0x7fdf662b6348 FILE BLK
            size <integer_cst 0x7fdf662a4840 constant 1728>
            unit-size <integer_cst 0x7fdf662a4960 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b62a0 fields <field_decl 0x7fdf662b8b48 _flags> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662b63f0>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fdf662bee70>>
   
    def_stmt _68 = stderr;
    version:68
    ptr-info 0x7fdf66304360>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662e3a20
    type <pointer_type 0x7fdf662b63f0
        type <record_type 0x7fdf662b6348 FILE BLK
            size <integer_cst 0x7fdf662a4840 constant 1728>
            unit-size <integer_cst 0x7fdf662a4960 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b62a0 fields <field_decl 0x7fdf662b8b48 _flags> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662b63f0>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fdf662bee70>>
   
    def_stmt _68 = stderr;
    version:68
    ptr-info 0x7fdf66304360>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_121 = VDEF <.MEM_120>
fputs (_69, _68);
fputs (_69, _68);
./benchmarks/git/use_after_free_2/git_uaf_2.c:299:25: warning: use location
this stmt call this function :fputs
trace fucntion name:fputs 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_121 = VDEF <.MEM_120>
fputs (_69, _68);
fputs (_69, _68);
./benchmarks/git/use_after_free_2/git_uaf_2.c:299:25: warning: use location
this stmt call this function :fputs
trace fucntion name:fputs 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662e3a20
    type <pointer_type 0x7fdf662b63f0
        type <record_type 0x7fdf662b6348 FILE BLK
            size <integer_cst 0x7fdf662a4840 constant 1728>
            unit-size <integer_cst 0x7fdf662a4960 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b62a0 fields <field_decl 0x7fdf662b8b48 _flags> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662b63f0>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fdf662bee70>>
   
    def_stmt _68 = stderr;
    version:68
    ptr-info 0x7fdf66304360>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662e3ab0
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _70 = &pp_91(D)->buffered_output;
    version:70
    ptr-info 0x7fdf66304390>
 <ssa_name 0x7fdf662e3ab0
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _70 = &pp_91(D)->buffered_output;
    version:70
    ptr-info 0x7fdf66304390>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662e3ab0
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _70 = &pp_91(D)->buffered_output;
    version:70
    ptr-info 0x7fdf66304390>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_122 = VDEF <.MEM_121>
strbuf_reset (_70);
strbuf_reset (_70);
./benchmarks/git/use_after_free_2/git_uaf_2.c:300:25: warning: use location
  300 |                         strbuf_reset(&pp->buffered_output);
      |                         ^
this stmt call this function :strbuf_reset
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_122 = VDEF <.MEM_121>
strbuf_reset (_70);
strbuf_reset (_70);
./benchmarks/git/use_after_free_2/git_uaf_2.c:300:25: warning: use location
this stmt call this function :strbuf_reset
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662e3ab0
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _70 = &pp_91(D)->buffered_output;
    version:70
    ptr-info 0x7fdf66304390>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:pp_collect_finished========= [0m
[40;42m =======pre add _ fucntion:pp_output========= [0m
[40;33m =======POP node_fun stack:pp_output========= [0m
[40;42m =======pre add _ fucntion:pp_buffer_stderr========= [0m
[40;33m =======POP node_fun stack:pp_buffer_stderr========= [0m
[40;42m =======pre add _ fucntion:pp_start_one========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path pp_start_one  function_call count: 5 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;33m =======POP node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;33m =======POP node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:start_command========= [0m
[40;33m =======POP node_fun stack:start_command========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:pp_start_one========= [0m
[40;42m =======start_check_funciton:pp_start_one========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fdf662ed480
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _30 = &pp_102(D)->buffered_output;
    version:30
    ptr-info 0x7fdf663045e8>
 <ssa_name 0x7fdf662ed480
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _30 = &pp_102(D)->buffered_output;
    version:30
    ptr-info 0x7fdf663045e8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662ed480
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _30 = &pp_102(D)->buffered_output;
    version:30
    ptr-info 0x7fdf663045e8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_130 = VDEF <.MEM_118>
strbuf_addbuf (_30, _29);
strbuf_addbuf (_30, _29);
./benchmarks/git/use_after_free_2/git_uaf_2.c:227:17: warning: use location
  227 |                 strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);
      |                 ^
this stmt call this function :strbuf_addbuf
trace fucntion name:strbuf_addbuf 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_130 = VDEF <.MEM_118>
strbuf_addbuf (_30, _29);
strbuf_addbuf (_30, _29);
./benchmarks/git/use_after_free_2/git_uaf_2.c:227:17: warning: use location
this stmt call this function :strbuf_addbuf
trace fucntion name:strbuf_addbuf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662ed480
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _30 = &pp_102(D)->buffered_output;
    version:30
    ptr-info 0x7fdf663045e8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662ed438
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _29 = &_28->err;
    version:29
    ptr-info 0x7fdf663045d0>
 <ssa_name 0x7fdf662ed438
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _29 = &_28->err;
    version:29
    ptr-info 0x7fdf663045d0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662ed438
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _29 = &_28->err;
    version:29
    ptr-info 0x7fdf663045d0>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_130 = VDEF <.MEM_118>
strbuf_addbuf (_30, _29);
strbuf_addbuf (_30, _29);
./benchmarks/git/use_after_free_2/git_uaf_2.c:227:17: warning: use location
this stmt call this function :strbuf_addbuf
trace fucntion name:strbuf_addbuf 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_130 = VDEF <.MEM_118>
strbuf_addbuf (_30, _29);
strbuf_addbuf (_30, _29);
./benchmarks/git/use_after_free_2/git_uaf_2.c:227:17: warning: use location
this stmt call this function :strbuf_addbuf
trace fucntion name:strbuf_addbuf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662ed438
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _29 = &_28->err;
    version:29
    ptr-info 0x7fdf663045d0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662ed5e8
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _35 = &_34->err;
    version:35
    ptr-info 0x7fdf66304630>
 <ssa_name 0x7fdf662ed5e8
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _35 = &_34->err;
    version:35
    ptr-info 0x7fdf66304630>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662ed5e8
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _35 = &_34->err;
    version:35
    ptr-info 0x7fdf66304630>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_131 = VDEF <.MEM_130>
strbuf_reset (_35);
strbuf_reset (_35);
./benchmarks/git/use_after_free_2/git_uaf_2.c:228:17: warning: use location
  228 |                 strbuf_reset(&pp->children[i].err);
      |                 ^
this stmt call this function :strbuf_reset
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_131 = VDEF <.MEM_130>
strbuf_reset (_35);
strbuf_reset (_35);
./benchmarks/git/use_after_free_2/git_uaf_2.c:228:17: warning: use location
this stmt call this function :strbuf_reset
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662ed5e8
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _35 = &_34->err;
    version:35
    ptr-info 0x7fdf66304630>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662edab0
    type <pointer_type 0x7fdf662bb7e0
        type <record_type 0x7fdf662bb738 child_process BLK
            size <integer_cst 0x7fdf662a4978 constant 640>
            unit-size <integer_cst 0x7fdf662a4948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738 fields <field_decl 0x7fdf662bd850 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _52 = &_51->process;
    version:52
    ptr-info 0x7fdf66304708>
 <ssa_name 0x7fdf662edab0
    type <pointer_type 0x7fdf662bb7e0
        type <record_type 0x7fdf662bb738 child_process BLK
            size <integer_cst 0x7fdf662a4978 constant 640>
            unit-size <integer_cst 0x7fdf662a4948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738 fields <field_decl 0x7fdf662bd850 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _52 = &_51->process;
    version:52
    ptr-info 0x7fdf66304708>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662edab0
    type <pointer_type 0x7fdf662bb7e0
        type <record_type 0x7fdf662bb738 child_process BLK
            size <integer_cst 0x7fdf662a4978 constant 640>
            unit-size <integer_cst 0x7fdf662a4948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738 fields <field_decl 0x7fdf662bd850 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _52 = &_51->process;
    version:52
    ptr-info 0x7fdf66304708>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_122 = VDEF <.MEM_121>
_53 = start_command (_52);
_53 = start_command (_52);
./benchmarks/git/use_after_free_2/git_uaf_2.c:235:13: warning: use location
  235 |         if (start_command(&pp->children[i].process)) {
      |             ^
this stmt call this function :start_command
trace fucntion name:start_command 

 ================== trace ================== 
trace fucntion free:0 
if (_53 != 0)
./benchmarks/git/use_after_free_2/git_uaf_2.c:235:12: warning: use location
  235 |         if (start_command(&pp->children[i].process)) {
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662edab0
    type <pointer_type 0x7fdf662bb7e0
        type <record_type 0x7fdf662bb738 child_process BLK
            size <integer_cst 0x7fdf662a4978 constant 640>
            unit-size <integer_cst 0x7fdf662a4948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738 fields <field_decl 0x7fdf662bd850 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _52 = &_51->process;
    version:52
    ptr-info 0x7fdf66304708>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662edaf8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _53 = start_command (_52);
    version:53>
 <ssa_name 0x7fdf662edaf8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _53 = start_command (_52);
    version:53>

 ================== pre trace ptable ================== 
trace fucntion name:start_command 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662edaf8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _53 = start_command (_52);
    version:53>
is Other function start_command
 
 Start check Pointer Collect  

======================================================================
# .MEM_122 = VDEF <.MEM_121>
_53 = start_command (_52);
_53 = start_command (_52);
./benchmarks/git/use_after_free_2/git_uaf_2.c:235:13: warning: use location
  235 |         if (start_command(&pp->children[i].process)) {
      |             ^
this stmt call this function :start_command
trace fucntion name:start_command 

 ================== trace ================== 
trace fucntion free:0 
if (_53 != 0)
./benchmarks/git/use_after_free_2/git_uaf_2.c:235:12: warning: use location
  235 |         if (start_command(&pp->children[i].process)) {
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662edaf8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _53 = start_command (_52);
    version:53>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662ee1b0
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _76 = &pp_102(D)->buffered_output;
    version:76
    ptr-info 0x7fdf66304870>
 <ssa_name 0x7fdf662ee1b0
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _76 = &pp_102(D)->buffered_output;
    version:76
    ptr-info 0x7fdf66304870>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662ee1b0
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _76 = &pp_102(D)->buffered_output;
    version:76
    ptr-info 0x7fdf66304870>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_127 = VDEF <.MEM_126>
strbuf_addbuf (_76, _75);
strbuf_addbuf (_76, _75);
./benchmarks/git/use_after_free_2/git_uaf_2.c:240:17: warning: use location
  240 |                 strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);
      |                 ^
this stmt call this function :strbuf_addbuf
trace fucntion name:strbuf_addbuf 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_127 = VDEF <.MEM_126>
strbuf_addbuf (_76, _75);
strbuf_addbuf (_76, _75);
./benchmarks/git/use_after_free_2/git_uaf_2.c:240:17: warning: use location
this stmt call this function :strbuf_addbuf
trace fucntion name:strbuf_addbuf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662ee1b0
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _76 = &pp_102(D)->buffered_output;
    version:76
    ptr-info 0x7fdf66304870>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662ee168
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _75 = &_74->err;
    version:75
    ptr-info 0x7fdf66304858>
 <ssa_name 0x7fdf662ee168
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _75 = &_74->err;
    version:75
    ptr-info 0x7fdf66304858>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662ee168
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _75 = &_74->err;
    version:75
    ptr-info 0x7fdf66304858>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_127 = VDEF <.MEM_126>
strbuf_addbuf (_76, _75);
strbuf_addbuf (_76, _75);
./benchmarks/git/use_after_free_2/git_uaf_2.c:240:17: warning: use location
this stmt call this function :strbuf_addbuf
trace fucntion name:strbuf_addbuf 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_127 = VDEF <.MEM_126>
strbuf_addbuf (_76, _75);
strbuf_addbuf (_76, _75);
./benchmarks/git/use_after_free_2/git_uaf_2.c:240:17: warning: use location
this stmt call this function :strbuf_addbuf
trace fucntion name:strbuf_addbuf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662ee168
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _75 = &_74->err;
    version:75
    ptr-info 0x7fdf66304858>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662ee318
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _81 = &_80->err;
    version:81
    ptr-info 0x7fdf663048b8>
 <ssa_name 0x7fdf662ee318
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _81 = &_80->err;
    version:81
    ptr-info 0x7fdf663048b8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662ee318
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _81 = &_80->err;
    version:81
    ptr-info 0x7fdf663048b8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_128 = VDEF <.MEM_127>
strbuf_reset (_81);
strbuf_reset (_81);
./benchmarks/git/use_after_free_2/git_uaf_2.c:241:17: warning: use location
  241 |                 strbuf_reset(&pp->children[i].err);
      |                 ^
this stmt call this function :strbuf_reset
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_128 = VDEF <.MEM_127>
strbuf_reset (_81);
strbuf_reset (_81);
./benchmarks/git/use_after_free_2/git_uaf_2.c:241:17: warning: use location
this stmt call this function :strbuf_reset
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662ee318
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _81 = &_80->err;
    version:81
    ptr-info 0x7fdf663048b8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:pp_start_one========= [0m
[40;42m =======pre add _ fucntion:pp_init========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path pp_init  function_call count: 7 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;33m =======POP node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;33m =======POP node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;33m =======POP node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;33m =======POP node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;33m =======POP node_fun stack:online_cpus========= [0m
[40;42m =======pre_check_funciton:pp_init========= [0m
[40;42m =======start_check_funciton:pp_init========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fdf662f86c0
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <parm_decl 0x7fdf662f6000 n>
    def_stmt n_33 = online_cpus ();
    version:33>
 <ssa_name 0x7fdf662f86c0
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <parm_decl 0x7fdf662f6000 n>
    def_stmt n_33 = online_cpus ();
    version:33>

 ================== pre trace ptable ================== 
trace fucntion name:online_cpus 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662f86c0
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <parm_decl 0x7fdf662f6000 n>
    def_stmt n_33 = online_cpus ();
    version:33>
is Other function online_cpus
 
 Start check Pointer Collect  

======================================================================
n_24 = PHI <n_30(D)(2), n_33(3)>
lto1: warning: use location
this stmt have mutiple branch ---online_cpus-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (n_24 > i_25)
./benchmarks/git/use_after_free_2/git_uaf_2.c:195:23: warning: use location
  195 |         for (i = 0; i < n; i++) {
      |                       ^
_3 = (long unsigned int) n_24;
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:19: warning: use location
  192 |         pp->pfd = xcalloc(n, sizeof(*pp->pfd));
      |                   ^
_4 = calloc (_3, 8);
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:19: warning: use location
this stmt call this function :calloc
pp_34(D)->pfd = _4;
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:17: warning: use location
  192 |         pp->pfd = xcalloc(n, sizeof(*pp->pfd));
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = pp_34(D)->pfd;
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:19: warning: use location
  199 |                 pp->pfd[i].fd = -1;
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23->fd = -1;
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:31: warning: use location
  199 |                 pp->pfd[i].fd = -1;
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = pp_34(D)->pfd;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:19: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = _16 + _18;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:24: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19->events = 17;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:35: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = pp_34(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:39: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = _11 + _13;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:49: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = &_14->process;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
child_process_init (_15);
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
this stmt call this function :child_process_init
trace fucntion name:child_process_init 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = pp_34(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:32: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = _6 + _8;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:42: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = &_9->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strbuf_init (_10, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
this stmt call this function :strbuf_init
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 
_5 = &pp_34(D)->buffered_output;
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: use location
  193 |         strbuf_init(&pp->buffered_output, 0);
      |         ^
strbuf_init (_5, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: use location
this stmt call this function :strbuf_init
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 
pp_34(D)->children = _2;
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:22: warning: use location
  191 |         pp->children = xcalloc(n, sizeof(*pp->children));
      |                      ^
pp_34(D)->children = _2;
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:22: warning: use location
pp_34(D)->shutdown = 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:190:22: warning: use location
  190 |         pp->shutdown = 0;
      |                      ^
pp_34(D)->output_owner = 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:189:26: warning: use location
  189 |         pp->output_owner = 0;
      |                          ^
pp_34(D)->nr_processes = 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:188:26: warning: use location
  188 |         pp->nr_processes = 0;
      |                          ^
pp_34(D)->task_finished = _27;
./benchmarks/git/use_after_free_2/git_uaf_2.c:186:27: warning: use location
  186 |         pp->task_finished = task_finished ? task_finished : default_task_finished;
      |                           ^
pp_34(D)->task_finished = _27;
./benchmarks/git/use_after_free_2/git_uaf_2.c:186:27: warning: use location
pp_34(D)->start_failure = _26;
./benchmarks/git/use_after_free_2/git_uaf_2.c:185:27: warning: use location
  185 |         pp->start_failure = start_failure ? start_failure : default_start_failure;
      |                           ^
pp_34(D)->start_failure = _26;
./benchmarks/git/use_after_free_2/git_uaf_2.c:185:27: warning: use location
pp_34(D)->get_next_task = get_next_task_39(D);
./benchmarks/git/use_after_free_2/git_uaf_2.c:183:27: warning: use location
  183 |         pp->get_next_task = get_next_task;
      |                           ^
pp_34(D)->get_next_task = get_next_task_39(D);
./benchmarks/git/use_after_free_2/git_uaf_2.c:183:27: warning: use location
if (get_next_task_39(D) == 0B)
./benchmarks/git/use_after_free_2/git_uaf_2.c:181:12: warning: use location
  181 |         if (!get_next_task)
      |            ^
pp_34(D)->data = data_37(D);
./benchmarks/git/use_after_free_2/git_uaf_2.c:180:18: warning: use location
  180 |         pp->data = data;
      |                  ^
pp_34(D)->data = data_37(D);
./benchmarks/git/use_after_free_2/git_uaf_2.c:180:18: warning: use location
pp_34(D)->max_processes = n_24;
./benchmarks/git/use_after_free_2/git_uaf_2.c:176:27: warning: use location
  176 |         pp->max_processes = n;
      |                           ^
_1 = (long unsigned int) n_24;
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:24: warning: use location
  191 |         pp->children = xcalloc(n, sizeof(*pp->children));
      |                        ^
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
./benchmarks/git/use_after_free_2/git_uaf_2.c:178:9: warning: use location
  178 |         trace_printf("run_processes_parallel: preparing to run up to %d tasks", n);
      |         ^
this stmt call this function :trace_printf
trace fucntion name:trace_printf 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_62 = VDEF <.MEM_61(D)>
n_33 = online_cpus ();
n_33 = online_cpus ();
./benchmarks/git/use_after_free_2/git_uaf_2.c:174:21: warning: use location
  174 |                 n = online_cpus();
      |                     ^
this stmt call this function :online_cpus
trace fucntion name:online_cpus 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662f86c0
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <parm_decl 0x7fdf662f6000 n>
    def_stmt n_33 = online_cpus ();
    version:33>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <string_cst 0x7fdf662f3280
    type <array_type 0x7fdf662be3f0
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        BLK
        size <integer_cst 0x7fdf662a4c00 constant 448>
        unit-size <integer_cst 0x7fdf662a4c48 constant 56>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7fdf662be348 type <integer_type 0x7fdf667aa000 sizetype>
            DI
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa738 precision:64 min <integer_cst 0x7fdf66795be8 0> max <integer_cst 0x7fdf662a4c30 55>>
        pointer_to_this <pointer_type 0x7fdf662be498>>
    readonly constant static "run_processes_parallel: preparing to run up to %d tasks\000">

dot graph START

======================================================================
 <ssa_name 0x7fdf662f8558
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <parm_decl 0x7fdf662f6000 n>
    def_stmt n_24 = PHI <n_30(D)(2), n_33(3)>
    version:24>
 <ssa_name 0x7fdf662f8558
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <parm_decl 0x7fdf662f6000 n>
    def_stmt n_24 = PHI <n_30(D)(2), n_33(3)>
    version:24>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662f8558
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <parm_decl 0x7fdf662f6000 n>
    def_stmt n_24 = PHI <n_30(D)(2), n_33(3)>
    version:24>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (n_24 > i_25)
./benchmarks/git/use_after_free_2/git_uaf_2.c:195:23: warning: use location
  195 |         for (i = 0; i < n; i++) {
      |                       ^
_3 = (long unsigned int) n_24;
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:19: warning: use location
  192 |         pp->pfd = xcalloc(n, sizeof(*pp->pfd));
      |                   ^
_4 = calloc (_3, 8);
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:19: warning: use location
this stmt call this function :calloc
pp_34(D)->pfd = _4;
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:17: warning: use location
  192 |         pp->pfd = xcalloc(n, sizeof(*pp->pfd));
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = pp_34(D)->pfd;
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:19: warning: use location
  199 |                 pp->pfd[i].fd = -1;
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23->fd = -1;
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:31: warning: use location
  199 |                 pp->pfd[i].fd = -1;
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = pp_34(D)->pfd;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:19: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = _16 + _18;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:24: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19->events = 17;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:35: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = pp_34(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:39: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = _11 + _13;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:49: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = &_14->process;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
child_process_init (_15);
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
this stmt call this function :child_process_init
trace fucntion name:child_process_init 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = pp_34(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:32: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = _6 + _8;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:42: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = &_9->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strbuf_init (_10, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
this stmt call this function :strbuf_init
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 
_5 = &pp_34(D)->buffered_output;
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: use location
  193 |         strbuf_init(&pp->buffered_output, 0);
      |         ^
strbuf_init (_5, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: use location
this stmt call this function :strbuf_init
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 
pp_34(D)->children = _2;
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:22: warning: use location
  191 |         pp->children = xcalloc(n, sizeof(*pp->children));
      |                      ^
pp_34(D)->children = _2;
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:22: warning: use location
pp_34(D)->shutdown = 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:190:22: warning: use location
  190 |         pp->shutdown = 0;
      |                      ^
pp_34(D)->output_owner = 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:189:26: warning: use location
  189 |         pp->output_owner = 0;
      |                          ^
pp_34(D)->nr_processes = 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:188:26: warning: use location
  188 |         pp->nr_processes = 0;
      |                          ^
pp_34(D)->task_finished = _27;
./benchmarks/git/use_after_free_2/git_uaf_2.c:186:27: warning: use location
  186 |         pp->task_finished = task_finished ? task_finished : default_task_finished;
      |                           ^
pp_34(D)->task_finished = _27;
./benchmarks/git/use_after_free_2/git_uaf_2.c:186:27: warning: use location
pp_34(D)->start_failure = _26;
./benchmarks/git/use_after_free_2/git_uaf_2.c:185:27: warning: use location
  185 |         pp->start_failure = start_failure ? start_failure : default_start_failure;
      |                           ^
pp_34(D)->start_failure = _26;
./benchmarks/git/use_after_free_2/git_uaf_2.c:185:27: warning: use location
pp_34(D)->get_next_task = get_next_task_39(D);
./benchmarks/git/use_after_free_2/git_uaf_2.c:183:27: warning: use location
  183 |         pp->get_next_task = get_next_task;
      |                           ^
pp_34(D)->get_next_task = get_next_task_39(D);
./benchmarks/git/use_after_free_2/git_uaf_2.c:183:27: warning: use location
if (get_next_task_39(D) == 0B)
./benchmarks/git/use_after_free_2/git_uaf_2.c:181:12: warning: use location
  181 |         if (!get_next_task)
      |            ^
pp_34(D)->data = data_37(D);
./benchmarks/git/use_after_free_2/git_uaf_2.c:180:18: warning: use location
  180 |         pp->data = data;
      |                  ^
pp_34(D)->data = data_37(D);
./benchmarks/git/use_after_free_2/git_uaf_2.c:180:18: warning: use location
pp_34(D)->max_processes = n_24;
./benchmarks/git/use_after_free_2/git_uaf_2.c:176:27: warning: use location
  176 |         pp->max_processes = n;
      |                           ^
pp_34(D)->max_processes = n_24;
./benchmarks/git/use_after_free_2/git_uaf_2.c:176:27: warning: use location
_1 = (long unsigned int) n_24;
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:24: warning: use location
  191 |         pp->children = xcalloc(n, sizeof(*pp->children));
      |                        ^
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
./benchmarks/git/use_after_free_2/git_uaf_2.c:178:9: warning: use location
  178 |         trace_printf("run_processes_parallel: preparing to run up to %d tasks", n);
      |         ^
this stmt call this function :trace_printf
trace fucntion name:trace_printf 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
./benchmarks/git/use_after_free_2/git_uaf_2.c:178:9: warning: use location
this stmt call this function :trace_printf
trace fucntion name:trace_printf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662f8558
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <parm_decl 0x7fdf662f6000 n>
    def_stmt n_24 = PHI <n_30(D)(2), n_33(3)>
    version:24>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662eeee8
    type <pointer_type 0x7fdf667b1000
        type <void_type 0x7fdf667aaf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fdf667b1000>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fdf662ad498>>
   
    def_stmt _2 = calloc (_1, 120);
    version:2
    ptr-info 0x7fdf66304978>
 <ssa_name 0x7fdf662eeee8
    type <pointer_type 0x7fdf667b1000
        type <void_type 0x7fdf667aaf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fdf667b1000>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fdf662ad498>>
   
    def_stmt _2 = calloc (_1, 120);
    version:2
    ptr-info 0x7fdf66304978>

 ================== pre trace ptable ================== 
trace fucntion name:calloc 

 ================== pre trace ptable finish================== 
is Reserved word function :calloc
 
 Start check Pointer Collect  

======================================================================
# .MEM_72 = VDEF <.MEM_71>
_2 = calloc (_1, 120);
_2 = calloc (_1, 120);
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:24: warning: use location
  191 |         pp->children = xcalloc(n, sizeof(*pp->children));
      |                        ^
this stmt call this function :calloc
pp_34(D)->children = _2;
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:22: warning: use location
  191 |         pp->children = xcalloc(n, sizeof(*pp->children));
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = pp_34(D)->pfd;
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:19: warning: use location
  199 |                 pp->pfd[i].fd = -1;
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23->fd = -1;
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:31: warning: use location
  199 |                 pp->pfd[i].fd = -1;
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = pp_34(D)->pfd;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:19: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = _16 + _18;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:24: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19->events = 17;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:35: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = pp_34(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:39: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = _11 + _13;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:49: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = &_14->process;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
child_process_init (_15);
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
this stmt call this function :child_process_init
trace fucntion name:child_process_init 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = pp_34(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:32: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = _6 + _8;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:42: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = &_9->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strbuf_init (_10, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
this stmt call this function :strbuf_init
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 
_5 = &pp_34(D)->buffered_output;
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: use location
  193 |         strbuf_init(&pp->buffered_output, 0);
      |         ^
strbuf_init (_5, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: use location
this stmt call this function :strbuf_init
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 
pp_34(D)->pfd = _4;
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:17: warning: use location
  192 |         pp->pfd = xcalloc(n, sizeof(*pp->pfd));
      |                 ^
pp_34(D)->pfd = _4;
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:17: warning: use location
pp_34(D)->shutdown = 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:190:22: warning: use location
  190 |         pp->shutdown = 0;
      |                      ^
pp_34(D)->output_owner = 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:189:26: warning: use location
  189 |         pp->output_owner = 0;
      |                          ^
pp_34(D)->nr_processes = 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:188:26: warning: use location
  188 |         pp->nr_processes = 0;
      |                          ^
pp_34(D)->task_finished = _27;
./benchmarks/git/use_after_free_2/git_uaf_2.c:186:27: warning: use location
  186 |         pp->task_finished = task_finished ? task_finished : default_task_finished;
      |                           ^
pp_34(D)->task_finished = _27;
./benchmarks/git/use_after_free_2/git_uaf_2.c:186:27: warning: use location
pp_34(D)->start_failure = _26;
./benchmarks/git/use_after_free_2/git_uaf_2.c:185:27: warning: use location
  185 |         pp->start_failure = start_failure ? start_failure : default_start_failure;
      |                           ^
pp_34(D)->start_failure = _26;
./benchmarks/git/use_after_free_2/git_uaf_2.c:185:27: warning: use location
pp_34(D)->get_next_task = get_next_task_39(D);
./benchmarks/git/use_after_free_2/git_uaf_2.c:183:27: warning: use location
  183 |         pp->get_next_task = get_next_task;
      |                           ^
pp_34(D)->get_next_task = get_next_task_39(D);
./benchmarks/git/use_after_free_2/git_uaf_2.c:183:27: warning: use location
if (get_next_task_39(D) == 0B)
./benchmarks/git/use_after_free_2/git_uaf_2.c:181:12: warning: use location
  181 |         if (!get_next_task)
      |            ^
pp_34(D)->data = data_37(D);
./benchmarks/git/use_after_free_2/git_uaf_2.c:180:18: warning: use location
  180 |         pp->data = data;
      |                  ^
pp_34(D)->data = data_37(D);
./benchmarks/git/use_after_free_2/git_uaf_2.c:180:18: warning: use location
pp_34(D)->max_processes = n_24;
./benchmarks/git/use_after_free_2/git_uaf_2.c:176:27: warning: use location
  176 |         pp->max_processes = n;
      |                           ^
pp_34(D)->max_processes = n_24;
./benchmarks/git/use_after_free_2/git_uaf_2.c:176:27: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662eeee8
    type <pointer_type 0x7fdf667b1000
        type <void_type 0x7fdf667aaf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fdf667b1000>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fdf662ad498>>
   
    def_stmt _2 = calloc (_1, 120);
    version:2
    ptr-info 0x7fdf66304978>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662eef78
    type <pointer_type 0x7fdf667b1000
        type <void_type 0x7fdf667aaf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fdf667b1000>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fdf662ad498>>
   
    def_stmt _4 = calloc (_3, 8);
    version:4
    ptr-info 0x7fdf66304990>
 <ssa_name 0x7fdf662eef78
    type <pointer_type 0x7fdf667b1000
        type <void_type 0x7fdf667aaf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fdf667b1000>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fdf662ad498>>
   
    def_stmt _4 = calloc (_3, 8);
    version:4
    ptr-info 0x7fdf66304990>

 ================== pre trace ptable ================== 
trace fucntion name:calloc 

 ================== pre trace ptable finish================== 
is Reserved word function :calloc
 
 Start check Pointer Collect  

======================================================================
# .MEM_74 = VDEF <.MEM_73>
_4 = calloc (_3, 8);
_4 = calloc (_3, 8);
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:19: warning: use location
  192 |         pp->pfd = xcalloc(n, sizeof(*pp->pfd));
      |                   ^
this stmt call this function :calloc
pp_34(D)->pfd = _4;
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:17: warning: use location
  192 |         pp->pfd = xcalloc(n, sizeof(*pp->pfd));
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = pp_34(D)->pfd;
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:19: warning: use location
  199 |                 pp->pfd[i].fd = -1;
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23->fd = -1;
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:31: warning: use location
  199 |                 pp->pfd[i].fd = -1;
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = pp_34(D)->pfd;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:19: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = _16 + _18;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:24: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19->events = 17;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:35: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = pp_34(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:39: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = _11 + _13;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:49: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = &_14->process;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
child_process_init (_15);
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
this stmt call this function :child_process_init
trace fucntion name:child_process_init 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = pp_34(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:32: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = _6 + _8;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:42: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = &_9->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strbuf_init (_10, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
this stmt call this function :strbuf_init
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 
_5 = &pp_34(D)->buffered_output;
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: use location
  193 |         strbuf_init(&pp->buffered_output, 0);
      |         ^
strbuf_init (_5, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: use location
this stmt call this function :strbuf_init
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 
pp_34(D)->children = _2;
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:22: warning: use location
  191 |         pp->children = xcalloc(n, sizeof(*pp->children));
      |                      ^
pp_34(D)->children = _2;
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:22: warning: use location
pp_34(D)->shutdown = 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:190:22: warning: use location
  190 |         pp->shutdown = 0;
      |                      ^
pp_34(D)->output_owner = 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:189:26: warning: use location
  189 |         pp->output_owner = 0;
      |                          ^
pp_34(D)->nr_processes = 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:188:26: warning: use location
  188 |         pp->nr_processes = 0;
      |                          ^
pp_34(D)->task_finished = _27;
./benchmarks/git/use_after_free_2/git_uaf_2.c:186:27: warning: use location
  186 |         pp->task_finished = task_finished ? task_finished : default_task_finished;
      |                           ^
pp_34(D)->task_finished = _27;
./benchmarks/git/use_after_free_2/git_uaf_2.c:186:27: warning: use location
pp_34(D)->start_failure = _26;
./benchmarks/git/use_after_free_2/git_uaf_2.c:185:27: warning: use location
  185 |         pp->start_failure = start_failure ? start_failure : default_start_failure;
      |                           ^
pp_34(D)->start_failure = _26;
./benchmarks/git/use_after_free_2/git_uaf_2.c:185:27: warning: use location
pp_34(D)->get_next_task = get_next_task_39(D);
./benchmarks/git/use_after_free_2/git_uaf_2.c:183:27: warning: use location
  183 |         pp->get_next_task = get_next_task;
      |                           ^
pp_34(D)->get_next_task = get_next_task_39(D);
./benchmarks/git/use_after_free_2/git_uaf_2.c:183:27: warning: use location
if (get_next_task_39(D) == 0B)
./benchmarks/git/use_after_free_2/git_uaf_2.c:181:12: warning: use location
  181 |         if (!get_next_task)
      |            ^
pp_34(D)->data = data_37(D);
./benchmarks/git/use_after_free_2/git_uaf_2.c:180:18: warning: use location
  180 |         pp->data = data;
      |                  ^
pp_34(D)->data = data_37(D);
./benchmarks/git/use_after_free_2/git_uaf_2.c:180:18: warning: use location
pp_34(D)->max_processes = n_24;
./benchmarks/git/use_after_free_2/git_uaf_2.c:176:27: warning: use location
  176 |         pp->max_processes = n;
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (n_24 > i_25)
./benchmarks/git/use_after_free_2/git_uaf_2.c:195:23: warning: use location
  195 |         for (i = 0; i < n; i++) {
      |                       ^
_1 = (long unsigned int) n_24;
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:24: warning: use location
  191 |         pp->children = xcalloc(n, sizeof(*pp->children));
      |                        ^
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
./benchmarks/git/use_after_free_2/git_uaf_2.c:178:9: warning: use location
  178 |         trace_printf("run_processes_parallel: preparing to run up to %d tasks", n);
      |         ^
this stmt call this function :trace_printf
trace fucntion name:trace_printf 

 ================== trace ================== 
trace fucntion free:0 
pp_cleanup (&pp);
./benchmarks/git/use_after_free_2/git_uaf_2.c:371:9: warning: use location
  371 |         pp_cleanup(&pp);
      |         ^
this stmt call this function :pp_cleanup
trace fucntion name:pp_cleanup 

 ================== trace ================== 
trace fucntion free:0 
pp_cleanup (&pp);
./benchmarks/git/use_after_free_2/git_uaf_2.c:371:9: warning: use location
this stmt call this function :pp_cleanup
trace fucntion name:pp_cleanup 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662eef78
    type <pointer_type 0x7fdf667b1000
        type <void_type 0x7fdf667aaf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fdf667b1000>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fdf662ad498>>
   
    def_stmt _4 = calloc (_3, 8);
    version:4
    ptr-info 0x7fdf66304990>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662f8000
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = &pp_34(D)->buffered_output;
    version:5
    ptr-info 0x7fdf663049a8>
 <ssa_name 0x7fdf662f8000
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = &pp_34(D)->buffered_output;
    version:5
    ptr-info 0x7fdf663049a8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662f8000
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = &pp_34(D)->buffered_output;
    version:5
    ptr-info 0x7fdf663049a8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_76 = VDEF <.MEM_75>
strbuf_init (_5, 0);
strbuf_init (_5, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: use location
  193 |         strbuf_init(&pp->buffered_output, 0);
      |         ^
this stmt call this function :strbuf_init
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_76 = VDEF <.MEM_75>
strbuf_init (_5, 0);
strbuf_init (_5, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: use location
this stmt call this function :strbuf_init
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662f8000
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = &pp_34(D)->buffered_output;
    version:5
    ptr-info 0x7fdf663049a8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662f8168
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _10 = &_9->err;
    version:10
    ptr-info 0x7fdf663049f0>
 <ssa_name 0x7fdf662f8168
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _10 = &_9->err;
    version:10
    ptr-info 0x7fdf663049f0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662f8168
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _10 = &_9->err;
    version:10
    ptr-info 0x7fdf663049f0>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_78 = VDEF <.MEM_60>
strbuf_init (_10, 0);
strbuf_init (_10, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                 ^
this stmt call this function :strbuf_init
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_78 = VDEF <.MEM_60>
strbuf_init (_10, 0);
strbuf_init (_10, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
this stmt call this function :strbuf_init
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662f8168
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _10 = &_9->err;
    version:10
    ptr-info 0x7fdf663049f0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662f82d0
    type <pointer_type 0x7fdf662bb7e0
        type <record_type 0x7fdf662bb738 child_process BLK
            size <integer_cst 0x7fdf662a4978 constant 640>
            unit-size <integer_cst 0x7fdf662a4948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738 fields <field_decl 0x7fdf662bd850 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _15 = &_14->process;
    version:15
    ptr-info 0x7fdf66304a38>
 <ssa_name 0x7fdf662f82d0
    type <pointer_type 0x7fdf662bb7e0
        type <record_type 0x7fdf662bb738 child_process BLK
            size <integer_cst 0x7fdf662a4978 constant 640>
            unit-size <integer_cst 0x7fdf662a4948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738 fields <field_decl 0x7fdf662bd850 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _15 = &_14->process;
    version:15
    ptr-info 0x7fdf66304a38>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662f82d0
    type <pointer_type 0x7fdf662bb7e0
        type <record_type 0x7fdf662bb738 child_process BLK
            size <integer_cst 0x7fdf662a4978 constant 640>
            unit-size <integer_cst 0x7fdf662a4948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738 fields <field_decl 0x7fdf662bd850 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _15 = &_14->process;
    version:15
    ptr-info 0x7fdf66304a38>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_79 = VDEF <.MEM_78>
child_process_init (_15);
child_process_init (_15);
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                 ^
this stmt call this function :child_process_init
trace fucntion name:child_process_init 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_79 = VDEF <.MEM_78>
child_process_init (_15);
child_process_init (_15);
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
this stmt call this function :child_process_init
trace fucntion name:child_process_init 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662f82d0
    type <pointer_type 0x7fdf662bb7e0
        type <record_type 0x7fdf662bb738 child_process BLK
            size <integer_cst 0x7fdf662a4978 constant 640>
            unit-size <integer_cst 0x7fdf662a4948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738 fields <field_decl 0x7fdf662bd850 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _15 = &_14->process;
    version:15
    ptr-info 0x7fdf66304a38>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662eeea0
    type <integer_type 0x7fdf667aa7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa738 precision:64 min <integer_cst 0x7fdf66795e88 0> max <integer_cst 0x7fdf66796500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fdf667b67e0>>
   
    def_stmt _1 = (long unsigned int) n_24;
    version:1>
 <ssa_name 0x7fdf662eeea0
    type <integer_type 0x7fdf667aa7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa738 precision:64 min <integer_cst 0x7fdf66795e88 0> max <integer_cst 0x7fdf66796500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fdf667b67e0>>
   
    def_stmt _1 = (long unsigned int) n_24;
    version:1>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662eeea0
    type <integer_type 0x7fdf667aa7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa738 precision:64 min <integer_cst 0x7fdf66795e88 0> max <integer_cst 0x7fdf66796500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fdf667b67e0>>
   
    def_stmt _1 = (long unsigned int) n_24;
    version:1>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_72 = VDEF <.MEM_71>
_2 = calloc (_1, 120);
_2 = calloc (_1, 120);
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:24: warning: use location
  191 |         pp->children = xcalloc(n, sizeof(*pp->children));
      |                        ^
this stmt call this function :calloc
pp_34(D)->children = _2;
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:22: warning: use location
  191 |         pp->children = xcalloc(n, sizeof(*pp->children));
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = pp_34(D)->pfd;
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:19: warning: use location
  199 |                 pp->pfd[i].fd = -1;
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23->fd = -1;
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:31: warning: use location
  199 |                 pp->pfd[i].fd = -1;
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = pp_34(D)->pfd;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:19: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = _16 + _18;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:24: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19->events = 17;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:35: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = pp_34(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:39: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = _11 + _13;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:49: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = &_14->process;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
child_process_init (_15);
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
this stmt call this function :child_process_init
trace fucntion name:child_process_init 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = pp_34(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:32: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = _6 + _8;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:42: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = &_9->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strbuf_init (_10, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
this stmt call this function :strbuf_init
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 
_5 = &pp_34(D)->buffered_output;
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: use location
  193 |         strbuf_init(&pp->buffered_output, 0);
      |         ^
strbuf_init (_5, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: use location
this stmt call this function :strbuf_init
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 
pp_34(D)->pfd = _4;
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:17: warning: use location
  192 |         pp->pfd = xcalloc(n, sizeof(*pp->pfd));
      |                 ^
pp_34(D)->pfd = _4;
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:17: warning: use location
pp_34(D)->shutdown = 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:190:22: warning: use location
  190 |         pp->shutdown = 0;
      |                      ^
pp_34(D)->output_owner = 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:189:26: warning: use location
  189 |         pp->output_owner = 0;
      |                          ^
pp_34(D)->nr_processes = 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:188:26: warning: use location
  188 |         pp->nr_processes = 0;
      |                          ^
pp_34(D)->task_finished = _27;
./benchmarks/git/use_after_free_2/git_uaf_2.c:186:27: warning: use location
  186 |         pp->task_finished = task_finished ? task_finished : default_task_finished;
      |                           ^
pp_34(D)->task_finished = _27;
./benchmarks/git/use_after_free_2/git_uaf_2.c:186:27: warning: use location
pp_34(D)->start_failure = _26;
./benchmarks/git/use_after_free_2/git_uaf_2.c:185:27: warning: use location
  185 |         pp->start_failure = start_failure ? start_failure : default_start_failure;
      |                           ^
pp_34(D)->start_failure = _26;
./benchmarks/git/use_after_free_2/git_uaf_2.c:185:27: warning: use location
pp_34(D)->get_next_task = get_next_task_39(D);
./benchmarks/git/use_after_free_2/git_uaf_2.c:183:27: warning: use location
  183 |         pp->get_next_task = get_next_task;
      |                           ^
pp_34(D)->get_next_task = get_next_task_39(D);
./benchmarks/git/use_after_free_2/git_uaf_2.c:183:27: warning: use location
if (get_next_task_39(D) == 0B)
./benchmarks/git/use_after_free_2/git_uaf_2.c:181:12: warning: use location
  181 |         if (!get_next_task)
      |            ^
pp_34(D)->data = data_37(D);
./benchmarks/git/use_after_free_2/git_uaf_2.c:180:18: warning: use location
  180 |         pp->data = data;
      |                  ^
pp_34(D)->data = data_37(D);
./benchmarks/git/use_after_free_2/git_uaf_2.c:180:18: warning: use location
pp_34(D)->max_processes = n_24;
./benchmarks/git/use_after_free_2/git_uaf_2.c:176:27: warning: use location
  176 |         pp->max_processes = n;
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (n_24 > i_25)
./benchmarks/git/use_after_free_2/git_uaf_2.c:195:23: warning: use location
  195 |         for (i = 0; i < n; i++) {
      |                       ^
_3 = (long unsigned int) n_24;
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:19: warning: use location
  192 |         pp->pfd = xcalloc(n, sizeof(*pp->pfd));
      |                   ^
_1 = (long unsigned int) n_24;
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:24: warning: use location
  191 |         pp->children = xcalloc(n, sizeof(*pp->children));
      |                        ^
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
./benchmarks/git/use_after_free_2/git_uaf_2.c:178:9: warning: use location
  178 |         trace_printf("run_processes_parallel: preparing to run up to %d tasks", n);
      |         ^
this stmt call this function :trace_printf
trace fucntion name:trace_printf 

 ================== trace ================== 
trace fucntion free:0 
pp_cleanup (&pp);
./benchmarks/git/use_after_free_2/git_uaf_2.c:371:9: warning: use location
  371 |         pp_cleanup(&pp);
      |         ^
this stmt call this function :pp_cleanup
trace fucntion name:pp_cleanup 

 ================== trace ================== 
trace fucntion free:0 
pp_cleanup (&pp);
./benchmarks/git/use_after_free_2/git_uaf_2.c:371:9: warning: use location
this stmt call this function :pp_cleanup
trace fucntion name:pp_cleanup 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662eeea0
    type <integer_type 0x7fdf667aa7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa738 precision:64 min <integer_cst 0x7fdf66795e88 0> max <integer_cst 0x7fdf66796500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fdf667b67e0>>
   
    def_stmt _1 = (long unsigned int) n_24;
    version:1>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662eef30
    type <integer_type 0x7fdf667aa7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa738 precision:64 min <integer_cst 0x7fdf66795e88 0> max <integer_cst 0x7fdf66796500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fdf667b67e0>>
   
    def_stmt _3 = (long unsigned int) n_24;
    version:3>
 <ssa_name 0x7fdf662eef30
    type <integer_type 0x7fdf667aa7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa738 precision:64 min <integer_cst 0x7fdf66795e88 0> max <integer_cst 0x7fdf66796500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fdf667b67e0>>
   
    def_stmt _3 = (long unsigned int) n_24;
    version:3>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662eef30
    type <integer_type 0x7fdf667aa7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa738 precision:64 min <integer_cst 0x7fdf66795e88 0> max <integer_cst 0x7fdf66796500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fdf667b67e0>>
   
    def_stmt _3 = (long unsigned int) n_24;
    version:3>
is Other function 

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:pp_init========= [0m
[40;42m =======pre_check_funciton:run_processes_parallel========= [0m
[40;42m =======start_check_funciton:run_processes_parallel========= [0m

dot graph START

======================================================================
 <var_decl 0x7fdf662cdbd0 pp
    type <record_type 0x7fdf662b4540 parallel_processes BLK
        size <integer_cst 0x7fdf6686a0a8 constant 704>
        unit-size <integer_cst 0x7fdf662a4828 constant 88>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4540
        fields <field_decl 0x7fdf662b0980 data type <pointer_type 0x7fdf667b1000>
            unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:103:8
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7fdf66795be8 constant 0>
            bit-offset <integer_cst 0x7fdf66795c30 constant 0> context <record_type 0x7fdf662b4540 parallel_processes> chain <field_decl 0x7fdf662b08e8 max_processes>> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662b45e8>>
    addressable BLK ./benchmarks/git/use_after_free_2/git_uaf_2.c:342:28 size <integer_cst 0x7fdf6686a0a8 704> unit-size <integer_cst 0x7fdf662a4828 88>
    align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9200 run_processes_parallel>>

 ================== this stmt hava call fucntion ================== 
 <var_decl 0x7fdf662cdbd0 pp
    type <record_type 0x7fdf662b4540 parallel_processes BLK
        size <integer_cst 0x7fdf6686a0a8 constant 704>
        unit-size <integer_cst 0x7fdf662a4828 constant 88>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4540
        fields <field_decl 0x7fdf662b0980 data type <pointer_type 0x7fdf667b1000>
            unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:103:8
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7fdf66795be8 constant 0>
            bit-offset <integer_cst 0x7fdf66795c30 constant 0> context <record_type 0x7fdf662b4540 parallel_processes> chain <field_decl 0x7fdf662b08e8 max_processes>> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662b45e8>>
    addressable BLK ./benchmarks/git/use_after_free_2/git_uaf_2.c:342:28 size <integer_cst 0x7fdf6686a0a8 704> unit-size <integer_cst 0x7fdf662a4828 88>
    align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9200 run_processes_parallel>>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_36 = VDEF <.MEM_35(D)>
pp_init (&pp, n_15(D), get_next_task_16(D), start_failure_17(D), task_finished_18(D), pp_cb_19(D));
pp_init (&pp, n_15(D), get_next_task_16(D), start_failure_17(D), task_finished_18(D), pp_cb_19(D));
./benchmarks/git/use_after_free_2/git_uaf_2.c:344:9: warning: use location
  344 |         pp_init(&pp, n, get_next_task, start_failure, task_finished, pp_cb);
      |         ^
this stmt call this function :pp_init
trace fucntion name:pp_init 
[40;44m =======trace_function_path pp_init  function_call count: 7 level :0========  [0m
 <var_decl 0x7fdf662cdbd0 pp
    type <record_type 0x7fdf662b4540 parallel_processes BLK
        size <integer_cst 0x7fdf6686a0a8 constant 704>
        unit-size <integer_cst 0x7fdf662a4828 constant 88>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4540
        fields <field_decl 0x7fdf662b0980 data type <pointer_type 0x7fdf667b1000>
            unsigned DI ./benchmarks/git/use_after_free_2/git_uaf_2.c:103:8
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7fdf66795be8 constant 0>
            bit-offset <integer_cst 0x7fdf66795c30 constant 0> context <record_type 0x7fdf662b4540 parallel_processes> chain <field_decl 0x7fdf662b08e8 max_processes>> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662b45e8>>
    addressable BLK ./benchmarks/git/use_after_free_2/git_uaf_2.c:342:28 size <integer_cst 0x7fdf6686a0a8 704> unit-size <integer_cst 0x7fdf662a4828 88>
    align:64 warn_if_not_align:0 context <function_decl 0x7fdf662b9200 run_processes_parallel>>
[40;36m ======= node_fun:pp_init========= [0m
[40;36m ======= find relate stmt with pp ========= [0m
[40;36m ======= relate node_fun argument:pp========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: use location
  193 |         strbuf_init(&pp->buffered_output, 0);
      |         ^
_5 = &pp_34(D)->buffered_output;
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:pp========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:32: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                ^
_6 = pp_34(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:32: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:pp========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:42: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                          ^
_9 = _6 + _8;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:42: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:pp========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                 ^
_10 = &_9->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:pp========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:39: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                       ^
_11 = pp_34(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:39: warning: use location
_11

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:pp========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:49: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                                 ^
_14 = _11 + _13;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:49: warning: use location
_14

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:pp========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                 ^
_15 = &_14->process;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
_15

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:pp========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:19: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                   ^
_16 = pp_34(D)->pfd;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:19: warning: use location
_16

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:pp========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:24: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                        ^
_19 = _16 + _18;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:24: warning: use location
_19

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:pp========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:19: warning: use location
  199 |                 pp->pfd[i].fd = -1;
      |                   ^
_20 = pp_34(D)->pfd;
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:19: warning: use location
_20

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:pp========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:24: warning: use location
  199 |                 pp->pfd[i].fd = -1;
      |                        ^
_23 = _20 + _22;
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:24: warning: use location
_23

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;46m =======add node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;46m =======add node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;46m =======add node_fun stack:online_cpus========= [0m

 ================== trace ================== 
trace fucntion free:0 
pp_cleanup (&pp);
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:371:9: warning: use location
  371 |         pp_cleanup(&pp);
      |         ^
this stmt call this function :pp_cleanup
trace fucntion name:pp_cleanup 

 ================== trace ================== 
trace fucntion free:0 
pp_cleanup (&pp);
./benchmarks/git/use_after_free_2/git_uaf_2.c:371:9: warning: use location
this stmt call this function :pp_cleanup
trace fucntion name:pp_cleanup 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662d5bd0
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <parm_decl 0x7fdf662c3a80 n>
    def_stmt GIMPLE_NOP
    version:15>
 <ssa_name 0x7fdf662d5bd0
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <parm_decl 0x7fdf662c3a80 n>
    def_stmt GIMPLE_NOP
    version:15>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662d5bd0
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <parm_decl 0x7fdf662c3a80 n>
    def_stmt GIMPLE_NOP
    version:15>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_36 = VDEF <.MEM_35(D)>
pp_init (&pp, n_15(D), get_next_task_16(D), start_failure_17(D), task_finished_18(D), pp_cb_19(D));
pp_init (&pp, n_15(D), get_next_task_16(D), start_failure_17(D), task_finished_18(D), pp_cb_19(D));
./benchmarks/git/use_after_free_2/git_uaf_2.c:344:9: warning: use location
  344 |         pp_init(&pp, n, get_next_task, start_failure, task_finished, pp_cb);
      |         ^
this stmt call this function :pp_init
trace fucntion name:pp_init 
[40;44m =======trace_function_path pp_init  function_call count: 7 level :0========  [0m
 <ssa_name 0x7fdf662d5bd0
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <parm_decl 0x7fdf662c3a80 n>
    def_stmt GIMPLE_NOP
    version:15>
[40;36m ======= node_fun:pp_init========= [0m
[40;36m ======= find relate stmt with n ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;46m =======add node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;46m =======add node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;46m =======add node_fun stack:online_cpus========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_36 = VDEF <.MEM_35(D)>
pp_init (&pp, n_15(D), get_next_task_16(D), start_failure_17(D), task_finished_18(D), pp_cb_19(D));
pp_init (&pp, n_15(D), get_next_task_16(D), start_failure_17(D), task_finished_18(D), pp_cb_19(D));
./benchmarks/git/use_after_free_2/git_uaf_2.c:344:9: warning: use location
this stmt call this function :pp_init
trace fucntion name:pp_init 
[40;44m =======trace_function_path pp_init  function_call count: 7 level :0========  [0m
 <ssa_name 0x7fdf662d5bd0
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <parm_decl 0x7fdf662c3a80 n>
    def_stmt GIMPLE_NOP
    version:15>
[40;36m ======= node_fun:pp_init========= [0m
[40;36m ======= find relate stmt with n ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;46m =======add node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;46m =======add node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;46m =======add node_fun stack:online_cpus========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662d5bd0
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <parm_decl 0x7fdf662c3a80 n>
    def_stmt GIMPLE_NOP
    version:15>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662d5c18
    type <pointer_type 0x7fdf662ad690 get_next_task_fn
        type <function_type 0x7fdf662ad540 type <integer_type 0x7fdf667aa5e8 int>
            QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7fdf662af618 value <pointer_type 0x7fdf662adbd0>
                chain <tree_list 0x7fdf662af5f0 value <pointer_type 0x7fdf662ada80>
                    chain <tree_list 0x7fdf662af5c8 value <pointer_type 0x7fdf667b1000>
                        chain <tree_list 0x7fdf662af5a0 value <pointer_type 0x7fdf662ad498> chain <tree_list 0x7fdf667a9b18>>>>>
            pointer_to_this <pointer_type 0x7fdf662ad5e8>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>>
    var <parm_decl 0x7fdf662c3b00 get_next_task>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7fdf662a4ea0>
 <ssa_name 0x7fdf662d5c18
    type <pointer_type 0x7fdf662ad690 get_next_task_fn
        type <function_type 0x7fdf662ad540 type <integer_type 0x7fdf667aa5e8 int>
            QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7fdf662af618 value <pointer_type 0x7fdf662adbd0>
                chain <tree_list 0x7fdf662af5f0 value <pointer_type 0x7fdf662ada80>
                    chain <tree_list 0x7fdf662af5c8 value <pointer_type 0x7fdf667b1000>
                        chain <tree_list 0x7fdf662af5a0 value <pointer_type 0x7fdf662ad498> chain <tree_list 0x7fdf667a9b18>>>>>
            pointer_to_this <pointer_type 0x7fdf662ad5e8>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>>
    var <parm_decl 0x7fdf662c3b00 get_next_task>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7fdf662a4ea0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662d5c18
    type <pointer_type 0x7fdf662ad690 get_next_task_fn
        type <function_type 0x7fdf662ad540 type <integer_type 0x7fdf667aa5e8 int>
            QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7fdf662af618 value <pointer_type 0x7fdf662adbd0>
                chain <tree_list 0x7fdf662af5f0 value <pointer_type 0x7fdf662ada80>
                    chain <tree_list 0x7fdf662af5c8 value <pointer_type 0x7fdf667b1000>
                        chain <tree_list 0x7fdf662af5a0 value <pointer_type 0x7fdf662ad498> chain <tree_list 0x7fdf667a9b18>>>>>
            pointer_to_this <pointer_type 0x7fdf662ad5e8>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>>
    var <parm_decl 0x7fdf662c3b00 get_next_task>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7fdf662a4ea0>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_36 = VDEF <.MEM_35(D)>
pp_init (&pp, n_15(D), get_next_task_16(D), start_failure_17(D), task_finished_18(D), pp_cb_19(D));
pp_init (&pp, n_15(D), get_next_task_16(D), start_failure_17(D), task_finished_18(D), pp_cb_19(D));
./benchmarks/git/use_after_free_2/git_uaf_2.c:344:9: warning: use location
this stmt call this function :pp_init
trace fucntion name:pp_init 
[40;44m =======trace_function_path pp_init  function_call count: 7 level :0========  [0m
 <ssa_name 0x7fdf662d5c18
    type <pointer_type 0x7fdf662ad690 get_next_task_fn
        type <function_type 0x7fdf662ad540 type <integer_type 0x7fdf667aa5e8 int>
            QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7fdf662af618 value <pointer_type 0x7fdf662adbd0>
                chain <tree_list 0x7fdf662af5f0 value <pointer_type 0x7fdf662ada80>
                    chain <tree_list 0x7fdf662af5c8 value <pointer_type 0x7fdf667b1000>
                        chain <tree_list 0x7fdf662af5a0 value <pointer_type 0x7fdf662ad498> chain <tree_list 0x7fdf667a9b18>>>>>
            pointer_to_this <pointer_type 0x7fdf662ad5e8>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>>
    var <parm_decl 0x7fdf662c3b00 get_next_task>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7fdf662a4ea0>
[40;36m ======= node_fun:pp_init========= [0m
[40;36m ======= find relate stmt with get_next_task ========= [0m
[40;36m ======= relate node_fun argument:get_next_task========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:32: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                ^
_6 = pp_34(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:32: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:get_next_task========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:42: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                          ^
_9 = _6 + _8;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:42: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:get_next_task========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                 ^
_10 = &_9->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:get_next_task========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:39: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                       ^
_11 = pp_34(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:39: warning: use location
_11

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:get_next_task========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:49: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                                 ^
_14 = _11 + _13;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:49: warning: use location
_14

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:get_next_task========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                 ^
_15 = &_14->process;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
_15

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:get_next_task========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:19: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                   ^
_16 = pp_34(D)->pfd;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:19: warning: use location
_16

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:get_next_task========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:24: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                        ^
_19 = _16 + _18;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:24: warning: use location
_19

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:get_next_task========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:19: warning: use location
  199 |                 pp->pfd[i].fd = -1;
      |                   ^
_20 = pp_34(D)->pfd;
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:19: warning: use location
_20

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:get_next_task========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:24: warning: use location
  199 |                 pp->pfd[i].fd = -1;
      |                        ^
_23 = _20 + _22;
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:24: warning: use location
_23

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;46m =======add node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;46m =======add node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;46m =======add node_fun stack:online_cpus========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_36 = VDEF <.MEM_35(D)>
pp_init (&pp, n_15(D), get_next_task_16(D), start_failure_17(D), task_finished_18(D), pp_cb_19(D));
pp_init (&pp, n_15(D), get_next_task_16(D), start_failure_17(D), task_finished_18(D), pp_cb_19(D));
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:344:9: warning: use location
  344 |         pp_init(&pp, n, get_next_task, start_failure, task_finished, pp_cb);
      |         ^
this stmt call this function :pp_init
trace fucntion name:pp_init 
[40;44m =======trace_function_path pp_init  function_call count: 7 level :0========  [0m
 <ssa_name 0x7fdf662d5c18
    type <pointer_type 0x7fdf662ad690 get_next_task_fn
        type <function_type 0x7fdf662ad540 type <integer_type 0x7fdf667aa5e8 int>
            QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7fdf662af618 value <pointer_type 0x7fdf662adbd0>
                chain <tree_list 0x7fdf662af5f0 value <pointer_type 0x7fdf662ada80>
                    chain <tree_list 0x7fdf662af5c8 value <pointer_type 0x7fdf667b1000>
                        chain <tree_list 0x7fdf662af5a0 value <pointer_type 0x7fdf662ad498> chain <tree_list 0x7fdf667a9b18>>>>>
            pointer_to_this <pointer_type 0x7fdf662ad5e8>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>>
    var <parm_decl 0x7fdf662c3b00 get_next_task>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7fdf662a4ea0>
[40;36m ======= node_fun:pp_init========= [0m
[40;36m ======= find relate stmt with get_next_task ========= [0m
[40;36m ======= relate node_fun argument:get_next_task========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:32: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                ^
_6 = pp_34(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:32: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:get_next_task========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:42: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                          ^
_9 = _6 + _8;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:42: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:get_next_task========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                 ^
_10 = &_9->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:get_next_task========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:39: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                       ^
_11 = pp_34(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:39: warning: use location
_11

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:get_next_task========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:49: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                                 ^
_14 = _11 + _13;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:49: warning: use location
_14

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:get_next_task========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                 ^
_15 = &_14->process;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
_15

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:get_next_task========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:19: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                   ^
_16 = pp_34(D)->pfd;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:19: warning: use location
_16

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:get_next_task========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:24: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                        ^
_19 = _16 + _18;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:24: warning: use location
_19

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:get_next_task========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:19: warning: use location
  199 |                 pp->pfd[i].fd = -1;
      |                   ^
_20 = pp_34(D)->pfd;
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:19: warning: use location
_20

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:get_next_task========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:24: warning: use location
  199 |                 pp->pfd[i].fd = -1;
      |                        ^
_23 = _20 + _22;
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:24: warning: use location
_23

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;46m =======add node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;46m =======add node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;46m =======add node_fun stack:online_cpus========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662d5c18
    type <pointer_type 0x7fdf662ad690 get_next_task_fn
        type <function_type 0x7fdf662ad540 type <integer_type 0x7fdf667aa5e8 int>
            QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7fdf662af618 value <pointer_type 0x7fdf662adbd0>
                chain <tree_list 0x7fdf662af5f0 value <pointer_type 0x7fdf662ada80>
                    chain <tree_list 0x7fdf662af5c8 value <pointer_type 0x7fdf667b1000>
                        chain <tree_list 0x7fdf662af5a0 value <pointer_type 0x7fdf662ad498> chain <tree_list 0x7fdf667a9b18>>>>>
            pointer_to_this <pointer_type 0x7fdf662ad5e8>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>>
    var <parm_decl 0x7fdf662c3b00 get_next_task>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7fdf662a4ea0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662d5c60
    type <pointer_type 0x7fdf662ad348 start_failure_fn
        type <function_type 0x7fdf662adc78 type <integer_type 0x7fdf667aa5e8 int>
            QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7fdf662af460 value <pointer_type 0x7fdf662adbd0>
                chain <tree_list 0x7fdf662af410 value <pointer_type 0x7fdf662ada80>
                    chain <tree_list 0x7fdf662af3c0 value <pointer_type 0x7fdf667b1000>
                        chain <tree_list 0x7fdf662af398 value <pointer_type 0x7fdf667b1000> chain <tree_list 0x7fdf667a9b18>>>>>
            pointer_to_this <pointer_type 0x7fdf662adf18>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>>
    var <parm_decl 0x7fdf662c3b80 start_failure>
    def_stmt GIMPLE_NOP
    version:17
    ptr-info 0x7fdf662a4eb8>
 <ssa_name 0x7fdf662d5c60
    type <pointer_type 0x7fdf662ad348 start_failure_fn
        type <function_type 0x7fdf662adc78 type <integer_type 0x7fdf667aa5e8 int>
            QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7fdf662af460 value <pointer_type 0x7fdf662adbd0>
                chain <tree_list 0x7fdf662af410 value <pointer_type 0x7fdf662ada80>
                    chain <tree_list 0x7fdf662af3c0 value <pointer_type 0x7fdf667b1000>
                        chain <tree_list 0x7fdf662af398 value <pointer_type 0x7fdf667b1000> chain <tree_list 0x7fdf667a9b18>>>>>
            pointer_to_this <pointer_type 0x7fdf662adf18>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>>
    var <parm_decl 0x7fdf662c3b80 start_failure>
    def_stmt GIMPLE_NOP
    version:17
    ptr-info 0x7fdf662a4eb8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662d5c60
    type <pointer_type 0x7fdf662ad348 start_failure_fn
        type <function_type 0x7fdf662adc78 type <integer_type 0x7fdf667aa5e8 int>
            QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7fdf662af460 value <pointer_type 0x7fdf662adbd0>
                chain <tree_list 0x7fdf662af410 value <pointer_type 0x7fdf662ada80>
                    chain <tree_list 0x7fdf662af3c0 value <pointer_type 0x7fdf667b1000>
                        chain <tree_list 0x7fdf662af398 value <pointer_type 0x7fdf667b1000> chain <tree_list 0x7fdf667a9b18>>>>>
            pointer_to_this <pointer_type 0x7fdf662adf18>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>>
    var <parm_decl 0x7fdf662c3b80 start_failure>
    def_stmt GIMPLE_NOP
    version:17
    ptr-info 0x7fdf662a4eb8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_36 = VDEF <.MEM_35(D)>
pp_init (&pp, n_15(D), get_next_task_16(D), start_failure_17(D), task_finished_18(D), pp_cb_19(D));
pp_init (&pp, n_15(D), get_next_task_16(D), start_failure_17(D), task_finished_18(D), pp_cb_19(D));
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:344:9: warning: use location
  344 |         pp_init(&pp, n, get_next_task, start_failure, task_finished, pp_cb);
      |         ^
this stmt call this function :pp_init
trace fucntion name:pp_init 
[40;44m =======trace_function_path pp_init  function_call count: 7 level :0========  [0m
 <ssa_name 0x7fdf662d5c60
    type <pointer_type 0x7fdf662ad348 start_failure_fn
        type <function_type 0x7fdf662adc78 type <integer_type 0x7fdf667aa5e8 int>
            QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7fdf662af460 value <pointer_type 0x7fdf662adbd0>
                chain <tree_list 0x7fdf662af410 value <pointer_type 0x7fdf662ada80>
                    chain <tree_list 0x7fdf662af3c0 value <pointer_type 0x7fdf667b1000>
                        chain <tree_list 0x7fdf662af398 value <pointer_type 0x7fdf667b1000> chain <tree_list 0x7fdf667a9b18>>>>>
            pointer_to_this <pointer_type 0x7fdf662adf18>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>>
    var <parm_decl 0x7fdf662c3b80 start_failure>
    def_stmt GIMPLE_NOP
    version:17
    ptr-info 0x7fdf662a4eb8>
[40;36m ======= node_fun:pp_init========= [0m
[40;36m ======= find relate stmt with start_failure ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;46m =======add node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;46m =======add node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;46m =======add node_fun stack:online_cpus========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_36 = VDEF <.MEM_35(D)>
pp_init (&pp, n_15(D), get_next_task_16(D), start_failure_17(D), task_finished_18(D), pp_cb_19(D));
pp_init (&pp, n_15(D), get_next_task_16(D), start_failure_17(D), task_finished_18(D), pp_cb_19(D));
./benchmarks/git/use_after_free_2/git_uaf_2.c:344:9: warning: use location
this stmt call this function :pp_init
trace fucntion name:pp_init 
[40;44m =======trace_function_path pp_init  function_call count: 7 level :0========  [0m
 <ssa_name 0x7fdf662d5c60
    type <pointer_type 0x7fdf662ad348 start_failure_fn
        type <function_type 0x7fdf662adc78 type <integer_type 0x7fdf667aa5e8 int>
            QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7fdf662af460 value <pointer_type 0x7fdf662adbd0>
                chain <tree_list 0x7fdf662af410 value <pointer_type 0x7fdf662ada80>
                    chain <tree_list 0x7fdf662af3c0 value <pointer_type 0x7fdf667b1000>
                        chain <tree_list 0x7fdf662af398 value <pointer_type 0x7fdf667b1000> chain <tree_list 0x7fdf667a9b18>>>>>
            pointer_to_this <pointer_type 0x7fdf662adf18>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>>
    var <parm_decl 0x7fdf662c3b80 start_failure>
    def_stmt GIMPLE_NOP
    version:17
    ptr-info 0x7fdf662a4eb8>
[40;36m ======= node_fun:pp_init========= [0m
[40;36m ======= find relate stmt with start_failure ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;46m =======add node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;46m =======add node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;46m =======add node_fun stack:online_cpus========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662d5c60
    type <pointer_type 0x7fdf662ad348 start_failure_fn
        type <function_type 0x7fdf662adc78 type <integer_type 0x7fdf667aa5e8 int>
            QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7fdf662af460 value <pointer_type 0x7fdf662adbd0>
                chain <tree_list 0x7fdf662af410 value <pointer_type 0x7fdf662ada80>
                    chain <tree_list 0x7fdf662af3c0 value <pointer_type 0x7fdf667b1000>
                        chain <tree_list 0x7fdf662af398 value <pointer_type 0x7fdf667b1000> chain <tree_list 0x7fdf667a9b18>>>>>
            pointer_to_this <pointer_type 0x7fdf662adf18>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>>
    var <parm_decl 0x7fdf662c3b80 start_failure>
    def_stmt GIMPLE_NOP
    version:17
    ptr-info 0x7fdf662a4eb8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662d5ca8
    type <pointer_type 0x7fdf662ade70 task_finished_fn
        type <function_type 0x7fdf662add20 type <integer_type 0x7fdf667aa5e8 int>
            QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7fdf662af4b0 value <integer_type 0x7fdf667aa5e8 int>
                chain <tree_list 0x7fdf662af460 value <pointer_type 0x7fdf662adbd0>
                    chain <tree_list 0x7fdf662af410 value <pointer_type 0x7fdf662ada80>
                        chain <tree_list 0x7fdf662af3c0 value <pointer_type 0x7fdf667b1000> chain <tree_list 0x7fdf662af398>>>>>
            pointer_to_this <pointer_type 0x7fdf662addc8>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>>
    var <parm_decl 0x7fdf662c3c00 task_finished>
    def_stmt GIMPLE_NOP
    version:18
    ptr-info 0x7fdf662a4ed0>
 <ssa_name 0x7fdf662d5ca8
    type <pointer_type 0x7fdf662ade70 task_finished_fn
        type <function_type 0x7fdf662add20 type <integer_type 0x7fdf667aa5e8 int>
            QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7fdf662af4b0 value <integer_type 0x7fdf667aa5e8 int>
                chain <tree_list 0x7fdf662af460 value <pointer_type 0x7fdf662adbd0>
                    chain <tree_list 0x7fdf662af410 value <pointer_type 0x7fdf662ada80>
                        chain <tree_list 0x7fdf662af3c0 value <pointer_type 0x7fdf667b1000> chain <tree_list 0x7fdf662af398>>>>>
            pointer_to_this <pointer_type 0x7fdf662addc8>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>>
    var <parm_decl 0x7fdf662c3c00 task_finished>
    def_stmt GIMPLE_NOP
    version:18
    ptr-info 0x7fdf662a4ed0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662d5ca8
    type <pointer_type 0x7fdf662ade70 task_finished_fn
        type <function_type 0x7fdf662add20 type <integer_type 0x7fdf667aa5e8 int>
            QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7fdf662af4b0 value <integer_type 0x7fdf667aa5e8 int>
                chain <tree_list 0x7fdf662af460 value <pointer_type 0x7fdf662adbd0>
                    chain <tree_list 0x7fdf662af410 value <pointer_type 0x7fdf662ada80>
                        chain <tree_list 0x7fdf662af3c0 value <pointer_type 0x7fdf667b1000> chain <tree_list 0x7fdf662af398>>>>>
            pointer_to_this <pointer_type 0x7fdf662addc8>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>>
    var <parm_decl 0x7fdf662c3c00 task_finished>
    def_stmt GIMPLE_NOP
    version:18
    ptr-info 0x7fdf662a4ed0>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_36 = VDEF <.MEM_35(D)>
pp_init (&pp, n_15(D), get_next_task_16(D), start_failure_17(D), task_finished_18(D), pp_cb_19(D));
pp_init (&pp, n_15(D), get_next_task_16(D), start_failure_17(D), task_finished_18(D), pp_cb_19(D));
./benchmarks/git/use_after_free_2/git_uaf_2.c:344:9: warning: use location
this stmt call this function :pp_init
trace fucntion name:pp_init 
[40;44m =======trace_function_path pp_init  function_call count: 7 level :0========  [0m
 <ssa_name 0x7fdf662d5ca8
    type <pointer_type 0x7fdf662ade70 task_finished_fn
        type <function_type 0x7fdf662add20 type <integer_type 0x7fdf667aa5e8 int>
            QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7fdf662af4b0 value <integer_type 0x7fdf667aa5e8 int>
                chain <tree_list 0x7fdf662af460 value <pointer_type 0x7fdf662adbd0>
                    chain <tree_list 0x7fdf662af410 value <pointer_type 0x7fdf662ada80>
                        chain <tree_list 0x7fdf662af3c0 value <pointer_type 0x7fdf667b1000> chain <tree_list 0x7fdf662af398>>>>>
            pointer_to_this <pointer_type 0x7fdf662addc8>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>>
    var <parm_decl 0x7fdf662c3c00 task_finished>
    def_stmt GIMPLE_NOP
    version:18
    ptr-info 0x7fdf662a4ed0>
[40;36m ======= node_fun:pp_init========= [0m
[40;36m ======= find relate stmt with task_finished ========= [0m
[40;36m ======= relate node_fun argument:task_finished========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:32: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                ^
_6 = pp_34(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:32: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:task_finished========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:42: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                          ^
_9 = _6 + _8;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:42: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:task_finished========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                 ^
_10 = &_9->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:task_finished========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:39: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                       ^
_11 = pp_34(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:39: warning: use location
_11

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:task_finished========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:49: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                                 ^
_14 = _11 + _13;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:49: warning: use location
_14

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:task_finished========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                 ^
_15 = &_14->process;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
_15

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:task_finished========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:19: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                   ^
_16 = pp_34(D)->pfd;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:19: warning: use location
_16

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:task_finished========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:24: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                        ^
_19 = _16 + _18;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:24: warning: use location
_19

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:task_finished========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:19: warning: use location
  199 |                 pp->pfd[i].fd = -1;
      |                   ^
_20 = pp_34(D)->pfd;
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:19: warning: use location
_20

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:task_finished========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:24: warning: use location
  199 |                 pp->pfd[i].fd = -1;
      |                        ^
_23 = _20 + _22;
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:24: warning: use location
_23

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;46m =======add node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;46m =======add node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;46m =======add node_fun stack:online_cpus========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_36 = VDEF <.MEM_35(D)>
pp_init (&pp, n_15(D), get_next_task_16(D), start_failure_17(D), task_finished_18(D), pp_cb_19(D));
pp_init (&pp, n_15(D), get_next_task_16(D), start_failure_17(D), task_finished_18(D), pp_cb_19(D));
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:344:9: warning: use location
  344 |         pp_init(&pp, n, get_next_task, start_failure, task_finished, pp_cb);
      |         ^
this stmt call this function :pp_init
trace fucntion name:pp_init 
[40;44m =======trace_function_path pp_init  function_call count: 7 level :0========  [0m
 <ssa_name 0x7fdf662d5ca8
    type <pointer_type 0x7fdf662ade70 task_finished_fn
        type <function_type 0x7fdf662add20 type <integer_type 0x7fdf667aa5e8 int>
            QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7fdf662af4b0 value <integer_type 0x7fdf667aa5e8 int>
                chain <tree_list 0x7fdf662af460 value <pointer_type 0x7fdf662adbd0>
                    chain <tree_list 0x7fdf662af410 value <pointer_type 0x7fdf662ada80>
                        chain <tree_list 0x7fdf662af3c0 value <pointer_type 0x7fdf667b1000> chain <tree_list 0x7fdf662af398>>>>>
            pointer_to_this <pointer_type 0x7fdf662addc8>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>>
    var <parm_decl 0x7fdf662c3c00 task_finished>
    def_stmt GIMPLE_NOP
    version:18
    ptr-info 0x7fdf662a4ed0>
[40;36m ======= node_fun:pp_init========= [0m
[40;36m ======= find relate stmt with task_finished ========= [0m
[40;36m ======= relate node_fun argument:task_finished========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:32: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                ^
_6 = pp_34(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:32: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:task_finished========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:42: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                          ^
_9 = _6 + _8;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:42: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:task_finished========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                 ^
_10 = &_9->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:task_finished========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:39: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                       ^
_11 = pp_34(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:39: warning: use location
_11

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:task_finished========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:49: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                                 ^
_14 = _11 + _13;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:49: warning: use location
_14

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:task_finished========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                 ^
_15 = &_14->process;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
_15

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:task_finished========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:19: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                   ^
_16 = pp_34(D)->pfd;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:19: warning: use location
_16

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:task_finished========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:24: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                        ^
_19 = _16 + _18;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:24: warning: use location
_19

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:task_finished========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:19: warning: use location
  199 |                 pp->pfd[i].fd = -1;
      |                   ^
_20 = pp_34(D)->pfd;
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:19: warning: use location
_20

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:task_finished========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:24: warning: use location
  199 |                 pp->pfd[i].fd = -1;
      |                        ^
_23 = _20 + _22;
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:24: warning: use location
_23

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;46m =======add node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;46m =======add node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;46m =======add node_fun stack:online_cpus========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662d5ca8
    type <pointer_type 0x7fdf662ade70 task_finished_fn
        type <function_type 0x7fdf662add20 type <integer_type 0x7fdf667aa5e8 int>
            QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7fdf662af4b0 value <integer_type 0x7fdf667aa5e8 int>
                chain <tree_list 0x7fdf662af460 value <pointer_type 0x7fdf662adbd0>
                    chain <tree_list 0x7fdf662af410 value <pointer_type 0x7fdf662ada80>
                        chain <tree_list 0x7fdf662af3c0 value <pointer_type 0x7fdf667b1000> chain <tree_list 0x7fdf662af398>>>>>
            pointer_to_this <pointer_type 0x7fdf662addc8>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>>
    var <parm_decl 0x7fdf662c3c00 task_finished>
    def_stmt GIMPLE_NOP
    version:18
    ptr-info 0x7fdf662a4ed0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662d5cf0
    type <pointer_type 0x7fdf667b1000
        type <void_type 0x7fdf667aaf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fdf667b1000>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fdf662ad498>>
    var <parm_decl 0x7fdf662c3c80 pp_cb>
    def_stmt GIMPLE_NOP
    version:19
    ptr-info 0x7fdf662a4ee8>
 <ssa_name 0x7fdf662d5cf0
    type <pointer_type 0x7fdf667b1000
        type <void_type 0x7fdf667aaf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fdf667b1000>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fdf662ad498>>
    var <parm_decl 0x7fdf662c3c80 pp_cb>
    def_stmt GIMPLE_NOP
    version:19
    ptr-info 0x7fdf662a4ee8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662d5cf0
    type <pointer_type 0x7fdf667b1000
        type <void_type 0x7fdf667aaf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fdf667b1000>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fdf662ad498>>
    var <parm_decl 0x7fdf662c3c80 pp_cb>
    def_stmt GIMPLE_NOP
    version:19
    ptr-info 0x7fdf662a4ee8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_36 = VDEF <.MEM_35(D)>
pp_init (&pp, n_15(D), get_next_task_16(D), start_failure_17(D), task_finished_18(D), pp_cb_19(D));
pp_init (&pp, n_15(D), get_next_task_16(D), start_failure_17(D), task_finished_18(D), pp_cb_19(D));
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:344:9: warning: use location
  344 |         pp_init(&pp, n, get_next_task, start_failure, task_finished, pp_cb);
      |         ^
this stmt call this function :pp_init
trace fucntion name:pp_init 
[40;44m =======trace_function_path pp_init  function_call count: 7 level :0========  [0m
 <ssa_name 0x7fdf662d5cf0
    type <pointer_type 0x7fdf667b1000
        type <void_type 0x7fdf667aaf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fdf667b1000>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fdf662ad498>>
    var <parm_decl 0x7fdf662c3c80 pp_cb>
    def_stmt GIMPLE_NOP
    version:19
    ptr-info 0x7fdf662a4ee8>
[40;36m ======= node_fun:pp_init========= [0m
[40;36m ======= find relate stmt with pp_cb ========= [0m
[40;36m ======= relate node_fun argument:pp_cb========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:32: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                ^
_6 = pp_34(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:32: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:pp_cb========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:42: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                          ^
_9 = _6 + _8;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:42: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:pp_cb========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                 ^
_10 = &_9->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:pp_cb========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:39: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                       ^
_11 = pp_34(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:39: warning: use location
_11

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:pp_cb========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:49: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                                 ^
_14 = _11 + _13;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:49: warning: use location
_14

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:pp_cb========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                 ^
_15 = &_14->process;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
_15

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:pp_cb========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:19: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                   ^
_16 = pp_34(D)->pfd;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:19: warning: use location
_16

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:pp_cb========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:24: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                        ^
_19 = _16 + _18;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:24: warning: use location
_19

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:pp_cb========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:19: warning: use location
  199 |                 pp->pfd[i].fd = -1;
      |                   ^
_20 = pp_34(D)->pfd;
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:19: warning: use location
_20

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:pp_cb========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:24: warning: use location
  199 |                 pp->pfd[i].fd = -1;
      |                        ^
_23 = _20 + _22;
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:24: warning: use location
_23

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;46m =======add node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;46m =======add node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;46m =======add node_fun stack:online_cpus========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_36 = VDEF <.MEM_35(D)>
pp_init (&pp, n_15(D), get_next_task_16(D), start_failure_17(D), task_finished_18(D), pp_cb_19(D));
pp_init (&pp, n_15(D), get_next_task_16(D), start_failure_17(D), task_finished_18(D), pp_cb_19(D));
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:344:9: warning: use location
  344 |         pp_init(&pp, n, get_next_task, start_failure, task_finished, pp_cb);
      |         ^
this stmt call this function :pp_init
trace fucntion name:pp_init 
[40;44m =======trace_function_path pp_init  function_call count: 7 level :0========  [0m
 <ssa_name 0x7fdf662d5cf0
    type <pointer_type 0x7fdf667b1000
        type <void_type 0x7fdf667aaf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fdf667b1000>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fdf662ad498>>
    var <parm_decl 0x7fdf662c3c80 pp_cb>
    def_stmt GIMPLE_NOP
    version:19
    ptr-info 0x7fdf662a4ee8>
[40;36m ======= node_fun:pp_init========= [0m
[40;36m ======= find relate stmt with pp_cb ========= [0m
[40;36m ======= relate node_fun argument:pp_cb========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘pp_init’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:32: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                ^
_6 = pp_34(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:32: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:pp_cb========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:42: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                          ^
_9 = _6 + _8;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:42: warning: use location
_9

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:pp_cb========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                 ^
_10 = &_9->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
_10

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:pp_cb========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:39: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                       ^
_11 = pp_34(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:39: warning: use location
_11

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:pp_cb========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:49: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                                 ^
_14 = _11 + _13;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:49: warning: use location
_14

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:pp_cb========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                 ^
_15 = &_14->process;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
_15

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:pp_cb========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:19: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                   ^
_16 = pp_34(D)->pfd;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:19: warning: use location
_16

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:pp_cb========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:24: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                        ^
_19 = _16 + _18;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:24: warning: use location
_19

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:pp_cb========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:19: warning: use location
  199 |                 pp->pfd[i].fd = -1;
      |                   ^
_20 = pp_34(D)->pfd;
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:19: warning: use location
_20

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:pp_cb========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:24: warning: use location
  199 |                 pp->pfd[i].fd = -1;
      |                        ^
_23 = _20 + _22;
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:24: warning: use location
_23

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;46m =======add node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;46m =======add node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;46m =======add node_fun stack:online_cpus========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662d5cf0
    type <pointer_type 0x7fdf667b1000
        type <void_type 0x7fdf667aaf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fdf667b1000>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fdf662ad498>>
    var <parm_decl 0x7fdf662c3c80 pp_cb>
    def_stmt GIMPLE_NOP
    version:19
    ptr-info 0x7fdf662a4ee8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662d5d38
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf662cdc60 code>
    def_stmt code_22 = pp_start_one (&pp);
    version:22>
 <ssa_name 0x7fdf662d5d38
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf662cdc60 code>
    def_stmt code_22 = pp_start_one (&pp);
    version:22>

 ================== pre trace ptable ================== 
trace fucntion name:pp_start_one 
[40;44m =======trace_function_path pp_start_one  function_call count: 5 level :888========  [0m
 <ssa_name 0x7fdf662d5d38
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf662cdc60 code>
    def_stmt code_22 = pp_start_one (&pp);
    version:22>
[40;36m ======= node_fun:pp_start_one========= [0m
[40;36m ======= find relate stmt with code ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:start_command========= [0m
[40;46m =======add node_fun stack:start_command========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662d5d38
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf662cdc60 code>
    def_stmt code_22 = pp_start_one (&pp);
    version:22>
is Other function pp_start_one
 
 Start check Pointer Collect  

======================================================================
pp_cleanup (&pp);
In function ‘run_processes_parallel’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:371:9: warning: use location
  371 |         pp_cleanup(&pp);
      |         ^
this stmt call this function :pp_cleanup
trace fucntion name:pp_cleanup 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_1 = -code_22;
./benchmarks/git/use_after_free_2/git_uaf_2.c:355:33: warning: use location
  355 |                                 kill_children(&pp, -code);
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
kill_children (&pp, _1);
./benchmarks/git/use_after_free_2/git_uaf_2.c:355:33: warning: use location
this stmt call this function :kill_children
trace fucntion name:kill_children 
[40;44m =======trace_function_path kill_children  function_call count: 1 level :0========  [0m
 <ssa_name 0x7fdf662d5d38
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf662cdc60 code>
    def_stmt code_22 = pp_start_one (&pp);
    version:22>
[40;36m ======= node_fun:kill_children========= [0m
[40;36m ======= find relate stmt with code ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:kill========= [0m
[40;46m =======add node_fun stack:kill========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (code_22 < 0)
./benchmarks/git/use_after_free_2/git_uaf_2.c:353:28: warning: use location
  353 |                         if (code < 0) {
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_37 = VDEF <.MEM_31>
code_22 = pp_start_one (&pp);
code_22 = pp_start_one (&pp);
./benchmarks/git/use_after_free_2/git_uaf_2.c:350:32: warning: use location
  350 |                         code = pp_start_one(&pp);
      |                                ^
this stmt call this function :pp_start_one
trace fucntion name:pp_start_one 
[40;44m =======trace_function_path pp_start_one  function_call count: 5 level :0========  [0m
 <ssa_name 0x7fdf662d5d38
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf662cdc60 code>
    def_stmt code_22 = pp_start_one (&pp);
    version:22>
[40;36m ======= node_fun:pp_start_one========= [0m
[40;36m ======= find relate stmt with code ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:start_command========= [0m
[40;46m =======add node_fun stack:start_command========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662d5d38
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf662cdc60 code>
    def_stmt code_22 = pp_start_one (&pp);
    version:22>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662d5990
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _1 = -code_22;
    version:1>
 <ssa_name 0x7fdf662d5990
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _1 = -code_22;
    version:1>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662d5990
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _1 = -code_22;
    version:1>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_39 = VDEF <.MEM_38>
kill_children (&pp, _1);
kill_children (&pp, _1);
./benchmarks/git/use_after_free_2/git_uaf_2.c:355:33: warning: use location
  355 |                                 kill_children(&pp, -code);
      |                                 ^
this stmt call this function :kill_children
trace fucntion name:kill_children 
[40;44m =======trace_function_path kill_children  function_call count: 1 level :0========  [0m
 <ssa_name 0x7fdf662d5990
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _1 = -code_22;
    version:1>
[40;36m ======= node_fun:kill_children========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:kill========= [0m
[40;46m =======add node_fun stack:kill========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_39 = VDEF <.MEM_38>
kill_children (&pp, _1);
kill_children (&pp, _1);
./benchmarks/git/use_after_free_2/git_uaf_2.c:355:33: warning: use location
this stmt call this function :kill_children
trace fucntion name:kill_children 
[40;44m =======trace_function_path kill_children  function_call count: 1 level :0========  [0m
 <ssa_name 0x7fdf662d5990
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _1 = -code_22;
    version:1>
[40;36m ======= node_fun:kill_children========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:kill========= [0m
[40;46m =======add node_fun stack:kill========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662d5990
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _1 = -code_22;
    version:1>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662d5dc8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf662cdc60 code>
    def_stmt code_29 = pp_collect_finished (&pp);
    version:29>
 <ssa_name 0x7fdf662d5dc8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf662cdc60 code>
    def_stmt code_29 = pp_collect_finished (&pp);
    version:29>

 ================== pre trace ptable ================== 
trace fucntion name:pp_collect_finished 
[40;44m =======trace_function_path pp_collect_finished  function_call count: 5 level :888========  [0m
 <ssa_name 0x7fdf662d5dc8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf662cdc60 code>
    def_stmt code_29 = pp_collect_finished (&pp);
    version:29>
[40;36m ======= node_fun:pp_collect_finished========= [0m
[40;36m ======= find relate stmt with code ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:fputs========= [0m
[40;46m =======add node_fun stack:fputs========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:finish_command========= [0m
[40;46m =======add node_fun stack:finish_command========= [0m
[40;44m =======trace_function_path finish_command  function_call count: 2 level :889========  [0m
 <ssa_name 0x7fdf662d5dc8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf662cdc60 code>
    def_stmt code_29 = pp_collect_finished (&pp);
    version:29>
[40;36m ======= node_fun:finish_command========= [0m
[40;36m ======= find relate stmt with code ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_clear========= [0m
[40;46m =======add node_fun stack:child_process_clear========= [0m
[40;44m =======trace_function_path child_process_clear  function_call count: 1 level :890========  [0m
 <ssa_name 0x7fdf662d5dc8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf662cdc60 code>
    def_stmt code_29 = pp_collect_finished (&pp);
    version:29>
[40;36m ======= node_fun:child_process_clear========= [0m
[40;36m ======= find relate stmt with code ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;46m =======add node_fun stack:wait_or_whine========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662d5dc8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf662cdc60 code>
    def_stmt code_29 = pp_collect_finished (&pp);
    version:29>
is Other function pp_collect_finished
 
 Start check Pointer Collect  

======================================================================
pp_cleanup (&pp);
./benchmarks/git/use_after_free_2/git_uaf_2.c:371:9: warning: use location
  371 |         pp_cleanup(&pp);
      |         ^
this stmt call this function :pp_cleanup
trace fucntion name:pp_cleanup 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_7 = -code_29;
./benchmarks/git/use_after_free_2/git_uaf_2.c:367:33: warning: use location
  367 |                                 kill_children(&pp, -code);
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
kill_children (&pp, _7);
./benchmarks/git/use_after_free_2/git_uaf_2.c:367:33: warning: use location
this stmt call this function :kill_children
trace fucntion name:kill_children 
[40;44m =======trace_function_path kill_children  function_call count: 1 level :0========  [0m
 <ssa_name 0x7fdf662d5dc8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf662cdc60 code>
    def_stmt code_29 = pp_collect_finished (&pp);
    version:29>
[40;36m ======= node_fun:kill_children========= [0m
[40;36m ======= find relate stmt with code ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:kill========= [0m
[40;46m =======add node_fun stack:kill========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (code_29 < 0)
./benchmarks/git/use_after_free_2/git_uaf_2.c:366:28: warning: use location
  366 |                         if (code < 0)
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_42 = VDEF <.MEM_41>
code_29 = pp_collect_finished (&pp);
code_29 = pp_collect_finished (&pp);
./benchmarks/git/use_after_free_2/git_uaf_2.c:363:24: warning: use location
  363 |                 code = pp_collect_finished(&pp);
      |                        ^
this stmt call this function :pp_collect_finished
trace fucntion name:pp_collect_finished 
[40;44m =======trace_function_path pp_collect_finished  function_call count: 5 level :0========  [0m
 <ssa_name 0x7fdf662d5dc8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf662cdc60 code>
    def_stmt code_29 = pp_collect_finished (&pp);
    version:29>
[40;36m ======= node_fun:pp_collect_finished========= [0m
[40;36m ======= find relate stmt with code ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;46m =======add node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:fputs========= [0m
[40;46m =======add node_fun stack:fputs========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;46m =======add node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;46m =======add node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:finish_command========= [0m
[40;46m =======add node_fun stack:finish_command========= [0m
[40;44m =======trace_function_path finish_command  function_call count: 2 level :1========  [0m
 <ssa_name 0x7fdf662d5dc8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf662cdc60 code>
    def_stmt code_29 = pp_collect_finished (&pp);
    version:29>
[40;36m ======= node_fun:finish_command========= [0m
[40;36m ======= find relate stmt with code ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_clear========= [0m
[40;46m =======add node_fun stack:child_process_clear========= [0m
[40;44m =======trace_function_path child_process_clear  function_call count: 1 level :2========  [0m
 <ssa_name 0x7fdf662d5dc8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf662cdc60 code>
    def_stmt code_29 = pp_collect_finished (&pp);
    version:29>
[40;36m ======= node_fun:child_process_clear========= [0m
[40;36m ======= find relate stmt with code ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;46m =======add node_fun stack:wait_or_whine========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662d5dc8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf662cdc60 code>
    def_stmt code_29 = pp_collect_finished (&pp);
    version:29>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662d5b40
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _7 = -code_29;
    version:7>
 <ssa_name 0x7fdf662d5b40
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _7 = -code_29;
    version:7>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662d5b40
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _7 = -code_29;
    version:7>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_44 = VDEF <.MEM_43>
kill_children (&pp, _7);
kill_children (&pp, _7);
./benchmarks/git/use_after_free_2/git_uaf_2.c:367:33: warning: use location
  367 |                                 kill_children(&pp, -code);
      |                                 ^
this stmt call this function :kill_children
trace fucntion name:kill_children 
[40;44m =======trace_function_path kill_children  function_call count: 1 level :0========  [0m
 <ssa_name 0x7fdf662d5b40
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _7 = -code_29;
    version:7>
[40;36m ======= node_fun:kill_children========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:kill========= [0m
[40;46m =======add node_fun stack:kill========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_44 = VDEF <.MEM_43>
kill_children (&pp, _7);
kill_children (&pp, _7);
./benchmarks/git/use_after_free_2/git_uaf_2.c:367:33: warning: use location
this stmt call this function :kill_children
trace fucntion name:kill_children 
[40;44m =======trace_function_path kill_children  function_call count: 1 level :0========  [0m
 <ssa_name 0x7fdf662d5b40
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _7 = -code_29;
    version:7>
[40;36m ======= node_fun:kill_children========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:kill========= [0m
[40;46m =======add node_fun stack:kill========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662d5b40
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _7 = -code_29;
    version:7>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:run_processes_parallel========= [0m
[40;44m =======node_fun:child_process_clear========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path child_process_clear  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;33m =======POP node_fun stack:argv_array_clear========= [0m
[40;42m =======pre_check_funciton:child_process_clear========= [0m
[40;42m =======start_check_funciton:child_process_clear========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fdf662de318
    type <pointer_type 0x7fdf662bf0a8
        type <record_type 0x7fdf662bb690 argv_array TI
            size <integer_cst 0x7fdf66795c00 constant 128>
            unit-size <integer_cst 0x7fdf66795c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb690 fields <field_decl 0x7fdf662b8d10 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bf0a8>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _1 = &child_3(D)->args;
    version:1
    ptr-info 0x7fdf662a4f00>
 <ssa_name 0x7fdf662de318
    type <pointer_type 0x7fdf662bf0a8
        type <record_type 0x7fdf662bb690 argv_array TI
            size <integer_cst 0x7fdf66795c00 constant 128>
            unit-size <integer_cst 0x7fdf66795c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb690 fields <field_decl 0x7fdf662b8d10 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bf0a8>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _1 = &child_3(D)->args;
    version:1
    ptr-info 0x7fdf662a4f00>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662de318
    type <pointer_type 0x7fdf662bf0a8
        type <record_type 0x7fdf662bb690 argv_array TI
            size <integer_cst 0x7fdf66795c00 constant 128>
            unit-size <integer_cst 0x7fdf66795c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb690 fields <field_decl 0x7fdf662b8d10 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bf0a8>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _1 = &child_3(D)->args;
    version:1
    ptr-info 0x7fdf662a4f00>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_5 = VDEF <.MEM_4(D)>
argv_array_clear (_1);
argv_array_clear (_1);
In function ‘child_process_clear’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:328:9: warning: use location
  328 |         argv_array_clear(&child->args);
      |         ^
this stmt call this function :argv_array_clear
trace fucntion name:argv_array_clear 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_5 = VDEF <.MEM_4(D)>
argv_array_clear (_1);
argv_array_clear (_1);
./benchmarks/git/use_after_free_2/git_uaf_2.c:328:9: warning: use location
this stmt call this function :argv_array_clear
trace fucntion name:argv_array_clear 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662de318
    type <pointer_type 0x7fdf662bf0a8
        type <record_type 0x7fdf662bb690 argv_array TI
            size <integer_cst 0x7fdf66795c00 constant 128>
            unit-size <integer_cst 0x7fdf66795c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb690 fields <field_decl 0x7fdf662b8d10 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bf0a8>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _1 = &child_3(D)->args;
    version:1
    ptr-info 0x7fdf662a4f00>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662de360
    type <pointer_type 0x7fdf662bf0a8
        type <record_type 0x7fdf662bb690 argv_array TI
            size <integer_cst 0x7fdf66795c00 constant 128>
            unit-size <integer_cst 0x7fdf66795c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb690 fields <field_decl 0x7fdf662b8d10 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bf0a8>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = &child_3(D)->env_array;
    version:2
    ptr-info 0x7fdf662a4f18>
 <ssa_name 0x7fdf662de360
    type <pointer_type 0x7fdf662bf0a8
        type <record_type 0x7fdf662bb690 argv_array TI
            size <integer_cst 0x7fdf66795c00 constant 128>
            unit-size <integer_cst 0x7fdf66795c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb690 fields <field_decl 0x7fdf662b8d10 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bf0a8>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = &child_3(D)->env_array;
    version:2
    ptr-info 0x7fdf662a4f18>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662de360
    type <pointer_type 0x7fdf662bf0a8
        type <record_type 0x7fdf662bb690 argv_array TI
            size <integer_cst 0x7fdf66795c00 constant 128>
            unit-size <integer_cst 0x7fdf66795c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb690 fields <field_decl 0x7fdf662b8d10 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bf0a8>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = &child_3(D)->env_array;
    version:2
    ptr-info 0x7fdf662a4f18>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_6 = VDEF <.MEM_5>
argv_array_clear (_2);
argv_array_clear (_2);
./benchmarks/git/use_after_free_2/git_uaf_2.c:329:9: warning: use location
  329 |         argv_array_clear(&child->env_array);
      |         ^
this stmt call this function :argv_array_clear
trace fucntion name:argv_array_clear 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_6 = VDEF <.MEM_5>
argv_array_clear (_2);
argv_array_clear (_2);
./benchmarks/git/use_after_free_2/git_uaf_2.c:329:9: warning: use location
this stmt call this function :argv_array_clear
trace fucntion name:argv_array_clear 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662de360
    type <pointer_type 0x7fdf662bf0a8
        type <record_type 0x7fdf662bb690 argv_array TI
            size <integer_cst 0x7fdf66795c00 constant 128>
            unit-size <integer_cst 0x7fdf66795c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb690 fields <field_decl 0x7fdf662b8d10 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bf0a8>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = &child_3(D)->env_array;
    version:2
    ptr-info 0x7fdf662a4f18>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:child_process_clear========= [0m
[40;44m =======node_fun:finish_command========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path finish_command  function_call count: 2 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:child_process_clear========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path child_process_clear  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;33m =======POP node_fun stack:argv_array_clear========= [0m
[40;42m =======pre_check_funciton:child_process_clear========= [0m
[40;42m =======start_check_funciton:child_process_clear========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fdf662de318
    type <pointer_type 0x7fdf662bf0a8
        type <record_type 0x7fdf662bb690 argv_array TI
            size <integer_cst 0x7fdf66795c00 constant 128>
            unit-size <integer_cst 0x7fdf66795c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb690 fields <field_decl 0x7fdf662b8d10 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bf0a8>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _1 = &child_3(D)->args;
    version:1
    ptr-info 0x7fdf662a4f00>
 <ssa_name 0x7fdf662de318
    type <pointer_type 0x7fdf662bf0a8
        type <record_type 0x7fdf662bb690 argv_array TI
            size <integer_cst 0x7fdf66795c00 constant 128>
            unit-size <integer_cst 0x7fdf66795c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb690 fields <field_decl 0x7fdf662b8d10 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bf0a8>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _1 = &child_3(D)->args;
    version:1
    ptr-info 0x7fdf662a4f00>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662de318
    type <pointer_type 0x7fdf662bf0a8
        type <record_type 0x7fdf662bb690 argv_array TI
            size <integer_cst 0x7fdf66795c00 constant 128>
            unit-size <integer_cst 0x7fdf66795c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb690 fields <field_decl 0x7fdf662b8d10 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bf0a8>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _1 = &child_3(D)->args;
    version:1
    ptr-info 0x7fdf662a4f00>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_5 = VDEF <.MEM_4(D)>
argv_array_clear (_1);
argv_array_clear (_1);
In function ‘finish_command’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:328:9: warning: use location
  328 |         argv_array_clear(&child->args);
      |         ^
this stmt call this function :argv_array_clear
trace fucntion name:argv_array_clear 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_5 = VDEF <.MEM_4(D)>
argv_array_clear (_1);
argv_array_clear (_1);
./benchmarks/git/use_after_free_2/git_uaf_2.c:328:9: warning: use location
this stmt call this function :argv_array_clear
trace fucntion name:argv_array_clear 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662de318
    type <pointer_type 0x7fdf662bf0a8
        type <record_type 0x7fdf662bb690 argv_array TI
            size <integer_cst 0x7fdf66795c00 constant 128>
            unit-size <integer_cst 0x7fdf66795c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb690 fields <field_decl 0x7fdf662b8d10 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bf0a8>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _1 = &child_3(D)->args;
    version:1
    ptr-info 0x7fdf662a4f00>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662de360
    type <pointer_type 0x7fdf662bf0a8
        type <record_type 0x7fdf662bb690 argv_array TI
            size <integer_cst 0x7fdf66795c00 constant 128>
            unit-size <integer_cst 0x7fdf66795c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb690 fields <field_decl 0x7fdf662b8d10 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bf0a8>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = &child_3(D)->env_array;
    version:2
    ptr-info 0x7fdf662a4f18>
 <ssa_name 0x7fdf662de360
    type <pointer_type 0x7fdf662bf0a8
        type <record_type 0x7fdf662bb690 argv_array TI
            size <integer_cst 0x7fdf66795c00 constant 128>
            unit-size <integer_cst 0x7fdf66795c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb690 fields <field_decl 0x7fdf662b8d10 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bf0a8>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = &child_3(D)->env_array;
    version:2
    ptr-info 0x7fdf662a4f18>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662de360
    type <pointer_type 0x7fdf662bf0a8
        type <record_type 0x7fdf662bb690 argv_array TI
            size <integer_cst 0x7fdf66795c00 constant 128>
            unit-size <integer_cst 0x7fdf66795c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb690 fields <field_decl 0x7fdf662b8d10 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bf0a8>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = &child_3(D)->env_array;
    version:2
    ptr-info 0x7fdf662a4f18>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_6 = VDEF <.MEM_5>
argv_array_clear (_2);
argv_array_clear (_2);
./benchmarks/git/use_after_free_2/git_uaf_2.c:329:9: warning: use location
  329 |         argv_array_clear(&child->env_array);
      |         ^
this stmt call this function :argv_array_clear
trace fucntion name:argv_array_clear 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_6 = VDEF <.MEM_5>
argv_array_clear (_2);
argv_array_clear (_2);
./benchmarks/git/use_after_free_2/git_uaf_2.c:329:9: warning: use location
this stmt call this function :argv_array_clear
trace fucntion name:argv_array_clear 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662de360
    type <pointer_type 0x7fdf662bf0a8
        type <record_type 0x7fdf662bb690 argv_array TI
            size <integer_cst 0x7fdf66795c00 constant 128>
            unit-size <integer_cst 0x7fdf66795c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb690 fields <field_decl 0x7fdf662b8d10 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bf0a8>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = &child_3(D)->env_array;
    version:2
    ptr-info 0x7fdf662a4f18>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:child_process_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;33m =======POP node_fun stack:wait_or_whine========= [0m
[40;42m =======pre_check_funciton:finish_command========= [0m
[40;42m =======start_check_funciton:finish_command========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fdf662de558
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _3 = cmd_5(D)->pid;
    version:3>
 <ssa_name 0x7fdf662de558
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _3 = cmd_5(D)->pid;
    version:3>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662de558
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _3 = cmd_5(D)->pid;
    version:3>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_9 = VDEF <.MEM_8(D)>
ret_7 = wait_or_whine (_3, _2, 0);
ret_7 = wait_or_whine (_3, _2, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:15: warning: use location
  321 |     int ret = wait_or_whine(cmd->pid, cmd->argv[0], 0);
      |               ^
this stmt call this function :wait_or_whine
trace fucntion name:wait_or_whine 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_9 = VDEF <.MEM_8(D)>
ret_7 = wait_or_whine (_3, _2, 0);
ret_7 = wait_or_whine (_3, _2, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:15: warning: use location
this stmt call this function :wait_or_whine
trace fucntion name:wait_or_whine 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662de558
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _3 = cmd_5(D)->pid;
    version:3>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662de510
    type <pointer_type 0x7fdf662b6888
        type <integer_type 0x7fdf662b67e0 char readonly QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b6888>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fdf662bb5e8>>
   
    def_stmt _2 = *_1;
    version:2
    ptr-info 0x7fdf662a4f60>
 <ssa_name 0x7fdf662de510
    type <pointer_type 0x7fdf662b6888
        type <integer_type 0x7fdf662b67e0 char readonly QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b6888>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fdf662bb5e8>>
   
    def_stmt _2 = *_1;
    version:2
    ptr-info 0x7fdf662a4f60>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662de510
    type <pointer_type 0x7fdf662b6888
        type <integer_type 0x7fdf662b67e0 char readonly QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b6888>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fdf662bb5e8>>
   
    def_stmt _2 = *_1;
    version:2
    ptr-info 0x7fdf662a4f60>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_9 = VDEF <.MEM_8(D)>
ret_7 = wait_or_whine (_3, _2, 0);
ret_7 = wait_or_whine (_3, _2, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:15: warning: use location
this stmt call this function :wait_or_whine
trace fucntion name:wait_or_whine 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_9 = VDEF <.MEM_8(D)>
ret_7 = wait_or_whine (_3, _2, 0);
ret_7 = wait_or_whine (_3, _2, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:15: warning: use location
this stmt call this function :wait_or_whine
trace fucntion name:wait_or_whine 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662de510
    type <pointer_type 0x7fdf662b6888
        type <integer_type 0x7fdf662b67e0 char readonly QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b6888>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fdf662bb5e8>>
   
    def_stmt _2 = *_1;
    version:2
    ptr-info 0x7fdf662a4f60>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662de5e8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf662db3f0 ret>
    def_stmt ret_7 = wait_or_whine (_3, _2, 0);
    version:7>
 <ssa_name 0x7fdf662de5e8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf662db3f0 ret>
    def_stmt ret_7 = wait_or_whine (_3, _2, 0);
    version:7>

 ================== pre trace ptable ================== 
trace fucntion name:wait_or_whine 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662de5e8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf662db3f0 ret>
    def_stmt ret_7 = wait_or_whine (_3, _2, 0);
    version:7>
is Other function wait_or_whine
 
 Start check Pointer Collect  

======================================================================
# .MEM_9 = VDEF <.MEM_8(D)>
ret_7 = wait_or_whine (_3, _2, 0);
ret_7 = wait_or_whine (_3, _2, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:15: warning: use location
this stmt call this function :wait_or_whine
trace fucntion name:wait_or_whine 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_9 = VDEF <.MEM_8(D)>
ret_7 = wait_or_whine (_3, _2, 0);
ret_7 = wait_or_whine (_3, _2, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:15: warning: use location
this stmt call this function :wait_or_whine
trace fucntion name:wait_or_whine 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662de5e8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf662db3f0 ret>
    def_stmt ret_7 = wait_or_whine (_3, _2, 0);
    version:7>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662de5a0
    type <pointer_type 0x7fdf662bb7e0
        type <record_type 0x7fdf662bb738 child_process BLK
            size <integer_cst 0x7fdf662a4978 constant 640>
            unit-size <integer_cst 0x7fdf662a4948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738 fields <field_decl 0x7fdf662bd850 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fdf662c3d80 cmd>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7fdf662a4f78>
 <ssa_name 0x7fdf662de5a0
    type <pointer_type 0x7fdf662bb7e0
        type <record_type 0x7fdf662bb738 child_process BLK
            size <integer_cst 0x7fdf662a4978 constant 640>
            unit-size <integer_cst 0x7fdf662a4948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738 fields <field_decl 0x7fdf662bd850 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fdf662c3d80 cmd>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7fdf662a4f78>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662de5a0
    type <pointer_type 0x7fdf662bb7e0
        type <record_type 0x7fdf662bb738 child_process BLK
            size <integer_cst 0x7fdf662a4978 constant 640>
            unit-size <integer_cst 0x7fdf662a4948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738 fields <field_decl 0x7fdf662bd850 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fdf662c3d80 cmd>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7fdf662a4f78>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_10 = VDEF <.MEM_9>
child_process_clear (cmd_5(D));
child_process_clear (cmd_5(D));
./benchmarks/git/use_after_free_2/git_uaf_2.c:322:5: warning: use location
  322 |     child_process_clear(cmd);
      |     ^
this stmt call this function :child_process_clear
trace fucntion name:child_process_clear 
[40;44m =======trace_function_path child_process_clear  function_call count: 1 level :0========  [0m
 <ssa_name 0x7fdf662de5a0
    type <pointer_type 0x7fdf662bb7e0
        type <record_type 0x7fdf662bb738 child_process BLK
            size <integer_cst 0x7fdf662a4978 constant 640>
            unit-size <integer_cst 0x7fdf662a4948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738 fields <field_decl 0x7fdf662bd850 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fdf662c3d80 cmd>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7fdf662a4f78>
[40;36m ======= node_fun:child_process_clear========= [0m
[40;36m ======= find relate stmt with cmd ========= [0m
[40;36m ======= relate node_fun argument:cmd========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘child_process_clear’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:328:9: warning: use location
  328 |         argv_array_clear(&child->args);
      |         ^
_1 = &child_3(D)->args;
./benchmarks/git/use_after_free_2/git_uaf_2.c:328:9: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cmd========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:329:9: warning: use location
  329 |         argv_array_clear(&child->env_array);
      |         ^
_2 = &child_3(D)->env_array;
./benchmarks/git/use_after_free_2/git_uaf_2.c:329:9: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m

 ================== trace ================== 
trace fucntion free:0 
_3 = cmd_5(D)->pid;
In function ‘finish_command’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:15: warning: use location
  321 |     int ret = wait_or_whine(cmd->pid, cmd->argv[0], 0);
      |               ^
ret_7 = wait_or_whine (_3, _2, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:15: warning: use location
this stmt call this function :wait_or_whine
trace fucntion name:wait_or_whine 

 ================== trace ================== 
trace fucntion free:0 
_1 = cmd_5(D)->argv;
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:42: warning: use location
  321 |     int ret = wait_or_whine(cmd->pid, cmd->argv[0], 0);
      |                                          ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662de5a0
    type <pointer_type 0x7fdf662bb7e0
        type <record_type 0x7fdf662bb738 child_process BLK
            size <integer_cst 0x7fdf662a4978 constant 640>
            unit-size <integer_cst 0x7fdf662a4948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738 fields <field_decl 0x7fdf662bd850 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fdf662c3d80 cmd>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7fdf662a4f78>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:finish_command========= [0m
[40;44m =======node_fun:pp_collect_finished========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path pp_collect_finished  function_call count: 5 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;33m =======POP node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:fputs========= [0m
[40;33m =======POP node_fun stack:fputs========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;33m =======POP node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;33m =======POP node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:finish_command========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path finish_command  function_call count: 2 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:child_process_clear========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path child_process_clear  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;33m =======POP node_fun stack:argv_array_clear========= [0m
[40;42m =======pre_check_funciton:child_process_clear========= [0m
[40;42m =======start_check_funciton:child_process_clear========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fdf662de318
    type <pointer_type 0x7fdf662bf0a8
        type <record_type 0x7fdf662bb690 argv_array TI
            size <integer_cst 0x7fdf66795c00 constant 128>
            unit-size <integer_cst 0x7fdf66795c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb690 fields <field_decl 0x7fdf662b8d10 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bf0a8>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _1 = &child_3(D)->args;
    version:1
    ptr-info 0x7fdf662a4f00>
 <ssa_name 0x7fdf662de318
    type <pointer_type 0x7fdf662bf0a8
        type <record_type 0x7fdf662bb690 argv_array TI
            size <integer_cst 0x7fdf66795c00 constant 128>
            unit-size <integer_cst 0x7fdf66795c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb690 fields <field_decl 0x7fdf662b8d10 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bf0a8>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _1 = &child_3(D)->args;
    version:1
    ptr-info 0x7fdf662a4f00>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662de318
    type <pointer_type 0x7fdf662bf0a8
        type <record_type 0x7fdf662bb690 argv_array TI
            size <integer_cst 0x7fdf66795c00 constant 128>
            unit-size <integer_cst 0x7fdf66795c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb690 fields <field_decl 0x7fdf662b8d10 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bf0a8>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _1 = &child_3(D)->args;
    version:1
    ptr-info 0x7fdf662a4f00>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_5 = VDEF <.MEM_4(D)>
argv_array_clear (_1);
argv_array_clear (_1);
In function ‘pp_collect_finished’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:328:9: warning: use location
  328 |         argv_array_clear(&child->args);
      |         ^
this stmt call this function :argv_array_clear
trace fucntion name:argv_array_clear 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_5 = VDEF <.MEM_4(D)>
argv_array_clear (_1);
argv_array_clear (_1);
./benchmarks/git/use_after_free_2/git_uaf_2.c:328:9: warning: use location
this stmt call this function :argv_array_clear
trace fucntion name:argv_array_clear 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662de318
    type <pointer_type 0x7fdf662bf0a8
        type <record_type 0x7fdf662bb690 argv_array TI
            size <integer_cst 0x7fdf66795c00 constant 128>
            unit-size <integer_cst 0x7fdf66795c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb690 fields <field_decl 0x7fdf662b8d10 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bf0a8>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _1 = &child_3(D)->args;
    version:1
    ptr-info 0x7fdf662a4f00>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662de360
    type <pointer_type 0x7fdf662bf0a8
        type <record_type 0x7fdf662bb690 argv_array TI
            size <integer_cst 0x7fdf66795c00 constant 128>
            unit-size <integer_cst 0x7fdf66795c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb690 fields <field_decl 0x7fdf662b8d10 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bf0a8>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = &child_3(D)->env_array;
    version:2
    ptr-info 0x7fdf662a4f18>
 <ssa_name 0x7fdf662de360
    type <pointer_type 0x7fdf662bf0a8
        type <record_type 0x7fdf662bb690 argv_array TI
            size <integer_cst 0x7fdf66795c00 constant 128>
            unit-size <integer_cst 0x7fdf66795c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb690 fields <field_decl 0x7fdf662b8d10 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bf0a8>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = &child_3(D)->env_array;
    version:2
    ptr-info 0x7fdf662a4f18>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662de360
    type <pointer_type 0x7fdf662bf0a8
        type <record_type 0x7fdf662bb690 argv_array TI
            size <integer_cst 0x7fdf66795c00 constant 128>
            unit-size <integer_cst 0x7fdf66795c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb690 fields <field_decl 0x7fdf662b8d10 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bf0a8>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = &child_3(D)->env_array;
    version:2
    ptr-info 0x7fdf662a4f18>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_6 = VDEF <.MEM_5>
argv_array_clear (_2);
argv_array_clear (_2);
./benchmarks/git/use_after_free_2/git_uaf_2.c:329:9: warning: use location
  329 |         argv_array_clear(&child->env_array);
      |         ^
this stmt call this function :argv_array_clear
trace fucntion name:argv_array_clear 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_6 = VDEF <.MEM_5>
argv_array_clear (_2);
argv_array_clear (_2);
./benchmarks/git/use_after_free_2/git_uaf_2.c:329:9: warning: use location
this stmt call this function :argv_array_clear
trace fucntion name:argv_array_clear 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662de360
    type <pointer_type 0x7fdf662bf0a8
        type <record_type 0x7fdf662bb690 argv_array TI
            size <integer_cst 0x7fdf66795c00 constant 128>
            unit-size <integer_cst 0x7fdf66795c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb690 fields <field_decl 0x7fdf662b8d10 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bf0a8>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = &child_3(D)->env_array;
    version:2
    ptr-info 0x7fdf662a4f18>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:child_process_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;33m =======POP node_fun stack:wait_or_whine========= [0m
[40;42m =======pre_check_funciton:finish_command========= [0m
[40;42m =======start_check_funciton:finish_command========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fdf662de558
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _3 = cmd_5(D)->pid;
    version:3>
 <ssa_name 0x7fdf662de558
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _3 = cmd_5(D)->pid;
    version:3>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662de558
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _3 = cmd_5(D)->pid;
    version:3>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_9 = VDEF <.MEM_8(D)>
ret_7 = wait_or_whine (_3, _2, 0);
ret_7 = wait_or_whine (_3, _2, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:15: warning: use location
  321 |     int ret = wait_or_whine(cmd->pid, cmd->argv[0], 0);
      |               ^
this stmt call this function :wait_or_whine
trace fucntion name:wait_or_whine 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_9 = VDEF <.MEM_8(D)>
ret_7 = wait_or_whine (_3, _2, 0);
ret_7 = wait_or_whine (_3, _2, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:15: warning: use location
this stmt call this function :wait_or_whine
trace fucntion name:wait_or_whine 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662de558
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _3 = cmd_5(D)->pid;
    version:3>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662de510
    type <pointer_type 0x7fdf662b6888
        type <integer_type 0x7fdf662b67e0 char readonly QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b6888>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fdf662bb5e8>>
   
    def_stmt _2 = *_1;
    version:2
    ptr-info 0x7fdf662a4f60>
 <ssa_name 0x7fdf662de510
    type <pointer_type 0x7fdf662b6888
        type <integer_type 0x7fdf662b67e0 char readonly QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b6888>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fdf662bb5e8>>
   
    def_stmt _2 = *_1;
    version:2
    ptr-info 0x7fdf662a4f60>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662de510
    type <pointer_type 0x7fdf662b6888
        type <integer_type 0x7fdf662b67e0 char readonly QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b6888>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fdf662bb5e8>>
   
    def_stmt _2 = *_1;
    version:2
    ptr-info 0x7fdf662a4f60>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_9 = VDEF <.MEM_8(D)>
ret_7 = wait_or_whine (_3, _2, 0);
ret_7 = wait_or_whine (_3, _2, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:15: warning: use location
this stmt call this function :wait_or_whine
trace fucntion name:wait_or_whine 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_9 = VDEF <.MEM_8(D)>
ret_7 = wait_or_whine (_3, _2, 0);
ret_7 = wait_or_whine (_3, _2, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:15: warning: use location
this stmt call this function :wait_or_whine
trace fucntion name:wait_or_whine 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662de510
    type <pointer_type 0x7fdf662b6888
        type <integer_type 0x7fdf662b67e0 char readonly QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b6888>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fdf662bb5e8>>
   
    def_stmt _2 = *_1;
    version:2
    ptr-info 0x7fdf662a4f60>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662de5e8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf662db3f0 ret>
    def_stmt ret_7 = wait_or_whine (_3, _2, 0);
    version:7>
 <ssa_name 0x7fdf662de5e8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf662db3f0 ret>
    def_stmt ret_7 = wait_or_whine (_3, _2, 0);
    version:7>

 ================== pre trace ptable ================== 
trace fucntion name:wait_or_whine 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662de5e8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf662db3f0 ret>
    def_stmt ret_7 = wait_or_whine (_3, _2, 0);
    version:7>
is Other function wait_or_whine
 
 Start check Pointer Collect  

======================================================================
# .MEM_9 = VDEF <.MEM_8(D)>
ret_7 = wait_or_whine (_3, _2, 0);
ret_7 = wait_or_whine (_3, _2, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:15: warning: use location
this stmt call this function :wait_or_whine
trace fucntion name:wait_or_whine 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_9 = VDEF <.MEM_8(D)>
ret_7 = wait_or_whine (_3, _2, 0);
ret_7 = wait_or_whine (_3, _2, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:15: warning: use location
this stmt call this function :wait_or_whine
trace fucntion name:wait_or_whine 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662de5e8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf662db3f0 ret>
    def_stmt ret_7 = wait_or_whine (_3, _2, 0);
    version:7>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662de5a0
    type <pointer_type 0x7fdf662bb7e0
        type <record_type 0x7fdf662bb738 child_process BLK
            size <integer_cst 0x7fdf662a4978 constant 640>
            unit-size <integer_cst 0x7fdf662a4948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738 fields <field_decl 0x7fdf662bd850 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fdf662c3d80 cmd>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7fdf662a4f78>
 <ssa_name 0x7fdf662de5a0
    type <pointer_type 0x7fdf662bb7e0
        type <record_type 0x7fdf662bb738 child_process BLK
            size <integer_cst 0x7fdf662a4978 constant 640>
            unit-size <integer_cst 0x7fdf662a4948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738 fields <field_decl 0x7fdf662bd850 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fdf662c3d80 cmd>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7fdf662a4f78>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662de5a0
    type <pointer_type 0x7fdf662bb7e0
        type <record_type 0x7fdf662bb738 child_process BLK
            size <integer_cst 0x7fdf662a4978 constant 640>
            unit-size <integer_cst 0x7fdf662a4948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738 fields <field_decl 0x7fdf662bd850 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fdf662c3d80 cmd>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7fdf662a4f78>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_10 = VDEF <.MEM_9>
child_process_clear (cmd_5(D));
child_process_clear (cmd_5(D));
./benchmarks/git/use_after_free_2/git_uaf_2.c:322:5: warning: use location
  322 |     child_process_clear(cmd);
      |     ^
this stmt call this function :child_process_clear
trace fucntion name:child_process_clear 
[40;44m =======trace_function_path child_process_clear  function_call count: 1 level :0========  [0m
 <ssa_name 0x7fdf662de5a0
    type <pointer_type 0x7fdf662bb7e0
        type <record_type 0x7fdf662bb738 child_process BLK
            size <integer_cst 0x7fdf662a4978 constant 640>
            unit-size <integer_cst 0x7fdf662a4948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738 fields <field_decl 0x7fdf662bd850 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fdf662c3d80 cmd>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7fdf662a4f78>
[40;36m ======= node_fun:child_process_clear========= [0m
[40;36m ======= find relate stmt with cmd ========= [0m
[40;36m ======= relate node_fun argument:cmd========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘child_process_clear’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:328:9: warning: use location
  328 |         argv_array_clear(&child->args);
      |         ^
_1 = &child_3(D)->args;
./benchmarks/git/use_after_free_2/git_uaf_2.c:328:9: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cmd========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:329:9: warning: use location
  329 |         argv_array_clear(&child->env_array);
      |         ^
_2 = &child_3(D)->env_array;
./benchmarks/git/use_after_free_2/git_uaf_2.c:329:9: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m

 ================== trace ================== 
trace fucntion free:0 
_3 = cmd_5(D)->pid;
In function ‘pp_collect_finished’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:15: warning: use location
  321 |     int ret = wait_or_whine(cmd->pid, cmd->argv[0], 0);
      |               ^
ret_7 = wait_or_whine (_3, _2, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:15: warning: use location
this stmt call this function :wait_or_whine
trace fucntion name:wait_or_whine 

 ================== trace ================== 
trace fucntion free:0 
_1 = cmd_5(D)->argv;
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:42: warning: use location
  321 |     int ret = wait_or_whine(cmd->pid, cmd->argv[0], 0);
      |                                          ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662de5a0
    type <pointer_type 0x7fdf662bb7e0
        type <record_type 0x7fdf662bb738 child_process BLK
            size <integer_cst 0x7fdf662a4978 constant 640>
            unit-size <integer_cst 0x7fdf662a4948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738 fields <field_decl 0x7fdf662bd850 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fdf662c3d80 cmd>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7fdf662a4f78>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:finish_command========= [0m
[40;42m =======pre_check_funciton:pp_collect_finished========= [0m
[40;42m =======start_check_funciton:pp_collect_finished========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fdf662dea20
    type <pointer_type 0x7fdf662bb7e0
        type <record_type 0x7fdf662bb738 child_process BLK
            size <integer_cst 0x7fdf662a4978 constant 640>
            unit-size <integer_cst 0x7fdf662a4948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738 fields <field_decl 0x7fdf662bd850 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _12 = &_11->process;
    version:12
    ptr-info 0x7fdf66304048>
 <ssa_name 0x7fdf662dea20
    type <pointer_type 0x7fdf662bb7e0
        type <record_type 0x7fdf662bb738 child_process BLK
            size <integer_cst 0x7fdf662a4978 constant 640>
            unit-size <integer_cst 0x7fdf662a4948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738 fields <field_decl 0x7fdf662bd850 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _12 = &_11->process;
    version:12
    ptr-info 0x7fdf66304048>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662dea20
    type <pointer_type 0x7fdf662bb7e0
        type <record_type 0x7fdf662bb738 child_process BLK
            size <integer_cst 0x7fdf662a4978 constant 640>
            unit-size <integer_cst 0x7fdf662a4948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738 fields <field_decl 0x7fdf662bd850 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _12 = &_11->process;
    version:12
    ptr-info 0x7fdf66304048>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_113 = VDEF <.MEM_111>
code_97 = finish_command (_12);
code_97 = finish_command (_12);
./benchmarks/git/use_after_free_2/git_uaf_2.c:275:24: warning: use location
  275 |                 code = finish_command(&pp->children[i].process);
      |                        ^
this stmt call this function :finish_command
trace fucntion name:finish_command 
[40;44m =======trace_function_path finish_command  function_call count: 2 level :0========  [0m
 <ssa_name 0x7fdf662dea20
    type <pointer_type 0x7fdf662bb7e0
        type <record_type 0x7fdf662bb738 child_process BLK
            size <integer_cst 0x7fdf662a4978 constant 640>
            unit-size <integer_cst 0x7fdf662a4948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738 fields <field_decl 0x7fdf662bd850 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _12 = &_11->process;
    version:12
    ptr-info 0x7fdf66304048>
[40;36m ======= node_fun:finish_command========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘finish_command’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:42: warning: use location
  321 |     int ret = wait_or_whine(cmd->pid, cmd->argv[0], 0);
      |                                          ^
_1 = cmd_5(D)->argv;
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:42: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:15: warning: use location
  321 |     int ret = wait_or_whine(cmd->pid, cmd->argv[0], 0);
      |               ^
_2 = *_1;
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:15: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_clear========= [0m
[40;46m =======add node_fun stack:child_process_clear========= [0m
[40;44m =======trace_function_path child_process_clear  function_call count: 1 level :1========  [0m
 <ssa_name 0x7fdf662dea20
    type <pointer_type 0x7fdf662bb7e0
        type <record_type 0x7fdf662bb738 child_process BLK
            size <integer_cst 0x7fdf662a4978 constant 640>
            unit-size <integer_cst 0x7fdf662a4948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738 fields <field_decl 0x7fdf662bd850 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _12 = &_11->process;
    version:12
    ptr-info 0x7fdf66304048>
[40;36m ======= node_fun:child_process_clear========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘child_process_clear’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:328:9: warning: use location
  328 |         argv_array_clear(&child->args);
      |         ^
_1 = &child_3(D)->args;
./benchmarks/git/use_after_free_2/git_uaf_2.c:328:9: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:329:9: warning: use location
  329 |         argv_array_clear(&child->env_array);
      |         ^
_2 = &child_3(D)->env_array;
./benchmarks/git/use_after_free_2/git_uaf_2.c:329:9: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;46m =======add node_fun stack:wait_or_whine========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_113 = VDEF <.MEM_111>
code_97 = finish_command (_12);
code_97 = finish_command (_12);
In function ‘pp_collect_finished’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:275:24: warning: use location
  275 |                 code = finish_command(&pp->children[i].process);
      |                        ^
this stmt call this function :finish_command
trace fucntion name:finish_command 
[40;44m =======trace_function_path finish_command  function_call count: 2 level :0========  [0m
 <ssa_name 0x7fdf662dea20
    type <pointer_type 0x7fdf662bb7e0
        type <record_type 0x7fdf662bb738 child_process BLK
            size <integer_cst 0x7fdf662a4978 constant 640>
            unit-size <integer_cst 0x7fdf662a4948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738 fields <field_decl 0x7fdf662bd850 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _12 = &_11->process;
    version:12
    ptr-info 0x7fdf66304048>
[40;36m ======= node_fun:finish_command========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘finish_command’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:42: warning: use location
  321 |     int ret = wait_or_whine(cmd->pid, cmd->argv[0], 0);
      |                                          ^
_1 = cmd_5(D)->argv;
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:42: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:15: warning: use location
  321 |     int ret = wait_or_whine(cmd->pid, cmd->argv[0], 0);
      |               ^
_2 = *_1;
./benchmarks/git/use_after_free_2/git_uaf_2.c:321:15: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_clear========= [0m
[40;46m =======add node_fun stack:child_process_clear========= [0m
[40;44m =======trace_function_path child_process_clear  function_call count: 1 level :1========  [0m
 <ssa_name 0x7fdf662dea20
    type <pointer_type 0x7fdf662bb7e0
        type <record_type 0x7fdf662bb738 child_process BLK
            size <integer_cst 0x7fdf662a4978 constant 640>
            unit-size <integer_cst 0x7fdf662a4948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738 fields <field_decl 0x7fdf662bd850 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _12 = &_11->process;
    version:12
    ptr-info 0x7fdf66304048>
[40;36m ======= node_fun:child_process_clear========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘child_process_clear’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:328:9: warning: use location
  328 |         argv_array_clear(&child->args);
      |         ^
_1 = &child_3(D)->args;
./benchmarks/git/use_after_free_2/git_uaf_2.c:328:9: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/use_after_free_2/git_uaf_2.c:329:9: warning: use location
  329 |         argv_array_clear(&child->env_array);
      |         ^
_2 = &child_3(D)->env_array;
./benchmarks/git/use_after_free_2/git_uaf_2.c:329:9: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;46m =======add node_fun stack:wait_or_whine========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662dea20
    type <pointer_type 0x7fdf662bb7e0
        type <record_type 0x7fdf662bb738 child_process BLK
            size <integer_cst 0x7fdf662a4978 constant 640>
            unit-size <integer_cst 0x7fdf662a4948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738 fields <field_decl 0x7fdf662bd850 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _12 = &_11->process;
    version:12
    ptr-info 0x7fdf66304048>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662e4120
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf662db6c0 code>
    def_stmt code_97 = finish_command (_12);
    version:97>
 <ssa_name 0x7fdf662e4120
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf662db6c0 code>
    def_stmt code_97 = finish_command (_12);
    version:97>

 ================== pre trace ptable ================== 
trace fucntion name:finish_command 
[40;44m =======trace_function_path finish_command  function_call count: 2 level :888========  [0m
 <ssa_name 0x7fdf662e4120
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf662db6c0 code>
    def_stmt code_97 = finish_command (_12);
    version:97>
[40;36m ======= node_fun:finish_command========= [0m
[40;36m ======= find relate stmt with code ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_clear========= [0m
[40;46m =======add node_fun stack:child_process_clear========= [0m
[40;44m =======trace_function_path child_process_clear  function_call count: 1 level :889========  [0m
 <ssa_name 0x7fdf662e4120
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf662db6c0 code>
    def_stmt code_97 = finish_command (_12);
    version:97>
[40;36m ======= node_fun:child_process_clear========= [0m
[40;36m ======= find relate stmt with code ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;46m =======add node_fun stack:wait_or_whine========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662e4120
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf662db6c0 code>
    def_stmt code_97 = finish_command (_12);
    version:97>
is Other function finish_command
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_113 = VDEF <.MEM_111>
code_97 = finish_command (_12);
code_97 = finish_command (_12);
In function ‘pp_collect_finished’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:275:24: warning: use location
  275 |                 code = finish_command(&pp->children[i].process);
      |                        ^
this stmt call this function :finish_command
trace fucntion name:finish_command 
[40;44m =======trace_function_path finish_command  function_call count: 2 level :0========  [0m
 <ssa_name 0x7fdf662e4120
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf662db6c0 code>
    def_stmt code_97 = finish_command (_12);
    version:97>
[40;36m ======= node_fun:finish_command========= [0m
[40;36m ======= find relate stmt with code ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_clear========= [0m
[40;46m =======add node_fun stack:child_process_clear========= [0m
[40;44m =======trace_function_path child_process_clear  function_call count: 1 level :1========  [0m
 <ssa_name 0x7fdf662e4120
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf662db6c0 code>
    def_stmt code_97 = finish_command (_12);
    version:97>
[40;36m ======= node_fun:child_process_clear========= [0m
[40;36m ======= find relate stmt with code ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;46m =======add node_fun stack:wait_or_whine========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_113 = VDEF <.MEM_111>
code_97 = finish_command (_12);
code_97 = finish_command (_12);
./benchmarks/git/use_after_free_2/git_uaf_2.c:275:24: warning: use location
this stmt call this function :finish_command
trace fucntion name:finish_command 
[40;44m =======trace_function_path finish_command  function_call count: 2 level :0========  [0m
 <ssa_name 0x7fdf662e4120
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf662db6c0 code>
    def_stmt code_97 = finish_command (_12);
    version:97>
[40;36m ======= node_fun:finish_command========= [0m
[40;36m ======= find relate stmt with code ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:child_process_clear========= [0m
[40;46m =======add node_fun stack:child_process_clear========= [0m
[40;44m =======trace_function_path child_process_clear  function_call count: 1 level :1========  [0m
 <ssa_name 0x7fdf662e4120
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf662db6c0 code>
    def_stmt code_97 = finish_command (_12);
    version:97>
[40;36m ======= node_fun:child_process_clear========= [0m
[40;36m ======= find relate stmt with code ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:argv_array_clear========= [0m
[40;46m =======add node_fun stack:argv_array_clear========= [0m
[40;42m =======pre add _ fucntion:wait_or_whine========= [0m
[40;46m =======add node_fun stack:wait_or_whine========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662e4120
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <var_decl 0x7fdf662db6c0 code>
    def_stmt code_97 = finish_command (_12);
    version:97>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662e3360
    type <pointer_type 0x7fdf662bb7e0
        type <record_type 0x7fdf662bb738 child_process BLK
            size <integer_cst 0x7fdf662a4978 constant 640>
            unit-size <integer_cst 0x7fdf662a4948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738 fields <field_decl 0x7fdf662bd850 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _44 = &_43->process;
    version:44
    ptr-info 0x7fdf663041f8>
 <ssa_name 0x7fdf662e3360
    type <pointer_type 0x7fdf662bb7e0
        type <record_type 0x7fdf662bb738 child_process BLK
            size <integer_cst 0x7fdf662a4978 constant 640>
            unit-size <integer_cst 0x7fdf662a4948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738 fields <field_decl 0x7fdf662bd850 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _44 = &_43->process;
    version:44
    ptr-info 0x7fdf663041f8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662e3360
    type <pointer_type 0x7fdf662bb7e0
        type <record_type 0x7fdf662bb738 child_process BLK
            size <integer_cst 0x7fdf662a4978 constant 640>
            unit-size <integer_cst 0x7fdf662a4948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738 fields <field_decl 0x7fdf662bd850 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _44 = &_43->process;
    version:44
    ptr-info 0x7fdf663041f8>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_118 = VDEF <.MEM_117>
child_process_init (_44);
child_process_init (_44);
./benchmarks/git/use_after_free_2/git_uaf_2.c:289:17: warning: use location
  289 |                 child_process_init(&pp->children[i].process);
      |                 ^
this stmt call this function :child_process_init
trace fucntion name:child_process_init 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_118 = VDEF <.MEM_117>
child_process_init (_44);
child_process_init (_44);
./benchmarks/git/use_after_free_2/git_uaf_2.c:289:17: warning: use location
this stmt call this function :child_process_init
trace fucntion name:child_process_init 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662e3360
    type <pointer_type 0x7fdf662bb7e0
        type <record_type 0x7fdf662bb738 child_process BLK
            size <integer_cst 0x7fdf662a4978 constant 640>
            unit-size <integer_cst 0x7fdf662a4948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738 fields <field_decl 0x7fdf662bd850 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _44 = &_43->process;
    version:44
    ptr-info 0x7fdf663041f8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662e3558
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _51 = &pp_91(D)->buffered_output;
    version:51
    ptr-info 0x7fdf66304258>
 <ssa_name 0x7fdf662e3558
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _51 = &pp_91(D)->buffered_output;
    version:51
    ptr-info 0x7fdf66304258>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662e3558
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _51 = &pp_91(D)->buffered_output;
    version:51
    ptr-info 0x7fdf66304258>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_124 = VDEF <.MEM_118>
strbuf_addbuf (_51, _50);
strbuf_addbuf (_51, _50);
./benchmarks/git/use_after_free_2/git_uaf_2.c:292:25: warning: use location
  292 |                         strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);
      |                         ^
this stmt call this function :strbuf_addbuf
trace fucntion name:strbuf_addbuf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_124 = VDEF <.MEM_118>
strbuf_addbuf (_51, _50);
strbuf_addbuf (_51, _50);
./benchmarks/git/use_after_free_2/git_uaf_2.c:292:25: warning: use location
this stmt call this function :strbuf_addbuf
trace fucntion name:strbuf_addbuf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662e3558
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _51 = &pp_91(D)->buffered_output;
    version:51
    ptr-info 0x7fdf66304258>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662e3510
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _50 = &_49->err;
    version:50
    ptr-info 0x7fdf66304240>
 <ssa_name 0x7fdf662e3510
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _50 = &_49->err;
    version:50
    ptr-info 0x7fdf66304240>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662e3510
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _50 = &_49->err;
    version:50
    ptr-info 0x7fdf66304240>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_124 = VDEF <.MEM_118>
strbuf_addbuf (_51, _50);
strbuf_addbuf (_51, _50);
./benchmarks/git/use_after_free_2/git_uaf_2.c:292:25: warning: use location
this stmt call this function :strbuf_addbuf
trace fucntion name:strbuf_addbuf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_124 = VDEF <.MEM_118>
strbuf_addbuf (_51, _50);
strbuf_addbuf (_51, _50);
./benchmarks/git/use_after_free_2/git_uaf_2.c:292:25: warning: use location
this stmt call this function :strbuf_addbuf
trace fucntion name:strbuf_addbuf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662e3510
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _50 = &_49->err;
    version:50
    ptr-info 0x7fdf66304240>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662e36c0
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _56 = &_55->err;
    version:56
    ptr-info 0x7fdf663042a0>
 <ssa_name 0x7fdf662e36c0
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _56 = &_55->err;
    version:56
    ptr-info 0x7fdf663042a0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662e36c0
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _56 = &_55->err;
    version:56
    ptr-info 0x7fdf663042a0>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_125 = VDEF <.MEM_124>
strbuf_reset (_56);
strbuf_reset (_56);
./benchmarks/git/use_after_free_2/git_uaf_2.c:293:25: warning: use location
  293 |                         strbuf_reset(&pp->children[i].err);
      |                         ^
this stmt call this function :strbuf_reset
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_125 = VDEF <.MEM_124>
strbuf_reset (_56);
strbuf_reset (_56);
./benchmarks/git/use_after_free_2/git_uaf_2.c:293:25: warning: use location
this stmt call this function :strbuf_reset
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662e36c0
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _56 = &_55->err;
    version:56
    ptr-info 0x7fdf663042a0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662e3870
    type <pointer_type 0x7fdf662b4000
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662b6690>>
   
    def_stmt _62 = _61->err.buf;
    version:62
    ptr-info 0x7fdf66304300>
 <ssa_name 0x7fdf662e3870
    type <pointer_type 0x7fdf662b4000
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662b6690>>
   
    def_stmt _62 = _61->err.buf;
    version:62
    ptr-info 0x7fdf66304300>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662e3870
    type <pointer_type 0x7fdf662b4000
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662b6690>>
   
    def_stmt _62 = _61->err.buf;
    version:62
    ptr-info 0x7fdf66304300>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_119 = VDEF <.MEM_118>
fputs (_62, _57);
fputs (_62, _57);
./benchmarks/git/use_after_free_2/git_uaf_2.c:295:25: warning: use location
  295 |                         fputs(pp->children[i].err.buf, stderr);
      |                         ^
this stmt call this function :fputs
trace fucntion name:fputs 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_119 = VDEF <.MEM_118>
fputs (_62, _57);
fputs (_62, _57);
./benchmarks/git/use_after_free_2/git_uaf_2.c:295:25: warning: use location
this stmt call this function :fputs
trace fucntion name:fputs 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662e3870
    type <pointer_type 0x7fdf662b4000
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662b6690>>
   
    def_stmt _62 = _61->err.buf;
    version:62
    ptr-info 0x7fdf66304300>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662e3708
    type <pointer_type 0x7fdf662b63f0
        type <record_type 0x7fdf662b6348 FILE BLK
            size <integer_cst 0x7fdf662a4840 constant 1728>
            unit-size <integer_cst 0x7fdf662a4960 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b62a0 fields <field_decl 0x7fdf662b8b48 _flags> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662b63f0>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fdf662bee70>>
   
    def_stmt _57 = stderr;
    version:57
    ptr-info 0x7fdf663042b8>
 <ssa_name 0x7fdf662e3708
    type <pointer_type 0x7fdf662b63f0
        type <record_type 0x7fdf662b6348 FILE BLK
            size <integer_cst 0x7fdf662a4840 constant 1728>
            unit-size <integer_cst 0x7fdf662a4960 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b62a0 fields <field_decl 0x7fdf662b8b48 _flags> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662b63f0>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fdf662bee70>>
   
    def_stmt _57 = stderr;
    version:57
    ptr-info 0x7fdf663042b8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662e3708
    type <pointer_type 0x7fdf662b63f0
        type <record_type 0x7fdf662b6348 FILE BLK
            size <integer_cst 0x7fdf662a4840 constant 1728>
            unit-size <integer_cst 0x7fdf662a4960 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b62a0 fields <field_decl 0x7fdf662b8b48 _flags> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662b63f0>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fdf662bee70>>
   
    def_stmt _57 = stderr;
    version:57
    ptr-info 0x7fdf663042b8>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_119 = VDEF <.MEM_118>
fputs (_62, _57);
fputs (_62, _57);
./benchmarks/git/use_after_free_2/git_uaf_2.c:295:25: warning: use location
this stmt call this function :fputs
trace fucntion name:fputs 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_119 = VDEF <.MEM_118>
fputs (_62, _57);
fputs (_62, _57);
./benchmarks/git/use_after_free_2/git_uaf_2.c:295:25: warning: use location
this stmt call this function :fputs
trace fucntion name:fputs 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662e3708
    type <pointer_type 0x7fdf662b63f0
        type <record_type 0x7fdf662b6348 FILE BLK
            size <integer_cst 0x7fdf662a4840 constant 1728>
            unit-size <integer_cst 0x7fdf662a4960 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b62a0 fields <field_decl 0x7fdf662b8b48 _flags> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662b63f0>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fdf662bee70>>
   
    def_stmt _57 = stderr;
    version:57
    ptr-info 0x7fdf663042b8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662e39d8
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _67 = &_66->err;
    version:67
    ptr-info 0x7fdf66304348>
 <ssa_name 0x7fdf662e39d8
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _67 = &_66->err;
    version:67
    ptr-info 0x7fdf66304348>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662e39d8
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _67 = &_66->err;
    version:67
    ptr-info 0x7fdf66304348>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_120 = VDEF <.MEM_119>
strbuf_reset (_67);
strbuf_reset (_67);
./benchmarks/git/use_after_free_2/git_uaf_2.c:296:25: warning: use location
  296 |                         strbuf_reset(&pp->children[i].err);
      |                         ^
this stmt call this function :strbuf_reset
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_120 = VDEF <.MEM_119>
strbuf_reset (_67);
strbuf_reset (_67);
./benchmarks/git/use_after_free_2/git_uaf_2.c:296:25: warning: use location
this stmt call this function :strbuf_reset
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662e39d8
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _67 = &_66->err;
    version:67
    ptr-info 0x7fdf66304348>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662e3a68
    type <pointer_type 0x7fdf662b4000
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662b6690>>
   
    def_stmt _69 = pp_91(D)->buffered_output.buf;
    version:69
    ptr-info 0x7fdf66304378>
 <ssa_name 0x7fdf662e3a68
    type <pointer_type 0x7fdf662b4000
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662b6690>>
   
    def_stmt _69 = pp_91(D)->buffered_output.buf;
    version:69
    ptr-info 0x7fdf66304378>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662e3a68
    type <pointer_type 0x7fdf662b4000
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662b6690>>
   
    def_stmt _69 = pp_91(D)->buffered_output.buf;
    version:69
    ptr-info 0x7fdf66304378>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_121 = VDEF <.MEM_120>
fputs (_69, _68);
fputs (_69, _68);
./benchmarks/git/use_after_free_2/git_uaf_2.c:299:25: warning: use location
  299 |                         fputs(pp->buffered_output.buf, stderr);
      |                         ^
this stmt call this function :fputs
trace fucntion name:fputs 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_121 = VDEF <.MEM_120>
fputs (_69, _68);
fputs (_69, _68);
./benchmarks/git/use_after_free_2/git_uaf_2.c:299:25: warning: use location
this stmt call this function :fputs
trace fucntion name:fputs 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662e3a68
    type <pointer_type 0x7fdf662b4000
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
        pointer_to_this <pointer_type 0x7fdf662b6690>>
   
    def_stmt _69 = pp_91(D)->buffered_output.buf;
    version:69
    ptr-info 0x7fdf66304378>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662e3a20
    type <pointer_type 0x7fdf662b63f0
        type <record_type 0x7fdf662b6348 FILE BLK
            size <integer_cst 0x7fdf662a4840 constant 1728>
            unit-size <integer_cst 0x7fdf662a4960 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b62a0 fields <field_decl 0x7fdf662b8b48 _flags> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662b63f0>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fdf662bee70>>
   
    def_stmt _68 = stderr;
    version:68
    ptr-info 0x7fdf66304360>
 <ssa_name 0x7fdf662e3a20
    type <pointer_type 0x7fdf662b63f0
        type <record_type 0x7fdf662b6348 FILE BLK
            size <integer_cst 0x7fdf662a4840 constant 1728>
            unit-size <integer_cst 0x7fdf662a4960 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b62a0 fields <field_decl 0x7fdf662b8b48 _flags> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662b63f0>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fdf662bee70>>
   
    def_stmt _68 = stderr;
    version:68
    ptr-info 0x7fdf66304360>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662e3a20
    type <pointer_type 0x7fdf662b63f0
        type <record_type 0x7fdf662b6348 FILE BLK
            size <integer_cst 0x7fdf662a4840 constant 1728>
            unit-size <integer_cst 0x7fdf662a4960 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b62a0 fields <field_decl 0x7fdf662b8b48 _flags> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662b63f0>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fdf662bee70>>
   
    def_stmt _68 = stderr;
    version:68
    ptr-info 0x7fdf66304360>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_121 = VDEF <.MEM_120>
fputs (_69, _68);
fputs (_69, _68);
./benchmarks/git/use_after_free_2/git_uaf_2.c:299:25: warning: use location
this stmt call this function :fputs
trace fucntion name:fputs 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_121 = VDEF <.MEM_120>
fputs (_69, _68);
fputs (_69, _68);
./benchmarks/git/use_after_free_2/git_uaf_2.c:299:25: warning: use location
this stmt call this function :fputs
trace fucntion name:fputs 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662e3a20
    type <pointer_type 0x7fdf662b63f0
        type <record_type 0x7fdf662b6348 FILE BLK
            size <integer_cst 0x7fdf662a4840 constant 1728>
            unit-size <integer_cst 0x7fdf662a4960 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b62a0 fields <field_decl 0x7fdf662b8b48 _flags> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662b63f0>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fdf662bee70>>
   
    def_stmt _68 = stderr;
    version:68
    ptr-info 0x7fdf66304360>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662e3ab0
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _70 = &pp_91(D)->buffered_output;
    version:70
    ptr-info 0x7fdf66304390>
 <ssa_name 0x7fdf662e3ab0
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _70 = &pp_91(D)->buffered_output;
    version:70
    ptr-info 0x7fdf66304390>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662e3ab0
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _70 = &pp_91(D)->buffered_output;
    version:70
    ptr-info 0x7fdf66304390>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_122 = VDEF <.MEM_121>
strbuf_reset (_70);
strbuf_reset (_70);
./benchmarks/git/use_after_free_2/git_uaf_2.c:300:25: warning: use location
  300 |                         strbuf_reset(&pp->buffered_output);
      |                         ^
this stmt call this function :strbuf_reset
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_122 = VDEF <.MEM_121>
strbuf_reset (_70);
strbuf_reset (_70);
./benchmarks/git/use_after_free_2/git_uaf_2.c:300:25: warning: use location
this stmt call this function :strbuf_reset
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662e3ab0
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _70 = &pp_91(D)->buffered_output;
    version:70
    ptr-info 0x7fdf66304390>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:pp_collect_finished========= [0m
[40;44m =======node_fun:kill_children========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path kill_children  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:kill========= [0m
[40;33m =======POP node_fun stack:kill========= [0m
[40;42m =======pre_check_funciton:kill_children========= [0m
[40;42m =======start_check_funciton:kill_children========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fdf662e4948
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _10 = _9->process.pid;
    version:10>
 <ssa_name 0x7fdf662e4948
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _10 = _9->process.pid;
    version:10>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662e4948
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _10 = _9->process.pid;
    version:10>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_23 = VDEF <.MEM_21>
kill (_10, signo_17(D));
kill (_10, signo_17(D));
In function ‘kill_children’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:259:25: warning: use location
  259 |                         kill(pp->children[i].process.pid, signo);
      |                         ^
this stmt call this function :kill
trace fucntion name:kill 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_23 = VDEF <.MEM_21>
kill (_10, signo_17(D));
kill (_10, signo_17(D));
./benchmarks/git/use_after_free_2/git_uaf_2.c:259:25: warning: use location
this stmt call this function :kill
trace fucntion name:kill 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662e4948
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _10 = _9->process.pid;
    version:10>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662e4a68
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <parm_decl 0x7fdf662c3f00 signo>
    def_stmt GIMPLE_NOP
    version:17>
 <ssa_name 0x7fdf662e4a68
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <parm_decl 0x7fdf662c3f00 signo>
    def_stmt GIMPLE_NOP
    version:17>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662e4a68
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <parm_decl 0x7fdf662c3f00 signo>
    def_stmt GIMPLE_NOP
    version:17>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_23 = VDEF <.MEM_21>
kill (_10, signo_17(D));
kill (_10, signo_17(D));
./benchmarks/git/use_after_free_2/git_uaf_2.c:259:25: warning: use location
this stmt call this function :kill
trace fucntion name:kill 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_23 = VDEF <.MEM_21>
kill (_10, signo_17(D));
kill (_10, signo_17(D));
./benchmarks/git/use_after_free_2/git_uaf_2.c:259:25: warning: use location
this stmt call this function :kill
trace fucntion name:kill 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662e4a68
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <parm_decl 0x7fdf662c3f00 signo>
    def_stmt GIMPLE_NOP
    version:17>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:kill_children========= [0m
[40;44m =======node_fun:pp_start_one========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path pp_start_one  function_call count: 5 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:strbuf_reset========= [0m
[40;33m =======POP node_fun stack:strbuf_reset========= [0m
[40;42m =======pre add _ fucntion:strbuf_addbuf========= [0m
[40;33m =======POP node_fun stack:strbuf_addbuf========= [0m
[40;42m =======pre add _ fucntion:start_command========= [0m
[40;33m =======POP node_fun stack:start_command========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:pp_start_one========= [0m
[40;42m =======start_check_funciton:pp_start_one========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fdf662ed480
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _30 = &pp_102(D)->buffered_output;
    version:30
    ptr-info 0x7fdf663045e8>
 <ssa_name 0x7fdf662ed480
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _30 = &pp_102(D)->buffered_output;
    version:30
    ptr-info 0x7fdf663045e8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662ed480
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _30 = &pp_102(D)->buffered_output;
    version:30
    ptr-info 0x7fdf663045e8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_130 = VDEF <.MEM_118>
strbuf_addbuf (_30, _29);
strbuf_addbuf (_30, _29);
In function ‘pp_start_one’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:227:17: warning: use location
  227 |                 strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);
      |                 ^
this stmt call this function :strbuf_addbuf
trace fucntion name:strbuf_addbuf 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_130 = VDEF <.MEM_118>
strbuf_addbuf (_30, _29);
strbuf_addbuf (_30, _29);
./benchmarks/git/use_after_free_2/git_uaf_2.c:227:17: warning: use location
this stmt call this function :strbuf_addbuf
trace fucntion name:strbuf_addbuf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662ed480
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _30 = &pp_102(D)->buffered_output;
    version:30
    ptr-info 0x7fdf663045e8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662ed438
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _29 = &_28->err;
    version:29
    ptr-info 0x7fdf663045d0>
 <ssa_name 0x7fdf662ed438
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _29 = &_28->err;
    version:29
    ptr-info 0x7fdf663045d0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662ed438
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _29 = &_28->err;
    version:29
    ptr-info 0x7fdf663045d0>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_130 = VDEF <.MEM_118>
strbuf_addbuf (_30, _29);
strbuf_addbuf (_30, _29);
./benchmarks/git/use_after_free_2/git_uaf_2.c:227:17: warning: use location
this stmt call this function :strbuf_addbuf
trace fucntion name:strbuf_addbuf 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_130 = VDEF <.MEM_118>
strbuf_addbuf (_30, _29);
strbuf_addbuf (_30, _29);
./benchmarks/git/use_after_free_2/git_uaf_2.c:227:17: warning: use location
this stmt call this function :strbuf_addbuf
trace fucntion name:strbuf_addbuf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662ed438
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _29 = &_28->err;
    version:29
    ptr-info 0x7fdf663045d0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662ed5e8
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _35 = &_34->err;
    version:35
    ptr-info 0x7fdf66304630>
 <ssa_name 0x7fdf662ed5e8
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _35 = &_34->err;
    version:35
    ptr-info 0x7fdf66304630>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662ed5e8
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _35 = &_34->err;
    version:35
    ptr-info 0x7fdf66304630>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_131 = VDEF <.MEM_130>
strbuf_reset (_35);
strbuf_reset (_35);
./benchmarks/git/use_after_free_2/git_uaf_2.c:228:17: warning: use location
  228 |                 strbuf_reset(&pp->children[i].err);
      |                 ^
this stmt call this function :strbuf_reset
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_131 = VDEF <.MEM_130>
strbuf_reset (_35);
strbuf_reset (_35);
./benchmarks/git/use_after_free_2/git_uaf_2.c:228:17: warning: use location
this stmt call this function :strbuf_reset
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662ed5e8
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _35 = &_34->err;
    version:35
    ptr-info 0x7fdf66304630>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662edab0
    type <pointer_type 0x7fdf662bb7e0
        type <record_type 0x7fdf662bb738 child_process BLK
            size <integer_cst 0x7fdf662a4978 constant 640>
            unit-size <integer_cst 0x7fdf662a4948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738 fields <field_decl 0x7fdf662bd850 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _52 = &_51->process;
    version:52
    ptr-info 0x7fdf66304708>
 <ssa_name 0x7fdf662edab0
    type <pointer_type 0x7fdf662bb7e0
        type <record_type 0x7fdf662bb738 child_process BLK
            size <integer_cst 0x7fdf662a4978 constant 640>
            unit-size <integer_cst 0x7fdf662a4948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738 fields <field_decl 0x7fdf662bd850 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _52 = &_51->process;
    version:52
    ptr-info 0x7fdf66304708>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662edab0
    type <pointer_type 0x7fdf662bb7e0
        type <record_type 0x7fdf662bb738 child_process BLK
            size <integer_cst 0x7fdf662a4978 constant 640>
            unit-size <integer_cst 0x7fdf662a4948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738 fields <field_decl 0x7fdf662bd850 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _52 = &_51->process;
    version:52
    ptr-info 0x7fdf66304708>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_122 = VDEF <.MEM_121>
_53 = start_command (_52);
_53 = start_command (_52);
./benchmarks/git/use_after_free_2/git_uaf_2.c:235:13: warning: use location
  235 |         if (start_command(&pp->children[i].process)) {
      |             ^
this stmt call this function :start_command
trace fucntion name:start_command 

 ================== trace ================== 
trace fucntion free:0 
if (_53 != 0)
./benchmarks/git/use_after_free_2/git_uaf_2.c:235:12: warning: use location
  235 |         if (start_command(&pp->children[i].process)) {
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662edab0
    type <pointer_type 0x7fdf662bb7e0
        type <record_type 0x7fdf662bb738 child_process BLK
            size <integer_cst 0x7fdf662a4978 constant 640>
            unit-size <integer_cst 0x7fdf662a4948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738 fields <field_decl 0x7fdf662bd850 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _52 = &_51->process;
    version:52
    ptr-info 0x7fdf66304708>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662edaf8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _53 = start_command (_52);
    version:53>
 <ssa_name 0x7fdf662edaf8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _53 = start_command (_52);
    version:53>

 ================== pre trace ptable ================== 
trace fucntion name:start_command 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662edaf8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _53 = start_command (_52);
    version:53>
is Other function start_command
 
 Start check Pointer Collect  

======================================================================
# .MEM_122 = VDEF <.MEM_121>
_53 = start_command (_52);
_53 = start_command (_52);
./benchmarks/git/use_after_free_2/git_uaf_2.c:235:13: warning: use location
  235 |         if (start_command(&pp->children[i].process)) {
      |             ^
this stmt call this function :start_command
trace fucntion name:start_command 

 ================== trace ================== 
trace fucntion free:0 
if (_53 != 0)
./benchmarks/git/use_after_free_2/git_uaf_2.c:235:12: warning: use location
  235 |         if (start_command(&pp->children[i].process)) {
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662edaf8
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
   
    def_stmt _53 = start_command (_52);
    version:53>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662ee1b0
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _76 = &pp_102(D)->buffered_output;
    version:76
    ptr-info 0x7fdf66304870>
 <ssa_name 0x7fdf662ee1b0
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _76 = &pp_102(D)->buffered_output;
    version:76
    ptr-info 0x7fdf66304870>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662ee1b0
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _76 = &pp_102(D)->buffered_output;
    version:76
    ptr-info 0x7fdf66304870>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_127 = VDEF <.MEM_126>
strbuf_addbuf (_76, _75);
strbuf_addbuf (_76, _75);
./benchmarks/git/use_after_free_2/git_uaf_2.c:240:17: warning: use location
  240 |                 strbuf_addbuf(&pp->buffered_output, &pp->children[i].err);
      |                 ^
this stmt call this function :strbuf_addbuf
trace fucntion name:strbuf_addbuf 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_127 = VDEF <.MEM_126>
strbuf_addbuf (_76, _75);
strbuf_addbuf (_76, _75);
./benchmarks/git/use_after_free_2/git_uaf_2.c:240:17: warning: use location
this stmt call this function :strbuf_addbuf
trace fucntion name:strbuf_addbuf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662ee1b0
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _76 = &pp_102(D)->buffered_output;
    version:76
    ptr-info 0x7fdf66304870>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662ee168
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _75 = &_74->err;
    version:75
    ptr-info 0x7fdf66304858>
 <ssa_name 0x7fdf662ee168
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _75 = &_74->err;
    version:75
    ptr-info 0x7fdf66304858>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662ee168
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _75 = &_74->err;
    version:75
    ptr-info 0x7fdf66304858>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_127 = VDEF <.MEM_126>
strbuf_addbuf (_76, _75);
strbuf_addbuf (_76, _75);
./benchmarks/git/use_after_free_2/git_uaf_2.c:240:17: warning: use location
this stmt call this function :strbuf_addbuf
trace fucntion name:strbuf_addbuf 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_127 = VDEF <.MEM_126>
strbuf_addbuf (_76, _75);
strbuf_addbuf (_76, _75);
./benchmarks/git/use_after_free_2/git_uaf_2.c:240:17: warning: use location
this stmt call this function :strbuf_addbuf
trace fucntion name:strbuf_addbuf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662ee168
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _75 = &_74->err;
    version:75
    ptr-info 0x7fdf66304858>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662ee318
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _81 = &_80->err;
    version:81
    ptr-info 0x7fdf663048b8>
 <ssa_name 0x7fdf662ee318
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _81 = &_80->err;
    version:81
    ptr-info 0x7fdf663048b8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662ee318
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _81 = &_80->err;
    version:81
    ptr-info 0x7fdf663048b8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_128 = VDEF <.MEM_127>
strbuf_reset (_81);
strbuf_reset (_81);
./benchmarks/git/use_after_free_2/git_uaf_2.c:241:17: warning: use location
  241 |                 strbuf_reset(&pp->children[i].err);
      |                 ^
this stmt call this function :strbuf_reset
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_128 = VDEF <.MEM_127>
strbuf_reset (_81);
strbuf_reset (_81);
./benchmarks/git/use_after_free_2/git_uaf_2.c:241:17: warning: use location
this stmt call this function :strbuf_reset
trace fucntion name:strbuf_reset 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662ee318
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _81 = &_80->err;
    version:81
    ptr-info 0x7fdf663048b8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:pp_start_one========= [0m
[40;44m =======node_fun:pp_init========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path pp_init  function_call count: 7 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:child_process_init========= [0m
[40;33m =======POP node_fun stack:child_process_init========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;33m =======POP node_fun stack:strbuf_init========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;33m =======POP node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:trace_printf========= [0m
[40;33m =======POP node_fun stack:trace_printf========= [0m
[40;42m =======pre add _ fucntion:online_cpus========= [0m
[40;33m =======POP node_fun stack:online_cpus========= [0m
[40;42m =======pre_check_funciton:pp_init========= [0m
[40;42m =======start_check_funciton:pp_init========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fdf662f86c0
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <parm_decl 0x7fdf662f6000 n>
    def_stmt n_33 = online_cpus ();
    version:33>
 <ssa_name 0x7fdf662f86c0
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <parm_decl 0x7fdf662f6000 n>
    def_stmt n_33 = online_cpus ();
    version:33>

 ================== pre trace ptable ================== 
trace fucntion name:online_cpus 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662f86c0
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <parm_decl 0x7fdf662f6000 n>
    def_stmt n_33 = online_cpus ();
    version:33>
is Other function online_cpus
 
 Start check Pointer Collect  

======================================================================
n_24 = PHI <n_30(D)(2), n_33(3)>
In function ‘pp_init’:
lto1: warning: use location
this stmt have mutiple branch ---online_cpus-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (n_24 > i_25)
./benchmarks/git/use_after_free_2/git_uaf_2.c:195:23: warning: use location
  195 |         for (i = 0; i < n; i++) {
      |                       ^
_3 = (long unsigned int) n_24;
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:19: warning: use location
  192 |         pp->pfd = xcalloc(n, sizeof(*pp->pfd));
      |                   ^
_4 = calloc (_3, 8);
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:19: warning: use location
this stmt call this function :calloc
pp_34(D)->pfd = _4;
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:17: warning: use location
  192 |         pp->pfd = xcalloc(n, sizeof(*pp->pfd));
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = pp_34(D)->pfd;
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:19: warning: use location
  199 |                 pp->pfd[i].fd = -1;
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23->fd = -1;
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:31: warning: use location
  199 |                 pp->pfd[i].fd = -1;
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = pp_34(D)->pfd;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:19: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = _16 + _18;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:24: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19->events = 17;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:35: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = pp_34(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:39: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = _11 + _13;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:49: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = &_14->process;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
child_process_init (_15);
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
this stmt call this function :child_process_init
trace fucntion name:child_process_init 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = pp_34(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:32: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = _6 + _8;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:42: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = &_9->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strbuf_init (_10, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
this stmt call this function :strbuf_init
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 
_5 = &pp_34(D)->buffered_output;
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: use location
  193 |         strbuf_init(&pp->buffered_output, 0);
      |         ^
strbuf_init (_5, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: use location
this stmt call this function :strbuf_init
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 
pp_34(D)->children = _2;
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:22: warning: use location
  191 |         pp->children = xcalloc(n, sizeof(*pp->children));
      |                      ^
pp_34(D)->children = _2;
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:22: warning: use location
pp_34(D)->shutdown = 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:190:22: warning: use location
  190 |         pp->shutdown = 0;
      |                      ^
pp_34(D)->output_owner = 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:189:26: warning: use location
  189 |         pp->output_owner = 0;
      |                          ^
pp_34(D)->nr_processes = 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:188:26: warning: use location
  188 |         pp->nr_processes = 0;
      |                          ^
pp_34(D)->task_finished = _27;
./benchmarks/git/use_after_free_2/git_uaf_2.c:186:27: warning: use location
  186 |         pp->task_finished = task_finished ? task_finished : default_task_finished;
      |                           ^
pp_34(D)->task_finished = _27;
./benchmarks/git/use_after_free_2/git_uaf_2.c:186:27: warning: use location
pp_34(D)->start_failure = _26;
./benchmarks/git/use_after_free_2/git_uaf_2.c:185:27: warning: use location
  185 |         pp->start_failure = start_failure ? start_failure : default_start_failure;
      |                           ^
pp_34(D)->start_failure = _26;
./benchmarks/git/use_after_free_2/git_uaf_2.c:185:27: warning: use location
pp_34(D)->get_next_task = get_next_task_39(D);
./benchmarks/git/use_after_free_2/git_uaf_2.c:183:27: warning: use location
  183 |         pp->get_next_task = get_next_task;
      |                           ^
pp_34(D)->get_next_task = get_next_task_39(D);
./benchmarks/git/use_after_free_2/git_uaf_2.c:183:27: warning: use location
if (get_next_task_39(D) == 0B)
./benchmarks/git/use_after_free_2/git_uaf_2.c:181:12: warning: use location
  181 |         if (!get_next_task)
      |            ^
pp_34(D)->data = data_37(D);
./benchmarks/git/use_after_free_2/git_uaf_2.c:180:18: warning: use location
  180 |         pp->data = data;
      |                  ^
pp_34(D)->data = data_37(D);
./benchmarks/git/use_after_free_2/git_uaf_2.c:180:18: warning: use location
pp_34(D)->max_processes = n_24;
./benchmarks/git/use_after_free_2/git_uaf_2.c:176:27: warning: use location
  176 |         pp->max_processes = n;
      |                           ^
_1 = (long unsigned int) n_24;
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:24: warning: use location
  191 |         pp->children = xcalloc(n, sizeof(*pp->children));
      |                        ^
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
./benchmarks/git/use_after_free_2/git_uaf_2.c:178:9: warning: use location
  178 |         trace_printf("run_processes_parallel: preparing to run up to %d tasks", n);
      |         ^
this stmt call this function :trace_printf
trace fucntion name:trace_printf 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_62 = VDEF <.MEM_61(D)>
n_33 = online_cpus ();
n_33 = online_cpus ();
./benchmarks/git/use_after_free_2/git_uaf_2.c:174:21: warning: use location
  174 |                 n = online_cpus();
      |                     ^
this stmt call this function :online_cpus
trace fucntion name:online_cpus 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662f86c0
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <parm_decl 0x7fdf662f6000 n>
    def_stmt n_33 = online_cpus ();
    version:33>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <string_cst 0x7fdf662f3280
    type <array_type 0x7fdf662be3f0
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        BLK
        size <integer_cst 0x7fdf662a4c00 constant 448>
        unit-size <integer_cst 0x7fdf662a4c48 constant 56>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7fdf662be348 type <integer_type 0x7fdf667aa000 sizetype>
            DI
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa738 precision:64 min <integer_cst 0x7fdf66795be8 0> max <integer_cst 0x7fdf662a4c30 55>>
        pointer_to_this <pointer_type 0x7fdf662be498>>
    readonly constant static "run_processes_parallel: preparing to run up to %d tasks\000">

dot graph START

======================================================================
 <ssa_name 0x7fdf662f8558
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <parm_decl 0x7fdf662f6000 n>
    def_stmt n_24 = PHI <n_30(D)(2), n_33(3)>
    version:24>
 <ssa_name 0x7fdf662f8558
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <parm_decl 0x7fdf662f6000 n>
    def_stmt n_24 = PHI <n_30(D)(2), n_33(3)>
    version:24>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662f8558
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <parm_decl 0x7fdf662f6000 n>
    def_stmt n_24 = PHI <n_30(D)(2), n_33(3)>
    version:24>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (n_24 > i_25)
./benchmarks/git/use_after_free_2/git_uaf_2.c:195:23: warning: use location
  195 |         for (i = 0; i < n; i++) {
      |                       ^
_3 = (long unsigned int) n_24;
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:19: warning: use location
  192 |         pp->pfd = xcalloc(n, sizeof(*pp->pfd));
      |                   ^
_4 = calloc (_3, 8);
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:19: warning: use location
this stmt call this function :calloc
pp_34(D)->pfd = _4;
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:17: warning: use location
  192 |         pp->pfd = xcalloc(n, sizeof(*pp->pfd));
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = pp_34(D)->pfd;
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:19: warning: use location
  199 |                 pp->pfd[i].fd = -1;
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23->fd = -1;
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:31: warning: use location
  199 |                 pp->pfd[i].fd = -1;
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = pp_34(D)->pfd;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:19: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = _16 + _18;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:24: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19->events = 17;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:35: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = pp_34(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:39: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = _11 + _13;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:49: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = &_14->process;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
child_process_init (_15);
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
this stmt call this function :child_process_init
trace fucntion name:child_process_init 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = pp_34(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:32: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = _6 + _8;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:42: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = &_9->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strbuf_init (_10, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
this stmt call this function :strbuf_init
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 
_5 = &pp_34(D)->buffered_output;
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: use location
  193 |         strbuf_init(&pp->buffered_output, 0);
      |         ^
strbuf_init (_5, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: use location
this stmt call this function :strbuf_init
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 
pp_34(D)->children = _2;
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:22: warning: use location
  191 |         pp->children = xcalloc(n, sizeof(*pp->children));
      |                      ^
pp_34(D)->children = _2;
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:22: warning: use location
pp_34(D)->shutdown = 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:190:22: warning: use location
  190 |         pp->shutdown = 0;
      |                      ^
pp_34(D)->output_owner = 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:189:26: warning: use location
  189 |         pp->output_owner = 0;
      |                          ^
pp_34(D)->nr_processes = 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:188:26: warning: use location
  188 |         pp->nr_processes = 0;
      |                          ^
pp_34(D)->task_finished = _27;
./benchmarks/git/use_after_free_2/git_uaf_2.c:186:27: warning: use location
  186 |         pp->task_finished = task_finished ? task_finished : default_task_finished;
      |                           ^
pp_34(D)->task_finished = _27;
./benchmarks/git/use_after_free_2/git_uaf_2.c:186:27: warning: use location
pp_34(D)->start_failure = _26;
./benchmarks/git/use_after_free_2/git_uaf_2.c:185:27: warning: use location
  185 |         pp->start_failure = start_failure ? start_failure : default_start_failure;
      |                           ^
pp_34(D)->start_failure = _26;
./benchmarks/git/use_after_free_2/git_uaf_2.c:185:27: warning: use location
pp_34(D)->get_next_task = get_next_task_39(D);
./benchmarks/git/use_after_free_2/git_uaf_2.c:183:27: warning: use location
  183 |         pp->get_next_task = get_next_task;
      |                           ^
pp_34(D)->get_next_task = get_next_task_39(D);
./benchmarks/git/use_after_free_2/git_uaf_2.c:183:27: warning: use location
if (get_next_task_39(D) == 0B)
./benchmarks/git/use_after_free_2/git_uaf_2.c:181:12: warning: use location
  181 |         if (!get_next_task)
      |            ^
pp_34(D)->data = data_37(D);
./benchmarks/git/use_after_free_2/git_uaf_2.c:180:18: warning: use location
  180 |         pp->data = data;
      |                  ^
pp_34(D)->data = data_37(D);
./benchmarks/git/use_after_free_2/git_uaf_2.c:180:18: warning: use location
pp_34(D)->max_processes = n_24;
./benchmarks/git/use_after_free_2/git_uaf_2.c:176:27: warning: use location
  176 |         pp->max_processes = n;
      |                           ^
pp_34(D)->max_processes = n_24;
./benchmarks/git/use_after_free_2/git_uaf_2.c:176:27: warning: use location
_1 = (long unsigned int) n_24;
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:24: warning: use location
  191 |         pp->children = xcalloc(n, sizeof(*pp->children));
      |                        ^
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
./benchmarks/git/use_after_free_2/git_uaf_2.c:178:9: warning: use location
  178 |         trace_printf("run_processes_parallel: preparing to run up to %d tasks", n);
      |         ^
this stmt call this function :trace_printf
trace fucntion name:trace_printf 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_64 = VDEF <.MEM_63>
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
./benchmarks/git/use_after_free_2/git_uaf_2.c:178:9: warning: use location
this stmt call this function :trace_printf
trace fucntion name:trace_printf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662f8558
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <parm_decl 0x7fdf662f6000 n>
    def_stmt n_24 = PHI <n_30(D)(2), n_33(3)>
    version:24>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662eeee8
    type <pointer_type 0x7fdf667b1000
        type <void_type 0x7fdf667aaf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fdf667b1000>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fdf662ad498>>
   
    def_stmt _2 = calloc (_1, 120);
    version:2
    ptr-info 0x7fdf66304978>
 <ssa_name 0x7fdf662eeee8
    type <pointer_type 0x7fdf667b1000
        type <void_type 0x7fdf667aaf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fdf667b1000>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fdf662ad498>>
   
    def_stmt _2 = calloc (_1, 120);
    version:2
    ptr-info 0x7fdf66304978>

 ================== pre trace ptable ================== 
trace fucntion name:calloc 

 ================== pre trace ptable finish================== 
is Reserved word function :calloc
 
 Start check Pointer Collect  

======================================================================
# .MEM_72 = VDEF <.MEM_71>
_2 = calloc (_1, 120);
_2 = calloc (_1, 120);
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:24: warning: use location
  191 |         pp->children = xcalloc(n, sizeof(*pp->children));
      |                        ^
this stmt call this function :calloc
pp_34(D)->children = _2;
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:22: warning: use location
  191 |         pp->children = xcalloc(n, sizeof(*pp->children));
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = pp_34(D)->pfd;
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:19: warning: use location
  199 |                 pp->pfd[i].fd = -1;
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23->fd = -1;
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:31: warning: use location
  199 |                 pp->pfd[i].fd = -1;
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = pp_34(D)->pfd;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:19: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = _16 + _18;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:24: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19->events = 17;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:35: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = pp_34(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:39: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = _11 + _13;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:49: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = &_14->process;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
child_process_init (_15);
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
this stmt call this function :child_process_init
trace fucntion name:child_process_init 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = pp_34(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:32: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = _6 + _8;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:42: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = &_9->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strbuf_init (_10, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
this stmt call this function :strbuf_init
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 
_5 = &pp_34(D)->buffered_output;
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: use location
  193 |         strbuf_init(&pp->buffered_output, 0);
      |         ^
strbuf_init (_5, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: use location
this stmt call this function :strbuf_init
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 
pp_34(D)->pfd = _4;
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:17: warning: use location
  192 |         pp->pfd = xcalloc(n, sizeof(*pp->pfd));
      |                 ^
pp_34(D)->pfd = _4;
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:17: warning: use location
pp_34(D)->shutdown = 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:190:22: warning: use location
  190 |         pp->shutdown = 0;
      |                      ^
pp_34(D)->output_owner = 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:189:26: warning: use location
  189 |         pp->output_owner = 0;
      |                          ^
pp_34(D)->nr_processes = 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:188:26: warning: use location
  188 |         pp->nr_processes = 0;
      |                          ^
pp_34(D)->task_finished = _27;
./benchmarks/git/use_after_free_2/git_uaf_2.c:186:27: warning: use location
  186 |         pp->task_finished = task_finished ? task_finished : default_task_finished;
      |                           ^
pp_34(D)->task_finished = _27;
./benchmarks/git/use_after_free_2/git_uaf_2.c:186:27: warning: use location
pp_34(D)->start_failure = _26;
./benchmarks/git/use_after_free_2/git_uaf_2.c:185:27: warning: use location
  185 |         pp->start_failure = start_failure ? start_failure : default_start_failure;
      |                           ^
pp_34(D)->start_failure = _26;
./benchmarks/git/use_after_free_2/git_uaf_2.c:185:27: warning: use location
pp_34(D)->get_next_task = get_next_task_39(D);
./benchmarks/git/use_after_free_2/git_uaf_2.c:183:27: warning: use location
  183 |         pp->get_next_task = get_next_task;
      |                           ^
pp_34(D)->get_next_task = get_next_task_39(D);
./benchmarks/git/use_after_free_2/git_uaf_2.c:183:27: warning: use location
if (get_next_task_39(D) == 0B)
./benchmarks/git/use_after_free_2/git_uaf_2.c:181:12: warning: use location
  181 |         if (!get_next_task)
      |            ^
pp_34(D)->data = data_37(D);
./benchmarks/git/use_after_free_2/git_uaf_2.c:180:18: warning: use location
  180 |         pp->data = data;
      |                  ^
pp_34(D)->data = data_37(D);
./benchmarks/git/use_after_free_2/git_uaf_2.c:180:18: warning: use location
pp_34(D)->max_processes = n_24;
./benchmarks/git/use_after_free_2/git_uaf_2.c:176:27: warning: use location
  176 |         pp->max_processes = n;
      |                           ^
pp_34(D)->max_processes = n_24;
./benchmarks/git/use_after_free_2/git_uaf_2.c:176:27: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662eeee8
    type <pointer_type 0x7fdf667b1000
        type <void_type 0x7fdf667aaf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fdf667b1000>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fdf662ad498>>
   
    def_stmt _2 = calloc (_1, 120);
    version:2
    ptr-info 0x7fdf66304978>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662eef78
    type <pointer_type 0x7fdf667b1000
        type <void_type 0x7fdf667aaf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fdf667b1000>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fdf662ad498>>
   
    def_stmt _4 = calloc (_3, 8);
    version:4
    ptr-info 0x7fdf66304990>
 <ssa_name 0x7fdf662eef78
    type <pointer_type 0x7fdf667b1000
        type <void_type 0x7fdf667aaf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fdf667b1000>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fdf662ad498>>
   
    def_stmt _4 = calloc (_3, 8);
    version:4
    ptr-info 0x7fdf66304990>

 ================== pre trace ptable ================== 
trace fucntion name:calloc 

 ================== pre trace ptable finish================== 
is Reserved word function :calloc
 
 Start check Pointer Collect  

======================================================================
# .MEM_74 = VDEF <.MEM_73>
_4 = calloc (_3, 8);
_4 = calloc (_3, 8);
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:19: warning: use location
  192 |         pp->pfd = xcalloc(n, sizeof(*pp->pfd));
      |                   ^
this stmt call this function :calloc
pp_34(D)->pfd = _4;
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:17: warning: use location
  192 |         pp->pfd = xcalloc(n, sizeof(*pp->pfd));
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = pp_34(D)->pfd;
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:19: warning: use location
  199 |                 pp->pfd[i].fd = -1;
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23->fd = -1;
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:31: warning: use location
  199 |                 pp->pfd[i].fd = -1;
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = pp_34(D)->pfd;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:19: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = _16 + _18;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:24: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19->events = 17;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:35: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = pp_34(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:39: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = _11 + _13;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:49: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = &_14->process;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
child_process_init (_15);
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
this stmt call this function :child_process_init
trace fucntion name:child_process_init 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = pp_34(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:32: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = _6 + _8;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:42: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = &_9->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strbuf_init (_10, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
this stmt call this function :strbuf_init
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 
_5 = &pp_34(D)->buffered_output;
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: use location
  193 |         strbuf_init(&pp->buffered_output, 0);
      |         ^
strbuf_init (_5, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: use location
this stmt call this function :strbuf_init
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 
pp_34(D)->children = _2;
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:22: warning: use location
  191 |         pp->children = xcalloc(n, sizeof(*pp->children));
      |                      ^
pp_34(D)->children = _2;
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:22: warning: use location
pp_34(D)->shutdown = 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:190:22: warning: use location
  190 |         pp->shutdown = 0;
      |                      ^
pp_34(D)->output_owner = 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:189:26: warning: use location
  189 |         pp->output_owner = 0;
      |                          ^
pp_34(D)->nr_processes = 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:188:26: warning: use location
  188 |         pp->nr_processes = 0;
      |                          ^
pp_34(D)->task_finished = _27;
./benchmarks/git/use_after_free_2/git_uaf_2.c:186:27: warning: use location
  186 |         pp->task_finished = task_finished ? task_finished : default_task_finished;
      |                           ^
pp_34(D)->task_finished = _27;
./benchmarks/git/use_after_free_2/git_uaf_2.c:186:27: warning: use location
pp_34(D)->start_failure = _26;
./benchmarks/git/use_after_free_2/git_uaf_2.c:185:27: warning: use location
  185 |         pp->start_failure = start_failure ? start_failure : default_start_failure;
      |                           ^
pp_34(D)->start_failure = _26;
./benchmarks/git/use_after_free_2/git_uaf_2.c:185:27: warning: use location
pp_34(D)->get_next_task = get_next_task_39(D);
./benchmarks/git/use_after_free_2/git_uaf_2.c:183:27: warning: use location
  183 |         pp->get_next_task = get_next_task;
      |                           ^
pp_34(D)->get_next_task = get_next_task_39(D);
./benchmarks/git/use_after_free_2/git_uaf_2.c:183:27: warning: use location
if (get_next_task_39(D) == 0B)
./benchmarks/git/use_after_free_2/git_uaf_2.c:181:12: warning: use location
  181 |         if (!get_next_task)
      |            ^
pp_34(D)->data = data_37(D);
./benchmarks/git/use_after_free_2/git_uaf_2.c:180:18: warning: use location
  180 |         pp->data = data;
      |                  ^
pp_34(D)->data = data_37(D);
./benchmarks/git/use_after_free_2/git_uaf_2.c:180:18: warning: use location
pp_34(D)->max_processes = n_24;
./benchmarks/git/use_after_free_2/git_uaf_2.c:176:27: warning: use location
  176 |         pp->max_processes = n;
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (n_24 > i_25)
./benchmarks/git/use_after_free_2/git_uaf_2.c:195:23: warning: use location
  195 |         for (i = 0; i < n; i++) {
      |                       ^
_1 = (long unsigned int) n_24;
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:24: warning: use location
  191 |         pp->children = xcalloc(n, sizeof(*pp->children));
      |                        ^
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
./benchmarks/git/use_after_free_2/git_uaf_2.c:178:9: warning: use location
  178 |         trace_printf("run_processes_parallel: preparing to run up to %d tasks", n);
      |         ^
this stmt call this function :trace_printf
trace fucntion name:trace_printf 

 ================== trace ================== 
trace fucntion free:0 
pp_cleanup (&pp);
./benchmarks/git/use_after_free_2/git_uaf_2.c:371:9: warning: use location
  371 |         pp_cleanup(&pp);
      |         ^
this stmt call this function :pp_cleanup
trace fucntion name:pp_cleanup 

 ================== trace ================== 
trace fucntion free:0 
pp_cleanup (&pp);
./benchmarks/git/use_after_free_2/git_uaf_2.c:371:9: warning: use location
this stmt call this function :pp_cleanup
trace fucntion name:pp_cleanup 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662eef78
    type <pointer_type 0x7fdf667b1000
        type <void_type 0x7fdf667aaf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fdf667b1000>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fdf662ad498>>
   
    def_stmt _4 = calloc (_3, 8);
    version:4
    ptr-info 0x7fdf66304990>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662f8000
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = &pp_34(D)->buffered_output;
    version:5
    ptr-info 0x7fdf663049a8>
 <ssa_name 0x7fdf662f8000
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = &pp_34(D)->buffered_output;
    version:5
    ptr-info 0x7fdf663049a8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662f8000
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = &pp_34(D)->buffered_output;
    version:5
    ptr-info 0x7fdf663049a8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_76 = VDEF <.MEM_75>
strbuf_init (_5, 0);
strbuf_init (_5, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: use location
  193 |         strbuf_init(&pp->buffered_output, 0);
      |         ^
this stmt call this function :strbuf_init
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_76 = VDEF <.MEM_75>
strbuf_init (_5, 0);
strbuf_init (_5, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: use location
this stmt call this function :strbuf_init
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662f8000
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = &pp_34(D)->buffered_output;
    version:5
    ptr-info 0x7fdf663049a8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662f8168
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _10 = &_9->err;
    version:10
    ptr-info 0x7fdf663049f0>
 <ssa_name 0x7fdf662f8168
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _10 = &_9->err;
    version:10
    ptr-info 0x7fdf663049f0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662f8168
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _10 = &_9->err;
    version:10
    ptr-info 0x7fdf663049f0>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_78 = VDEF <.MEM_60>
strbuf_init (_10, 0);
strbuf_init (_10, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                 ^
this stmt call this function :strbuf_init
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_78 = VDEF <.MEM_60>
strbuf_init (_10, 0);
strbuf_init (_10, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
this stmt call this function :strbuf_init
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662f8168
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _10 = &_9->err;
    version:10
    ptr-info 0x7fdf663049f0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662f82d0
    type <pointer_type 0x7fdf662bb7e0
        type <record_type 0x7fdf662bb738 child_process BLK
            size <integer_cst 0x7fdf662a4978 constant 640>
            unit-size <integer_cst 0x7fdf662a4948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738 fields <field_decl 0x7fdf662bd850 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _15 = &_14->process;
    version:15
    ptr-info 0x7fdf66304a38>
 <ssa_name 0x7fdf662f82d0
    type <pointer_type 0x7fdf662bb7e0
        type <record_type 0x7fdf662bb738 child_process BLK
            size <integer_cst 0x7fdf662a4978 constant 640>
            unit-size <integer_cst 0x7fdf662a4948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738 fields <field_decl 0x7fdf662bd850 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _15 = &_14->process;
    version:15
    ptr-info 0x7fdf66304a38>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662f82d0
    type <pointer_type 0x7fdf662bb7e0
        type <record_type 0x7fdf662bb738 child_process BLK
            size <integer_cst 0x7fdf662a4978 constant 640>
            unit-size <integer_cst 0x7fdf662a4948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738 fields <field_decl 0x7fdf662bd850 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _15 = &_14->process;
    version:15
    ptr-info 0x7fdf66304a38>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_79 = VDEF <.MEM_78>
child_process_init (_15);
child_process_init (_15);
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                 ^
this stmt call this function :child_process_init
trace fucntion name:child_process_init 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_79 = VDEF <.MEM_78>
child_process_init (_15);
child_process_init (_15);
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
this stmt call this function :child_process_init
trace fucntion name:child_process_init 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662f82d0
    type <pointer_type 0x7fdf662bb7e0
        type <record_type 0x7fdf662bb738 child_process BLK
            size <integer_cst 0x7fdf662a4978 constant 640>
            unit-size <integer_cst 0x7fdf662a4948 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662bb738 fields <field_decl 0x7fdf662bd850 argv> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _15 = &_14->process;
    version:15
    ptr-info 0x7fdf66304a38>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662eeea0
    type <integer_type 0x7fdf667aa7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa738 precision:64 min <integer_cst 0x7fdf66795e88 0> max <integer_cst 0x7fdf66796500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fdf667b67e0>>
   
    def_stmt _1 = (long unsigned int) n_24;
    version:1>
 <ssa_name 0x7fdf662eeea0
    type <integer_type 0x7fdf667aa7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa738 precision:64 min <integer_cst 0x7fdf66795e88 0> max <integer_cst 0x7fdf66796500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fdf667b67e0>>
   
    def_stmt _1 = (long unsigned int) n_24;
    version:1>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662eeea0
    type <integer_type 0x7fdf667aa7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa738 precision:64 min <integer_cst 0x7fdf66795e88 0> max <integer_cst 0x7fdf66796500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fdf667b67e0>>
   
    def_stmt _1 = (long unsigned int) n_24;
    version:1>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_72 = VDEF <.MEM_71>
_2 = calloc (_1, 120);
_2 = calloc (_1, 120);
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:24: warning: use location
  191 |         pp->children = xcalloc(n, sizeof(*pp->children));
      |                        ^
this stmt call this function :calloc
pp_34(D)->children = _2;
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:22: warning: use location
  191 |         pp->children = xcalloc(n, sizeof(*pp->children));
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = pp_34(D)->pfd;
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:19: warning: use location
  199 |                 pp->pfd[i].fd = -1;
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23->fd = -1;
./benchmarks/git/use_after_free_2/git_uaf_2.c:199:31: warning: use location
  199 |                 pp->pfd[i].fd = -1;
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = pp_34(D)->pfd;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:19: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19 = _16 + _18;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:24: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_19->events = 17;
./benchmarks/git/use_after_free_2/git_uaf_2.c:198:35: warning: use location
  198 |                 pp->pfd[i].events = POLLIN | POLLHUP;
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11 = pp_34(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:39: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = _11 + _13;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:49: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = &_14->process;
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
  197 |                 child_process_init(&pp->children[i].process);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
child_process_init (_15);
./benchmarks/git/use_after_free_2/git_uaf_2.c:197:17: warning: use location
this stmt call this function :child_process_init
trace fucntion name:child_process_init 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = pp_34(D)->children;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:32: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = _6 + _8;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:42: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = &_9->err;
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
  196 |                 strbuf_init(&pp->children[i].err, 0);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strbuf_init (_10, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:196:17: warning: use location
this stmt call this function :strbuf_init
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 
_5 = &pp_34(D)->buffered_output;
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: use location
  193 |         strbuf_init(&pp->buffered_output, 0);
      |         ^
strbuf_init (_5, 0);
./benchmarks/git/use_after_free_2/git_uaf_2.c:193:9: warning: use location
this stmt call this function :strbuf_init
trace fucntion name:strbuf_init 

 ================== trace ================== 
trace fucntion free:0 
pp_34(D)->pfd = _4;
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:17: warning: use location
  192 |         pp->pfd = xcalloc(n, sizeof(*pp->pfd));
      |                 ^
pp_34(D)->pfd = _4;
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:17: warning: use location
pp_34(D)->shutdown = 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:190:22: warning: use location
  190 |         pp->shutdown = 0;
      |                      ^
pp_34(D)->output_owner = 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:189:26: warning: use location
  189 |         pp->output_owner = 0;
      |                          ^
pp_34(D)->nr_processes = 0;
./benchmarks/git/use_after_free_2/git_uaf_2.c:188:26: warning: use location
  188 |         pp->nr_processes = 0;
      |                          ^
pp_34(D)->task_finished = _27;
./benchmarks/git/use_after_free_2/git_uaf_2.c:186:27: warning: use location
  186 |         pp->task_finished = task_finished ? task_finished : default_task_finished;
      |                           ^
pp_34(D)->task_finished = _27;
./benchmarks/git/use_after_free_2/git_uaf_2.c:186:27: warning: use location
pp_34(D)->start_failure = _26;
./benchmarks/git/use_after_free_2/git_uaf_2.c:185:27: warning: use location
  185 |         pp->start_failure = start_failure ? start_failure : default_start_failure;
      |                           ^
pp_34(D)->start_failure = _26;
./benchmarks/git/use_after_free_2/git_uaf_2.c:185:27: warning: use location
pp_34(D)->get_next_task = get_next_task_39(D);
./benchmarks/git/use_after_free_2/git_uaf_2.c:183:27: warning: use location
  183 |         pp->get_next_task = get_next_task;
      |                           ^
pp_34(D)->get_next_task = get_next_task_39(D);
./benchmarks/git/use_after_free_2/git_uaf_2.c:183:27: warning: use location
if (get_next_task_39(D) == 0B)
./benchmarks/git/use_after_free_2/git_uaf_2.c:181:12: warning: use location
  181 |         if (!get_next_task)
      |            ^
pp_34(D)->data = data_37(D);
./benchmarks/git/use_after_free_2/git_uaf_2.c:180:18: warning: use location
  180 |         pp->data = data;
      |                  ^
pp_34(D)->data = data_37(D);
./benchmarks/git/use_after_free_2/git_uaf_2.c:180:18: warning: use location
pp_34(D)->max_processes = n_24;
./benchmarks/git/use_after_free_2/git_uaf_2.c:176:27: warning: use location
  176 |         pp->max_processes = n;
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (n_24 > i_25)
./benchmarks/git/use_after_free_2/git_uaf_2.c:195:23: warning: use location
  195 |         for (i = 0; i < n; i++) {
      |                       ^
_3 = (long unsigned int) n_24;
./benchmarks/git/use_after_free_2/git_uaf_2.c:192:19: warning: use location
  192 |         pp->pfd = xcalloc(n, sizeof(*pp->pfd));
      |                   ^
_1 = (long unsigned int) n_24;
./benchmarks/git/use_after_free_2/git_uaf_2.c:191:24: warning: use location
  191 |         pp->children = xcalloc(n, sizeof(*pp->children));
      |                        ^
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
./benchmarks/git/use_after_free_2/git_uaf_2.c:178:9: warning: use location
  178 |         trace_printf("run_processes_parallel: preparing to run up to %d tasks", n);
      |         ^
this stmt call this function :trace_printf
trace fucntion name:trace_printf 

 ================== trace ================== 
trace fucntion free:0 
pp_cleanup (&pp);
./benchmarks/git/use_after_free_2/git_uaf_2.c:371:9: warning: use location
  371 |         pp_cleanup(&pp);
      |         ^
this stmt call this function :pp_cleanup
trace fucntion name:pp_cleanup 

 ================== trace ================== 
trace fucntion free:0 
pp_cleanup (&pp);
./benchmarks/git/use_after_free_2/git_uaf_2.c:371:9: warning: use location
this stmt call this function :pp_cleanup
trace fucntion name:pp_cleanup 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662eeea0
    type <integer_type 0x7fdf667aa7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa738 precision:64 min <integer_cst 0x7fdf66795e88 0> max <integer_cst 0x7fdf66796500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fdf667b67e0>>
   
    def_stmt _1 = (long unsigned int) n_24;
    version:1>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fdf662eef30
    type <integer_type 0x7fdf667aa7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa738 precision:64 min <integer_cst 0x7fdf66795e88 0> max <integer_cst 0x7fdf66796500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fdf667b67e0>>
   
    def_stmt _3 = (long unsigned int) n_24;
    version:3>
 <ssa_name 0x7fdf662eef30
    type <integer_type 0x7fdf667aa7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa738 precision:64 min <integer_cst 0x7fdf66795e88 0> max <integer_cst 0x7fdf66796500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fdf667b67e0>>
   
    def_stmt _3 = (long unsigned int) n_24;
    version:3>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662eef30
    type <integer_type 0x7fdf667aa7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa738 precision:64 min <integer_cst 0x7fdf66795e88 0> max <integer_cst 0x7fdf66796500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fdf667b67e0>>
   
    def_stmt _3 = (long unsigned int) n_24;
    version:3>
is Other function 

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:pp_init========= [0m
[40;44m =======node_fun:default_task_finished========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path default_task_finished  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:strbuf_addf========= [0m
[40;33m =======POP node_fun stack:strbuf_addf========= [0m
[40;42m =======pre_check_funciton:default_task_finished========= [0m
[40;42m =======start_check_funciton:default_task_finished========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fdf662fd360
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fdf662f6400 err>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7fdf66304be8>
 <ssa_name 0x7fdf662fd360
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fdf662f6400 err>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7fdf66304be8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662fd360
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fdf662f6400 err>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7fdf66304be8>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :strbuf_addf
# .MEM_24 = VDEF <.MEM_23(D)>
strbuf_addf (err_16(D), "A child failed with return code %d:", result_14(D));
In function ‘default_task_finished’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:156:9: warning: use location
  156 |         strbuf_addf(err, "A child failed with return code %d:", result);
      |         ^
# .MEM_25 = VDEF <.MEM_21>
strbuf_addf (err_16(D), " %s", _5);
./benchmarks/git/use_after_free_2/git_uaf_2.c:158:17: warning: use location
  158 |                 strbuf_addf(err, " %s", cp->argv[i]);
      |                 ^
# .MEM_24 = VDEF <.MEM_23(D)>
strbuf_addf (err_16(D), "A child failed with return code %d:", result_14(D));
strbuf_addf (err_16(D), "A child failed with return code %d:", result_14(D));
./benchmarks/git/use_after_free_2/git_uaf_2.c:156:9: warning: use location
  156 |         strbuf_addf(err, "A child failed with return code %d:", result);
      |         ^
this stmt call this function :strbuf_addf
trace fucntion name:strbuf_addf 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_24 = VDEF <.MEM_23(D)>
strbuf_addf (err_16(D), "A child failed with return code %d:", result_14(D));
strbuf_addf (err_16(D), "A child failed with return code %d:", result_14(D));
./benchmarks/git/use_after_free_2/git_uaf_2.c:156:9: warning: use location
this stmt call this function :strbuf_addf
trace fucntion name:strbuf_addf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662fd360
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fdf662f6400 err>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7fdf66304be8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <string_cst 0x7fdf667a8080
    type <array_type 0x7fdf662bbe70
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        BLK
        size <integer_cst 0x7fdf662a4b40 constant 288>
        unit-size <integer_cst 0x7fdf662a4bb8 constant 36>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7fdf662bbdc8 type <integer_type 0x7fdf667aa000 sizetype>
            DI
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa738 precision:64 min <integer_cst 0x7fdf66795be8 0> max <integer_cst 0x7fdf662a4ba0 35>>
        pointer_to_this <pointer_type 0x7fdf662bbf18>>
    readonly constant static "A child failed with return code %d:\000">

dot graph START

======================================================================
 <ssa_name 0x7fdf662fd318
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <parm_decl 0x7fdf662f6300 result>
    def_stmt GIMPLE_NOP
    version:14>
 <ssa_name 0x7fdf662fd318
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <parm_decl 0x7fdf662f6300 result>
    def_stmt GIMPLE_NOP
    version:14>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662fd318
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <parm_decl 0x7fdf662f6300 result>
    def_stmt GIMPLE_NOP
    version:14>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_24 = VDEF <.MEM_23(D)>
strbuf_addf (err_16(D), "A child failed with return code %d:", result_14(D));
strbuf_addf (err_16(D), "A child failed with return code %d:", result_14(D));
./benchmarks/git/use_after_free_2/git_uaf_2.c:156:9: warning: use location
this stmt call this function :strbuf_addf
trace fucntion name:strbuf_addf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :strbuf_addf
# .MEM_24 = VDEF <.MEM_23(D)>
strbuf_addf (err_16(D), "A child failed with return code %d:", result_14(D));
./benchmarks/git/use_after_free_2/git_uaf_2.c:156:9: warning: use location
# .MEM_25 = VDEF <.MEM_21>
strbuf_addf (err_16(D), " %s", _5);
./benchmarks/git/use_after_free_2/git_uaf_2.c:158:17: warning: use location
  158 |                 strbuf_addf(err, " %s", cp->argv[i]);
      |                 ^
if (result_14(D) == 0)
./benchmarks/git/use_after_free_2/git_uaf_2.c:153:12: warning: use location
  153 |         if (!result)
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662fd318
    type <integer_type 0x7fdf667aa5e8 int public SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa5e8 precision:32 min <integer_cst 0x7fdf66795db0 -2147483648> max <integer_cst 0x7fdf66795dc8 2147483647>
        pointer_to_this <pointer_type 0x7fdf667b19d8>>
    var <parm_decl 0x7fdf662f6300 result>
    def_stmt GIMPLE_NOP
    version:14>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <string_cst 0x7fdf662fc080
    type <array_type 0x7fdf662bbc78
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7fdf662bbbd0 type <integer_type 0x7fdf667aa000 sizetype>
            DI
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa738 precision:64 min <integer_cst 0x7fdf66795be8 0> max <integer_cst 0x7fdf662a4b88 3>>
        pointer_to_this <pointer_type 0x7fdf662bbd20>>
    readonly constant static " %s\000">

dot graph START

======================================================================
 <ssa_name 0x7fdf662fd120
    type <pointer_type 0x7fdf662b6888
        type <integer_type 0x7fdf662b67e0 char readonly QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b6888>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fdf662bb5e8>>
   
    def_stmt _5 = *_4;
    version:5
    ptr-info 0x7fdf66304b88>
 <ssa_name 0x7fdf662fd120
    type <pointer_type 0x7fdf662b6888
        type <integer_type 0x7fdf662b67e0 char readonly QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b6888>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fdf662bb5e8>>
   
    def_stmt _5 = *_4;
    version:5
    ptr-info 0x7fdf66304b88>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662fd120
    type <pointer_type 0x7fdf662b6888
        type <integer_type 0x7fdf662b67e0 char readonly QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b6888>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fdf662bb5e8>>
   
    def_stmt _5 = *_4;
    version:5
    ptr-info 0x7fdf66304b88>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_25 = VDEF <.MEM_21>
strbuf_addf (err_16(D), " %s", _5);
strbuf_addf (err_16(D), " %s", _5);
./benchmarks/git/use_after_free_2/git_uaf_2.c:158:17: warning: use location
  158 |                 strbuf_addf(err, " %s", cp->argv[i]);
      |                 ^
this stmt call this function :strbuf_addf
trace fucntion name:strbuf_addf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================

 Expand conflict 
 The same function may have multiple branches :strbuf_addf
# .MEM_25 = VDEF <.MEM_21>
strbuf_addf (err_16(D), " %s", _5);
./benchmarks/git/use_after_free_2/git_uaf_2.c:158:17: warning: use location
# .MEM_24 = VDEF <.MEM_23(D)>
strbuf_addf (err_16(D), "A child failed with return code %d:", result_14(D));
./benchmarks/git/use_after_free_2/git_uaf_2.c:156:9: warning: use location
  156 |         strbuf_addf(err, "A child failed with return code %d:", result);
      |         ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662fd120
    type <pointer_type 0x7fdf662b6888
        type <integer_type 0x7fdf662b67e0 char readonly QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b6888>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fdf662bb5e8>>
   
    def_stmt _5 = *_4;
    version:5
    ptr-info 0x7fdf66304b88>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:default_task_finished========= [0m
[40;44m =======node_fun:default_start_failure========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path default_start_failure  function_call count: 2 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:strbuf_addf========= [0m
[40;33m =======POP node_fun stack:strbuf_addf========= [0m
[40;42m =======pre add _ fucntion:strbuf_addstr========= [0m
[40;33m =======POP node_fun stack:strbuf_addstr========= [0m
[40;42m =======pre_check_funciton:default_start_failure========= [0m
[40;42m =======start_check_funciton:default_start_failure========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fdf662fd8b8
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fdf662f6600 err>
    def_stmt GIMPLE_NOP
    version:14
    ptr-info 0x7fdf66304ca8>
 <ssa_name 0x7fdf662fd8b8
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fdf662f6600 err>
    def_stmt GIMPLE_NOP
    version:14
    ptr-info 0x7fdf66304ca8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662fd8b8
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fdf662f6600 err>
    def_stmt GIMPLE_NOP
    version:14
    ptr-info 0x7fdf66304ca8>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strbuf_addf (err_14(D), " %s", _5);
In function ‘default_start_failure’:
./benchmarks/git/use_after_free_2/git_uaf_2.c:140:17: warning: use location
  140 |                 strbuf_addf(err, " %s", cp->argv[i]);
      |                 ^
this stmt call this function :strbuf_addf
trace fucntion name:strbuf_addf 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_21 = VDEF <.MEM_20(D)>
strbuf_addstr (err_14(D), "Starting a child failed:");
strbuf_addstr (err_14(D), "Starting a child failed:");
./benchmarks/git/use_after_free_2/git_uaf_2.c:138:9: warning: use location
  138 |         strbuf_addstr(err, "Starting a child failed:");
      |         ^
this stmt call this function :strbuf_addstr
trace fucntion name:strbuf_addstr 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_21 = VDEF <.MEM_20(D)>
strbuf_addstr (err_14(D), "Starting a child failed:");
strbuf_addstr (err_14(D), "Starting a child failed:");
./benchmarks/git/use_after_free_2/git_uaf_2.c:138:9: warning: use location
this stmt call this function :strbuf_addstr
trace fucntion name:strbuf_addstr 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662fd8b8
    type <pointer_type 0x7fdf662bb888
        type <record_type 0x7fdf662b4150 strbuf BLK
            size <integer_cst 0x7fdf667b3078 constant 192>
            unit-size <integer_cst 0x7fdf667b3048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf662b4150 fields <field_decl 0x7fdf662b0260 alloc> context <translation_unit_decl 0x7fdf667a0168 ./benchmarks/git/use_after_free_2/git_uaf_2.c>
            pointer_to_this <pointer_type 0x7fdf662bb888>>
        unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fdf662f6600 err>
    def_stmt GIMPLE_NOP
    version:14
    ptr-info 0x7fdf66304ca8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <string_cst 0x7fdf662fb510
    type <array_type 0x7fdf662bba80
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        BLK
        size <integer_cst 0x7fdf662a4b70 constant 200>
        unit-size <integer_cst 0x7fdf662a4b58 constant 25>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7fdf662bb9d8 type <integer_type 0x7fdf667aa000 sizetype>
            DI
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa738 precision:64 min <integer_cst 0x7fdf66795be8 0> max <integer_cst 0x7fdf667b3048 24>>
        pointer_to_this <pointer_type 0x7fdf662bbb28>>
    readonly constant static "Starting a child failed:\000">

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <string_cst 0x7fdf662fc180
    type <array_type 0x7fdf662bbc78
        type <integer_type 0x7fdf662ad930 char public QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b4000>>
        SI
        size <integer_cst 0x7fdf66795df8 constant 32>
        unit-size <integer_cst 0x7fdf66795e10 constant 4>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7fdf662bbbd0 type <integer_type 0x7fdf667aa000 sizetype>
            DI
            size <integer_cst 0x7fdf66795bb8 constant 64>
            unit-size <integer_cst 0x7fdf66795bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa738 precision:64 min <integer_cst 0x7fdf66795be8 0> max <integer_cst 0x7fdf662a4b88 3>>
        pointer_to_this <pointer_type 0x7fdf662bbd20>>
    readonly constant static " %s\000">

dot graph START

======================================================================
 <ssa_name 0x7fdf662fd6c0
    type <pointer_type 0x7fdf662b6888
        type <integer_type 0x7fdf662b67e0 char readonly QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b6888>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fdf662bb5e8>>
   
    def_stmt _5 = *_4;
    version:5
    ptr-info 0x7fdf66304c48>
 <ssa_name 0x7fdf662fd6c0
    type <pointer_type 0x7fdf662b6888
        type <integer_type 0x7fdf662b67e0 char readonly QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b6888>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fdf662bb5e8>>
   
    def_stmt _5 = *_4;
    version:5
    ptr-info 0x7fdf66304c48>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fdf662fd6c0
    type <pointer_type 0x7fdf662b6888
        type <integer_type 0x7fdf662b67e0 char readonly QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b6888>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fdf662bb5e8>>
   
    def_stmt _5 = *_4;
    version:5
    ptr-info 0x7fdf66304c48>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_22 = VDEF <.MEM_19>
strbuf_addf (err_14(D), " %s", _5);
strbuf_addf (err_14(D), " %s", _5);
./benchmarks/git/use_after_free_2/git_uaf_2.c:140:17: warning: use location
  140 |                 strbuf_addf(err, " %s", cp->argv[i]);
      |                 ^
this stmt call this function :strbuf_addf
trace fucntion name:strbuf_addf 

 ================== trace ================== 
trace fucntion free:0 
strbuf_addstr (err_14(D), "Starting a child failed:");
./benchmarks/git/use_after_free_2/git_uaf_2.c:138:9: warning: use location
  138 |         strbuf_addstr(err, "Starting a child failed:");
      |         ^
this stmt call this function :strbuf_addstr
trace fucntion name:strbuf_addstr 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fdf662fd6c0
    type <pointer_type 0x7fdf662b6888
        type <integer_type 0x7fdf662b67e0 char readonly QI
            size <integer_cst 0x7fdf66795ca8 constant 8>
            unit-size <integer_cst 0x7fdf66795cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fdf667aa3f0 precision:8 min <integer_cst 0x7fdf662a47b0 -128> max <integer_cst 0x7fdf662a4798 127>
            pointer_to_this <pointer_type 0x7fdf662b6888>>
        public unsigned DI
        size <integer_cst 0x7fdf66795bb8 constant 64>
        unit-size <integer_cst 0x7fdf66795bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fdf662bb5e8>>
   
    def_stmt _5 = *_4;
    version:5
    ptr-info 0x7fdf66304c48>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:default_start_failure========= [0m
fucntion collect path finsh

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
proc = {};
proc.args.argv = &empty_argv;
proc.env_array.argv = &empty_argv;
if (argc_30(D) <= 2)
  goto <bb 16>; [34.00%]
else
  goto <bb 3>; [66.00%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 708669601]:
_1 = argv_31(D) + 16;
proc.argv = _1;
_2 = MEM[(char * *)argv_31(D) + 8B];
_3 = strcmp (_2, "start-command-ENOENT");
if (_3 == 0)
  goto <bb 4>; [33.00%]
else
  goto <bb 7>; [67.00%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 233860967]:
_4 = start_command (&proc);
if (_4 < 0)
  goto <bb 5>; [73.25%]
else
  goto <bb 6>; [26.75%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 171303159]:
_5 = __errno_location ();
_6 = *_5;
if (_6 == 2)
  goto <bb 16>; [34.00%]
else
  goto <bb 6>; [66.00%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 175617892]:
_7 = MEM[(char * *)argv_31(D) + 8B];
_8 = stderr;
fprintf (_8, "FAIL %s\n", _7);
goto <bb 16>; [100.00%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 474808634]:
_9 = MEM[(char * *)argv_31(D) + 8B];
_10 = strcmp (_9, "run-command");
if (_10 == 0)
  goto <bb 8>; [0.04%]
else
  goto <bb 9>; [99.96%]

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 189923]:
_11 = run_command (&proc);
exit (_11);

=======is loop:0=========

 bb index 9 
<bb 9> [local count: 474618711]:
_12 = MEM[(char * *)argv_31(D) + 16B];
jobs_33 = atoi (_12);
_13 = argv_31(D) + 24;
proc.argv = _13;
_14 = MEM[(char * *)argv_31(D) + 8B];
_15 = strcmp (_14, "run-command-parallel");
if (_15 == 0)
  goto <bb 10>; [0.04%]
else
  goto <bb 11>; [99.96%]

=======is loop:0=========

 bb index 10 
<bb 10> [local count: 189847]:
_16 = run_processes_parallel (jobs_33, parallel_next, 0B, 0B, &proc);
exit (_16);

=======is loop:0=========

 bb index 11 
<bb 11> [local count: 474428864]:
_17 = MEM[(char * *)argv_31(D) + 8B];
_18 = strcmp (_17, "run-command-abort");
if (_18 == 0)
  goto <bb 12>; [0.04%]
else
  goto <bb 13>; [99.96%]

=======is loop:0=========

 bb index 12 
<bb 12> [local count: 189771]:
_19 = run_processes_parallel (jobs_33, parallel_next, 0B, task_finished, &proc);
exit (_19);

=======is loop:0=========

 bb index 13 
<bb 13> [local count: 474239093]:
_20 = MEM[(char * *)argv_31(D) + 8B];
_21 = strcmp (_20, "run-command-no-jobs");
if (_21 == 0)
  goto <bb 14>; [0.04%]
else
  goto <bb 15>; [99.96%]

=======is loop:0=========

 bb index 14 
<bb 14> [local count: 189695]:
_22 = run_processes_parallel (jobs_33, no_job, 0B, task_finished, &proc);
exit (_22);

=======is loop:0=========

 bb index 15 
<bb 15> [local count: 474049397]:
_23 = stderr;
__builtin_fwrite ("check usage\n", 1, 12, _23);

=======is loop:0=========

 bb index 16 
<bb 16> [local count: 1072982589]:
# _24 = PHI <1(2), 0(5), 1(6), 1(15)>
proc ={v} {CLOBBER};
return _24;

=======Mapping node_fun:task_finished=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
strbuf_addf (err_2(D), "asking for a quick stop\n");
return 1;

=======Mapping node_fun:no_job=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
strbuf_addf (err_2(D), "no further jobs available\n");
return 0;

=======Mapping node_fun:parallel_next=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = number_callbacks;
if (_1 > 3)
  goto <bb 4>; [51.12%]
else
  goto <bb 3>; [48.88%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 524845000]:
_2 = MEM[(struct child_process *)cb_8(D)].argv;
_3 = &cp_10(D)->args;
argv_array_pushv (_3, _2);
strbuf_addf (err_12(D), "preloaded output of a child\n");
_4 = number_callbacks;
_5 = _4 + 1;
number_callbacks = _5;

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073741824]:
# _6 = PHI <0(2), 1(3)>
return _6;

=======Mapping node_fun:run_processes_parallel=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 44310769]:
pp_init (&pp, n_15(D), get_next_task_16(D), start_failure_17(D), task_finished_18(D), pp_cb_19(D));

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 46613822]:

=======is loop:1=========

 bb index 17 
<bb 17> [local count: 86184446]:

=======is loop:1=========

 bb index 16 
<bb 16> [local count: 805650347]:
goto <bb 8>; [100.00%]

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 812398425]:
code_22 = pp_start_one (&pp);
if (code_22 == 0)
  goto <bb 5>; [33.00%]
else
  goto <bb 6>; [67.00%]

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 268091479]:
// predicted unlikely by continue predictor.
i_25 = i_8 + 1;
goto <bb 8>; [100.00%]

=======is loop:1=========

 bb index 6 
<bb 6> [local count: 544306946]:
if (code_22 < 0)
  goto <bb 7>; [25.50%]
else
  goto <bb 11>; [74.50%]

=======is loop:1=========

 bb index 7 
<bb 7> [local count: 138798273]:
pp.shutdown = 1;
_1 = -code_22;
kill_children (&pp, _1);
goto <bb 11>; [100.00%]

=======is loop:1=========

 bb index 8 
<bb 8> [local count: 1073741824]:
# i_8 = PHI <0(16), i_25(5)>
if (i_8 <= 3)
  goto <bb 9>; [80.00%]
else
  goto <bb 11>; [20.00%]

=======is loop:1=========

 bb index 9 
<bb 9> [local count: 858993457]:
_2 = BIT_FIELD_REF <pp, 8, 448>;
_3 = _2 & 1;
if (_3 == 0)
  goto <bb 10>; [97.25%]
else
  goto <bb 11>; [2.75%]

=======is loop:1=========

 bb index 10 
<bb 10> [local count: 835371135]:
_4 = pp.nr_processes;
_5 = pp.max_processes;
if (_4 < _5)
  goto <bb 4>; [97.25%]
else
  goto <bb 11>; [2.75%]

=======is loop:1=========

 bb index 11 
<bb 11> [local count: 805650348]:
_6 = pp.nr_processes;
if (_6 == 0)
  goto <bb 15>; [5.50%]
else
  goto <bb 12>; [94.50%]

=======is loop:1=========

 bb index 12 
<bb 12> [local count: 761339579]:
pp_buffer_stderr (&pp, 100);
pp_output (&pp);
code_29 = pp_collect_finished (&pp);
if (code_29 != 0)
  goto <bb 13>; [5.50%]
else
  goto <bb 19>; [94.50%]

=======is loop:1=========

 bb index 19 
<bb 19> [local count: 719465902]:
goto <bb 16>; [100.00%]

=======is loop:1=========

 bb index 13 
<bb 13> [local count: 41873677]:
pp.shutdown = 1;
if (code_29 < 0)
  goto <bb 14>; [5.50%]
else
  goto <bb 18>; [94.50%]

=======is loop:1=========

 bb index 18 
<bb 18> [local count: 39570624]:
goto <bb 17>; [100.00%]

=======is loop:1=========

 bb index 14 
<bb 14> [local count: 2303052]:
_7 = -code_29;
kill_children (&pp, _7);
goto <bb 3>; [100.00%]

=======is loop:0=========

 bb index 15 
<bb 15> [local count: 44310769]:
pp_cleanup (&pp);
pp ={v} {CLOBBER};
return 0;

=======Mapping node_fun:child_process_clear=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = &child_3(D)->args;
argv_array_clear (_1);
_2 = &child_3(D)->env_array;
argv_array_clear (_2);
return;

=======Mapping node_fun:finish_command=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = cmd_5(D)->argv;
_2 = *_1;
_3 = cmd_5(D)->pid;
ret_7 = wait_or_whine (_3, _2, 0);
child_process_clear (cmd_5(D));
return ret_7;

=======Mapping node_fun:pp_collect_finished=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 12617860]:
n_92 = pp_91(D)->max_processes;
goto <bb 19>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 1014686025]:
_1 = pp_91(D)->children;
_2 = (long unsigned int) i_83;
_3 = _2 * 120;
_4 = _1 + _3;
_5 = _4->state;
if (_5 == 2)
  goto <bb 6>; [5.50%]
else
  goto <bb 4>; [94.50%]

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 958878294]:
i_95 = i_83 + 1;

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 1073741824]:
# i_83 = PHI <i_95(4), 0(20)>
_6 = pp_91(D)->max_processes;
if (_6 > i_83)
  goto <bb 3>; [94.50%]
else
  goto <bb 6>; [5.50%]

=======is loop:1=========

 bb index 6 
<bb 6> [local count: 114863531]:
_7 = pp_91(D)->max_processes;
if (_7 == i_83)
  goto <bb 18>; [3.66%]
else
  goto <bb 7>; [96.34%]

=======is loop:1=========

 bb index 7 
<bb 7> [local count: 110659526]:
_8 = pp_91(D)->children;
_9 = (long unsigned int) i_83;
_10 = _9 * 120;
_11 = _8 + _10;
_12 = &_11->process;
code_97 = finish_command (_12);
_13 = pp_91(D)->task_finished;
_14 = pp_91(D)->children;
_15 = (long unsigned int) i_83;
_16 = _15 * 120;
_17 = _14 + _16;
_18 = &_17->data;
_19 = pp_91(D)->data;
_20 = pp_91(D)->children;
_21 = (long unsigned int) i_83;
_22 = _21 * 120;
_23 = _20 + _22;
_24 = &_23->err;
_25 = pp_91(D)->children;
_26 = (long unsigned int) i_83;
_27 = _26 * 120;
_28 = _25 + _27;
_29 = &_28->process;
code_99 = _13 (code_97, _29, _24, _19, _18);
if (code_99 != 0)
  goto <bb 8>; [50.00%]
else
  goto <bb 9>; [50.00%]

=======is loop:1=========

 bb index 8 
<bb 8> [local count: 55329763]:

=======is loop:1=========

 bb index 9 
<bb 9> [local count: 110659526]:
# result_85 = PHI <result_86(7), code_99(8)>
if (code_99 < 0)
  goto <bb 18>; [3.66%]
else
  goto <bb 10>; [96.34%]

=======is loop:1=========

 bb index 10 
<bb 10> [local count: 106609387]:
_30 = pp_91(D)->nr_processes;
_31 = _30 + -1;
pp_91(D)->nr_processes = _31;
_32 = pp_91(D)->children;
_33 = (long unsigned int) i_83;
_34 = _33 * 120;
_35 = _32 + _34;
_35->state = 0;
_36 = pp_91(D)->pfd;
_37 = (long unsigned int) i_83;
_38 = _37 * 8;
_39 = _36 + _38;
_39->fd = -1;
_40 = pp_91(D)->children;
_41 = (long unsigned int) i_83;
_42 = _41 * 120;
_43 = _40 + _42;
_44 = &_43->process;
child_process_init (_44);
_45 = pp_91(D)->output_owner;
if (_45 != i_83)
  goto <bb 11>; [84.00%]
else
  goto <bb 12>; [16.00%]

=======is loop:1=========

 bb index 11 
<bb 11> [local count: 89551886]:
_46 = pp_91(D)->children;
_47 = (long unsigned int) i_83;
_48 = _47 * 120;
_49 = _46 + _48;
_50 = &_49->err;
_51 = &pp_91(D)->buffered_output;
strbuf_addbuf (_51, _50);
_52 = pp_91(D)->children;
_53 = (long unsigned int) i_83;
_54 = _53 * 120;
_55 = _52 + _54;
_56 = &_55->err;
strbuf_reset (_56);
goto <bb 17>; [100.00%]

=======is loop:1=========

 bb index 12 
<bb 12> [local count: 17057502]:
_57 = stderr;
_58 = pp_91(D)->children;
_59 = (long unsigned int) i_83;
_60 = _59 * 120;
_61 = _58 + _60;
_62 = _61->err.buf;
fputs (_62, _57);
_63 = pp_91(D)->children;
_64 = (long unsigned int) i_83;
_65 = _64 * 120;
_66 = _63 + _65;
_67 = &_66->err;
strbuf_reset (_67);
_68 = stderr;
_69 = pp_91(D)->buffered_output.buf;
fputs (_69, _68);
_70 = &pp_91(D)->buffered_output;
strbuf_reset (_70);
goto <bb 15>; [100.00%]

=======is loop:1=========

 bb index 13 
<bb 13> [local count: 150683236]:
_71 = pp_91(D)->children;
_72 = pp_91(D)->output_owner;
_73 = _72 + i_84;
_74 = _73 % n_92;
_75 = (long unsigned int) _74;
_76 = _75 * 120;
_77 = _71 + _76;
_78 = _77->state;
if (_78 == 1)
  goto <bb 16>; [5.50%]
else
  goto <bb 14>; [94.50%]

=======is loop:1=========

 bb index 14 
<bb 14> [local count: 142395658]:
i_108 = i_84 + 1;

=======is loop:1=========

 bb index 15 
<bb 15> [local count: 159453160]:
# i_84 = PHI <0(12), i_108(14)>
if (i_84 < n_92)
  goto <bb 13>; [94.50%]
else
  goto <bb 16>; [5.50%]

=======is loop:1=========

 bb index 16 
<bb 16> [local count: 17057502]:
_79 = pp_91(D)->output_owner;
_80 = _79 + i_84;
_81 = _80 % n_92;
pp_91(D)->output_owner = _81;

=======is loop:1=========

 bb index 17 
<bb 17> [local count: 106609387]:
# result_93 = PHI <result_85(11), result_85(16)>

=======is loop:1=========

 bb index 19 
<bb 19> [local count: 119227248]:
# result_86 = PHI <0(2), result_93(17)>
_82 = pp_91(D)->nr_processes;
if (_82 > 0)
  goto <bb 20>; [96.34%]
else
  goto <bb 18>; [3.66%]

=======is loop:1=========

 bb index 20 
<bb 20> [local count: 114863530]:
goto <bb 5>; [100.00%]

=======is loop:0=========

 bb index 18 
<bb 18> [local count: 12617862]:
# result_87 = PHI <result_86(6), result_85(9), result_86(19)>
return result_87;

=======Mapping node_fun:kill_children=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 118111600]:
n_16 = pp_15(D)->max_processes;
goto <bb 6>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 955630225]:
_1 = pp_15(D)->children;
_2 = (long unsigned int) i_11;
_3 = _2 * 120;
_4 = _1 + _3;
_5 = _4->state;
if (_5 == 1)
  goto <bb 4>; [20.24%]
else
  goto <bb 5>; [79.76%]

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 193419556]:
_6 = pp_15(D)->children;
_7 = (long unsigned int) i_11;
_8 = _7 * 120;
_9 = _6 + _8;
_10 = _9->process.pid;
kill (_10, signo_17(D));

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 955630227]:
i_19 = i_11 + 1;

=======is loop:1=========

 bb index 6 
<bb 6> [local count: 1073741824]:
# i_11 = PHI <0(2), i_19(5)>
if (i_11 < n_16)
  goto <bb 3>; [89.00%]
else
  goto <bb 7>; [11.00%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 118111600]:
return;

=======Mapping node_fun:pp_start_one=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 114863530]:
goto <bb 5>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 1014686026]:
_1 = pp_102(D)->children;
_2 = (long unsigned int) i_97;
_3 = _2 * 120;
_4 = _1 + _3;
_5 = _4->state;
if (_5 == 0)
  goto <bb 6>; [5.50%]
else
  goto <bb 4>; [94.50%]

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 958878296]:
i_103 = i_97 + 1;

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 1073741824]:
# i_97 = PHI <0(2), i_103(4)>
_6 = pp_102(D)->max_processes;
if (_6 > i_97)
  goto <bb 3>; [94.50%]
else
  goto <bb 6>; [5.50%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 114863531]:
_7 = pp_102(D)->max_processes;
if (_7 == i_97)
  goto <bb 7>; [0.04%]
else
  goto <bb 8>; [99.96%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 45945]:
printf ("BUG: bookkeeping is hard%s", "");
exit (1);

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 114817586]:
_8 = pp_102(D)->get_next_task;
_9 = pp_102(D)->children;
_10 = (long unsigned int) i_97;
_11 = _10 * 120;
_12 = _9 + _11;
_13 = &_12->data;
_14 = pp_102(D)->data;
_15 = pp_102(D)->children;
_16 = (long unsigned int) i_97;
_17 = _16 * 120;
_18 = _15 + _17;
_19 = &_18->err;
_20 = pp_102(D)->children;
_21 = (long unsigned int) i_97;
_22 = _21 * 120;
_23 = _20 + _22;
_24 = &_23->process;
code_105 = _8 (_24, _19, _14, _13);
if (code_105 == 0)
  goto <bb 9>; [34.00%]
else
  goto <bb 10>; [66.00%]

=======is loop:0=========

 bb index 9 
<bb 9> [local count: 39037980]:
_25 = pp_102(D)->children;
_26 = (long unsigned int) i_97;
_27 = _26 * 120;
_28 = _25 + _27;
_29 = &_28->err;
_30 = &pp_102(D)->buffered_output;
strbuf_addbuf (_30, _29);
_31 = pp_102(D)->children;
_32 = (long unsigned int) i_97;
_33 = _32 * 120;
_34 = _31 + _33;
_35 = &_34->err;
strbuf_reset (_35);
goto <bb 15>; [100.00%]

=======is loop:0=========

 bb index 10 
<bb 10> [local count: 75779606]:
_36 = pp_102(D)->children;
_37 = (long unsigned int) i_97;
_38 = _37 * 120;
_39 = _36 + _38;
_39->process.err = -1;
_40 = pp_102(D)->children;
_41 = (long unsigned int) i_97;
_42 = _41 * 120;
_43 = _40 + _42;
_43->process.stdout_to_stderr = 1;
_44 = pp_102(D)->children;
_45 = (long unsigned int) i_97;
_46 = _45 * 120;
_47 = _44 + _46;
_47->process.no_stdin = 1;
_48 = pp_102(D)->children;
_49 = (long unsigned int) i_97;
_50 = _49 * 120;
_51 = _48 + _50;
_52 = &_51->process;
_53 = start_command (_52);
if (_53 != 0)
  goto <bb 11>; [34.00%]
else
  goto <bb 14>; [66.00%]

=======is loop:0=========

 bb index 11 
<bb 11> [local count: 25765066]:
_54 = pp_102(D)->start_failure;
_55 = pp_102(D)->children;
_56 = (long unsigned int) i_97;
_57 = _56 * 120;
_58 = _55 + _57;
_59 = &_58->data;
_60 = pp_102(D)->data;
_61 = pp_102(D)->children;
_62 = (long unsigned int) i_97;
_63 = _62 * 120;
_64 = _61 + _63;
_65 = &_64->err;
_66 = pp_102(D)->children;
_67 = (long unsigned int) i_97;
_68 = _67 * 120;
_69 = _66 + _68;
_70 = &_69->process;
code_114 = _54 (_70, _65, _60, _59);
_71 = pp_102(D)->children;
_72 = (long unsigned int) i_97;
_73 = _72 * 120;
_74 = _71 + _73;
_75 = &_74->err;
_76 = &pp_102(D)->buffered_output;
strbuf_addbuf (_76, _75);
_77 = pp_102(D)->children;
_78 = (long unsigned int) i_97;
_79 = _78 * 120;
_80 = _77 + _79;
_81 = &_80->err;
strbuf_reset (_81);
if (code_114 != 0)
  goto <bb 12>; [50.00%]
else
  goto <bb 13>; [50.00%]

=======is loop:0=========

 bb index 12 
<bb 12> [local count: 12882533]:
pp_102(D)->shutdown = 1;

=======is loop:0=========

 bb index 13 
<bb 13> [local count: 25765066]:
goto <bb 15>; [100.00%]

=======is loop:0=========

 bb index 14 
<bb 14> [local count: 50014540]:
_82 = pp_102(D)->nr_processes;
_83 = _82 + 1;
pp_102(D)->nr_processes = _83;
_84 = pp_102(D)->children;
_85 = (long unsigned int) i_97;
_86 = _85 * 120;
_87 = _84 + _86;
_87->state = 1;
_88 = pp_102(D)->children;
_89 = (long unsigned int) i_97;
_90 = _89 * 120;
_91 = _88 + _90;
_92 = pp_102(D)->pfd;
_93 = (long unsigned int) i_97;
_94 = _93 * 8;
_95 = _92 + _94;
_96 = _91->process.err;
_95->fd = _96;

=======is loop:0=========

 bb index 15 
<bb 15> [local count: 114817586]:
# _98 = PHI <1(9), code_114(13), 0(14)>
return _98;

=======Mapping node_fun:pp_init=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 118158864]:
if (n_30(D) <= 0)
  goto <bb 3>; [25.50%]
else
  goto <bb 4>; [74.50%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 30130511]:
n_33 = online_cpus ();

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 118158864]:
# n_24 = PHI <n_30(D)(2), n_33(3)>
pp_34(D)->max_processes = n_24;
trace_printf ("run_processes_parallel: preparing to run up to %d tasks", n_24);
pp_34(D)->data = data_37(D);
if (get_next_task_39(D) == 0B)
  goto <bb 5>; [0.04%]
else
  goto <bb 6>; [99.96%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 47263]:
printf ("BUG: you need to specify a get_next_task function%s", "");
exit (1);

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 118111600]:
pp_34(D)->get_next_task = get_next_task_39(D);
if (start_failure_41(D) != 0B)
  goto <bb 8>; [70.00%]
else
  goto <bb 7>; [30.00%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 35433480]:

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 118111600]:
# _26 = PHI <start_failure_41(D)(6), default_start_failure(7)>
pp_34(D)->start_failure = _26;
if (task_finished_43(D) != 0B)
  goto <bb 10>; [70.00%]
else
  goto <bb 9>; [30.00%]

=======is loop:0=========

 bb index 9 
<bb 9> [local count: 35433480]:

=======is loop:0=========

 bb index 10 
<bb 10> [local count: 118111600]:
# _27 = PHI <task_finished_43(D)(8), default_task_finished(9)>
pp_34(D)->task_finished = _27;
pp_34(D)->nr_processes = 0;
pp_34(D)->output_owner = 0;
pp_34(D)->shutdown = 0;
_1 = (long unsigned int) n_24;
_2 = calloc (_1, 120);
pp_34(D)->children = _2;
_3 = (long unsigned int) n_24;
_4 = calloc (_3, 8);
pp_34(D)->pfd = _4;
_5 = &pp_34(D)->buffered_output;
strbuf_init (_5, 0);
goto <bb 12>; [100.00%]

=======is loop:1=========

 bb index 11 
<bb 11> [local count: 955630226]:
_6 = pp_34(D)->children;
_7 = (long unsigned int) i_25;
_8 = _7 * 120;
_9 = _6 + _8;
_10 = &_9->err;
strbuf_init (_10, 0);
_11 = pp_34(D)->children;
_12 = (long unsigned int) i_25;
_13 = _12 * 120;
_14 = _11 + _13;
_15 = &_14->process;
child_process_init (_15);
_16 = pp_34(D)->pfd;
_17 = (long unsigned int) i_25;
_18 = _17 * 8;
_19 = _16 + _18;
_19->events = 17;
_20 = pp_34(D)->pfd;
_21 = (long unsigned int) i_25;
_22 = _21 * 8;
_23 = _20 + _22;
_23->fd = -1;
i_58 = i_25 + 1;

=======is loop:1=========

 bb index 12 
<bb 12> [local count: 1073741824]:
# i_25 = PHI <0(10), i_58(11)>
if (n_24 > i_25)
  goto <bb 11>; [89.00%]
else
  goto <bb 13>; [11.00%]

=======is loop:0=========

 bb index 13 
<bb 13> [local count: 118111600]:
return;

=======Mapping node_fun:default_task_finished=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 241635845]:
if (result_14(D) == 0)
  goto <bb 6>; [51.12%]
else
  goto <bb 3>; [48.88%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 118111600]:
strbuf_addf (err_16(D), "A child failed with return code %d:", result_14(D));
goto <bb 5>; [100.00%]

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 955630225]:
_1 = cp_18(D)->argv;
_2 = (long unsigned int) i_11;
_3 = _2 * 8;
_4 = _1 + _3;
_5 = *_4;
strbuf_addf (err_16(D), " %s", _5);
i_20 = i_11 + 1;

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 1073741824]:
# i_11 = PHI <0(3), i_20(4)>
_6 = cp_18(D)->argv;
_7 = (long unsigned int) i_11;
_8 = _7 * 8;
_9 = _6 + _8;
_10 = *_9;
if (_10 != 0B)
  goto <bb 4>; [89.00%]
else
  goto <bb 6>; [11.00%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 241635845]:
return 0;

=======Mapping node_fun:default_start_failure=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 118111600]:
strbuf_addstr (err_14(D), "Starting a child failed:");
goto <bb 4>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 955630225]:
_1 = cp_16(D)->argv;
_2 = (long unsigned int) i_11;
_3 = _2 * 8;
_4 = _1 + _3;
_5 = *_4;
strbuf_addf (err_14(D), " %s", _5);
i_18 = i_11 + 1;

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 1073741824]:
# i_11 = PHI <0(2), i_18(3)>
_6 = cp_16(D)->argv;
_7 = (long unsigned int) i_11;
_8 = _7 * 8;
_9 = _6 + _8;
_10 = *_9;
if (_10 != 0B)
  goto <bb 3>; [89.00%]
else
  goto <bb 5>; [11.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 118111600]:
return 0;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    gimple malloc count : 2 [0m
[40;34m    gimple free   count : 0 [0m
[40;34m    all ptable point : 101 [0m
[40;34m    analyzable ptable point : 96 [0m
[40;34m    used_stmt array stack totalsize of : 0.006760 mb[0m
[40;34m    collect time: : 0.016639 s [0m
[40;34m    algorithm time: 0.633008 s [0m
[40;34m    gimple stmt count : : 422 [0m
[40;34m    this report analysis in Fri Feb 18 12:19:05 2022
 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.00 (  0%)  2157k ( 57%)
 phase opt and generate             :   0.35 (100%)   0.41 (100%)   0.76 (100%)  1518k ( 40%)
 callgraph functions expansion      :   0.11 ( 31%)   0.00 (  0%)   0.11 ( 14%)  1196k ( 32%)
 lto stream decompression           :   0.01 (  3%)   0.00 (  0%)   0.00 (  0%)     0  (  0%)
 ipa lto gimple in                  :   0.00 (  0%)   0.00 (  0%)   0.01 (  1%)   207k (  5%)
 df scan insns                      :   0.01 (  3%)   0.00 (  0%)   0.00 (  0%)   624  (  0%)
 df live regs                       :   0.00 (  0%)   0.00 (  0%)   0.01 (  1%)     0  (  0%)
 dominator optimization             :   0.02 (  6%)   0.00 (  0%)   0.01 (  1%)    53k (  1%)
 tree backward propagate            :   0.01 (  3%)   0.00 (  0%)   0.00 (  0%)     0  (  0%)
 tree forward propagate             :   0.00 (  0%)   0.00 (  0%)   0.01 (  1%)  1480  (  0%)
 tree conservative DCE              :   0.00 (  0%)   0.00 (  0%)   0.01 (  1%)   144  (  0%)
 tree copy headers                  :   0.00 (  0%)   0.00 (  0%)   0.01 (  1%)    14k (  0%)
 tree strlen optimization           :   0.01 (  3%)   0.00 (  0%)   0.00 (  0%)    21k (  1%)
 expand                             :   0.01 (  3%)   0.00 (  0%)   0.00 (  0%)   190k (  5%)
 forward prop                       :   0.01 (  3%)   0.00 (  0%)   0.00 (  0%)  3192  (  0%)
 CSE                                :   0.00 (  0%)   0.00 (  0%)   0.01 (  1%)  3024  (  0%)
 dead store elim2                   :   0.00 (  0%)   0.00 (  0%)   0.01 (  1%)    19k (  1%)
 combiner                           :   0.01 (  3%)   0.00 (  0%)   0.03 (  4%)    35k (  1%)
 integrated RA                      :   0.01 (  3%)   0.00 (  0%)   0.00 (  0%)   375k ( 10%)
 thread pro- & epilogue             :   0.02 (  6%)   0.00 (  0%)   0.00 (  0%)    36k (  1%)
 plugin execution                   :   0.22 ( 63%)   0.40 ( 98%)   0.64 ( 84%)  4448  (  0%)
 rest of compilation                :   0.00 (  0%)   0.00 (  0%)   0.01 (  1%)    43k (  1%)
 TOTAL                              :   0.35          0.41          0.76         3776k
/usr/bin/ld: /tmp/ccg26a2k.ltrans0.ltrans.o: in function `task_finished':
<artificial>:(.text+0x12): undefined reference to `strbuf_addf'
/usr/bin/ld: /tmp/ccg26a2k.ltrans0.ltrans.o: in function `no_job':
<artificial>:(.text+0x32): undefined reference to `strbuf_addf'
/usr/bin/ld: /tmp/ccg26a2k.ltrans0.ltrans.o: in function `default_task_finished':
<artificial>:(.text+0x64): undefined reference to `strbuf_addf'
/usr/bin/ld: <artificial>:(.text+0x8d): undefined reference to `strbuf_addf'
/usr/bin/ld: /tmp/ccg26a2k.ltrans0.ltrans.o: in function `default_start_failure':
<artificial>:(.text+0xc2): undefined reference to `strbuf_addstr'
/usr/bin/ld: <artificial>:(.text+0xeb): undefined reference to `strbuf_addf'
/usr/bin/ld: /tmp/ccg26a2k.ltrans0.ltrans.o: in function `pp_init':
<artificial>:(.text+0x143): undefined reference to `trace_printf'
/usr/bin/ld: <artificial>:(.text+0x1ca): undefined reference to `strbuf_init'
/usr/bin/ld: <artificial>:(.text+0x200): undefined reference to `strbuf_init'
/usr/bin/ld: <artificial>:(.text+0x213): undefined reference to `child_process_init'
/usr/bin/ld: <artificial>:(.text+0x24d): undefined reference to `online_cpus'
/usr/bin/ld: /tmp/ccg26a2k.ltrans0.ltrans.o: in function `pp_start_one':
<artificial>:(.text+0x32c): undefined reference to `start_command'
/usr/bin/ld: <artificial>:(.text+0x375): undefined reference to `strbuf_addbuf'
/usr/bin/ld: <artificial>:(.text+0x388): undefined reference to `strbuf_reset'
/usr/bin/ld: <artificial>:(.text+0x3c6): undefined reference to `strbuf_addbuf'
/usr/bin/ld: <artificial>:(.text+0x3d9): undefined reference to `strbuf_reset'
/usr/bin/ld: /tmp/ccg26a2k.ltrans0.ltrans.o: in function `child_process_clear':
<artificial>:(.text+0x45f): undefined reference to `argv_array_clear'
/usr/bin/ld: <artificial>:(.text+0x46d): undefined reference to `argv_array_clear'
/usr/bin/ld: /tmp/ccg26a2k.ltrans0.ltrans.o: in function `finish_command':
<artificial>:(.text+0x490): undefined reference to `wait_or_whine'
/usr/bin/ld: /tmp/ccg26a2k.ltrans0.ltrans.o: in function `pp_collect_finished':
<artificial>:(.text+0x55f): undefined reference to `child_process_init'
/usr/bin/ld: <artificial>:(.text+0x57d): undefined reference to `strbuf_addbuf'
/usr/bin/ld: <artificial>:(.text+0x590): undefined reference to `strbuf_reset'
/usr/bin/ld: <artificial>:(.text+0x5fe): undefined reference to `strbuf_reset'
/usr/bin/ld: <artificial>:(.text+0x61c): undefined reference to `strbuf_reset'
/usr/bin/ld: /tmp/ccg26a2k.ltrans0.ltrans.o: in function `run_processes_parallel':
<artificial>:(.text+0x6ae): undefined reference to `pp_buffer_stderr'
/usr/bin/ld: <artificial>:(.text+0x6bb): undefined reference to `pp_output'
/usr/bin/ld: <artificial>:(.text+0x722): undefined reference to `pp_cleanup'
/usr/bin/ld: /tmp/ccg26a2k.ltrans0.ltrans.o: in function `parallel_next':
<artificial>:(.text+0x74c): undefined reference to `argv_array_pushv'
/usr/bin/ld: <artificial>:(.text+0x75e): undefined reference to `strbuf_addf'
/usr/bin/ld: /tmp/ccg26a2k.ltrans0.ltrans.o: in function `main':
<artificial>:(.text+0x7bc): undefined reference to `empty_argv'
/usr/bin/ld: <artificial>:(.text+0x7c5): undefined reference to `empty_argv'
/usr/bin/ld: <artificial>:(.text+0x893): undefined reference to `start_command'
/usr/bin/ld: <artificial>:(.text+0x8ca): undefined reference to `run_command'
collect2: error: ld returned 1 exit status
