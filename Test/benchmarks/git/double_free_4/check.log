../Compiler/newplugin.so 11.2.0 
In file included from ./benchmarks/git/double_free_4/git_df_4.c:10:
./benchmarks/git/double_free_4/../git.h: In function ‘copy_array’:
./benchmarks/git/double_free_4/../git.h:161:17: warning: implicit declaration of function ‘memcpy’ [-Wimplicit-function-declaration]
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                 ^~~~~~
./benchmarks/git/double_free_4/../git.h:1:1: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
  +++ |+#include <string.h>
    1 | #define STRING_LIST_INIT_NODUP { NULL, 0, 0, 0, NULL }
./benchmarks/git/double_free_4/../git.h:161:17: warning: incompatible implicit declaration of built-in function ‘memcpy’ [-Wbuiltin-declaration-mismatch]
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                 ^~~~~~
./benchmarks/git/double_free_4/../git.h:161:17: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
./benchmarks/git/double_free_4/../git.h:161:34: warning: implicit declaration of function ‘st_mult’ [-Wimplicit-function-declaration]
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                                  ^~~~~~~
./benchmarks/git/double_free_4/../git.h: In function ‘move_array’:
./benchmarks/git/double_free_4/../git.h:169:17: warning: implicit declaration of function ‘memmove’ [-Wimplicit-function-declaration]
  169 |                 memmove(dst, src, st_mult(size, n));
      |                 ^~~~~~~
./benchmarks/git/double_free_4/../git.h:169:17: note: include ‘<string.h>’ or provide a declaration of ‘memmove’
./benchmarks/git/double_free_4/../git.h:169:17: warning: incompatible implicit declaration of built-in function ‘memmove’ [-Wbuiltin-declaration-mismatch]
./benchmarks/git/double_free_4/../git.h:169:17: note: include ‘<string.h>’ or provide a declaration of ‘memmove’
In file included from ./benchmarks/git/double_free_4/git_df_4.c:9:
./benchmarks/git/double_free_4/../git.h: In function ‘xstrdup_or_null’:
./benchmarks/git/double_free_4/../stdio.h:138:20: warning: implicit declaration of function ‘strdup’ [-Wimplicit-function-declaration]
  138 | #define xstrdup(a) strdup(a)
      |                    ^~~~~~
./benchmarks/git/double_free_4/../git.h:174:22: note: in expansion of macro ‘xstrdup’
  174 |         return str ? xstrdup(str) : NULL;
      |                      ^~~~~~~
./benchmarks/git/double_free_4/../stdio.h:138:20: warning: incompatible implicit declaration of built-in function ‘strdup’ [-Wbuiltin-declaration-mismatch]
  138 | #define xstrdup(a) strdup(a)
      |                    ^~~~~~
./benchmarks/git/double_free_4/../git.h:174:22: note: in expansion of macro ‘xstrdup’
  174 |         return str ? xstrdup(str) : NULL;
      |                      ^~~~~~~
In file included from ./benchmarks/git/double_free_4/git_df_4.c:10:
./benchmarks/git/double_free_4/../git.h: At top level:
./benchmarks/git/double_free_4/../git.h:236:62: warning: ‘struct archiver_args’ declared inside parameter list will not be visible outside of this definition or declaration
  236 |         int (*write_archive)(const struct archiver *, struct archiver_args *);
      |                                                              ^~~~~~~~~~~~~
./benchmarks/git/double_free_4/../git.h: In function ‘strbuf_swap’:
./benchmarks/git/double_free_4/../git.h:126:9: warning: incompatible implicit declaration of built-in function ‘memcpy’ [-Wbuiltin-declaration-mismatch]
  126 |         memcpy(_swap_buffer, _swap_a_ptr, sizeof(a));           \
      |         ^~~~~~
./benchmarks/git/double_free_4/../git.h:407:9: note: in expansion of macro ‘SWAP’
  407 |         SWAP(*a, *b);
      |         ^~~~
./benchmarks/git/double_free_4/../git.h:126:9: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
  126 |         memcpy(_swap_buffer, _swap_a_ptr, sizeof(a));           \
      |         ^~~~~~
./benchmarks/git/double_free_4/../git.h:407:9: note: in expansion of macro ‘SWAP’
  407 |         SWAP(*a, *b);
      |         ^~~~
./benchmarks/git/double_free_4/git_df_4.c: In function ‘find_ref_by_name’:
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: implicit declaration of function ‘strcmp’ [-Wimplicit-function-declaration]
   81 |         if (!strcmp(list->name, name))
      |              ^~~~~~
./benchmarks/git/double_free_4/git_df_4.c:11:1: note: include ‘<string.h>’ or provide a declaration of ‘strcmp’
   10 | #include "../git.h"
  +++ |+#include <string.h>
   11 | 
./benchmarks/git/double_free_4/git_df_4.c: In function ‘alloc_ref_with_prefix’:
./benchmarks/git/double_free_4/git_df_4.c:89:22: warning: implicit declaration of function ‘strlen’ [-Wimplicit-function-declaration]
   89 |         size_t len = strlen(name);
      |                      ^~~~~~
./benchmarks/git/double_free_4/git_df_4.c:89:22: note: include ‘<string.h>’ or provide a declaration of ‘strlen’
./benchmarks/git/double_free_4/git_df_4.c:89:22: warning: incompatible implicit declaration of built-in function ‘strlen’ [-Wbuiltin-declaration-mismatch]
./benchmarks/git/double_free_4/git_df_4.c:89:22: note: include ‘<string.h>’ or provide a declaration of ‘strlen’
./benchmarks/git/double_free_4/git_df_4.c:91:9: warning: incompatible implicit declaration of built-in function ‘memcpy’ [-Wbuiltin-declaration-mismatch]
   91 |         memcpy(ref->name, prefix, prefixlen);
      |         ^~~~~~
./benchmarks/git/double_free_4/git_df_4.c:91:9: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
./benchmarks/git/double_free_4/git_df_4.c: In function ‘copy_ref’:
./benchmarks/git/double_free_4/git_df_4.c:107:15: warning: incompatible implicit declaration of built-in function ‘strlen’ [-Wbuiltin-declaration-mismatch]
  107 |         len = strlen(ref->name);
      |               ^~~~~~
./benchmarks/git/double_free_4/git_df_4.c:107:15: note: include ‘<string.h>’ or provide a declaration of ‘strlen’
./benchmarks/git/double_free_4/git_df_4.c:109:9: warning: incompatible implicit declaration of built-in function ‘memcpy’ [-Wbuiltin-declaration-mismatch]
  109 |         memcpy(cpy, ref, sizeof(struct ref) + len + 1);
      |         ^~~~~~
./benchmarks/git/double_free_4/git_df_4.c:109:9: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
In file included from ./benchmarks/git/double_free_4/git_df_4.c:9:
./benchmarks/git/double_free_4/../stdio.h:138:20: warning: incompatible implicit declaration of built-in function ‘strdup’ [-Wbuiltin-declaration-mismatch]
  138 | #define xstrdup(a) strdup(a)
      |                    ^~~~~~
./benchmarks/git/double_free_4/git_df_4.c:111:37: note: in expansion of macro ‘xstrdup’
  111 |         cpy->symref = ref->symref ? xstrdup(ref->symref) : NULL;
      |                                     ^~~~~~~
./benchmarks/git/double_free_4/git_df_4.c: In function ‘try_explicit_object_name’:
./benchmarks/git/double_free_4/git_df_4.c:124:17: warning: implicit declaration of function ‘hashclr’ [-Wimplicit-function-declaration]
  124 |                 hashclr(ref->new_sha1);
      |                 ^~~~~~~
./benchmarks/git/double_free_4/git_df_4.c:127:13: warning: implicit declaration of function ‘get_sha1’ [-Wimplicit-function-declaration]
  127 |         if (get_sha1(name, sha1))
      |             ^~~~~~~~
./benchmarks/git/double_free_4/git_df_4.c:130:9: warning: implicit declaration of function ‘hashcpy’ [-Wimplicit-function-declaration]
  130 |         hashcpy(ref->new_sha1, sha1);
      |         ^~~~~~~
./benchmarks/git/double_free_4/git_df_4.c: In function ‘main’:
./benchmarks/git/double_free_4/git_df_4.c:215:22: warning: implicit declaration of function ‘get_local_heads’ [-Wimplicit-function-declaration]
  215 |         local_refs = get_local_heads();
      |                      ^~~~~~~~~~~~~~~
./benchmarks/git/double_free_4/git_df_4.c:215:20: warning: assignment to ‘struct ref *’ from ‘int’ makes pointer from integer without a cast [-Wint-conversion]
  215 |         local_refs = get_local_heads();
      |                    ^

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.01 ( 17%)  1298k ( 48%)
 phase parsing                      :   0.03 (100%)   0.01 ( 50%)   0.04 ( 67%)  1190k ( 44%)
 phase opt and generate             :   0.00 (  0%)   0.01 ( 50%)   0.01 ( 17%)   192k (  7%)
 callgraph optimization             :   0.00 (  0%)   0.00 (  0%)   0.01 ( 17%)    16  (  0%)
 callgraph ipa passes               :   0.00 (  0%)   0.01 ( 50%)   0.01 ( 17%)   110k (  4%)
 preprocessing                      :   0.01 ( 33%)   0.00 (  0%)   0.02 ( 33%)   350k ( 13%)
 lexical analysis                   :   0.00 (  0%)   0.00 (  0%)   0.01 ( 17%)     0  (  0%)
 parser function body               :   0.00 (  0%)   0.00 (  0%)   0.01 ( 17%)    65k (  2%)
 parser inl. func. body             :   0.02 ( 67%)   0.01 ( 50%)   0.00 (  0%)    71k (  3%)
 tree operand scan                  :   0.00 (  0%)   0.01 ( 50%)   0.00 (  0%)    18k (  1%)
 TOTAL                              :   0.03          0.02          0.06         2691k
../Compiler/newplugin.so 11.2.0 

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.00 (  0%)  2157k ( 97%)
 TOTAL                              :   0.00          0.00          0.00         2229k
../Compiler/newplugin.so 11.2.0 
=======ipa_pta=========
=============== The first stage : Point of interest stmt collect =================
=======node_fun:main=========
node:= 2 
 	next_branch :=21
node:= 3 
 	next_branch :=4
	next_branch :=7
node:= 4 
 	next_branch :=20
node:= 5 
 	next_branch :=8
	next_branch :=6
node:= 6 
 	next_branch :=7
node:= 7 
 	next_branch :=5
	next_branch :=8
node:= 8 
 	next_branch :=9
	next_branch :=11
node:= 9 
 	next_branch :=10
	next_branch :=18
node:= 10 
 	next_branch :=19
node:= 11 
 	next_branch :=12
	next_branch :=14
node:= 12 
 	next_branch :=13
	next_branch :=14
node:= 13 
 	next_branch :=19
node:= 14 
 	next_branch :=16
node:= 15 
 	next_branch :=16
node:= 16 
 	next_branch :=15
	next_branch :=17
node:= 17 
 	next_branch :=18
node:= 18 
 	next_branch :=19
node:= 19 
 	next_branch :=20
node:= 20 
 	next_branch :=21
node:= 21 
 	next_branch :=3
	next_branch :=22
node:= 22 
 	next_branch :=23
	next_branch :=24
node:= 23 
 	next_branch :=26
node:= 24 
 	next_branch :=25
	next_branch :=26
node:= 25 
 	next_branch :=26
node:= 26 
 	next_branch :=28
node:= 27 
 	next_branch :=28
node:= 28 
 	next_branch :=27
	next_branch :=29
node:= 29 
 	next_branch :=31
node:= 30 
 	next_branch :=31
node:= 31 
 	next_branch :=30
	next_branch :=32
=======node_fun:free_ref=========
node:= 2 
 	next_branch :=4
	next_branch :=3
node:= 3 
 	next_branch :=4
=============== The first stage :  record fucntion =================
start PointerConstraint
ptable point 18 
===============The second stage : Mapping stmt=================
# .MEM_15 = VDEF <.MEM_14(D)>
_1 = get_local_heads ();
# VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
# VUSE <.MEM_61>
len_47 = strlen (dst_name_22);
# .MEM_68 = VDEF <.MEM_61>
ref_50 = calloc (1, _49);
# .MEM_69 = VDEF <.MEM_68>
memcpy (_53, dst_name_22, len_47);
# .MEM_75 = VDEF <.MEM_73>
hashcpy (_31, _30);
# .MEM_18 = VDEF <.MEM_61>
__builtin_fwrite ("No refs in common and none specified; doing nothing.\n", 1, 53, _6);
# .MEM_66 = VDEF <.MEM_63>
free_ref (ref_56);
# .MEM_65 = VDEF <.MEM_62>
free_ref (ref_54);
# .MEM_8 = VDEF <.MEM_7(D)>
free_ref (_1);
===============The second stage : Program slicing=================
 <ssa_name 0x7f89e028e318
    type <pointer_type 0x7f89e027b5e8
        type <array_type 0x7f89e026e5e8 type <integer_type 0x7f89e076b348 unsigned char>
            BLK
            size <integer_cst 0x7f89e0265810 constant 160>
            unit-size <integer_cst 0x7f89e02657f8 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f89e026e540>
            pointer_to_this <pointer_type 0x7f89e027b5e8>>
        unsigned DI
        size <integer_cst 0x7f89e0756bb8 constant 64>
        unit-size <integer_cst 0x7f89e0756bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _31 = &dst_peer_29->new_sha1;
    version:31
    ptr-info 0x7f89e0287858>
=============== *this point analyzable =================
_1 = get_local_heads ();
========================================================
 <ssa_name 0x7f89e028e318
    type <pointer_type 0x7f89e027b5e8
        type <array_type 0x7f89e026e5e8 type <integer_type 0x7f89e076b348 unsigned char>
            BLK
            size <integer_cst 0x7f89e0265810 constant 160>
            unit-size <integer_cst 0x7f89e02657f8 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f89e026e540>
            pointer_to_this <pointer_type 0x7f89e027b5e8>>
        unsigned DI
        size <integer_cst 0x7f89e0756bb8 constant 64>
        unit-size <integer_cst 0x7f89e0756bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _31 = &dst_peer_29->new_sha1;
    version:31
    ptr-info 0x7f89e0287858>
 <ssa_name 0x7f89e0299168
    type <pointer_type 0x7f89e0772000
        type <void_type 0x7f89e076bf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f89e0772000>>
        public unsigned DI
        size <integer_cst 0x7f89e0756bb8 constant 64>
        unit-size <integer_cst 0x7f89e0756bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f89e07779d8>>
   
    def_stmt _53 = _52;
    version:53
    ptr-info 0x7f89e02879f0>
=============== *this point analyzable =================
_37 = strcmp (_36, dst_name_22);
========================================================
 <ssa_name 0x7f89e028e318
    type <pointer_type 0x7f89e027b5e8
        type <array_type 0x7f89e026e5e8 type <integer_type 0x7f89e076b348 unsigned char>
            BLK
            size <integer_cst 0x7f89e0265810 constant 160>
            unit-size <integer_cst 0x7f89e02657f8 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f89e026e540>
            pointer_to_this <pointer_type 0x7f89e027b5e8>>
        unsigned DI
        size <integer_cst 0x7f89e0756bb8 constant 64>
        unit-size <integer_cst 0x7f89e0756bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _31 = &dst_peer_29->new_sha1;
    version:31
    ptr-info 0x7f89e0287858>
=============== *this point analyzable =================
_37 = strcmp (_36, dst_name_22);
========================================================
=============== *this point analyzable =================
_37 = strcmp (_36, dst_name_22);
========================================================
 <ssa_name 0x7f89e028e318
    type <pointer_type 0x7f89e027b5e8
        type <array_type 0x7f89e026e5e8 type <integer_type 0x7f89e076b348 unsigned char>
            BLK
            size <integer_cst 0x7f89e0265810 constant 160>
            unit-size <integer_cst 0x7f89e02657f8 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f89e026e540>
            pointer_to_this <pointer_type 0x7f89e027b5e8>>
        unsigned DI
        size <integer_cst 0x7f89e0756bb8 constant 64>
        unit-size <integer_cst 0x7f89e0756bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _31 = &dst_peer_29->new_sha1;
    version:31
    ptr-info 0x7f89e0287858>
 <ssa_name 0x7f89e0299168
    type <pointer_type 0x7f89e0772000
        type <void_type 0x7f89e076bf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f89e0772000>>
        public unsigned DI
        size <integer_cst 0x7f89e0756bb8 constant 64>
        unit-size <integer_cst 0x7f89e0756bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f89e07779d8>>
   
    def_stmt _53 = _52;
    version:53
    ptr-info 0x7f89e02879f0>
=============== *this point analyzable =================
len_47 = strlen (dst_name_22);
========================================================
 <ssa_name 0x7f89e028e318
    type <pointer_type 0x7f89e027b5e8
        type <array_type 0x7f89e026e5e8 type <integer_type 0x7f89e076b348 unsigned char>
            BLK
            size <integer_cst 0x7f89e0265810 constant 160>
            unit-size <integer_cst 0x7f89e02657f8 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f89e026e540>
            pointer_to_this <pointer_type 0x7f89e027b5e8>>
        unsigned DI
        size <integer_cst 0x7f89e0756bb8 constant 64>
        unit-size <integer_cst 0x7f89e0756bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _31 = &dst_peer_29->new_sha1;
    version:31
    ptr-info 0x7f89e0287858>
 <ssa_name 0x7f89e0299168
    type <pointer_type 0x7f89e0772000
        type <void_type 0x7f89e076bf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f89e0772000>>
        public unsigned DI
        size <integer_cst 0x7f89e0756bb8 constant 64>
        unit-size <integer_cst 0x7f89e0756bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f89e07779d8>>
   
    def_stmt _53 = _52;
    version:53
    ptr-info 0x7f89e02879f0>
=============== *this point analyzable =================
ref_50 = calloc (1, _49);
========================================================
 <ssa_name 0x7f89e0299168
    type <pointer_type 0x7f89e0772000
        type <void_type 0x7f89e076bf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f89e0772000>>
        public unsigned DI
        size <integer_cst 0x7f89e0756bb8 constant 64>
        unit-size <integer_cst 0x7f89e0756bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f89e07779d8>>
   
    def_stmt _53 = _52;
    version:53
    ptr-info 0x7f89e02879f0>
=============== *this point analyzable =================
memcpy (_53, dst_name_22, len_47);
========================================================
 <ssa_name 0x7f89e028e318
    type <pointer_type 0x7f89e027b5e8
        type <array_type 0x7f89e026e5e8 type <integer_type 0x7f89e076b348 unsigned char>
            BLK
            size <integer_cst 0x7f89e0265810 constant 160>
            unit-size <integer_cst 0x7f89e02657f8 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f89e026e540>
            pointer_to_this <pointer_type 0x7f89e027b5e8>>
        unsigned DI
        size <integer_cst 0x7f89e0756bb8 constant 64>
        unit-size <integer_cst 0x7f89e0756bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _31 = &dst_peer_29->new_sha1;
    version:31
    ptr-info 0x7f89e0287858>
=============== *this point analyzable =================
hashcpy (_31, _30);
========================================================
 <ssa_name 0x7f89e028e318
    type <pointer_type 0x7f89e027b5e8
        type <array_type 0x7f89e026e5e8 type <integer_type 0x7f89e076b348 unsigned char>
            BLK
            size <integer_cst 0x7f89e0265810 constant 160>
            unit-size <integer_cst 0x7f89e02657f8 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f89e026e540>
            pointer_to_this <pointer_type 0x7f89e027b5e8>>
        unsigned DI
        size <integer_cst 0x7f89e0756bb8 constant 64>
        unit-size <integer_cst 0x7f89e0756bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _31 = &dst_peer_29->new_sha1;
    version:31
    ptr-info 0x7f89e0287858>
=============== *this point analyzable =================
hashcpy (_31, _30);
========================================================
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
__builtin_fwrite ("No refs in common and none specified; doing nothing.\n", 1, 53, _6);
========================================================
=============== *this point analyzable =================
__builtin_fwrite ("No refs in common and none specified; doing nothing.\n", 1, 53, _6);
========================================================
 <ssa_name 0x7f89e0299360
    type <pointer_type 0x7f89e026e738
        type <record_type 0x7f89e026e690 ref BLK
            size <integer_cst 0x7f89e082b0a8 constant 640>
            unit-size <integer_cst 0x7f89e0265738 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f89e026e690 fields <field_decl 0x7f89e0271850 next> context <translation_unit_decl 0x7f89e0761168 ./benchmarks/git/double_free_4/git_df_4.c>
            pointer_to_this <pointer_type 0x7f89e026e738>>
        public unsigned DI
        size <integer_cst 0x7f89e0756bb8 constant 64>
        unit-size <integer_cst 0x7f89e0756bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f89e026e7e0>>
    var <var_decl 0x7f89e029a2d0 ref>
    def_stmt ref_56 = PHI <local_refs_12(26), next_57(27)>
    version:56
    ptr-info 0x7f89e0287a38>
=============== *this point analyzable =================
free_ref (ref_56);
========================================================
 <ssa_name 0x7f89e0299288
    type <pointer_type 0x7f89e026e738
        type <record_type 0x7f89e026e690 ref BLK
            size <integer_cst 0x7f89e082b0a8 constant 640>
            unit-size <integer_cst 0x7f89e0265738 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f89e026e690 fields <field_decl 0x7f89e0271850 next> context <translation_unit_decl 0x7f89e0761168 ./benchmarks/git/double_free_4/git_df_4.c>
            pointer_to_this <pointer_type 0x7f89e026e738>>
        public unsigned DI
        size <integer_cst 0x7f89e0756bb8 constant 64>
        unit-size <integer_cst 0x7f89e0756bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f89e026e7e0>>
    var <var_decl 0x7f89e029a120 ref>
    def_stmt ref_54 = PHI <_7(29), next_55(30)>
    version:54
    ptr-info 0x7f89e0287a08>
=============== *this point analyzable =================
free_ref (ref_54);
========================================================
 <ssa_name 0x7f89e02999d8
    type <pointer_type 0x7f89e026e738
        type <record_type 0x7f89e026e690 ref BLK
            size <integer_cst 0x7f89e082b0a8 constant 640>
            unit-size <integer_cst 0x7f89e0265738 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f89e026e690 fields <field_decl 0x7f89e0271850 next> context <translation_unit_decl 0x7f89e0761168 ./benchmarks/git/double_free_4/git_df_4.c>
            pointer_to_this <pointer_type 0x7f89e026e738>>
        public unsigned DI
        size <integer_cst 0x7f89e0756bb8 constant 64>
        unit-size <integer_cst 0x7f89e0756bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f89e026e7e0>>
   
    def_stmt _1 = ref_5(D)->peer_ref;
    version:1
    ptr-info 0x7f89e0287ac8>
=============== *this point analyzable =================
free_ref (_1);
========================================================
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m

=============== The third stage : Start detection  =================
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 9 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free_ref========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path free_ref  function_call count: 2 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:free_ref========= [0m
[40;41m =======recursive_fun:free_ref========= [0m
[40;42m =======pre_check_funciton:free_ref========= [0m
[40;42m =======start_check_funciton:free_ref========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f89e02999d8
    type <pointer_type 0x7f89e026e738
        type <record_type 0x7f89e026e690 ref BLK
            size <integer_cst 0x7f89e082b0a8 constant 640>
            unit-size <integer_cst 0x7f89e0265738 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f89e026e690 fields <field_decl 0x7f89e0271850 next> context <translation_unit_decl 0x7f89e0761168 ./benchmarks/git/double_free_4/git_df_4.c>
            pointer_to_this <pointer_type 0x7f89e026e738>>
        public unsigned DI
        size <integer_cst 0x7f89e0756bb8 constant 64>
        unit-size <integer_cst 0x7f89e0756bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f89e026e7e0>>
   
    def_stmt _1 = ref_5(D)->peer_ref;
    version:1
    ptr-info 0x7f89e0287ac8>
 <ssa_name 0x7f89e02999d8
    type <pointer_type 0x7f89e026e738
        type <record_type 0x7f89e026e690 ref BLK
            size <integer_cst 0x7f89e082b0a8 constant 640>
            unit-size <integer_cst 0x7f89e0265738 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f89e026e690 fields <field_decl 0x7f89e0271850 next> context <translation_unit_decl 0x7f89e0761168 ./benchmarks/git/double_free_4/git_df_4.c>
            pointer_to_this <pointer_type 0x7f89e026e738>>
        public unsigned DI
        size <integer_cst 0x7f89e0756bb8 constant 64>
        unit-size <integer_cst 0x7f89e0756bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f89e026e7e0>>
   
    def_stmt _1 = ref_5(D)->peer_ref;
    version:1
    ptr-info 0x7f89e0287ac8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f89e02999d8
    type <pointer_type 0x7f89e026e738
        type <record_type 0x7f89e026e690 ref BLK
            size <integer_cst 0x7f89e082b0a8 constant 640>
            unit-size <integer_cst 0x7f89e0265738 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f89e026e690 fields <field_decl 0x7f89e0271850 next> context <translation_unit_decl 0x7f89e0761168 ./benchmarks/git/double_free_4/git_df_4.c>
            pointer_to_this <pointer_type 0x7f89e026e738>>
        public unsigned DI
        size <integer_cst 0x7f89e0756bb8 constant 64>
        unit-size <integer_cst 0x7f89e0756bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f89e026e7e0>>
   
    def_stmt _1 = ref_5(D)->peer_ref;
    version:1
    ptr-info 0x7f89e0287ac8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_8 = VDEF <.MEM_7(D)>
free_ref (_1);
dot graph entry free_ref
dot graph target entry end

free_ref (_1);
In function ‘main’:
./benchmarks/git/double_free_4/git_df_4.c:62:9: warning: use location
   62 |         free_ref(ref->peer_ref);
      |         ^
dot graph target loc start # .MEM_8 = VDEF <.MEM_7(D)>
free_ref (_1);
./benchmarks/git/double_free_4/git_df_4.c:62:9: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 3: free_ref (_1);
./benchmarks/git/double_free_4/git_df_4.c:62:9: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_8 = VDEF <.MEM_7(D)>
free_ref (_1);
./benchmarks/git/double_free_4/git_df_4.c:62:9: warning: use location
dot graph target loc end

dot graph target basicblock start from free_ref basic block 3dot graph target basicblock en1

dot graph stmt start free_ref (_1);
free_ref (_1);
dot graph stmt end

dot graph stmt start free_ref (_1);
./benchmarks/git/double_free_4/git_df_4.c:62:9: warning: use location
dot graph stmt end

this stmt call this function :free_ref
trace fucntion name:free_ref 
[40;44m =======trace_function_path free_ref  function_call count: 2 level :0========  [0m
# .MEM_9 = VDEF <.MEM_8>
free (_2);
[40;31m  find free stmt free same pointer [0m
# .MEM_9 = VDEF <.MEM_8>
free (_2);
./benchmarks/git/double_free_4/git_df_4.c:63:9: warning: use location
   63 |         free(ref->remote_status);
      |         ^
dot graph start relate form ID : 1050221684
from free_ref basic block 3dot graph end relate end

dot graph relate stmt start ID : 1500030915 stmt(free) :free (_2);
./benchmarks/git/double_free_4/git_df_4.c:63:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1500030915 stmt(free) :free (_2);
./benchmarks/git/double_free_4/git_df_4.c:63:9: warning: use location
dot graph relate end

# .MEM_10 = VDEF <.MEM_9>
free (_3);
[40;31m  find free stmt free same pointer [0m
# .MEM_10 = VDEF <.MEM_9>
free (_3);
./benchmarks/git/double_free_4/git_df_4.c:64:9: warning: use location
   64 |         free(ref->symref);
      |         ^
dot graph start relate form ID : 1050221684
from free_ref basic block 3dot graph end relate end

dot graph relate stmt start ID : 1220857383 stmt(free) :free (_3);
./benchmarks/git/double_free_4/git_df_4.c:64:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1220857383 stmt(free) :free (_3);
./benchmarks/git/double_free_4/git_df_4.c:64:9: warning: use location
dot graph relate end

# .MEM_11 = VDEF <.MEM_10>
free (ref_5(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_11 = VDEF <.MEM_10>
free (ref_5(D));
./benchmarks/git/double_free_4/git_df_4.c:65:9: warning: use location
   65 |         free(ref);
      |         ^
dot graph start relate form ID : 1050221684
from free_ref basic block 3dot graph end relate end

dot graph relate stmt start ID : 461322795 stmt(free) :free (ref_5(D));
./benchmarks/git/double_free_4/git_df_4.c:65:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 461322795 stmt(free) :free (ref_5(D));
./benchmarks/git/double_free_4/git_df_4.c:65:9: warning: use location
dot graph relate end

 <ssa_name 0x7f89e02999d8
    type <pointer_type 0x7f89e026e738
        type <record_type 0x7f89e026e690 ref BLK
            size <integer_cst 0x7f89e082b0a8 constant 640>
            unit-size <integer_cst 0x7f89e0265738 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f89e026e690 fields <field_decl 0x7f89e0271850 next> context <translation_unit_decl 0x7f89e0761168 ./benchmarks/git/double_free_4/git_df_4.c>
            pointer_to_this <pointer_type 0x7f89e026e738>>
        public unsigned DI
        size <integer_cst 0x7f89e0756bb8 constant 64>
        unit-size <integer_cst 0x7f89e0756bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f89e026e7e0>>
   
    def_stmt _1 = ref_5(D)->peer_ref;
    version:1
    ptr-info 0x7f89e0287ac8>
[40;36m ======= node_fun:free_ref========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
dot graph arrowdot graph start relate for1ID : 1050221684
from free_ref basic block 3dot graph end relate end

In function ‘free_ref’:
./benchmarks/git/double_free_4/git_df_4.c:62:9: warning: use location
   62 |         free_ref(ref->peer_ref);
      |         ^
_1 = ref_5(D)->peer_ref;
dot graph relate stmt start ID : 1804030134 stmt(LHS) :./benchmarks/git/double_free_4/git_df_4.c:62:9: warning: use location
_1
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
dot graph arrowdot graph start relate for1ID : 1050221684
from free_ref basic block 3dot graph end relate end

./benchmarks/git/double_free_4/git_df_4.c:63:17: warning: use location
   63 |         free(ref->remote_status);
      |                 ^
_2 = ref_5(D)->remote_status;
dot graph relate stmt start ID : 970038687 stmt(LHS) :./benchmarks/git/double_free_4/git_df_4.c:63:17: warning: use location
_2
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
dot graph arrowdot graph start relate for1ID : 1050221684
from free_ref basic block 3dot graph end relate end

./benchmarks/git/double_free_4/git_df_4.c:64:17: warning: use location
   64 |         free(ref->symref);
      |                 ^
_3 = ref_5(D)->symref;
dot graph relate stmt start ID : 744585745 stmt(LHS) :./benchmarks/git/double_free_4/git_df_4.c:64:17: warning: use location
_3
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:free_ref========= [0m
[40;46m =======add node_fun stack:free_ref========= [0m
[40;44m =======trace_function_path free_ref  function_call count: 2 level :1========  [0m
# .MEM_9 = VDEF <.MEM_8>
free (_2);
[40;31m  find free stmt free same pointer [0m
# .MEM_9 = VDEF <.MEM_8>
free (_2);
In function ‘main’:
./benchmarks/git/double_free_4/git_df_4.c:63:9: warning: use location
   63 |         free(ref->remote_status);
      |         ^
dot graph start relate form ID : 988531808
from free_ref basic block 3dot graph end relate end

dot graph relate stmt start ID : 1731788944 stmt(free) :free (_2);
./benchmarks/git/double_free_4/git_df_4.c:63:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1731788944 stmt(free) :free (_2);
./benchmarks/git/double_free_4/git_df_4.c:63:9: warning: use location
dot graph relate end

# .MEM_10 = VDEF <.MEM_9>
free (_3);
[40;31m  find free stmt free same pointer [0m
# .MEM_10 = VDEF <.MEM_9>
free (_3);
./benchmarks/git/double_free_4/git_df_4.c:64:9: warning: use location
   64 |         free(ref->symref);
      |         ^
dot graph start relate form ID : 988531808
from free_ref basic block 3dot graph end relate end

dot graph relate stmt start ID : 1145728107 stmt(free) :free (_3);
./benchmarks/git/double_free_4/git_df_4.c:64:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1145728107 stmt(free) :free (_3);
./benchmarks/git/double_free_4/git_df_4.c:64:9: warning: use location
dot graph relate end

# .MEM_11 = VDEF <.MEM_10>
free (ref_5(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_11 = VDEF <.MEM_10>
free (ref_5(D));
./benchmarks/git/double_free_4/git_df_4.c:65:9: warning: use location
   65 |         free(ref);
      |         ^
dot graph start relate form ID : 988531808
from free_ref basic block 3dot graph end relate end

dot graph relate stmt start ID : 1106676640 stmt(free) :free (ref_5(D));
./benchmarks/git/double_free_4/git_df_4.c:65:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1106676640 stmt(free) :free (ref_5(D));
./benchmarks/git/double_free_4/git_df_4.c:65:9: warning: use location
dot graph relate end

 <ssa_name 0x7f89e02999d8
    type <pointer_type 0x7f89e026e738
        type <record_type 0x7f89e026e690 ref BLK
            size <integer_cst 0x7f89e082b0a8 constant 640>
            unit-size <integer_cst 0x7f89e0265738 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f89e026e690 fields <field_decl 0x7f89e0271850 next> context <translation_unit_decl 0x7f89e0761168 ./benchmarks/git/double_free_4/git_df_4.c>
            pointer_to_this <pointer_type 0x7f89e026e738>>
        public unsigned DI
        size <integer_cst 0x7f89e0756bb8 constant 64>
        unit-size <integer_cst 0x7f89e0756bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f89e026e7e0>>
   
    def_stmt _1 = ref_5(D)->peer_ref;
    version:1
    ptr-info 0x7f89e0287ac8>
[40;36m ======= node_fun:free_ref========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
dot graph arrowdot graph start relate for1ID : 988531808
from free_ref basic block 3dot graph end relate end

In function ‘free_ref’:
./benchmarks/git/double_free_4/git_df_4.c:62:9: warning: use location
   62 |         free_ref(ref->peer_ref);
      |         ^
_1 = ref_5(D)->peer_ref;
dot graph relate stmt start ID : 1863882929 stmt(LHS) :./benchmarks/git/double_free_4/git_df_4.c:62:9: warning: use location
_1
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
dot graph arrowdot graph start relate for1ID : 988531808
from free_ref basic block 3dot graph end relate end

./benchmarks/git/double_free_4/git_df_4.c:63:17: warning: use location
   63 |         free(ref->remote_status);
      |                 ^
_2 = ref_5(D)->remote_status;
dot graph relate stmt start ID : 1930593218 stmt(LHS) :./benchmarks/git/double_free_4/git_df_4.c:63:17: warning: use location
_2
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
dot graph arrowdot graph start relate for1ID : 988531808
from free_ref basic block 3dot graph end relate end

./benchmarks/git/double_free_4/git_df_4.c:64:17: warning: use location
   64 |         free(ref->symref);
      |                 ^
_3 = ref_5(D)->symref;
dot graph relate stmt start ID : 644427797 stmt(LHS) :./benchmarks/git/double_free_4/git_df_4.c:64:17: warning: use location
_3
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:free_ref========= [0m
[40;41m =======recursive_fun2:free_ref========= [0m

 ================== trace ================== 
trace fucntion free:6 
# .MEM_8 = VDEF <.MEM_7(D)>
free_ref (_1);
dot graph entry free_ref
dot graph target entry end

free_ref (_1);
In function ‘main’:
./benchmarks/git/double_free_4/git_df_4.c:62:9: warning: use location
   62 |         free_ref(ref->peer_ref);
      |         ^
dot graph target loc start # .MEM_8 = VDEF <.MEM_7(D)>
free_ref (_1);
./benchmarks/git/double_free_4/git_df_4.c:62:9: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 3: free_ref (_1);
./benchmarks/git/double_free_4/git_df_4.c:62:9: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_8 = VDEF <.MEM_7(D)>
free_ref (_1);
./benchmarks/git/double_free_4/git_df_4.c:62:9: warning: use location
dot graph target loc end

dot graph target basicblock start from free_ref basic block 3dot graph target basicblock en1

dot graph stmt start free_ref (_1);
free_ref (_1);
dot graph stmt end

dot graph stmt start free_ref (_1);
./benchmarks/git/double_free_4/git_df_4.c:62:9: warning: use location
dot graph stmt end

this stmt call this function :free_ref
trace fucntion name:free_ref 
[40;44m =======trace_function_path free_ref  function_call count: 2 level :0========  [0m
# .MEM_9 = VDEF <.MEM_8>
free (_2);
[40;31m  find free stmt free same pointer [0m
# .MEM_9 = VDEF <.MEM_8>
free (_2);
./benchmarks/git/double_free_4/git_df_4.c:63:9: warning: use location
   63 |         free(ref->remote_status);
      |         ^
dot graph start relate form ID : 1405079620
from free_ref basic block 3dot graph end relate end

dot graph relate stmt start ID : 1252006432 stmt(free) :free (_2);
./benchmarks/git/double_free_4/git_df_4.c:63:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1252006432 stmt(free) :free (_2);
./benchmarks/git/double_free_4/git_df_4.c:63:9: warning: use location
dot graph relate end

# .MEM_10 = VDEF <.MEM_9>
free (_3);
[40;31m  find free stmt free same pointer [0m
# .MEM_10 = VDEF <.MEM_9>
free (_3);
./benchmarks/git/double_free_4/git_df_4.c:64:9: warning: use location
   64 |         free(ref->symref);
      |         ^
dot graph start relate form ID : 1405079620
from free_ref basic block 3dot graph end relate end

dot graph relate stmt start ID : 1295380870 stmt(free) :free (_3);
./benchmarks/git/double_free_4/git_df_4.c:64:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1295380870 stmt(free) :free (_3);
./benchmarks/git/double_free_4/git_df_4.c:64:9: warning: use location
dot graph relate end

# .MEM_11 = VDEF <.MEM_10>
free (ref_5(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_11 = VDEF <.MEM_10>
free (ref_5(D));
./benchmarks/git/double_free_4/git_df_4.c:65:9: warning: use location
   65 |         free(ref);
      |         ^
dot graph start relate form ID : 1405079620
from free_ref basic block 3dot graph end relate end

dot graph relate stmt start ID : 502447570 stmt(free) :free (ref_5(D));
./benchmarks/git/double_free_4/git_df_4.c:65:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 502447570 stmt(free) :free (ref_5(D));
./benchmarks/git/double_free_4/git_df_4.c:65:9: warning: use location
dot graph relate end

 <ssa_name 0x7f89e02999d8
    type <pointer_type 0x7f89e026e738
        type <record_type 0x7f89e026e690 ref BLK
            size <integer_cst 0x7f89e082b0a8 constant 640>
            unit-size <integer_cst 0x7f89e0265738 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f89e026e690 fields <field_decl 0x7f89e0271850 next> context <translation_unit_decl 0x7f89e0761168 ./benchmarks/git/double_free_4/git_df_4.c>
            pointer_to_this <pointer_type 0x7f89e026e738>>
        public unsigned DI
        size <integer_cst 0x7f89e0756bb8 constant 64>
        unit-size <integer_cst 0x7f89e0756bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f89e026e7e0>>
   
    def_stmt _1 = ref_5(D)->peer_ref;
    version:1
    ptr-info 0x7f89e0287ac8>
[40;36m ======= node_fun:free_ref========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
dot graph arrowdot graph start relate for1ID : 1405079620
from free_ref basic block 3dot graph end relate end

In function ‘free_ref’:
./benchmarks/git/double_free_4/git_df_4.c:62:9: warning: use location
   62 |         free_ref(ref->peer_ref);
      |         ^
_1 = ref_5(D)->peer_ref;
dot graph relate stmt start ID : 465010459 stmt(LHS) :./benchmarks/git/double_free_4/git_df_4.c:62:9: warning: use location
_1
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
dot graph arrowdot graph start relate for1ID : 1405079620
from free_ref basic block 3dot graph end relate end

./benchmarks/git/double_free_4/git_df_4.c:63:17: warning: use location
   63 |         free(ref->remote_status);
      |                 ^
_2 = ref_5(D)->remote_status;
dot graph relate stmt start ID : 570887295 stmt(LHS) :./benchmarks/git/double_free_4/git_df_4.c:63:17: warning: use location
_2
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
dot graph arrowdot graph start relate for1ID : 1405079620
from free_ref basic block 3dot graph end relate end

./benchmarks/git/double_free_4/git_df_4.c:64:17: warning: use location
   64 |         free(ref->symref);
      |                 ^
_3 = ref_5(D)->symref;
dot graph relate stmt start ID : 1603193248 stmt(LHS) :./benchmarks/git/double_free_4/git_df_4.c:64:17: warning: use location
_3
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:free_ref========= [0m
[40;46m =======add node_fun stack:free_ref========= [0m
[40;44m =======trace_function_path free_ref  function_call count: 2 level :1========  [0m
# .MEM_9 = VDEF <.MEM_8>
free (_2);
[40;31m  find free stmt free same pointer [0m
# .MEM_9 = VDEF <.MEM_8>
free (_2);
In function ‘main’:
./benchmarks/git/double_free_4/git_df_4.c:63:9: warning: use location
   63 |         free(ref->remote_status);
      |         ^
dot graph start relate form ID : 2145716117
from free_ref basic block 3dot graph end relate end

dot graph relate stmt start ID : 1703582844 stmt(free) :free (_2);
./benchmarks/git/double_free_4/git_df_4.c:63:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1703582844 stmt(free) :free (_2);
./benchmarks/git/double_free_4/git_df_4.c:63:9: warning: use location
dot graph relate end

# .MEM_10 = VDEF <.MEM_9>
free (_3);
[40;31m  find free stmt free same pointer [0m
# .MEM_10 = VDEF <.MEM_9>
free (_3);
./benchmarks/git/double_free_4/git_df_4.c:64:9: warning: use location
   64 |         free(ref->symref);
      |         ^
dot graph start relate form ID : 2145716117
from free_ref basic block 3dot graph end relate end

dot graph relate stmt start ID : 1067782540 stmt(free) :free (_3);
./benchmarks/git/double_free_4/git_df_4.c:64:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1067782540 stmt(free) :free (_3);
./benchmarks/git/double_free_4/git_df_4.c:64:9: warning: use location
dot graph relate end

# .MEM_11 = VDEF <.MEM_10>
free (ref_5(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_11 = VDEF <.MEM_10>
free (ref_5(D));
./benchmarks/git/double_free_4/git_df_4.c:65:9: warning: use location
   65 |         free(ref);
      |         ^
dot graph start relate form ID : 2145716117
from free_ref basic block 3dot graph end relate end

dot graph relate stmt start ID : 1158497342 stmt(free) :free (ref_5(D));
./benchmarks/git/double_free_4/git_df_4.c:65:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1158497342 stmt(free) :free (ref_5(D));
./benchmarks/git/double_free_4/git_df_4.c:65:9: warning: use location
dot graph relate end

 <ssa_name 0x7f89e02999d8
    type <pointer_type 0x7f89e026e738
        type <record_type 0x7f89e026e690 ref BLK
            size <integer_cst 0x7f89e082b0a8 constant 640>
            unit-size <integer_cst 0x7f89e0265738 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f89e026e690 fields <field_decl 0x7f89e0271850 next> context <translation_unit_decl 0x7f89e0761168 ./benchmarks/git/double_free_4/git_df_4.c>
            pointer_to_this <pointer_type 0x7f89e026e738>>
        public unsigned DI
        size <integer_cst 0x7f89e0756bb8 constant 64>
        unit-size <integer_cst 0x7f89e0756bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f89e026e7e0>>
   
    def_stmt _1 = ref_5(D)->peer_ref;
    version:1
    ptr-info 0x7f89e0287ac8>
[40;36m ======= node_fun:free_ref========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
dot graph arrowdot graph start relate for1ID : 2145716117
from free_ref basic block 3dot graph end relate end

In function ‘free_ref’:
./benchmarks/git/double_free_4/git_df_4.c:62:9: warning: use location
   62 |         free_ref(ref->peer_ref);
      |         ^
_1 = ref_5(D)->peer_ref;
dot graph relate stmt start ID : 1850740188 stmt(LHS) :./benchmarks/git/double_free_4/git_df_4.c:62:9: warning: use location
_1
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
dot graph arrowdot graph start relate for1ID : 2145716117
from free_ref basic block 3dot graph end relate end

./benchmarks/git/double_free_4/git_df_4.c:63:17: warning: use location
   63 |         free(ref->remote_status);
      |                 ^
_2 = ref_5(D)->remote_status;
dot graph relate stmt start ID : 1447662138 stmt(LHS) :./benchmarks/git/double_free_4/git_df_4.c:63:17: warning: use location
_2
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
dot graph arrowdot graph start relate for1ID : 2145716117
from free_ref basic block 3dot graph end relate end

./benchmarks/git/double_free_4/git_df_4.c:64:17: warning: use location
   64 |         free(ref->symref);
      |                 ^
_3 = ref_5(D)->symref;
dot graph relate stmt start ID : 353884020 stmt(LHS) :./benchmarks/git/double_free_4/git_df_4.c:64:17: warning: use location
_3
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:free_ref========= [0m
[40;41m =======recursive_fun2:free_ref========= [0m

 ================== trace ================== 
trace fucntion free:12 
dot graph target basicblock start from free_ref basic block 3dot graph target basicblock en1

dot graph arrowsubgraph cluster_1077975176 dot graph subgraph  free_ref (_1);
_1 = ref_5(D)->peer_ref;
dot graph subgrapend

dot graph target basicblock start from free_ref basic block 3dot graph target basicblock en1

dot graph arrowsubgraph cluster_272057997 dot graph subgraph  free_ref (_1);
_1 = ref_5(D)->peer_ref;
dot graph subgrapend

dot graph start relate for1ID : 1050221684
from free_ref basic block 3dot graph end relate end

subgraph cluster_1168351087 dot graph subgraph  start ID : 744585745 stmt(relate) ， Tree ID : 1050221684 : _3 = ref_5(D)->symref;
In function ‘main’:
./benchmarks/git/double_free_4/git_df_4.c:64:17: warning: use location
dot graph subgrapend

dot graph start relate for1ID : 988531808
from free_ref basic block 3dot graph end relate end

subgraph cluster_2128196860 dot graph subgraph  start ID : 644427797 stmt(relate) ， Tree ID : 988531808 : _3 = ref_5(D)->symref;
./benchmarks/git/double_free_4/git_df_4.c:64:17: warning: use location
dot graph subgrapend

dot graph start relate for1ID : 1405079620
from free_ref basic block 3dot graph end relate end

subgraph cluster_1772088912 dot graph subgraph  start ID : 1603193248 stmt(relate) ， Tree ID : 1405079620 : _3 = ref_5(D)->symref;
./benchmarks/git/double_free_4/git_df_4.c:64:17: warning: use location
dot graph subgrapend

dot graph start relate for1ID : 2145716117
from free_ref basic block 3dot graph end relate end

subgraph cluster_241724822 dot graph subgraph  start ID : 353884020 stmt(relate) ， Tree ID : 2145716117 : _3 = ref_5(D)->symref;
./benchmarks/git/double_free_4/git_df_4.c:64:17: warning: use location
dot graph subgrapend


 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f89e02999d8
    type <pointer_type 0x7f89e026e738
        type <record_type 0x7f89e026e690 ref BLK
            size <integer_cst 0x7f89e082b0a8 constant 640>
            unit-size <integer_cst 0x7f89e0265738 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f89e026e690 fields <field_decl 0x7f89e0271850 next> context <translation_unit_decl 0x7f89e0761168 ./benchmarks/git/double_free_4/git_df_4.c>
            pointer_to_this <pointer_type 0x7f89e026e738>>
        public unsigned DI
        size <integer_cst 0x7f89e0756bb8 constant 64>
        unit-size <integer_cst 0x7f89e0756bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f89e026e7e0>>
   
    def_stmt _1 = ref_5(D)->peer_ref;
    version:1
    ptr-info 0x7f89e0287ac8>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_9 = VDEF <.MEM_8>
free (_2);
./benchmarks/git/double_free_4/git_df_4.c:63:9: warning: use location
   63 |         free(ref->remote_status);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_10 = VDEF <.MEM_9>
free (_3);
./benchmarks/git/double_free_4/git_df_4.c:64:9: warning: use location
   64 |         free(ref->symref);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_11 = VDEF <.MEM_10>
free (ref_5(D));
./benchmarks/git/double_free_4/git_df_4.c:65:9: warning: use location
   65 |         free(ref);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:12 [0m
[40;31m  	possible double free [Looserules]:3 [0m
[40;31m  	possible double free [rigorous]:12 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:12 [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:free_ref========= [0m
[40;42m =======pre add _ fucntion:__builtin_fwrite========= [0m
[40;33m =======POP node_fun stack:__builtin_fwrite========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:hashcpy========= [0m
[40;33m =======POP node_fun stack:hashcpy========= [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;33m =======POP node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:strcmp========= [0m
[40;33m =======POP node_fun stack:strcmp========= [0m
[40;42m =======pre add _ fucntion:get_local_heads========= [0m
[40;33m =======POP node_fun stack:get_local_heads========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f89e075e5e8
    type <integer_type 0x7f89e076b5e8 int public SI
        size <integer_cst 0x7f89e0756df8 constant 32>
        unit-size <integer_cst 0x7f89e0756e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f89e076b5e8 precision:32 min <integer_cst 0x7f89e0756db0 -2147483648> max <integer_cst 0x7f89e0756dc8 2147483647>
        pointer_to_this <pointer_type 0x7f89e07729d8>>
   
    def_stmt _1 = get_local_heads ();
    version:1>
 <ssa_name 0x7f89e075e5e8
    type <integer_type 0x7f89e076b5e8 int public SI
        size <integer_cst 0x7f89e0756df8 constant 32>
        unit-size <integer_cst 0x7f89e0756e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f89e076b5e8 precision:32 min <integer_cst 0x7f89e0756db0 -2147483648> max <integer_cst 0x7f89e0756dc8 2147483647>
        pointer_to_this <pointer_type 0x7f89e07729d8>>
   
    def_stmt _1 = get_local_heads ();
    version:1>

 ================== pre trace ptable ================== 
trace fucntion name:get_local_heads 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f89e075e5e8
    type <integer_type 0x7f89e076b5e8 int public SI
        size <integer_cst 0x7f89e0756df8 constant 32>
        unit-size <integer_cst 0x7f89e0756e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f89e076b5e8 precision:32 min <integer_cst 0x7f89e0756db0 -2147483648> max <integer_cst 0x7f89e0756dc8 2147483647>
        pointer_to_this <pointer_type 0x7f89e07729d8>>
   
    def_stmt _1 = get_local_heads ();
    version:1>
is Other function get_local_heads
 
 Start check Pointer Collect  

======================================================================
dot graph entry main
dot graph target entry end

_2 = (long int) _1;
./benchmarks/git/double_free_4/git_df_4.c:215:22: warning: use location
  215 |         local_refs = get_local_heads();
      |                      ^
dot graph target loc start # .MEM_15 = VDEF <.MEM_14(D)>
_1 = get_local_heads ();
./benchmarks/git/double_free_4/git_df_4.c:215:22: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 2: _2 = (long int) _1;
./benchmarks/git/double_free_4/git_df_4.c:215:22: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_15 = VDEF <.MEM_14(D)>
_1 = get_local_heads ();
./benchmarks/git/double_free_4/git_df_4.c:215:22: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 2dot graph target basicblock en1

dot graph stmt start _2 = (long int) _1;
_1 = get_local_heads ();
dot graph stmt end

dot graph stmt start _2 = (long int) _1;
./benchmarks/git/double_free_4/git_df_4.c:215:22: warning: use location
dot graph stmt end

dot graph entry main
dot graph target entry end

local_refs_12 = (struct ref *) _2;
./benchmarks/git/double_free_4/git_df_4.c:215:20: warning: use location
  215 |         local_refs = get_local_heads();
      |                    ^
dot graph target loc start # .MEM_15 = VDEF <.MEM_14(D)>
_1 = get_local_heads ();
./benchmarks/git/double_free_4/git_df_4.c:215:22: warning: use location
  215 |         local_refs = get_local_heads();
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 2: local_refs_12 = (struct ref *) _2;
./benchmarks/git/double_free_4/git_df_4.c:215:20: warning: use location
  215 |         local_refs = get_local_heads();
      |                    ^
dot graph target line desend

dot graph target loc start # .MEM_15 = VDEF <.MEM_14(D)>
_1 = get_local_heads ();
./benchmarks/git/double_free_4/git_df_4.c:215:22: warning: use location
  215 |         local_refs = get_local_heads();
      |                      ^
dot graph target loc end

dot graph target basicblock start from main basic block 2dot graph target basicblock en1

dot graph stmt start local_refs_12 = (struct ref *) _2;
_1 = get_local_heads ();
dot graph stmt end

dot graph stmt start local_refs_12 = (struct ref *) _2;
./benchmarks/git/double_free_4/git_df_4.c:215:20: warning: use location
  215 |         local_refs = get_local_heads();
      |                    ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

ref_56 = PHI <local_refs_12(26), next_57(27)>
lto1: warning: use location
dot graph target loc start # .MEM_15 = VDEF <.MEM_14(D)>
_1 = get_local_heads ();
./benchmarks/git/double_free_4/git_df_4.c:215:22: warning: use location
  215 |         local_refs = get_local_heads();
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 28: ref_56 = PHI <local_refs_12(26), next_57(27)>
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_15 = VDEF <.MEM_14(D)>
_1 = get_local_heads ();
./benchmarks/git/double_free_4/git_df_4.c:215:22: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 28dot graph target basicblock en1

dot graph stmt start ref_56 = PHI <local_refs_12(26), next_57(27)>
_1 = get_local_heads ();
dot graph stmt end

dot graph stmt start ref_56 = PHI <local_refs_12(26), next_57(27)>
lto1: warning: use location
dot graph stmt end

this stmt have mutiple branch ---get_local_heads-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

if (ref_56 != 0B)
./benchmarks/git/double_free_4/git_df_4.c:71:16: warning: use location
   71 |         while (ref) {
      |                ^
dot graph target loc start # .MEM_15 = VDEF <.MEM_14(D)>
_1 = get_local_heads ();
./benchmarks/git/double_free_4/git_df_4.c:215:22: warning: use location
  215 |         local_refs = get_local_heads();
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 28: if (ref_56 != 0B)
./benchmarks/git/double_free_4/git_df_4.c:71:16: warning: use location
   71 |         while (ref) {
      |                ^
dot graph target line desend

dot graph target loc start # .MEM_15 = VDEF <.MEM_14(D)>
_1 = get_local_heads ();
./benchmarks/git/double_free_4/git_df_4.c:215:22: warning: use location
  215 |         local_refs = get_local_heads();
      |                      ^
dot graph target loc end

dot graph target basicblock start from main basic block 28dot graph target basicblock en1

dot graph stmt start if (ref_56 != 0B)
_1 = get_local_heads ();
dot graph stmt end

dot graph stmt start if (ref_56 != 0B)
./benchmarks/git/double_free_4/git_df_4.c:71:16: warning: use location
   71 |         while (ref) {
      |                ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

free_ref (ref_56);
./benchmarks/git/double_free_4/git_df_4.c:73:17: warning: use location
   73 |                 free_ref(ref);
      |                 ^
dot graph target loc start # .MEM_15 = VDEF <.MEM_14(D)>
_1 = get_local_heads ();
./benchmarks/git/double_free_4/git_df_4.c:215:22: warning: use location
  215 |         local_refs = get_local_heads();
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 27: free_ref (ref_56);
./benchmarks/git/double_free_4/git_df_4.c:73:17: warning: use location
   73 |                 free_ref(ref);
      |                 ^
dot graph target line desend

dot graph target loc start # .MEM_15 = VDEF <.MEM_14(D)>
_1 = get_local_heads ();
./benchmarks/git/double_free_4/git_df_4.c:215:22: warning: use location
  215 |         local_refs = get_local_heads();
      |                      ^
dot graph target loc end

dot graph target basicblock start from main basic block 27dot graph target basicblock en1

dot graph stmt start free_ref (ref_56);
_1 = get_local_heads ();
dot graph stmt end

dot graph stmt start free_ref (ref_56);
./benchmarks/git/double_free_4/git_df_4.c:73:17: warning: use location
   73 |                 free_ref(ref);
      |                 ^
dot graph stmt end

this stmt call this function :free_ref
trace fucntion name:free_ref 
[40;44m =======trace_function_path free_ref  function_call count: 2 level :0========  [0m
# .MEM_9 = VDEF <.MEM_8>
free (_2);
[40;31m  find free stmt free same pointer [0m
# .MEM_9 = VDEF <.MEM_8>
free (_2);
./benchmarks/git/double_free_4/git_df_4.c:63:9: warning: use location
   63 |         free(ref->remote_status);
      |         ^
dot graph start relate form ID : 442036007
from free_ref basic block 3dot graph end relate end

dot graph relate stmt start ID : 1428635398 stmt(free) :free (_2);
./benchmarks/git/double_free_4/git_df_4.c:63:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1428635398 stmt(free) :free (_2);
./benchmarks/git/double_free_4/git_df_4.c:63:9: warning: use location
dot graph relate end

# .MEM_10 = VDEF <.MEM_9>
free (_3);
[40;31m  find free stmt free same pointer [0m
# .MEM_10 = VDEF <.MEM_9>
free (_3);
./benchmarks/git/double_free_4/git_df_4.c:64:9: warning: use location
   64 |         free(ref->symref);
      |         ^
dot graph start relate form ID : 442036007
from free_ref basic block 3dot graph end relate end

dot graph relate stmt start ID : 1211763509 stmt(free) :free (_3);
./benchmarks/git/double_free_4/git_df_4.c:64:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1211763509 stmt(free) :free (_3);
./benchmarks/git/double_free_4/git_df_4.c:64:9: warning: use location
dot graph relate end

# .MEM_11 = VDEF <.MEM_10>
free (ref_5(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_11 = VDEF <.MEM_10>
free (ref_5(D));
./benchmarks/git/double_free_4/git_df_4.c:65:9: warning: use location
   65 |         free(ref);
      |         ^
dot graph start relate form ID : 442036007
from free_ref basic block 3dot graph end relate end

dot graph relate stmt start ID : 1186621753 stmt(free) :free (ref_5(D));
./benchmarks/git/double_free_4/git_df_4.c:65:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1186621753 stmt(free) :free (ref_5(D));
./benchmarks/git/double_free_4/git_df_4.c:65:9: warning: use location
dot graph relate end

 <ssa_name 0x7f89e075e5e8
    type <integer_type 0x7f89e076b5e8 int public SI
        size <integer_cst 0x7f89e0756df8 constant 32>
        unit-size <integer_cst 0x7f89e0756e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f89e076b5e8 precision:32 min <integer_cst 0x7f89e0756db0 -2147483648> max <integer_cst 0x7f89e0756dc8 2147483647>
        pointer_to_this <pointer_type 0x7f89e07729d8>>
   
    def_stmt _1 = get_local_heads ();
    version:1>
[40;36m ======= node_fun:free_ref========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:free_ref========= [0m
[40;46m =======add node_fun stack:free_ref========= [0m
[40;44m =======trace_function_path free_ref  function_call count: 2 level :1========  [0m
# .MEM_9 = VDEF <.MEM_8>
free (_2);
[40;31m  find free stmt free same pointer [0m
# .MEM_9 = VDEF <.MEM_8>
free (_2);
./benchmarks/git/double_free_4/git_df_4.c:63:9: warning: use location
   63 |         free(ref->remote_status);
      |         ^
dot graph start relate form ID : 269683559
from free_ref basic block 3dot graph end relate end

dot graph relate stmt start ID : 796068805 stmt(free) :free (_2);
./benchmarks/git/double_free_4/git_df_4.c:63:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 796068805 stmt(free) :free (_2);
./benchmarks/git/double_free_4/git_df_4.c:63:9: warning: use location
dot graph relate end

# .MEM_10 = VDEF <.MEM_9>
free (_3);
[40;31m  find free stmt free same pointer [0m
# .MEM_10 = VDEF <.MEM_9>
free (_3);
./benchmarks/git/double_free_4/git_df_4.c:64:9: warning: use location
   64 |         free(ref->symref);
      |         ^
dot graph start relate form ID : 269683559
from free_ref basic block 3dot graph end relate end

dot graph relate stmt start ID : 184866212 stmt(free) :free (_3);
./benchmarks/git/double_free_4/git_df_4.c:64:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 184866212 stmt(free) :free (_3);
./benchmarks/git/double_free_4/git_df_4.c:64:9: warning: use location
dot graph relate end

# .MEM_11 = VDEF <.MEM_10>
free (ref_5(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_11 = VDEF <.MEM_10>
free (ref_5(D));
./benchmarks/git/double_free_4/git_df_4.c:65:9: warning: use location
   65 |         free(ref);
      |         ^
dot graph start relate form ID : 269683559
from free_ref basic block 3dot graph end relate end

dot graph relate stmt start ID : 1376360199 stmt(free) :free (ref_5(D));
./benchmarks/git/double_free_4/git_df_4.c:65:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1376360199 stmt(free) :free (ref_5(D));
./benchmarks/git/double_free_4/git_df_4.c:65:9: warning: use location
dot graph relate end

 <ssa_name 0x7f89e075e5e8
    type <integer_type 0x7f89e076b5e8 int public SI
        size <integer_cst 0x7f89e0756df8 constant 32>
        unit-size <integer_cst 0x7f89e0756e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f89e076b5e8 precision:32 min <integer_cst 0x7f89e0756db0 -2147483648> max <integer_cst 0x7f89e0756dc8 2147483647>
        pointer_to_this <pointer_type 0x7f89e07729d8>>
   
    def_stmt _1 = get_local_heads ();
    version:1>
[40;36m ======= node_fun:free_ref========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:free_ref========= [0m
[40;41m =======recursive_fun2:free_ref========= [0m

 ================== trace ================== 
trace fucntion free:6 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

next_57 = ref_56->next;
./benchmarks/git/double_free_4/git_df_4.c:72:22: warning: use location
   72 |                 next = ref->next;
      |                      ^
dot graph target loc start # .MEM_15 = VDEF <.MEM_14(D)>
_1 = get_local_heads ();
./benchmarks/git/double_free_4/git_df_4.c:215:22: warning: use location
  215 |         local_refs = get_local_heads();
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 27: next_57 = ref_56->next;
./benchmarks/git/double_free_4/git_df_4.c:72:22: warning: use location
   72 |                 next = ref->next;
      |                      ^
dot graph target line desend

dot graph target loc start # .MEM_15 = VDEF <.MEM_14(D)>
_1 = get_local_heads ();
./benchmarks/git/double_free_4/git_df_4.c:215:22: warning: use location
  215 |         local_refs = get_local_heads();
      |                      ^
dot graph target loc end

dot graph target basicblock start from main basic block 27dot graph target basicblock en1

dot graph stmt start next_57 = ref_56->next;
_1 = get_local_heads ();
dot graph stmt end

dot graph stmt start next_57 = ref_56->next;
./benchmarks/git/double_free_4/git_df_4.c:72:22: warning: use location
   72 |                 next = ref->next;
      |                      ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

src_21 = PHI <local_refs_12(2), src_34(20)>
lto1: warning: use location
dot graph target loc start # .MEM_15 = VDEF <.MEM_14(D)>
_1 = get_local_heads ();
./benchmarks/git/double_free_4/git_df_4.c:215:22: warning: use location
  215 |         local_refs = get_local_heads();
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 21: src_21 = PHI <local_refs_12(2), src_34(20)>
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_15 = VDEF <.MEM_14(D)>
_1 = get_local_heads ();
./benchmarks/git/double_free_4/git_df_4.c:215:22: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 21dot graph target basicblock en1

dot graph stmt start src_21 = PHI <local_refs_12(2), src_34(20)>
_1 = get_local_heads ();
dot graph stmt end

dot graph stmt start src_21 = PHI <local_refs_12(2), src_34(20)>
lto1: warning: use location
dot graph stmt end

this stmt have mutiple branch ---free_ref-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

src_34 = src_21->next;
./benchmarks/git/double_free_4/git_df_4.c:163:26: warning: use location
  163 |         for ( ; src; src = src->next) {
      |                          ^
dot graph target loc start # .MEM_15 = VDEF <.MEM_14(D)>
_1 = get_local_heads ();
./benchmarks/git/double_free_4/git_df_4.c:215:22: warning: use location
  215 |         local_refs = get_local_heads();
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 20: src_34 = src_21->next;
./benchmarks/git/double_free_4/git_df_4.c:163:26: warning: use location
  163 |         for ( ; src; src = src->next) {
      |                          ^
dot graph target line desend

dot graph target loc start # .MEM_15 = VDEF <.MEM_14(D)>
_1 = get_local_heads ();
./benchmarks/git/double_free_4/git_df_4.c:215:22: warning: use location
  215 |         local_refs = get_local_heads();
      |                      ^
dot graph target loc end

dot graph target basicblock start from main basic block 20dot graph target basicblock en1

dot graph stmt start src_34 = src_21->next;
_1 = get_local_heads ();
dot graph stmt end

dot graph stmt start src_34 = src_21->next;
./benchmarks/git/double_free_4/git_df_4.c:163:26: warning: use location
  163 |         for ( ; src; src = src->next) {
      |                          ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

dst_peer_32->peer_ref = src_21;
./benchmarks/git/double_free_4/git_df_4.c:189:36: warning: use location
  189 |                 dst_peer->peer_ref = src;
      |                                    ^
dot graph target loc start # .MEM_15 = VDEF <.MEM_14(D)>
_1 = get_local_heads ();
./benchmarks/git/double_free_4/git_df_4.c:215:22: warning: use location
  215 |         local_refs = get_local_heads();
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 18: dst_peer_32->peer_ref = src_21;
./benchmarks/git/double_free_4/git_df_4.c:189:36: warning: use location
  189 |                 dst_peer->peer_ref = src;
      |                                    ^
dot graph target line desend

dot graph target loc start # .MEM_15 = VDEF <.MEM_14(D)>
_1 = get_local_heads ();
./benchmarks/git/double_free_4/git_df_4.c:215:22: warning: use location
  215 |         local_refs = get_local_heads();
      |                      ^
dot graph target loc end

dot graph target basicblock start from main basic block 18dot graph target basicblock en1

dot graph stmt start dst_peer_32->peer_ref = src_21;
_1 = get_local_heads ();
dot graph stmt end

dot graph stmt start dst_peer_32->peer_ref = src_21;
./benchmarks/git/double_free_4/git_df_4.c:189:36: warning: use location
  189 |                 dst_peer->peer_ref = src;
      |                                    ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

dst_peer_32->force = _33;
./benchmarks/git/double_free_4/git_df_4.c:190:33: warning: use location
  190 |                 dst_peer->force = pat->force;
      |                                 ^
dot graph target loc start # .MEM_15 = VDEF <.MEM_14(D)>
_1 = get_local_heads ();
./benchmarks/git/double_free_4/git_df_4.c:215:22: warning: use location
  215 |         local_refs = get_local_heads();
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 18: dst_peer_32->force = _33;
./benchmarks/git/double_free_4/git_df_4.c:190:33: warning: use location
  190 |                 dst_peer->force = pat->force;
      |                                 ^
dot graph target line desend

dot graph target loc start # .MEM_15 = VDEF <.MEM_14(D)>
_1 = get_local_heads ();
./benchmarks/git/double_free_4/git_df_4.c:215:22: warning: use location
  215 |         local_refs = get_local_heads();
      |                      ^
dot graph target loc end

dot graph target basicblock start from main basic block 18dot graph target basicblock en1

dot graph stmt start dst_peer_32->force = _33;
_1 = get_local_heads ();
dot graph stmt end

dot graph stmt start dst_peer_32->force = _33;
./benchmarks/git/double_free_4/git_df_4.c:190:33: warning: use location
  190 |                 dst_peer->force = pat->force;
      |                                 ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

dst_peer_32->force = _33;
./benchmarks/git/double_free_4/git_df_4.c:190:33: warning: use location
dot graph target loc start # .MEM_15 = VDEF <.MEM_14(D)>
_1 = get_local_heads ();
./benchmarks/git/double_free_4/git_df_4.c:215:22: warning: use location
  215 |         local_refs = get_local_heads();
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 18: dst_peer_32->force = _33;
./benchmarks/git/double_free_4/git_df_4.c:190:33: warning: use location
  190 |                 dst_peer->force = pat->force;
      |                                 ^
dot graph target line desend

dot graph target loc start # .MEM_15 = VDEF <.MEM_14(D)>
_1 = get_local_heads ();
./benchmarks/git/double_free_4/git_df_4.c:215:22: warning: use location
  215 |         local_refs = get_local_heads();
      |                      ^
dot graph target loc end

dot graph target basicblock start from main basic block 18dot graph target basicblock en1

dot graph stmt start dst_peer_32->force = _33;
_1 = get_local_heads ();
dot graph stmt end

dot graph stmt start dst_peer_32->force = _33;
./benchmarks/git/double_free_4/git_df_4.c:190:33: warning: use location
  190 |                 dst_peer->force = pat->force;
      |                                 ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

_33 = MEM[(const struct refspec *)0B].force;
./benchmarks/git/double_free_4/git_df_4.c:190:38: warning: use location
  190 |                 dst_peer->force = pat->force;
      |                                      ^
dot graph target loc start # .MEM_15 = VDEF <.MEM_14(D)>
_1 = get_local_heads ();
./benchmarks/git/double_free_4/git_df_4.c:215:22: warning: use location
  215 |         local_refs = get_local_heads();
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 18: _33 = MEM[(const struct refspec *)0B].force;
./benchmarks/git/double_free_4/git_df_4.c:190:38: warning: use location
  190 |                 dst_peer->force = pat->force;
      |                                      ^
dot graph target line desend

dot graph target loc start # .MEM_15 = VDEF <.MEM_14(D)>
_1 = get_local_heads ();
./benchmarks/git/double_free_4/git_df_4.c:215:22: warning: use location
  215 |         local_refs = get_local_heads();
      |                      ^
dot graph target loc end

dot graph target basicblock start from main basic block 18dot graph target basicblock en1

dot graph stmt start _33 = MEM[(const struct refspec *)0B].force;
_1 = get_local_heads ();
dot graph stmt end

dot graph stmt start _33 = MEM[(const struct refspec *)0B].force;
./benchmarks/git/double_free_4/git_df_4.c:190:38: warning: use location
  190 |                 dst_peer->force = pat->force;
      |                                      ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

_30 = &src_21->new_sha1;
./benchmarks/git/double_free_4/git_df_4.c:187:56: warning: use location
  187 |                         hashcpy(dst_peer->new_sha1, src->new_sha1);
      |                                                        ^
dot graph target loc start # .MEM_15 = VDEF <.MEM_14(D)>
_1 = get_local_heads ();
./benchmarks/git/double_free_4/git_df_4.c:215:22: warning: use location
  215 |         local_refs = get_local_heads();
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 17: _30 = &src_21->new_sha1;
./benchmarks/git/double_free_4/git_df_4.c:187:56: warning: use location
  187 |                         hashcpy(dst_peer->new_sha1, src->new_sha1);
      |                                                        ^
dot graph target line desend

dot graph target loc start # .MEM_15 = VDEF <.MEM_14(D)>
_1 = get_local_heads ();
./benchmarks/git/double_free_4/git_df_4.c:215:22: warning: use location
  215 |         local_refs = get_local_heads();
      |                      ^
dot graph target loc end

dot graph target basicblock start from main basic block 17dot graph target basicblock en1

dot graph stmt start _30 = &src_21->new_sha1;
_1 = get_local_heads ();
dot graph stmt end

dot graph stmt start _30 = &src_21->new_sha1;
./benchmarks/git/double_free_4/git_df_4.c:187:56: warning: use location
  187 |                         hashcpy(dst_peer->new_sha1, src->new_sha1);
      |                                                        ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

hashcpy (_31, _30);
./benchmarks/git/double_free_4/git_df_4.c:187:25: warning: use location
  187 |                         hashcpy(dst_peer->new_sha1, src->new_sha1);
      |                         ^
dot graph target loc start # .MEM_15 = VDEF <.MEM_14(D)>
_1 = get_local_heads ();
./benchmarks/git/double_free_4/git_df_4.c:215:22: warning: use location
  215 |         local_refs = get_local_heads();
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 17: hashcpy (_31, _30);
./benchmarks/git/double_free_4/git_df_4.c:187:25: warning: use location
  187 |                         hashcpy(dst_peer->new_sha1, src->new_sha1);
      |                         ^
dot graph target line desend

dot graph target loc start # .MEM_15 = VDEF <.MEM_14(D)>
_1 = get_local_heads ();
./benchmarks/git/double_free_4/git_df_4.c:215:22: warning: use location
  215 |         local_refs = get_local_heads();
      |                      ^
dot graph target loc end

dot graph target basicblock start from main basic block 17dot graph target basicblock en1

dot graph stmt start hashcpy (_31, _30);
_1 = get_local_heads ();
dot graph stmt end

dot graph stmt start hashcpy (_31, _30);
./benchmarks/git/double_free_4/git_df_4.c:187:25: warning: use location
  187 |                         hashcpy(dst_peer->new_sha1, src->new_sha1);
      |                         ^
dot graph stmt end

this stmt call this function :hashcpy
trace fucntion name:hashcpy 

 ================== trace ================== 
trace fucntion free:6 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

_23 = src_21->peer_ref;
./benchmarks/git/double_free_4/git_df_4.c:167:24: warning: use location
  167 |                 if (src->peer_ref)
      |                        ^
dot graph target loc start # .MEM_15 = VDEF <.MEM_14(D)>
_1 = get_local_heads ();
./benchmarks/git/double_free_4/git_df_4.c:215:22: warning: use location
  215 |         local_refs = get_local_heads();
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 3: _23 = src_21->peer_ref;
./benchmarks/git/double_free_4/git_df_4.c:167:24: warning: use location
  167 |                 if (src->peer_ref)
      |                        ^
dot graph target line desend

dot graph target loc start # .MEM_15 = VDEF <.MEM_14(D)>
_1 = get_local_heads ();
./benchmarks/git/double_free_4/git_df_4.c:215:22: warning: use location
  215 |         local_refs = get_local_heads();
      |                      ^
dot graph target loc end

dot graph target basicblock start from main basic block 3dot graph target basicblock en1

dot graph stmt start _23 = src_21->peer_ref;
_1 = get_local_heads ();
dot graph stmt end

dot graph stmt start _23 = src_21->peer_ref;
./benchmarks/git/double_free_4/git_df_4.c:167:24: warning: use location
  167 |                 if (src->peer_ref)
      |                        ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

dst_name_22 = &src_21->name;
./benchmarks/git/double_free_4/git_df_4.c:166:23: warning: use location
  166 |                 char *dst_name = src->name;
      |                       ^
dot graph target loc start # .MEM_15 = VDEF <.MEM_14(D)>
_1 = get_local_heads ();
./benchmarks/git/double_free_4/git_df_4.c:215:22: warning: use location
  215 |         local_refs = get_local_heads();
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 3: dst_name_22 = &src_21->name;
./benchmarks/git/double_free_4/git_df_4.c:166:23: warning: use location
  166 |                 char *dst_name = src->name;
      |                       ^
dot graph target line desend

dot graph target loc start # .MEM_15 = VDEF <.MEM_14(D)>
_1 = get_local_heads ();
./benchmarks/git/double_free_4/git_df_4.c:215:22: warning: use location
  215 |         local_refs = get_local_heads();
      |                      ^
dot graph target loc end

dot graph target basicblock start from main basic block 3dot graph target basicblock en1

dot graph stmt start dst_name_22 = &src_21->name;
_1 = get_local_heads ();
dot graph stmt end

dot graph stmt start dst_name_22 = &src_21->name;
./benchmarks/git/double_free_4/git_df_4.c:166:23: warning: use location
  166 |                 char *dst_name = src->name;
      |                       ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

len_47 = strlen (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:89:22: warning: use location
   89 |         size_t len = strlen(name);
      |                      ^
dot graph target loc start # .MEM_15 = VDEF <.MEM_14(D)>
_1 = get_local_heads ();
./benchmarks/git/double_free_4/git_df_4.c:215:22: warning: use location
  215 |         local_refs = get_local_heads();
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 14: len_47 = strlen (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:89:22: warning: use location
   89 |         size_t len = strlen(name);
      |                      ^
dot graph target line desend

dot graph target loc start # .MEM_15 = VDEF <.MEM_14(D)>
_1 = get_local_heads ();
./benchmarks/git/double_free_4/git_df_4.c:215:22: warning: use location
  215 |         local_refs = get_local_heads();
      |                      ^
dot graph target loc end

dot graph target basicblock start from main basic block 14dot graph target basicblock en1

dot graph stmt start len_47 = strlen (dst_name_22);
_1 = get_local_heads ();
dot graph stmt end

dot graph stmt start len_47 = strlen (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:89:22: warning: use location
   89 |         size_t len = strlen(name);
      |                      ^
dot graph stmt end

this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:6 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

_48 = len_47;
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
   90 |         struct ref *ref = xcalloc(1, sizeof(struct ref) + prefixlen + len + 1);
      |                           ^
dot graph target loc start # .MEM_15 = VDEF <.MEM_14(D)>
_1 = get_local_heads ();
./benchmarks/git/double_free_4/git_df_4.c:215:22: warning: use location
  215 |         local_refs = get_local_heads();
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 14: _48 = len_47;
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
   90 |         struct ref *ref = xcalloc(1, sizeof(struct ref) + prefixlen + len + 1);
      |                           ^
dot graph target line desend

dot graph target loc start # .MEM_15 = VDEF <.MEM_14(D)>
_1 = get_local_heads ();
./benchmarks/git/double_free_4/git_df_4.c:215:22: warning: use location
  215 |         local_refs = get_local_heads();
      |                      ^
dot graph target loc end

dot graph target basicblock start from main basic block 14dot graph target basicblock en1

dot graph stmt start _48 = len_47;
_1 = get_local_heads ();
dot graph stmt end

dot graph stmt start _48 = len_47;
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
   90 |         struct ref *ref = xcalloc(1, sizeof(struct ref) + prefixlen + len + 1);
      |                           ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

_49 = _48 + 81;
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
dot graph target loc start # .MEM_15 = VDEF <.MEM_14(D)>
_1 = get_local_heads ();
./benchmarks/git/double_free_4/git_df_4.c:215:22: warning: use location
  215 |         local_refs = get_local_heads();
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 14: _49 = _48 + 81;
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
   90 |         struct ref *ref = xcalloc(1, sizeof(struct ref) + prefixlen + len + 1);
      |                           ^
dot graph target line desend

dot graph target loc start # .MEM_15 = VDEF <.MEM_14(D)>
_1 = get_local_heads ();
./benchmarks/git/double_free_4/git_df_4.c:215:22: warning: use location
  215 |         local_refs = get_local_heads();
      |                      ^
dot graph target loc end

dot graph target basicblock start from main basic block 14dot graph target basicblock en1

dot graph stmt start _49 = _48 + 81;
_1 = get_local_heads ();
dot graph stmt end

dot graph stmt start _49 = _48 + 81;
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
   90 |         struct ref *ref = xcalloc(1, sizeof(struct ref) + prefixlen + len + 1);
      |                           ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

ref_50 = calloc (1, _49);
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
dot graph target loc start # .MEM_15 = VDEF <.MEM_14(D)>
_1 = get_local_heads ();
./benchmarks/git/double_free_4/git_df_4.c:215:22: warning: use location
  215 |         local_refs = get_local_heads();
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 14: ref_50 = calloc (1, _49);
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
   90 |         struct ref *ref = xcalloc(1, sizeof(struct ref) + prefixlen + len + 1);
      |                           ^
dot graph target line desend

dot graph target loc start # .MEM_15 = VDEF <.MEM_14(D)>
_1 = get_local_heads ();
./benchmarks/git/double_free_4/git_df_4.c:215:22: warning: use location
  215 |         local_refs = get_local_heads();
      |                      ^
dot graph target loc end

dot graph target basicblock start from main basic block 14dot graph target basicblock en1

dot graph stmt start ref_50 = calloc (1, _49);
_1 = get_local_heads ();
dot graph stmt end

dot graph stmt start ref_50 = calloc (1, _49);
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
   90 |         struct ref *ref = xcalloc(1, sizeof(struct ref) + prefixlen + len + 1);
      |                           ^
dot graph stmt end

this stmt call this function :calloc

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

_70 = ref_50;
lto1: warning: use location
dot graph target loc start # .MEM_15 = VDEF <.MEM_14(D)>
_1 = get_local_heads ();
./benchmarks/git/double_free_4/git_df_4.c:215:22: warning: use location
  215 |         local_refs = get_local_heads();
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 14: _70 = ref_50;
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_15 = VDEF <.MEM_14(D)>
_1 = get_local_heads ();
./benchmarks/git/double_free_4/git_df_4.c:215:22: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 14dot graph target basicblock en1

dot graph stmt start _70 = ref_50;
_1 = get_local_heads ();
dot graph stmt end

dot graph stmt start _70 = ref_50;
lto1: warning: use location
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

_46 = _70;
./benchmarks/git/double_free_4/git_df_4.c:98:16: warning: use location
   98 |         return alloc_ref_with_prefix("", 0, name);
      |                ^
dot graph target loc start # .MEM_15 = VDEF <.MEM_14(D)>
_1 = get_local_heads ();
./benchmarks/git/double_free_4/git_df_4.c:215:22: warning: use location
  215 |         local_refs = get_local_heads();
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 14: _46 = _70;
./benchmarks/git/double_free_4/git_df_4.c:98:16: warning: use location
   98 |         return alloc_ref_with_prefix("", 0, name);
      |                ^
dot graph target line desend

dot graph target loc start # .MEM_15 = VDEF <.MEM_14(D)>
_1 = get_local_heads ();
./benchmarks/git/double_free_4/git_df_4.c:215:22: warning: use location
  215 |         local_refs = get_local_heads();
      |                      ^
dot graph target loc end

dot graph target basicblock start from main basic block 14dot graph target basicblock en1

dot graph stmt start _46 = _70;
_1 = get_local_heads ();
dot graph stmt end

dot graph stmt start _46 = _70;
./benchmarks/git/double_free_4/git_df_4.c:98:16: warning: use location
   98 |         return alloc_ref_with_prefix("", 0, name);
      |                ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

_71 = _46;
lto1: warning: use location
dot graph target loc start # .MEM_15 = VDEF <.MEM_14(D)>
_1 = get_local_heads ();
./benchmarks/git/double_free_4/git_df_4.c:215:22: warning: use location
  215 |         local_refs = get_local_heads();
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 14: _71 = _46;
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_15 = VDEF <.MEM_14(D)>
_1 = get_local_heads ();
./benchmarks/git/double_free_4/git_df_4.c:215:22: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 14dot graph target basicblock en1

dot graph stmt start _71 = _46;
_1 = get_local_heads ();
dot graph stmt end

dot graph stmt start _71 = _46;
lto1: warning: use location
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

ret_40 = _71;
./benchmarks/git/double_free_4/git_df_4.c:144:27: warning: use location
  144 |         struct ref *ret = alloc_ref(name);
      |                           ^
dot graph target loc start # .MEM_15 = VDEF <.MEM_14(D)>
_1 = get_local_heads ();
./benchmarks/git/double_free_4/git_df_4.c:215:22: warning: use location
  215 |         local_refs = get_local_heads();
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 14: ret_40 = _71;
./benchmarks/git/double_free_4/git_df_4.c:144:27: warning: use location
  144 |         struct ref *ret = alloc_ref(name);
      |                           ^
dot graph target line desend

dot graph target loc start # .MEM_15 = VDEF <.MEM_14(D)>
_1 = get_local_heads ();
./benchmarks/git/double_free_4/git_df_4.c:215:22: warning: use location
  215 |         local_refs = get_local_heads();
      |                      ^
dot graph target loc end

dot graph target basicblock start from main basic block 14dot graph target basicblock en1

dot graph stmt start ret_40 = _71;
_1 = get_local_heads ();
dot graph stmt end

dot graph stmt start ret_40 = _71;
./benchmarks/git/double_free_4/git_df_4.c:144:27: warning: use location
  144 |         struct ref *ret = alloc_ref(name);
      |                           ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

ref_42 = PHI <ret_40(14), ref_43(15)>
lto1: warning: use location
dot graph target loc start # .MEM_15 = VDEF <.MEM_14(D)>
_1 = get_local_heads ();
./benchmarks/git/double_free_4/git_df_4.c:215:22: warning: use location
  215 |         local_refs = get_local_heads();
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 16: ref_42 = PHI <ret_40(14), ref_43(15)>
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_15 = VDEF <.MEM_14(D)>
_1 = get_local_heads ();
./benchmarks/git/double_free_4/git_df_4.c:215:22: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 16dot graph target basicblock en1

dot graph stmt start ref_42 = PHI <ret_40(14), ref_43(15)>
_1 = get_local_heads ();
dot graph stmt end

dot graph stmt start ref_42 = PHI <ret_40(14), ref_43(15)>
lto1: warning: use location
dot graph stmt end

this stmt have mutiple branch ---calloc-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

_45 = &ref_42->next;
./benchmarks/git/double_free_4/git_df_4.c:139:17: warning: use location
  139 |         *tail = &ref->next;
      |                 ^
dot graph target loc start # .MEM_15 = VDEF <.MEM_14(D)>
_1 = get_local_heads ();
./benchmarks/git/double_free_4/git_df_4.c:215:22: warning: use location
  215 |         local_refs = get_local_heads();
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 17: _45 = &ref_42->next;
./benchmarks/git/double_free_4/git_df_4.c:139:17: warning: use location
  139 |         *tail = &ref->next;
      |                 ^
dot graph target line desend

dot graph target loc start # .MEM_15 = VDEF <.MEM_14(D)>
_1 = get_local_heads ();
./benchmarks/git/double_free_4/git_df_4.c:215:22: warning: use location
  215 |         local_refs = get_local_heads();
      |                      ^
dot graph target loc end

dot graph target basicblock start from main basic block 17dot graph target basicblock en1

dot graph stmt start _45 = &ref_42->next;
_1 = get_local_heads ();
dot graph stmt end

dot graph stmt start _45 = &ref_42->next;
./benchmarks/git/double_free_4/git_df_4.c:139:17: warning: use location
  139 |         *tail = &ref->next;
      |                 ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

remote_tail = _45;
./benchmarks/git/double_free_4/git_df_4.c:139:15: warning: use location
  139 |         *tail = &ref->next;
      |               ^
dot graph target loc start # .MEM_15 = VDEF <.MEM_14(D)>
_1 = get_local_heads ();
./benchmarks/git/double_free_4/git_df_4.c:215:22: warning: use location
  215 |         local_refs = get_local_heads();
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 17: remote_tail = _45;
./benchmarks/git/double_free_4/git_df_4.c:139:15: warning: use location
  139 |         *tail = &ref->next;
      |               ^
dot graph target line desend

dot graph target loc start # .MEM_15 = VDEF <.MEM_14(D)>
_1 = get_local_heads ();
./benchmarks/git/double_free_4/git_df_4.c:215:22: warning: use location
  215 |         local_refs = get_local_heads();
      |                      ^
dot graph target loc end

dot graph target basicblock start from main basic block 17dot graph target basicblock en1

dot graph stmt start remote_tail = _45;
_1 = get_local_heads ();
dot graph stmt end

dot graph stmt start remote_tail = _45;
./benchmarks/git/double_free_4/git_df_4.c:139:15: warning: use location
  139 |         *tail = &ref->next;
      |               ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

_41 = remote_tail;
./benchmarks/git/double_free_4/git_df_4.c:136:10: warning: use location
  136 |         **tail = ref;
      |          ^
dot graph target loc start # .MEM_15 = VDEF <.MEM_14(D)>
_1 = get_local_heads ();
./benchmarks/git/double_free_4/git_df_4.c:215:22: warning: use location
  215 |         local_refs = get_local_heads();
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 14: _41 = remote_tail;
./benchmarks/git/double_free_4/git_df_4.c:136:10: warning: use location
  136 |         **tail = ref;
      |          ^
dot graph target line desend

dot graph target loc start # .MEM_15 = VDEF <.MEM_14(D)>
_1 = get_local_heads ();
./benchmarks/git/double_free_4/git_df_4.c:215:22: warning: use location
  215 |         local_refs = get_local_heads();
      |                      ^
dot graph target loc end

dot graph target basicblock start from main basic block 14dot graph target basicblock en1

dot graph stmt start _41 = remote_tail;
_1 = get_local_heads ();
dot graph stmt end

dot graph stmt start _41 = remote_tail;
./benchmarks/git/double_free_4/git_df_4.c:136:10: warning: use location
  136 |         **tail = ref;
      |          ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

*_41 = ret_40;
./benchmarks/git/double_free_4/git_df_4.c:136:16: warning: use location
  136 |         **tail = ref;
      |                ^
dot graph target loc start # .MEM_15 = VDEF <.MEM_14(D)>
_1 = get_local_heads ();
./benchmarks/git/double_free_4/git_df_4.c:215:22: warning: use location
  215 |         local_refs = get_local_heads();
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 14: *_41 = ret_40;
./benchmarks/git/double_free_4/git_df_4.c:136:16: warning: use location
  136 |         **tail = ref;
      |                ^
dot graph target line desend

dot graph target loc start # .MEM_15 = VDEF <.MEM_14(D)>
_1 = get_local_heads ();
./benchmarks/git/double_free_4/git_df_4.c:215:22: warning: use location
  215 |         local_refs = get_local_heads();
      |                      ^
dot graph target loc end

dot graph target basicblock start from main basic block 14dot graph target basicblock en1

dot graph stmt start *_41 = ret_40;
_1 = get_local_heads ();
dot graph stmt end

dot graph stmt start *_41 = ret_40;
./benchmarks/git/double_free_4/git_df_4.c:136:16: warning: use location
  136 |         **tail = ref;
      |                ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

_44 = ref_42->next;
./benchmarks/git/double_free_4/git_df_4.c:137:19: warning: use location
  137 |         while (ref->next)
      |                   ^
dot graph target loc start # .MEM_15 = VDEF <.MEM_14(D)>
_1 = get_local_heads ();
./benchmarks/git/double_free_4/git_df_4.c:215:22: warning: use location
  215 |         local_refs = get_local_heads();
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 16: _44 = ref_42->next;
./benchmarks/git/double_free_4/git_df_4.c:137:19: warning: use location
  137 |         while (ref->next)
      |                   ^
dot graph target line desend

dot graph target loc start # .MEM_15 = VDEF <.MEM_14(D)>
_1 = get_local_heads ();
./benchmarks/git/double_free_4/git_df_4.c:215:22: warning: use location
  215 |         local_refs = get_local_heads();
      |                      ^
dot graph target loc end

dot graph target basicblock start from main basic block 16dot graph target basicblock en1

dot graph stmt start _44 = ref_42->next;
_1 = get_local_heads ();
dot graph stmt end

dot graph stmt start _44 = ref_42->next;
./benchmarks/git/double_free_4/git_df_4.c:137:19: warning: use location
  137 |         while (ref->next)
      |                   ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

ref_43 = ref_42->next;
./benchmarks/git/double_free_4/git_df_4.c:138:21: warning: use location
  138 |                 ref = ref->next;
      |                     ^
dot graph target loc start # .MEM_15 = VDEF <.MEM_14(D)>
_1 = get_local_heads ();
./benchmarks/git/double_free_4/git_df_4.c:215:22: warning: use location
  215 |         local_refs = get_local_heads();
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 15: ref_43 = ref_42->next;
./benchmarks/git/double_free_4/git_df_4.c:138:21: warning: use location
  138 |                 ref = ref->next;
      |                     ^
dot graph target line desend

dot graph target loc start # .MEM_15 = VDEF <.MEM_14(D)>
_1 = get_local_heads ();
./benchmarks/git/double_free_4/git_df_4.c:215:22: warning: use location
  215 |         local_refs = get_local_heads();
      |                      ^
dot graph target loc end

dot graph target basicblock start from main basic block 15dot graph target basicblock en1

dot graph stmt start ref_43 = ref_42->next;
_1 = get_local_heads ();
dot graph stmt end

dot graph stmt start ref_43 = ref_42->next;
./benchmarks/git/double_free_4/git_df_4.c:138:21: warning: use location
  138 |                 ref = ref->next;
      |                     ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

_74 = ret_40;
lto1: warning: use location
dot graph target loc start # .MEM_15 = VDEF <.MEM_14(D)>
_1 = get_local_heads ();
./benchmarks/git/double_free_4/git_df_4.c:215:22: warning: use location
  215 |         local_refs = get_local_heads();
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 17: _74 = ret_40;
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_15 = VDEF <.MEM_14(D)>
_1 = get_local_heads ();
./benchmarks/git/double_free_4/git_df_4.c:215:22: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 17dot graph target basicblock en1

dot graph stmt start _74 = ret_40;
_1 = get_local_heads ();
dot graph stmt end

dot graph stmt start _74 = ret_40;
lto1: warning: use location
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

dst_peer_29 = _74;
./benchmarks/git/double_free_4/git_df_4.c:186:36: warning: use location
  186 |                         dst_peer = make_linked_ref(dst_name, dst_tail);
      |                                    ^
dot graph target loc start # .MEM_15 = VDEF <.MEM_14(D)>
_1 = get_local_heads ();
./benchmarks/git/double_free_4/git_df_4.c:215:22: warning: use location
  215 |         local_refs = get_local_heads();
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 17: dst_peer_29 = _74;
./benchmarks/git/double_free_4/git_df_4.c:186:36: warning: use location
  186 |                         dst_peer = make_linked_ref(dst_name, dst_tail);
      |                                    ^
dot graph target line desend

dot graph target loc start # .MEM_15 = VDEF <.MEM_14(D)>
_1 = get_local_heads ();
./benchmarks/git/double_free_4/git_df_4.c:215:22: warning: use location
  215 |         local_refs = get_local_heads();
      |                      ^
dot graph target loc end

dot graph target basicblock start from main basic block 17dot graph target basicblock en1

dot graph stmt start dst_peer_29 = _74;
_1 = get_local_heads ();
dot graph stmt end

dot graph stmt start dst_peer_29 = _74;
./benchmarks/git/double_free_4/git_df_4.c:186:36: warning: use location
  186 |                         dst_peer = make_linked_ref(dst_name, dst_tail);
      |                                    ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

_31 = &dst_peer_29->new_sha1;
./benchmarks/git/double_free_4/git_df_4.c:187:41: warning: use location
  187 |                         hashcpy(dst_peer->new_sha1, src->new_sha1);
      |                                         ^
dot graph target loc start # .MEM_15 = VDEF <.MEM_14(D)>
_1 = get_local_heads ();
./benchmarks/git/double_free_4/git_df_4.c:215:22: warning: use location
  215 |         local_refs = get_local_heads();
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 17: _31 = &dst_peer_29->new_sha1;
./benchmarks/git/double_free_4/git_df_4.c:187:41: warning: use location
  187 |                         hashcpy(dst_peer->new_sha1, src->new_sha1);
      |                                         ^
dot graph target line desend

dot graph target loc start # .MEM_15 = VDEF <.MEM_14(D)>
_1 = get_local_heads ();
./benchmarks/git/double_free_4/git_df_4.c:215:22: warning: use location
  215 |         local_refs = get_local_heads();
      |                      ^
dot graph target loc end

dot graph target basicblock start from main basic block 17dot graph target basicblock en1

dot graph stmt start _31 = &dst_peer_29->new_sha1;
_1 = get_local_heads ();
dot graph stmt end

dot graph stmt start _31 = &dst_peer_29->new_sha1;
./benchmarks/git/double_free_4/git_df_4.c:187:41: warning: use location
  187 |                         hashcpy(dst_peer->new_sha1, src->new_sha1);
      |                                         ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

_52 = &ref_50->name;
./benchmarks/git/double_free_4/git_df_4.c:92:16: warning: use location
   92 |         memcpy(ref->name + prefixlen, name, len);
      |                ^
dot graph target loc start # .MEM_15 = VDEF <.MEM_14(D)>
_1 = get_local_heads ();
./benchmarks/git/double_free_4/git_df_4.c:215:22: warning: use location
  215 |         local_refs = get_local_heads();
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 14: _52 = &ref_50->name;
./benchmarks/git/double_free_4/git_df_4.c:92:16: warning: use location
   92 |         memcpy(ref->name + prefixlen, name, len);
      |                ^
dot graph target line desend

dot graph target loc start # .MEM_15 = VDEF <.MEM_14(D)>
_1 = get_local_heads ();
./benchmarks/git/double_free_4/git_df_4.c:215:22: warning: use location
  215 |         local_refs = get_local_heads();
      |                      ^
dot graph target loc end

dot graph target basicblock start from main basic block 14dot graph target basicblock en1

dot graph stmt start _52 = &ref_50->name;
_1 = get_local_heads ();
dot graph stmt end

dot graph stmt start _52 = &ref_50->name;
./benchmarks/git/double_free_4/git_df_4.c:92:16: warning: use location
   92 |         memcpy(ref->name + prefixlen, name, len);
      |                ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

_53 = _52;
./benchmarks/git/double_free_4/git_df_4.c:92:9: warning: use location
   92 |         memcpy(ref->name + prefixlen, name, len);
      |         ^
dot graph target loc start # .MEM_15 = VDEF <.MEM_14(D)>
_1 = get_local_heads ();
./benchmarks/git/double_free_4/git_df_4.c:215:22: warning: use location
  215 |         local_refs = get_local_heads();
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 14: _53 = _52;
./benchmarks/git/double_free_4/git_df_4.c:92:9: warning: use location
   92 |         memcpy(ref->name + prefixlen, name, len);
      |         ^
dot graph target line desend

dot graph target loc start # .MEM_15 = VDEF <.MEM_14(D)>
_1 = get_local_heads ();
./benchmarks/git/double_free_4/git_df_4.c:215:22: warning: use location
  215 |         local_refs = get_local_heads();
      |                      ^
dot graph target loc end

dot graph target basicblock start from main basic block 14dot graph target basicblock en1

dot graph stmt start _53 = _52;
_1 = get_local_heads ();
dot graph stmt end

dot graph stmt start _53 = _52;
./benchmarks/git/double_free_4/git_df_4.c:92:9: warning: use location
   92 |         memcpy(ref->name + prefixlen, name, len);
      |         ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

memcpy (_53, dst_name_22, len_47);
./benchmarks/git/double_free_4/git_df_4.c:92:9: warning: use location
dot graph target loc start # .MEM_15 = VDEF <.MEM_14(D)>
_1 = get_local_heads ();
./benchmarks/git/double_free_4/git_df_4.c:215:22: warning: use location
  215 |         local_refs = get_local_heads();
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 14: memcpy (_53, dst_name_22, len_47);
./benchmarks/git/double_free_4/git_df_4.c:92:9: warning: use location
   92 |         memcpy(ref->name + prefixlen, name, len);
      |         ^
dot graph target line desend

dot graph target loc start # .MEM_15 = VDEF <.MEM_14(D)>
_1 = get_local_heads ();
./benchmarks/git/double_free_4/git_df_4.c:215:22: warning: use location
  215 |         local_refs = get_local_heads();
      |                      ^
dot graph target loc end

dot graph target basicblock start from main basic block 14dot graph target basicblock en1

dot graph stmt start memcpy (_53, dst_name_22, len_47);
_1 = get_local_heads ();
dot graph stmt end

dot graph stmt start memcpy (_53, dst_name_22, len_47);
./benchmarks/git/double_free_4/git_df_4.c:92:9: warning: use location
   92 |         memcpy(ref->name + prefixlen, name, len);
      |         ^
dot graph stmt end

this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:6 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

_51 = &ref_50->name;
./benchmarks/git/double_free_4/git_df_4.c:91:19: warning: use location
   91 |         memcpy(ref->name, prefix, prefixlen);
      |                   ^
dot graph target loc start # .MEM_15 = VDEF <.MEM_14(D)>
_1 = get_local_heads ();
./benchmarks/git/double_free_4/git_df_4.c:215:22: warning: use location
  215 |         local_refs = get_local_heads();
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 14: _51 = &ref_50->name;
./benchmarks/git/double_free_4/git_df_4.c:91:19: warning: use location
   91 |         memcpy(ref->name, prefix, prefixlen);
      |                   ^
dot graph target line desend

dot graph target loc start # .MEM_15 = VDEF <.MEM_14(D)>
_1 = get_local_heads ();
./benchmarks/git/double_free_4/git_df_4.c:215:22: warning: use location
  215 |         local_refs = get_local_heads();
      |                      ^
dot graph target loc end

dot graph target basicblock start from main basic block 14dot graph target basicblock en1

dot graph stmt start _51 = &ref_50->name;
_1 = get_local_heads ();
dot graph stmt end

dot graph stmt start _51 = &ref_50->name;
./benchmarks/git/double_free_4/git_df_4.c:91:19: warning: use location
   91 |         memcpy(ref->name, prefix, prefixlen);
      |                   ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc start # .MEM_15 = VDEF <.MEM_14(D)>
_1 = get_local_heads ();
./benchmarks/git/double_free_4/git_df_4.c:215:22: warning: use location
  215 |         local_refs = get_local_heads();
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 5: _37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target line desend

dot graph target loc start # .MEM_15 = VDEF <.MEM_14(D)>
_1 = get_local_heads ();
./benchmarks/git/double_free_4/git_df_4.c:215:22: warning: use location
  215 |         local_refs = get_local_heads();
      |                      ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start _37 = strcmp (_36, dst_name_22);
_1 = get_local_heads ();
dot graph stmt end

dot graph stmt start _37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph stmt end

this stmt call this function :strcmp
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:6 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

if (_37 == 0)
./benchmarks/git/double_free_4/git_df_4.c:81:12: warning: use location
   81 |         if (!strcmp(list->name, name))
      |            ^
dot graph target loc start # .MEM_15 = VDEF <.MEM_14(D)>
_1 = get_local_heads ();
./benchmarks/git/double_free_4/git_df_4.c:215:22: warning: use location
  215 |         local_refs = get_local_heads();
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 5: if (_37 == 0)
./benchmarks/git/double_free_4/git_df_4.c:81:12: warning: use location
   81 |         if (!strcmp(list->name, name))
      |            ^
dot graph target line desend

dot graph target loc start # .MEM_15 = VDEF <.MEM_14(D)>
_1 = get_local_heads ();
./benchmarks/git/double_free_4/git_df_4.c:215:22: warning: use location
  215 |         local_refs = get_local_heads();
      |                      ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start if (_37 == 0)
_1 = get_local_heads ();
dot graph stmt end

dot graph stmt start if (_37 == 0)
./benchmarks/git/double_free_4/git_df_4.c:81:12: warning: use location
   81 |         if (!strcmp(list->name, name))
      |            ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

free (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:192:17: warning: use location
  192 |                 free(dst_name);
      |                 ^
dot graph target loc start # .MEM_15 = VDEF <.MEM_14(D)>
_1 = get_local_heads ();
./benchmarks/git/double_free_4/git_df_4.c:215:22: warning: use location
  215 |         local_refs = get_local_heads();
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 19: free (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:192:17: warning: use location
  192 |                 free(dst_name);
      |                 ^
dot graph target line desend

dot graph target loc start # .MEM_15 = VDEF <.MEM_14(D)>
_1 = get_local_heads ();
./benchmarks/git/double_free_4/git_df_4.c:215:22: warning: use location
  215 |         local_refs = get_local_heads();
      |                      ^
dot graph target loc end

dot graph target basicblock start from main basic block 19dot graph target basicblock en1

dot graph stmt start free (dst_name_22);
_1 = get_local_heads ();
dot graph stmt end

dot graph stmt start free (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:192:17: warning: use location
  192 |                 free(dst_name);
      |                 ^
dot graph stmt end

dot graph target color descgreendot graph target color desend

this stmt call this function :free

 ================== find free stmt ================== 
free (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:192:17: warning: use location
[40;32m    HAS FREE STMT count:7 name:free [0m

 ================== find free stmt ================== 
# .MEM_15 = VDEF <.MEM_14(D)>
_1 = get_local_heads ();
dot graph entry main
dot graph target entry end

_1 = get_local_heads ();
./benchmarks/git/double_free_4/git_df_4.c:215:22: warning: use location
  215 |         local_refs = get_local_heads();
      |                      ^
dot graph target loc start # .MEM_15 = VDEF <.MEM_14(D)>
_1 = get_local_heads ();
./benchmarks/git/double_free_4/git_df_4.c:215:22: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 2: _1 = get_local_heads ();
./benchmarks/git/double_free_4/git_df_4.c:215:22: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_15 = VDEF <.MEM_14(D)>
_1 = get_local_heads ();
./benchmarks/git/double_free_4/git_df_4.c:215:22: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 2dot graph target basicblock en1

dot graph stmt start _1 = get_local_heads ();
_1 = get_local_heads ();
dot graph stmt end

dot graph stmt start _1 = get_local_heads ();
./benchmarks/git/double_free_4/git_df_4.c:215:22: warning: use location
dot graph stmt end

this stmt call this function :get_local_heads
trace fucntion name:get_local_heads 

 ================== trace ================== 
trace fucntion free:7 
dot graph target basicblock start from main basic block 28dot graph target basicblock en1

dot graph arrowsubgraph cluster_512468086 dot graph subgraph  ref_56 = PHI <local_refs_12(26), next_57(27)>
local_refs_12 = (struct ref *) _2;
dot graph subgrapend

dot graph target basicblock start from main basic block 28dot graph target basicblock en1

dot graph arrowsubgraph cluster_2115459430 dot graph subgraph  if (ref_56 != 0B)
ref_56 = PHI <local_refs_12(26), next_57(27)>
dot graph subgrapend


 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f89e075e5e8
    type <integer_type 0x7f89e076b5e8 int public SI
        size <integer_cst 0x7f89e0756df8 constant 32>
        unit-size <integer_cst 0x7f89e0756e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f89e076b5e8 precision:32 min <integer_cst 0x7f89e0756db0 -2147483648> max <integer_cst 0x7f89e0756dc8 2147483647>
        pointer_to_this <pointer_type 0x7f89e07729d8>>
   
    def_stmt _1 = get_local_heads ();
    version:1>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_59>
free (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:192:17: warning: use location
  192 |                 free(dst_name);
      |                 ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_78 = VDEF <.MEM_59>
free (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:192:17: warning: free in this location

===== possiable asias =====
ref_56 = PHI <local_refs_12(26), next_57(27)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_59>
free (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:192:17: warning: free in this location

===== possiable asias =====
ref_56 = PHI <local_refs_12(26), next_57(27)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_59>
free (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:192:17: warning: free in this location

===== possiable asias =====
if (ref_56 != 0B)
./benchmarks/git/double_free_4/git_df_4.c:71:16: warning: use location
   71 |         while (ref) {
      |                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_59>
free (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:192:17: warning: free in this location
  192 |                 free(dst_name);
      |                 ^

===== possiable asias =====
if (ref_56 != 0B)
./benchmarks/git/double_free_4/git_df_4.c:71:16: warning: use location
   71 |         while (ref) {
      |                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_59>
free (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:192:17: warning: free in this location
  192 |                 free(dst_name);
      |                 ^

===== possiable asias =====
# .MEM_66 = VDEF <.MEM_63>
free_ref (ref_56);
./benchmarks/git/double_free_4/git_df_4.c:73:17: warning: use location
   73 |                 free_ref(ref);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_59>
free (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:192:17: warning: free in this location
  192 |                 free(dst_name);
      |                 ^

===== possiable asias =====
# .MEM_66 = VDEF <.MEM_63>
free_ref (ref_56);
./benchmarks/git/double_free_4/git_df_4.c:73:17: warning: use location
   73 |                 free_ref(ref);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_59>
free (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:192:17: warning: free in this location
  192 |                 free(dst_name);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_63>
next_57 = ref_56->next;
./benchmarks/git/double_free_4/git_df_4.c:72:22: warning: use location
   72 |                 next = ref->next;
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_59>
free (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:192:17: warning: free in this location
  192 |                 free(dst_name);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_63>
next_57 = ref_56->next;
./benchmarks/git/double_free_4/git_df_4.c:72:22: warning: use location
   72 |                 next = ref->next;
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_66 = VDEF <.MEM_63>
free_ref (ref_56);
./benchmarks/git/double_free_4/git_df_4.c:73:17: warning: free in this location
   73 |                 free_ref(ref);
      |                 ^

===== possiable asias =====
src_21 = PHI <local_refs_12(2), src_34(20)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_59>
free (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:192:17: warning: free in this location
  192 |                 free(dst_name);
      |                 ^

===== possiable asias =====
src_21 = PHI <local_refs_12(2), src_34(20)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_59>
free (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:192:17: warning: free in this location

===== possiable asias =====
src_21 = PHI <local_refs_12(2), src_34(20)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_59>
free (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:192:17: warning: free in this location

===== possiable asias =====
# VUSE <.MEM_60>
src_34 = src_21->next;
./benchmarks/git/double_free_4/git_df_4.c:163:26: warning: use location
  163 |         for ( ; src; src = src->next) {
      |                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_59>
free (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:192:17: warning: free in this location
  192 |                 free(dst_name);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_60>
src_34 = src_21->next;
./benchmarks/git/double_free_4/git_df_4.c:163:26: warning: use location
  163 |         for ( ; src; src = src->next) {
      |                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_66 = VDEF <.MEM_63>
free_ref (ref_56);
./benchmarks/git/double_free_4/git_df_4.c:73:17: warning: free in this location
   73 |                 free_ref(ref);
      |                 ^

===== possiable asias =====
ref_42 = PHI <ret_40(14), ref_43(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_59>
free (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:192:17: warning: free in this location
  192 |                 free(dst_name);
      |                 ^

===== possiable asias =====
ref_42 = PHI <ret_40(14), ref_43(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_59>
free (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:192:17: warning: free in this location

===== possiable asias =====
ref_42 = PHI <ret_40(14), ref_43(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:7 [0m
[40;31m  	possible double free [rigorous]:7 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:7 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f89e028e678
    type <pointer_type 0x7f89e0278c78
        type <array_type 0x7f89e0278bd0 type <integer_type 0x7f89e0276b28 char>
            BLK
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f89e026ee70>
            pointer_to_this <pointer_type 0x7f89e0278c78>>
        unsigned DI
        size <integer_cst 0x7f89e0756bb8 constant 64>
        unit-size <integer_cst 0x7f89e0756bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _36 = &list_35->name;
    version:36
    ptr-info 0x7f89e02878b8>
 <ssa_name 0x7f89e028e678
    type <pointer_type 0x7f89e0278c78
        type <array_type 0x7f89e0278bd0 type <integer_type 0x7f89e0276b28 char>
            BLK
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f89e026ee70>
            pointer_to_this <pointer_type 0x7f89e0278c78>>
        unsigned DI
        size <integer_cst 0x7f89e0756bb8 constant 64>
        unit-size <integer_cst 0x7f89e0756bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _36 = &list_35->name;
    version:36
    ptr-info 0x7f89e02878b8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f89e028e678
    type <pointer_type 0x7f89e0278c78
        type <array_type 0x7f89e0278bd0 type <integer_type 0x7f89e0276b28 char>
            BLK
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f89e026ee70>
            pointer_to_this <pointer_type 0x7f89e0278c78>>
        unsigned DI
        size <integer_cst 0x7f89e0756bb8 constant 64>
        unit-size <integer_cst 0x7f89e0756bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _36 = &list_35->name;
    version:36
    ptr-info 0x7f89e02878b8>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
dot graph entry main
dot graph target entry end

_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 5: _37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start _37 = strcmp (_36, dst_name_22);
_37 = strcmp (_36, dst_name_22);
dot graph stmt end

dot graph stmt start _37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
dot graph stmt end

this stmt call this function :strcmp
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

if (_37 == 0)
./benchmarks/git/double_free_4/git_df_4.c:81:12: warning: use location
   81 |         if (!strcmp(list->name, name))
      |            ^
dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc en1

dot graph target line desc form basic block 5: if (_37 == 0)
./benchmarks/git/double_free_4/git_df_4.c:81:12: warning: use location
   81 |         if (!strcmp(list->name, name))
      |            ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start if (_37 == 0)
_37 = strcmp (_36, dst_name_22);
dot graph stmt end

dot graph stmt start if (_37 == 0)
./benchmarks/git/double_free_4/git_df_4.c:81:12: warning: use location
   81 |         if (!strcmp(list->name, name))
      |            ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

len_47 = strlen (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:89:22: warning: use location
   89 |         size_t len = strlen(name);
      |                      ^
dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc en1

dot graph target line desc form basic block 14: len_47 = strlen (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:89:22: warning: use location
   89 |         size_t len = strlen(name);
      |                      ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc end

dot graph target basicblock start from main basic block 14dot graph target basicblock en1

dot graph stmt start len_47 = strlen (dst_name_22);
_37 = strcmp (_36, dst_name_22);
dot graph stmt end

dot graph stmt start len_47 = strlen (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:89:22: warning: use location
   89 |         size_t len = strlen(name);
      |                      ^
dot graph stmt end

this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

_48 = len_47;
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
   90 |         struct ref *ref = xcalloc(1, sizeof(struct ref) + prefixlen + len + 1);
      |                           ^
dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc en1

dot graph target line desc form basic block 14: _48 = len_47;
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
   90 |         struct ref *ref = xcalloc(1, sizeof(struct ref) + prefixlen + len + 1);
      |                           ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc end

dot graph target basicblock start from main basic block 14dot graph target basicblock en1

dot graph stmt start _48 = len_47;
_37 = strcmp (_36, dst_name_22);
dot graph stmt end

dot graph stmt start _48 = len_47;
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
   90 |         struct ref *ref = xcalloc(1, sizeof(struct ref) + prefixlen + len + 1);
      |                           ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

_49 = _48 + 81;
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc en1

dot graph target line desc form basic block 14: _49 = _48 + 81;
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
   90 |         struct ref *ref = xcalloc(1, sizeof(struct ref) + prefixlen + len + 1);
      |                           ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc end

dot graph target basicblock start from main basic block 14dot graph target basicblock en1

dot graph stmt start _49 = _48 + 81;
_37 = strcmp (_36, dst_name_22);
dot graph stmt end

dot graph stmt start _49 = _48 + 81;
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
   90 |         struct ref *ref = xcalloc(1, sizeof(struct ref) + prefixlen + len + 1);
      |                           ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

ref_50 = calloc (1, _49);
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc en1

dot graph target line desc form basic block 14: ref_50 = calloc (1, _49);
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
   90 |         struct ref *ref = xcalloc(1, sizeof(struct ref) + prefixlen + len + 1);
      |                           ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc end

dot graph target basicblock start from main basic block 14dot graph target basicblock en1

dot graph stmt start ref_50 = calloc (1, _49);
_37 = strcmp (_36, dst_name_22);
dot graph stmt end

dot graph stmt start ref_50 = calloc (1, _49);
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
   90 |         struct ref *ref = xcalloc(1, sizeof(struct ref) + prefixlen + len + 1);
      |                           ^
dot graph stmt end

this stmt call this function :calloc

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

_70 = ref_50;
lto1: warning: use location
dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc en1

dot graph target line desc form basic block 14: _70 = ref_50;
lto1: warning: use location
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 14dot graph target basicblock en1

dot graph stmt start _70 = ref_50;
_37 = strcmp (_36, dst_name_22);
dot graph stmt end

dot graph stmt start _70 = ref_50;
lto1: warning: use location
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

_46 = _70;
./benchmarks/git/double_free_4/git_df_4.c:98:16: warning: use location
   98 |         return alloc_ref_with_prefix("", 0, name);
      |                ^
dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc en1

dot graph target line desc form basic block 14: _46 = _70;
./benchmarks/git/double_free_4/git_df_4.c:98:16: warning: use location
   98 |         return alloc_ref_with_prefix("", 0, name);
      |                ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc end

dot graph target basicblock start from main basic block 14dot graph target basicblock en1

dot graph stmt start _46 = _70;
_37 = strcmp (_36, dst_name_22);
dot graph stmt end

dot graph stmt start _46 = _70;
./benchmarks/git/double_free_4/git_df_4.c:98:16: warning: use location
   98 |         return alloc_ref_with_prefix("", 0, name);
      |                ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

_71 = _46;
lto1: warning: use location
dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc en1

dot graph target line desc form basic block 14: _71 = _46;
lto1: warning: use location
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 14dot graph target basicblock en1

dot graph stmt start _71 = _46;
_37 = strcmp (_36, dst_name_22);
dot graph stmt end

dot graph stmt start _71 = _46;
lto1: warning: use location
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

ret_40 = _71;
./benchmarks/git/double_free_4/git_df_4.c:144:27: warning: use location
  144 |         struct ref *ret = alloc_ref(name);
      |                           ^
dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc en1

dot graph target line desc form basic block 14: ret_40 = _71;
./benchmarks/git/double_free_4/git_df_4.c:144:27: warning: use location
  144 |         struct ref *ret = alloc_ref(name);
      |                           ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc end

dot graph target basicblock start from main basic block 14dot graph target basicblock en1

dot graph stmt start ret_40 = _71;
_37 = strcmp (_36, dst_name_22);
dot graph stmt end

dot graph stmt start ret_40 = _71;
./benchmarks/git/double_free_4/git_df_4.c:144:27: warning: use location
  144 |         struct ref *ret = alloc_ref(name);
      |                           ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

ref_42 = PHI <ret_40(14), ref_43(15)>
lto1: warning: use location
dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc en1

dot graph target line desc form basic block 16: ref_42 = PHI <ret_40(14), ref_43(15)>
lto1: warning: use location
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 16dot graph target basicblock en1

dot graph stmt start ref_42 = PHI <ret_40(14), ref_43(15)>
_37 = strcmp (_36, dst_name_22);
dot graph stmt end

dot graph stmt start ref_42 = PHI <ret_40(14), ref_43(15)>
lto1: warning: use location
dot graph stmt end

this stmt have mutiple branch ---calloc-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

_45 = &ref_42->next;
./benchmarks/git/double_free_4/git_df_4.c:139:17: warning: use location
  139 |         *tail = &ref->next;
      |                 ^
dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc en1

dot graph target line desc form basic block 17: _45 = &ref_42->next;
./benchmarks/git/double_free_4/git_df_4.c:139:17: warning: use location
  139 |         *tail = &ref->next;
      |                 ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc end

dot graph target basicblock start from main basic block 17dot graph target basicblock en1

dot graph stmt start _45 = &ref_42->next;
_37 = strcmp (_36, dst_name_22);
dot graph stmt end

dot graph stmt start _45 = &ref_42->next;
./benchmarks/git/double_free_4/git_df_4.c:139:17: warning: use location
  139 |         *tail = &ref->next;
      |                 ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

remote_tail = _45;
./benchmarks/git/double_free_4/git_df_4.c:139:15: warning: use location
  139 |         *tail = &ref->next;
      |               ^
dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc en1

dot graph target line desc form basic block 17: remote_tail = _45;
./benchmarks/git/double_free_4/git_df_4.c:139:15: warning: use location
  139 |         *tail = &ref->next;
      |               ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc end

dot graph target basicblock start from main basic block 17dot graph target basicblock en1

dot graph stmt start remote_tail = _45;
_37 = strcmp (_36, dst_name_22);
dot graph stmt end

dot graph stmt start remote_tail = _45;
./benchmarks/git/double_free_4/git_df_4.c:139:15: warning: use location
  139 |         *tail = &ref->next;
      |               ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

_41 = remote_tail;
./benchmarks/git/double_free_4/git_df_4.c:136:10: warning: use location
  136 |         **tail = ref;
      |          ^
dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc en1

dot graph target line desc form basic block 14: _41 = remote_tail;
./benchmarks/git/double_free_4/git_df_4.c:136:10: warning: use location
  136 |         **tail = ref;
      |          ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc end

dot graph target basicblock start from main basic block 14dot graph target basicblock en1

dot graph stmt start _41 = remote_tail;
_37 = strcmp (_36, dst_name_22);
dot graph stmt end

dot graph stmt start _41 = remote_tail;
./benchmarks/git/double_free_4/git_df_4.c:136:10: warning: use location
  136 |         **tail = ref;
      |          ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

*_41 = ret_40;
./benchmarks/git/double_free_4/git_df_4.c:136:16: warning: use location
  136 |         **tail = ref;
      |                ^
dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc en1

dot graph target line desc form basic block 14: *_41 = ret_40;
./benchmarks/git/double_free_4/git_df_4.c:136:16: warning: use location
  136 |         **tail = ref;
      |                ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc end

dot graph target basicblock start from main basic block 14dot graph target basicblock en1

dot graph stmt start *_41 = ret_40;
_37 = strcmp (_36, dst_name_22);
dot graph stmt end

dot graph stmt start *_41 = ret_40;
./benchmarks/git/double_free_4/git_df_4.c:136:16: warning: use location
  136 |         **tail = ref;
      |                ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

_44 = ref_42->next;
./benchmarks/git/double_free_4/git_df_4.c:137:19: warning: use location
  137 |         while (ref->next)
      |                   ^
dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc en1

dot graph target line desc form basic block 16: _44 = ref_42->next;
./benchmarks/git/double_free_4/git_df_4.c:137:19: warning: use location
  137 |         while (ref->next)
      |                   ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc end

dot graph target basicblock start from main basic block 16dot graph target basicblock en1

dot graph stmt start _44 = ref_42->next;
_37 = strcmp (_36, dst_name_22);
dot graph stmt end

dot graph stmt start _44 = ref_42->next;
./benchmarks/git/double_free_4/git_df_4.c:137:19: warning: use location
  137 |         while (ref->next)
      |                   ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

if (_44 != 0B)
./benchmarks/git/double_free_4/git_df_4.c:137:16: warning: use location
  137 |         while (ref->next)
      |                ^
dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc en1

dot graph target line desc form basic block 16: if (_44 != 0B)
./benchmarks/git/double_free_4/git_df_4.c:137:16: warning: use location
  137 |         while (ref->next)
      |                ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc end

dot graph target basicblock start from main basic block 16dot graph target basicblock en1

dot graph stmt start if (_44 != 0B)
_37 = strcmp (_36, dst_name_22);
dot graph stmt end

dot graph stmt start if (_44 != 0B)
./benchmarks/git/double_free_4/git_df_4.c:137:16: warning: use location
  137 |         while (ref->next)
      |                ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

ref_43 = ref_42->next;
./benchmarks/git/double_free_4/git_df_4.c:138:21: warning: use location
  138 |                 ref = ref->next;
      |                     ^
dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc en1

dot graph target line desc form basic block 15: ref_43 = ref_42->next;
./benchmarks/git/double_free_4/git_df_4.c:138:21: warning: use location
  138 |                 ref = ref->next;
      |                     ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc end

dot graph target basicblock start from main basic block 15dot graph target basicblock en1

dot graph stmt start ref_43 = ref_42->next;
_37 = strcmp (_36, dst_name_22);
dot graph stmt end

dot graph stmt start ref_43 = ref_42->next;
./benchmarks/git/double_free_4/git_df_4.c:138:21: warning: use location
  138 |                 ref = ref->next;
      |                     ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

_74 = ret_40;
lto1: warning: use location
dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc en1

dot graph target line desc form basic block 17: _74 = ret_40;
lto1: warning: use location
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 17dot graph target basicblock en1

dot graph stmt start _74 = ret_40;
_37 = strcmp (_36, dst_name_22);
dot graph stmt end

dot graph stmt start _74 = ret_40;
lto1: warning: use location
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

dst_peer_29 = _74;
./benchmarks/git/double_free_4/git_df_4.c:186:36: warning: use location
  186 |                         dst_peer = make_linked_ref(dst_name, dst_tail);
      |                                    ^
dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc en1

dot graph target line desc form basic block 17: dst_peer_29 = _74;
./benchmarks/git/double_free_4/git_df_4.c:186:36: warning: use location
  186 |                         dst_peer = make_linked_ref(dst_name, dst_tail);
      |                                    ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc end

dot graph target basicblock start from main basic block 17dot graph target basicblock en1

dot graph stmt start dst_peer_29 = _74;
_37 = strcmp (_36, dst_name_22);
dot graph stmt end

dot graph stmt start dst_peer_29 = _74;
./benchmarks/git/double_free_4/git_df_4.c:186:36: warning: use location
  186 |                         dst_peer = make_linked_ref(dst_name, dst_tail);
      |                                    ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

dst_peer_32 = PHI <dst_peer_24(9), dst_peer_29(17)>
lto1: warning: use location
dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc en1

dot graph target line desc form basic block 18: dst_peer_32 = PHI <dst_peer_24(9), dst_peer_29(17)>
lto1: warning: use location
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 18dot graph target basicblock en1

dot graph stmt start dst_peer_32 = PHI <dst_peer_24(9), dst_peer_29(17)>
_37 = strcmp (_36, dst_name_22);
dot graph stmt end

dot graph stmt start dst_peer_32 = PHI <dst_peer_24(9), dst_peer_29(17)>
lto1: warning: use location
dot graph stmt end

this stmt have mutiple branch ---calloc-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

dst_peer_32->force = _33;
./benchmarks/git/double_free_4/git_df_4.c:190:33: warning: use location
  190 |                 dst_peer->force = pat->force;
      |                                 ^
dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc en1

dot graph target line desc form basic block 18: dst_peer_32->force = _33;
./benchmarks/git/double_free_4/git_df_4.c:190:33: warning: use location
  190 |                 dst_peer->force = pat->force;
      |                                 ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc end

dot graph target basicblock start from main basic block 18dot graph target basicblock en1

dot graph stmt start dst_peer_32->force = _33;
_37 = strcmp (_36, dst_name_22);
dot graph stmt end

dot graph stmt start dst_peer_32->force = _33;
./benchmarks/git/double_free_4/git_df_4.c:190:33: warning: use location
  190 |                 dst_peer->force = pat->force;
      |                                 ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

dst_peer_32->force = _33;
./benchmarks/git/double_free_4/git_df_4.c:190:33: warning: use location
dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc en1

dot graph target line desc form basic block 18: dst_peer_32->force = _33;
./benchmarks/git/double_free_4/git_df_4.c:190:33: warning: use location
  190 |                 dst_peer->force = pat->force;
      |                                 ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc end

dot graph target basicblock start from main basic block 18dot graph target basicblock en1

dot graph stmt start dst_peer_32->force = _33;
_37 = strcmp (_36, dst_name_22);
dot graph stmt end

dot graph stmt start dst_peer_32->force = _33;
./benchmarks/git/double_free_4/git_df_4.c:190:33: warning: use location
  190 |                 dst_peer->force = pat->force;
      |                                 ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

_33 = MEM[(const struct refspec *)0B].force;
./benchmarks/git/double_free_4/git_df_4.c:190:38: warning: use location
  190 |                 dst_peer->force = pat->force;
      |                                      ^
dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc en1

dot graph target line desc form basic block 18: _33 = MEM[(const struct refspec *)0B].force;
./benchmarks/git/double_free_4/git_df_4.c:190:38: warning: use location
  190 |                 dst_peer->force = pat->force;
      |                                      ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc end

dot graph target basicblock start from main basic block 18dot graph target basicblock en1

dot graph stmt start _33 = MEM[(const struct refspec *)0B].force;
_37 = strcmp (_36, dst_name_22);
dot graph stmt end

dot graph stmt start _33 = MEM[(const struct refspec *)0B].force;
./benchmarks/git/double_free_4/git_df_4.c:190:38: warning: use location
  190 |                 dst_peer->force = pat->force;
      |                                      ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

dst_peer_32->peer_ref = src_21;
./benchmarks/git/double_free_4/git_df_4.c:189:36: warning: use location
  189 |                 dst_peer->peer_ref = src;
      |                                    ^
dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc en1

dot graph target line desc form basic block 18: dst_peer_32->peer_ref = src_21;
./benchmarks/git/double_free_4/git_df_4.c:189:36: warning: use location
  189 |                 dst_peer->peer_ref = src;
      |                                    ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc end

dot graph target basicblock start from main basic block 18dot graph target basicblock en1

dot graph stmt start dst_peer_32->peer_ref = src_21;
_37 = strcmp (_36, dst_name_22);
dot graph stmt end

dot graph stmt start dst_peer_32->peer_ref = src_21;
./benchmarks/git/double_free_4/git_df_4.c:189:36: warning: use location
  189 |                 dst_peer->peer_ref = src;
      |                                    ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

src_34 = src_21->next;
./benchmarks/git/double_free_4/git_df_4.c:163:26: warning: use location
  163 |         for ( ; src; src = src->next) {
      |                          ^
dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc en1

dot graph target line desc form basic block 20: src_34 = src_21->next;
./benchmarks/git/double_free_4/git_df_4.c:163:26: warning: use location
  163 |         for ( ; src; src = src->next) {
      |                          ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc end

dot graph target basicblock start from main basic block 20dot graph target basicblock en1

dot graph stmt start src_34 = src_21->next;
_37 = strcmp (_36, dst_name_22);
dot graph stmt end

dot graph stmt start src_34 = src_21->next;
./benchmarks/git/double_free_4/git_df_4.c:163:26: warning: use location
  163 |         for ( ; src; src = src->next) {
      |                          ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

_30 = &src_21->new_sha1;
./benchmarks/git/double_free_4/git_df_4.c:187:56: warning: use location
  187 |                         hashcpy(dst_peer->new_sha1, src->new_sha1);
      |                                                        ^
dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc en1

dot graph target line desc form basic block 17: _30 = &src_21->new_sha1;
./benchmarks/git/double_free_4/git_df_4.c:187:56: warning: use location
  187 |                         hashcpy(dst_peer->new_sha1, src->new_sha1);
      |                                                        ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc end

dot graph target basicblock start from main basic block 17dot graph target basicblock en1

dot graph stmt start _30 = &src_21->new_sha1;
_37 = strcmp (_36, dst_name_22);
dot graph stmt end

dot graph stmt start _30 = &src_21->new_sha1;
./benchmarks/git/double_free_4/git_df_4.c:187:56: warning: use location
  187 |                         hashcpy(dst_peer->new_sha1, src->new_sha1);
      |                                                        ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

hashcpy (_31, _30);
./benchmarks/git/double_free_4/git_df_4.c:187:25: warning: use location
  187 |                         hashcpy(dst_peer->new_sha1, src->new_sha1);
      |                         ^
dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc en1

dot graph target line desc form basic block 17: hashcpy (_31, _30);
./benchmarks/git/double_free_4/git_df_4.c:187:25: warning: use location
  187 |                         hashcpy(dst_peer->new_sha1, src->new_sha1);
      |                         ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc end

dot graph target basicblock start from main basic block 17dot graph target basicblock en1

dot graph stmt start hashcpy (_31, _30);
_37 = strcmp (_36, dst_name_22);
dot graph stmt end

dot graph stmt start hashcpy (_31, _30);
./benchmarks/git/double_free_4/git_df_4.c:187:25: warning: use location
  187 |                         hashcpy(dst_peer->new_sha1, src->new_sha1);
      |                         ^
dot graph stmt end

this stmt call this function :hashcpy
trace fucntion name:hashcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

_23 = src_21->peer_ref;
./benchmarks/git/double_free_4/git_df_4.c:167:24: warning: use location
  167 |                 if (src->peer_ref)
      |                        ^
dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc en1

dot graph target line desc form basic block 3: _23 = src_21->peer_ref;
./benchmarks/git/double_free_4/git_df_4.c:167:24: warning: use location
  167 |                 if (src->peer_ref)
      |                        ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc end

dot graph target basicblock start from main basic block 3dot graph target basicblock en1

dot graph stmt start _23 = src_21->peer_ref;
_37 = strcmp (_36, dst_name_22);
dot graph stmt end

dot graph stmt start _23 = src_21->peer_ref;
./benchmarks/git/double_free_4/git_df_4.c:167:24: warning: use location
  167 |                 if (src->peer_ref)
      |                        ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

dst_name_22 = &src_21->name;
./benchmarks/git/double_free_4/git_df_4.c:166:23: warning: use location
  166 |                 char *dst_name = src->name;
      |                       ^
dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc en1

dot graph target line desc form basic block 3: dst_name_22 = &src_21->name;
./benchmarks/git/double_free_4/git_df_4.c:166:23: warning: use location
  166 |                 char *dst_name = src->name;
      |                       ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc end

dot graph target basicblock start from main basic block 3dot graph target basicblock en1

dot graph stmt start dst_name_22 = &src_21->name;
_37 = strcmp (_36, dst_name_22);
dot graph stmt end

dot graph stmt start dst_name_22 = &src_21->name;
./benchmarks/git/double_free_4/git_df_4.c:166:23: warning: use location
  166 |                 char *dst_name = src->name;
      |                       ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

memcpy (_53, dst_name_22, len_47);
./benchmarks/git/double_free_4/git_df_4.c:92:9: warning: use location
   92 |         memcpy(ref->name + prefixlen, name, len);
      |         ^
dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc en1

dot graph target line desc form basic block 14: memcpy (_53, dst_name_22, len_47);
./benchmarks/git/double_free_4/git_df_4.c:92:9: warning: use location
   92 |         memcpy(ref->name + prefixlen, name, len);
      |         ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc end

dot graph target basicblock start from main basic block 14dot graph target basicblock en1

dot graph stmt start memcpy (_53, dst_name_22, len_47);
_37 = strcmp (_36, dst_name_22);
dot graph stmt end

dot graph stmt start memcpy (_53, dst_name_22, len_47);
./benchmarks/git/double_free_4/git_df_4.c:92:9: warning: use location
   92 |         memcpy(ref->name + prefixlen, name, len);
      |         ^
dot graph stmt end

this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

free (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:192:17: warning: use location
  192 |                 free(dst_name);
      |                 ^
dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc en1

dot graph target line desc form basic block 19: free (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:192:17: warning: use location
  192 |                 free(dst_name);
      |                 ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc end

dot graph target basicblock start from main basic block 19dot graph target basicblock en1

dot graph stmt start free (dst_name_22);
_37 = strcmp (_36, dst_name_22);
dot graph stmt end

dot graph stmt start free (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:192:17: warning: use location
  192 |                 free(dst_name);
      |                 ^
dot graph stmt end

dot graph target color descgreendot graph target color desend

this stmt call this function :free

 ================== find free stmt ================== 
free (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:192:17: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

_31 = &dst_peer_29->new_sha1;
./benchmarks/git/double_free_4/git_df_4.c:187:41: warning: use location
  187 |                         hashcpy(dst_peer->new_sha1, src->new_sha1);
      |                                         ^
dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc en1

dot graph target line desc form basic block 17: _31 = &dst_peer_29->new_sha1;
./benchmarks/git/double_free_4/git_df_4.c:187:41: warning: use location
  187 |                         hashcpy(dst_peer->new_sha1, src->new_sha1);
      |                                         ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc end

dot graph target basicblock start from main basic block 17dot graph target basicblock en1

dot graph stmt start _31 = &dst_peer_29->new_sha1;
_37 = strcmp (_36, dst_name_22);
dot graph stmt end

dot graph stmt start _31 = &dst_peer_29->new_sha1;
./benchmarks/git/double_free_4/git_df_4.c:187:41: warning: use location
  187 |                         hashcpy(dst_peer->new_sha1, src->new_sha1);
      |                                         ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

_52 = &ref_50->name;
./benchmarks/git/double_free_4/git_df_4.c:92:16: warning: use location
   92 |         memcpy(ref->name + prefixlen, name, len);
      |                ^
dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc en1

dot graph target line desc form basic block 14: _52 = &ref_50->name;
./benchmarks/git/double_free_4/git_df_4.c:92:16: warning: use location
   92 |         memcpy(ref->name + prefixlen, name, len);
      |                ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc end

dot graph target basicblock start from main basic block 14dot graph target basicblock en1

dot graph stmt start _52 = &ref_50->name;
_37 = strcmp (_36, dst_name_22);
dot graph stmt end

dot graph stmt start _52 = &ref_50->name;
./benchmarks/git/double_free_4/git_df_4.c:92:16: warning: use location
   92 |         memcpy(ref->name + prefixlen, name, len);
      |                ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

_51 = &ref_50->name;
./benchmarks/git/double_free_4/git_df_4.c:91:19: warning: use location
   91 |         memcpy(ref->name, prefix, prefixlen);
      |                   ^
dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc en1

dot graph target line desc form basic block 14: _51 = &ref_50->name;
./benchmarks/git/double_free_4/git_df_4.c:91:19: warning: use location
   91 |         memcpy(ref->name, prefix, prefixlen);
      |                   ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc end

dot graph target basicblock start from main basic block 14dot graph target basicblock en1

dot graph stmt start _51 = &ref_50->name;
_37 = strcmp (_36, dst_name_22);
dot graph stmt end

dot graph stmt start _51 = &ref_50->name;
./benchmarks/git/double_free_4/git_df_4.c:91:19: warning: use location
   91 |         memcpy(ref->name, prefix, prefixlen);
      |                   ^
dot graph stmt end

dot graph target basicblock start from main basic block 20dot graph target basicblock en1

dot graph arrowsubgraph cluster_2020787997 dot graph subgraph  src_34 = src_21->next;
src_21 = PHI <local_refs_12(2), src_34(20)>
dot graph subgrapend


 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f89e028e678
    type <pointer_type 0x7f89e0278c78
        type <array_type 0x7f89e0278bd0 type <integer_type 0x7f89e0276b28 char>
            BLK
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f89e026ee70>
            pointer_to_this <pointer_type 0x7f89e0278c78>>
        unsigned DI
        size <integer_cst 0x7f89e0756bb8 constant 64>
        unit-size <integer_cst 0x7f89e0756bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _36 = &list_35->name;
    version:36
    ptr-info 0x7f89e02878b8>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_59>
free (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:192:17: warning: use location
  192 |                 free(dst_name);
      |                 ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_78 = VDEF <.MEM_59>
free (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:192:17: warning: free in this location

===== possiable asias =====
ref_42 = PHI <ret_40(14), ref_43(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_59>
free (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:192:17: warning: free in this location

===== possiable asias =====
ref_42 = PHI <ret_40(14), ref_43(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_59>
free (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:192:17: warning: free in this location

===== possiable asias =====
dst_peer_32 = PHI <dst_peer_24(9), dst_peer_29(17)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_59>
free (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:192:17: warning: free in this location

===== possiable asias =====
dst_peer_32 = PHI <dst_peer_24(9), dst_peer_29(17)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_59>
free (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:192:17: warning: free in this location

===== possiable asias =====
# VUSE <.MEM_60>
src_34 = src_21->next;
./benchmarks/git/double_free_4/git_df_4.c:163:26: warning: use location
  163 |         for ( ; src; src = src->next) {
      |                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_59>
free (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:192:17: warning: free in this location
  192 |                 free(dst_name);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_60>
src_34 = src_21->next;
./benchmarks/git/double_free_4/git_df_4.c:163:26: warning: use location
  163 |         for ( ; src; src = src->next) {
      |                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f89e028e090
    type <pointer_type 0x7f89e026ec78
        type <integer_type 0x7f89e026ebd0 char public QI
            size <integer_cst 0x7f89e0756ca8 constant 8>
            unit-size <integer_cst 0x7f89e0756cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f89e076b3f0 precision:8 min <integer_cst 0x7f89e0265720 -128> max <integer_cst 0x7f89e0265708 127>
            pointer_to_this <pointer_type 0x7f89e026ec78>>
        unsigned DI
        size <integer_cst 0x7f89e0756bb8 constant 64>
        unit-size <integer_cst 0x7f89e0756bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f89e0761168 ./benchmarks/git/double_free_4/git_df_4.c>
        pointer_to_this <pointer_type 0x7f89e026ed20>>
    var <var_decl 0x7f89e028a7e0 dst_name>
    def_stmt dst_name_22 = &src_21->name;
    version:22
    ptr-info 0x7f89e02877c8>
 <ssa_name 0x7f89e028e090
    type <pointer_type 0x7f89e026ec78
        type <integer_type 0x7f89e026ebd0 char public QI
            size <integer_cst 0x7f89e0756ca8 constant 8>
            unit-size <integer_cst 0x7f89e0756cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f89e076b3f0 precision:8 min <integer_cst 0x7f89e0265720 -128> max <integer_cst 0x7f89e0265708 127>
            pointer_to_this <pointer_type 0x7f89e026ec78>>
        unsigned DI
        size <integer_cst 0x7f89e0756bb8 constant 64>
        unit-size <integer_cst 0x7f89e0756bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f89e0761168 ./benchmarks/git/double_free_4/git_df_4.c>
        pointer_to_this <pointer_type 0x7f89e026ed20>>
    var <var_decl 0x7f89e028a7e0 dst_name>
    def_stmt dst_name_22 = &src_21->name;
    version:22
    ptr-info 0x7f89e02877c8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f89e028e090
    type <pointer_type 0x7f89e026ec78
        type <integer_type 0x7f89e026ebd0 char public QI
            size <integer_cst 0x7f89e0756ca8 constant 8>
            unit-size <integer_cst 0x7f89e0756cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f89e076b3f0 precision:8 min <integer_cst 0x7f89e0265720 -128> max <integer_cst 0x7f89e0265708 127>
            pointer_to_this <pointer_type 0x7f89e026ec78>>
        unsigned DI
        size <integer_cst 0x7f89e0756bb8 constant 64>
        unit-size <integer_cst 0x7f89e0756bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f89e0761168 ./benchmarks/git/double_free_4/git_df_4.c>
        pointer_to_this <pointer_type 0x7f89e026ed20>>
    var <var_decl 0x7f89e028a7e0 dst_name>
    def_stmt dst_name_22 = &src_21->name;
    version:22
    ptr-info 0x7f89e02877c8>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

len_47 = strlen (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:89:22: warning: use location
   89 |         size_t len = strlen(name);
      |                      ^
dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc en1

dot graph target line desc form basic block 14: len_47 = strlen (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:89:22: warning: use location
   89 |         size_t len = strlen(name);
      |                      ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc end

dot graph target basicblock start from main basic block 14dot graph target basicblock en1

dot graph stmt start len_47 = strlen (dst_name_22);
_37 = strcmp (_36, dst_name_22);
dot graph stmt end

dot graph stmt start len_47 = strlen (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:89:22: warning: use location
   89 |         size_t len = strlen(name);
      |                      ^
dot graph stmt end

this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

_48 = len_47;
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
   90 |         struct ref *ref = xcalloc(1, sizeof(struct ref) + prefixlen + len + 1);
      |                           ^
dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc en1

dot graph target line desc form basic block 14: _48 = len_47;
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
   90 |         struct ref *ref = xcalloc(1, sizeof(struct ref) + prefixlen + len + 1);
      |                           ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc end

dot graph target basicblock start from main basic block 14dot graph target basicblock en1

dot graph stmt start _48 = len_47;
_37 = strcmp (_36, dst_name_22);
dot graph stmt end

dot graph stmt start _48 = len_47;
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
   90 |         struct ref *ref = xcalloc(1, sizeof(struct ref) + prefixlen + len + 1);
      |                           ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

_49 = _48 + 81;
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc en1

dot graph target line desc form basic block 14: _49 = _48 + 81;
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
   90 |         struct ref *ref = xcalloc(1, sizeof(struct ref) + prefixlen + len + 1);
      |                           ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc end

dot graph target basicblock start from main basic block 14dot graph target basicblock en1

dot graph stmt start _49 = _48 + 81;
_37 = strcmp (_36, dst_name_22);
dot graph stmt end

dot graph stmt start _49 = _48 + 81;
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
   90 |         struct ref *ref = xcalloc(1, sizeof(struct ref) + prefixlen + len + 1);
      |                           ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

ref_50 = calloc (1, _49);
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc en1

dot graph target line desc form basic block 14: ref_50 = calloc (1, _49);
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
   90 |         struct ref *ref = xcalloc(1, sizeof(struct ref) + prefixlen + len + 1);
      |                           ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc end

dot graph target basicblock start from main basic block 14dot graph target basicblock en1

dot graph stmt start ref_50 = calloc (1, _49);
_37 = strcmp (_36, dst_name_22);
dot graph stmt end

dot graph stmt start ref_50 = calloc (1, _49);
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
   90 |         struct ref *ref = xcalloc(1, sizeof(struct ref) + prefixlen + len + 1);
      |                           ^
dot graph stmt end

this stmt call this function :calloc

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

_70 = ref_50;
lto1: warning: use location
dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc en1

dot graph target line desc form basic block 14: _70 = ref_50;
lto1: warning: use location
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 14dot graph target basicblock en1

dot graph stmt start _70 = ref_50;
_37 = strcmp (_36, dst_name_22);
dot graph stmt end

dot graph stmt start _70 = ref_50;
lto1: warning: use location
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

_46 = _70;
./benchmarks/git/double_free_4/git_df_4.c:98:16: warning: use location
   98 |         return alloc_ref_with_prefix("", 0, name);
      |                ^
dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc en1

dot graph target line desc form basic block 14: _46 = _70;
./benchmarks/git/double_free_4/git_df_4.c:98:16: warning: use location
   98 |         return alloc_ref_with_prefix("", 0, name);
      |                ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc end

dot graph target basicblock start from main basic block 14dot graph target basicblock en1

dot graph stmt start _46 = _70;
_37 = strcmp (_36, dst_name_22);
dot graph stmt end

dot graph stmt start _46 = _70;
./benchmarks/git/double_free_4/git_df_4.c:98:16: warning: use location
   98 |         return alloc_ref_with_prefix("", 0, name);
      |                ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

_71 = _46;
lto1: warning: use location
dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc en1

dot graph target line desc form basic block 14: _71 = _46;
lto1: warning: use location
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 14dot graph target basicblock en1

dot graph stmt start _71 = _46;
_37 = strcmp (_36, dst_name_22);
dot graph stmt end

dot graph stmt start _71 = _46;
lto1: warning: use location
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

ret_40 = _71;
./benchmarks/git/double_free_4/git_df_4.c:144:27: warning: use location
  144 |         struct ref *ret = alloc_ref(name);
      |                           ^
dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc en1

dot graph target line desc form basic block 14: ret_40 = _71;
./benchmarks/git/double_free_4/git_df_4.c:144:27: warning: use location
  144 |         struct ref *ret = alloc_ref(name);
      |                           ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc end

dot graph target basicblock start from main basic block 14dot graph target basicblock en1

dot graph stmt start ret_40 = _71;
_37 = strcmp (_36, dst_name_22);
dot graph stmt end

dot graph stmt start ret_40 = _71;
./benchmarks/git/double_free_4/git_df_4.c:144:27: warning: use location
  144 |         struct ref *ret = alloc_ref(name);
      |                           ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

ref_42 = PHI <ret_40(14), ref_43(15)>
lto1: warning: use location
dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc en1

dot graph target line desc form basic block 16: ref_42 = PHI <ret_40(14), ref_43(15)>
lto1: warning: use location
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 16dot graph target basicblock en1

dot graph stmt start ref_42 = PHI <ret_40(14), ref_43(15)>
_37 = strcmp (_36, dst_name_22);
dot graph stmt end

dot graph stmt start ref_42 = PHI <ret_40(14), ref_43(15)>
lto1: warning: use location
dot graph stmt end

this stmt have mutiple branch ---calloc-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

_45 = &ref_42->next;
./benchmarks/git/double_free_4/git_df_4.c:139:17: warning: use location
  139 |         *tail = &ref->next;
      |                 ^
dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc en1

dot graph target line desc form basic block 17: _45 = &ref_42->next;
./benchmarks/git/double_free_4/git_df_4.c:139:17: warning: use location
  139 |         *tail = &ref->next;
      |                 ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc end

dot graph target basicblock start from main basic block 17dot graph target basicblock en1

dot graph stmt start _45 = &ref_42->next;
_37 = strcmp (_36, dst_name_22);
dot graph stmt end

dot graph stmt start _45 = &ref_42->next;
./benchmarks/git/double_free_4/git_df_4.c:139:17: warning: use location
  139 |         *tail = &ref->next;
      |                 ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

remote_tail = _45;
./benchmarks/git/double_free_4/git_df_4.c:139:15: warning: use location
  139 |         *tail = &ref->next;
      |               ^
dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc en1

dot graph target line desc form basic block 17: remote_tail = _45;
./benchmarks/git/double_free_4/git_df_4.c:139:15: warning: use location
  139 |         *tail = &ref->next;
      |               ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc end

dot graph target basicblock start from main basic block 17dot graph target basicblock en1

dot graph stmt start remote_tail = _45;
_37 = strcmp (_36, dst_name_22);
dot graph stmt end

dot graph stmt start remote_tail = _45;
./benchmarks/git/double_free_4/git_df_4.c:139:15: warning: use location
  139 |         *tail = &ref->next;
      |               ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

_41 = remote_tail;
./benchmarks/git/double_free_4/git_df_4.c:136:10: warning: use location
  136 |         **tail = ref;
      |          ^
dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc en1

dot graph target line desc form basic block 14: _41 = remote_tail;
./benchmarks/git/double_free_4/git_df_4.c:136:10: warning: use location
  136 |         **tail = ref;
      |          ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc end

dot graph target basicblock start from main basic block 14dot graph target basicblock en1

dot graph stmt start _41 = remote_tail;
_37 = strcmp (_36, dst_name_22);
dot graph stmt end

dot graph stmt start _41 = remote_tail;
./benchmarks/git/double_free_4/git_df_4.c:136:10: warning: use location
  136 |         **tail = ref;
      |          ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

*_41 = ret_40;
./benchmarks/git/double_free_4/git_df_4.c:136:16: warning: use location
  136 |         **tail = ref;
      |                ^
dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc en1

dot graph target line desc form basic block 14: *_41 = ret_40;
./benchmarks/git/double_free_4/git_df_4.c:136:16: warning: use location
  136 |         **tail = ref;
      |                ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc end

dot graph target basicblock start from main basic block 14dot graph target basicblock en1

dot graph stmt start *_41 = ret_40;
_37 = strcmp (_36, dst_name_22);
dot graph stmt end

dot graph stmt start *_41 = ret_40;
./benchmarks/git/double_free_4/git_df_4.c:136:16: warning: use location
  136 |         **tail = ref;
      |                ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

_44 = ref_42->next;
./benchmarks/git/double_free_4/git_df_4.c:137:19: warning: use location
  137 |         while (ref->next)
      |                   ^
dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc en1

dot graph target line desc form basic block 16: _44 = ref_42->next;
./benchmarks/git/double_free_4/git_df_4.c:137:19: warning: use location
  137 |         while (ref->next)
      |                   ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc end

dot graph target basicblock start from main basic block 16dot graph target basicblock en1

dot graph stmt start _44 = ref_42->next;
_37 = strcmp (_36, dst_name_22);
dot graph stmt end

dot graph stmt start _44 = ref_42->next;
./benchmarks/git/double_free_4/git_df_4.c:137:19: warning: use location
  137 |         while (ref->next)
      |                   ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

if (_44 != 0B)
./benchmarks/git/double_free_4/git_df_4.c:137:16: warning: use location
  137 |         while (ref->next)
      |                ^
dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc en1

dot graph target line desc form basic block 16: if (_44 != 0B)
./benchmarks/git/double_free_4/git_df_4.c:137:16: warning: use location
  137 |         while (ref->next)
      |                ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc end

dot graph target basicblock start from main basic block 16dot graph target basicblock en1

dot graph stmt start if (_44 != 0B)
_37 = strcmp (_36, dst_name_22);
dot graph stmt end

dot graph stmt start if (_44 != 0B)
./benchmarks/git/double_free_4/git_df_4.c:137:16: warning: use location
  137 |         while (ref->next)
      |                ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

ref_43 = ref_42->next;
./benchmarks/git/double_free_4/git_df_4.c:138:21: warning: use location
  138 |                 ref = ref->next;
      |                     ^
dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc en1

dot graph target line desc form basic block 15: ref_43 = ref_42->next;
./benchmarks/git/double_free_4/git_df_4.c:138:21: warning: use location
  138 |                 ref = ref->next;
      |                     ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc end

dot graph target basicblock start from main basic block 15dot graph target basicblock en1

dot graph stmt start ref_43 = ref_42->next;
_37 = strcmp (_36, dst_name_22);
dot graph stmt end

dot graph stmt start ref_43 = ref_42->next;
./benchmarks/git/double_free_4/git_df_4.c:138:21: warning: use location
  138 |                 ref = ref->next;
      |                     ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

_74 = ret_40;
lto1: warning: use location
dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc en1

dot graph target line desc form basic block 17: _74 = ret_40;
lto1: warning: use location
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 17dot graph target basicblock en1

dot graph stmt start _74 = ret_40;
_37 = strcmp (_36, dst_name_22);
dot graph stmt end

dot graph stmt start _74 = ret_40;
lto1: warning: use location
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

dst_peer_29 = _74;
./benchmarks/git/double_free_4/git_df_4.c:186:36: warning: use location
  186 |                         dst_peer = make_linked_ref(dst_name, dst_tail);
      |                                    ^
dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc en1

dot graph target line desc form basic block 17: dst_peer_29 = _74;
./benchmarks/git/double_free_4/git_df_4.c:186:36: warning: use location
  186 |                         dst_peer = make_linked_ref(dst_name, dst_tail);
      |                                    ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc end

dot graph target basicblock start from main basic block 17dot graph target basicblock en1

dot graph stmt start dst_peer_29 = _74;
_37 = strcmp (_36, dst_name_22);
dot graph stmt end

dot graph stmt start dst_peer_29 = _74;
./benchmarks/git/double_free_4/git_df_4.c:186:36: warning: use location
  186 |                         dst_peer = make_linked_ref(dst_name, dst_tail);
      |                                    ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

dst_peer_32 = PHI <dst_peer_24(9), dst_peer_29(17)>
lto1: warning: use location
dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc en1

dot graph target line desc form basic block 18: dst_peer_32 = PHI <dst_peer_24(9), dst_peer_29(17)>
lto1: warning: use location
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 18dot graph target basicblock en1

dot graph stmt start dst_peer_32 = PHI <dst_peer_24(9), dst_peer_29(17)>
_37 = strcmp (_36, dst_name_22);
dot graph stmt end

dot graph stmt start dst_peer_32 = PHI <dst_peer_24(9), dst_peer_29(17)>
lto1: warning: use location
dot graph stmt end

this stmt have mutiple branch ---calloc-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

dst_peer_32->force = _33;
./benchmarks/git/double_free_4/git_df_4.c:190:33: warning: use location
  190 |                 dst_peer->force = pat->force;
      |                                 ^
dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc en1

dot graph target line desc form basic block 18: dst_peer_32->force = _33;
./benchmarks/git/double_free_4/git_df_4.c:190:33: warning: use location
  190 |                 dst_peer->force = pat->force;
      |                                 ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc end

dot graph target basicblock start from main basic block 18dot graph target basicblock en1

dot graph stmt start dst_peer_32->force = _33;
_37 = strcmp (_36, dst_name_22);
dot graph stmt end

dot graph stmt start dst_peer_32->force = _33;
./benchmarks/git/double_free_4/git_df_4.c:190:33: warning: use location
  190 |                 dst_peer->force = pat->force;
      |                                 ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

dst_peer_32->force = _33;
./benchmarks/git/double_free_4/git_df_4.c:190:33: warning: use location
dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc en1

dot graph target line desc form basic block 18: dst_peer_32->force = _33;
./benchmarks/git/double_free_4/git_df_4.c:190:33: warning: use location
  190 |                 dst_peer->force = pat->force;
      |                                 ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc end

dot graph target basicblock start from main basic block 18dot graph target basicblock en1

dot graph stmt start dst_peer_32->force = _33;
_37 = strcmp (_36, dst_name_22);
dot graph stmt end

dot graph stmt start dst_peer_32->force = _33;
./benchmarks/git/double_free_4/git_df_4.c:190:33: warning: use location
  190 |                 dst_peer->force = pat->force;
      |                                 ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

_33 = MEM[(const struct refspec *)0B].force;
./benchmarks/git/double_free_4/git_df_4.c:190:38: warning: use location
  190 |                 dst_peer->force = pat->force;
      |                                      ^
dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc en1

dot graph target line desc form basic block 18: _33 = MEM[(const struct refspec *)0B].force;
./benchmarks/git/double_free_4/git_df_4.c:190:38: warning: use location
  190 |                 dst_peer->force = pat->force;
      |                                      ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc end

dot graph target basicblock start from main basic block 18dot graph target basicblock en1

dot graph stmt start _33 = MEM[(const struct refspec *)0B].force;
_37 = strcmp (_36, dst_name_22);
dot graph stmt end

dot graph stmt start _33 = MEM[(const struct refspec *)0B].force;
./benchmarks/git/double_free_4/git_df_4.c:190:38: warning: use location
  190 |                 dst_peer->force = pat->force;
      |                                      ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

dst_peer_32->peer_ref = src_21;
./benchmarks/git/double_free_4/git_df_4.c:189:36: warning: use location
  189 |                 dst_peer->peer_ref = src;
      |                                    ^
dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc en1

dot graph target line desc form basic block 18: dst_peer_32->peer_ref = src_21;
./benchmarks/git/double_free_4/git_df_4.c:189:36: warning: use location
  189 |                 dst_peer->peer_ref = src;
      |                                    ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc end

dot graph target basicblock start from main basic block 18dot graph target basicblock en1

dot graph stmt start dst_peer_32->peer_ref = src_21;
_37 = strcmp (_36, dst_name_22);
dot graph stmt end

dot graph stmt start dst_peer_32->peer_ref = src_21;
./benchmarks/git/double_free_4/git_df_4.c:189:36: warning: use location
  189 |                 dst_peer->peer_ref = src;
      |                                    ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

src_34 = src_21->next;
./benchmarks/git/double_free_4/git_df_4.c:163:26: warning: use location
  163 |         for ( ; src; src = src->next) {
      |                          ^
dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc en1

dot graph target line desc form basic block 20: src_34 = src_21->next;
./benchmarks/git/double_free_4/git_df_4.c:163:26: warning: use location
  163 |         for ( ; src; src = src->next) {
      |                          ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc end

dot graph target basicblock start from main basic block 20dot graph target basicblock en1

dot graph stmt start src_34 = src_21->next;
_37 = strcmp (_36, dst_name_22);
dot graph stmt end

dot graph stmt start src_34 = src_21->next;
./benchmarks/git/double_free_4/git_df_4.c:163:26: warning: use location
  163 |         for ( ; src; src = src->next) {
      |                          ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

_30 = &src_21->new_sha1;
./benchmarks/git/double_free_4/git_df_4.c:187:56: warning: use location
  187 |                         hashcpy(dst_peer->new_sha1, src->new_sha1);
      |                                                        ^
dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc en1

dot graph target line desc form basic block 17: _30 = &src_21->new_sha1;
./benchmarks/git/double_free_4/git_df_4.c:187:56: warning: use location
  187 |                         hashcpy(dst_peer->new_sha1, src->new_sha1);
      |                                                        ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc end

dot graph target basicblock start from main basic block 17dot graph target basicblock en1

dot graph stmt start _30 = &src_21->new_sha1;
_37 = strcmp (_36, dst_name_22);
dot graph stmt end

dot graph stmt start _30 = &src_21->new_sha1;
./benchmarks/git/double_free_4/git_df_4.c:187:56: warning: use location
  187 |                         hashcpy(dst_peer->new_sha1, src->new_sha1);
      |                                                        ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

hashcpy (_31, _30);
./benchmarks/git/double_free_4/git_df_4.c:187:25: warning: use location
  187 |                         hashcpy(dst_peer->new_sha1, src->new_sha1);
      |                         ^
dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc en1

dot graph target line desc form basic block 17: hashcpy (_31, _30);
./benchmarks/git/double_free_4/git_df_4.c:187:25: warning: use location
  187 |                         hashcpy(dst_peer->new_sha1, src->new_sha1);
      |                         ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc end

dot graph target basicblock start from main basic block 17dot graph target basicblock en1

dot graph stmt start hashcpy (_31, _30);
_37 = strcmp (_36, dst_name_22);
dot graph stmt end

dot graph stmt start hashcpy (_31, _30);
./benchmarks/git/double_free_4/git_df_4.c:187:25: warning: use location
  187 |                         hashcpy(dst_peer->new_sha1, src->new_sha1);
      |                         ^
dot graph stmt end

this stmt call this function :hashcpy
trace fucntion name:hashcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

_23 = src_21->peer_ref;
./benchmarks/git/double_free_4/git_df_4.c:167:24: warning: use location
  167 |                 if (src->peer_ref)
      |                        ^
dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc en1

dot graph target line desc form basic block 3: _23 = src_21->peer_ref;
./benchmarks/git/double_free_4/git_df_4.c:167:24: warning: use location
  167 |                 if (src->peer_ref)
      |                        ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc end

dot graph target basicblock start from main basic block 3dot graph target basicblock en1

dot graph stmt start _23 = src_21->peer_ref;
_37 = strcmp (_36, dst_name_22);
dot graph stmt end

dot graph stmt start _23 = src_21->peer_ref;
./benchmarks/git/double_free_4/git_df_4.c:167:24: warning: use location
  167 |                 if (src->peer_ref)
      |                        ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

dst_name_22 = &src_21->name;
./benchmarks/git/double_free_4/git_df_4.c:166:23: warning: use location
  166 |                 char *dst_name = src->name;
      |                       ^
dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc en1

dot graph target line desc form basic block 3: dst_name_22 = &src_21->name;
./benchmarks/git/double_free_4/git_df_4.c:166:23: warning: use location
  166 |                 char *dst_name = src->name;
      |                       ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc end

dot graph target basicblock start from main basic block 3dot graph target basicblock en1

dot graph stmt start dst_name_22 = &src_21->name;
_37 = strcmp (_36, dst_name_22);
dot graph stmt end

dot graph stmt start dst_name_22 = &src_21->name;
./benchmarks/git/double_free_4/git_df_4.c:166:23: warning: use location
  166 |                 char *dst_name = src->name;
      |                       ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

_31 = &dst_peer_29->new_sha1;
./benchmarks/git/double_free_4/git_df_4.c:187:41: warning: use location
  187 |                         hashcpy(dst_peer->new_sha1, src->new_sha1);
      |                                         ^
dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc en1

dot graph target line desc form basic block 17: _31 = &dst_peer_29->new_sha1;
./benchmarks/git/double_free_4/git_df_4.c:187:41: warning: use location
  187 |                         hashcpy(dst_peer->new_sha1, src->new_sha1);
      |                                         ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc end

dot graph target basicblock start from main basic block 17dot graph target basicblock en1

dot graph stmt start _31 = &dst_peer_29->new_sha1;
_37 = strcmp (_36, dst_name_22);
dot graph stmt end

dot graph stmt start _31 = &dst_peer_29->new_sha1;
./benchmarks/git/double_free_4/git_df_4.c:187:41: warning: use location
  187 |                         hashcpy(dst_peer->new_sha1, src->new_sha1);
      |                                         ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

_52 = &ref_50->name;
./benchmarks/git/double_free_4/git_df_4.c:92:16: warning: use location
   92 |         memcpy(ref->name + prefixlen, name, len);
      |                ^
dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc en1

dot graph target line desc form basic block 14: _52 = &ref_50->name;
./benchmarks/git/double_free_4/git_df_4.c:92:16: warning: use location
   92 |         memcpy(ref->name + prefixlen, name, len);
      |                ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc end

dot graph target basicblock start from main basic block 14dot graph target basicblock en1

dot graph stmt start _52 = &ref_50->name;
_37 = strcmp (_36, dst_name_22);
dot graph stmt end

dot graph stmt start _52 = &ref_50->name;
./benchmarks/git/double_free_4/git_df_4.c:92:16: warning: use location
   92 |         memcpy(ref->name + prefixlen, name, len);
      |                ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

_53 = _52;
./benchmarks/git/double_free_4/git_df_4.c:92:9: warning: use location
   92 |         memcpy(ref->name + prefixlen, name, len);
      |         ^
dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc en1

dot graph target line desc form basic block 14: _53 = _52;
./benchmarks/git/double_free_4/git_df_4.c:92:9: warning: use location
   92 |         memcpy(ref->name + prefixlen, name, len);
      |         ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc end

dot graph target basicblock start from main basic block 14dot graph target basicblock en1

dot graph stmt start _53 = _52;
_37 = strcmp (_36, dst_name_22);
dot graph stmt end

dot graph stmt start _53 = _52;
./benchmarks/git/double_free_4/git_df_4.c:92:9: warning: use location
   92 |         memcpy(ref->name + prefixlen, name, len);
      |         ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

memcpy (_53, dst_name_22, len_47);
./benchmarks/git/double_free_4/git_df_4.c:92:9: warning: use location
dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc en1

dot graph target line desc form basic block 14: memcpy (_53, dst_name_22, len_47);
./benchmarks/git/double_free_4/git_df_4.c:92:9: warning: use location
   92 |         memcpy(ref->name + prefixlen, name, len);
      |         ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc end

dot graph target basicblock start from main basic block 14dot graph target basicblock en1

dot graph stmt start memcpy (_53, dst_name_22, len_47);
_37 = strcmp (_36, dst_name_22);
dot graph stmt end

dot graph stmt start memcpy (_53, dst_name_22, len_47);
./benchmarks/git/double_free_4/git_df_4.c:92:9: warning: use location
   92 |         memcpy(ref->name + prefixlen, name, len);
      |         ^
dot graph stmt end

this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

_51 = &ref_50->name;
./benchmarks/git/double_free_4/git_df_4.c:91:19: warning: use location
   91 |         memcpy(ref->name, prefix, prefixlen);
      |                   ^
dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc en1

dot graph target line desc form basic block 14: _51 = &ref_50->name;
./benchmarks/git/double_free_4/git_df_4.c:91:19: warning: use location
   91 |         memcpy(ref->name, prefix, prefixlen);
      |                   ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc end

dot graph target basicblock start from main basic block 14dot graph target basicblock en1

dot graph stmt start _51 = &ref_50->name;
_37 = strcmp (_36, dst_name_22);
dot graph stmt end

dot graph stmt start _51 = &ref_50->name;
./benchmarks/git/double_free_4/git_df_4.c:91:19: warning: use location
   91 |         memcpy(ref->name, prefix, prefixlen);
      |                   ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
dot graph entry main
dot graph target entry end

_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 5: _37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start _37 = strcmp (_36, dst_name_22);
_37 = strcmp (_36, dst_name_22);
dot graph stmt end

dot graph stmt start _37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
dot graph stmt end

this stmt call this function :strcmp
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

if (_37 == 0)
./benchmarks/git/double_free_4/git_df_4.c:81:12: warning: use location
   81 |         if (!strcmp(list->name, name))
      |            ^
dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc en1

dot graph target line desc form basic block 5: if (_37 == 0)
./benchmarks/git/double_free_4/git_df_4.c:81:12: warning: use location
   81 |         if (!strcmp(list->name, name))
      |            ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start if (_37 == 0)
_37 = strcmp (_36, dst_name_22);
dot graph stmt end

dot graph stmt start if (_37 == 0)
./benchmarks/git/double_free_4/git_df_4.c:81:12: warning: use location
   81 |         if (!strcmp(list->name, name))
      |            ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

free (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:192:17: warning: use location
  192 |                 free(dst_name);
      |                 ^
dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc en1

dot graph target line desc form basic block 19: free (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:192:17: warning: use location
  192 |                 free(dst_name);
      |                 ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc end

dot graph target basicblock start from main basic block 19dot graph target basicblock en1

dot graph stmt start free (dst_name_22);
_37 = strcmp (_36, dst_name_22);
dot graph stmt end

dot graph stmt start free (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:192:17: warning: use location
  192 |                 free(dst_name);
      |                 ^
dot graph stmt end

dot graph target color descgreendot graph target color desend

this stmt call this function :free

 ================== find free stmt ================== 
free (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:192:17: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
dot graph target basicblock start from main basic block 20dot graph target basicblock en1

dot graph arrowsubgraph cluster_1917547706 dot graph subgraph  src_34 = src_21->next;
src_21 = PHI <local_refs_12(2), src_34(20)>
dot graph subgrapend


 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f89e028e090
    type <pointer_type 0x7f89e026ec78
        type <integer_type 0x7f89e026ebd0 char public QI
            size <integer_cst 0x7f89e0756ca8 constant 8>
            unit-size <integer_cst 0x7f89e0756cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f89e076b3f0 precision:8 min <integer_cst 0x7f89e0265720 -128> max <integer_cst 0x7f89e0265708 127>
            pointer_to_this <pointer_type 0x7f89e026ec78>>
        unsigned DI
        size <integer_cst 0x7f89e0756bb8 constant 64>
        unit-size <integer_cst 0x7f89e0756bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f89e0761168 ./benchmarks/git/double_free_4/git_df_4.c>
        pointer_to_this <pointer_type 0x7f89e026ed20>>
    var <var_decl 0x7f89e028a7e0 dst_name>
    def_stmt dst_name_22 = &src_21->name;
    version:22
    ptr-info 0x7f89e02877c8>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_59>
free (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:192:17: warning: use location

 ================== Start Use after free Check ================== 

============================================================
# .MEM_78 = VDEF <.MEM_59>
free (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:192:17: warning: free in this location

===== possiable asias =====
ref_42 = PHI <ret_40(14), ref_43(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_59>
free (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:192:17: warning: free in this location

===== possiable asias =====
ref_42 = PHI <ret_40(14), ref_43(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_59>
free (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:192:17: warning: free in this location

===== possiable asias =====
dst_peer_32 = PHI <dst_peer_24(9), dst_peer_29(17)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_59>
free (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:192:17: warning: free in this location

===== possiable asias =====
dst_peer_32 = PHI <dst_peer_24(9), dst_peer_29(17)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_59>
free (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:192:17: warning: free in this location

===== possiable asias =====
# VUSE <.MEM_60>
src_34 = src_21->next;
./benchmarks/git/double_free_4/git_df_4.c:163:26: warning: use location
  163 |         for ( ; src; src = src->next) {
      |                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_59>
free (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:192:17: warning: free in this location
  192 |                 free(dst_name);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_60>
src_34 = src_21->next;
./benchmarks/git/double_free_4/git_df_4.c:163:26: warning: use location
  163 |         for ( ; src; src = src->next) {
      |                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f89e028e6c0
    type <integer_type 0x7f89e076b5e8 int public SI
        size <integer_cst 0x7f89e0756df8 constant 32>
        unit-size <integer_cst 0x7f89e0756e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f89e076b5e8 precision:32 min <integer_cst 0x7f89e0756db0 -2147483648> max <integer_cst 0x7f89e0756dc8 2147483647>
        pointer_to_this <pointer_type 0x7f89e07729d8>>
   
    def_stmt _37 = strcmp (_36, dst_name_22);
    version:37>
 <ssa_name 0x7f89e028e6c0
    type <integer_type 0x7f89e076b5e8 int public SI
        size <integer_cst 0x7f89e0756df8 constant 32>
        unit-size <integer_cst 0x7f89e0756e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f89e076b5e8 precision:32 min <integer_cst 0x7f89e0756db0 -2147483648> max <integer_cst 0x7f89e0756dc8 2147483647>
        pointer_to_this <pointer_type 0x7f89e07729d8>>
   
    def_stmt _37 = strcmp (_36, dst_name_22);
    version:37>

 ================== pre trace ptable ================== 
trace fucntion name:strcmp 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f89e028e6c0
    type <integer_type 0x7f89e076b5e8 int public SI
        size <integer_cst 0x7f89e0756df8 constant 32>
        unit-size <integer_cst 0x7f89e0756e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f89e076b5e8 precision:32 min <integer_cst 0x7f89e0756db0 -2147483648> max <integer_cst 0x7f89e0756dc8 2147483647>
        pointer_to_this <pointer_type 0x7f89e07729d8>>
   
    def_stmt _37 = strcmp (_36, dst_name_22);
    version:37>
is Other function strcmp
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

if (_37 == 0)
./benchmarks/git/double_free_4/git_df_4.c:81:12: warning: use location
   81 |         if (!strcmp(list->name, name))
      |            ^
dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc en1

dot graph target line desc form basic block 5: if (_37 == 0)
./benchmarks/git/double_free_4/git_df_4.c:81:12: warning: use location
   81 |         if (!strcmp(list->name, name))
      |            ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start if (_37 == 0)
_37 = strcmp (_36, dst_name_22);
dot graph stmt end

dot graph stmt start if (_37 == 0)
./benchmarks/git/double_free_4/git_df_4.c:81:12: warning: use location
   81 |         if (!strcmp(list->name, name))
      |            ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
dot graph entry main
dot graph target entry end

_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 5: _37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start _37 = strcmp (_36, dst_name_22);
_37 = strcmp (_36, dst_name_22);
dot graph stmt end

dot graph stmt start _37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
dot graph stmt end

this stmt call this function :strcmp
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:0 
dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph arrowsubgraph cluster_1219982214 dot graph subgraph  if (_37 == 0)
_37 = strcmp (_36, dst_name_22);
dot graph subgrapend

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph arrowsubgraph cluster_1168685219 dot graph subgraph  _37 = strcmp (_36, dst_name_22);
_37 = strcmp (_36, dst_name_22);
dot graph subgrapend


 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f89e028e6c0
    type <integer_type 0x7f89e076b5e8 int public SI
        size <integer_cst 0x7f89e0756df8 constant 32>
        unit-size <integer_cst 0x7f89e0756e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f89e076b5e8 precision:32 min <integer_cst 0x7f89e0756db0 -2147483648> max <integer_cst 0x7f89e0756dc8 2147483647>
        pointer_to_this <pointer_type 0x7f89e07729d8>>
   
    def_stmt _37 = strcmp (_36, dst_name_22);
    version:37>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_59>
free (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:192:17: warning: use location
  192 |                 free(dst_name);
      |                 ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f89e028e000
    type <integer_type 0x7f89e026e888 size_t public unsigned DI
        size <integer_cst 0x7f89e0756bb8 constant 64>
        unit-size <integer_cst 0x7f89e0756bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f89e076b738 precision:64 min <integer_cst 0x7f89e0756e88 0> max <integer_cst 0x7f89e0757500 18446744073709551615> context <translation_unit_decl 0x7f89e0761168 ./benchmarks/git/double_free_4/git_df_4.c>>
    var <var_decl 0x7f89e0294cf0 len>
    def_stmt len_47 = strlen (dst_name_22);
    version:47
    ptr-info 0x7f89e0292780>
 <ssa_name 0x7f89e028e000
    type <integer_type 0x7f89e026e888 size_t public unsigned DI
        size <integer_cst 0x7f89e0756bb8 constant 64>
        unit-size <integer_cst 0x7f89e0756bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f89e076b738 precision:64 min <integer_cst 0x7f89e0756e88 0> max <integer_cst 0x7f89e0757500 18446744073709551615> context <translation_unit_decl 0x7f89e0761168 ./benchmarks/git/double_free_4/git_df_4.c>>
    var <var_decl 0x7f89e0294cf0 len>
    def_stmt len_47 = strlen (dst_name_22);
    version:47
    ptr-info 0x7f89e0292780>

 ================== pre trace ptable ================== 
trace fucntion name:strlen 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f89e028e000
    type <integer_type 0x7f89e026e888 size_t public unsigned DI
        size <integer_cst 0x7f89e0756bb8 constant 64>
        unit-size <integer_cst 0x7f89e0756bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f89e076b738 precision:64 min <integer_cst 0x7f89e0756e88 0> max <integer_cst 0x7f89e0757500 18446744073709551615> context <translation_unit_decl 0x7f89e0761168 ./benchmarks/git/double_free_4/git_df_4.c>>
    var <var_decl 0x7f89e0294cf0 len>
    def_stmt len_47 = strlen (dst_name_22);
    version:47
    ptr-info 0x7f89e0292780>
is Other function strlen
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

_48 = len_47;
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
   90 |         struct ref *ref = xcalloc(1, sizeof(struct ref) + prefixlen + len + 1);
      |                           ^
dot graph target loc start # VUSE <.MEM_61>
len_47 = strlen (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:89:22: warning: use location
   89 |         size_t len = strlen(name);
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 14: _48 = len_47;
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
   90 |         struct ref *ref = xcalloc(1, sizeof(struct ref) + prefixlen + len + 1);
      |                           ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
len_47 = strlen (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:89:22: warning: use location
   89 |         size_t len = strlen(name);
      |                      ^
dot graph target loc end

dot graph target basicblock start from main basic block 14dot graph target basicblock en1

dot graph stmt start _48 = len_47;
len_47 = strlen (dst_name_22);
dot graph stmt end

dot graph stmt start _48 = len_47;
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
   90 |         struct ref *ref = xcalloc(1, sizeof(struct ref) + prefixlen + len + 1);
      |                           ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

_49 = _48 + 81;
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
dot graph target loc start # VUSE <.MEM_61>
len_47 = strlen (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:89:22: warning: use location
   89 |         size_t len = strlen(name);
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 14: _49 = _48 + 81;
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
   90 |         struct ref *ref = xcalloc(1, sizeof(struct ref) + prefixlen + len + 1);
      |                           ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
len_47 = strlen (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:89:22: warning: use location
   89 |         size_t len = strlen(name);
      |                      ^
dot graph target loc end

dot graph target basicblock start from main basic block 14dot graph target basicblock en1

dot graph stmt start _49 = _48 + 81;
len_47 = strlen (dst_name_22);
dot graph stmt end

dot graph stmt start _49 = _48 + 81;
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
   90 |         struct ref *ref = xcalloc(1, sizeof(struct ref) + prefixlen + len + 1);
      |                           ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

ref_50 = calloc (1, _49);
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
dot graph target loc start # VUSE <.MEM_61>
len_47 = strlen (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:89:22: warning: use location
   89 |         size_t len = strlen(name);
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 14: ref_50 = calloc (1, _49);
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
   90 |         struct ref *ref = xcalloc(1, sizeof(struct ref) + prefixlen + len + 1);
      |                           ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
len_47 = strlen (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:89:22: warning: use location
   89 |         size_t len = strlen(name);
      |                      ^
dot graph target loc end

dot graph target basicblock start from main basic block 14dot graph target basicblock en1

dot graph stmt start ref_50 = calloc (1, _49);
len_47 = strlen (dst_name_22);
dot graph stmt end

dot graph stmt start ref_50 = calloc (1, _49);
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
   90 |         struct ref *ref = xcalloc(1, sizeof(struct ref) + prefixlen + len + 1);
      |                           ^
dot graph stmt end

this stmt call this function :calloc

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

_70 = ref_50;
lto1: warning: use location
dot graph target loc start # VUSE <.MEM_61>
len_47 = strlen (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:89:22: warning: use location
   89 |         size_t len = strlen(name);
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 14: _70 = ref_50;
lto1: warning: use location
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
len_47 = strlen (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:89:22: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 14dot graph target basicblock en1

dot graph stmt start _70 = ref_50;
len_47 = strlen (dst_name_22);
dot graph stmt end

dot graph stmt start _70 = ref_50;
lto1: warning: use location
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

_46 = _70;
./benchmarks/git/double_free_4/git_df_4.c:98:16: warning: use location
   98 |         return alloc_ref_with_prefix("", 0, name);
      |                ^
dot graph target loc start # VUSE <.MEM_61>
len_47 = strlen (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:89:22: warning: use location
   89 |         size_t len = strlen(name);
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 14: _46 = _70;
./benchmarks/git/double_free_4/git_df_4.c:98:16: warning: use location
   98 |         return alloc_ref_with_prefix("", 0, name);
      |                ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
len_47 = strlen (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:89:22: warning: use location
   89 |         size_t len = strlen(name);
      |                      ^
dot graph target loc end

dot graph target basicblock start from main basic block 14dot graph target basicblock en1

dot graph stmt start _46 = _70;
len_47 = strlen (dst_name_22);
dot graph stmt end

dot graph stmt start _46 = _70;
./benchmarks/git/double_free_4/git_df_4.c:98:16: warning: use location
   98 |         return alloc_ref_with_prefix("", 0, name);
      |                ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

_71 = _46;
lto1: warning: use location
dot graph target loc start # VUSE <.MEM_61>
len_47 = strlen (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:89:22: warning: use location
   89 |         size_t len = strlen(name);
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 14: _71 = _46;
lto1: warning: use location
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
len_47 = strlen (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:89:22: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 14dot graph target basicblock en1

dot graph stmt start _71 = _46;
len_47 = strlen (dst_name_22);
dot graph stmt end

dot graph stmt start _71 = _46;
lto1: warning: use location
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

ret_40 = _71;
./benchmarks/git/double_free_4/git_df_4.c:144:27: warning: use location
  144 |         struct ref *ret = alloc_ref(name);
      |                           ^
dot graph target loc start # VUSE <.MEM_61>
len_47 = strlen (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:89:22: warning: use location
   89 |         size_t len = strlen(name);
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 14: ret_40 = _71;
./benchmarks/git/double_free_4/git_df_4.c:144:27: warning: use location
  144 |         struct ref *ret = alloc_ref(name);
      |                           ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
len_47 = strlen (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:89:22: warning: use location
   89 |         size_t len = strlen(name);
      |                      ^
dot graph target loc end

dot graph target basicblock start from main basic block 14dot graph target basicblock en1

dot graph stmt start ret_40 = _71;
len_47 = strlen (dst_name_22);
dot graph stmt end

dot graph stmt start ret_40 = _71;
./benchmarks/git/double_free_4/git_df_4.c:144:27: warning: use location
  144 |         struct ref *ret = alloc_ref(name);
      |                           ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

ref_42 = PHI <ret_40(14), ref_43(15)>
lto1: warning: use location
dot graph target loc start # VUSE <.MEM_61>
len_47 = strlen (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:89:22: warning: use location
   89 |         size_t len = strlen(name);
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 16: ref_42 = PHI <ret_40(14), ref_43(15)>
lto1: warning: use location
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
len_47 = strlen (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:89:22: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 16dot graph target basicblock en1

dot graph stmt start ref_42 = PHI <ret_40(14), ref_43(15)>
len_47 = strlen (dst_name_22);
dot graph stmt end

dot graph stmt start ref_42 = PHI <ret_40(14), ref_43(15)>
lto1: warning: use location
dot graph stmt end

this stmt have mutiple branch ---calloc-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

_45 = &ref_42->next;
./benchmarks/git/double_free_4/git_df_4.c:139:17: warning: use location
  139 |         *tail = &ref->next;
      |                 ^
dot graph target loc start # VUSE <.MEM_61>
len_47 = strlen (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:89:22: warning: use location
   89 |         size_t len = strlen(name);
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 17: _45 = &ref_42->next;
./benchmarks/git/double_free_4/git_df_4.c:139:17: warning: use location
  139 |         *tail = &ref->next;
      |                 ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
len_47 = strlen (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:89:22: warning: use location
   89 |         size_t len = strlen(name);
      |                      ^
dot graph target loc end

dot graph target basicblock start from main basic block 17dot graph target basicblock en1

dot graph stmt start _45 = &ref_42->next;
len_47 = strlen (dst_name_22);
dot graph stmt end

dot graph stmt start _45 = &ref_42->next;
./benchmarks/git/double_free_4/git_df_4.c:139:17: warning: use location
  139 |         *tail = &ref->next;
      |                 ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

remote_tail = _45;
./benchmarks/git/double_free_4/git_df_4.c:139:15: warning: use location
  139 |         *tail = &ref->next;
      |               ^
dot graph target loc start # VUSE <.MEM_61>
len_47 = strlen (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:89:22: warning: use location
   89 |         size_t len = strlen(name);
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 17: remote_tail = _45;
./benchmarks/git/double_free_4/git_df_4.c:139:15: warning: use location
  139 |         *tail = &ref->next;
      |               ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
len_47 = strlen (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:89:22: warning: use location
   89 |         size_t len = strlen(name);
      |                      ^
dot graph target loc end

dot graph target basicblock start from main basic block 17dot graph target basicblock en1

dot graph stmt start remote_tail = _45;
len_47 = strlen (dst_name_22);
dot graph stmt end

dot graph stmt start remote_tail = _45;
./benchmarks/git/double_free_4/git_df_4.c:139:15: warning: use location
  139 |         *tail = &ref->next;
      |               ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

_41 = remote_tail;
./benchmarks/git/double_free_4/git_df_4.c:136:10: warning: use location
  136 |         **tail = ref;
      |          ^
dot graph target loc start # VUSE <.MEM_61>
len_47 = strlen (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:89:22: warning: use location
   89 |         size_t len = strlen(name);
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 14: _41 = remote_tail;
./benchmarks/git/double_free_4/git_df_4.c:136:10: warning: use location
  136 |         **tail = ref;
      |          ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
len_47 = strlen (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:89:22: warning: use location
   89 |         size_t len = strlen(name);
      |                      ^
dot graph target loc end

dot graph target basicblock start from main basic block 14dot graph target basicblock en1

dot graph stmt start _41 = remote_tail;
len_47 = strlen (dst_name_22);
dot graph stmt end

dot graph stmt start _41 = remote_tail;
./benchmarks/git/double_free_4/git_df_4.c:136:10: warning: use location
  136 |         **tail = ref;
      |          ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

*_41 = ret_40;
./benchmarks/git/double_free_4/git_df_4.c:136:16: warning: use location
  136 |         **tail = ref;
      |                ^
dot graph target loc start # VUSE <.MEM_61>
len_47 = strlen (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:89:22: warning: use location
   89 |         size_t len = strlen(name);
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 14: *_41 = ret_40;
./benchmarks/git/double_free_4/git_df_4.c:136:16: warning: use location
  136 |         **tail = ref;
      |                ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
len_47 = strlen (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:89:22: warning: use location
   89 |         size_t len = strlen(name);
      |                      ^
dot graph target loc end

dot graph target basicblock start from main basic block 14dot graph target basicblock en1

dot graph stmt start *_41 = ret_40;
len_47 = strlen (dst_name_22);
dot graph stmt end

dot graph stmt start *_41 = ret_40;
./benchmarks/git/double_free_4/git_df_4.c:136:16: warning: use location
  136 |         **tail = ref;
      |                ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

_44 = ref_42->next;
./benchmarks/git/double_free_4/git_df_4.c:137:19: warning: use location
  137 |         while (ref->next)
      |                   ^
dot graph target loc start # VUSE <.MEM_61>
len_47 = strlen (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:89:22: warning: use location
   89 |         size_t len = strlen(name);
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 16: _44 = ref_42->next;
./benchmarks/git/double_free_4/git_df_4.c:137:19: warning: use location
  137 |         while (ref->next)
      |                   ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
len_47 = strlen (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:89:22: warning: use location
   89 |         size_t len = strlen(name);
      |                      ^
dot graph target loc end

dot graph target basicblock start from main basic block 16dot graph target basicblock en1

dot graph stmt start _44 = ref_42->next;
len_47 = strlen (dst_name_22);
dot graph stmt end

dot graph stmt start _44 = ref_42->next;
./benchmarks/git/double_free_4/git_df_4.c:137:19: warning: use location
  137 |         while (ref->next)
      |                   ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

if (_44 != 0B)
./benchmarks/git/double_free_4/git_df_4.c:137:16: warning: use location
  137 |         while (ref->next)
      |                ^
dot graph target loc start # VUSE <.MEM_61>
len_47 = strlen (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:89:22: warning: use location
   89 |         size_t len = strlen(name);
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 16: if (_44 != 0B)
./benchmarks/git/double_free_4/git_df_4.c:137:16: warning: use location
  137 |         while (ref->next)
      |                ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
len_47 = strlen (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:89:22: warning: use location
   89 |         size_t len = strlen(name);
      |                      ^
dot graph target loc end

dot graph target basicblock start from main basic block 16dot graph target basicblock en1

dot graph stmt start if (_44 != 0B)
len_47 = strlen (dst_name_22);
dot graph stmt end

dot graph stmt start if (_44 != 0B)
./benchmarks/git/double_free_4/git_df_4.c:137:16: warning: use location
  137 |         while (ref->next)
      |                ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

ref_43 = ref_42->next;
./benchmarks/git/double_free_4/git_df_4.c:138:21: warning: use location
  138 |                 ref = ref->next;
      |                     ^
dot graph target loc start # VUSE <.MEM_61>
len_47 = strlen (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:89:22: warning: use location
   89 |         size_t len = strlen(name);
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 15: ref_43 = ref_42->next;
./benchmarks/git/double_free_4/git_df_4.c:138:21: warning: use location
  138 |                 ref = ref->next;
      |                     ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
len_47 = strlen (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:89:22: warning: use location
   89 |         size_t len = strlen(name);
      |                      ^
dot graph target loc end

dot graph target basicblock start from main basic block 15dot graph target basicblock en1

dot graph stmt start ref_43 = ref_42->next;
len_47 = strlen (dst_name_22);
dot graph stmt end

dot graph stmt start ref_43 = ref_42->next;
./benchmarks/git/double_free_4/git_df_4.c:138:21: warning: use location
  138 |                 ref = ref->next;
      |                     ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

_74 = ret_40;
lto1: warning: use location
dot graph target loc start # VUSE <.MEM_61>
len_47 = strlen (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:89:22: warning: use location
   89 |         size_t len = strlen(name);
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 17: _74 = ret_40;
lto1: warning: use location
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
len_47 = strlen (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:89:22: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 17dot graph target basicblock en1

dot graph stmt start _74 = ret_40;
len_47 = strlen (dst_name_22);
dot graph stmt end

dot graph stmt start _74 = ret_40;
lto1: warning: use location
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

dst_peer_29 = _74;
./benchmarks/git/double_free_4/git_df_4.c:186:36: warning: use location
  186 |                         dst_peer = make_linked_ref(dst_name, dst_tail);
      |                                    ^
dot graph target loc start # VUSE <.MEM_61>
len_47 = strlen (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:89:22: warning: use location
   89 |         size_t len = strlen(name);
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 17: dst_peer_29 = _74;
./benchmarks/git/double_free_4/git_df_4.c:186:36: warning: use location
  186 |                         dst_peer = make_linked_ref(dst_name, dst_tail);
      |                                    ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
len_47 = strlen (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:89:22: warning: use location
   89 |         size_t len = strlen(name);
      |                      ^
dot graph target loc end

dot graph target basicblock start from main basic block 17dot graph target basicblock en1

dot graph stmt start dst_peer_29 = _74;
len_47 = strlen (dst_name_22);
dot graph stmt end

dot graph stmt start dst_peer_29 = _74;
./benchmarks/git/double_free_4/git_df_4.c:186:36: warning: use location
  186 |                         dst_peer = make_linked_ref(dst_name, dst_tail);
      |                                    ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

dst_peer_32 = PHI <dst_peer_24(9), dst_peer_29(17)>
lto1: warning: use location
dot graph target loc start # VUSE <.MEM_61>
len_47 = strlen (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:89:22: warning: use location
   89 |         size_t len = strlen(name);
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 18: dst_peer_32 = PHI <dst_peer_24(9), dst_peer_29(17)>
lto1: warning: use location
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
len_47 = strlen (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:89:22: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 18dot graph target basicblock en1

dot graph stmt start dst_peer_32 = PHI <dst_peer_24(9), dst_peer_29(17)>
len_47 = strlen (dst_name_22);
dot graph stmt end

dot graph stmt start dst_peer_32 = PHI <dst_peer_24(9), dst_peer_29(17)>
lto1: warning: use location
dot graph stmt end

this stmt have mutiple branch ---calloc-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

dst_peer_32->force = _33;
./benchmarks/git/double_free_4/git_df_4.c:190:33: warning: use location
  190 |                 dst_peer->force = pat->force;
      |                                 ^
dot graph target loc start # VUSE <.MEM_61>
len_47 = strlen (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:89:22: warning: use location
   89 |         size_t len = strlen(name);
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 18: dst_peer_32->force = _33;
./benchmarks/git/double_free_4/git_df_4.c:190:33: warning: use location
  190 |                 dst_peer->force = pat->force;
      |                                 ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
len_47 = strlen (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:89:22: warning: use location
   89 |         size_t len = strlen(name);
      |                      ^
dot graph target loc end

dot graph target basicblock start from main basic block 18dot graph target basicblock en1

dot graph stmt start dst_peer_32->force = _33;
len_47 = strlen (dst_name_22);
dot graph stmt end

dot graph stmt start dst_peer_32->force = _33;
./benchmarks/git/double_free_4/git_df_4.c:190:33: warning: use location
  190 |                 dst_peer->force = pat->force;
      |                                 ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

dst_peer_32->force = _33;
./benchmarks/git/double_free_4/git_df_4.c:190:33: warning: use location
dot graph target loc start # VUSE <.MEM_61>
len_47 = strlen (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:89:22: warning: use location
   89 |         size_t len = strlen(name);
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 18: dst_peer_32->force = _33;
./benchmarks/git/double_free_4/git_df_4.c:190:33: warning: use location
  190 |                 dst_peer->force = pat->force;
      |                                 ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
len_47 = strlen (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:89:22: warning: use location
   89 |         size_t len = strlen(name);
      |                      ^
dot graph target loc end

dot graph target basicblock start from main basic block 18dot graph target basicblock en1

dot graph stmt start dst_peer_32->force = _33;
len_47 = strlen (dst_name_22);
dot graph stmt end

dot graph stmt start dst_peer_32->force = _33;
./benchmarks/git/double_free_4/git_df_4.c:190:33: warning: use location
  190 |                 dst_peer->force = pat->force;
      |                                 ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

_33 = MEM[(const struct refspec *)0B].force;
./benchmarks/git/double_free_4/git_df_4.c:190:38: warning: use location
  190 |                 dst_peer->force = pat->force;
      |                                      ^
dot graph target loc start # VUSE <.MEM_61>
len_47 = strlen (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:89:22: warning: use location
   89 |         size_t len = strlen(name);
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 18: _33 = MEM[(const struct refspec *)0B].force;
./benchmarks/git/double_free_4/git_df_4.c:190:38: warning: use location
  190 |                 dst_peer->force = pat->force;
      |                                      ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
len_47 = strlen (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:89:22: warning: use location
   89 |         size_t len = strlen(name);
      |                      ^
dot graph target loc end

dot graph target basicblock start from main basic block 18dot graph target basicblock en1

dot graph stmt start _33 = MEM[(const struct refspec *)0B].force;
len_47 = strlen (dst_name_22);
dot graph stmt end

dot graph stmt start _33 = MEM[(const struct refspec *)0B].force;
./benchmarks/git/double_free_4/git_df_4.c:190:38: warning: use location
  190 |                 dst_peer->force = pat->force;
      |                                      ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

dst_peer_32->peer_ref = src_21;
./benchmarks/git/double_free_4/git_df_4.c:189:36: warning: use location
  189 |                 dst_peer->peer_ref = src;
      |                                    ^
dot graph target loc start # VUSE <.MEM_61>
len_47 = strlen (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:89:22: warning: use location
   89 |         size_t len = strlen(name);
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 18: dst_peer_32->peer_ref = src_21;
./benchmarks/git/double_free_4/git_df_4.c:189:36: warning: use location
  189 |                 dst_peer->peer_ref = src;
      |                                    ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
len_47 = strlen (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:89:22: warning: use location
   89 |         size_t len = strlen(name);
      |                      ^
dot graph target loc end

dot graph target basicblock start from main basic block 18dot graph target basicblock en1

dot graph stmt start dst_peer_32->peer_ref = src_21;
len_47 = strlen (dst_name_22);
dot graph stmt end

dot graph stmt start dst_peer_32->peer_ref = src_21;
./benchmarks/git/double_free_4/git_df_4.c:189:36: warning: use location
  189 |                 dst_peer->peer_ref = src;
      |                                    ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

src_34 = src_21->next;
./benchmarks/git/double_free_4/git_df_4.c:163:26: warning: use location
  163 |         for ( ; src; src = src->next) {
      |                          ^
dot graph target loc start # VUSE <.MEM_61>
len_47 = strlen (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:89:22: warning: use location
   89 |         size_t len = strlen(name);
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 20: src_34 = src_21->next;
./benchmarks/git/double_free_4/git_df_4.c:163:26: warning: use location
  163 |         for ( ; src; src = src->next) {
      |                          ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
len_47 = strlen (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:89:22: warning: use location
   89 |         size_t len = strlen(name);
      |                      ^
dot graph target loc end

dot graph target basicblock start from main basic block 20dot graph target basicblock en1

dot graph stmt start src_34 = src_21->next;
len_47 = strlen (dst_name_22);
dot graph stmt end

dot graph stmt start src_34 = src_21->next;
./benchmarks/git/double_free_4/git_df_4.c:163:26: warning: use location
  163 |         for ( ; src; src = src->next) {
      |                          ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

_30 = &src_21->new_sha1;
./benchmarks/git/double_free_4/git_df_4.c:187:56: warning: use location
  187 |                         hashcpy(dst_peer->new_sha1, src->new_sha1);
      |                                                        ^
dot graph target loc start # VUSE <.MEM_61>
len_47 = strlen (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:89:22: warning: use location
   89 |         size_t len = strlen(name);
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 17: _30 = &src_21->new_sha1;
./benchmarks/git/double_free_4/git_df_4.c:187:56: warning: use location
  187 |                         hashcpy(dst_peer->new_sha1, src->new_sha1);
      |                                                        ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
len_47 = strlen (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:89:22: warning: use location
   89 |         size_t len = strlen(name);
      |                      ^
dot graph target loc end

dot graph target basicblock start from main basic block 17dot graph target basicblock en1

dot graph stmt start _30 = &src_21->new_sha1;
len_47 = strlen (dst_name_22);
dot graph stmt end

dot graph stmt start _30 = &src_21->new_sha1;
./benchmarks/git/double_free_4/git_df_4.c:187:56: warning: use location
  187 |                         hashcpy(dst_peer->new_sha1, src->new_sha1);
      |                                                        ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

hashcpy (_31, _30);
./benchmarks/git/double_free_4/git_df_4.c:187:25: warning: use location
  187 |                         hashcpy(dst_peer->new_sha1, src->new_sha1);
      |                         ^
dot graph target loc start # VUSE <.MEM_61>
len_47 = strlen (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:89:22: warning: use location
   89 |         size_t len = strlen(name);
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 17: hashcpy (_31, _30);
./benchmarks/git/double_free_4/git_df_4.c:187:25: warning: use location
  187 |                         hashcpy(dst_peer->new_sha1, src->new_sha1);
      |                         ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
len_47 = strlen (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:89:22: warning: use location
   89 |         size_t len = strlen(name);
      |                      ^
dot graph target loc end

dot graph target basicblock start from main basic block 17dot graph target basicblock en1

dot graph stmt start hashcpy (_31, _30);
len_47 = strlen (dst_name_22);
dot graph stmt end

dot graph stmt start hashcpy (_31, _30);
./benchmarks/git/double_free_4/git_df_4.c:187:25: warning: use location
  187 |                         hashcpy(dst_peer->new_sha1, src->new_sha1);
      |                         ^
dot graph stmt end

this stmt call this function :hashcpy
trace fucntion name:hashcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

_23 = src_21->peer_ref;
./benchmarks/git/double_free_4/git_df_4.c:167:24: warning: use location
  167 |                 if (src->peer_ref)
      |                        ^
dot graph target loc start # VUSE <.MEM_61>
len_47 = strlen (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:89:22: warning: use location
   89 |         size_t len = strlen(name);
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 3: _23 = src_21->peer_ref;
./benchmarks/git/double_free_4/git_df_4.c:167:24: warning: use location
  167 |                 if (src->peer_ref)
      |                        ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
len_47 = strlen (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:89:22: warning: use location
   89 |         size_t len = strlen(name);
      |                      ^
dot graph target loc end

dot graph target basicblock start from main basic block 3dot graph target basicblock en1

dot graph stmt start _23 = src_21->peer_ref;
len_47 = strlen (dst_name_22);
dot graph stmt end

dot graph stmt start _23 = src_21->peer_ref;
./benchmarks/git/double_free_4/git_df_4.c:167:24: warning: use location
  167 |                 if (src->peer_ref)
      |                        ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

dst_name_22 = &src_21->name;
./benchmarks/git/double_free_4/git_df_4.c:166:23: warning: use location
  166 |                 char *dst_name = src->name;
      |                       ^
dot graph target loc start # VUSE <.MEM_61>
len_47 = strlen (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:89:22: warning: use location
   89 |         size_t len = strlen(name);
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 3: dst_name_22 = &src_21->name;
./benchmarks/git/double_free_4/git_df_4.c:166:23: warning: use location
  166 |                 char *dst_name = src->name;
      |                       ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
len_47 = strlen (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:89:22: warning: use location
   89 |         size_t len = strlen(name);
      |                      ^
dot graph target loc end

dot graph target basicblock start from main basic block 3dot graph target basicblock en1

dot graph stmt start dst_name_22 = &src_21->name;
len_47 = strlen (dst_name_22);
dot graph stmt end

dot graph stmt start dst_name_22 = &src_21->name;
./benchmarks/git/double_free_4/git_df_4.c:166:23: warning: use location
  166 |                 char *dst_name = src->name;
      |                       ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_61>
len_47 = strlen (dst_name_22);
dot graph entry main
dot graph target entry end

len_47 = strlen (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:89:22: warning: use location
   89 |         size_t len = strlen(name);
      |                      ^
dot graph target loc start # VUSE <.MEM_61>
len_47 = strlen (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:89:22: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 14: len_47 = strlen (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:89:22: warning: use location
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
len_47 = strlen (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:89:22: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 14dot graph target basicblock en1

dot graph stmt start len_47 = strlen (dst_name_22);
len_47 = strlen (dst_name_22);
dot graph stmt end

dot graph stmt start len_47 = strlen (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:89:22: warning: use location
dot graph stmt end

this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc start # VUSE <.MEM_61>
len_47 = strlen (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:89:22: warning: use location
   89 |         size_t len = strlen(name);
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 5: _37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
len_47 = strlen (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:89:22: warning: use location
   89 |         size_t len = strlen(name);
      |                      ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start _37 = strcmp (_36, dst_name_22);
len_47 = strlen (dst_name_22);
dot graph stmt end

dot graph stmt start _37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph stmt end

this stmt call this function :strcmp
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

if (_37 == 0)
./benchmarks/git/double_free_4/git_df_4.c:81:12: warning: use location
   81 |         if (!strcmp(list->name, name))
      |            ^
dot graph target loc start # VUSE <.MEM_61>
len_47 = strlen (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:89:22: warning: use location
   89 |         size_t len = strlen(name);
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 5: if (_37 == 0)
./benchmarks/git/double_free_4/git_df_4.c:81:12: warning: use location
   81 |         if (!strcmp(list->name, name))
      |            ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
len_47 = strlen (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:89:22: warning: use location
   89 |         size_t len = strlen(name);
      |                      ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start if (_37 == 0)
len_47 = strlen (dst_name_22);
dot graph stmt end

dot graph stmt start if (_37 == 0)
./benchmarks/git/double_free_4/git_df_4.c:81:12: warning: use location
   81 |         if (!strcmp(list->name, name))
      |            ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

memcpy (_53, dst_name_22, len_47);
./benchmarks/git/double_free_4/git_df_4.c:92:9: warning: use location
   92 |         memcpy(ref->name + prefixlen, name, len);
      |         ^
dot graph target loc start # VUSE <.MEM_61>
len_47 = strlen (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:89:22: warning: use location
   89 |         size_t len = strlen(name);
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 14: memcpy (_53, dst_name_22, len_47);
./benchmarks/git/double_free_4/git_df_4.c:92:9: warning: use location
   92 |         memcpy(ref->name + prefixlen, name, len);
      |         ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
len_47 = strlen (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:89:22: warning: use location
   89 |         size_t len = strlen(name);
      |                      ^
dot graph target loc end

dot graph target basicblock start from main basic block 14dot graph target basicblock en1

dot graph stmt start memcpy (_53, dst_name_22, len_47);
len_47 = strlen (dst_name_22);
dot graph stmt end

dot graph stmt start memcpy (_53, dst_name_22, len_47);
./benchmarks/git/double_free_4/git_df_4.c:92:9: warning: use location
   92 |         memcpy(ref->name + prefixlen, name, len);
      |         ^
dot graph stmt end

this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

free (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:192:17: warning: use location
  192 |                 free(dst_name);
      |                 ^
dot graph target loc start # VUSE <.MEM_61>
len_47 = strlen (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:89:22: warning: use location
   89 |         size_t len = strlen(name);
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 19: free (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:192:17: warning: use location
  192 |                 free(dst_name);
      |                 ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
len_47 = strlen (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:89:22: warning: use location
   89 |         size_t len = strlen(name);
      |                      ^
dot graph target loc end

dot graph target basicblock start from main basic block 19dot graph target basicblock en1

dot graph stmt start free (dst_name_22);
len_47 = strlen (dst_name_22);
dot graph stmt end

dot graph stmt start free (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:192:17: warning: use location
  192 |                 free(dst_name);
      |                 ^
dot graph stmt end

dot graph target color descgreendot graph target color desend

this stmt call this function :free

 ================== find free stmt ================== 
free (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:192:17: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

_31 = &dst_peer_29->new_sha1;
./benchmarks/git/double_free_4/git_df_4.c:187:41: warning: use location
  187 |                         hashcpy(dst_peer->new_sha1, src->new_sha1);
      |                                         ^
dot graph target loc start # VUSE <.MEM_61>
len_47 = strlen (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:89:22: warning: use location
   89 |         size_t len = strlen(name);
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 17: _31 = &dst_peer_29->new_sha1;
./benchmarks/git/double_free_4/git_df_4.c:187:41: warning: use location
  187 |                         hashcpy(dst_peer->new_sha1, src->new_sha1);
      |                                         ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
len_47 = strlen (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:89:22: warning: use location
   89 |         size_t len = strlen(name);
      |                      ^
dot graph target loc end

dot graph target basicblock start from main basic block 17dot graph target basicblock en1

dot graph stmt start _31 = &dst_peer_29->new_sha1;
len_47 = strlen (dst_name_22);
dot graph stmt end

dot graph stmt start _31 = &dst_peer_29->new_sha1;
./benchmarks/git/double_free_4/git_df_4.c:187:41: warning: use location
  187 |                         hashcpy(dst_peer->new_sha1, src->new_sha1);
      |                                         ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

_52 = &ref_50->name;
./benchmarks/git/double_free_4/git_df_4.c:92:16: warning: use location
   92 |         memcpy(ref->name + prefixlen, name, len);
      |                ^
dot graph target loc start # VUSE <.MEM_61>
len_47 = strlen (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:89:22: warning: use location
   89 |         size_t len = strlen(name);
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 14: _52 = &ref_50->name;
./benchmarks/git/double_free_4/git_df_4.c:92:16: warning: use location
   92 |         memcpy(ref->name + prefixlen, name, len);
      |                ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
len_47 = strlen (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:89:22: warning: use location
   89 |         size_t len = strlen(name);
      |                      ^
dot graph target loc end

dot graph target basicblock start from main basic block 14dot graph target basicblock en1

dot graph stmt start _52 = &ref_50->name;
len_47 = strlen (dst_name_22);
dot graph stmt end

dot graph stmt start _52 = &ref_50->name;
./benchmarks/git/double_free_4/git_df_4.c:92:16: warning: use location
   92 |         memcpy(ref->name + prefixlen, name, len);
      |                ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

_51 = &ref_50->name;
./benchmarks/git/double_free_4/git_df_4.c:91:19: warning: use location
   91 |         memcpy(ref->name, prefix, prefixlen);
      |                   ^
dot graph target loc start # VUSE <.MEM_61>
len_47 = strlen (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:89:22: warning: use location
   89 |         size_t len = strlen(name);
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 14: _51 = &ref_50->name;
./benchmarks/git/double_free_4/git_df_4.c:91:19: warning: use location
   91 |         memcpy(ref->name, prefix, prefixlen);
      |                   ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_61>
len_47 = strlen (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:89:22: warning: use location
   89 |         size_t len = strlen(name);
      |                      ^
dot graph target loc end

dot graph target basicblock start from main basic block 14dot graph target basicblock en1

dot graph stmt start _51 = &ref_50->name;
len_47 = strlen (dst_name_22);
dot graph stmt end

dot graph stmt start _51 = &ref_50->name;
./benchmarks/git/double_free_4/git_df_4.c:91:19: warning: use location
   91 |         memcpy(ref->name, prefix, prefixlen);
      |                   ^
dot graph stmt end

dot graph target basicblock start from main basic block 20dot graph target basicblock en1

dot graph arrowsubgraph cluster_272511628 dot graph subgraph  src_34 = src_21->next;
src_21 = PHI <local_refs_12(2), src_34(20)>
dot graph subgrapend


 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f89e028e000
    type <integer_type 0x7f89e026e888 size_t public unsigned DI
        size <integer_cst 0x7f89e0756bb8 constant 64>
        unit-size <integer_cst 0x7f89e0756bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f89e076b738 precision:64 min <integer_cst 0x7f89e0756e88 0> max <integer_cst 0x7f89e0757500 18446744073709551615> context <translation_unit_decl 0x7f89e0761168 ./benchmarks/git/double_free_4/git_df_4.c>>
    var <var_decl 0x7f89e0294cf0 len>
    def_stmt len_47 = strlen (dst_name_22);
    version:47
    ptr-info 0x7f89e0292780>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_59>
free (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:192:17: warning: use location
  192 |                 free(dst_name);
      |                 ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_78 = VDEF <.MEM_59>
free (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:192:17: warning: free in this location

===== possiable asias =====
ref_42 = PHI <ret_40(14), ref_43(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_59>
free (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:192:17: warning: free in this location

===== possiable asias =====
ref_42 = PHI <ret_40(14), ref_43(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_59>
free (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:192:17: warning: free in this location

===== possiable asias =====
dst_peer_32 = PHI <dst_peer_24(9), dst_peer_29(17)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_59>
free (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:192:17: warning: free in this location

===== possiable asias =====
dst_peer_32 = PHI <dst_peer_24(9), dst_peer_29(17)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_59>
free (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:192:17: warning: free in this location

===== possiable asias =====
# VUSE <.MEM_60>
src_34 = src_21->next;
./benchmarks/git/double_free_4/git_df_4.c:163:26: warning: use location
  163 |         for ( ; src; src = src->next) {
      |                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_59>
free (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:192:17: warning: free in this location
  192 |                 free(dst_name);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_60>
src_34 = src_21->next;
./benchmarks/git/double_free_4/git_df_4.c:163:26: warning: use location
  163 |         for ( ; src; src = src->next) {
      |                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f89e0299090
    type <pointer_type 0x7f89e026e738
        type <record_type 0x7f89e026e690 ref BLK
            size <integer_cst 0x7f89e082b0a8 constant 640>
            unit-size <integer_cst 0x7f89e0265738 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f89e026e690 fields <field_decl 0x7f89e0271850 next> context <translation_unit_decl 0x7f89e0761168 ./benchmarks/git/double_free_4/git_df_4.c>
            pointer_to_this <pointer_type 0x7f89e026e738>>
        public unsigned DI
        size <integer_cst 0x7f89e0756bb8 constant 64>
        unit-size <integer_cst 0x7f89e0756bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f89e026e7e0>>
    var <var_decl 0x7f89e0294d80 ref>
    def_stmt ref_50 = calloc (1, _49);
    version:50
    ptr-info 0x7f89e02879a8>
 <ssa_name 0x7f89e0299090
    type <pointer_type 0x7f89e026e738
        type <record_type 0x7f89e026e690 ref BLK
            size <integer_cst 0x7f89e082b0a8 constant 640>
            unit-size <integer_cst 0x7f89e0265738 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f89e026e690 fields <field_decl 0x7f89e0271850 next> context <translation_unit_decl 0x7f89e0761168 ./benchmarks/git/double_free_4/git_df_4.c>
            pointer_to_this <pointer_type 0x7f89e026e738>>
        public unsigned DI
        size <integer_cst 0x7f89e0756bb8 constant 64>
        unit-size <integer_cst 0x7f89e0756bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f89e026e7e0>>
    var <var_decl 0x7f89e0294d80 ref>
    def_stmt ref_50 = calloc (1, _49);
    version:50
    ptr-info 0x7f89e02879a8>

 ================== pre trace ptable ================== 
trace fucntion name:calloc 

 ================== pre trace ptable finish================== 
is Reserved word function :calloc
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

_70 = ref_50;
lto1: warning: use location
dot graph target loc start # .MEM_68 = VDEF <.MEM_61>
ref_50 = calloc (1, _49);
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
   90 |         struct ref *ref = xcalloc(1, sizeof(struct ref) + prefixlen + len + 1);
      |                           ^
dot graph target loc en1

dot graph target line desc form basic block 14: _70 = ref_50;
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_68 = VDEF <.MEM_61>
ref_50 = calloc (1, _49);
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 14dot graph target basicblock en1

dot graph stmt start _70 = ref_50;
ref_50 = calloc (1, _49);
dot graph stmt end

dot graph stmt start _70 = ref_50;
lto1: warning: use location
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

_46 = _70;
./benchmarks/git/double_free_4/git_df_4.c:98:16: warning: use location
   98 |         return alloc_ref_with_prefix("", 0, name);
      |                ^
dot graph target loc start # .MEM_68 = VDEF <.MEM_61>
ref_50 = calloc (1, _49);
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
   90 |         struct ref *ref = xcalloc(1, sizeof(struct ref) + prefixlen + len + 1);
      |                           ^
dot graph target loc en1

dot graph target line desc form basic block 14: _46 = _70;
./benchmarks/git/double_free_4/git_df_4.c:98:16: warning: use location
   98 |         return alloc_ref_with_prefix("", 0, name);
      |                ^
dot graph target line desend

dot graph target loc start # .MEM_68 = VDEF <.MEM_61>
ref_50 = calloc (1, _49);
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
   90 |         struct ref *ref = xcalloc(1, sizeof(struct ref) + prefixlen + len + 1);
      |                           ^
dot graph target loc end

dot graph target basicblock start from main basic block 14dot graph target basicblock en1

dot graph stmt start _46 = _70;
ref_50 = calloc (1, _49);
dot graph stmt end

dot graph stmt start _46 = _70;
./benchmarks/git/double_free_4/git_df_4.c:98:16: warning: use location
   98 |         return alloc_ref_with_prefix("", 0, name);
      |                ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

_71 = _46;
lto1: warning: use location
dot graph target loc start # .MEM_68 = VDEF <.MEM_61>
ref_50 = calloc (1, _49);
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
   90 |         struct ref *ref = xcalloc(1, sizeof(struct ref) + prefixlen + len + 1);
      |                           ^
dot graph target loc en1

dot graph target line desc form basic block 14: _71 = _46;
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_68 = VDEF <.MEM_61>
ref_50 = calloc (1, _49);
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 14dot graph target basicblock en1

dot graph stmt start _71 = _46;
ref_50 = calloc (1, _49);
dot graph stmt end

dot graph stmt start _71 = _46;
lto1: warning: use location
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

ret_40 = _71;
./benchmarks/git/double_free_4/git_df_4.c:144:27: warning: use location
  144 |         struct ref *ret = alloc_ref(name);
      |                           ^
dot graph target loc start # .MEM_68 = VDEF <.MEM_61>
ref_50 = calloc (1, _49);
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
   90 |         struct ref *ref = xcalloc(1, sizeof(struct ref) + prefixlen + len + 1);
      |                           ^
dot graph target loc en1

dot graph target line desc form basic block 14: ret_40 = _71;
./benchmarks/git/double_free_4/git_df_4.c:144:27: warning: use location
  144 |         struct ref *ret = alloc_ref(name);
      |                           ^
dot graph target line desend

dot graph target loc start # .MEM_68 = VDEF <.MEM_61>
ref_50 = calloc (1, _49);
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
   90 |         struct ref *ref = xcalloc(1, sizeof(struct ref) + prefixlen + len + 1);
      |                           ^
dot graph target loc end

dot graph target basicblock start from main basic block 14dot graph target basicblock en1

dot graph stmt start ret_40 = _71;
ref_50 = calloc (1, _49);
dot graph stmt end

dot graph stmt start ret_40 = _71;
./benchmarks/git/double_free_4/git_df_4.c:144:27: warning: use location
  144 |         struct ref *ret = alloc_ref(name);
      |                           ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

ref_42 = PHI <ret_40(14), ref_43(15)>
lto1: warning: use location
dot graph target loc start # .MEM_68 = VDEF <.MEM_61>
ref_50 = calloc (1, _49);
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
   90 |         struct ref *ref = xcalloc(1, sizeof(struct ref) + prefixlen + len + 1);
      |                           ^
dot graph target loc en1

dot graph target line desc form basic block 16: ref_42 = PHI <ret_40(14), ref_43(15)>
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_68 = VDEF <.MEM_61>
ref_50 = calloc (1, _49);
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 16dot graph target basicblock en1

dot graph stmt start ref_42 = PHI <ret_40(14), ref_43(15)>
ref_50 = calloc (1, _49);
dot graph stmt end

dot graph stmt start ref_42 = PHI <ret_40(14), ref_43(15)>
lto1: warning: use location
dot graph stmt end

this stmt have mutiple branch ---calloc-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

_45 = &ref_42->next;
./benchmarks/git/double_free_4/git_df_4.c:139:17: warning: use location
  139 |         *tail = &ref->next;
      |                 ^
dot graph target loc start # .MEM_68 = VDEF <.MEM_61>
ref_50 = calloc (1, _49);
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
   90 |         struct ref *ref = xcalloc(1, sizeof(struct ref) + prefixlen + len + 1);
      |                           ^
dot graph target loc en1

dot graph target line desc form basic block 17: _45 = &ref_42->next;
./benchmarks/git/double_free_4/git_df_4.c:139:17: warning: use location
  139 |         *tail = &ref->next;
      |                 ^
dot graph target line desend

dot graph target loc start # .MEM_68 = VDEF <.MEM_61>
ref_50 = calloc (1, _49);
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
   90 |         struct ref *ref = xcalloc(1, sizeof(struct ref) + prefixlen + len + 1);
      |                           ^
dot graph target loc end

dot graph target basicblock start from main basic block 17dot graph target basicblock en1

dot graph stmt start _45 = &ref_42->next;
ref_50 = calloc (1, _49);
dot graph stmt end

dot graph stmt start _45 = &ref_42->next;
./benchmarks/git/double_free_4/git_df_4.c:139:17: warning: use location
  139 |         *tail = &ref->next;
      |                 ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

remote_tail = _45;
./benchmarks/git/double_free_4/git_df_4.c:139:15: warning: use location
  139 |         *tail = &ref->next;
      |               ^
dot graph target loc start # .MEM_68 = VDEF <.MEM_61>
ref_50 = calloc (1, _49);
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
   90 |         struct ref *ref = xcalloc(1, sizeof(struct ref) + prefixlen + len + 1);
      |                           ^
dot graph target loc en1

dot graph target line desc form basic block 17: remote_tail = _45;
./benchmarks/git/double_free_4/git_df_4.c:139:15: warning: use location
  139 |         *tail = &ref->next;
      |               ^
dot graph target line desend

dot graph target loc start # .MEM_68 = VDEF <.MEM_61>
ref_50 = calloc (1, _49);
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
   90 |         struct ref *ref = xcalloc(1, sizeof(struct ref) + prefixlen + len + 1);
      |                           ^
dot graph target loc end

dot graph target basicblock start from main basic block 17dot graph target basicblock en1

dot graph stmt start remote_tail = _45;
ref_50 = calloc (1, _49);
dot graph stmt end

dot graph stmt start remote_tail = _45;
./benchmarks/git/double_free_4/git_df_4.c:139:15: warning: use location
  139 |         *tail = &ref->next;
      |               ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

_41 = remote_tail;
./benchmarks/git/double_free_4/git_df_4.c:136:10: warning: use location
  136 |         **tail = ref;
      |          ^
dot graph target loc start # .MEM_68 = VDEF <.MEM_61>
ref_50 = calloc (1, _49);
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
   90 |         struct ref *ref = xcalloc(1, sizeof(struct ref) + prefixlen + len + 1);
      |                           ^
dot graph target loc en1

dot graph target line desc form basic block 14: _41 = remote_tail;
./benchmarks/git/double_free_4/git_df_4.c:136:10: warning: use location
  136 |         **tail = ref;
      |          ^
dot graph target line desend

dot graph target loc start # .MEM_68 = VDEF <.MEM_61>
ref_50 = calloc (1, _49);
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
   90 |         struct ref *ref = xcalloc(1, sizeof(struct ref) + prefixlen + len + 1);
      |                           ^
dot graph target loc end

dot graph target basicblock start from main basic block 14dot graph target basicblock en1

dot graph stmt start _41 = remote_tail;
ref_50 = calloc (1, _49);
dot graph stmt end

dot graph stmt start _41 = remote_tail;
./benchmarks/git/double_free_4/git_df_4.c:136:10: warning: use location
  136 |         **tail = ref;
      |          ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

*_41 = ret_40;
./benchmarks/git/double_free_4/git_df_4.c:136:16: warning: use location
  136 |         **tail = ref;
      |                ^
dot graph target loc start # .MEM_68 = VDEF <.MEM_61>
ref_50 = calloc (1, _49);
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
   90 |         struct ref *ref = xcalloc(1, sizeof(struct ref) + prefixlen + len + 1);
      |                           ^
dot graph target loc en1

dot graph target line desc form basic block 14: *_41 = ret_40;
./benchmarks/git/double_free_4/git_df_4.c:136:16: warning: use location
  136 |         **tail = ref;
      |                ^
dot graph target line desend

dot graph target loc start # .MEM_68 = VDEF <.MEM_61>
ref_50 = calloc (1, _49);
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
   90 |         struct ref *ref = xcalloc(1, sizeof(struct ref) + prefixlen + len + 1);
      |                           ^
dot graph target loc end

dot graph target basicblock start from main basic block 14dot graph target basicblock en1

dot graph stmt start *_41 = ret_40;
ref_50 = calloc (1, _49);
dot graph stmt end

dot graph stmt start *_41 = ret_40;
./benchmarks/git/double_free_4/git_df_4.c:136:16: warning: use location
  136 |         **tail = ref;
      |                ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

_44 = ref_42->next;
./benchmarks/git/double_free_4/git_df_4.c:137:19: warning: use location
  137 |         while (ref->next)
      |                   ^
dot graph target loc start # .MEM_68 = VDEF <.MEM_61>
ref_50 = calloc (1, _49);
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
   90 |         struct ref *ref = xcalloc(1, sizeof(struct ref) + prefixlen + len + 1);
      |                           ^
dot graph target loc en1

dot graph target line desc form basic block 16: _44 = ref_42->next;
./benchmarks/git/double_free_4/git_df_4.c:137:19: warning: use location
  137 |         while (ref->next)
      |                   ^
dot graph target line desend

dot graph target loc start # .MEM_68 = VDEF <.MEM_61>
ref_50 = calloc (1, _49);
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
   90 |         struct ref *ref = xcalloc(1, sizeof(struct ref) + prefixlen + len + 1);
      |                           ^
dot graph target loc end

dot graph target basicblock start from main basic block 16dot graph target basicblock en1

dot graph stmt start _44 = ref_42->next;
ref_50 = calloc (1, _49);
dot graph stmt end

dot graph stmt start _44 = ref_42->next;
./benchmarks/git/double_free_4/git_df_4.c:137:19: warning: use location
  137 |         while (ref->next)
      |                   ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

if (_44 != 0B)
./benchmarks/git/double_free_4/git_df_4.c:137:16: warning: use location
  137 |         while (ref->next)
      |                ^
dot graph target loc start # .MEM_68 = VDEF <.MEM_61>
ref_50 = calloc (1, _49);
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
   90 |         struct ref *ref = xcalloc(1, sizeof(struct ref) + prefixlen + len + 1);
      |                           ^
dot graph target loc en1

dot graph target line desc form basic block 16: if (_44 != 0B)
./benchmarks/git/double_free_4/git_df_4.c:137:16: warning: use location
  137 |         while (ref->next)
      |                ^
dot graph target line desend

dot graph target loc start # .MEM_68 = VDEF <.MEM_61>
ref_50 = calloc (1, _49);
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
   90 |         struct ref *ref = xcalloc(1, sizeof(struct ref) + prefixlen + len + 1);
      |                           ^
dot graph target loc end

dot graph target basicblock start from main basic block 16dot graph target basicblock en1

dot graph stmt start if (_44 != 0B)
ref_50 = calloc (1, _49);
dot graph stmt end

dot graph stmt start if (_44 != 0B)
./benchmarks/git/double_free_4/git_df_4.c:137:16: warning: use location
  137 |         while (ref->next)
      |                ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

ref_43 = ref_42->next;
./benchmarks/git/double_free_4/git_df_4.c:138:21: warning: use location
  138 |                 ref = ref->next;
      |                     ^
dot graph target loc start # .MEM_68 = VDEF <.MEM_61>
ref_50 = calloc (1, _49);
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
   90 |         struct ref *ref = xcalloc(1, sizeof(struct ref) + prefixlen + len + 1);
      |                           ^
dot graph target loc en1

dot graph target line desc form basic block 15: ref_43 = ref_42->next;
./benchmarks/git/double_free_4/git_df_4.c:138:21: warning: use location
  138 |                 ref = ref->next;
      |                     ^
dot graph target line desend

dot graph target loc start # .MEM_68 = VDEF <.MEM_61>
ref_50 = calloc (1, _49);
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
   90 |         struct ref *ref = xcalloc(1, sizeof(struct ref) + prefixlen + len + 1);
      |                           ^
dot graph target loc end

dot graph target basicblock start from main basic block 15dot graph target basicblock en1

dot graph stmt start ref_43 = ref_42->next;
ref_50 = calloc (1, _49);
dot graph stmt end

dot graph stmt start ref_43 = ref_42->next;
./benchmarks/git/double_free_4/git_df_4.c:138:21: warning: use location
  138 |                 ref = ref->next;
      |                     ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

_74 = ret_40;
lto1: warning: use location
dot graph target loc start # .MEM_68 = VDEF <.MEM_61>
ref_50 = calloc (1, _49);
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
   90 |         struct ref *ref = xcalloc(1, sizeof(struct ref) + prefixlen + len + 1);
      |                           ^
dot graph target loc en1

dot graph target line desc form basic block 17: _74 = ret_40;
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_68 = VDEF <.MEM_61>
ref_50 = calloc (1, _49);
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 17dot graph target basicblock en1

dot graph stmt start _74 = ret_40;
ref_50 = calloc (1, _49);
dot graph stmt end

dot graph stmt start _74 = ret_40;
lto1: warning: use location
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

dst_peer_29 = _74;
./benchmarks/git/double_free_4/git_df_4.c:186:36: warning: use location
  186 |                         dst_peer = make_linked_ref(dst_name, dst_tail);
      |                                    ^
dot graph target loc start # .MEM_68 = VDEF <.MEM_61>
ref_50 = calloc (1, _49);
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
   90 |         struct ref *ref = xcalloc(1, sizeof(struct ref) + prefixlen + len + 1);
      |                           ^
dot graph target loc en1

dot graph target line desc form basic block 17: dst_peer_29 = _74;
./benchmarks/git/double_free_4/git_df_4.c:186:36: warning: use location
  186 |                         dst_peer = make_linked_ref(dst_name, dst_tail);
      |                                    ^
dot graph target line desend

dot graph target loc start # .MEM_68 = VDEF <.MEM_61>
ref_50 = calloc (1, _49);
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
   90 |         struct ref *ref = xcalloc(1, sizeof(struct ref) + prefixlen + len + 1);
      |                           ^
dot graph target loc end

dot graph target basicblock start from main basic block 17dot graph target basicblock en1

dot graph stmt start dst_peer_29 = _74;
ref_50 = calloc (1, _49);
dot graph stmt end

dot graph stmt start dst_peer_29 = _74;
./benchmarks/git/double_free_4/git_df_4.c:186:36: warning: use location
  186 |                         dst_peer = make_linked_ref(dst_name, dst_tail);
      |                                    ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

dst_peer_32 = PHI <dst_peer_24(9), dst_peer_29(17)>
lto1: warning: use location
dot graph target loc start # .MEM_68 = VDEF <.MEM_61>
ref_50 = calloc (1, _49);
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
   90 |         struct ref *ref = xcalloc(1, sizeof(struct ref) + prefixlen + len + 1);
      |                           ^
dot graph target loc en1

dot graph target line desc form basic block 18: dst_peer_32 = PHI <dst_peer_24(9), dst_peer_29(17)>
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_68 = VDEF <.MEM_61>
ref_50 = calloc (1, _49);
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 18dot graph target basicblock en1

dot graph stmt start dst_peer_32 = PHI <dst_peer_24(9), dst_peer_29(17)>
ref_50 = calloc (1, _49);
dot graph stmt end

dot graph stmt start dst_peer_32 = PHI <dst_peer_24(9), dst_peer_29(17)>
lto1: warning: use location
dot graph stmt end

this stmt have mutiple branch ---calloc-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

dst_peer_32->force = _33;
./benchmarks/git/double_free_4/git_df_4.c:190:33: warning: use location
  190 |                 dst_peer->force = pat->force;
      |                                 ^
dot graph target loc start # .MEM_68 = VDEF <.MEM_61>
ref_50 = calloc (1, _49);
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
   90 |         struct ref *ref = xcalloc(1, sizeof(struct ref) + prefixlen + len + 1);
      |                           ^
dot graph target loc en1

dot graph target line desc form basic block 18: dst_peer_32->force = _33;
./benchmarks/git/double_free_4/git_df_4.c:190:33: warning: use location
  190 |                 dst_peer->force = pat->force;
      |                                 ^
dot graph target line desend

dot graph target loc start # .MEM_68 = VDEF <.MEM_61>
ref_50 = calloc (1, _49);
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
   90 |         struct ref *ref = xcalloc(1, sizeof(struct ref) + prefixlen + len + 1);
      |                           ^
dot graph target loc end

dot graph target basicblock start from main basic block 18dot graph target basicblock en1

dot graph stmt start dst_peer_32->force = _33;
ref_50 = calloc (1, _49);
dot graph stmt end

dot graph stmt start dst_peer_32->force = _33;
./benchmarks/git/double_free_4/git_df_4.c:190:33: warning: use location
  190 |                 dst_peer->force = pat->force;
      |                                 ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

dst_peer_32->force = _33;
./benchmarks/git/double_free_4/git_df_4.c:190:33: warning: use location
dot graph target loc start # .MEM_68 = VDEF <.MEM_61>
ref_50 = calloc (1, _49);
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
   90 |         struct ref *ref = xcalloc(1, sizeof(struct ref) + prefixlen + len + 1);
      |                           ^
dot graph target loc en1

dot graph target line desc form basic block 18: dst_peer_32->force = _33;
./benchmarks/git/double_free_4/git_df_4.c:190:33: warning: use location
  190 |                 dst_peer->force = pat->force;
      |                                 ^
dot graph target line desend

dot graph target loc start # .MEM_68 = VDEF <.MEM_61>
ref_50 = calloc (1, _49);
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
   90 |         struct ref *ref = xcalloc(1, sizeof(struct ref) + prefixlen + len + 1);
      |                           ^
dot graph target loc end

dot graph target basicblock start from main basic block 18dot graph target basicblock en1

dot graph stmt start dst_peer_32->force = _33;
ref_50 = calloc (1, _49);
dot graph stmt end

dot graph stmt start dst_peer_32->force = _33;
./benchmarks/git/double_free_4/git_df_4.c:190:33: warning: use location
  190 |                 dst_peer->force = pat->force;
      |                                 ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

_33 = MEM[(const struct refspec *)0B].force;
./benchmarks/git/double_free_4/git_df_4.c:190:38: warning: use location
  190 |                 dst_peer->force = pat->force;
      |                                      ^
dot graph target loc start # .MEM_68 = VDEF <.MEM_61>
ref_50 = calloc (1, _49);
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
   90 |         struct ref *ref = xcalloc(1, sizeof(struct ref) + prefixlen + len + 1);
      |                           ^
dot graph target loc en1

dot graph target line desc form basic block 18: _33 = MEM[(const struct refspec *)0B].force;
./benchmarks/git/double_free_4/git_df_4.c:190:38: warning: use location
  190 |                 dst_peer->force = pat->force;
      |                                      ^
dot graph target line desend

dot graph target loc start # .MEM_68 = VDEF <.MEM_61>
ref_50 = calloc (1, _49);
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
   90 |         struct ref *ref = xcalloc(1, sizeof(struct ref) + prefixlen + len + 1);
      |                           ^
dot graph target loc end

dot graph target basicblock start from main basic block 18dot graph target basicblock en1

dot graph stmt start _33 = MEM[(const struct refspec *)0B].force;
ref_50 = calloc (1, _49);
dot graph stmt end

dot graph stmt start _33 = MEM[(const struct refspec *)0B].force;
./benchmarks/git/double_free_4/git_df_4.c:190:38: warning: use location
  190 |                 dst_peer->force = pat->force;
      |                                      ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

dst_peer_32->peer_ref = src_21;
./benchmarks/git/double_free_4/git_df_4.c:189:36: warning: use location
  189 |                 dst_peer->peer_ref = src;
      |                                    ^
dot graph target loc start # .MEM_68 = VDEF <.MEM_61>
ref_50 = calloc (1, _49);
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
   90 |         struct ref *ref = xcalloc(1, sizeof(struct ref) + prefixlen + len + 1);
      |                           ^
dot graph target loc en1

dot graph target line desc form basic block 18: dst_peer_32->peer_ref = src_21;
./benchmarks/git/double_free_4/git_df_4.c:189:36: warning: use location
  189 |                 dst_peer->peer_ref = src;
      |                                    ^
dot graph target line desend

dot graph target loc start # .MEM_68 = VDEF <.MEM_61>
ref_50 = calloc (1, _49);
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
   90 |         struct ref *ref = xcalloc(1, sizeof(struct ref) + prefixlen + len + 1);
      |                           ^
dot graph target loc end

dot graph target basicblock start from main basic block 18dot graph target basicblock en1

dot graph stmt start dst_peer_32->peer_ref = src_21;
ref_50 = calloc (1, _49);
dot graph stmt end

dot graph stmt start dst_peer_32->peer_ref = src_21;
./benchmarks/git/double_free_4/git_df_4.c:189:36: warning: use location
  189 |                 dst_peer->peer_ref = src;
      |                                    ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

src_34 = src_21->next;
./benchmarks/git/double_free_4/git_df_4.c:163:26: warning: use location
  163 |         for ( ; src; src = src->next) {
      |                          ^
dot graph target loc start # .MEM_68 = VDEF <.MEM_61>
ref_50 = calloc (1, _49);
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
   90 |         struct ref *ref = xcalloc(1, sizeof(struct ref) + prefixlen + len + 1);
      |                           ^
dot graph target loc en1

dot graph target line desc form basic block 20: src_34 = src_21->next;
./benchmarks/git/double_free_4/git_df_4.c:163:26: warning: use location
  163 |         for ( ; src; src = src->next) {
      |                          ^
dot graph target line desend

dot graph target loc start # .MEM_68 = VDEF <.MEM_61>
ref_50 = calloc (1, _49);
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
   90 |         struct ref *ref = xcalloc(1, sizeof(struct ref) + prefixlen + len + 1);
      |                           ^
dot graph target loc end

dot graph target basicblock start from main basic block 20dot graph target basicblock en1

dot graph stmt start src_34 = src_21->next;
ref_50 = calloc (1, _49);
dot graph stmt end

dot graph stmt start src_34 = src_21->next;
./benchmarks/git/double_free_4/git_df_4.c:163:26: warning: use location
  163 |         for ( ; src; src = src->next) {
      |                          ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

_30 = &src_21->new_sha1;
./benchmarks/git/double_free_4/git_df_4.c:187:56: warning: use location
  187 |                         hashcpy(dst_peer->new_sha1, src->new_sha1);
      |                                                        ^
dot graph target loc start # .MEM_68 = VDEF <.MEM_61>
ref_50 = calloc (1, _49);
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
   90 |         struct ref *ref = xcalloc(1, sizeof(struct ref) + prefixlen + len + 1);
      |                           ^
dot graph target loc en1

dot graph target line desc form basic block 17: _30 = &src_21->new_sha1;
./benchmarks/git/double_free_4/git_df_4.c:187:56: warning: use location
  187 |                         hashcpy(dst_peer->new_sha1, src->new_sha1);
      |                                                        ^
dot graph target line desend

dot graph target loc start # .MEM_68 = VDEF <.MEM_61>
ref_50 = calloc (1, _49);
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
   90 |         struct ref *ref = xcalloc(1, sizeof(struct ref) + prefixlen + len + 1);
      |                           ^
dot graph target loc end

dot graph target basicblock start from main basic block 17dot graph target basicblock en1

dot graph stmt start _30 = &src_21->new_sha1;
ref_50 = calloc (1, _49);
dot graph stmt end

dot graph stmt start _30 = &src_21->new_sha1;
./benchmarks/git/double_free_4/git_df_4.c:187:56: warning: use location
  187 |                         hashcpy(dst_peer->new_sha1, src->new_sha1);
      |                                                        ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

hashcpy (_31, _30);
./benchmarks/git/double_free_4/git_df_4.c:187:25: warning: use location
  187 |                         hashcpy(dst_peer->new_sha1, src->new_sha1);
      |                         ^
dot graph target loc start # .MEM_68 = VDEF <.MEM_61>
ref_50 = calloc (1, _49);
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
   90 |         struct ref *ref = xcalloc(1, sizeof(struct ref) + prefixlen + len + 1);
      |                           ^
dot graph target loc en1

dot graph target line desc form basic block 17: hashcpy (_31, _30);
./benchmarks/git/double_free_4/git_df_4.c:187:25: warning: use location
  187 |                         hashcpy(dst_peer->new_sha1, src->new_sha1);
      |                         ^
dot graph target line desend

dot graph target loc start # .MEM_68 = VDEF <.MEM_61>
ref_50 = calloc (1, _49);
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
   90 |         struct ref *ref = xcalloc(1, sizeof(struct ref) + prefixlen + len + 1);
      |                           ^
dot graph target loc end

dot graph target basicblock start from main basic block 17dot graph target basicblock en1

dot graph stmt start hashcpy (_31, _30);
ref_50 = calloc (1, _49);
dot graph stmt end

dot graph stmt start hashcpy (_31, _30);
./benchmarks/git/double_free_4/git_df_4.c:187:25: warning: use location
  187 |                         hashcpy(dst_peer->new_sha1, src->new_sha1);
      |                         ^
dot graph stmt end

this stmt call this function :hashcpy
trace fucntion name:hashcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

_23 = src_21->peer_ref;
./benchmarks/git/double_free_4/git_df_4.c:167:24: warning: use location
  167 |                 if (src->peer_ref)
      |                        ^
dot graph target loc start # .MEM_68 = VDEF <.MEM_61>
ref_50 = calloc (1, _49);
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
   90 |         struct ref *ref = xcalloc(1, sizeof(struct ref) + prefixlen + len + 1);
      |                           ^
dot graph target loc en1

dot graph target line desc form basic block 3: _23 = src_21->peer_ref;
./benchmarks/git/double_free_4/git_df_4.c:167:24: warning: use location
  167 |                 if (src->peer_ref)
      |                        ^
dot graph target line desend

dot graph target loc start # .MEM_68 = VDEF <.MEM_61>
ref_50 = calloc (1, _49);
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
   90 |         struct ref *ref = xcalloc(1, sizeof(struct ref) + prefixlen + len + 1);
      |                           ^
dot graph target loc end

dot graph target basicblock start from main basic block 3dot graph target basicblock en1

dot graph stmt start _23 = src_21->peer_ref;
ref_50 = calloc (1, _49);
dot graph stmt end

dot graph stmt start _23 = src_21->peer_ref;
./benchmarks/git/double_free_4/git_df_4.c:167:24: warning: use location
  167 |                 if (src->peer_ref)
      |                        ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

dst_name_22 = &src_21->name;
./benchmarks/git/double_free_4/git_df_4.c:166:23: warning: use location
  166 |                 char *dst_name = src->name;
      |                       ^
dot graph target loc start # .MEM_68 = VDEF <.MEM_61>
ref_50 = calloc (1, _49);
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
   90 |         struct ref *ref = xcalloc(1, sizeof(struct ref) + prefixlen + len + 1);
      |                           ^
dot graph target loc en1

dot graph target line desc form basic block 3: dst_name_22 = &src_21->name;
./benchmarks/git/double_free_4/git_df_4.c:166:23: warning: use location
  166 |                 char *dst_name = src->name;
      |                       ^
dot graph target line desend

dot graph target loc start # .MEM_68 = VDEF <.MEM_61>
ref_50 = calloc (1, _49);
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
   90 |         struct ref *ref = xcalloc(1, sizeof(struct ref) + prefixlen + len + 1);
      |                           ^
dot graph target loc end

dot graph target basicblock start from main basic block 3dot graph target basicblock en1

dot graph stmt start dst_name_22 = &src_21->name;
ref_50 = calloc (1, _49);
dot graph stmt end

dot graph stmt start dst_name_22 = &src_21->name;
./benchmarks/git/double_free_4/git_df_4.c:166:23: warning: use location
  166 |                 char *dst_name = src->name;
      |                       ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

len_47 = strlen (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:89:22: warning: use location
   89 |         size_t len = strlen(name);
      |                      ^
dot graph target loc start # .MEM_68 = VDEF <.MEM_61>
ref_50 = calloc (1, _49);
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
   90 |         struct ref *ref = xcalloc(1, sizeof(struct ref) + prefixlen + len + 1);
      |                           ^
dot graph target loc en1

dot graph target line desc form basic block 14: len_47 = strlen (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:89:22: warning: use location
   89 |         size_t len = strlen(name);
      |                      ^
dot graph target line desend

dot graph target loc start # .MEM_68 = VDEF <.MEM_61>
ref_50 = calloc (1, _49);
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
   90 |         struct ref *ref = xcalloc(1, sizeof(struct ref) + prefixlen + len + 1);
      |                           ^
dot graph target loc end

dot graph target basicblock start from main basic block 14dot graph target basicblock en1

dot graph stmt start len_47 = strlen (dst_name_22);
ref_50 = calloc (1, _49);
dot graph stmt end

dot graph stmt start len_47 = strlen (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:89:22: warning: use location
   89 |         size_t len = strlen(name);
      |                      ^
dot graph stmt end

this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

_48 = len_47;
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
   90 |         struct ref *ref = xcalloc(1, sizeof(struct ref) + prefixlen + len + 1);
      |                           ^
dot graph target loc start # .MEM_68 = VDEF <.MEM_61>
ref_50 = calloc (1, _49);
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 14: _48 = len_47;
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_68 = VDEF <.MEM_61>
ref_50 = calloc (1, _49);
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 14dot graph target basicblock en1

dot graph stmt start _48 = len_47;
ref_50 = calloc (1, _49);
dot graph stmt end

dot graph stmt start _48 = len_47;
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

_49 = _48 + 81;
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
dot graph target loc start # .MEM_68 = VDEF <.MEM_61>
ref_50 = calloc (1, _49);
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 14: _49 = _48 + 81;
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_68 = VDEF <.MEM_61>
ref_50 = calloc (1, _49);
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 14dot graph target basicblock en1

dot graph stmt start _49 = _48 + 81;
ref_50 = calloc (1, _49);
dot graph stmt end

dot graph stmt start _49 = _48 + 81;
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_68 = VDEF <.MEM_61>
ref_50 = calloc (1, _49);
dot graph entry main
dot graph target entry end

ref_50 = calloc (1, _49);
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
dot graph target loc start # .MEM_68 = VDEF <.MEM_61>
ref_50 = calloc (1, _49);
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 14: ref_50 = calloc (1, _49);
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_68 = VDEF <.MEM_61>
ref_50 = calloc (1, _49);
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 14dot graph target basicblock en1

dot graph stmt start ref_50 = calloc (1, _49);
ref_50 = calloc (1, _49);
dot graph stmt end

dot graph stmt start ref_50 = calloc (1, _49);
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
dot graph stmt end

this stmt call this function :calloc

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

memcpy (_53, dst_name_22, len_47);
./benchmarks/git/double_free_4/git_df_4.c:92:9: warning: use location
   92 |         memcpy(ref->name + prefixlen, name, len);
      |         ^
dot graph target loc start # .MEM_68 = VDEF <.MEM_61>
ref_50 = calloc (1, _49);
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
   90 |         struct ref *ref = xcalloc(1, sizeof(struct ref) + prefixlen + len + 1);
      |                           ^
dot graph target loc en1

dot graph target line desc form basic block 14: memcpy (_53, dst_name_22, len_47);
./benchmarks/git/double_free_4/git_df_4.c:92:9: warning: use location
   92 |         memcpy(ref->name + prefixlen, name, len);
      |         ^
dot graph target line desend

dot graph target loc start # .MEM_68 = VDEF <.MEM_61>
ref_50 = calloc (1, _49);
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
   90 |         struct ref *ref = xcalloc(1, sizeof(struct ref) + prefixlen + len + 1);
      |                           ^
dot graph target loc end

dot graph target basicblock start from main basic block 14dot graph target basicblock en1

dot graph stmt start memcpy (_53, dst_name_22, len_47);
ref_50 = calloc (1, _49);
dot graph stmt end

dot graph stmt start memcpy (_53, dst_name_22, len_47);
./benchmarks/git/double_free_4/git_df_4.c:92:9: warning: use location
   92 |         memcpy(ref->name + prefixlen, name, len);
      |         ^
dot graph stmt end

this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

_37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target loc start # .MEM_68 = VDEF <.MEM_61>
ref_50 = calloc (1, _49);
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
   90 |         struct ref *ref = xcalloc(1, sizeof(struct ref) + prefixlen + len + 1);
      |                           ^
dot graph target loc en1

dot graph target line desc form basic block 5: _37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph target line desend

dot graph target loc start # .MEM_68 = VDEF <.MEM_61>
ref_50 = calloc (1, _49);
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
   90 |         struct ref *ref = xcalloc(1, sizeof(struct ref) + prefixlen + len + 1);
      |                           ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start _37 = strcmp (_36, dst_name_22);
ref_50 = calloc (1, _49);
dot graph stmt end

dot graph stmt start _37 = strcmp (_36, dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:81:14: warning: use location
   81 |         if (!strcmp(list->name, name))
      |              ^
dot graph stmt end

this stmt call this function :strcmp
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

if (_37 == 0)
./benchmarks/git/double_free_4/git_df_4.c:81:12: warning: use location
   81 |         if (!strcmp(list->name, name))
      |            ^
dot graph target loc start # .MEM_68 = VDEF <.MEM_61>
ref_50 = calloc (1, _49);
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
   90 |         struct ref *ref = xcalloc(1, sizeof(struct ref) + prefixlen + len + 1);
      |                           ^
dot graph target loc en1

dot graph target line desc form basic block 5: if (_37 == 0)
./benchmarks/git/double_free_4/git_df_4.c:81:12: warning: use location
   81 |         if (!strcmp(list->name, name))
      |            ^
dot graph target line desend

dot graph target loc start # .MEM_68 = VDEF <.MEM_61>
ref_50 = calloc (1, _49);
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
   90 |         struct ref *ref = xcalloc(1, sizeof(struct ref) + prefixlen + len + 1);
      |                           ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start if (_37 == 0)
ref_50 = calloc (1, _49);
dot graph stmt end

dot graph stmt start if (_37 == 0)
./benchmarks/git/double_free_4/git_df_4.c:81:12: warning: use location
   81 |         if (!strcmp(list->name, name))
      |            ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

free (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:192:17: warning: use location
  192 |                 free(dst_name);
      |                 ^
dot graph target loc start # .MEM_68 = VDEF <.MEM_61>
ref_50 = calloc (1, _49);
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
   90 |         struct ref *ref = xcalloc(1, sizeof(struct ref) + prefixlen + len + 1);
      |                           ^
dot graph target loc en1

dot graph target line desc form basic block 19: free (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:192:17: warning: use location
  192 |                 free(dst_name);
      |                 ^
dot graph target line desend

dot graph target loc start # .MEM_68 = VDEF <.MEM_61>
ref_50 = calloc (1, _49);
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
   90 |         struct ref *ref = xcalloc(1, sizeof(struct ref) + prefixlen + len + 1);
      |                           ^
dot graph target loc end

dot graph target basicblock start from main basic block 19dot graph target basicblock en1

dot graph stmt start free (dst_name_22);
ref_50 = calloc (1, _49);
dot graph stmt end

dot graph stmt start free (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:192:17: warning: use location
  192 |                 free(dst_name);
      |                 ^
dot graph stmt end

dot graph target color descgreendot graph target color desend

this stmt call this function :free

 ================== find free stmt ================== 
free (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:192:17: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

_31 = &dst_peer_29->new_sha1;
./benchmarks/git/double_free_4/git_df_4.c:187:41: warning: use location
  187 |                         hashcpy(dst_peer->new_sha1, src->new_sha1);
      |                                         ^
dot graph target loc start # .MEM_68 = VDEF <.MEM_61>
ref_50 = calloc (1, _49);
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
   90 |         struct ref *ref = xcalloc(1, sizeof(struct ref) + prefixlen + len + 1);
      |                           ^
dot graph target loc en1

dot graph target line desc form basic block 17: _31 = &dst_peer_29->new_sha1;
./benchmarks/git/double_free_4/git_df_4.c:187:41: warning: use location
  187 |                         hashcpy(dst_peer->new_sha1, src->new_sha1);
      |                                         ^
dot graph target line desend

dot graph target loc start # .MEM_68 = VDEF <.MEM_61>
ref_50 = calloc (1, _49);
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
   90 |         struct ref *ref = xcalloc(1, sizeof(struct ref) + prefixlen + len + 1);
      |                           ^
dot graph target loc end

dot graph target basicblock start from main basic block 17dot graph target basicblock en1

dot graph stmt start _31 = &dst_peer_29->new_sha1;
ref_50 = calloc (1, _49);
dot graph stmt end

dot graph stmt start _31 = &dst_peer_29->new_sha1;
./benchmarks/git/double_free_4/git_df_4.c:187:41: warning: use location
  187 |                         hashcpy(dst_peer->new_sha1, src->new_sha1);
      |                                         ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

_52 = &ref_50->name;
./benchmarks/git/double_free_4/git_df_4.c:92:16: warning: use location
   92 |         memcpy(ref->name + prefixlen, name, len);
      |                ^
dot graph target loc start # .MEM_68 = VDEF <.MEM_61>
ref_50 = calloc (1, _49);
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
   90 |         struct ref *ref = xcalloc(1, sizeof(struct ref) + prefixlen + len + 1);
      |                           ^
dot graph target loc en1

dot graph target line desc form basic block 14: _52 = &ref_50->name;
./benchmarks/git/double_free_4/git_df_4.c:92:16: warning: use location
   92 |         memcpy(ref->name + prefixlen, name, len);
      |                ^
dot graph target line desend

dot graph target loc start # .MEM_68 = VDEF <.MEM_61>
ref_50 = calloc (1, _49);
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
   90 |         struct ref *ref = xcalloc(1, sizeof(struct ref) + prefixlen + len + 1);
      |                           ^
dot graph target loc end

dot graph target basicblock start from main basic block 14dot graph target basicblock en1

dot graph stmt start _52 = &ref_50->name;
ref_50 = calloc (1, _49);
dot graph stmt end

dot graph stmt start _52 = &ref_50->name;
./benchmarks/git/double_free_4/git_df_4.c:92:16: warning: use location
   92 |         memcpy(ref->name + prefixlen, name, len);
      |                ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

_51 = &ref_50->name;
./benchmarks/git/double_free_4/git_df_4.c:91:19: warning: use location
   91 |         memcpy(ref->name, prefix, prefixlen);
      |                   ^
dot graph target loc start # .MEM_68 = VDEF <.MEM_61>
ref_50 = calloc (1, _49);
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
   90 |         struct ref *ref = xcalloc(1, sizeof(struct ref) + prefixlen + len + 1);
      |                           ^
dot graph target loc en1

dot graph target line desc form basic block 14: _51 = &ref_50->name;
./benchmarks/git/double_free_4/git_df_4.c:91:19: warning: use location
   91 |         memcpy(ref->name, prefix, prefixlen);
      |                   ^
dot graph target line desend

dot graph target loc start # .MEM_68 = VDEF <.MEM_61>
ref_50 = calloc (1, _49);
./benchmarks/git/double_free_4/git_df_4.c:90:27: warning: use location
   90 |         struct ref *ref = xcalloc(1, sizeof(struct ref) + prefixlen + len + 1);
      |                           ^
dot graph target loc end

dot graph target basicblock start from main basic block 14dot graph target basicblock en1

dot graph stmt start _51 = &ref_50->name;
ref_50 = calloc (1, _49);
dot graph stmt end

dot graph stmt start _51 = &ref_50->name;
./benchmarks/git/double_free_4/git_df_4.c:91:19: warning: use location
   91 |         memcpy(ref->name, prefix, prefixlen);
      |                   ^
dot graph stmt end

dot graph target basicblock start from main basic block 20dot graph target basicblock en1

dot graph arrowsubgraph cluster_1684992674 dot graph subgraph  src_34 = src_21->next;
src_21 = PHI <local_refs_12(2), src_34(20)>
dot graph subgrapend


 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f89e0299090
    type <pointer_type 0x7f89e026e738
        type <record_type 0x7f89e026e690 ref BLK
            size <integer_cst 0x7f89e082b0a8 constant 640>
            unit-size <integer_cst 0x7f89e0265738 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f89e026e690 fields <field_decl 0x7f89e0271850 next> context <translation_unit_decl 0x7f89e0761168 ./benchmarks/git/double_free_4/git_df_4.c>
            pointer_to_this <pointer_type 0x7f89e026e738>>
        public unsigned DI
        size <integer_cst 0x7f89e0756bb8 constant 64>
        unit-size <integer_cst 0x7f89e0756bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f89e026e7e0>>
    var <var_decl 0x7f89e0294d80 ref>
    def_stmt ref_50 = calloc (1, _49);
    version:50
    ptr-info 0x7f89e02879a8>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_59>
free (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:192:17: warning: use location
  192 |                 free(dst_name);
      |                 ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_78 = VDEF <.MEM_59>
free (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:192:17: warning: free in this location

===== possiable asias =====
ref_42 = PHI <ret_40(14), ref_43(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_59>
free (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:192:17: warning: free in this location

===== possiable asias =====
ref_42 = PHI <ret_40(14), ref_43(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_59>
free (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:192:17: warning: free in this location

===== possiable asias =====
dst_peer_32 = PHI <dst_peer_24(9), dst_peer_29(17)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_59>
free (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:192:17: warning: free in this location

===== possiable asias =====
dst_peer_32 = PHI <dst_peer_24(9), dst_peer_29(17)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_78 = VDEF <.MEM_59>
free (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:192:17: warning: free in this location

===== possiable asias =====
# VUSE <.MEM_60>
src_34 = src_21->next;
./benchmarks/git/double_free_4/git_df_4.c:163:26: warning: use location
  163 |         for ( ; src; src = src->next) {
      |                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_59>
free (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:192:17: warning: free in this location
  192 |                 free(dst_name);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_60>
src_34 = src_21->next;
./benchmarks/git/double_free_4/git_df_4.c:163:26: warning: use location
  163 |         for ( ; src; src = src->next) {
      |                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f89e0299168
    type <pointer_type 0x7f89e0772000
        type <void_type 0x7f89e076bf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f89e0772000>>
        public unsigned DI
        size <integer_cst 0x7f89e0756bb8 constant 64>
        unit-size <integer_cst 0x7f89e0756bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f89e07779d8>>
   
    def_stmt _53 = _52;
    version:53
    ptr-info 0x7f89e02879f0>
 <ssa_name 0x7f89e0299168
    type <pointer_type 0x7f89e0772000
        type <void_type 0x7f89e076bf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f89e0772000>>
        public unsigned DI
        size <integer_cst 0x7f89e0756bb8 constant 64>
        unit-size <integer_cst 0x7f89e0756bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f89e07779d8>>
   
    def_stmt _53 = _52;
    version:53
    ptr-info 0x7f89e02879f0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f89e0299168
    type <pointer_type 0x7f89e0772000
        type <void_type 0x7f89e076bf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f89e0772000>>
        public unsigned DI
        size <integer_cst 0x7f89e0756bb8 constant 64>
        unit-size <integer_cst 0x7f89e0756bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f89e07779d8>>
   
    def_stmt _53 = _52;
    version:53
    ptr-info 0x7f89e02879f0>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_69 = VDEF <.MEM_68>
memcpy (_53, dst_name_22, len_47);
dot graph entry main
dot graph target entry end

memcpy (_53, dst_name_22, len_47);
./benchmarks/git/double_free_4/git_df_4.c:92:9: warning: use location
   92 |         memcpy(ref->name + prefixlen, name, len);
      |         ^
dot graph target loc start # .MEM_69 = VDEF <.MEM_68>
memcpy (_53, dst_name_22, len_47);
./benchmarks/git/double_free_4/git_df_4.c:92:9: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 14: memcpy (_53, dst_name_22, len_47);
./benchmarks/git/double_free_4/git_df_4.c:92:9: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_69 = VDEF <.MEM_68>
memcpy (_53, dst_name_22, len_47);
./benchmarks/git/double_free_4/git_df_4.c:92:9: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 14dot graph target basicblock en1

dot graph stmt start memcpy (_53, dst_name_22, len_47);
memcpy (_53, dst_name_22, len_47);
dot graph stmt end

dot graph stmt start memcpy (_53, dst_name_22, len_47);
./benchmarks/git/double_free_4/git_df_4.c:92:9: warning: use location
dot graph stmt end

this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_69 = VDEF <.MEM_68>
memcpy (_53, dst_name_22, len_47);
dot graph entry main
dot graph target entry end

memcpy (_53, dst_name_22, len_47);
./benchmarks/git/double_free_4/git_df_4.c:92:9: warning: use location
dot graph target loc start # .MEM_69 = VDEF <.MEM_68>
memcpy (_53, dst_name_22, len_47);
./benchmarks/git/double_free_4/git_df_4.c:92:9: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 14: memcpy (_53, dst_name_22, len_47);
./benchmarks/git/double_free_4/git_df_4.c:92:9: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_69 = VDEF <.MEM_68>
memcpy (_53, dst_name_22, len_47);
./benchmarks/git/double_free_4/git_df_4.c:92:9: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 14dot graph target basicblock en1

dot graph stmt start memcpy (_53, dst_name_22, len_47);
memcpy (_53, dst_name_22, len_47);
dot graph stmt end

dot graph stmt start memcpy (_53, dst_name_22, len_47);
./benchmarks/git/double_free_4/git_df_4.c:92:9: warning: use location
dot graph stmt end

this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
dot graph target basicblock start from main basic block 14dot graph target basicblock en1

dot graph arrowsubgraph cluster_1739572514 dot graph subgraph  memcpy (_53, dst_name_22, len_47);
_53 = _52;
dot graph subgrapend

dot graph target basicblock start from main basic block 14dot graph target basicblock en1

dot graph arrowsubgraph cluster_1875704877 dot graph subgraph  memcpy (_53, dst_name_22, len_47);
_53 = _52;
dot graph subgrapend


 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f89e0299168
    type <pointer_type 0x7f89e0772000
        type <void_type 0x7f89e076bf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f89e0772000>>
        public unsigned DI
        size <integer_cst 0x7f89e0756bb8 constant 64>
        unit-size <integer_cst 0x7f89e0756bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f89e07779d8>>
   
    def_stmt _53 = _52;
    version:53
    ptr-info 0x7f89e02879f0>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_59>
free (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:192:17: warning: use location
  192 |                 free(dst_name);
      |                 ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f89e028e318
    type <pointer_type 0x7f89e027b5e8
        type <array_type 0x7f89e026e5e8 type <integer_type 0x7f89e076b348 unsigned char>
            BLK
            size <integer_cst 0x7f89e0265810 constant 160>
            unit-size <integer_cst 0x7f89e02657f8 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f89e026e540>
            pointer_to_this <pointer_type 0x7f89e027b5e8>>
        unsigned DI
        size <integer_cst 0x7f89e0756bb8 constant 64>
        unit-size <integer_cst 0x7f89e0756bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _31 = &dst_peer_29->new_sha1;
    version:31
    ptr-info 0x7f89e0287858>
 <ssa_name 0x7f89e028e318
    type <pointer_type 0x7f89e027b5e8
        type <array_type 0x7f89e026e5e8 type <integer_type 0x7f89e076b348 unsigned char>
            BLK
            size <integer_cst 0x7f89e0265810 constant 160>
            unit-size <integer_cst 0x7f89e02657f8 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f89e026e540>
            pointer_to_this <pointer_type 0x7f89e027b5e8>>
        unsigned DI
        size <integer_cst 0x7f89e0756bb8 constant 64>
        unit-size <integer_cst 0x7f89e0756bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _31 = &dst_peer_29->new_sha1;
    version:31
    ptr-info 0x7f89e0287858>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f89e028e318
    type <pointer_type 0x7f89e027b5e8
        type <array_type 0x7f89e026e5e8 type <integer_type 0x7f89e076b348 unsigned char>
            BLK
            size <integer_cst 0x7f89e0265810 constant 160>
            unit-size <integer_cst 0x7f89e02657f8 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f89e026e540>
            pointer_to_this <pointer_type 0x7f89e027b5e8>>
        unsigned DI
        size <integer_cst 0x7f89e0756bb8 constant 64>
        unit-size <integer_cst 0x7f89e0756bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _31 = &dst_peer_29->new_sha1;
    version:31
    ptr-info 0x7f89e0287858>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_75 = VDEF <.MEM_73>
hashcpy (_31, _30);
dot graph entry main
dot graph target entry end

hashcpy (_31, _30);
./benchmarks/git/double_free_4/git_df_4.c:187:25: warning: use location
  187 |                         hashcpy(dst_peer->new_sha1, src->new_sha1);
      |                         ^
dot graph target loc start # .MEM_75 = VDEF <.MEM_73>
hashcpy (_31, _30);
./benchmarks/git/double_free_4/git_df_4.c:187:25: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 17: hashcpy (_31, _30);
./benchmarks/git/double_free_4/git_df_4.c:187:25: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_75 = VDEF <.MEM_73>
hashcpy (_31, _30);
./benchmarks/git/double_free_4/git_df_4.c:187:25: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 17dot graph target basicblock en1

dot graph stmt start hashcpy (_31, _30);
hashcpy (_31, _30);
dot graph stmt end

dot graph stmt start hashcpy (_31, _30);
./benchmarks/git/double_free_4/git_df_4.c:187:25: warning: use location
dot graph stmt end

this stmt call this function :hashcpy
trace fucntion name:hashcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_75 = VDEF <.MEM_73>
hashcpy (_31, _30);
dot graph entry main
dot graph target entry end

hashcpy (_31, _30);
./benchmarks/git/double_free_4/git_df_4.c:187:25: warning: use location
dot graph target loc start # .MEM_75 = VDEF <.MEM_73>
hashcpy (_31, _30);
./benchmarks/git/double_free_4/git_df_4.c:187:25: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 17: hashcpy (_31, _30);
./benchmarks/git/double_free_4/git_df_4.c:187:25: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_75 = VDEF <.MEM_73>
hashcpy (_31, _30);
./benchmarks/git/double_free_4/git_df_4.c:187:25: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 17dot graph target basicblock en1

dot graph stmt start hashcpy (_31, _30);
hashcpy (_31, _30);
dot graph stmt end

dot graph stmt start hashcpy (_31, _30);
./benchmarks/git/double_free_4/git_df_4.c:187:25: warning: use location
dot graph stmt end

this stmt call this function :hashcpy
trace fucntion name:hashcpy 

 ================== trace ================== 
trace fucntion free:0 
dot graph target basicblock start from main basic block 17dot graph target basicblock en1

dot graph arrowsubgraph cluster_1683225143 dot graph subgraph  hashcpy (_31, _30);
_31 = &dst_peer_29->new_sha1;
dot graph subgrapend

dot graph target basicblock start from main basic block 17dot graph target basicblock en1

dot graph arrowsubgraph cluster_1295671710 dot graph subgraph  hashcpy (_31, _30);
_31 = &dst_peer_29->new_sha1;
dot graph subgrapend


 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f89e028e318
    type <pointer_type 0x7f89e027b5e8
        type <array_type 0x7f89e026e5e8 type <integer_type 0x7f89e076b348 unsigned char>
            BLK
            size <integer_cst 0x7f89e0265810 constant 160>
            unit-size <integer_cst 0x7f89e02657f8 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f89e026e540>
            pointer_to_this <pointer_type 0x7f89e027b5e8>>
        unsigned DI
        size <integer_cst 0x7f89e0756bb8 constant 64>
        unit-size <integer_cst 0x7f89e0756bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _31 = &dst_peer_29->new_sha1;
    version:31
    ptr-info 0x7f89e0287858>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_59>
free (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:192:17: warning: use location
  192 |                 free(dst_name);
      |                 ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f89e028e2d0
    type <pointer_type 0x7f89e027b5e8
        type <array_type 0x7f89e026e5e8 type <integer_type 0x7f89e076b348 unsigned char>
            BLK
            size <integer_cst 0x7f89e0265810 constant 160>
            unit-size <integer_cst 0x7f89e02657f8 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f89e026e540>
            pointer_to_this <pointer_type 0x7f89e027b5e8>>
        unsigned DI
        size <integer_cst 0x7f89e0756bb8 constant 64>
        unit-size <integer_cst 0x7f89e0756bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _30 = &src_21->new_sha1;
    version:30
    ptr-info 0x7f89e0287840>
 <ssa_name 0x7f89e028e2d0
    type <pointer_type 0x7f89e027b5e8
        type <array_type 0x7f89e026e5e8 type <integer_type 0x7f89e076b348 unsigned char>
            BLK
            size <integer_cst 0x7f89e0265810 constant 160>
            unit-size <integer_cst 0x7f89e02657f8 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f89e026e540>
            pointer_to_this <pointer_type 0x7f89e027b5e8>>
        unsigned DI
        size <integer_cst 0x7f89e0756bb8 constant 64>
        unit-size <integer_cst 0x7f89e0756bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _30 = &src_21->new_sha1;
    version:30
    ptr-info 0x7f89e0287840>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f89e028e2d0
    type <pointer_type 0x7f89e027b5e8
        type <array_type 0x7f89e026e5e8 type <integer_type 0x7f89e076b348 unsigned char>
            BLK
            size <integer_cst 0x7f89e0265810 constant 160>
            unit-size <integer_cst 0x7f89e02657f8 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f89e026e540>
            pointer_to_this <pointer_type 0x7f89e027b5e8>>
        unsigned DI
        size <integer_cst 0x7f89e0756bb8 constant 64>
        unit-size <integer_cst 0x7f89e0756bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _30 = &src_21->new_sha1;
    version:30
    ptr-info 0x7f89e0287840>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_75 = VDEF <.MEM_73>
hashcpy (_31, _30);
dot graph entry main
dot graph target entry end

hashcpy (_31, _30);
./benchmarks/git/double_free_4/git_df_4.c:187:25: warning: use location
  187 |                         hashcpy(dst_peer->new_sha1, src->new_sha1);
      |                         ^
dot graph target loc start # .MEM_75 = VDEF <.MEM_73>
hashcpy (_31, _30);
./benchmarks/git/double_free_4/git_df_4.c:187:25: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 17: hashcpy (_31, _30);
./benchmarks/git/double_free_4/git_df_4.c:187:25: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_75 = VDEF <.MEM_73>
hashcpy (_31, _30);
./benchmarks/git/double_free_4/git_df_4.c:187:25: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 17dot graph target basicblock en1

dot graph stmt start hashcpy (_31, _30);
hashcpy (_31, _30);
dot graph stmt end

dot graph stmt start hashcpy (_31, _30);
./benchmarks/git/double_free_4/git_df_4.c:187:25: warning: use location
dot graph stmt end

this stmt call this function :hashcpy
trace fucntion name:hashcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_75 = VDEF <.MEM_73>
hashcpy (_31, _30);
dot graph entry main
dot graph target entry end

hashcpy (_31, _30);
./benchmarks/git/double_free_4/git_df_4.c:187:25: warning: use location
dot graph target loc start # .MEM_75 = VDEF <.MEM_73>
hashcpy (_31, _30);
./benchmarks/git/double_free_4/git_df_4.c:187:25: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 17: hashcpy (_31, _30);
./benchmarks/git/double_free_4/git_df_4.c:187:25: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_75 = VDEF <.MEM_73>
hashcpy (_31, _30);
./benchmarks/git/double_free_4/git_df_4.c:187:25: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 17dot graph target basicblock en1

dot graph stmt start hashcpy (_31, _30);
hashcpy (_31, _30);
dot graph stmt end

dot graph stmt start hashcpy (_31, _30);
./benchmarks/git/double_free_4/git_df_4.c:187:25: warning: use location
dot graph stmt end

this stmt call this function :hashcpy
trace fucntion name:hashcpy 

 ================== trace ================== 
trace fucntion free:0 
dot graph target basicblock start from main basic block 17dot graph target basicblock en1

dot graph arrowsubgraph cluster_796003769 dot graph subgraph  hashcpy (_31, _30);
_30 = &src_21->new_sha1;
dot graph subgrapend

dot graph target basicblock start from main basic block 17dot graph target basicblock en1

dot graph arrowsubgraph cluster_694238837 dot graph subgraph  hashcpy (_31, _30);
_30 = &src_21->new_sha1;
dot graph subgrapend


 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f89e028e2d0
    type <pointer_type 0x7f89e027b5e8
        type <array_type 0x7f89e026e5e8 type <integer_type 0x7f89e076b348 unsigned char>
            BLK
            size <integer_cst 0x7f89e0265810 constant 160>
            unit-size <integer_cst 0x7f89e02657f8 constant 20>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f89e026e540>
            pointer_to_this <pointer_type 0x7f89e027b5e8>>
        unsigned DI
        size <integer_cst 0x7f89e0756bb8 constant 64>
        unit-size <integer_cst 0x7f89e0756bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _30 = &src_21->new_sha1;
    version:30
    ptr-info 0x7f89e0287840>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_59>
free (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:192:17: warning: use location
  192 |                 free(dst_name);
      |                 ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <string_cst 0x7f89e027d2d0
    type <array_type 0x7f89e027bdc8
        type <integer_type 0x7f89e026ebd0 char public QI
            size <integer_cst 0x7f89e0756ca8 constant 8>
            unit-size <integer_cst 0x7f89e0756cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f89e076b3f0 precision:8 min <integer_cst 0x7f89e0265720 -128> max <integer_cst 0x7f89e0265708 127>
            pointer_to_this <pointer_type 0x7f89e026ec78>>
        BLK
        size <integer_cst 0x7f89e0265918 constant 432>
        unit-size <integer_cst 0x7f89e0265990 constant 54>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f89e027bd20 type <integer_type 0x7f89e076b000 sizetype>
            DI
            size <integer_cst 0x7f89e0756bb8 constant 64>
            unit-size <integer_cst 0x7f89e0756bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f89e076b738 precision:64 min <integer_cst 0x7f89e0756be8 0> max <integer_cst 0x7f89e0265978 53>>
        pointer_to_this <pointer_type 0x7f89e027be70>>
    readonly constant static "No refs in common and none specified; doing nothing.\012\000">

dot graph START

======================================================================
 <ssa_name 0x7f89e075e750
    type <pointer_type 0x7f89e0276a80
        type <record_type 0x7f89e02769d8 FILE BLK
            size <integer_cst 0x7f89e0265840 constant 1728>
            unit-size <integer_cst 0x7f89e0265900 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f89e0276930 fields <field_decl 0x7f89e0277a18 _flags> context <translation_unit_decl 0x7f89e0761168 ./benchmarks/git/double_free_4/git_df_4.c>
            pointer_to_this <pointer_type 0x7f89e0276a80>>
        unsigned DI
        size <integer_cst 0x7f89e0756bb8 constant 64>
        unit-size <integer_cst 0x7f89e0756bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f89e027bbd0>>
   
    def_stmt _6 = stderr;
    version:6
    ptr-info 0x7f89e0287750>
 <ssa_name 0x7f89e075e750
    type <pointer_type 0x7f89e0276a80
        type <record_type 0x7f89e02769d8 FILE BLK
            size <integer_cst 0x7f89e0265840 constant 1728>
            unit-size <integer_cst 0x7f89e0265900 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f89e0276930 fields <field_decl 0x7f89e0277a18 _flags> context <translation_unit_decl 0x7f89e0761168 ./benchmarks/git/double_free_4/git_df_4.c>
            pointer_to_this <pointer_type 0x7f89e0276a80>>
        unsigned DI
        size <integer_cst 0x7f89e0756bb8 constant 64>
        unit-size <integer_cst 0x7f89e0756bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f89e027bbd0>>
   
    def_stmt _6 = stderr;
    version:6
    ptr-info 0x7f89e0287750>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f89e075e750
    type <pointer_type 0x7f89e0276a80
        type <record_type 0x7f89e02769d8 FILE BLK
            size <integer_cst 0x7f89e0265840 constant 1728>
            unit-size <integer_cst 0x7f89e0265900 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f89e0276930 fields <field_decl 0x7f89e0277a18 _flags> context <translation_unit_decl 0x7f89e0761168 ./benchmarks/git/double_free_4/git_df_4.c>
            pointer_to_this <pointer_type 0x7f89e0276a80>>
        unsigned DI
        size <integer_cst 0x7f89e0756bb8 constant 64>
        unit-size <integer_cst 0x7f89e0756bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f89e027bbd0>>
   
    def_stmt _6 = stderr;
    version:6
    ptr-info 0x7f89e0287750>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_18 = VDEF <.MEM_61>
__builtin_fwrite ("No refs in common and none specified; doing nothing.\n", 1, 53, _6);
dot graph entry main
dot graph target entry end

__builtin_fwrite ("No refs in common and none specified; doing nothing.\n", 1, 53, _6);
./benchmarks/git/double_free_4/git_df_4.c:225:17: warning: use location
  225 |                 fprintf(stderr, "No refs in common and none specified; doing nothing.\n");
      |                 ^
dot graph target loc start # .MEM_18 = VDEF <.MEM_61>
__builtin_fwrite ("No refs in common and none specified; doing nothing.\n", 1, 53, _6);
./benchmarks/git/double_free_4/git_df_4.c:225:17: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 25: __builtin_fwrite ("No refs in common and none specified; doing nothing.\n", 1, 53, _6);
./benchmarks/git/double_free_4/git_df_4.c:225:17: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_18 = VDEF <.MEM_61>
__builtin_fwrite ("No refs in common and none specified; doing nothing.\n", 1, 53, _6);
./benchmarks/git/double_free_4/git_df_4.c:225:17: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 25dot graph target basicblock en1

dot graph stmt start __builtin_fwrite ("No refs in common and none specified; doing nothing.\n", 1, 53, _6);
__builtin_fwrite ("No refs in common and none specified; doing nothing.\n", 1, 53, _6);
dot graph stmt end

dot graph stmt start __builtin_fwrite ("No refs in common and none specified; doing nothing.\n", 1, 53, _6);
./benchmarks/git/double_free_4/git_df_4.c:225:17: warning: use location
dot graph stmt end

this stmt call this function :__builtin_fwrite
trace fucntion name:__builtin_fwrite 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_18 = VDEF <.MEM_61>
__builtin_fwrite ("No refs in common and none specified; doing nothing.\n", 1, 53, _6);
dot graph entry main
dot graph target entry end

__builtin_fwrite ("No refs in common and none specified; doing nothing.\n", 1, 53, _6);
./benchmarks/git/double_free_4/git_df_4.c:225:17: warning: use location
dot graph target loc start # .MEM_18 = VDEF <.MEM_61>
__builtin_fwrite ("No refs in common and none specified; doing nothing.\n", 1, 53, _6);
./benchmarks/git/double_free_4/git_df_4.c:225:17: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 25: __builtin_fwrite ("No refs in common and none specified; doing nothing.\n", 1, 53, _6);
./benchmarks/git/double_free_4/git_df_4.c:225:17: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_18 = VDEF <.MEM_61>
__builtin_fwrite ("No refs in common and none specified; doing nothing.\n", 1, 53, _6);
./benchmarks/git/double_free_4/git_df_4.c:225:17: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 25dot graph target basicblock en1

dot graph stmt start __builtin_fwrite ("No refs in common and none specified; doing nothing.\n", 1, 53, _6);
__builtin_fwrite ("No refs in common and none specified; doing nothing.\n", 1, 53, _6);
dot graph stmt end

dot graph stmt start __builtin_fwrite ("No refs in common and none specified; doing nothing.\n", 1, 53, _6);
./benchmarks/git/double_free_4/git_df_4.c:225:17: warning: use location
dot graph stmt end

this stmt call this function :__builtin_fwrite
trace fucntion name:__builtin_fwrite 

 ================== trace ================== 
trace fucntion free:0 
dot graph target basicblock start from main basic block 25dot graph target basicblock en1

dot graph arrowsubgraph cluster_998928250 dot graph subgraph  __builtin_fwrite ("No refs in common and none specified; doing nothing.\n", 1, 53, _6);
_6 = stderr;
dot graph subgrapend

dot graph target basicblock start from main basic block 25dot graph target basicblock en1

dot graph arrowsubgraph cluster_96182260 dot graph subgraph  __builtin_fwrite ("No refs in common and none specified; doing nothing.\n", 1, 53, _6);
_6 = stderr;
dot graph subgrapend


 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f89e075e750
    type <pointer_type 0x7f89e0276a80
        type <record_type 0x7f89e02769d8 FILE BLK
            size <integer_cst 0x7f89e0265840 constant 1728>
            unit-size <integer_cst 0x7f89e0265900 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f89e0276930 fields <field_decl 0x7f89e0277a18 _flags> context <translation_unit_decl 0x7f89e0761168 ./benchmarks/git/double_free_4/git_df_4.c>
            pointer_to_this <pointer_type 0x7f89e0276a80>>
        unsigned DI
        size <integer_cst 0x7f89e0756bb8 constant 64>
        unit-size <integer_cst 0x7f89e0756bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f89e027bbd0>>
   
    def_stmt _6 = stderr;
    version:6
    ptr-info 0x7f89e0287750>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_59>
free (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:192:17: warning: use location
  192 |                 free(dst_name);
      |                 ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_59>
free (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:192:17: warning: free in this location

===== possiable asias =====
# .MEM_18 = VDEF <.MEM_61>
__builtin_fwrite ("No refs in common and none specified; doing nothing.\n", 1, 53, _6);
./benchmarks/git/double_free_4/git_df_4.c:225:17: warning: use location
  225 |                 fprintf(stderr, "No refs in common and none specified; doing nothing.\n");
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_59>
free (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:192:17: warning: free in this location
  192 |                 free(dst_name);
      |                 ^

===== possiable asias =====
# .MEM_18 = VDEF <.MEM_61>
__builtin_fwrite ("No refs in common and none specified; doing nothing.\n", 1, 53, _6);
./benchmarks/git/double_free_4/git_df_4.c:225:17: warning: use location
  225 |                 fprintf(stderr, "No refs in common and none specified; doing nothing.\n");
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f89e0299360
    type <pointer_type 0x7f89e026e738
        type <record_type 0x7f89e026e690 ref BLK
            size <integer_cst 0x7f89e082b0a8 constant 640>
            unit-size <integer_cst 0x7f89e0265738 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f89e026e690 fields <field_decl 0x7f89e0271850 next> context <translation_unit_decl 0x7f89e0761168 ./benchmarks/git/double_free_4/git_df_4.c>
            pointer_to_this <pointer_type 0x7f89e026e738>>
        public unsigned DI
        size <integer_cst 0x7f89e0756bb8 constant 64>
        unit-size <integer_cst 0x7f89e0756bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f89e026e7e0>>
    var <var_decl 0x7f89e029a2d0 ref>
    def_stmt ref_56 = PHI <local_refs_12(26), next_57(27)>
    version:56
    ptr-info 0x7f89e0287a38>
 <ssa_name 0x7f89e0299360
    type <pointer_type 0x7f89e026e738
        type <record_type 0x7f89e026e690 ref BLK
            size <integer_cst 0x7f89e082b0a8 constant 640>
            unit-size <integer_cst 0x7f89e0265738 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f89e026e690 fields <field_decl 0x7f89e0271850 next> context <translation_unit_decl 0x7f89e0761168 ./benchmarks/git/double_free_4/git_df_4.c>
            pointer_to_this <pointer_type 0x7f89e026e738>>
        public unsigned DI
        size <integer_cst 0x7f89e0756bb8 constant 64>
        unit-size <integer_cst 0x7f89e0756bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f89e026e7e0>>
    var <var_decl 0x7f89e029a2d0 ref>
    def_stmt ref_56 = PHI <local_refs_12(26), next_57(27)>
    version:56
    ptr-info 0x7f89e0287a38>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f89e0299360
    type <pointer_type 0x7f89e026e738
        type <record_type 0x7f89e026e690 ref BLK
            size <integer_cst 0x7f89e082b0a8 constant 640>
            unit-size <integer_cst 0x7f89e0265738 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f89e026e690 fields <field_decl 0x7f89e0271850 next> context <translation_unit_decl 0x7f89e0761168 ./benchmarks/git/double_free_4/git_df_4.c>
            pointer_to_this <pointer_type 0x7f89e026e738>>
        public unsigned DI
        size <integer_cst 0x7f89e0756bb8 constant 64>
        unit-size <integer_cst 0x7f89e0756bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f89e026e7e0>>
    var <var_decl 0x7f89e029a2d0 ref>
    def_stmt ref_56 = PHI <local_refs_12(26), next_57(27)>
    version:56
    ptr-info 0x7f89e0287a38>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

if (ref_56 != 0B)
./benchmarks/git/double_free_4/git_df_4.c:71:16: warning: use location
   71 |         while (ref) {
      |                ^
dot graph target loc start # .MEM_66 = VDEF <.MEM_63>
free_ref (ref_56);
./benchmarks/git/double_free_4/git_df_4.c:73:17: warning: use location
   73 |                 free_ref(ref);
      |                 ^
dot graph target loc en1

dot graph target line desc form basic block 28: if (ref_56 != 0B)
./benchmarks/git/double_free_4/git_df_4.c:71:16: warning: use location
   71 |         while (ref) {
      |                ^
dot graph target line desend

dot graph target loc start # .MEM_66 = VDEF <.MEM_63>
free_ref (ref_56);
./benchmarks/git/double_free_4/git_df_4.c:73:17: warning: use location
   73 |                 free_ref(ref);
      |                 ^
dot graph target loc end

dot graph target basicblock start from main basic block 28dot graph target basicblock en1

dot graph stmt start if (ref_56 != 0B)
free_ref (ref_56);
dot graph stmt end

dot graph stmt start if (ref_56 != 0B)
./benchmarks/git/double_free_4/git_df_4.c:71:16: warning: use location
   71 |         while (ref) {
      |                ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_66 = VDEF <.MEM_63>
free_ref (ref_56);
dot graph entry main
dot graph target entry end

free_ref (ref_56);
./benchmarks/git/double_free_4/git_df_4.c:73:17: warning: use location
   73 |                 free_ref(ref);
      |                 ^
dot graph target loc start # .MEM_66 = VDEF <.MEM_63>
free_ref (ref_56);
./benchmarks/git/double_free_4/git_df_4.c:73:17: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 27: free_ref (ref_56);
./benchmarks/git/double_free_4/git_df_4.c:73:17: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_66 = VDEF <.MEM_63>
free_ref (ref_56);
./benchmarks/git/double_free_4/git_df_4.c:73:17: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 27dot graph target basicblock en1

dot graph stmt start free_ref (ref_56);
free_ref (ref_56);
dot graph stmt end

dot graph stmt start free_ref (ref_56);
./benchmarks/git/double_free_4/git_df_4.c:73:17: warning: use location
dot graph stmt end

this stmt call this function :free_ref
trace fucntion name:free_ref 
[40;44m =======trace_function_path free_ref  function_call count: 2 level :0========  [0m
# .MEM_9 = VDEF <.MEM_8>
free (_2);
[40;31m  find free stmt free same pointer [0m
# .MEM_9 = VDEF <.MEM_8>
free (_2);
./benchmarks/git/double_free_4/git_df_4.c:63:9: warning: use location
   63 |         free(ref->remote_status);
      |         ^
dot graph start relate form ID : 1048122858
from free_ref basic block 3dot graph end relate end

dot graph relate stmt start ID : 2076903426 stmt(free) :free (_2);
./benchmarks/git/double_free_4/git_df_4.c:63:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 2076903426 stmt(free) :free (_2);
./benchmarks/git/double_free_4/git_df_4.c:63:9: warning: use location
dot graph relate end

# .MEM_10 = VDEF <.MEM_9>
free (_3);
[40;31m  find free stmt free same pointer [0m
# .MEM_10 = VDEF <.MEM_9>
free (_3);
./benchmarks/git/double_free_4/git_df_4.c:64:9: warning: use location
   64 |         free(ref->symref);
      |         ^
dot graph start relate form ID : 1048122858
from free_ref basic block 3dot graph end relate end

dot graph relate stmt start ID : 368240257 stmt(free) :free (_3);
./benchmarks/git/double_free_4/git_df_4.c:64:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 368240257 stmt(free) :free (_3);
./benchmarks/git/double_free_4/git_df_4.c:64:9: warning: use location
dot graph relate end

# .MEM_11 = VDEF <.MEM_10>
free (ref_5(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_11 = VDEF <.MEM_10>
free (ref_5(D));
./benchmarks/git/double_free_4/git_df_4.c:65:9: warning: use location
   65 |         free(ref);
      |         ^
dot graph start relate form ID : 1048122858
from free_ref basic block 3dot graph end relate end

dot graph relate stmt start ID : 68990297 stmt(free) :free (ref_5(D));
./benchmarks/git/double_free_4/git_df_4.c:65:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 68990297 stmt(free) :free (ref_5(D));
./benchmarks/git/double_free_4/git_df_4.c:65:9: warning: use location
dot graph relate end

 <ssa_name 0x7f89e0299360
    type <pointer_type 0x7f89e026e738
        type <record_type 0x7f89e026e690 ref BLK
            size <integer_cst 0x7f89e082b0a8 constant 640>
            unit-size <integer_cst 0x7f89e0265738 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f89e026e690 fields <field_decl 0x7f89e0271850 next> context <translation_unit_decl 0x7f89e0761168 ./benchmarks/git/double_free_4/git_df_4.c>
            pointer_to_this <pointer_type 0x7f89e026e738>>
        public unsigned DI
        size <integer_cst 0x7f89e0756bb8 constant 64>
        unit-size <integer_cst 0x7f89e0756bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f89e026e7e0>>
    var <var_decl 0x7f89e029a2d0 ref>
    def_stmt ref_56 = PHI <local_refs_12(26), next_57(27)>
    version:56
    ptr-info 0x7f89e0287a38>
[40;36m ======= node_fun:free_ref========= [0m
[40;36m ======= find relate stmt with ref ========= [0m
[40;36m ======= relate node_fun argument:ref========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
dot graph arrowdot graph start relate for1ID : 1048122858
from free_ref basic block 3dot graph end relate end

In function ‘free_ref’:
./benchmarks/git/double_free_4/git_df_4.c:62:9: warning: use location
   62 |         free_ref(ref->peer_ref);
      |         ^
_1 = ref_5(D)->peer_ref;
dot graph relate stmt start ID : 2057616638 stmt(LHS) :./benchmarks/git/double_free_4/git_df_4.c:62:9: warning: use location
_1
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:ref========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
dot graph arrowdot graph start relate for1ID : 1048122858
from free_ref basic block 3dot graph end relate end

./benchmarks/git/double_free_4/git_df_4.c:63:17: warning: use location
   63 |         free(ref->remote_status);
      |                 ^
_2 = ref_5(D)->remote_status;
dot graph relate stmt start ID : 2140329170 stmt(LHS) :./benchmarks/git/double_free_4/git_df_4.c:63:17: warning: use location
_2
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:ref========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
dot graph arrowdot graph start relate for1ID : 1048122858
from free_ref basic block 3dot graph end relate end

./benchmarks/git/double_free_4/git_df_4.c:64:17: warning: use location
   64 |         free(ref->symref);
      |                 ^
_3 = ref_5(D)->symref;
dot graph relate stmt start ID : 310715119 stmt(LHS) :./benchmarks/git/double_free_4/git_df_4.c:64:17: warning: use location
_3
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:free_ref========= [0m
[40;46m =======add node_fun stack:free_ref========= [0m
[40;44m =======trace_function_path free_ref  function_call count: 2 level :1========  [0m
# .MEM_9 = VDEF <.MEM_8>
free (_2);
[40;31m  find free stmt free same pointer [0m
# .MEM_9 = VDEF <.MEM_8>
free (_2);
In function ‘main’:
./benchmarks/git/double_free_4/git_df_4.c:63:9: warning: use location
   63 |         free(ref->remote_status);
      |         ^
dot graph start relate form ID : 352168998
from free_ref basic block 3dot graph end relate end

dot graph relate stmt start ID : 1421480920 stmt(free) :free (_2);
./benchmarks/git/double_free_4/git_df_4.c:63:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1421480920 stmt(free) :free (_2);
./benchmarks/git/double_free_4/git_df_4.c:63:9: warning: use location
dot graph relate end

# .MEM_10 = VDEF <.MEM_9>
free (_3);
[40;31m  find free stmt free same pointer [0m
# .MEM_10 = VDEF <.MEM_9>
free (_3);
./benchmarks/git/double_free_4/git_df_4.c:64:9: warning: use location
   64 |         free(ref->symref);
      |         ^
dot graph start relate form ID : 352168998
from free_ref basic block 3dot graph end relate end

dot graph relate stmt start ID : 1522478628 stmt(free) :free (_3);
./benchmarks/git/double_free_4/git_df_4.c:64:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1522478628 stmt(free) :free (_3);
./benchmarks/git/double_free_4/git_df_4.c:64:9: warning: use location
dot graph relate end

# .MEM_11 = VDEF <.MEM_10>
free (ref_5(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_11 = VDEF <.MEM_10>
free (ref_5(D));
./benchmarks/git/double_free_4/git_df_4.c:65:9: warning: use location
   65 |         free(ref);
      |         ^
dot graph start relate form ID : 352168998
from free_ref basic block 3dot graph end relate end

dot graph relate stmt start ID : 1538790751 stmt(free) :free (ref_5(D));
./benchmarks/git/double_free_4/git_df_4.c:65:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1538790751 stmt(free) :free (ref_5(D));
./benchmarks/git/double_free_4/git_df_4.c:65:9: warning: use location
dot graph relate end

 <ssa_name 0x7f89e0299360
    type <pointer_type 0x7f89e026e738
        type <record_type 0x7f89e026e690 ref BLK
            size <integer_cst 0x7f89e082b0a8 constant 640>
            unit-size <integer_cst 0x7f89e0265738 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f89e026e690 fields <field_decl 0x7f89e0271850 next> context <translation_unit_decl 0x7f89e0761168 ./benchmarks/git/double_free_4/git_df_4.c>
            pointer_to_this <pointer_type 0x7f89e026e738>>
        public unsigned DI
        size <integer_cst 0x7f89e0756bb8 constant 64>
        unit-size <integer_cst 0x7f89e0756bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f89e026e7e0>>
    var <var_decl 0x7f89e029a2d0 ref>
    def_stmt ref_56 = PHI <local_refs_12(26), next_57(27)>
    version:56
    ptr-info 0x7f89e0287a38>
[40;36m ======= node_fun:free_ref========= [0m
[40;36m ======= find relate stmt with ref ========= [0m
[40;36m ======= relate node_fun argument:ref========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
dot graph arrowdot graph start relate for1ID : 352168998
from free_ref basic block 3dot graph end relate end

In function ‘free_ref’:
./benchmarks/git/double_free_4/git_df_4.c:62:9: warning: use location
   62 |         free_ref(ref->peer_ref);
      |         ^
_1 = ref_5(D)->peer_ref;
dot graph relate stmt start ID : 1691164479 stmt(LHS) :./benchmarks/git/double_free_4/git_df_4.c:62:9: warning: use location
_1
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:ref========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
dot graph arrowdot graph start relate for1ID : 352168998
from free_ref basic block 3dot graph end relate end

./benchmarks/git/double_free_4/git_df_4.c:63:17: warning: use location
   63 |         free(ref->remote_status);
      |                 ^
_2 = ref_5(D)->remote_status;
dot graph relate stmt start ID : 171063786 stmt(LHS) :./benchmarks/git/double_free_4/git_df_4.c:63:17: warning: use location
_2
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:ref========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
dot graph arrowdot graph start relate for1ID : 352168998
from free_ref basic block 3dot graph end relate end

./benchmarks/git/double_free_4/git_df_4.c:64:17: warning: use location
   64 |         free(ref->symref);
      |                 ^
_3 = ref_5(D)->symref;
dot graph relate stmt start ID : 1723656963 stmt(LHS) :./benchmarks/git/double_free_4/git_df_4.c:64:17: warning: use location
_3
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:free_ref========= [0m
[40;41m =======recursive_fun2:free_ref========= [0m

 ================== trace ================== 
trace fucntion free:6 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

next_57 = ref_56->next;
In function ‘main’:
./benchmarks/git/double_free_4/git_df_4.c:72:22: warning: use location
   72 |                 next = ref->next;
      |                      ^
dot graph target loc start # .MEM_66 = VDEF <.MEM_63>
free_ref (ref_56);
./benchmarks/git/double_free_4/git_df_4.c:73:17: warning: use location
   73 |                 free_ref(ref);
      |                 ^
dot graph target loc en1

dot graph target line desc form basic block 27: next_57 = ref_56->next;
./benchmarks/git/double_free_4/git_df_4.c:72:22: warning: use location
   72 |                 next = ref->next;
      |                      ^
dot graph target line desend

dot graph target loc start # .MEM_66 = VDEF <.MEM_63>
free_ref (ref_56);
./benchmarks/git/double_free_4/git_df_4.c:73:17: warning: use location
   73 |                 free_ref(ref);
      |                 ^
dot graph target loc end

dot graph target basicblock start from main basic block 27dot graph target basicblock en1

dot graph stmt start next_57 = ref_56->next;
free_ref (ref_56);
dot graph stmt end

dot graph stmt start next_57 = ref_56->next;
./benchmarks/git/double_free_4/git_df_4.c:72:22: warning: use location
   72 |                 next = ref->next;
      |                      ^
dot graph stmt end

dot graph target basicblock start from main basic block 28dot graph target basicblock en1

dot graph arrowsubgraph cluster_920041031 dot graph subgraph  if (ref_56 != 0B)
ref_56 = PHI <local_refs_12(26), next_57(27)>
dot graph subgrapend

dot graph start relate for1ID : 1048122858
from free_ref basic block 3dot graph end relate end

subgraph cluster_683531872 dot graph subgraph  start ID : 310715119 stmt(relate) ， Tree ID : 1048122858 : _3 = ref_5(D)->symref;
./benchmarks/git/double_free_4/git_df_4.c:64:17: warning: use location
   64 |         free(ref->symref);
      |                 ^
dot graph subgrapend

dot graph start relate for1ID : 352168998
from free_ref basic block 3dot graph end relate end

subgraph cluster_1691632745 dot graph subgraph  start ID : 1723656963 stmt(relate) ， Tree ID : 352168998 : _3 = ref_5(D)->symref;
./benchmarks/git/double_free_4/git_df_4.c:64:17: warning: use location
dot graph subgrapend


 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f89e0299360
    type <pointer_type 0x7f89e026e738
        type <record_type 0x7f89e026e690 ref BLK
            size <integer_cst 0x7f89e082b0a8 constant 640>
            unit-size <integer_cst 0x7f89e0265738 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f89e026e690 fields <field_decl 0x7f89e0271850 next> context <translation_unit_decl 0x7f89e0761168 ./benchmarks/git/double_free_4/git_df_4.c>
            pointer_to_this <pointer_type 0x7f89e026e738>>
        public unsigned DI
        size <integer_cst 0x7f89e0756bb8 constant 64>
        unit-size <integer_cst 0x7f89e0756bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f89e026e7e0>>
    var <var_decl 0x7f89e029a2d0 ref>
    def_stmt ref_56 = PHI <local_refs_12(26), next_57(27)>
    version:56
    ptr-info 0x7f89e0287a38>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_59>
free (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:192:17: warning: use location
  192 |                 free(dst_name);
      |                 ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_59>
free (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:192:17: warning: free in this location

===== possiable asias =====
if (ref_56 != 0B)
./benchmarks/git/double_free_4/git_df_4.c:71:16: warning: use location
   71 |         while (ref) {
      |                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_59>
free (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:192:17: warning: free in this location
  192 |                 free(dst_name);
      |                 ^

===== possiable asias =====
# .MEM_66 = VDEF <.MEM_63>
free_ref (ref_56);
./benchmarks/git/double_free_4/git_df_4.c:73:17: warning: use location
   73 |                 free_ref(ref);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_59>
free (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:192:17: warning: free in this location
  192 |                 free(dst_name);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_63>
next_57 = ref_56->next;
./benchmarks/git/double_free_4/git_df_4.c:72:22: warning: use location
   72 |                 next = ref->next;
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:6 [0m
[40;31m  	possible double free [rigorous]:6 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f89e0299288
    type <pointer_type 0x7f89e026e738
        type <record_type 0x7f89e026e690 ref BLK
            size <integer_cst 0x7f89e082b0a8 constant 640>
            unit-size <integer_cst 0x7f89e0265738 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f89e026e690 fields <field_decl 0x7f89e0271850 next> context <translation_unit_decl 0x7f89e0761168 ./benchmarks/git/double_free_4/git_df_4.c>
            pointer_to_this <pointer_type 0x7f89e026e738>>
        public unsigned DI
        size <integer_cst 0x7f89e0756bb8 constant 64>
        unit-size <integer_cst 0x7f89e0756bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f89e026e7e0>>
    var <var_decl 0x7f89e029a120 ref>
    def_stmt ref_54 = PHI <_7(29), next_55(30)>
    version:54
    ptr-info 0x7f89e0287a08>
 <ssa_name 0x7f89e0299288
    type <pointer_type 0x7f89e026e738
        type <record_type 0x7f89e026e690 ref BLK
            size <integer_cst 0x7f89e082b0a8 constant 640>
            unit-size <integer_cst 0x7f89e0265738 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f89e026e690 fields <field_decl 0x7f89e0271850 next> context <translation_unit_decl 0x7f89e0761168 ./benchmarks/git/double_free_4/git_df_4.c>
            pointer_to_this <pointer_type 0x7f89e026e738>>
        public unsigned DI
        size <integer_cst 0x7f89e0756bb8 constant 64>
        unit-size <integer_cst 0x7f89e0756bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f89e026e7e0>>
    var <var_decl 0x7f89e029a120 ref>
    def_stmt ref_54 = PHI <_7(29), next_55(30)>
    version:54
    ptr-info 0x7f89e0287a08>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f89e0299288
    type <pointer_type 0x7f89e026e738
        type <record_type 0x7f89e026e690 ref BLK
            size <integer_cst 0x7f89e082b0a8 constant 640>
            unit-size <integer_cst 0x7f89e0265738 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f89e026e690 fields <field_decl 0x7f89e0271850 next> context <translation_unit_decl 0x7f89e0761168 ./benchmarks/git/double_free_4/git_df_4.c>
            pointer_to_this <pointer_type 0x7f89e026e738>>
        public unsigned DI
        size <integer_cst 0x7f89e0756bb8 constant 64>
        unit-size <integer_cst 0x7f89e0756bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f89e026e7e0>>
    var <var_decl 0x7f89e029a120 ref>
    def_stmt ref_54 = PHI <_7(29), next_55(30)>
    version:54
    ptr-info 0x7f89e0287a08>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

if (ref_54 != 0B)
./benchmarks/git/double_free_4/git_df_4.c:71:16: warning: use location
   71 |         while (ref) {
      |                ^
dot graph target loc start # .MEM_65 = VDEF <.MEM_62>
free_ref (ref_54);
./benchmarks/git/double_free_4/git_df_4.c:73:17: warning: use location
   73 |                 free_ref(ref);
      |                 ^
dot graph target loc en1

dot graph target line desc form basic block 31: if (ref_54 != 0B)
./benchmarks/git/double_free_4/git_df_4.c:71:16: warning: use location
   71 |         while (ref) {
      |                ^
dot graph target line desend

dot graph target loc start # .MEM_65 = VDEF <.MEM_62>
free_ref (ref_54);
./benchmarks/git/double_free_4/git_df_4.c:73:17: warning: use location
   73 |                 free_ref(ref);
      |                 ^
dot graph target loc end

dot graph target basicblock start from main basic block 31dot graph target basicblock en1

dot graph stmt start if (ref_54 != 0B)
free_ref (ref_54);
dot graph stmt end

dot graph stmt start if (ref_54 != 0B)
./benchmarks/git/double_free_4/git_df_4.c:71:16: warning: use location
   71 |         while (ref) {
      |                ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_65 = VDEF <.MEM_62>
free_ref (ref_54);
dot graph entry main
dot graph target entry end

free_ref (ref_54);
./benchmarks/git/double_free_4/git_df_4.c:73:17: warning: use location
   73 |                 free_ref(ref);
      |                 ^
dot graph target loc start # .MEM_65 = VDEF <.MEM_62>
free_ref (ref_54);
./benchmarks/git/double_free_4/git_df_4.c:73:17: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 30: free_ref (ref_54);
./benchmarks/git/double_free_4/git_df_4.c:73:17: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_65 = VDEF <.MEM_62>
free_ref (ref_54);
./benchmarks/git/double_free_4/git_df_4.c:73:17: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 30dot graph target basicblock en1

dot graph stmt start free_ref (ref_54);
free_ref (ref_54);
dot graph stmt end

dot graph stmt start free_ref (ref_54);
./benchmarks/git/double_free_4/git_df_4.c:73:17: warning: use location
dot graph stmt end

this stmt call this function :free_ref
trace fucntion name:free_ref 
[40;44m =======trace_function_path free_ref  function_call count: 2 level :0========  [0m
# .MEM_9 = VDEF <.MEM_8>
free (_2);
[40;31m  find free stmt free same pointer [0m
# .MEM_9 = VDEF <.MEM_8>
free (_2);
./benchmarks/git/double_free_4/git_df_4.c:63:9: warning: use location
   63 |         free(ref->remote_status);
      |         ^
dot graph start relate form ID : 793345380
from free_ref basic block 3dot graph end relate end

dot graph relate stmt start ID : 453595931 stmt(free) :free (_2);
./benchmarks/git/double_free_4/git_df_4.c:63:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 453595931 stmt(free) :free (_2);
./benchmarks/git/double_free_4/git_df_4.c:63:9: warning: use location
dot graph relate end

# .MEM_10 = VDEF <.MEM_9>
free (_3);
[40;31m  find free stmt free same pointer [0m
# .MEM_10 = VDEF <.MEM_9>
free (_3);
./benchmarks/git/double_free_4/git_df_4.c:64:9: warning: use location
   64 |         free(ref->symref);
      |         ^
dot graph start relate form ID : 793345380
from free_ref basic block 3dot graph end relate end

dot graph relate stmt start ID : 764131311 stmt(free) :free (_3);
./benchmarks/git/double_free_4/git_df_4.c:64:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 764131311 stmt(free) :free (_3);
./benchmarks/git/double_free_4/git_df_4.c:64:9: warning: use location
dot graph relate end

# .MEM_11 = VDEF <.MEM_10>
free (ref_5(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_11 = VDEF <.MEM_10>
free (ref_5(D));
./benchmarks/git/double_free_4/git_df_4.c:65:9: warning: use location
   65 |         free(ref);
      |         ^
dot graph start relate form ID : 793345380
from free_ref basic block 3dot graph end relate end

dot graph relate stmt start ID : 1962030599 stmt(free) :free (ref_5(D));
./benchmarks/git/double_free_4/git_df_4.c:65:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1962030599 stmt(free) :free (ref_5(D));
./benchmarks/git/double_free_4/git_df_4.c:65:9: warning: use location
dot graph relate end

 <ssa_name 0x7f89e0299288
    type <pointer_type 0x7f89e026e738
        type <record_type 0x7f89e026e690 ref BLK
            size <integer_cst 0x7f89e082b0a8 constant 640>
            unit-size <integer_cst 0x7f89e0265738 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f89e026e690 fields <field_decl 0x7f89e0271850 next> context <translation_unit_decl 0x7f89e0761168 ./benchmarks/git/double_free_4/git_df_4.c>
            pointer_to_this <pointer_type 0x7f89e026e738>>
        public unsigned DI
        size <integer_cst 0x7f89e0756bb8 constant 64>
        unit-size <integer_cst 0x7f89e0756bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f89e026e7e0>>
    var <var_decl 0x7f89e029a120 ref>
    def_stmt ref_54 = PHI <_7(29), next_55(30)>
    version:54
    ptr-info 0x7f89e0287a08>
[40;36m ======= node_fun:free_ref========= [0m
[40;36m ======= find relate stmt with ref ========= [0m
[40;36m ======= relate node_fun argument:ref========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
dot graph arrowdot graph start relate for1ID : 793345380
from free_ref basic block 3dot graph end relate end

In function ‘free_ref’:
./benchmarks/git/double_free_4/git_df_4.c:62:9: warning: use location
   62 |         free_ref(ref->peer_ref);
      |         ^
_1 = ref_5(D)->peer_ref;
dot graph relate stmt start ID : 726107559 stmt(LHS) :./benchmarks/git/double_free_4/git_df_4.c:62:9: warning: use location
_1
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:ref========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
dot graph arrowdot graph start relate for1ID : 793345380
from free_ref basic block 3dot graph end relate end

./benchmarks/git/double_free_4/git_df_4.c:63:17: warning: use location
   63 |         free(ref->remote_status);
      |                 ^
_2 = ref_5(D)->remote_status;
dot graph relate stmt start ID : 301640337 stmt(LHS) :./benchmarks/git/double_free_4/git_df_4.c:63:17: warning: use location
_2
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:ref========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
dot graph arrowdot graph start relate for1ID : 793345380
from free_ref basic block 3dot graph end relate end

./benchmarks/git/double_free_4/git_df_4.c:64:17: warning: use location
   64 |         free(ref->symref);
      |                 ^
_3 = ref_5(D)->symref;
dot graph relate stmt start ID : 1554119465 stmt(LHS) :./benchmarks/git/double_free_4/git_df_4.c:64:17: warning: use location
_3
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:free_ref========= [0m
[40;46m =======add node_fun stack:free_ref========= [0m
[40;44m =======trace_function_path free_ref  function_call count: 2 level :1========  [0m
# .MEM_9 = VDEF <.MEM_8>
free (_2);
[40;31m  find free stmt free same pointer [0m
# .MEM_9 = VDEF <.MEM_8>
free (_2);
In function ‘main’:
./benchmarks/git/double_free_4/git_df_4.c:63:9: warning: use location
   63 |         free(ref->remote_status);
      |         ^
dot graph start relate form ID : 454328788
from free_ref basic block 3dot graph end relate end

dot graph relate stmt start ID : 1984865481 stmt(free) :free (_2);
./benchmarks/git/double_free_4/git_df_4.c:63:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1984865481 stmt(free) :free (_2);
./benchmarks/git/double_free_4/git_df_4.c:63:9: warning: use location
dot graph relate end

# .MEM_10 = VDEF <.MEM_9>
free (_3);
[40;31m  find free stmt free same pointer [0m
# .MEM_10 = VDEF <.MEM_9>
free (_3);
./benchmarks/git/double_free_4/git_df_4.c:64:9: warning: use location
   64 |         free(ref->symref);
      |         ^
dot graph start relate form ID : 454328788
from free_ref basic block 3dot graph end relate end

dot graph relate stmt start ID : 702307528 stmt(free) :free (_3);
./benchmarks/git/double_free_4/git_df_4.c:64:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 702307528 stmt(free) :free (_3);
./benchmarks/git/double_free_4/git_df_4.c:64:9: warning: use location
dot graph relate end

# .MEM_11 = VDEF <.MEM_10>
free (ref_5(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_11 = VDEF <.MEM_10>
free (ref_5(D));
./benchmarks/git/double_free_4/git_df_4.c:65:9: warning: use location
   65 |         free(ref);
      |         ^
dot graph start relate form ID : 454328788
from free_ref basic block 3dot graph end relate end

dot graph relate stmt start ID : 1250332558 stmt(free) :free (ref_5(D));
./benchmarks/git/double_free_4/git_df_4.c:65:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1250332558 stmt(free) :free (ref_5(D));
./benchmarks/git/double_free_4/git_df_4.c:65:9: warning: use location
dot graph relate end

 <ssa_name 0x7f89e0299288
    type <pointer_type 0x7f89e026e738
        type <record_type 0x7f89e026e690 ref BLK
            size <integer_cst 0x7f89e082b0a8 constant 640>
            unit-size <integer_cst 0x7f89e0265738 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f89e026e690 fields <field_decl 0x7f89e0271850 next> context <translation_unit_decl 0x7f89e0761168 ./benchmarks/git/double_free_4/git_df_4.c>
            pointer_to_this <pointer_type 0x7f89e026e738>>
        public unsigned DI
        size <integer_cst 0x7f89e0756bb8 constant 64>
        unit-size <integer_cst 0x7f89e0756bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f89e026e7e0>>
    var <var_decl 0x7f89e029a120 ref>
    def_stmt ref_54 = PHI <_7(29), next_55(30)>
    version:54
    ptr-info 0x7f89e0287a08>
[40;36m ======= node_fun:free_ref========= [0m
[40;36m ======= find relate stmt with ref ========= [0m
[40;36m ======= relate node_fun argument:ref========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
dot graph arrowdot graph start relate for1ID : 454328788
from free_ref basic block 3dot graph end relate end

In function ‘free_ref’:
./benchmarks/git/double_free_4/git_df_4.c:62:9: warning: use location
   62 |         free_ref(ref->peer_ref);
      |         ^
_1 = ref_5(D)->peer_ref;
dot graph relate stmt start ID : 531620670 stmt(LHS) :./benchmarks/git/double_free_4/git_df_4.c:62:9: warning: use location
_1
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:ref========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
dot graph arrowdot graph start relate for1ID : 454328788
from free_ref basic block 3dot graph end relate end

./benchmarks/git/double_free_4/git_df_4.c:63:17: warning: use location
   63 |         free(ref->remote_status);
      |                 ^
_2 = ref_5(D)->remote_status;
dot graph relate stmt start ID : 1701235778 stmt(LHS) :./benchmarks/git/double_free_4/git_df_4.c:63:17: warning: use location
_2
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:ref========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
dot graph arrowdot graph start relate for1ID : 454328788
from free_ref basic block 3dot graph end relate end

./benchmarks/git/double_free_4/git_df_4.c:64:17: warning: use location
   64 |         free(ref->symref);
      |                 ^
_3 = ref_5(D)->symref;
dot graph relate stmt start ID : 1346514818 stmt(LHS) :./benchmarks/git/double_free_4/git_df_4.c:64:17: warning: use location
_3
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:free_ref========= [0m
[40;41m =======recursive_fun2:free_ref========= [0m

 ================== trace ================== 
trace fucntion free:6 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

next_55 = ref_54->next;
In function ‘main’:
./benchmarks/git/double_free_4/git_df_4.c:72:22: warning: use location
   72 |                 next = ref->next;
      |                      ^
dot graph target loc start # .MEM_65 = VDEF <.MEM_62>
free_ref (ref_54);
./benchmarks/git/double_free_4/git_df_4.c:73:17: warning: use location
   73 |                 free_ref(ref);
      |                 ^
dot graph target loc en1

dot graph target line desc form basic block 30: next_55 = ref_54->next;
./benchmarks/git/double_free_4/git_df_4.c:72:22: warning: use location
   72 |                 next = ref->next;
      |                      ^
dot graph target line desend

dot graph target loc start # .MEM_65 = VDEF <.MEM_62>
free_ref (ref_54);
./benchmarks/git/double_free_4/git_df_4.c:73:17: warning: use location
   73 |                 free_ref(ref);
      |                 ^
dot graph target loc end

dot graph target basicblock start from main basic block 30dot graph target basicblock en1

dot graph stmt start next_55 = ref_54->next;
free_ref (ref_54);
dot graph stmt end

dot graph stmt start next_55 = ref_54->next;
./benchmarks/git/double_free_4/git_df_4.c:72:22: warning: use location
   72 |                 next = ref->next;
      |                      ^
dot graph stmt end

dot graph target basicblock start from main basic block 31dot graph target basicblock en1

dot graph arrowsubgraph cluster_1579743528 dot graph subgraph  if (ref_54 != 0B)
ref_54 = PHI <_7(29), next_55(30)>
dot graph subgrapend

dot graph start relate for1ID : 793345380
from free_ref basic block 3dot graph end relate end

subgraph cluster_1630655557 dot graph subgraph  start ID : 1554119465 stmt(relate) ， Tree ID : 793345380 : _3 = ref_5(D)->symref;
./benchmarks/git/double_free_4/git_df_4.c:64:17: warning: use location
   64 |         free(ref->symref);
      |                 ^
dot graph subgrapend

dot graph start relate for1ID : 454328788
from free_ref basic block 3dot graph end relate end

subgraph cluster_1714755075 dot graph subgraph  start ID : 1346514818 stmt(relate) ， Tree ID : 454328788 : _3 = ref_5(D)->symref;
./benchmarks/git/double_free_4/git_df_4.c:64:17: warning: use location
dot graph subgrapend


 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f89e0299288
    type <pointer_type 0x7f89e026e738
        type <record_type 0x7f89e026e690 ref BLK
            size <integer_cst 0x7f89e082b0a8 constant 640>
            unit-size <integer_cst 0x7f89e0265738 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f89e026e690 fields <field_decl 0x7f89e0271850 next> context <translation_unit_decl 0x7f89e0761168 ./benchmarks/git/double_free_4/git_df_4.c>
            pointer_to_this <pointer_type 0x7f89e026e738>>
        public unsigned DI
        size <integer_cst 0x7f89e0756bb8 constant 64>
        unit-size <integer_cst 0x7f89e0756bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f89e026e7e0>>
    var <var_decl 0x7f89e029a120 ref>
    def_stmt ref_54 = PHI <_7(29), next_55(30)>
    version:54
    ptr-info 0x7f89e0287a08>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_59>
free (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:192:17: warning: use location
  192 |                 free(dst_name);
      |                 ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_59>
free (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:192:17: warning: free in this location

===== possiable asias =====
if (ref_54 != 0B)
./benchmarks/git/double_free_4/git_df_4.c:71:16: warning: use location
   71 |         while (ref) {
      |                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_59>
free (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:192:17: warning: free in this location
  192 |                 free(dst_name);
      |                 ^

===== possiable asias =====
# .MEM_65 = VDEF <.MEM_62>
free_ref (ref_54);
./benchmarks/git/double_free_4/git_df_4.c:73:17: warning: use location
   73 |                 free_ref(ref);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_78 = VDEF <.MEM_59>
free (dst_name_22);
./benchmarks/git/double_free_4/git_df_4.c:192:17: warning: free in this location
  192 |                 free(dst_name);
      |                 ^

===== possiable asias =====
# VUSE <.MEM_62>
next_55 = ref_54->next;
./benchmarks/git/double_free_4/git_df_4.c:72:22: warning: use location
   72 |                 next = ref->next;
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:6 [0m
[40;31m  	possible double free [rigorous]:6 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:main========= [0m
[40;44m =======node_fun:free_ref========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path free_ref  function_call count: 2 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:free_ref========= [0m
[40;41m =======recursive_fun:free_ref========= [0m
[40;42m =======pre_check_funciton:free_ref========= [0m
[40;42m =======start_check_funciton:free_ref========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f89e02999d8
    type <pointer_type 0x7f89e026e738
        type <record_type 0x7f89e026e690 ref BLK
            size <integer_cst 0x7f89e082b0a8 constant 640>
            unit-size <integer_cst 0x7f89e0265738 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f89e026e690 fields <field_decl 0x7f89e0271850 next> context <translation_unit_decl 0x7f89e0761168 ./benchmarks/git/double_free_4/git_df_4.c>
            pointer_to_this <pointer_type 0x7f89e026e738>>
        public unsigned DI
        size <integer_cst 0x7f89e0756bb8 constant 64>
        unit-size <integer_cst 0x7f89e0756bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f89e026e7e0>>
   
    def_stmt _1 = ref_5(D)->peer_ref;
    version:1
    ptr-info 0x7f89e0287ac8>
 <ssa_name 0x7f89e02999d8
    type <pointer_type 0x7f89e026e738
        type <record_type 0x7f89e026e690 ref BLK
            size <integer_cst 0x7f89e082b0a8 constant 640>
            unit-size <integer_cst 0x7f89e0265738 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f89e026e690 fields <field_decl 0x7f89e0271850 next> context <translation_unit_decl 0x7f89e0761168 ./benchmarks/git/double_free_4/git_df_4.c>
            pointer_to_this <pointer_type 0x7f89e026e738>>
        public unsigned DI
        size <integer_cst 0x7f89e0756bb8 constant 64>
        unit-size <integer_cst 0x7f89e0756bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f89e026e7e0>>
   
    def_stmt _1 = ref_5(D)->peer_ref;
    version:1
    ptr-info 0x7f89e0287ac8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f89e02999d8
    type <pointer_type 0x7f89e026e738
        type <record_type 0x7f89e026e690 ref BLK
            size <integer_cst 0x7f89e082b0a8 constant 640>
            unit-size <integer_cst 0x7f89e0265738 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f89e026e690 fields <field_decl 0x7f89e0271850 next> context <translation_unit_decl 0x7f89e0761168 ./benchmarks/git/double_free_4/git_df_4.c>
            pointer_to_this <pointer_type 0x7f89e026e738>>
        public unsigned DI
        size <integer_cst 0x7f89e0756bb8 constant 64>
        unit-size <integer_cst 0x7f89e0756bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f89e026e7e0>>
   
    def_stmt _1 = ref_5(D)->peer_ref;
    version:1
    ptr-info 0x7f89e0287ac8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_8 = VDEF <.MEM_7(D)>
free_ref (_1);
dot graph entry free_ref
dot graph target entry end

free_ref (_1);
In function ‘free_ref’:
./benchmarks/git/double_free_4/git_df_4.c:62:9: warning: use location
   62 |         free_ref(ref->peer_ref);
      |         ^
dot graph target loc start # .MEM_8 = VDEF <.MEM_7(D)>
free_ref (_1);
./benchmarks/git/double_free_4/git_df_4.c:62:9: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 3: free_ref (_1);
./benchmarks/git/double_free_4/git_df_4.c:62:9: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_8 = VDEF <.MEM_7(D)>
free_ref (_1);
./benchmarks/git/double_free_4/git_df_4.c:62:9: warning: use location
dot graph target loc end

dot graph target basicblock start from free_ref basic block 3dot graph target basicblock en1

dot graph stmt start free_ref (_1);
free_ref (_1);
dot graph stmt end

dot graph stmt start free_ref (_1);
./benchmarks/git/double_free_4/git_df_4.c:62:9: warning: use location
dot graph stmt end

this stmt call this function :free_ref
trace fucntion name:free_ref 
[40;44m =======trace_function_path free_ref  function_call count: 2 level :0========  [0m
# .MEM_9 = VDEF <.MEM_8>
free (_2);
[40;31m  find free stmt free same pointer [0m
# .MEM_9 = VDEF <.MEM_8>
free (_2);
./benchmarks/git/double_free_4/git_df_4.c:63:9: warning: use location
   63 |         free(ref->remote_status);
      |         ^
dot graph start relate form ID : 1648733825
from free_ref basic block 3dot graph end relate end

dot graph relate stmt start ID : 1540788547 stmt(free) :free (_2);
./benchmarks/git/double_free_4/git_df_4.c:63:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1540788547 stmt(free) :free (_2);
./benchmarks/git/double_free_4/git_df_4.c:63:9: warning: use location
dot graph relate end

# .MEM_10 = VDEF <.MEM_9>
free (_3);
[40;31m  find free stmt free same pointer [0m
# .MEM_10 = VDEF <.MEM_9>
free (_3);
./benchmarks/git/double_free_4/git_df_4.c:64:9: warning: use location
   64 |         free(ref->symref);
      |         ^
dot graph start relate form ID : 1648733825
from free_ref basic block 3dot graph end relate end

dot graph relate stmt start ID : 1707600597 stmt(free) :free (_3);
./benchmarks/git/double_free_4/git_df_4.c:64:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1707600597 stmt(free) :free (_3);
./benchmarks/git/double_free_4/git_df_4.c:64:9: warning: use location
dot graph relate end

# .MEM_11 = VDEF <.MEM_10>
free (ref_5(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_11 = VDEF <.MEM_10>
free (ref_5(D));
./benchmarks/git/double_free_4/git_df_4.c:65:9: warning: use location
   65 |         free(ref);
      |         ^
dot graph start relate form ID : 1648733825
from free_ref basic block 3dot graph end relate end

dot graph relate stmt start ID : 1959448944 stmt(free) :free (ref_5(D));
./benchmarks/git/double_free_4/git_df_4.c:65:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1959448944 stmt(free) :free (ref_5(D));
./benchmarks/git/double_free_4/git_df_4.c:65:9: warning: use location
dot graph relate end

 <ssa_name 0x7f89e02999d8
    type <pointer_type 0x7f89e026e738
        type <record_type 0x7f89e026e690 ref BLK
            size <integer_cst 0x7f89e082b0a8 constant 640>
            unit-size <integer_cst 0x7f89e0265738 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f89e026e690 fields <field_decl 0x7f89e0271850 next> context <translation_unit_decl 0x7f89e0761168 ./benchmarks/git/double_free_4/git_df_4.c>
            pointer_to_this <pointer_type 0x7f89e026e738>>
        public unsigned DI
        size <integer_cst 0x7f89e0756bb8 constant 64>
        unit-size <integer_cst 0x7f89e0756bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f89e026e7e0>>
   
    def_stmt _1 = ref_5(D)->peer_ref;
    version:1
    ptr-info 0x7f89e0287ac8>
[40;36m ======= node_fun:free_ref========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
dot graph arrowdot graph start relate for1ID : 1648733825
from free_ref basic block 3dot graph end relate end

./benchmarks/git/double_free_4/git_df_4.c:62:9: warning: use location
   62 |         free_ref(ref->peer_ref);
      |         ^
_1 = ref_5(D)->peer_ref;
dot graph relate stmt start ID : 1892957545 stmt(LHS) :./benchmarks/git/double_free_4/git_df_4.c:62:9: warning: use location
_1
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
dot graph arrowdot graph start relate for1ID : 1648733825
from free_ref basic block 3dot graph end relate end

./benchmarks/git/double_free_4/git_df_4.c:63:17: warning: use location
   63 |         free(ref->remote_status);
      |                 ^
_2 = ref_5(D)->remote_status;
dot graph relate stmt start ID : 981597870 stmt(LHS) :./benchmarks/git/double_free_4/git_df_4.c:63:17: warning: use location
_2
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
dot graph arrowdot graph start relate for1ID : 1648733825
from free_ref basic block 3dot graph end relate end

./benchmarks/git/double_free_4/git_df_4.c:64:17: warning: use location
   64 |         free(ref->symref);
      |                 ^
_3 = ref_5(D)->symref;
dot graph relate stmt start ID : 1334443925 stmt(LHS) :./benchmarks/git/double_free_4/git_df_4.c:64:17: warning: use location
_3
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:free_ref========= [0m
[40;46m =======add node_fun stack:free_ref========= [0m
[40;44m =======trace_function_path free_ref  function_call count: 2 level :1========  [0m
# .MEM_9 = VDEF <.MEM_8>
free (_2);
[40;31m  find free stmt free same pointer [0m
# .MEM_9 = VDEF <.MEM_8>
free (_2);
./benchmarks/git/double_free_4/git_df_4.c:63:9: warning: use location
   63 |         free(ref->remote_status);
      |         ^
dot graph start relate form ID : 1284264648
from free_ref basic block 3dot graph end relate end

dot graph relate stmt start ID : 525278701 stmt(free) :free (_2);
./benchmarks/git/double_free_4/git_df_4.c:63:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 525278701 stmt(free) :free (_2);
./benchmarks/git/double_free_4/git_df_4.c:63:9: warning: use location
dot graph relate end

# .MEM_10 = VDEF <.MEM_9>
free (_3);
[40;31m  find free stmt free same pointer [0m
# .MEM_10 = VDEF <.MEM_9>
free (_3);
./benchmarks/git/double_free_4/git_df_4.c:64:9: warning: use location
   64 |         free(ref->symref);
      |         ^
dot graph start relate form ID : 1284264648
from free_ref basic block 3dot graph end relate end

dot graph relate stmt start ID : 1505507711 stmt(free) :free (_3);
./benchmarks/git/double_free_4/git_df_4.c:64:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1505507711 stmt(free) :free (_3);
./benchmarks/git/double_free_4/git_df_4.c:64:9: warning: use location
dot graph relate end

# .MEM_11 = VDEF <.MEM_10>
free (ref_5(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_11 = VDEF <.MEM_10>
free (ref_5(D));
./benchmarks/git/double_free_4/git_df_4.c:65:9: warning: use location
   65 |         free(ref);
      |         ^
dot graph start relate form ID : 1284264648
from free_ref basic block 3dot graph end relate end

dot graph relate stmt start ID : 860437963 stmt(free) :free (ref_5(D));
./benchmarks/git/double_free_4/git_df_4.c:65:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 860437963 stmt(free) :free (ref_5(D));
./benchmarks/git/double_free_4/git_df_4.c:65:9: warning: use location
dot graph relate end

 <ssa_name 0x7f89e02999d8
    type <pointer_type 0x7f89e026e738
        type <record_type 0x7f89e026e690 ref BLK
            size <integer_cst 0x7f89e082b0a8 constant 640>
            unit-size <integer_cst 0x7f89e0265738 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f89e026e690 fields <field_decl 0x7f89e0271850 next> context <translation_unit_decl 0x7f89e0761168 ./benchmarks/git/double_free_4/git_df_4.c>
            pointer_to_this <pointer_type 0x7f89e026e738>>
        public unsigned DI
        size <integer_cst 0x7f89e0756bb8 constant 64>
        unit-size <integer_cst 0x7f89e0756bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f89e026e7e0>>
   
    def_stmt _1 = ref_5(D)->peer_ref;
    version:1
    ptr-info 0x7f89e0287ac8>
[40;36m ======= node_fun:free_ref========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
dot graph arrowdot graph start relate for1ID : 1284264648
from free_ref basic block 3dot graph end relate end

./benchmarks/git/double_free_4/git_df_4.c:62:9: warning: use location
   62 |         free_ref(ref->peer_ref);
      |         ^
_1 = ref_5(D)->peer_ref;
dot graph relate stmt start ID : 1445319732 stmt(LHS) :./benchmarks/git/double_free_4/git_df_4.c:62:9: warning: use location
_1
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
dot graph arrowdot graph start relate for1ID : 1284264648
from free_ref basic block 3dot graph end relate end

./benchmarks/git/double_free_4/git_df_4.c:63:17: warning: use location
   63 |         free(ref->remote_status);
      |                 ^
_2 = ref_5(D)->remote_status;
dot graph relate stmt start ID : 41555935 stmt(LHS) :./benchmarks/git/double_free_4/git_df_4.c:63:17: warning: use location
_2
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
dot graph arrowdot graph start relate for1ID : 1284264648
from free_ref basic block 3dot graph end relate end

./benchmarks/git/double_free_4/git_df_4.c:64:17: warning: use location
   64 |         free(ref->symref);
      |                 ^
_3 = ref_5(D)->symref;
dot graph relate stmt start ID : 404587060 stmt(LHS) :./benchmarks/git/double_free_4/git_df_4.c:64:17: warning: use location
_3
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:free_ref========= [0m
[40;41m =======recursive_fun2:free_ref========= [0m

 ================== trace ================== 
trace fucntion free:6 
# .MEM_8 = VDEF <.MEM_7(D)>
free_ref (_1);
dot graph entry free_ref
dot graph target entry end

free_ref (_1);
./benchmarks/git/double_free_4/git_df_4.c:62:9: warning: use location
   62 |         free_ref(ref->peer_ref);
      |         ^
dot graph target loc start # .MEM_8 = VDEF <.MEM_7(D)>
free_ref (_1);
./benchmarks/git/double_free_4/git_df_4.c:62:9: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 3: free_ref (_1);
./benchmarks/git/double_free_4/git_df_4.c:62:9: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_8 = VDEF <.MEM_7(D)>
free_ref (_1);
./benchmarks/git/double_free_4/git_df_4.c:62:9: warning: use location
dot graph target loc end

dot graph target basicblock start from free_ref basic block 3dot graph target basicblock en1

dot graph stmt start free_ref (_1);
free_ref (_1);
dot graph stmt end

dot graph stmt start free_ref (_1);
./benchmarks/git/double_free_4/git_df_4.c:62:9: warning: use location
dot graph stmt end

this stmt call this function :free_ref
trace fucntion name:free_ref 
[40;44m =======trace_function_path free_ref  function_call count: 2 level :0========  [0m
# .MEM_9 = VDEF <.MEM_8>
free (_2);
[40;31m  find free stmt free same pointer [0m
# .MEM_9 = VDEF <.MEM_8>
free (_2);
./benchmarks/git/double_free_4/git_df_4.c:63:9: warning: use location
   63 |         free(ref->remote_status);
      |         ^
dot graph start relate form ID : 91181464
from free_ref basic block 3dot graph end relate end

dot graph relate stmt start ID : 495151866 stmt(free) :free (_2);
./benchmarks/git/double_free_4/git_df_4.c:63:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 495151866 stmt(free) :free (_2);
./benchmarks/git/double_free_4/git_df_4.c:63:9: warning: use location
dot graph relate end

# .MEM_10 = VDEF <.MEM_9>
free (_3);
[40;31m  find free stmt free same pointer [0m
# .MEM_10 = VDEF <.MEM_9>
free (_3);
./benchmarks/git/double_free_4/git_df_4.c:64:9: warning: use location
   64 |         free(ref->symref);
      |         ^
dot graph start relate form ID : 91181464
from free_ref basic block 3dot graph end relate end

dot graph relate stmt start ID : 1168718372 stmt(free) :free (_3);
./benchmarks/git/double_free_4/git_df_4.c:64:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1168718372 stmt(free) :free (_3);
./benchmarks/git/double_free_4/git_df_4.c:64:9: warning: use location
dot graph relate end

# .MEM_11 = VDEF <.MEM_10>
free (ref_5(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_11 = VDEF <.MEM_10>
free (ref_5(D));
./benchmarks/git/double_free_4/git_df_4.c:65:9: warning: use location
   65 |         free(ref);
      |         ^
dot graph start relate form ID : 91181464
from free_ref basic block 3dot graph end relate end

dot graph relate stmt start ID : 2053212063 stmt(free) :free (ref_5(D));
./benchmarks/git/double_free_4/git_df_4.c:65:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 2053212063 stmt(free) :free (ref_5(D));
./benchmarks/git/double_free_4/git_df_4.c:65:9: warning: use location
dot graph relate end

 <ssa_name 0x7f89e02999d8
    type <pointer_type 0x7f89e026e738
        type <record_type 0x7f89e026e690 ref BLK
            size <integer_cst 0x7f89e082b0a8 constant 640>
            unit-size <integer_cst 0x7f89e0265738 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f89e026e690 fields <field_decl 0x7f89e0271850 next> context <translation_unit_decl 0x7f89e0761168 ./benchmarks/git/double_free_4/git_df_4.c>
            pointer_to_this <pointer_type 0x7f89e026e738>>
        public unsigned DI
        size <integer_cst 0x7f89e0756bb8 constant 64>
        unit-size <integer_cst 0x7f89e0756bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f89e026e7e0>>
   
    def_stmt _1 = ref_5(D)->peer_ref;
    version:1
    ptr-info 0x7f89e0287ac8>
[40;36m ======= node_fun:free_ref========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
dot graph arrowdot graph start relate for1ID : 91181464
from free_ref basic block 3dot graph end relate end

./benchmarks/git/double_free_4/git_df_4.c:62:9: warning: use location
   62 |         free_ref(ref->peer_ref);
      |         ^
_1 = ref_5(D)->peer_ref;
dot graph relate stmt start ID : 1221259426 stmt(LHS) :./benchmarks/git/double_free_4/git_df_4.c:62:9: warning: use location
_1
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
dot graph arrowdot graph start relate for1ID : 91181464
from free_ref basic block 3dot graph end relate end

./benchmarks/git/double_free_4/git_df_4.c:63:17: warning: use location
   63 |         free(ref->remote_status);
      |                 ^
_2 = ref_5(D)->remote_status;
dot graph relate stmt start ID : 1470358709 stmt(LHS) :./benchmarks/git/double_free_4/git_df_4.c:63:17: warning: use location
_2
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
dot graph arrowdot graph start relate for1ID : 91181464
from free_ref basic block 3dot graph end relate end

./benchmarks/git/double_free_4/git_df_4.c:64:17: warning: use location
   64 |         free(ref->symref);
      |                 ^
_3 = ref_5(D)->symref;
dot graph relate stmt start ID : 1459847881 stmt(LHS) :./benchmarks/git/double_free_4/git_df_4.c:64:17: warning: use location
_3
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:free_ref========= [0m
[40;46m =======add node_fun stack:free_ref========= [0m
[40;44m =======trace_function_path free_ref  function_call count: 2 level :1========  [0m
# .MEM_9 = VDEF <.MEM_8>
free (_2);
[40;31m  find free stmt free same pointer [0m
# .MEM_9 = VDEF <.MEM_8>
free (_2);
./benchmarks/git/double_free_4/git_df_4.c:63:9: warning: use location
   63 |         free(ref->remote_status);
      |         ^
dot graph start relate form ID : 1675588214
from free_ref basic block 3dot graph end relate end

dot graph relate stmt start ID : 1307740542 stmt(free) :free (_2);
./benchmarks/git/double_free_4/git_df_4.c:63:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1307740542 stmt(free) :free (_2);
./benchmarks/git/double_free_4/git_df_4.c:63:9: warning: use location
dot graph relate end

# .MEM_10 = VDEF <.MEM_9>
free (_3);
[40;31m  find free stmt free same pointer [0m
# .MEM_10 = VDEF <.MEM_9>
free (_3);
./benchmarks/git/double_free_4/git_df_4.c:64:9: warning: use location
   64 |         free(ref->symref);
      |         ^
dot graph start relate form ID : 1675588214
from free_ref basic block 3dot graph end relate end

dot graph relate stmt start ID : 14671761 stmt(free) :free (_3);
./benchmarks/git/double_free_4/git_df_4.c:64:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 14671761 stmt(free) :free (_3);
./benchmarks/git/double_free_4/git_df_4.c:64:9: warning: use location
dot graph relate end

# .MEM_11 = VDEF <.MEM_10>
free (ref_5(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_11 = VDEF <.MEM_10>
free (ref_5(D));
./benchmarks/git/double_free_4/git_df_4.c:65:9: warning: use location
   65 |         free(ref);
      |         ^
dot graph start relate form ID : 1675588214
from free_ref basic block 3dot graph end relate end

dot graph relate stmt start ID : 778437124 stmt(free) :free (ref_5(D));
./benchmarks/git/double_free_4/git_df_4.c:65:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 778437124 stmt(free) :free (ref_5(D));
./benchmarks/git/double_free_4/git_df_4.c:65:9: warning: use location
dot graph relate end

 <ssa_name 0x7f89e02999d8
    type <pointer_type 0x7f89e026e738
        type <record_type 0x7f89e026e690 ref BLK
            size <integer_cst 0x7f89e082b0a8 constant 640>
            unit-size <integer_cst 0x7f89e0265738 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f89e026e690 fields <field_decl 0x7f89e0271850 next> context <translation_unit_decl 0x7f89e0761168 ./benchmarks/git/double_free_4/git_df_4.c>
            pointer_to_this <pointer_type 0x7f89e026e738>>
        public unsigned DI
        size <integer_cst 0x7f89e0756bb8 constant 64>
        unit-size <integer_cst 0x7f89e0756bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f89e026e7e0>>
   
    def_stmt _1 = ref_5(D)->peer_ref;
    version:1
    ptr-info 0x7f89e0287ac8>
[40;36m ======= node_fun:free_ref========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
dot graph arrowdot graph start relate for1ID : 1675588214
from free_ref basic block 3dot graph end relate end

./benchmarks/git/double_free_4/git_df_4.c:62:9: warning: use location
   62 |         free_ref(ref->peer_ref);
      |         ^
_1 = ref_5(D)->peer_ref;
dot graph relate stmt start ID : 1839361213 stmt(LHS) :./benchmarks/git/double_free_4/git_df_4.c:62:9: warning: use location
_1
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
dot graph arrowdot graph start relate for1ID : 1675588214
from free_ref basic block 3dot graph end relate end

./benchmarks/git/double_free_4/git_df_4.c:63:17: warning: use location
   63 |         free(ref->remote_status);
      |                 ^
_2 = ref_5(D)->remote_status;
dot graph relate stmt start ID : 1715907539 stmt(LHS) :./benchmarks/git/double_free_4/git_df_4.c:63:17: warning: use location
_2
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
dot graph arrowdot graph start relate for1ID : 1675588214
from free_ref basic block 3dot graph end relate end

./benchmarks/git/double_free_4/git_df_4.c:64:17: warning: use location
   64 |         free(ref->symref);
      |                 ^
_3 = ref_5(D)->symref;
dot graph relate stmt start ID : 2124951942 stmt(LHS) :./benchmarks/git/double_free_4/git_df_4.c:64:17: warning: use location
_3
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:free_ref========= [0m
[40;41m =======recursive_fun2:free_ref========= [0m

 ================== trace ================== 
trace fucntion free:12 
dot graph target basicblock start from free_ref basic block 3dot graph target basicblock en1

dot graph arrowsubgraph cluster_1271621093 dot graph subgraph  free_ref (_1);
_1 = ref_5(D)->peer_ref;
dot graph subgrapend

dot graph target basicblock start from free_ref basic block 3dot graph target basicblock en1

dot graph arrowsubgraph cluster_1199079448 dot graph subgraph  free_ref (_1);
_1 = ref_5(D)->peer_ref;
dot graph subgrapend

dot graph start relate for1ID : 1050221684
from free_ref basic block 3dot graph end relate end

subgraph cluster_1692223370 dot graph subgraph  start ID : 744585745 stmt(relate) ， Tree ID : 1050221684 : _3 = ref_5(D)->symref;
./benchmarks/git/double_free_4/git_df_4.c:64:17: warning: use location
dot graph subgrapend

dot graph start relate for1ID : 988531808
from free_ref basic block 3dot graph end relate end

subgraph cluster_772871271 dot graph subgraph  start ID : 644427797 stmt(relate) ， Tree ID : 988531808 : _3 = ref_5(D)->symref;
./benchmarks/git/double_free_4/git_df_4.c:64:17: warning: use location
dot graph subgrapend

dot graph start relate for1ID : 1405079620
from free_ref basic block 3dot graph end relate end

subgraph cluster_592384348 dot graph subgraph  start ID : 1603193248 stmt(relate) ， Tree ID : 1405079620 : _3 = ref_5(D)->symref;
./benchmarks/git/double_free_4/git_df_4.c:64:17: warning: use location
dot graph subgrapend

dot graph start relate for1ID : 2145716117
from free_ref basic block 3dot graph end relate end

subgraph cluster_1252340319 dot graph subgraph  start ID : 353884020 stmt(relate) ， Tree ID : 2145716117 : _3 = ref_5(D)->symref;
./benchmarks/git/double_free_4/git_df_4.c:64:17: warning: use location
dot graph subgrapend

dot graph start relate for1ID : 1648733825
from free_ref basic block 3dot graph end relate end

subgraph cluster_584836567 dot graph subgraph  start ID : 1334443925 stmt(relate) ， Tree ID : 1648733825 : _3 = ref_5(D)->symref;
./benchmarks/git/double_free_4/git_df_4.c:64:17: warning: use location
dot graph subgrapend

dot graph start relate for1ID : 1284264648
from free_ref basic block 3dot graph end relate end

subgraph cluster_337858245 dot graph subgraph  start ID : 404587060 stmt(relate) ， Tree ID : 1284264648 : _3 = ref_5(D)->symref;
./benchmarks/git/double_free_4/git_df_4.c:64:17: warning: use location
dot graph subgrapend

dot graph start relate for1ID : 91181464
from free_ref basic block 3dot graph end relate end

subgraph cluster_86454541 dot graph subgraph  start ID : 1459847881 stmt(relate) ， Tree ID : 91181464 : _3 = ref_5(D)->symref;
./benchmarks/git/double_free_4/git_df_4.c:64:17: warning: use location
dot graph subgrapend

dot graph start relate for1ID : 1675588214
from free_ref basic block 3dot graph end relate end

subgraph cluster_1919280492 dot graph subgraph  start ID : 2124951942 stmt(relate) ， Tree ID : 1675588214 : _3 = ref_5(D)->symref;
./benchmarks/git/double_free_4/git_df_4.c:64:17: warning: use location
dot graph subgrapend


 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f89e02999d8
    type <pointer_type 0x7f89e026e738
        type <record_type 0x7f89e026e690 ref BLK
            size <integer_cst 0x7f89e082b0a8 constant 640>
            unit-size <integer_cst 0x7f89e0265738 constant 80>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f89e026e690 fields <field_decl 0x7f89e0271850 next> context <translation_unit_decl 0x7f89e0761168 ./benchmarks/git/double_free_4/git_df_4.c>
            pointer_to_this <pointer_type 0x7f89e026e738>>
        public unsigned DI
        size <integer_cst 0x7f89e0756bb8 constant 64>
        unit-size <integer_cst 0x7f89e0756bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f89e026e7e0>>
   
    def_stmt _1 = ref_5(D)->peer_ref;
    version:1
    ptr-info 0x7f89e0287ac8>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_9 = VDEF <.MEM_8>
free (_2);
./benchmarks/git/double_free_4/git_df_4.c:63:9: warning: use location
   63 |         free(ref->remote_status);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_10 = VDEF <.MEM_9>
free (_3);
./benchmarks/git/double_free_4/git_df_4.c:64:9: warning: use location
   64 |         free(ref->symref);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_11 = VDEF <.MEM_10>
free (ref_5(D));
./benchmarks/git/double_free_4/git_df_4.c:65:9: warning: use location
   65 |         free(ref);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:12 [0m
[40;31m  	possible double free [Looserules]:3 [0m
[40;31m  	possible double free [rigorous]:12 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:12 [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:free_ref========= [0m
fucntion collect path finsh

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 47322052]:
_1 = get_local_heads ();
_2 = (long int) _1;
local_refs_12 = (struct ref *) _2;
remote_tail = &remote_refs;
_3 = remote_refs;
goto <bb 21>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 382878437]:
dst_name_22 = &src_21->name;
_23 = src_21->peer_ref;
if (_23 != 0B)
  goto <bb 4>; [70.00%]
else
  goto <bb 7>; [30.00%]

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 268014907]:
// predicted unlikely by continue predictor.
goto <bb 20>; [100.00%]

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 1014686025]:
_36 = &list_35->name;
_37 = strcmp (_36, dst_name_22);
if (_37 == 0)
  goto <bb 8>; [5.50%]
else
  goto <bb 6>; [94.50%]

=======is loop:1=========

 bb index 6 
<bb 6> [local count: 958878293]:
list_38 = list_35->next;

=======is loop:1=========

 bb index 7 
<bb 7> [local count: 1073741824]:
# list_35 = PHI <_3(3), list_38(6)>
if (list_35 != 0B)
  goto <bb 5>; [94.50%]
else
  goto <bb 8>; [5.50%]

=======is loop:1=========

 bb index 8 
<bb 8> [local count: 114863531]:
# _39 = PHI <list_35(5), 0B(7)>
_67 = _39;
dst_peer_24 = _67;
if (dst_peer_24 != 0B)
  goto <bb 9>; [70.00%]
else
  goto <bb 11>; [30.00%]

=======is loop:1=========

 bb index 9 
<bb 9> [local count: 80404472]:
_25 = dst_peer_24->peer_ref;
if (_25 != 0B)
  goto <bb 10>; [54.59%]
else
  goto <bb 18>; [45.41%]

=======is loop:1=========

 bb index 10 
<bb 10> [local count: 43892802]:
// predicted unlikely by goto predictor.
goto <bb 19>; [100.00%]

=======is loop:1=========

 bb index 11 
<bb 11> [local count: 34459059]:
_26 = BIT_FIELD_REF <MEM[(const struct refspec *)0B], 8, 0>;
_27 = _26 & 4;
if (_27 != 0)
  goto <bb 12>; [67.00%]
else
  goto <bb 14>; [33.00%]

=======is loop:1=========

 bb index 12 
<bb 12> [local count: 23087570]:
_28 = 1;
if (_28 == 0)
  goto <bb 13>; [34.00%]
else
  goto <bb 14>; [66.00%]

=======is loop:1=========

 bb index 13 
<bb 13> [local count: 7849774]:
// predicted unlikely by goto predictor.
goto <bb 19>; [100.00%]

=======is loop:1=========

 bb index 14 
<bb 14> [local count: 26609285]:
len_47 = strlen (dst_name_22);
_48 = len_47;
_49 = _48 + 81;
ref_50 = calloc (1, _49);
_51 = &ref_50->name;
GIMPLE_NOP
_52 = &ref_50->name;
_53 = _52;
memcpy (_53, dst_name_22, len_47);
_70 = ref_50;
_46 = _70;
_71 = _46;
ret_40 = _71;
_41 = remote_tail;
*_41 = ret_40;
goto <bb 16>; [100.00%]

=======is loop:1=========

 bb index 15 
<bb 15> [local count: 215293310]:
ref_43 = ref_42->next;

=======is loop:1=========

 bb index 16 
<bb 16> [local count: 241902595]:
# ref_42 = PHI <ret_40(14), ref_43(15)>
_44 = ref_42->next;
if (_44 != 0B)
  goto <bb 15>; [89.00%]
else
  goto <bb 17>; [11.00%]

=======is loop:1=========

 bb index 17 
<bb 17> [local count: 26609285]:
_45 = &ref_42->next;
remote_tail = _45;
_74 = ret_40;
dst_peer_29 = _74;
_30 = &src_21->new_sha1;
_31 = &dst_peer_29->new_sha1;
hashcpy (_31, _30);

=======is loop:1=========

 bb index 18 
<bb 18> [local count: 63120956]:
# dst_peer_32 = PHI <dst_peer_24(9), dst_peer_29(17)>
dst_peer_32->peer_ref = src_21;
_33 = MEM[(const struct refspec *)0B].force;
dst_peer_32->force = _33;

=======is loop:1=========

 bb index 19 
<bb 19> [local count: 114863531]:
free_name:
free (dst_name_22);

=======is loop:1=========

 bb index 20 
<bb 20> [local count: 382878439]:
src_34 = src_21->next;

=======is loop:1=========

 bb index 21 
<bb 21> [local count: 430200491]:
# src_21 = PHI <local_refs_12(2), src_34(20)>
if (src_21 != 0B)
  goto <bb 3>; [89.00%]
else
  goto <bb 22>; [11.00%]

=======is loop:0=========

 bb index 22 
<bb 22> [local count: 47322054]:
_64 = 0;
_4 = _64;
if (_4 != 0)
  goto <bb 23>; [34.00%]
else
  goto <bb 24>; [66.00%]

=======is loop:0=========

 bb index 23 
<bb 23> [local count: 16089498]:
// predicted unlikely by goto predictor.
goto <bb 26>; [100.00%]

=======is loop:0=========

 bb index 24 
<bb 24> [local count: 31232555]:
_5 = remote_refs;
if (_5 == 0B)
  goto <bb 25>; [9.81%]
else
  goto <bb 26>; [90.19%]

=======is loop:0=========

 bb index 25 
<bb 25> [local count: 3063914]:
_6 = stderr;
__builtin_fwrite ("No refs in common and none specified; doing nothing.\n", 1, 53, _6);
// predicted unlikely by goto predictor.

=======is loop:0=========

 bb index 26 
<bb 26> [local count: 47322054]:
cleanup:
goto <bb 28>; [100.00%]

=======is loop:1=========

 bb index 27 
<bb 27> [local count: 382878438]:
next_57 = ref_56->next;
free_ref (ref_56);

=======is loop:1=========

 bb index 28 
<bb 28> [local count: 430200491]:
# ref_56 = PHI <local_refs_12(26), next_57(27)>
if (ref_56 != 0B)
  goto <bb 27>; [89.00%]
else
  goto <bb 29>; [11.00%]

=======is loop:0=========

 bb index 29 
<bb 29> [local count: 47322054]:
_7 = remote_refs;
goto <bb 31>; [100.00%]

=======is loop:1=========

 bb index 30 
<bb 30> [local count: 382878438]:
next_55 = ref_54->next;
free_ref (ref_54);

=======is loop:1=========

 bb index 31 
<bb 31> [local count: 430200491]:
# ref_54 = PHI <_7(29), next_55(30)>
if (ref_54 != 0B)
  goto <bb 30>; [89.00%]
else
  goto <bb 32>; [11.00%]

=======is loop:0=========

 bb index 32 
<bb 32> [local count: 47322054]:
return 0;

=======Mapping node_fun:free_ref=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
if (ref_5(D) == 0B)
  goto <bb 4>; [30.95%]
else
  goto <bb 3>; [69.05%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 741418729]:
_1 = ref_5(D)->peer_ref;
free_ref (_1);
_2 = ref_5(D)->remote_status;
free (_2);
_3 = ref_5(D)->symref;
free (_3);
free (ref_5(D));

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073741824]:
return;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    gimple malloc count : 1 [0m
[40;34m    gimple free   count : 4 [0m
[40;34m    all ptable point : 19 [0m
[40;34m    analyzable ptable point : 14 [0m
[40;34m    used_stmt array stack totalsize of : 0.003824 mb[0m
[40;34m    collect time: : 0.006184 s [0m
[40;34m    algorithm time: 0.080671 s [0m
[40;34m    gimple stmt count : : 85 [0m
[40;34m    this report analysis in Sun Feb 20 09:53:00 2022
 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.00 (  0%)  2157k ( 82%)
 phase opt and generate             :   0.05 (100%)   0.05 (100%)   0.10 (100%)   413k ( 16%)
 callgraph functions expansion      :   0.01 ( 20%)   0.00 (  0%)   0.01 ( 10%)   262k ( 10%)
 tree CFG cleanup                   :   0.00 (  0%)   0.00 (  0%)   0.02 ( 20%)   864  (  0%)
 integrated RA                      :   0.01 ( 20%)   0.00 (  0%)   0.00 (  0%)    51k (  2%)
 plugin execution                   :   0.04 ( 80%)   0.05 (100%)   0.08 ( 80%)  1512  (  0%)
 TOTAL                              :   0.05          0.05          0.10         2633k
/usr/bin/ld: /tmp/ccRsYfF8.ltrans0.ltrans.o: in function `main':
<artificial>:(.text+0x43): undefined reference to `get_local_heads'
/usr/bin/ld: <artificial>:(.text+0x133): undefined reference to `hashcpy'
collect2: error: ld returned 1 exit status
