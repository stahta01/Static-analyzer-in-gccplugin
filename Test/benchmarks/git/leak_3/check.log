../Compiler/newplugin.so 11.2.0 
In file included from ./benchmarks/git/leak_3/git_leak_3.c:10:
./benchmarks/git/leak_3/../git.h: In function ‘copy_array’:
./benchmarks/git/leak_3/../git.h:161:17: warning: implicit declaration of function ‘memcpy’ [-Wimplicit-function-declaration]
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                 ^~~~~~
./benchmarks/git/leak_3/../git.h:1:1: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
  +++ |+#include <string.h>
    1 | #define STRING_LIST_INIT_NODUP { NULL, 0, 0, 0, NULL }
./benchmarks/git/leak_3/../git.h:161:17: warning: incompatible implicit declaration of built-in function ‘memcpy’ [-Wbuiltin-declaration-mismatch]
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                 ^~~~~~
./benchmarks/git/leak_3/../git.h:161:17: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
./benchmarks/git/leak_3/../git.h:161:34: warning: implicit declaration of function ‘st_mult’ [-Wimplicit-function-declaration]
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                                  ^~~~~~~
./benchmarks/git/leak_3/../git.h: In function ‘move_array’:
./benchmarks/git/leak_3/../git.h:169:17: warning: implicit declaration of function ‘memmove’ [-Wimplicit-function-declaration]
  169 |                 memmove(dst, src, st_mult(size, n));
      |                 ^~~~~~~
./benchmarks/git/leak_3/../git.h:169:17: note: include ‘<string.h>’ or provide a declaration of ‘memmove’
./benchmarks/git/leak_3/../git.h:169:17: warning: incompatible implicit declaration of built-in function ‘memmove’ [-Wbuiltin-declaration-mismatch]
./benchmarks/git/leak_3/../git.h:169:17: note: include ‘<string.h>’ or provide a declaration of ‘memmove’
In file included from ./benchmarks/git/leak_3/git_leak_3.c:9:
./benchmarks/git/leak_3/../git.h: In function ‘xstrdup_or_null’:
./benchmarks/git/leak_3/../stdio.h:138:20: warning: implicit declaration of function ‘strdup’ [-Wimplicit-function-declaration]
  138 | #define xstrdup(a) strdup(a)
      |                    ^~~~~~
./benchmarks/git/leak_3/../git.h:174:22: note: in expansion of macro ‘xstrdup’
  174 |         return str ? xstrdup(str) : NULL;
      |                      ^~~~~~~
./benchmarks/git/leak_3/../stdio.h:138:20: warning: incompatible implicit declaration of built-in function ‘strdup’ [-Wbuiltin-declaration-mismatch]
  138 | #define xstrdup(a) strdup(a)
      |                    ^~~~~~
./benchmarks/git/leak_3/../git.h:174:22: note: in expansion of macro ‘xstrdup’
  174 |         return str ? xstrdup(str) : NULL;
      |                      ^~~~~~~
In file included from ./benchmarks/git/leak_3/git_leak_3.c:10:
./benchmarks/git/leak_3/../git.h: At top level:
./benchmarks/git/leak_3/../git.h:236:62: warning: ‘struct archiver_args’ declared inside parameter list will not be visible outside of this definition or declaration
  236 |         int (*write_archive)(const struct archiver *, struct archiver_args *);
      |                                                              ^~~~~~~~~~~~~
./benchmarks/git/leak_3/../git.h: In function ‘strbuf_swap’:
./benchmarks/git/leak_3/../git.h:126:9: warning: incompatible implicit declaration of built-in function ‘memcpy’ [-Wbuiltin-declaration-mismatch]
  126 |         memcpy(_swap_buffer, _swap_a_ptr, sizeof(a));           \
      |         ^~~~~~
./benchmarks/git/leak_3/../git.h:407:9: note: in expansion of macro ‘SWAP’
  407 |         SWAP(*a, *b);
      |         ^~~~
./benchmarks/git/leak_3/../git.h:126:9: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
  126 |         memcpy(_swap_buffer, _swap_a_ptr, sizeof(a));           \
      |         ^~~~~~
./benchmarks/git/leak_3/../git.h:407:9: note: in expansion of macro ‘SWAP’
  407 |         SWAP(*a, *b);
      |         ^~~~
./benchmarks/git/leak_3/git_leak_3.c: In function ‘find_bisection’:
./benchmarks/git/leak_3/git_leak_3.c:19:9: warning: implicit declaration of function ‘show_list’ [-Wimplicit-function-declaration]
   19 |         show_list("bisection 2 entry", 0, 0, *commit_list);
      |         ^~~~~~~~~

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.00 (  0%)  1298k ( 52%)
 phase parsing                      :   0.04 (100%)   0.01 (100%)   0.04 ( 67%)  1048k ( 42%)
 phase opt and generate             :   0.00 (  0%)   0.00 (  0%)   0.01 ( 17%)   123k (  5%)
 callgraph ipa passes               :   0.00 (  0%)   0.00 (  0%)   0.01 ( 17%)    74k (  3%)
 ipa free lang data                 :   0.00 (  0%)   0.00 (  0%)   0.01 ( 17%)  2632  (  0%)
 preprocessing                      :   0.02 ( 50%)   0.01 (100%)   0.01 ( 17%)   318k ( 13%)
 lexical analysis                   :   0.01 ( 25%)   0.00 (  0%)   0.01 ( 17%)     0  (  0%)
 parser (global)                    :   0.01 ( 25%)   0.00 (  0%)   0.01 ( 17%)   567k ( 23%)
 parser inl. func. body             :   0.00 (  0%)   0.00 (  0%)   0.01 ( 17%)    23k (  1%)
 TOTAL                              :   0.04          0.01          0.06         2480k
../Compiler/newplugin.so 11.2.0 

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.00 (  0%)  2157k ( 98%)
 TOTAL                              :   0.00          0.00          0.00         2208k
../Compiler/newplugin.so 11.2.0 
=======ipa_pta=========
=============== The first stage : Point of interest stmt collect =================
=======node_fun:main=========
node:= 2 
 	next_branch :=4
node:= 3 
 	next_branch :=4
addr_expraddr_expraddr_expraddr_expraddr_expr------commit_list_insert--
node:= 4 
 	next_branch :=3
	next_branch :=5
addr_expraddr_expraddr_expraddr_expraddr_expr------find_bisection--
addr_expraddr_expraddr_expraddr_expraddr_expr------free_commit_list--
=======node_fun:free_commit_list=========
node:= 2 
 	next_branch :=4
node:= 3 
 	next_branch :=4
addr_expraddr_expraddr_expraddr_expraddr_expr------pop_commit--
node:= 4 
 	next_branch :=3
	next_branch :=5
=======node_fun:pop_commit=========
node:= 2 
 	next_branch :=3
	next_branch :=4
node:= 3 
 	next_branch :=4
node:= 4 
 	next_branch :=5
	next_branch :=6
node:= 5 
 	next_branch :=6
=======node_fun:commit_list_insert=========
=======node_fun:find_bisection=========
node:= 2 
 	next_branch :=10
addr_expraddr_expraddr_expraddr_expraddr_expr------show_list--
node:= 3 
 	next_branch :=4
	next_branch :=5
node:= 4 
 	next_branch :=8
node:= 5 
 	next_branch :=6
	next_branch :=7
node:= 6 
 	next_branch :=7
node:= 7 
 	next_branch :=8
node:= 8 
 	next_branch :=10
node:= 10 
 	next_branch :=3
	next_branch :=9
addr_expraddr_expraddr_expraddr_expraddr_expr------show_list--
=============== The first stage :  record fucntion =================
start PointerConstraint
ptable point 14 
===============The second stage : Mapping stmt=================
# .MEM_20 = VDEF <.MEM_13>
commit_list_insert (0B, &list);
# .MEM_15 = VDEF <.MEM_13>
find_bisection (&list, &reaches, &all, find_all_5(D));
# .MEM_16 = VDEF <.MEM_15>
free_commit_list (_1);
# .MEM_4 = VDEF <.MEM_2>
pop_commit (&list);
# .MEM_9 = VDEF <.MEM_8(D)>
new_list_4 = malloc (16);
# .MEM_29 = VDEF <.MEM_28(D)>
show_list ("bisection 2 entry", 0, 0, _1);
# .MEM_30 = VDEF <.MEM_27>
show_list ("bisection 2 sorted", 0, nr_7, last_10);
===============The second stage : Program slicing=================
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
commit_list_insert (0B, &list);
========================================================
------------------VAR_DECL : LHS2------------------
------------------VAR_DECL : LHS2------------------
------------------VAR_DECL : LHS2------------------
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
find_bisection (&list, &reaches, &all, find_all_5(D));
========================================================
------------------VAR_DECL : LHS2------------------
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
find_bisection (&list, &reaches, &all, find_all_5(D));
========================================================
=============== *this point analyzable =================
find_bisection (&list, &reaches, &all, find_all_5(D));
========================================================
 <ssa_name 0x7fbde94cd630
    type <pointer_type 0x7fbde8fdd7e0
        type <record_type 0x7fbde8fdd738 commit_list TI
            size <integer_cst 0x7fbde94c5c00 constant 128>
            unit-size <integer_cst 0x7fbde94c5c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbde8fdd738 fields <field_decl 0x7fbde8fe01c8 item> context <translation_unit_decl 0x7fbde94d0168 ./benchmarks/git/leak_3/git_leak_3.c>
            pointer_to_this <pointer_type 0x7fbde8fdd7e0>>
        public unsigned DI
        size <integer_cst 0x7fbde94c5bb8 constant 64>
        unit-size <integer_cst 0x7fbde94c5bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fbde8fdd888>>
   
    def_stmt _1 = list;
    version:1
    ptr-info 0x7fbde8fee3f0>
=============== *this point analyzable =================
free_commit_list (_1);
========================================================
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
pop_commit (&list);
========================================================
=============== *this point analyzable =================
new_list_4 = malloc (16);
========================================================
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
show_list ("bisection 2 entry", 0, 0, _1);
========================================================
=============== *this point analyzable =================
show_list ("bisection 2 entry", 0, 0, _1);
========================================================
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
show_list ("bisection 2 sorted", 0, nr_7, last_10);
========================================================
=============== *this point analyzable =================
show_list ("bisection 2 sorted", 0, nr_7, last_10);
========================================================
=============== *this point analyzable =================
show_list ("bisection 2 sorted", 0, nr_7, last_10);
========================================================
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m

=============== The third stage : Start detection  =================
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 3 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free_commit_list========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path free_commit_list  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:pop_commit========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path pop_commit  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre_check_funciton:pop_commit========= [0m
[40;42m =======start_check_funciton:pop_commit========= [0m
[40;33m =======POP node_fun stack:pop_commit========= [0m
[40;42m =======pre_check_funciton:free_commit_list========= [0m
[40;42m =======start_check_funciton:free_commit_list========= [0m

dot graph START

======================================================================
 <parm_decl 0x7fbde8ff4000 list
    type <pointer_type 0x7fbde8fdd7e0
        type <record_type 0x7fbde8fdd738 commit_list TI
            size <integer_cst 0x7fbde94c5c00 constant 128>
            unit-size <integer_cst 0x7fbde94c5c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbde8fdd738 fields <field_decl 0x7fbde8fe01c8 item> context <translation_unit_decl 0x7fbde94d0168 ./benchmarks/git/leak_3/git_leak_3.c>
            pointer_to_this <pointer_type 0x7fbde8fdd7e0>>
        public unsigned DI
        size <integer_cst 0x7fbde94c5bb8 constant 64>
        unit-size <integer_cst 0x7fbde94c5bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fbde8fdd888>>
    addressable unsigned DI ./benchmarks/git/leak_3/git_leak_3.c:71:43 size <integer_cst 0x7fbde94c5bb8 64> unit-size <integer_cst 0x7fbde94c5bd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7fbde8fded00 free_commit_list> arg-type <pointer_type 0x7fbde8fdd7e0>>

 ================== this stmt hava call fucntion ================== 
 <parm_decl 0x7fbde8ff4000 list
    type <pointer_type 0x7fbde8fdd7e0
        type <record_type 0x7fbde8fdd738 commit_list TI
            size <integer_cst 0x7fbde94c5c00 constant 128>
            unit-size <integer_cst 0x7fbde94c5c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbde8fdd738 fields <field_decl 0x7fbde8fe01c8 item> context <translation_unit_decl 0x7fbde94d0168 ./benchmarks/git/leak_3/git_leak_3.c>
            pointer_to_this <pointer_type 0x7fbde8fdd7e0>>
        public unsigned DI
        size <integer_cst 0x7fbde94c5bb8 constant 64>
        unit-size <integer_cst 0x7fbde94c5bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fbde8fdd888>>
    addressable unsigned DI ./benchmarks/git/leak_3/git_leak_3.c:71:43 size <integer_cst 0x7fbde94c5bb8 64> unit-size <integer_cst 0x7fbde94c5bd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7fbde8fded00 free_commit_list> arg-type <pointer_type 0x7fbde8fdd7e0>>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_4 = VDEF <.MEM_2>
pop_commit (&list);
pop_commit (&list);
In function ‘main’:
./benchmarks/git/leak_3/git_leak_3.c:74:17: warning: use location
   74 |                 pop_commit(&list);
      |                 ^
this stmt call this function :pop_commit
trace fucntion name:pop_commit 
[40;44m =======trace_function_path pop_commit  function_call count: 1 level :0========  [0m
# .MEM_11 = VDEF <.MEM_10>
free (top_6);
[40;31m  find free stmt free same pointer [0m
# .MEM_11 = VDEF <.MEM_10>
free (top_6);
./benchmarks/git/leak_3/git_leak_3.c:65:17: warning: use location
   65 |                 free(top);
      |                 ^
 <parm_decl 0x7fbde8ff4000 list
    type <pointer_type 0x7fbde8fdd7e0
        type <record_type 0x7fbde8fdd738 commit_list TI
            size <integer_cst 0x7fbde94c5c00 constant 128>
            unit-size <integer_cst 0x7fbde94c5c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbde8fdd738 fields <field_decl 0x7fbde8fe01c8 item> context <translation_unit_decl 0x7fbde94d0168 ./benchmarks/git/leak_3/git_leak_3.c>
            pointer_to_this <pointer_type 0x7fbde8fdd7e0>>
        public unsigned DI
        size <integer_cst 0x7fbde94c5bb8 constant 64>
        unit-size <integer_cst 0x7fbde94c5bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fbde8fdd888>>
    addressable unsigned DI ./benchmarks/git/leak_3/git_leak_3.c:71:43 size <integer_cst 0x7fbde94c5bb8 64> unit-size <integer_cst 0x7fbde94c5bd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7fbde8fded00 free_commit_list> arg-type <pointer_type 0x7fbde8fdd7e0>>
[40;36m ======= node_fun:pop_commit========= [0m
[40;36m ======= find relate stmt with list ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_4 = VDEF <.MEM_2>
pop_commit (&list);
pop_commit (&list);
./benchmarks/git/leak_3/git_leak_3.c:74:17: warning: use location
   74 |                 pop_commit(&list);
      |                 ^
this stmt call this function :pop_commit
trace fucntion name:pop_commit 
[40;44m =======trace_function_path pop_commit  function_call count: 1 level :0========  [0m
# .MEM_11 = VDEF <.MEM_10>
free (top_6);
[40;31m  find free stmt free same pointer [0m
# .MEM_11 = VDEF <.MEM_10>
free (top_6);
./benchmarks/git/leak_3/git_leak_3.c:65:17: warning: use location
   65 |                 free(top);
      |                 ^
 <parm_decl 0x7fbde8ff4000 list
    type <pointer_type 0x7fbde8fdd7e0
        type <record_type 0x7fbde8fdd738 commit_list TI
            size <integer_cst 0x7fbde94c5c00 constant 128>
            unit-size <integer_cst 0x7fbde94c5c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbde8fdd738 fields <field_decl 0x7fbde8fe01c8 item> context <translation_unit_decl 0x7fbde94d0168 ./benchmarks/git/leak_3/git_leak_3.c>
            pointer_to_this <pointer_type 0x7fbde8fdd7e0>>
        public unsigned DI
        size <integer_cst 0x7fbde94c5bb8 constant 64>
        unit-size <integer_cst 0x7fbde94c5bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fbde8fdd888>>
    addressable unsigned DI ./benchmarks/git/leak_3/git_leak_3.c:71:43 size <integer_cst 0x7fbde94c5bb8 64> unit-size <integer_cst 0x7fbde94c5bd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7fbde8fded00 free_commit_list> arg-type <pointer_type 0x7fbde8fdd7e0>>
[40;36m ======= node_fun:pop_commit========= [0m
[40;36m ======= find relate stmt with list ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:2 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:free_commit_list========= [0m
[40;42m =======pre add _ fucntion:find_bisection========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path find_bisection  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:show_list========= [0m
[40;33m =======POP node_fun stack:show_list========= [0m
[40;42m =======pre_check_funciton:find_bisection========= [0m
[40;42m =======start_check_funciton:find_bisection========= [0m

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <string_cst 0x7fbde8ff5d48
    type <array_type 0x7fbde8fe5930
        type <integer_type 0x7fbde8fe5888 char public QI
            size <integer_cst 0x7fbde94c5ca8 constant 8>
            unit-size <integer_cst 0x7fbde94c5cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbde94da3f0 precision:8 min <integer_cst 0x7fbde8fd48d0 -128> max <integer_cst 0x7fbde8fd48b8 127>>
        BLK
        size <integer_cst 0x7fbde8fd48a0 constant 144>
        unit-size <integer_cst 0x7fbde8fd4888 constant 18>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7fbde8fe57e0 type <integer_type 0x7fbde94da000 sizetype>
            DI
            size <integer_cst 0x7fbde94c5bb8 constant 64>
            unit-size <integer_cst 0x7fbde94c5bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbde94da738 precision:64 min <integer_cst 0x7fbde94c5be8 0> max <integer_cst 0x7fbde8fd4870 17>>
        pointer_to_this <pointer_type 0x7fbde8fe59d8>>
    readonly constant static "bisection 2 entry\000">

dot graph START

======================================================================
 <ssa_name 0x7fbde94cd5e8
    type <pointer_type 0x7fbde8fdd7e0
        type <record_type 0x7fbde8fdd738 commit_list TI
            size <integer_cst 0x7fbde94c5c00 constant 128>
            unit-size <integer_cst 0x7fbde94c5c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbde8fdd738 fields <field_decl 0x7fbde8fe01c8 item> context <translation_unit_decl 0x7fbde94d0168 ./benchmarks/git/leak_3/git_leak_3.c>
            pointer_to_this <pointer_type 0x7fbde8fdd7e0>>
        public unsigned DI
        size <integer_cst 0x7fbde94c5bb8 constant 64>
        unit-size <integer_cst 0x7fbde94c5bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fbde8fdd888>>
   
    def_stmt _1 = *commit_list_13(D);
    version:1
    ptr-info 0x7fbde8fee4f8>
 <ssa_name 0x7fbde94cd5e8
    type <pointer_type 0x7fbde8fdd7e0
        type <record_type 0x7fbde8fdd738 commit_list TI
            size <integer_cst 0x7fbde94c5c00 constant 128>
            unit-size <integer_cst 0x7fbde94c5c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbde8fdd738 fields <field_decl 0x7fbde8fe01c8 item> context <translation_unit_decl 0x7fbde94d0168 ./benchmarks/git/leak_3/git_leak_3.c>
            pointer_to_this <pointer_type 0x7fbde8fdd7e0>>
        public unsigned DI
        size <integer_cst 0x7fbde94c5bb8 constant 64>
        unit-size <integer_cst 0x7fbde94c5bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fbde8fdd888>>
   
    def_stmt _1 = *commit_list_13(D);
    version:1
    ptr-info 0x7fbde8fee4f8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fbde94cd5e8
    type <pointer_type 0x7fbde8fdd7e0
        type <record_type 0x7fbde8fdd738 commit_list TI
            size <integer_cst 0x7fbde94c5c00 constant 128>
            unit-size <integer_cst 0x7fbde94c5c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbde8fdd738 fields <field_decl 0x7fbde8fe01c8 item> context <translation_unit_decl 0x7fbde94d0168 ./benchmarks/git/leak_3/git_leak_3.c>
            pointer_to_this <pointer_type 0x7fbde8fdd7e0>>
        public unsigned DI
        size <integer_cst 0x7fbde94c5bb8 constant 64>
        unit-size <integer_cst 0x7fbde94c5bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fbde8fdd888>>
   
    def_stmt _1 = *commit_list_13(D);
    version:1
    ptr-info 0x7fbde8fee4f8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_29 = VDEF <.MEM_28(D)>
show_list ("bisection 2 entry", 0, 0, _1);
show_list ("bisection 2 entry", 0, 0, _1);
./benchmarks/git/leak_3/git_leak_3.c:19:9: warning: use location
   19 |         show_list("bisection 2 entry", 0, 0, *commit_list);
      |         ^
this stmt call this function :show_list
trace fucntion name:show_list 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_29 = VDEF <.MEM_28(D)>
show_list ("bisection 2 entry", 0, 0, _1);
show_list ("bisection 2 entry", 0, 0, _1);
./benchmarks/git/leak_3/git_leak_3.c:19:9: warning: use location
this stmt call this function :show_list
trace fucntion name:show_list 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fbde94cd5e8
    type <pointer_type 0x7fbde8fdd7e0
        type <record_type 0x7fbde8fdd738 commit_list TI
            size <integer_cst 0x7fbde94c5c00 constant 128>
            unit-size <integer_cst 0x7fbde94c5c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbde8fdd738 fields <field_decl 0x7fbde8fe01c8 item> context <translation_unit_decl 0x7fbde94d0168 ./benchmarks/git/leak_3/git_leak_3.c>
            pointer_to_this <pointer_type 0x7fbde8fdd7e0>>
        public unsigned DI
        size <integer_cst 0x7fbde94c5bb8 constant 64>
        unit-size <integer_cst 0x7fbde94c5bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fbde8fdd888>>
   
    def_stmt _1 = *commit_list_13(D);
    version:1
    ptr-info 0x7fbde8fee4f8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <string_cst 0x7fbde8ff5e60
    type <array_type 0x7fbde8fe5b28
        type <integer_type 0x7fbde8fe5888 char public QI
            size <integer_cst 0x7fbde94c5ca8 constant 8>
            unit-size <integer_cst 0x7fbde94c5cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbde94da3f0 precision:8 min <integer_cst 0x7fbde8fd48d0 -128> max <integer_cst 0x7fbde8fd48b8 127>>
        BLK
        size <integer_cst 0x7fbde8fd48e8 constant 152>
        unit-size <integer_cst 0x7fbde8fd4780 constant 19>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7fbde8fe5a80 type <integer_type 0x7fbde94da000 sizetype>
            DI
            size <integer_cst 0x7fbde94c5bb8 constant 64>
            unit-size <integer_cst 0x7fbde94c5bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbde94da738 precision:64 min <integer_cst 0x7fbde94c5be8 0> max <integer_cst 0x7fbde8fd4888 18>>
        pointer_to_this <pointer_type 0x7fbde8fe5bd0>>
    readonly constant static "bisection 2 sorted\000">

dot graph START

======================================================================
 <ssa_name 0x7fbde8ffa120
    type <integer_type 0x7fbde94da5e8 int public SI
        size <integer_cst 0x7fbde94c5df8 constant 32>
        unit-size <integer_cst 0x7fbde94c5e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbde94da5e8 precision:32 min <integer_cst 0x7fbde94c5db0 -2147483648> max <integer_cst 0x7fbde94c5dc8 2147483647>
        pointer_to_this <pointer_type 0x7fbde94e19d8>>
    var <var_decl 0x7fbde8ff36c0 nr>
    def_stmt nr_7 = PHI <0(2), nr_8(8)>
    version:7>
 <ssa_name 0x7fbde8ffa120
    type <integer_type 0x7fbde94da5e8 int public SI
        size <integer_cst 0x7fbde94c5df8 constant 32>
        unit-size <integer_cst 0x7fbde94c5e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbde94da5e8 precision:32 min <integer_cst 0x7fbde94c5db0 -2147483648> max <integer_cst 0x7fbde94c5dc8 2147483647>
        pointer_to_this <pointer_type 0x7fbde94e19d8>>
    var <var_decl 0x7fbde8ff36c0 nr>
    def_stmt nr_7 = PHI <0(2), nr_8(8)>
    version:7>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fbde8ffa120
    type <integer_type 0x7fbde94da5e8 int public SI
        size <integer_cst 0x7fbde94c5df8 constant 32>
        unit-size <integer_cst 0x7fbde94c5e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbde94da5e8 precision:32 min <integer_cst 0x7fbde94c5db0 -2147483648> max <integer_cst 0x7fbde94c5dc8 2147483647>
        pointer_to_this <pointer_type 0x7fbde94e19d8>>
    var <var_decl 0x7fbde8ff36c0 nr>
    def_stmt nr_7 = PHI <0(2), nr_8(8)>
    version:7>
is Other function 
 
 Start check Pointer Collect  

======================================================================
*all_19(D) = nr_7;
./benchmarks/git/leak_3/git_leak_3.c:44:14: warning: use location
   44 |         *all = nr;
      |              ^
*all_19(D) = nr_7;
./benchmarks/git/leak_3/git_leak_3.c:44:14: warning: use location
# .MEM_30 = VDEF <.MEM_27>
show_list ("bisection 2 sorted", 0, nr_7, last_10);
show_list ("bisection 2 sorted", 0, nr_7, last_10);
./benchmarks/git/leak_3/git_leak_3.c:42:9: warning: use location
   42 |         show_list("bisection 2 sorted", 0, nr, list);
      |         ^
this stmt call this function :show_list
trace fucntion name:show_list 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
nr_8 = PHI <nr_7(4), nr_6(7)>
lto1: warning: use location
this stmt have mutiple branch ---show_list-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
nr_6 = PHI <nr_7(5), nr_25(6)>
lto1: warning: use location
this stmt have mutiple branch ---show_list-----

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fbde8ffa120
    type <integer_type 0x7fbde94da5e8 int public SI
        size <integer_cst 0x7fbde94c5df8 constant 32>
        unit-size <integer_cst 0x7fbde94c5e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbde94da5e8 precision:32 min <integer_cst 0x7fbde94c5db0 -2147483648> max <integer_cst 0x7fbde94c5dc8 2147483647>
        pointer_to_this <pointer_type 0x7fbde94e19d8>>
    var <var_decl 0x7fbde8ff36c0 nr>
    def_stmt nr_7 = PHI <0(2), nr_8(8)>
    version:7>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fbde8ffa1f8
    type <pointer_type 0x7fbde8fdd7e0
        type <record_type 0x7fbde8fdd738 commit_list TI
            size <integer_cst 0x7fbde94c5c00 constant 128>
            unit-size <integer_cst 0x7fbde94c5c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbde8fdd738 fields <field_decl 0x7fbde8fe01c8 item> context <translation_unit_decl 0x7fbde94d0168 ./benchmarks/git/leak_3/git_leak_3.c>
            pointer_to_this <pointer_type 0x7fbde8fdd7e0>>
        public unsigned DI
        size <integer_cst 0x7fbde94c5bb8 constant 64>
        unit-size <integer_cst 0x7fbde94c5bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fbde8fdd888>>
    var <var_decl 0x7fbde8ff3510 last>
    def_stmt last_10 = PHI <0B(2), last_4(8)>
    version:10
    ptr-info 0x7fbde8fee558>
 <ssa_name 0x7fbde8ffa1f8
    type <pointer_type 0x7fbde8fdd7e0
        type <record_type 0x7fbde8fdd738 commit_list TI
            size <integer_cst 0x7fbde94c5c00 constant 128>
            unit-size <integer_cst 0x7fbde94c5c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbde8fdd738 fields <field_decl 0x7fbde8fe01c8 item> context <translation_unit_decl 0x7fbde94d0168 ./benchmarks/git/leak_3/git_leak_3.c>
            pointer_to_this <pointer_type 0x7fbde8fdd7e0>>
        public unsigned DI
        size <integer_cst 0x7fbde94c5bb8 constant 64>
        unit-size <integer_cst 0x7fbde94c5bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fbde8fdd888>>
    var <var_decl 0x7fbde8ff3510 last>
    def_stmt last_10 = PHI <0B(2), last_4(8)>
    version:10
    ptr-info 0x7fbde8fee558>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fbde8ffa1f8
    type <pointer_type 0x7fbde8fdd7e0
        type <record_type 0x7fbde8fdd738 commit_list TI
            size <integer_cst 0x7fbde94c5c00 constant 128>
            unit-size <integer_cst 0x7fbde94c5c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbde8fdd738 fields <field_decl 0x7fbde8fe01c8 item> context <translation_unit_decl 0x7fbde94d0168 ./benchmarks/git/leak_3/git_leak_3.c>
            pointer_to_this <pointer_type 0x7fbde8fdd7e0>>
        public unsigned DI
        size <integer_cst 0x7fbde94c5bb8 constant 64>
        unit-size <integer_cst 0x7fbde94c5bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fbde8fdd888>>
    var <var_decl 0x7fbde8ff3510 last>
    def_stmt last_10 = PHI <0B(2), last_4(8)>
    version:10
    ptr-info 0x7fbde8fee558>
is Other function 
 
 Start check Pointer Collect  

======================================================================
*commit_list_13(D) = last_10;
./benchmarks/git/leak_3/git_leak_3.c:46:22: warning: use location
   46 |         *commit_list = list;
      |                      ^
*commit_list_13(D) = last_10;
./benchmarks/git/leak_3/git_leak_3.c:46:22: warning: use location
# .MEM_30 = VDEF <.MEM_27>
show_list ("bisection 2 sorted", 0, nr_7, last_10);
show_list ("bisection 2 sorted", 0, nr_7, last_10);
./benchmarks/git/leak_3/git_leak_3.c:42:9: warning: use location
   42 |         show_list("bisection 2 sorted", 0, nr, list);
      |         ^
this stmt call this function :show_list
trace fucntion name:show_list 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
last_4 = PHI <last_10(4), p_9(7)>
lto1: warning: use location
this stmt have mutiple branch ---show_list-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_9->next = last_10;
./benchmarks/git/leak_3/git_leak_3.c:35:25: warning: use location
   35 |                 p->next = last;
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (p_9 != 0B)
./benchmarks/git/leak_3/git_leak_3.c:26:14: warning: use location
   26 |              p;
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
next_23 = p_9->next;
./benchmarks/git/leak_3/git_leak_3.c:30:22: warning: use location
   30 |                 next = p->next;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_22 = PHI <next_23(4), next_23(7)>
lto1: warning: use location
this stmt have mutiple branch ---show_list-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_2 = p_9->item;
./benchmarks/git/leak_3/git_leak_3.c:28:35: warning: use location
   28 |                 unsigned flags = p->item->object.flags;
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_3 = _2->object.flags;
./benchmarks/git/leak_3/git_leak_3.c:28:49: warning: use location
   28 |                 unsigned flags = p->item->object.flags;
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_16 == 0)
./benchmarks/git/leak_3/git_leak_3.c:37:20: warning: use location
   37 |                 if (!(flags & TREESAME))
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = _3 & 2;
lto1: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fbde8ffa1f8
    type <pointer_type 0x7fbde8fdd7e0
        type <record_type 0x7fbde8fdd738 commit_list TI
            size <integer_cst 0x7fbde94c5c00 constant 128>
            unit-size <integer_cst 0x7fbde94c5c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbde8fdd738 fields <field_decl 0x7fbde8fe01c8 item> context <translation_unit_decl 0x7fbde94d0168 ./benchmarks/git/leak_3/git_leak_3.c>
            pointer_to_this <pointer_type 0x7fbde8fdd7e0>>
        public unsigned DI
        size <integer_cst 0x7fbde94c5bb8 constant 64>
        unit-size <integer_cst 0x7fbde94c5bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fbde8fdd888>>
    var <var_decl 0x7fbde8ff3510 last>
    def_stmt last_10 = PHI <0B(2), last_4(8)>
    version:10
    ptr-info 0x7fbde8fee558>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fbde8ffa1f8
    type <pointer_type 0x7fbde8fdd7e0
        type <record_type 0x7fbde8fdd738 commit_list TI
            size <integer_cst 0x7fbde94c5c00 constant 128>
            unit-size <integer_cst 0x7fbde94c5c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbde8fdd738 fields <field_decl 0x7fbde8fe01c8 item> context <translation_unit_decl 0x7fbde94d0168 ./benchmarks/git/leak_3/git_leak_3.c>
            pointer_to_this <pointer_type 0x7fbde8fdd7e0>>
        public unsigned DI
        size <integer_cst 0x7fbde94c5bb8 constant 64>
        unit-size <integer_cst 0x7fbde94c5bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fbde8fdd888>>
    var <var_decl 0x7fbde8ff3510 last>
    def_stmt last_10 = PHI <0B(2), last_4(8)>
    version:10
    ptr-info 0x7fbde8fee558>
 <ssa_name 0x7fbde8ffa1f8
    type <pointer_type 0x7fbde8fdd7e0
        type <record_type 0x7fbde8fdd738 commit_list TI
            size <integer_cst 0x7fbde94c5c00 constant 128>
            unit-size <integer_cst 0x7fbde94c5c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbde8fdd738 fields <field_decl 0x7fbde8fe01c8 item> context <translation_unit_decl 0x7fbde94d0168 ./benchmarks/git/leak_3/git_leak_3.c>
            pointer_to_this <pointer_type 0x7fbde8fdd7e0>>
        public unsigned DI
        size <integer_cst 0x7fbde94c5bb8 constant 64>
        unit-size <integer_cst 0x7fbde94c5bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fbde8fdd888>>
    var <var_decl 0x7fbde8ff3510 last>
    def_stmt last_10 = PHI <0B(2), last_4(8)>
    version:10
    ptr-info 0x7fbde8fee558>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fbde8ffa1f8
    type <pointer_type 0x7fbde8fdd7e0
        type <record_type 0x7fbde8fdd738 commit_list TI
            size <integer_cst 0x7fbde94c5c00 constant 128>
            unit-size <integer_cst 0x7fbde94c5c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbde8fdd738 fields <field_decl 0x7fbde8fe01c8 item> context <translation_unit_decl 0x7fbde94d0168 ./benchmarks/git/leak_3/git_leak_3.c>
            pointer_to_this <pointer_type 0x7fbde8fdd7e0>>
        public unsigned DI
        size <integer_cst 0x7fbde94c5bb8 constant 64>
        unit-size <integer_cst 0x7fbde94c5bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fbde8fdd888>>
    var <var_decl 0x7fbde8ff3510 last>
    def_stmt last_10 = PHI <0B(2), last_4(8)>
    version:10
    ptr-info 0x7fbde8fee558>
is Other function 
 
 Start check Pointer Collect  

======================================================================
*commit_list_13(D) = last_10;
./benchmarks/git/leak_3/git_leak_3.c:46:22: warning: use location
   46 |         *commit_list = list;
      |                      ^
*commit_list_13(D) = last_10;
./benchmarks/git/leak_3/git_leak_3.c:46:22: warning: use location
# .MEM_30 = VDEF <.MEM_27>
show_list ("bisection 2 sorted", 0, nr_7, last_10);
show_list ("bisection 2 sorted", 0, nr_7, last_10);
./benchmarks/git/leak_3/git_leak_3.c:42:9: warning: use location
   42 |         show_list("bisection 2 sorted", 0, nr, list);
      |         ^
this stmt call this function :show_list
trace fucntion name:show_list 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
last_4 = PHI <last_10(4), p_9(7)>
lto1: warning: use location
this stmt have mutiple branch ---show_list-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_9->next = last_10;
./benchmarks/git/leak_3/git_leak_3.c:35:25: warning: use location
   35 |                 p->next = last;
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (p_9 != 0B)
./benchmarks/git/leak_3/git_leak_3.c:26:14: warning: use location
   26 |              p;
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
next_23 = p_9->next;
./benchmarks/git/leak_3/git_leak_3.c:30:22: warning: use location
   30 |                 next = p->next;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_22 = PHI <next_23(4), next_23(7)>
lto1: warning: use location
this stmt have mutiple branch ---show_list-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_2 = p_9->item;
./benchmarks/git/leak_3/git_leak_3.c:28:35: warning: use location
   28 |                 unsigned flags = p->item->object.flags;
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_3 = _2->object.flags;
./benchmarks/git/leak_3/git_leak_3.c:28:49: warning: use location
   28 |                 unsigned flags = p->item->object.flags;
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_16 == 0)
./benchmarks/git/leak_3/git_leak_3.c:37:20: warning: use location
   37 |                 if (!(flags & TREESAME))
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = _3 & 2;
lto1: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fbde8ffa1f8
    type <pointer_type 0x7fbde8fdd7e0
        type <record_type 0x7fbde8fdd738 commit_list TI
            size <integer_cst 0x7fbde94c5c00 constant 128>
            unit-size <integer_cst 0x7fbde94c5c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbde8fdd738 fields <field_decl 0x7fbde8fe01c8 item> context <translation_unit_decl 0x7fbde94d0168 ./benchmarks/git/leak_3/git_leak_3.c>
            pointer_to_this <pointer_type 0x7fbde8fdd7e0>>
        public unsigned DI
        size <integer_cst 0x7fbde94c5bb8 constant 64>
        unit-size <integer_cst 0x7fbde94c5bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fbde8fdd888>>
    var <var_decl 0x7fbde8ff3510 last>
    def_stmt last_10 = PHI <0B(2), last_4(8)>
    version:10
    ptr-info 0x7fbde8fee558>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:find_bisection========= [0m
[40;42m =======pre add _ fucntion:commit_list_insert========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path commit_list_insert  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:commit_list_insert========= [0m
[40;42m =======start_check_funciton:commit_list_insert========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fbde94cdd80
    type <pointer_type 0x7fbde8fdd7e0
        type <record_type 0x7fbde8fdd738 commit_list TI
            size <integer_cst 0x7fbde94c5c00 constant 128>
            unit-size <integer_cst 0x7fbde94c5c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbde8fdd738 fields <field_decl 0x7fbde8fe01c8 item> context <translation_unit_decl 0x7fbde94d0168 ./benchmarks/git/leak_3/git_leak_3.c>
            pointer_to_this <pointer_type 0x7fbde8fdd7e0>>
        public unsigned DI
        size <integer_cst 0x7fbde94c5bb8 constant 64>
        unit-size <integer_cst 0x7fbde94c5bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fbde8fdd888>>
    var <var_decl 0x7fbde8ff3360 new_list>
    def_stmt new_list_4 = malloc (16);
    version:4
    ptr-info 0x7fbde8fee4b0>
 <ssa_name 0x7fbde94cdd80
    type <pointer_type 0x7fbde8fdd7e0
        type <record_type 0x7fbde8fdd738 commit_list TI
            size <integer_cst 0x7fbde94c5c00 constant 128>
            unit-size <integer_cst 0x7fbde94c5c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbde8fdd738 fields <field_decl 0x7fbde8fe01c8 item> context <translation_unit_decl 0x7fbde94d0168 ./benchmarks/git/leak_3/git_leak_3.c>
            pointer_to_this <pointer_type 0x7fbde8fdd7e0>>
        public unsigned DI
        size <integer_cst 0x7fbde94c5bb8 constant 64>
        unit-size <integer_cst 0x7fbde94c5bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fbde8fdd888>>
    var <var_decl 0x7fbde8ff3360 new_list>
    def_stmt new_list_4 = malloc (16);
    version:4
    ptr-info 0x7fbde8fee4b0>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
return new_list_4;
./benchmarks/git/leak_3/git_leak_3.c:55:16: warning: use location
   55 |         return new_list;
      |                ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_3/git_leak_3.c:54:17: warning: use location
   54 |         *list_p = new_list;
      |                 ^
new_list_4->next = _1;
./benchmarks/git/leak_3/git_leak_3.c:53:24: warning: use location
   53 |         new_list->next = *list_p;
      |                        ^
new_list_4->next = _1;
./benchmarks/git/leak_3/git_leak_3.c:53:24: warning: use location
new_list_4->item = item_5(D);
./benchmarks/git/leak_3/git_leak_3.c:52:24: warning: use location
   52 |         new_list->item = item;
      |                        ^
new_list_4->item = item_5(D);
./benchmarks/git/leak_3/git_leak_3.c:52:24: warning: use location
# .MEM_9 = VDEF <.MEM_8(D)>
new_list_4 = malloc (16);
new_list_4 = malloc (16);
./benchmarks/git/leak_3/git_leak_3.c:51:40: warning: use location
   51 |         struct commit_list *new_list = xmalloc(sizeof(struct commit_list));
      |                                        ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fbde94cdd80
    type <pointer_type 0x7fbde8fdd7e0
        type <record_type 0x7fbde8fdd738 commit_list TI
            size <integer_cst 0x7fbde94c5c00 constant 128>
            unit-size <integer_cst 0x7fbde94c5c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbde8fdd738 fields <field_decl 0x7fbde8fe01c8 item> context <translation_unit_decl 0x7fbde94d0168 ./benchmarks/git/leak_3/git_leak_3.c>
            pointer_to_this <pointer_type 0x7fbde8fdd7e0>>
        public unsigned DI
        size <integer_cst 0x7fbde94c5bb8 constant 64>
        unit-size <integer_cst 0x7fbde94c5bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fbde8fdd888>>
    var <var_decl 0x7fbde8ff3360 new_list>
    def_stmt new_list_4 = malloc (16);
    version:4
    ptr-info 0x7fbde8fee4b0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:commit_list_insert========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m

dot graph START

======================================================================
 <var_decl 0x7fbde9d6dcf0 list
    type <pointer_type 0x7fbde8fdd7e0
        type <record_type 0x7fbde8fdd738 commit_list TI
            size <integer_cst 0x7fbde94c5c00 constant 128>
            unit-size <integer_cst 0x7fbde94c5c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbde8fdd738 fields <field_decl 0x7fbde8fe01c8 item> context <translation_unit_decl 0x7fbde94d0168 ./benchmarks/git/leak_3/git_leak_3.c>
            pointer_to_this <pointer_type 0x7fbde8fdd7e0>>
        public unsigned DI
        size <integer_cst 0x7fbde94c5bb8 constant 64>
        unit-size <integer_cst 0x7fbde94c5bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fbde8fdd888>>
    addressable unsigned DI ./benchmarks/git/leak_3/git_leak_3.c:79:25 size <integer_cst 0x7fbde94c5bb8 64> unit-size <integer_cst 0x7fbde94c5bd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7fbde8fdee00 main> chain <var_decl 0x7fbde9d6dc60 reaches>>

 ================== this stmt hava call fucntion ================== 
 <var_decl 0x7fbde9d6dcf0 list
    type <pointer_type 0x7fbde8fdd7e0
        type <record_type 0x7fbde8fdd738 commit_list TI
            size <integer_cst 0x7fbde94c5c00 constant 128>
            unit-size <integer_cst 0x7fbde94c5c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbde8fdd738 fields <field_decl 0x7fbde8fe01c8 item> context <translation_unit_decl 0x7fbde94d0168 ./benchmarks/git/leak_3/git_leak_3.c>
            pointer_to_this <pointer_type 0x7fbde8fdd7e0>>
        public unsigned DI
        size <integer_cst 0x7fbde94c5bb8 constant 64>
        unit-size <integer_cst 0x7fbde94c5bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fbde8fdd888>>
    addressable unsigned DI ./benchmarks/git/leak_3/git_leak_3.c:79:25 size <integer_cst 0x7fbde94c5bb8 64> unit-size <integer_cst 0x7fbde94c5bd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7fbde8fdee00 main> chain <var_decl 0x7fbde9d6dc60 reaches>>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_20 = VDEF <.MEM_13>
commit_list_insert (0B, &list);
commit_list_insert (0B, &list);
./benchmarks/git/leak_3/git_leak_3.c:83:9: warning: use location
   83 |         commit_list_insert(NULL, &list);
      |         ^
this stmt call this function :commit_list_insert
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
 <var_decl 0x7fbde9d6dcf0 list
    type <pointer_type 0x7fbde8fdd7e0
        type <record_type 0x7fbde8fdd738 commit_list TI
            size <integer_cst 0x7fbde94c5c00 constant 128>
            unit-size <integer_cst 0x7fbde94c5c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbde8fdd738 fields <field_decl 0x7fbde8fe01c8 item> context <translation_unit_decl 0x7fbde94d0168 ./benchmarks/git/leak_3/git_leak_3.c>
            pointer_to_this <pointer_type 0x7fbde8fdd7e0>>
        public unsigned DI
        size <integer_cst 0x7fbde94c5bb8 constant 64>
        unit-size <integer_cst 0x7fbde94c5bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fbde8fdd888>>
    addressable unsigned DI ./benchmarks/git/leak_3/git_leak_3.c:79:25 size <integer_cst 0x7fbde94c5bb8 64> unit-size <integer_cst 0x7fbde94c5bd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7fbde8fdee00 main> chain <var_decl 0x7fbde9d6dc60 reaches>>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with list ========= [0m
[40;36m ======= relate node_fun argument:list========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘commit_list_insert’:
./benchmarks/git/leak_3/git_leak_3.c:53:26: warning: use location
   53 |         new_list->next = *list_p;
      |                          ^
_1 = *list_p_7(D);
./benchmarks/git/leak_3/git_leak_3.c:53:26: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:list========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_3/git_leak_3.c:54:17: warning: use location
   54 |         *list_p = new_list;
      |                 ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_3/git_leak_3.c:54:17: warning: use location
*list_p_7(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_20 = VDEF <.MEM_13>
commit_list_insert (0B, &list);
commit_list_insert (0B, &list);
In function ‘main’:
./benchmarks/git/leak_3/git_leak_3.c:83:9: warning: use location
   83 |         commit_list_insert(NULL, &list);
      |         ^
this stmt call this function :commit_list_insert
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
 <var_decl 0x7fbde9d6dcf0 list
    type <pointer_type 0x7fbde8fdd7e0
        type <record_type 0x7fbde8fdd738 commit_list TI
            size <integer_cst 0x7fbde94c5c00 constant 128>
            unit-size <integer_cst 0x7fbde94c5c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbde8fdd738 fields <field_decl 0x7fbde8fe01c8 item> context <translation_unit_decl 0x7fbde94d0168 ./benchmarks/git/leak_3/git_leak_3.c>
            pointer_to_this <pointer_type 0x7fbde8fdd7e0>>
        public unsigned DI
        size <integer_cst 0x7fbde94c5bb8 constant 64>
        unit-size <integer_cst 0x7fbde94c5bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fbde8fdd888>>
    addressable unsigned DI ./benchmarks/git/leak_3/git_leak_3.c:79:25 size <integer_cst 0x7fbde94c5bb8 64> unit-size <integer_cst 0x7fbde94c5bd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7fbde8fdee00 main> chain <var_decl 0x7fbde9d6dc60 reaches>>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with list ========= [0m
[40;36m ======= relate node_fun argument:list========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘commit_list_insert’:
./benchmarks/git/leak_3/git_leak_3.c:53:26: warning: use location
   53 |         new_list->next = *list_p;
      |                          ^
_1 = *list_p_7(D);
./benchmarks/git/leak_3/git_leak_3.c:53:26: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:list========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_3/git_leak_3.c:54:17: warning: use location
   54 |         *list_p = new_list;
      |                 ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_3/git_leak_3.c:54:17: warning: use location
*list_p_7(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <var_decl 0x7fbde9d6dcf0 list
    type <pointer_type 0x7fbde8fdd7e0
        type <record_type 0x7fbde8fdd738 commit_list TI
            size <integer_cst 0x7fbde94c5c00 constant 128>
            unit-size <integer_cst 0x7fbde94c5c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbde8fdd738 fields <field_decl 0x7fbde8fe01c8 item> context <translation_unit_decl 0x7fbde94d0168 ./benchmarks/git/leak_3/git_leak_3.c>
            pointer_to_this <pointer_type 0x7fbde8fdd7e0>>
        public unsigned DI
        size <integer_cst 0x7fbde94c5bb8 constant 64>
        unit-size <integer_cst 0x7fbde94c5bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fbde8fdd888>>
    addressable unsigned DI ./benchmarks/git/leak_3/git_leak_3.c:79:25 size <integer_cst 0x7fbde94c5bb8 64> unit-size <integer_cst 0x7fbde94c5bd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7fbde8fdee00 main> chain <var_decl 0x7fbde9d6dc60 reaches>>

 ================== this stmt hava call fucntion ================== 
 <var_decl 0x7fbde9d6dcf0 list
    type <pointer_type 0x7fbde8fdd7e0
        type <record_type 0x7fbde8fdd738 commit_list TI
            size <integer_cst 0x7fbde94c5c00 constant 128>
            unit-size <integer_cst 0x7fbde94c5c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbde8fdd738 fields <field_decl 0x7fbde8fe01c8 item> context <translation_unit_decl 0x7fbde94d0168 ./benchmarks/git/leak_3/git_leak_3.c>
            pointer_to_this <pointer_type 0x7fbde8fdd7e0>>
        public unsigned DI
        size <integer_cst 0x7fbde94c5bb8 constant 64>
        unit-size <integer_cst 0x7fbde94c5bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fbde8fdd888>>
    addressable unsigned DI ./benchmarks/git/leak_3/git_leak_3.c:79:25 size <integer_cst 0x7fbde94c5bb8 64> unit-size <integer_cst 0x7fbde94c5bd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7fbde8fdee00 main> chain <var_decl 0x7fbde9d6dc60 reaches>>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
commit_list_insert (0B, &list);
In function ‘main’:
./benchmarks/git/leak_3/git_leak_3.c:83:9: warning: use location
   83 |         commit_list_insert(NULL, &list);
      |         ^
this stmt call this function :commit_list_insert
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
 <var_decl 0x7fbde9d6dcf0 list
    type <pointer_type 0x7fbde8fdd7e0
        type <record_type 0x7fbde8fdd738 commit_list TI
            size <integer_cst 0x7fbde94c5c00 constant 128>
            unit-size <integer_cst 0x7fbde94c5c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbde8fdd738 fields <field_decl 0x7fbde8fe01c8 item> context <translation_unit_decl 0x7fbde94d0168 ./benchmarks/git/leak_3/git_leak_3.c>
            pointer_to_this <pointer_type 0x7fbde8fdd7e0>>
        public unsigned DI
        size <integer_cst 0x7fbde94c5bb8 constant 64>
        unit-size <integer_cst 0x7fbde94c5bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fbde8fdd888>>
    addressable unsigned DI ./benchmarks/git/leak_3/git_leak_3.c:79:25 size <integer_cst 0x7fbde94c5bb8 64> unit-size <integer_cst 0x7fbde94c5bd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7fbde8fdee00 main> chain <var_decl 0x7fbde9d6dc60 reaches>>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with list ========= [0m
[40;36m ======= relate node_fun argument:list========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘commit_list_insert’:
./benchmarks/git/leak_3/git_leak_3.c:53:26: warning: use location
   53 |         new_list->next = *list_p;
      |                          ^
_1 = *list_p_7(D);
./benchmarks/git/leak_3/git_leak_3.c:53:26: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:list========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_3/git_leak_3.c:54:17: warning: use location
   54 |         *list_p = new_list;
      |                 ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_3/git_leak_3.c:54:17: warning: use location
*list_p_7(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
commit_list_insert (0B, &list);
In function ‘main’:
./benchmarks/git/leak_3/git_leak_3.c:83:9: warning: use location
   83 |         commit_list_insert(NULL, &list);
      |         ^
this stmt call this function :commit_list_insert
trace fucntion name:commit_list_insert 
[40;44m =======trace_function_path commit_list_insert  function_call count: 1 level :0========  [0m
 <var_decl 0x7fbde9d6dcf0 list
    type <pointer_type 0x7fbde8fdd7e0
        type <record_type 0x7fbde8fdd738 commit_list TI
            size <integer_cst 0x7fbde94c5c00 constant 128>
            unit-size <integer_cst 0x7fbde94c5c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbde8fdd738 fields <field_decl 0x7fbde8fe01c8 item> context <translation_unit_decl 0x7fbde94d0168 ./benchmarks/git/leak_3/git_leak_3.c>
            pointer_to_this <pointer_type 0x7fbde8fdd7e0>>
        public unsigned DI
        size <integer_cst 0x7fbde94c5bb8 constant 64>
        unit-size <integer_cst 0x7fbde94c5bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fbde8fdd888>>
    addressable unsigned DI ./benchmarks/git/leak_3/git_leak_3.c:79:25 size <integer_cst 0x7fbde94c5bb8 64> unit-size <integer_cst 0x7fbde94c5bd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7fbde8fdee00 main> chain <var_decl 0x7fbde9d6dc60 reaches>>
[40;36m ======= node_fun:commit_list_insert========= [0m
[40;36m ======= find relate stmt with list ========= [0m
[40;36m ======= relate node_fun argument:list========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘commit_list_insert’:
./benchmarks/git/leak_3/git_leak_3.c:53:26: warning: use location
   53 |         new_list->next = *list_p;
      |                          ^
_1 = *list_p_7(D);
./benchmarks/git/leak_3/git_leak_3.c:53:26: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:list========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_3/git_leak_3.c:54:17: warning: use location
   54 |         *list_p = new_list;
      |                 ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_3/git_leak_3.c:54:17: warning: use location
*list_p_7(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <var_decl 0x7fbde9d6dc60 reaches
    type <integer_type 0x7fbde94da5e8 int public SI
        size <integer_cst 0x7fbde94c5df8 constant 32>
        unit-size <integer_cst 0x7fbde94c5e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbde94da5e8 precision:32 min <integer_cst 0x7fbde94c5db0 -2147483648> max <integer_cst 0x7fbde94c5dc8 2147483647>
        pointer_to_this <pointer_type 0x7fbde94e19d8>>
    addressable SI ./benchmarks/git/leak_3/git_leak_3.c:80:9 size <integer_cst 0x7fbde94c5df8 32> unit-size <integer_cst 0x7fbde94c5e10 4>
    align:32 warn_if_not_align:0 context <function_decl 0x7fbde8fdee00 main> chain <var_decl 0x7fbde9d6dbd0 all>>

 ================== this stmt hava call fucntion ================== 
 <var_decl 0x7fbde9d6dc60 reaches
    type <integer_type 0x7fbde94da5e8 int public SI
        size <integer_cst 0x7fbde94c5df8 constant 32>
        unit-size <integer_cst 0x7fbde94c5e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbde94da5e8 precision:32 min <integer_cst 0x7fbde94c5db0 -2147483648> max <integer_cst 0x7fbde94c5dc8 2147483647>
        pointer_to_this <pointer_type 0x7fbde94e19d8>>
    addressable SI ./benchmarks/git/leak_3/git_leak_3.c:80:9 size <integer_cst 0x7fbde94c5df8 32> unit-size <integer_cst 0x7fbde94c5e10 4>
    align:32 warn_if_not_align:0 context <function_decl 0x7fbde8fdee00 main> chain <var_decl 0x7fbde9d6dbd0 all>>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_15 = VDEF <.MEM_13>
find_bisection (&list, &reaches, &all, find_all_5(D));
find_bisection (&list, &reaches, &all, find_all_5(D));
In function ‘main’:
./benchmarks/git/leak_3/git_leak_3.c:85:5: warning: use location
   85 |     find_bisection(&list, &reaches, &all, find_all);
      |     ^
this stmt call this function :find_bisection
trace fucntion name:find_bisection 
[40;44m =======trace_function_path find_bisection  function_call count: 1 level :0========  [0m
 <var_decl 0x7fbde9d6dc60 reaches
    type <integer_type 0x7fbde94da5e8 int public SI
        size <integer_cst 0x7fbde94c5df8 constant 32>
        unit-size <integer_cst 0x7fbde94c5e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbde94da5e8 precision:32 min <integer_cst 0x7fbde94c5db0 -2147483648> max <integer_cst 0x7fbde94c5dc8 2147483647>
        pointer_to_this <pointer_type 0x7fbde94e19d8>>
    addressable SI ./benchmarks/git/leak_3/git_leak_3.c:80:9 size <integer_cst 0x7fbde94c5df8 32> unit-size <integer_cst 0x7fbde94c5e10 4>
    align:32 warn_if_not_align:0 context <function_decl 0x7fbde8fdee00 main> chain <var_decl 0x7fbde9d6dbd0 all>>
[40;36m ======= node_fun:find_bisection========= [0m
[40;36m ======= find relate stmt with reaches ========= [0m
[40;36m ======= relate node_fun argument:reaches========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘find_bisection’:
./benchmarks/git/leak_3/git_leak_3.c:19:9: warning: use location
   19 |         show_list("bisection 2 entry", 0, 0, *commit_list);
      |         ^
_1 = *commit_list_13(D);
./benchmarks/git/leak_3/git_leak_3.c:19:9: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:reaches========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/git/leak_3/git_leak_3.c:25:47: warning: use location
   25 |         for (nr = on_list = 0, last = NULL, p = *commit_list;
      |                                               ^
p_17 = *commit_list_13(D);
./benchmarks/git/leak_3/git_leak_3.c:25:47: warning: use location
p_17

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:reaches========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_3/git_leak_3.c:28:35: warning: use location
   28 |                 unsigned flags = p->item->object.flags;
      |                                   ^
_2 = p_9->item;
./benchmarks/git/leak_3/git_leak_3.c:28:35: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:reaches========= [0m
[40;36m ======= relate gimple_assign_lhs:next========= [0m
./benchmarks/git/leak_3/git_leak_3.c:30:22: warning: use location
   30 |                 next = p->next;
      |                      ^
next_23 = p_9->next;
./benchmarks/git/leak_3/git_leak_3.c:30:22: warning: use location
next_23

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:reaches========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_3/git_leak_3.c:46:22: warning: use location
   46 |         *commit_list = list;
      |                      ^
*commit_list_13(D) = last_10;
./benchmarks/git/leak_3/git_leak_3.c:46:22: warning: use location
*commit_list_13(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:show_list========= [0m
[40;46m =======add node_fun stack:show_list========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_15 = VDEF <.MEM_13>
find_bisection (&list, &reaches, &all, find_all_5(D));
find_bisection (&list, &reaches, &all, find_all_5(D));
In function ‘main’:
./benchmarks/git/leak_3/git_leak_3.c:85:5: warning: use location
   85 |     find_bisection(&list, &reaches, &all, find_all);
      |     ^
this stmt call this function :find_bisection
trace fucntion name:find_bisection 
[40;44m =======trace_function_path find_bisection  function_call count: 1 level :0========  [0m
 <var_decl 0x7fbde9d6dc60 reaches
    type <integer_type 0x7fbde94da5e8 int public SI
        size <integer_cst 0x7fbde94c5df8 constant 32>
        unit-size <integer_cst 0x7fbde94c5e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbde94da5e8 precision:32 min <integer_cst 0x7fbde94c5db0 -2147483648> max <integer_cst 0x7fbde94c5dc8 2147483647>
        pointer_to_this <pointer_type 0x7fbde94e19d8>>
    addressable SI ./benchmarks/git/leak_3/git_leak_3.c:80:9 size <integer_cst 0x7fbde94c5df8 32> unit-size <integer_cst 0x7fbde94c5e10 4>
    align:32 warn_if_not_align:0 context <function_decl 0x7fbde8fdee00 main> chain <var_decl 0x7fbde9d6dbd0 all>>
[40;36m ======= node_fun:find_bisection========= [0m
[40;36m ======= find relate stmt with reaches ========= [0m
[40;36m ======= relate node_fun argument:reaches========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘find_bisection’:
./benchmarks/git/leak_3/git_leak_3.c:19:9: warning: use location
   19 |         show_list("bisection 2 entry", 0, 0, *commit_list);
      |         ^
_1 = *commit_list_13(D);
./benchmarks/git/leak_3/git_leak_3.c:19:9: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:reaches========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/git/leak_3/git_leak_3.c:25:47: warning: use location
   25 |         for (nr = on_list = 0, last = NULL, p = *commit_list;
      |                                               ^
p_17 = *commit_list_13(D);
./benchmarks/git/leak_3/git_leak_3.c:25:47: warning: use location
p_17

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:reaches========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_3/git_leak_3.c:28:35: warning: use location
   28 |                 unsigned flags = p->item->object.flags;
      |                                   ^
_2 = p_9->item;
./benchmarks/git/leak_3/git_leak_3.c:28:35: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:reaches========= [0m
[40;36m ======= relate gimple_assign_lhs:next========= [0m
./benchmarks/git/leak_3/git_leak_3.c:30:22: warning: use location
   30 |                 next = p->next;
      |                      ^
next_23 = p_9->next;
./benchmarks/git/leak_3/git_leak_3.c:30:22: warning: use location
next_23

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:reaches========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_3/git_leak_3.c:46:22: warning: use location
   46 |         *commit_list = list;
      |                      ^
*commit_list_13(D) = last_10;
./benchmarks/git/leak_3/git_leak_3.c:46:22: warning: use location
*commit_list_13(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:show_list========= [0m
[40;46m =======add node_fun stack:show_list========= [0m

 ================== trace ================== 
trace fucntion free:0 
_1 = list;
In function ‘main’:
./benchmarks/git/leak_3/git_leak_3.c:87:5: warning: use location
   87 |     free_commit_list(list);
      |     ^
free_commit_list (_1);
./benchmarks/git/leak_3/git_leak_3.c:87:5: warning: use location
this stmt call this function :free_commit_list
trace fucntion name:free_commit_list 
[40;44m =======trace_function_path free_commit_list  function_call count: 1 level :0========  [0m
 <var_decl 0x7fbde9d6dc60 reaches
    type <integer_type 0x7fbde94da5e8 int public SI
        size <integer_cst 0x7fbde94c5df8 constant 32>
        unit-size <integer_cst 0x7fbde94c5e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbde94da5e8 precision:32 min <integer_cst 0x7fbde94c5db0 -2147483648> max <integer_cst 0x7fbde94c5dc8 2147483647>
        pointer_to_this <pointer_type 0x7fbde94e19d8>>
    addressable SI ./benchmarks/git/leak_3/git_leak_3.c:80:9 size <integer_cst 0x7fbde94c5df8 32> unit-size <integer_cst 0x7fbde94c5e10 4>
    align:32 warn_if_not_align:0 context <function_decl 0x7fbde8fdee00 main> chain <var_decl 0x7fbde9d6dbd0 all>>
[40;36m ======= node_fun:free_commit_list========= [0m
[40;36m ======= find relate stmt with reaches ========= [0m
[40;36m ======= relate node_fun argument:reaches========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘free_commit_list’:
./benchmarks/git/leak_3/git_leak_3.c:73:16: warning: use location
   73 |         while (list)
      |                ^
_1 = list;
./benchmarks/git/leak_3/git_leak_3.c:73:16: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:pop_commit========= [0m
[40;46m =======add node_fun stack:pop_commit========= [0m
[40;44m =======trace_function_path pop_commit  function_call count: 1 level :1========  [0m
# .MEM_11 = VDEF <.MEM_10>
free (top_6);
[40;31m  find free stmt free same pointer [0m
# .MEM_11 = VDEF <.MEM_10>
free (top_6);
In function ‘main’:
./benchmarks/git/leak_3/git_leak_3.c:65:17: warning: use location
   65 |                 free(top);
      |                 ^
 <var_decl 0x7fbde9d6dc60 reaches
    type <integer_type 0x7fbde94da5e8 int public SI
        size <integer_cst 0x7fbde94c5df8 constant 32>
        unit-size <integer_cst 0x7fbde94c5e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbde94da5e8 precision:32 min <integer_cst 0x7fbde94c5db0 -2147483648> max <integer_cst 0x7fbde94c5dc8 2147483647>
        pointer_to_this <pointer_type 0x7fbde94e19d8>>
    addressable SI ./benchmarks/git/leak_3/git_leak_3.c:80:9 size <integer_cst 0x7fbde94c5df8 32> unit-size <integer_cst 0x7fbde94c5e10 4>
    align:32 warn_if_not_align:0 context <function_decl 0x7fbde8fdee00 main> chain <var_decl 0x7fbde9d6dbd0 all>>
[40;36m ======= node_fun:pop_commit========= [0m
[40;36m ======= find relate stmt with reaches ========= [0m
[40;36m ======= relate node_fun argument:reaches========= [0m
[40;36m ======= relate gimple_assign_lhs:top========= [0m
In function ‘pop_commit’:
./benchmarks/git/leak_3/git_leak_3.c:60:29: warning: use location
   60 |         struct commit_list *top = *stack;
      |                             ^
top_6 = *stack_5(D);
./benchmarks/git/leak_3/git_leak_3.c:60:29: warning: use location
top_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:reaches========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_3/git_leak_3.c:61:47: warning: use location
   61 |         struct commit *item = top ? top->item : NULL;
      |                                               ^
_7 = top_6->item;
./benchmarks/git/leak_3/git_leak_3.c:61:47: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:reaches========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_3/git_leak_3.c:64:29: warning: use location
   64 |                 *stack = top->next;
      |                             ^
_1 = top_6->next;
./benchmarks/git/leak_3/git_leak_3.c:64:29: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:reaches========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_3/git_leak_3.c:64:24: warning: use location
   64 |                 *stack = top->next;
      |                        ^
*stack_5(D) = _1;
./benchmarks/git/leak_3/git_leak_3.c:64:24: warning: use location
*stack_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   No memory leak, need more check!  [0m

======================================================================


======================================================================

dot graph START

======================================================================
 <var_decl 0x7fbde9d6dbd0 all
    type <integer_type 0x7fbde94da5e8 int public SI
        size <integer_cst 0x7fbde94c5df8 constant 32>
        unit-size <integer_cst 0x7fbde94c5e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbde94da5e8 precision:32 min <integer_cst 0x7fbde94c5db0 -2147483648> max <integer_cst 0x7fbde94c5dc8 2147483647>
        pointer_to_this <pointer_type 0x7fbde94e19d8>>
    addressable SI ./benchmarks/git/leak_3/git_leak_3.c:80:18 size <integer_cst 0x7fbde94c5df8 32> unit-size <integer_cst 0x7fbde94c5e10 4>
    align:32 warn_if_not_align:0 context <function_decl 0x7fbde8fdee00 main> chain <var_decl 0x7fbde9d6db40 find_all>>

 ================== this stmt hava call fucntion ================== 
 <var_decl 0x7fbde9d6dbd0 all
    type <integer_type 0x7fbde94da5e8 int public SI
        size <integer_cst 0x7fbde94c5df8 constant 32>
        unit-size <integer_cst 0x7fbde94c5e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbde94da5e8 precision:32 min <integer_cst 0x7fbde94c5db0 -2147483648> max <integer_cst 0x7fbde94c5dc8 2147483647>
        pointer_to_this <pointer_type 0x7fbde94e19d8>>
    addressable SI ./benchmarks/git/leak_3/git_leak_3.c:80:18 size <integer_cst 0x7fbde94c5df8 32> unit-size <integer_cst 0x7fbde94c5e10 4>
    align:32 warn_if_not_align:0 context <function_decl 0x7fbde8fdee00 main> chain <var_decl 0x7fbde9d6db40 find_all>>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_15 = VDEF <.MEM_13>
find_bisection (&list, &reaches, &all, find_all_5(D));
find_bisection (&list, &reaches, &all, find_all_5(D));
In function ‘main’:
./benchmarks/git/leak_3/git_leak_3.c:85:5: warning: use location
   85 |     find_bisection(&list, &reaches, &all, find_all);
      |     ^
this stmt call this function :find_bisection
trace fucntion name:find_bisection 
[40;44m =======trace_function_path find_bisection  function_call count: 1 level :0========  [0m
 <var_decl 0x7fbde9d6dbd0 all
    type <integer_type 0x7fbde94da5e8 int public SI
        size <integer_cst 0x7fbde94c5df8 constant 32>
        unit-size <integer_cst 0x7fbde94c5e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbde94da5e8 precision:32 min <integer_cst 0x7fbde94c5db0 -2147483648> max <integer_cst 0x7fbde94c5dc8 2147483647>
        pointer_to_this <pointer_type 0x7fbde94e19d8>>
    addressable SI ./benchmarks/git/leak_3/git_leak_3.c:80:18 size <integer_cst 0x7fbde94c5df8 32> unit-size <integer_cst 0x7fbde94c5e10 4>
    align:32 warn_if_not_align:0 context <function_decl 0x7fbde8fdee00 main> chain <var_decl 0x7fbde9d6db40 find_all>>
[40;36m ======= node_fun:find_bisection========= [0m
[40;36m ======= find relate stmt with all ========= [0m
[40;36m ======= relate node_fun argument:all========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘find_bisection’:
./benchmarks/git/leak_3/git_leak_3.c:19:9: warning: use location
   19 |         show_list("bisection 2 entry", 0, 0, *commit_list);
      |         ^
_1 = *commit_list_13(D);
./benchmarks/git/leak_3/git_leak_3.c:19:9: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:all========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/git/leak_3/git_leak_3.c:25:47: warning: use location
   25 |         for (nr = on_list = 0, last = NULL, p = *commit_list;
      |                                               ^
p_17 = *commit_list_13(D);
./benchmarks/git/leak_3/git_leak_3.c:25:47: warning: use location
p_17

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:all========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_3/git_leak_3.c:28:35: warning: use location
   28 |                 unsigned flags = p->item->object.flags;
      |                                   ^
_2 = p_9->item;
./benchmarks/git/leak_3/git_leak_3.c:28:35: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:all========= [0m
[40;36m ======= relate gimple_assign_lhs:next========= [0m
./benchmarks/git/leak_3/git_leak_3.c:30:22: warning: use location
   30 |                 next = p->next;
      |                      ^
next_23 = p_9->next;
./benchmarks/git/leak_3/git_leak_3.c:30:22: warning: use location
next_23

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:all========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_3/git_leak_3.c:46:22: warning: use location
   46 |         *commit_list = list;
      |                      ^
*commit_list_13(D) = last_10;
./benchmarks/git/leak_3/git_leak_3.c:46:22: warning: use location
*commit_list_13(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:show_list========= [0m
[40;46m =======add node_fun stack:show_list========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_15 = VDEF <.MEM_13>
find_bisection (&list, &reaches, &all, find_all_5(D));
find_bisection (&list, &reaches, &all, find_all_5(D));
In function ‘main’:
./benchmarks/git/leak_3/git_leak_3.c:85:5: warning: use location
   85 |     find_bisection(&list, &reaches, &all, find_all);
      |     ^
this stmt call this function :find_bisection
trace fucntion name:find_bisection 
[40;44m =======trace_function_path find_bisection  function_call count: 1 level :0========  [0m
 <var_decl 0x7fbde9d6dbd0 all
    type <integer_type 0x7fbde94da5e8 int public SI
        size <integer_cst 0x7fbde94c5df8 constant 32>
        unit-size <integer_cst 0x7fbde94c5e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbde94da5e8 precision:32 min <integer_cst 0x7fbde94c5db0 -2147483648> max <integer_cst 0x7fbde94c5dc8 2147483647>
        pointer_to_this <pointer_type 0x7fbde94e19d8>>
    addressable SI ./benchmarks/git/leak_3/git_leak_3.c:80:18 size <integer_cst 0x7fbde94c5df8 32> unit-size <integer_cst 0x7fbde94c5e10 4>
    align:32 warn_if_not_align:0 context <function_decl 0x7fbde8fdee00 main> chain <var_decl 0x7fbde9d6db40 find_all>>
[40;36m ======= node_fun:find_bisection========= [0m
[40;36m ======= find relate stmt with all ========= [0m
[40;36m ======= relate node_fun argument:all========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘find_bisection’:
./benchmarks/git/leak_3/git_leak_3.c:19:9: warning: use location
   19 |         show_list("bisection 2 entry", 0, 0, *commit_list);
      |         ^
_1 = *commit_list_13(D);
./benchmarks/git/leak_3/git_leak_3.c:19:9: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:all========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/git/leak_3/git_leak_3.c:25:47: warning: use location
   25 |         for (nr = on_list = 0, last = NULL, p = *commit_list;
      |                                               ^
p_17 = *commit_list_13(D);
./benchmarks/git/leak_3/git_leak_3.c:25:47: warning: use location
p_17

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:all========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_3/git_leak_3.c:28:35: warning: use location
   28 |                 unsigned flags = p->item->object.flags;
      |                                   ^
_2 = p_9->item;
./benchmarks/git/leak_3/git_leak_3.c:28:35: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:all========= [0m
[40;36m ======= relate gimple_assign_lhs:next========= [0m
./benchmarks/git/leak_3/git_leak_3.c:30:22: warning: use location
   30 |                 next = p->next;
      |                      ^
next_23 = p_9->next;
./benchmarks/git/leak_3/git_leak_3.c:30:22: warning: use location
next_23

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:all========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_3/git_leak_3.c:46:22: warning: use location
   46 |         *commit_list = list;
      |                      ^
*commit_list_13(D) = last_10;
./benchmarks/git/leak_3/git_leak_3.c:46:22: warning: use location
*commit_list_13(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:show_list========= [0m
[40;46m =======add node_fun stack:show_list========= [0m

 ================== trace ================== 
trace fucntion free:0 
_1 = list;
In function ‘main’:
./benchmarks/git/leak_3/git_leak_3.c:87:5: warning: use location
   87 |     free_commit_list(list);
      |     ^
free_commit_list (_1);
./benchmarks/git/leak_3/git_leak_3.c:87:5: warning: use location
this stmt call this function :free_commit_list
trace fucntion name:free_commit_list 
[40;44m =======trace_function_path free_commit_list  function_call count: 1 level :0========  [0m
 <var_decl 0x7fbde9d6dbd0 all
    type <integer_type 0x7fbde94da5e8 int public SI
        size <integer_cst 0x7fbde94c5df8 constant 32>
        unit-size <integer_cst 0x7fbde94c5e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbde94da5e8 precision:32 min <integer_cst 0x7fbde94c5db0 -2147483648> max <integer_cst 0x7fbde94c5dc8 2147483647>
        pointer_to_this <pointer_type 0x7fbde94e19d8>>
    addressable SI ./benchmarks/git/leak_3/git_leak_3.c:80:18 size <integer_cst 0x7fbde94c5df8 32> unit-size <integer_cst 0x7fbde94c5e10 4>
    align:32 warn_if_not_align:0 context <function_decl 0x7fbde8fdee00 main> chain <var_decl 0x7fbde9d6db40 find_all>>
[40;36m ======= node_fun:free_commit_list========= [0m
[40;36m ======= find relate stmt with all ========= [0m
[40;36m ======= relate node_fun argument:all========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘free_commit_list’:
./benchmarks/git/leak_3/git_leak_3.c:73:16: warning: use location
   73 |         while (list)
      |                ^
_1 = list;
./benchmarks/git/leak_3/git_leak_3.c:73:16: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:pop_commit========= [0m
[40;46m =======add node_fun stack:pop_commit========= [0m
[40;44m =======trace_function_path pop_commit  function_call count: 1 level :1========  [0m
# .MEM_11 = VDEF <.MEM_10>
free (top_6);
[40;31m  find free stmt free same pointer [0m
# .MEM_11 = VDEF <.MEM_10>
free (top_6);
In function ‘main’:
./benchmarks/git/leak_3/git_leak_3.c:65:17: warning: use location
   65 |                 free(top);
      |                 ^
 <var_decl 0x7fbde9d6dbd0 all
    type <integer_type 0x7fbde94da5e8 int public SI
        size <integer_cst 0x7fbde94c5df8 constant 32>
        unit-size <integer_cst 0x7fbde94c5e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbde94da5e8 precision:32 min <integer_cst 0x7fbde94c5db0 -2147483648> max <integer_cst 0x7fbde94c5dc8 2147483647>
        pointer_to_this <pointer_type 0x7fbde94e19d8>>
    addressable SI ./benchmarks/git/leak_3/git_leak_3.c:80:18 size <integer_cst 0x7fbde94c5df8 32> unit-size <integer_cst 0x7fbde94c5e10 4>
    align:32 warn_if_not_align:0 context <function_decl 0x7fbde8fdee00 main> chain <var_decl 0x7fbde9d6db40 find_all>>
[40;36m ======= node_fun:pop_commit========= [0m
[40;36m ======= find relate stmt with all ========= [0m
[40;36m ======= relate node_fun argument:all========= [0m
[40;36m ======= relate gimple_assign_lhs:top========= [0m
In function ‘pop_commit’:
./benchmarks/git/leak_3/git_leak_3.c:60:29: warning: use location
   60 |         struct commit_list *top = *stack;
      |                             ^
top_6 = *stack_5(D);
./benchmarks/git/leak_3/git_leak_3.c:60:29: warning: use location
top_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:all========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_3/git_leak_3.c:61:47: warning: use location
   61 |         struct commit *item = top ? top->item : NULL;
      |                                               ^
_7 = top_6->item;
./benchmarks/git/leak_3/git_leak_3.c:61:47: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:all========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_3/git_leak_3.c:64:29: warning: use location
   64 |                 *stack = top->next;
      |                             ^
_1 = top_6->next;
./benchmarks/git/leak_3/git_leak_3.c:64:29: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:all========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_3/git_leak_3.c:64:24: warning: use location
   64 |                 *stack = top->next;
      |                        ^
*stack_5(D) = _1;
./benchmarks/git/leak_3/git_leak_3.c:64:24: warning: use location
*stack_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   No memory leak, need more check!  [0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fbde94cd6c0
    type <integer_type 0x7fbde94da5e8 int public SI
        size <integer_cst 0x7fbde94c5df8 constant 32>
        unit-size <integer_cst 0x7fbde94c5e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbde94da5e8 precision:32 min <integer_cst 0x7fbde94c5db0 -2147483648> max <integer_cst 0x7fbde94c5dc8 2147483647>
        pointer_to_this <pointer_type 0x7fbde94e19d8>>
    var <var_decl 0x7fbde9d6db40 find_all>
    def_stmt GIMPLE_NOP
    version:5>
 <ssa_name 0x7fbde94cd6c0
    type <integer_type 0x7fbde94da5e8 int public SI
        size <integer_cst 0x7fbde94c5df8 constant 32>
        unit-size <integer_cst 0x7fbde94c5e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbde94da5e8 precision:32 min <integer_cst 0x7fbde94c5db0 -2147483648> max <integer_cst 0x7fbde94c5dc8 2147483647>
        pointer_to_this <pointer_type 0x7fbde94e19d8>>
    var <var_decl 0x7fbde9d6db40 find_all>
    def_stmt GIMPLE_NOP
    version:5>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fbde94cd6c0
    type <integer_type 0x7fbde94da5e8 int public SI
        size <integer_cst 0x7fbde94c5df8 constant 32>
        unit-size <integer_cst 0x7fbde94c5e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbde94da5e8 precision:32 min <integer_cst 0x7fbde94c5db0 -2147483648> max <integer_cst 0x7fbde94c5dc8 2147483647>
        pointer_to_this <pointer_type 0x7fbde94e19d8>>
    var <var_decl 0x7fbde9d6db40 find_all>
    def_stmt GIMPLE_NOP
    version:5>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_15 = VDEF <.MEM_13>
find_bisection (&list, &reaches, &all, find_all_5(D));
find_bisection (&list, &reaches, &all, find_all_5(D));
In function ‘main’:
./benchmarks/git/leak_3/git_leak_3.c:85:5: warning: use location
   85 |     find_bisection(&list, &reaches, &all, find_all);
      |     ^
this stmt call this function :find_bisection
trace fucntion name:find_bisection 
[40;44m =======trace_function_path find_bisection  function_call count: 1 level :0========  [0m
 <ssa_name 0x7fbde94cd6c0
    type <integer_type 0x7fbde94da5e8 int public SI
        size <integer_cst 0x7fbde94c5df8 constant 32>
        unit-size <integer_cst 0x7fbde94c5e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbde94da5e8 precision:32 min <integer_cst 0x7fbde94c5db0 -2147483648> max <integer_cst 0x7fbde94c5dc8 2147483647>
        pointer_to_this <pointer_type 0x7fbde94e19d8>>
    var <var_decl 0x7fbde9d6db40 find_all>
    def_stmt GIMPLE_NOP
    version:5>
[40;36m ======= node_fun:find_bisection========= [0m
[40;36m ======= find relate stmt with find_all ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:show_list========= [0m
[40;46m =======add node_fun stack:show_list========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_15 = VDEF <.MEM_13>
find_bisection (&list, &reaches, &all, find_all_5(D));
find_bisection (&list, &reaches, &all, find_all_5(D));
./benchmarks/git/leak_3/git_leak_3.c:85:5: warning: use location
this stmt call this function :find_bisection
trace fucntion name:find_bisection 
[40;44m =======trace_function_path find_bisection  function_call count: 1 level :0========  [0m
 <ssa_name 0x7fbde94cd6c0
    type <integer_type 0x7fbde94da5e8 int public SI
        size <integer_cst 0x7fbde94c5df8 constant 32>
        unit-size <integer_cst 0x7fbde94c5e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbde94da5e8 precision:32 min <integer_cst 0x7fbde94c5db0 -2147483648> max <integer_cst 0x7fbde94c5dc8 2147483647>
        pointer_to_this <pointer_type 0x7fbde94e19d8>>
    var <var_decl 0x7fbde9d6db40 find_all>
    def_stmt GIMPLE_NOP
    version:5>
[40;36m ======= node_fun:find_bisection========= [0m
[40;36m ======= find relate stmt with find_all ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:show_list========= [0m
[40;46m =======add node_fun stack:show_list========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fbde94cd6c0
    type <integer_type 0x7fbde94da5e8 int public SI
        size <integer_cst 0x7fbde94c5df8 constant 32>
        unit-size <integer_cst 0x7fbde94c5e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbde94da5e8 precision:32 min <integer_cst 0x7fbde94c5db0 -2147483648> max <integer_cst 0x7fbde94c5dc8 2147483647>
        pointer_to_this <pointer_type 0x7fbde94e19d8>>
    var <var_decl 0x7fbde9d6db40 find_all>
    def_stmt GIMPLE_NOP
    version:5>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fbde94cd630
    type <pointer_type 0x7fbde8fdd7e0
        type <record_type 0x7fbde8fdd738 commit_list TI
            size <integer_cst 0x7fbde94c5c00 constant 128>
            unit-size <integer_cst 0x7fbde94c5c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbde8fdd738 fields <field_decl 0x7fbde8fe01c8 item> context <translation_unit_decl 0x7fbde94d0168 ./benchmarks/git/leak_3/git_leak_3.c>
            pointer_to_this <pointer_type 0x7fbde8fdd7e0>>
        public unsigned DI
        size <integer_cst 0x7fbde94c5bb8 constant 64>
        unit-size <integer_cst 0x7fbde94c5bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fbde8fdd888>>
   
    def_stmt _1 = list;
    version:1
    ptr-info 0x7fbde8fee3f0>
 <ssa_name 0x7fbde94cd630
    type <pointer_type 0x7fbde8fdd7e0
        type <record_type 0x7fbde8fdd738 commit_list TI
            size <integer_cst 0x7fbde94c5c00 constant 128>
            unit-size <integer_cst 0x7fbde94c5c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbde8fdd738 fields <field_decl 0x7fbde8fe01c8 item> context <translation_unit_decl 0x7fbde94d0168 ./benchmarks/git/leak_3/git_leak_3.c>
            pointer_to_this <pointer_type 0x7fbde8fdd7e0>>
        public unsigned DI
        size <integer_cst 0x7fbde94c5bb8 constant 64>
        unit-size <integer_cst 0x7fbde94c5bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fbde8fdd888>>
   
    def_stmt _1 = list;
    version:1
    ptr-info 0x7fbde8fee3f0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fbde94cd630
    type <pointer_type 0x7fbde8fdd7e0
        type <record_type 0x7fbde8fdd738 commit_list TI
            size <integer_cst 0x7fbde94c5c00 constant 128>
            unit-size <integer_cst 0x7fbde94c5c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbde8fdd738 fields <field_decl 0x7fbde8fe01c8 item> context <translation_unit_decl 0x7fbde94d0168 ./benchmarks/git/leak_3/git_leak_3.c>
            pointer_to_this <pointer_type 0x7fbde8fdd7e0>>
        public unsigned DI
        size <integer_cst 0x7fbde94c5bb8 constant 64>
        unit-size <integer_cst 0x7fbde94c5bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fbde8fdd888>>
   
    def_stmt _1 = list;
    version:1
    ptr-info 0x7fbde8fee3f0>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_16 = VDEF <.MEM_15>
free_commit_list (_1);
free_commit_list (_1);
./benchmarks/git/leak_3/git_leak_3.c:87:5: warning: use location
   87 |     free_commit_list(list);
      |     ^
this stmt call this function :free_commit_list
trace fucntion name:free_commit_list 
[40;44m =======trace_function_path free_commit_list  function_call count: 1 level :0========  [0m
 <ssa_name 0x7fbde94cd630
    type <pointer_type 0x7fbde8fdd7e0
        type <record_type 0x7fbde8fdd738 commit_list TI
            size <integer_cst 0x7fbde94c5c00 constant 128>
            unit-size <integer_cst 0x7fbde94c5c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbde8fdd738 fields <field_decl 0x7fbde8fe01c8 item> context <translation_unit_decl 0x7fbde94d0168 ./benchmarks/git/leak_3/git_leak_3.c>
            pointer_to_this <pointer_type 0x7fbde8fdd7e0>>
        public unsigned DI
        size <integer_cst 0x7fbde94c5bb8 constant 64>
        unit-size <integer_cst 0x7fbde94c5bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fbde8fdd888>>
   
    def_stmt _1 = list;
    version:1
    ptr-info 0x7fbde8fee3f0>
[40;36m ======= node_fun:free_commit_list========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘free_commit_list’:
./benchmarks/git/leak_3/git_leak_3.c:73:16: warning: use location
   73 |         while (list)
      |                ^
_1 = list;
./benchmarks/git/leak_3/git_leak_3.c:73:16: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:pop_commit========= [0m
[40;46m =======add node_fun stack:pop_commit========= [0m
[40;44m =======trace_function_path pop_commit  function_call count: 1 level :1========  [0m
# .MEM_11 = VDEF <.MEM_10>
free (top_6);
[40;31m  find free stmt free same pointer [0m
# .MEM_11 = VDEF <.MEM_10>
free (top_6);
In function ‘main’:
./benchmarks/git/leak_3/git_leak_3.c:65:17: warning: use location
   65 |                 free(top);
      |                 ^
 <ssa_name 0x7fbde94cd630
    type <pointer_type 0x7fbde8fdd7e0
        type <record_type 0x7fbde8fdd738 commit_list TI
            size <integer_cst 0x7fbde94c5c00 constant 128>
            unit-size <integer_cst 0x7fbde94c5c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbde8fdd738 fields <field_decl 0x7fbde8fe01c8 item> context <translation_unit_decl 0x7fbde94d0168 ./benchmarks/git/leak_3/git_leak_3.c>
            pointer_to_this <pointer_type 0x7fbde8fdd7e0>>
        public unsigned DI
        size <integer_cst 0x7fbde94c5bb8 constant 64>
        unit-size <integer_cst 0x7fbde94c5bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fbde8fdd888>>
   
    def_stmt _1 = list;
    version:1
    ptr-info 0x7fbde8fee3f0>
[40;36m ======= node_fun:pop_commit========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:top========= [0m
In function ‘pop_commit’:
./benchmarks/git/leak_3/git_leak_3.c:60:29: warning: use location
   60 |         struct commit_list *top = *stack;
      |                             ^
top_6 = *stack_5(D);
./benchmarks/git/leak_3/git_leak_3.c:60:29: warning: use location
top_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_3/git_leak_3.c:61:47: warning: use location
   61 |         struct commit *item = top ? top->item : NULL;
      |                                               ^
_7 = top_6->item;
./benchmarks/git/leak_3/git_leak_3.c:61:47: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_3/git_leak_3.c:64:29: warning: use location
   64 |                 *stack = top->next;
      |                             ^
_1 = top_6->next;
./benchmarks/git/leak_3/git_leak_3.c:64:29: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_3/git_leak_3.c:64:24: warning: use location
   64 |                 *stack = top->next;
      |                        ^
*stack_5(D) = _1;
./benchmarks/git/leak_3/git_leak_3.c:64:24: warning: use location
*stack_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:1 
_1 = list;
In function ‘main’:
./benchmarks/git/leak_3/git_leak_3.c:87:5: warning: use location
   87 |     free_commit_list(list);
      |     ^
find_bisection (&list, &reaches, &all, find_all_5(D));
./benchmarks/git/leak_3/git_leak_3.c:85:5: warning: use location
   85 |     find_bisection(&list, &reaches, &all, find_all);
      |     ^
this stmt call this function :find_bisection
trace fucntion name:find_bisection 
[40;44m =======trace_function_path find_bisection  function_call count: 1 level :0========  [0m
 <ssa_name 0x7fbde94cd630
    type <pointer_type 0x7fbde8fdd7e0
        type <record_type 0x7fbde8fdd738 commit_list TI
            size <integer_cst 0x7fbde94c5c00 constant 128>
            unit-size <integer_cst 0x7fbde94c5c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbde8fdd738 fields <field_decl 0x7fbde8fe01c8 item> context <translation_unit_decl 0x7fbde94d0168 ./benchmarks/git/leak_3/git_leak_3.c>
            pointer_to_this <pointer_type 0x7fbde8fdd7e0>>
        public unsigned DI
        size <integer_cst 0x7fbde94c5bb8 constant 64>
        unit-size <integer_cst 0x7fbde94c5bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fbde8fdd888>>
   
    def_stmt _1 = list;
    version:1
    ptr-info 0x7fbde8fee3f0>
[40;36m ======= node_fun:find_bisection========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘find_bisection’:
./benchmarks/git/leak_3/git_leak_3.c:19:9: warning: use location
   19 |         show_list("bisection 2 entry", 0, 0, *commit_list);
      |         ^
_1 = *commit_list_13(D);
./benchmarks/git/leak_3/git_leak_3.c:19:9: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/git/leak_3/git_leak_3.c:25:47: warning: use location
   25 |         for (nr = on_list = 0, last = NULL, p = *commit_list;
      |                                               ^
p_17 = *commit_list_13(D);
./benchmarks/git/leak_3/git_leak_3.c:25:47: warning: use location
p_17

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_3/git_leak_3.c:28:35: warning: use location
   28 |                 unsigned flags = p->item->object.flags;
      |                                   ^
_2 = p_9->item;
./benchmarks/git/leak_3/git_leak_3.c:28:35: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:next========= [0m
./benchmarks/git/leak_3/git_leak_3.c:30:22: warning: use location
   30 |                 next = p->next;
      |                      ^
next_23 = p_9->next;
./benchmarks/git/leak_3/git_leak_3.c:30:22: warning: use location
next_23

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_3/git_leak_3.c:46:22: warning: use location
   46 |         *commit_list = list;
      |                      ^
*commit_list_13(D) = last_10;
./benchmarks/git/leak_3/git_leak_3.c:46:22: warning: use location
*commit_list_13(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:show_list========= [0m
[40;46m =======add node_fun stack:show_list========= [0m

 ================== trace ================== 
trace fucntion free:1 
find_bisection (&list, &reaches, &all, find_all_5(D));
In function ‘main’:
./benchmarks/git/leak_3/git_leak_3.c:85:5: warning: use location
   85 |     find_bisection(&list, &reaches, &all, find_all);
      |     ^
this stmt call this function :find_bisection
trace fucntion name:find_bisection 
[40;44m =======trace_function_path find_bisection  function_call count: 1 level :0========  [0m
 <ssa_name 0x7fbde94cd630
    type <pointer_type 0x7fbde8fdd7e0
        type <record_type 0x7fbde8fdd738 commit_list TI
            size <integer_cst 0x7fbde94c5c00 constant 128>
            unit-size <integer_cst 0x7fbde94c5c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbde8fdd738 fields <field_decl 0x7fbde8fe01c8 item> context <translation_unit_decl 0x7fbde94d0168 ./benchmarks/git/leak_3/git_leak_3.c>
            pointer_to_this <pointer_type 0x7fbde8fdd7e0>>
        public unsigned DI
        size <integer_cst 0x7fbde94c5bb8 constant 64>
        unit-size <integer_cst 0x7fbde94c5bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fbde8fdd888>>
   
    def_stmt _1 = list;
    version:1
    ptr-info 0x7fbde8fee3f0>
[40;36m ======= node_fun:find_bisection========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘find_bisection’:
./benchmarks/git/leak_3/git_leak_3.c:19:9: warning: use location
   19 |         show_list("bisection 2 entry", 0, 0, *commit_list);
      |         ^
_1 = *commit_list_13(D);
./benchmarks/git/leak_3/git_leak_3.c:19:9: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:p========= [0m
./benchmarks/git/leak_3/git_leak_3.c:25:47: warning: use location
   25 |         for (nr = on_list = 0, last = NULL, p = *commit_list;
      |                                               ^
p_17 = *commit_list_13(D);
./benchmarks/git/leak_3/git_leak_3.c:25:47: warning: use location
p_17

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_3/git_leak_3.c:28:35: warning: use location
   28 |                 unsigned flags = p->item->object.flags;
      |                                   ^
_2 = p_9->item;
./benchmarks/git/leak_3/git_leak_3.c:28:35: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:next========= [0m
./benchmarks/git/leak_3/git_leak_3.c:30:22: warning: use location
   30 |                 next = p->next;
      |                      ^
next_23 = p_9->next;
./benchmarks/git/leak_3/git_leak_3.c:30:22: warning: use location
next_23

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/git/leak_3/git_leak_3.c:46:22: warning: use location
   46 |         *commit_list = list;
      |                      ^
*commit_list_13(D) = last_10;
./benchmarks/git/leak_3/git_leak_3.c:46:22: warning: use location
*commit_list_13(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:show_list========= [0m
[40;46m =======add node_fun stack:show_list========= [0m

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fbde94cd630
    type <pointer_type 0x7fbde8fdd7e0
        type <record_type 0x7fbde8fdd738 commit_list TI
            size <integer_cst 0x7fbde94c5c00 constant 128>
            unit-size <integer_cst 0x7fbde94c5c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbde8fdd738 fields <field_decl 0x7fbde8fe01c8 item> context <translation_unit_decl 0x7fbde94d0168 ./benchmarks/git/leak_3/git_leak_3.c>
            pointer_to_this <pointer_type 0x7fbde8fdd7e0>>
        public unsigned DI
        size <integer_cst 0x7fbde94c5bb8 constant 64>
        unit-size <integer_cst 0x7fbde94c5bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fbde8fdd888>>
   
    def_stmt _1 = list;
    version:1
    ptr-info 0x7fbde8fee3f0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   No memory leak, need more check!  [0m

======================================================================


======================================================================
[40;33m =======POP node_fun stack:main========= [0m
[40;44m =======node_fun:free_commit_list========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path free_commit_list  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:pop_commit========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path pop_commit  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre_check_funciton:pop_commit========= [0m
[40;42m =======start_check_funciton:pop_commit========= [0m
[40;33m =======POP node_fun stack:pop_commit========= [0m
[40;42m =======pre_check_funciton:free_commit_list========= [0m
[40;42m =======start_check_funciton:free_commit_list========= [0m

dot graph START

======================================================================
 <parm_decl 0x7fbde8ff4000 list
    type <pointer_type 0x7fbde8fdd7e0
        type <record_type 0x7fbde8fdd738 commit_list TI
            size <integer_cst 0x7fbde94c5c00 constant 128>
            unit-size <integer_cst 0x7fbde94c5c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbde8fdd738 fields <field_decl 0x7fbde8fe01c8 item> context <translation_unit_decl 0x7fbde94d0168 ./benchmarks/git/leak_3/git_leak_3.c>
            pointer_to_this <pointer_type 0x7fbde8fdd7e0>>
        public unsigned DI
        size <integer_cst 0x7fbde94c5bb8 constant 64>
        unit-size <integer_cst 0x7fbde94c5bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fbde8fdd888>>
    addressable unsigned DI ./benchmarks/git/leak_3/git_leak_3.c:71:43 size <integer_cst 0x7fbde94c5bb8 64> unit-size <integer_cst 0x7fbde94c5bd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7fbde8fded00 free_commit_list> arg-type <pointer_type 0x7fbde8fdd7e0>>

 ================== this stmt hava call fucntion ================== 
 <parm_decl 0x7fbde8ff4000 list
    type <pointer_type 0x7fbde8fdd7e0
        type <record_type 0x7fbde8fdd738 commit_list TI
            size <integer_cst 0x7fbde94c5c00 constant 128>
            unit-size <integer_cst 0x7fbde94c5c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbde8fdd738 fields <field_decl 0x7fbde8fe01c8 item> context <translation_unit_decl 0x7fbde94d0168 ./benchmarks/git/leak_3/git_leak_3.c>
            pointer_to_this <pointer_type 0x7fbde8fdd7e0>>
        public unsigned DI
        size <integer_cst 0x7fbde94c5bb8 constant 64>
        unit-size <integer_cst 0x7fbde94c5bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fbde8fdd888>>
    addressable unsigned DI ./benchmarks/git/leak_3/git_leak_3.c:71:43 size <integer_cst 0x7fbde94c5bb8 64> unit-size <integer_cst 0x7fbde94c5bd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7fbde8fded00 free_commit_list> arg-type <pointer_type 0x7fbde8fdd7e0>>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_4 = VDEF <.MEM_2>
pop_commit (&list);
pop_commit (&list);
In function ‘free_commit_list’:
./benchmarks/git/leak_3/git_leak_3.c:74:17: warning: use location
   74 |                 pop_commit(&list);
      |                 ^
this stmt call this function :pop_commit
trace fucntion name:pop_commit 
[40;44m =======trace_function_path pop_commit  function_call count: 1 level :0========  [0m
# .MEM_11 = VDEF <.MEM_10>
free (top_6);
[40;31m  find free stmt free same pointer [0m
# .MEM_11 = VDEF <.MEM_10>
free (top_6);
./benchmarks/git/leak_3/git_leak_3.c:65:17: warning: use location
   65 |                 free(top);
      |                 ^
 <parm_decl 0x7fbde8ff4000 list
    type <pointer_type 0x7fbde8fdd7e0
        type <record_type 0x7fbde8fdd738 commit_list TI
            size <integer_cst 0x7fbde94c5c00 constant 128>
            unit-size <integer_cst 0x7fbde94c5c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbde8fdd738 fields <field_decl 0x7fbde8fe01c8 item> context <translation_unit_decl 0x7fbde94d0168 ./benchmarks/git/leak_3/git_leak_3.c>
            pointer_to_this <pointer_type 0x7fbde8fdd7e0>>
        public unsigned DI
        size <integer_cst 0x7fbde94c5bb8 constant 64>
        unit-size <integer_cst 0x7fbde94c5bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fbde8fdd888>>
    addressable unsigned DI ./benchmarks/git/leak_3/git_leak_3.c:71:43 size <integer_cst 0x7fbde94c5bb8 64> unit-size <integer_cst 0x7fbde94c5bd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7fbde8fded00 free_commit_list> arg-type <pointer_type 0x7fbde8fdd7e0>>
[40;36m ======= node_fun:pop_commit========= [0m
[40;36m ======= find relate stmt with list ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_4 = VDEF <.MEM_2>
pop_commit (&list);
pop_commit (&list);
./benchmarks/git/leak_3/git_leak_3.c:74:17: warning: use location
   74 |                 pop_commit(&list);
      |                 ^
this stmt call this function :pop_commit
trace fucntion name:pop_commit 
[40;44m =======trace_function_path pop_commit  function_call count: 1 level :0========  [0m
# .MEM_11 = VDEF <.MEM_10>
free (top_6);
[40;31m  find free stmt free same pointer [0m
# .MEM_11 = VDEF <.MEM_10>
free (top_6);
./benchmarks/git/leak_3/git_leak_3.c:65:17: warning: use location
   65 |                 free(top);
      |                 ^
 <parm_decl 0x7fbde8ff4000 list
    type <pointer_type 0x7fbde8fdd7e0
        type <record_type 0x7fbde8fdd738 commit_list TI
            size <integer_cst 0x7fbde94c5c00 constant 128>
            unit-size <integer_cst 0x7fbde94c5c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbde8fdd738 fields <field_decl 0x7fbde8fe01c8 item> context <translation_unit_decl 0x7fbde94d0168 ./benchmarks/git/leak_3/git_leak_3.c>
            pointer_to_this <pointer_type 0x7fbde8fdd7e0>>
        public unsigned DI
        size <integer_cst 0x7fbde94c5bb8 constant 64>
        unit-size <integer_cst 0x7fbde94c5bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fbde8fdd888>>
    addressable unsigned DI ./benchmarks/git/leak_3/git_leak_3.c:71:43 size <integer_cst 0x7fbde94c5bb8 64> unit-size <integer_cst 0x7fbde94c5bd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7fbde8fded00 free_commit_list> arg-type <pointer_type 0x7fbde8fdd7e0>>
[40;36m ======= node_fun:pop_commit========= [0m
[40;36m ======= find relate stmt with list ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:2 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:free_commit_list========= [0m
[40;44m =======node_fun:pop_commit========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path pop_commit  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre_check_funciton:pop_commit========= [0m
[40;42m =======start_check_funciton:pop_commit========= [0m
[40;33m =======POP node_fun stack:pop_commit========= [0m
[40;44m =======node_fun:commit_list_insert========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path commit_list_insert  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:commit_list_insert========= [0m
[40;42m =======start_check_funciton:commit_list_insert========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fbde94cdd80
    type <pointer_type 0x7fbde8fdd7e0
        type <record_type 0x7fbde8fdd738 commit_list TI
            size <integer_cst 0x7fbde94c5c00 constant 128>
            unit-size <integer_cst 0x7fbde94c5c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbde8fdd738 fields <field_decl 0x7fbde8fe01c8 item> context <translation_unit_decl 0x7fbde94d0168 ./benchmarks/git/leak_3/git_leak_3.c>
            pointer_to_this <pointer_type 0x7fbde8fdd7e0>>
        public unsigned DI
        size <integer_cst 0x7fbde94c5bb8 constant 64>
        unit-size <integer_cst 0x7fbde94c5bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fbde8fdd888>>
    var <var_decl 0x7fbde8ff3360 new_list>
    def_stmt new_list_4 = malloc (16);
    version:4
    ptr-info 0x7fbde8fee4b0>
 <ssa_name 0x7fbde94cdd80
    type <pointer_type 0x7fbde8fdd7e0
        type <record_type 0x7fbde8fdd738 commit_list TI
            size <integer_cst 0x7fbde94c5c00 constant 128>
            unit-size <integer_cst 0x7fbde94c5c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbde8fdd738 fields <field_decl 0x7fbde8fe01c8 item> context <translation_unit_decl 0x7fbde94d0168 ./benchmarks/git/leak_3/git_leak_3.c>
            pointer_to_this <pointer_type 0x7fbde8fdd7e0>>
        public unsigned DI
        size <integer_cst 0x7fbde94c5bb8 constant 64>
        unit-size <integer_cst 0x7fbde94c5bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fbde8fdd888>>
    var <var_decl 0x7fbde8ff3360 new_list>
    def_stmt new_list_4 = malloc (16);
    version:4
    ptr-info 0x7fbde8fee4b0>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
return new_list_4;
In function ‘commit_list_insert’:
./benchmarks/git/leak_3/git_leak_3.c:55:16: warning: use location
   55 |         return new_list;
      |                ^
*list_p_7(D) = new_list_4;
./benchmarks/git/leak_3/git_leak_3.c:54:17: warning: use location
   54 |         *list_p = new_list;
      |                 ^
new_list_4->next = _1;
./benchmarks/git/leak_3/git_leak_3.c:53:24: warning: use location
   53 |         new_list->next = *list_p;
      |                        ^
new_list_4->next = _1;
./benchmarks/git/leak_3/git_leak_3.c:53:24: warning: use location
new_list_4->item = item_5(D);
./benchmarks/git/leak_3/git_leak_3.c:52:24: warning: use location
   52 |         new_list->item = item;
      |                        ^
new_list_4->item = item_5(D);
./benchmarks/git/leak_3/git_leak_3.c:52:24: warning: use location
# .MEM_9 = VDEF <.MEM_8(D)>
new_list_4 = malloc (16);
new_list_4 = malloc (16);
./benchmarks/git/leak_3/git_leak_3.c:51:40: warning: use location
   51 |         struct commit_list *new_list = xmalloc(sizeof(struct commit_list));
      |                                        ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fbde94cdd80
    type <pointer_type 0x7fbde8fdd7e0
        type <record_type 0x7fbde8fdd738 commit_list TI
            size <integer_cst 0x7fbde94c5c00 constant 128>
            unit-size <integer_cst 0x7fbde94c5c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbde8fdd738 fields <field_decl 0x7fbde8fe01c8 item> context <translation_unit_decl 0x7fbde94d0168 ./benchmarks/git/leak_3/git_leak_3.c>
            pointer_to_this <pointer_type 0x7fbde8fdd7e0>>
        public unsigned DI
        size <integer_cst 0x7fbde94c5bb8 constant 64>
        unit-size <integer_cst 0x7fbde94c5bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fbde8fdd888>>
    var <var_decl 0x7fbde8ff3360 new_list>
    def_stmt new_list_4 = malloc (16);
    version:4
    ptr-info 0x7fbde8fee4b0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:commit_list_insert========= [0m
[40;44m =======node_fun:find_bisection========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path find_bisection  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:show_list========= [0m
[40;33m =======POP node_fun stack:show_list========= [0m
[40;42m =======pre_check_funciton:find_bisection========= [0m
[40;42m =======start_check_funciton:find_bisection========= [0m

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <string_cst 0x7fbde8ff5d48
    type <array_type 0x7fbde8fe5930
        type <integer_type 0x7fbde8fe5888 char public QI
            size <integer_cst 0x7fbde94c5ca8 constant 8>
            unit-size <integer_cst 0x7fbde94c5cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbde94da3f0 precision:8 min <integer_cst 0x7fbde8fd48d0 -128> max <integer_cst 0x7fbde8fd48b8 127>>
        BLK
        size <integer_cst 0x7fbde8fd48a0 constant 144>
        unit-size <integer_cst 0x7fbde8fd4888 constant 18>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7fbde8fe57e0 type <integer_type 0x7fbde94da000 sizetype>
            DI
            size <integer_cst 0x7fbde94c5bb8 constant 64>
            unit-size <integer_cst 0x7fbde94c5bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbde94da738 precision:64 min <integer_cst 0x7fbde94c5be8 0> max <integer_cst 0x7fbde8fd4870 17>>
        pointer_to_this <pointer_type 0x7fbde8fe59d8>>
    readonly constant static "bisection 2 entry\000">

dot graph START

======================================================================
 <ssa_name 0x7fbde94cd5e8
    type <pointer_type 0x7fbde8fdd7e0
        type <record_type 0x7fbde8fdd738 commit_list TI
            size <integer_cst 0x7fbde94c5c00 constant 128>
            unit-size <integer_cst 0x7fbde94c5c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbde8fdd738 fields <field_decl 0x7fbde8fe01c8 item> context <translation_unit_decl 0x7fbde94d0168 ./benchmarks/git/leak_3/git_leak_3.c>
            pointer_to_this <pointer_type 0x7fbde8fdd7e0>>
        public unsigned DI
        size <integer_cst 0x7fbde94c5bb8 constant 64>
        unit-size <integer_cst 0x7fbde94c5bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fbde8fdd888>>
   
    def_stmt _1 = *commit_list_13(D);
    version:1
    ptr-info 0x7fbde8fee4f8>
 <ssa_name 0x7fbde94cd5e8
    type <pointer_type 0x7fbde8fdd7e0
        type <record_type 0x7fbde8fdd738 commit_list TI
            size <integer_cst 0x7fbde94c5c00 constant 128>
            unit-size <integer_cst 0x7fbde94c5c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbde8fdd738 fields <field_decl 0x7fbde8fe01c8 item> context <translation_unit_decl 0x7fbde94d0168 ./benchmarks/git/leak_3/git_leak_3.c>
            pointer_to_this <pointer_type 0x7fbde8fdd7e0>>
        public unsigned DI
        size <integer_cst 0x7fbde94c5bb8 constant 64>
        unit-size <integer_cst 0x7fbde94c5bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fbde8fdd888>>
   
    def_stmt _1 = *commit_list_13(D);
    version:1
    ptr-info 0x7fbde8fee4f8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fbde94cd5e8
    type <pointer_type 0x7fbde8fdd7e0
        type <record_type 0x7fbde8fdd738 commit_list TI
            size <integer_cst 0x7fbde94c5c00 constant 128>
            unit-size <integer_cst 0x7fbde94c5c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbde8fdd738 fields <field_decl 0x7fbde8fe01c8 item> context <translation_unit_decl 0x7fbde94d0168 ./benchmarks/git/leak_3/git_leak_3.c>
            pointer_to_this <pointer_type 0x7fbde8fdd7e0>>
        public unsigned DI
        size <integer_cst 0x7fbde94c5bb8 constant 64>
        unit-size <integer_cst 0x7fbde94c5bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fbde8fdd888>>
   
    def_stmt _1 = *commit_list_13(D);
    version:1
    ptr-info 0x7fbde8fee4f8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_29 = VDEF <.MEM_28(D)>
show_list ("bisection 2 entry", 0, 0, _1);
show_list ("bisection 2 entry", 0, 0, _1);
In function ‘find_bisection’:
./benchmarks/git/leak_3/git_leak_3.c:19:9: warning: use location
   19 |         show_list("bisection 2 entry", 0, 0, *commit_list);
      |         ^
this stmt call this function :show_list
trace fucntion name:show_list 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_29 = VDEF <.MEM_28(D)>
show_list ("bisection 2 entry", 0, 0, _1);
show_list ("bisection 2 entry", 0, 0, _1);
./benchmarks/git/leak_3/git_leak_3.c:19:9: warning: use location
this stmt call this function :show_list
trace fucntion name:show_list 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fbde94cd5e8
    type <pointer_type 0x7fbde8fdd7e0
        type <record_type 0x7fbde8fdd738 commit_list TI
            size <integer_cst 0x7fbde94c5c00 constant 128>
            unit-size <integer_cst 0x7fbde94c5c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbde8fdd738 fields <field_decl 0x7fbde8fe01c8 item> context <translation_unit_decl 0x7fbde94d0168 ./benchmarks/git/leak_3/git_leak_3.c>
            pointer_to_this <pointer_type 0x7fbde8fdd7e0>>
        public unsigned DI
        size <integer_cst 0x7fbde94c5bb8 constant 64>
        unit-size <integer_cst 0x7fbde94c5bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fbde8fdd888>>
   
    def_stmt _1 = *commit_list_13(D);
    version:1
    ptr-info 0x7fbde8fee4f8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <string_cst 0x7fbde8ff5e60
    type <array_type 0x7fbde8fe5b28
        type <integer_type 0x7fbde8fe5888 char public QI
            size <integer_cst 0x7fbde94c5ca8 constant 8>
            unit-size <integer_cst 0x7fbde94c5cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbde94da3f0 precision:8 min <integer_cst 0x7fbde8fd48d0 -128> max <integer_cst 0x7fbde8fd48b8 127>>
        BLK
        size <integer_cst 0x7fbde8fd48e8 constant 152>
        unit-size <integer_cst 0x7fbde8fd4780 constant 19>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7fbde8fe5a80 type <integer_type 0x7fbde94da000 sizetype>
            DI
            size <integer_cst 0x7fbde94c5bb8 constant 64>
            unit-size <integer_cst 0x7fbde94c5bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbde94da738 precision:64 min <integer_cst 0x7fbde94c5be8 0> max <integer_cst 0x7fbde8fd4888 18>>
        pointer_to_this <pointer_type 0x7fbde8fe5bd0>>
    readonly constant static "bisection 2 sorted\000">

dot graph START

======================================================================
 <ssa_name 0x7fbde8ffa120
    type <integer_type 0x7fbde94da5e8 int public SI
        size <integer_cst 0x7fbde94c5df8 constant 32>
        unit-size <integer_cst 0x7fbde94c5e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbde94da5e8 precision:32 min <integer_cst 0x7fbde94c5db0 -2147483648> max <integer_cst 0x7fbde94c5dc8 2147483647>
        pointer_to_this <pointer_type 0x7fbde94e19d8>>
    var <var_decl 0x7fbde8ff36c0 nr>
    def_stmt nr_7 = PHI <0(2), nr_8(8)>
    version:7>
 <ssa_name 0x7fbde8ffa120
    type <integer_type 0x7fbde94da5e8 int public SI
        size <integer_cst 0x7fbde94c5df8 constant 32>
        unit-size <integer_cst 0x7fbde94c5e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbde94da5e8 precision:32 min <integer_cst 0x7fbde94c5db0 -2147483648> max <integer_cst 0x7fbde94c5dc8 2147483647>
        pointer_to_this <pointer_type 0x7fbde94e19d8>>
    var <var_decl 0x7fbde8ff36c0 nr>
    def_stmt nr_7 = PHI <0(2), nr_8(8)>
    version:7>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fbde8ffa120
    type <integer_type 0x7fbde94da5e8 int public SI
        size <integer_cst 0x7fbde94c5df8 constant 32>
        unit-size <integer_cst 0x7fbde94c5e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbde94da5e8 precision:32 min <integer_cst 0x7fbde94c5db0 -2147483648> max <integer_cst 0x7fbde94c5dc8 2147483647>
        pointer_to_this <pointer_type 0x7fbde94e19d8>>
    var <var_decl 0x7fbde8ff36c0 nr>
    def_stmt nr_7 = PHI <0(2), nr_8(8)>
    version:7>
is Other function 
 
 Start check Pointer Collect  

======================================================================
*all_19(D) = nr_7;
./benchmarks/git/leak_3/git_leak_3.c:44:14: warning: use location
   44 |         *all = nr;
      |              ^
*all_19(D) = nr_7;
./benchmarks/git/leak_3/git_leak_3.c:44:14: warning: use location
# .MEM_30 = VDEF <.MEM_27>
show_list ("bisection 2 sorted", 0, nr_7, last_10);
show_list ("bisection 2 sorted", 0, nr_7, last_10);
./benchmarks/git/leak_3/git_leak_3.c:42:9: warning: use location
   42 |         show_list("bisection 2 sorted", 0, nr, list);
      |         ^
this stmt call this function :show_list
trace fucntion name:show_list 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
nr_8 = PHI <nr_7(4), nr_6(7)>
lto1: warning: use location
this stmt have mutiple branch ---show_list-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
nr_6 = PHI <nr_7(5), nr_25(6)>
lto1: warning: use location
this stmt have mutiple branch ---show_list-----

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fbde8ffa120
    type <integer_type 0x7fbde94da5e8 int public SI
        size <integer_cst 0x7fbde94c5df8 constant 32>
        unit-size <integer_cst 0x7fbde94c5e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbde94da5e8 precision:32 min <integer_cst 0x7fbde94c5db0 -2147483648> max <integer_cst 0x7fbde94c5dc8 2147483647>
        pointer_to_this <pointer_type 0x7fbde94e19d8>>
    var <var_decl 0x7fbde8ff36c0 nr>
    def_stmt nr_7 = PHI <0(2), nr_8(8)>
    version:7>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fbde8ffa1f8
    type <pointer_type 0x7fbde8fdd7e0
        type <record_type 0x7fbde8fdd738 commit_list TI
            size <integer_cst 0x7fbde94c5c00 constant 128>
            unit-size <integer_cst 0x7fbde94c5c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbde8fdd738 fields <field_decl 0x7fbde8fe01c8 item> context <translation_unit_decl 0x7fbde94d0168 ./benchmarks/git/leak_3/git_leak_3.c>
            pointer_to_this <pointer_type 0x7fbde8fdd7e0>>
        public unsigned DI
        size <integer_cst 0x7fbde94c5bb8 constant 64>
        unit-size <integer_cst 0x7fbde94c5bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fbde8fdd888>>
    var <var_decl 0x7fbde8ff3510 last>
    def_stmt last_10 = PHI <0B(2), last_4(8)>
    version:10
    ptr-info 0x7fbde8fee558>
 <ssa_name 0x7fbde8ffa1f8
    type <pointer_type 0x7fbde8fdd7e0
        type <record_type 0x7fbde8fdd738 commit_list TI
            size <integer_cst 0x7fbde94c5c00 constant 128>
            unit-size <integer_cst 0x7fbde94c5c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbde8fdd738 fields <field_decl 0x7fbde8fe01c8 item> context <translation_unit_decl 0x7fbde94d0168 ./benchmarks/git/leak_3/git_leak_3.c>
            pointer_to_this <pointer_type 0x7fbde8fdd7e0>>
        public unsigned DI
        size <integer_cst 0x7fbde94c5bb8 constant 64>
        unit-size <integer_cst 0x7fbde94c5bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fbde8fdd888>>
    var <var_decl 0x7fbde8ff3510 last>
    def_stmt last_10 = PHI <0B(2), last_4(8)>
    version:10
    ptr-info 0x7fbde8fee558>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fbde8ffa1f8
    type <pointer_type 0x7fbde8fdd7e0
        type <record_type 0x7fbde8fdd738 commit_list TI
            size <integer_cst 0x7fbde94c5c00 constant 128>
            unit-size <integer_cst 0x7fbde94c5c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbde8fdd738 fields <field_decl 0x7fbde8fe01c8 item> context <translation_unit_decl 0x7fbde94d0168 ./benchmarks/git/leak_3/git_leak_3.c>
            pointer_to_this <pointer_type 0x7fbde8fdd7e0>>
        public unsigned DI
        size <integer_cst 0x7fbde94c5bb8 constant 64>
        unit-size <integer_cst 0x7fbde94c5bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fbde8fdd888>>
    var <var_decl 0x7fbde8ff3510 last>
    def_stmt last_10 = PHI <0B(2), last_4(8)>
    version:10
    ptr-info 0x7fbde8fee558>
is Other function 
 
 Start check Pointer Collect  

======================================================================
*commit_list_13(D) = last_10;
./benchmarks/git/leak_3/git_leak_3.c:46:22: warning: use location
   46 |         *commit_list = list;
      |                      ^
*commit_list_13(D) = last_10;
./benchmarks/git/leak_3/git_leak_3.c:46:22: warning: use location
# .MEM_30 = VDEF <.MEM_27>
show_list ("bisection 2 sorted", 0, nr_7, last_10);
show_list ("bisection 2 sorted", 0, nr_7, last_10);
./benchmarks/git/leak_3/git_leak_3.c:42:9: warning: use location
   42 |         show_list("bisection 2 sorted", 0, nr, list);
      |         ^
this stmt call this function :show_list
trace fucntion name:show_list 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
last_4 = PHI <last_10(4), p_9(7)>
lto1: warning: use location
this stmt have mutiple branch ---show_list-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_9->next = last_10;
./benchmarks/git/leak_3/git_leak_3.c:35:25: warning: use location
   35 |                 p->next = last;
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (p_9 != 0B)
./benchmarks/git/leak_3/git_leak_3.c:26:14: warning: use location
   26 |              p;
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
next_23 = p_9->next;
./benchmarks/git/leak_3/git_leak_3.c:30:22: warning: use location
   30 |                 next = p->next;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_22 = PHI <next_23(4), next_23(7)>
lto1: warning: use location
this stmt have mutiple branch ---show_list-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_2 = p_9->item;
./benchmarks/git/leak_3/git_leak_3.c:28:35: warning: use location
   28 |                 unsigned flags = p->item->object.flags;
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_3 = _2->object.flags;
./benchmarks/git/leak_3/git_leak_3.c:28:49: warning: use location
   28 |                 unsigned flags = p->item->object.flags;
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_16 == 0)
./benchmarks/git/leak_3/git_leak_3.c:37:20: warning: use location
   37 |                 if (!(flags & TREESAME))
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = _3 & 2;
lto1: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fbde8ffa1f8
    type <pointer_type 0x7fbde8fdd7e0
        type <record_type 0x7fbde8fdd738 commit_list TI
            size <integer_cst 0x7fbde94c5c00 constant 128>
            unit-size <integer_cst 0x7fbde94c5c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbde8fdd738 fields <field_decl 0x7fbde8fe01c8 item> context <translation_unit_decl 0x7fbde94d0168 ./benchmarks/git/leak_3/git_leak_3.c>
            pointer_to_this <pointer_type 0x7fbde8fdd7e0>>
        public unsigned DI
        size <integer_cst 0x7fbde94c5bb8 constant 64>
        unit-size <integer_cst 0x7fbde94c5bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fbde8fdd888>>
    var <var_decl 0x7fbde8ff3510 last>
    def_stmt last_10 = PHI <0B(2), last_4(8)>
    version:10
    ptr-info 0x7fbde8fee558>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fbde8ffa1f8
    type <pointer_type 0x7fbde8fdd7e0
        type <record_type 0x7fbde8fdd738 commit_list TI
            size <integer_cst 0x7fbde94c5c00 constant 128>
            unit-size <integer_cst 0x7fbde94c5c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbde8fdd738 fields <field_decl 0x7fbde8fe01c8 item> context <translation_unit_decl 0x7fbde94d0168 ./benchmarks/git/leak_3/git_leak_3.c>
            pointer_to_this <pointer_type 0x7fbde8fdd7e0>>
        public unsigned DI
        size <integer_cst 0x7fbde94c5bb8 constant 64>
        unit-size <integer_cst 0x7fbde94c5bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fbde8fdd888>>
    var <var_decl 0x7fbde8ff3510 last>
    def_stmt last_10 = PHI <0B(2), last_4(8)>
    version:10
    ptr-info 0x7fbde8fee558>
 <ssa_name 0x7fbde8ffa1f8
    type <pointer_type 0x7fbde8fdd7e0
        type <record_type 0x7fbde8fdd738 commit_list TI
            size <integer_cst 0x7fbde94c5c00 constant 128>
            unit-size <integer_cst 0x7fbde94c5c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbde8fdd738 fields <field_decl 0x7fbde8fe01c8 item> context <translation_unit_decl 0x7fbde94d0168 ./benchmarks/git/leak_3/git_leak_3.c>
            pointer_to_this <pointer_type 0x7fbde8fdd7e0>>
        public unsigned DI
        size <integer_cst 0x7fbde94c5bb8 constant 64>
        unit-size <integer_cst 0x7fbde94c5bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fbde8fdd888>>
    var <var_decl 0x7fbde8ff3510 last>
    def_stmt last_10 = PHI <0B(2), last_4(8)>
    version:10
    ptr-info 0x7fbde8fee558>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fbde8ffa1f8
    type <pointer_type 0x7fbde8fdd7e0
        type <record_type 0x7fbde8fdd738 commit_list TI
            size <integer_cst 0x7fbde94c5c00 constant 128>
            unit-size <integer_cst 0x7fbde94c5c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbde8fdd738 fields <field_decl 0x7fbde8fe01c8 item> context <translation_unit_decl 0x7fbde94d0168 ./benchmarks/git/leak_3/git_leak_3.c>
            pointer_to_this <pointer_type 0x7fbde8fdd7e0>>
        public unsigned DI
        size <integer_cst 0x7fbde94c5bb8 constant 64>
        unit-size <integer_cst 0x7fbde94c5bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fbde8fdd888>>
    var <var_decl 0x7fbde8ff3510 last>
    def_stmt last_10 = PHI <0B(2), last_4(8)>
    version:10
    ptr-info 0x7fbde8fee558>
is Other function 
 
 Start check Pointer Collect  

======================================================================
*commit_list_13(D) = last_10;
./benchmarks/git/leak_3/git_leak_3.c:46:22: warning: use location
   46 |         *commit_list = list;
      |                      ^
*commit_list_13(D) = last_10;
./benchmarks/git/leak_3/git_leak_3.c:46:22: warning: use location
# .MEM_30 = VDEF <.MEM_27>
show_list ("bisection 2 sorted", 0, nr_7, last_10);
show_list ("bisection 2 sorted", 0, nr_7, last_10);
./benchmarks/git/leak_3/git_leak_3.c:42:9: warning: use location
   42 |         show_list("bisection 2 sorted", 0, nr, list);
      |         ^
this stmt call this function :show_list
trace fucntion name:show_list 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
last_4 = PHI <last_10(4), p_9(7)>
lto1: warning: use location
this stmt have mutiple branch ---show_list-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_9->next = last_10;
./benchmarks/git/leak_3/git_leak_3.c:35:25: warning: use location
   35 |                 p->next = last;
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (p_9 != 0B)
./benchmarks/git/leak_3/git_leak_3.c:26:14: warning: use location
   26 |              p;
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
next_23 = p_9->next;
./benchmarks/git/leak_3/git_leak_3.c:30:22: warning: use location
   30 |                 next = p->next;
      |                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_22 = PHI <next_23(4), next_23(7)>
lto1: warning: use location
this stmt have mutiple branch ---show_list-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_2 = p_9->item;
./benchmarks/git/leak_3/git_leak_3.c:28:35: warning: use location
   28 |                 unsigned flags = p->item->object.flags;
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_3 = _2->object.flags;
./benchmarks/git/leak_3/git_leak_3.c:28:49: warning: use location
   28 |                 unsigned flags = p->item->object.flags;
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_16 == 0)
./benchmarks/git/leak_3/git_leak_3.c:37:20: warning: use location
   37 |                 if (!(flags & TREESAME))
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = _3 & 2;
lto1: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fbde8ffa1f8
    type <pointer_type 0x7fbde8fdd7e0
        type <record_type 0x7fbde8fdd738 commit_list TI
            size <integer_cst 0x7fbde94c5c00 constant 128>
            unit-size <integer_cst 0x7fbde94c5c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbde8fdd738 fields <field_decl 0x7fbde8fe01c8 item> context <translation_unit_decl 0x7fbde94d0168 ./benchmarks/git/leak_3/git_leak_3.c>
            pointer_to_this <pointer_type 0x7fbde8fdd7e0>>
        public unsigned DI
        size <integer_cst 0x7fbde94c5bb8 constant 64>
        unit-size <integer_cst 0x7fbde94c5bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fbde8fdd888>>
    var <var_decl 0x7fbde8ff3510 last>
    def_stmt last_10 = PHI <0B(2), last_4(8)>
    version:10
    ptr-info 0x7fbde8fee558>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:find_bisection========= [0m
fucntion collect path finsh

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 97603128]:
goto <bb 4>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 976138697]:
commit_list_insert (0B, &list);
i_12 = i_2 + 1;

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 1073741824]:
# i_2 = PHI <0(2), i_12(3)>
if (i_2 <= 9)
  goto <bb 3>; [90.91%]
else
  goto <bb 5>; [9.09%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 97603128]:
find_bisection (&list, &reaches, &all, find_all_5(D));
_1 = list;
free_commit_list (_1);
list ={v} {CLOBBER};
reaches ={v} {CLOBBER};
all ={v} {CLOBBER};
return 0;

=======Mapping node_fun:free_commit_list=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 118111600]:
goto <bb 4>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 955630225]:
pop_commit (&list);

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 1073741824]:
_1 = list;
if (_1 != 0B)
  goto <bb 3>; [89.00%]
else
  goto <bb 5>; [11.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 118111600]:
return;

=======Mapping node_fun:pop_commit=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
top_6 = *stack_5(D);
if (top_6 != 0B)
  goto <bb 3>; [85.10%]
else
  goto <bb 4>; [14.90%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 913754297]:
_7 = top_6->item;

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073741824]:
# _2 = PHI <0B(2), _7(3)>
if (top_6 != 0B)
  goto <bb 5>; [53.47%]
else
  goto <bb 6>; [46.53%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 574129753]:
_1 = top_6->next;
*stack_5(D) = _1;
free (top_6);

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 1073741824]:
return _2;

=======Mapping node_fun:commit_list_insert=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
new_list_4 = malloc (16);
new_list_4->item = item_5(D);
_1 = *list_p_7(D);
new_list_4->next = _1;
*list_p_7(D) = new_list_4;
return new_list_4;

=======Mapping node_fun:find_bisection=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 118111600]:
_1 = *commit_list_13(D);
show_list ("bisection 2 entry", 0, 0, _1);
p_17 = *commit_list_13(D);
goto <bb 10>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 955630225]:
_2 = p_9->item;
_3 = _2->object.flags;
next_23 = p_9->next;
_15 = _3 & 2;
if (_15 != 0)
  goto <bb 4>; [33.00%]
else
  goto <bb 5>; [67.00%]

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 315357972]:
// predicted unlikely by continue predictor.
goto <bb 8>; [100.00%]

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 640272253]:
p_9->next = last_10;
_16 = _3 & 4;
if (_16 == 0)
  goto <bb 6>; [50.00%]
else
  goto <bb 7>; [50.00%]

=======is loop:1=========

 bb index 6 
<bb 6> [local count: 320136126]:
nr_25 = nr_7 + 1;

=======is loop:1=========

 bb index 7 
<bb 7> [local count: 640272253]:
# nr_6 = PHI <nr_7(5), nr_25(6)>

=======is loop:1=========

 bb index 8 
<bb 8> [local count: 955630225]:
# nr_8 = PHI <nr_7(4), nr_6(7)>
# p_22 = PHI <next_23(4), next_23(7)>
# last_4 = PHI <last_10(4), p_9(7)>

=======is loop:1=========

 bb index 10 
<bb 10> [local count: 1073741824]:
# nr_7 = PHI <0(2), nr_8(8)>
# p_9 = PHI <p_17(2), p_22(8)>
# last_10 = PHI <0B(2), last_4(8)>
if (p_9 != 0B)
  goto <bb 3>; [89.00%]
else
  goto <bb 9>; [11.00%]

=======is loop:0=========

 bb index 9 
<bb 9> [local count: 118111600]:
show_list ("bisection 2 sorted", 0, nr_7, last_10);
*all_19(D) = nr_7;
*commit_list_13(D) = last_10;
return;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    gimple malloc count : 1 [0m
[40;34m    gimple free   count : 1 [0m
[40;34m    all ptable point : 15 [0m
[40;34m    analyzable ptable point : 12 [0m
[40;34m    used_stmt array stack totalsize of : 0.000800 mb[0m
[40;34m    collect time: : 0.000895 s [0m
[40;34m    algorithm time: 0.040478 s [0m
[40;34m    gimple stmt count : : 46 [0m
[40;34m    this report analysis in Fri Feb 18 12:18:57 2022
 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.01 ( 14%)  2157k ( 84%)
 phase opt and generate             :   0.04 (100%)   0.02 (100%)   0.06 ( 86%)   371k ( 14%)
 callgraph functions expansion      :   0.01 ( 25%)   0.00 (  0%)   0.02 ( 29%)   303k ( 12%)
 tree aggressive DCE                :   0.00 (  0%)   0.00 (  0%)   0.01 ( 14%)     0  (  0%)
 expand                             :   0.00 (  0%)   0.00 (  0%)   0.01 ( 14%)    25k (  1%)
 LRA non-specific                   :   0.01 ( 25%)   0.00 (  0%)   0.00 (  0%)  1472  (  0%)
 plugin execution                   :   0.03 ( 75%)   0.02 (100%)   0.04 ( 57%)  1000  (  0%)
 TOTAL                              :   0.04          0.02          0.07         2570k
/usr/bin/ld: /tmp/ccm2XLvw.ltrans0.ltrans.o: in function `find_bisection':
<artificial>:(.text+0x28): undefined reference to `show_list'
/usr/bin/ld: <artificial>:(.text+0x8b): undefined reference to `show_list'
collect2: error: ld returned 1 exit status
