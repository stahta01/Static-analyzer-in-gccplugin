In file included from ./benchmarks/git/leak_3/git_leak_3.c:10:0:
./benchmarks/git/leak_3/../git.h: In function â€˜copy_arrayâ€™:
./benchmarks/git/leak_3/../git.h:161:3: warning: implicit declaration of function â€˜memcpyâ€™ [-Wimplicit-function-declaration]
   memcpy(dst, src, st_mult(size, n));
   ^~~~~~
./benchmarks/git/leak_3/../git.h:161:3: warning: incompatible implicit declaration of built-in function â€˜memcpyâ€™
./benchmarks/git/leak_3/../git.h:161:3: note: include â€˜<string.h>â€™ or provide a declaration of â€˜memcpyâ€™
./benchmarks/git/leak_3/../git.h:161:20: warning: implicit declaration of function â€˜st_multâ€™; did you mean â€˜stdoutâ€™? [-Wimplicit-function-declaration]
   memcpy(dst, src, st_mult(size, n));
                    ^~~~~~~
                    stdout
./benchmarks/git/leak_3/../git.h: In function â€˜move_arrayâ€™:
./benchmarks/git/leak_3/../git.h:169:3: warning: implicit declaration of function â€˜memmoveâ€™ [-Wimplicit-function-declaration]
   memmove(dst, src, st_mult(size, n));
   ^~~~~~~
./benchmarks/git/leak_3/../git.h:169:3: warning: incompatible implicit declaration of built-in function â€˜memmoveâ€™
./benchmarks/git/leak_3/../git.h:169:3: note: include â€˜<string.h>â€™ or provide a declaration of â€˜memmoveâ€™
In file included from ./benchmarks/git/leak_3/git_leak_3.c:9:0:
./benchmarks/git/leak_3/../git.h: In function â€˜xstrdup_or_nullâ€™:
./benchmarks/git/leak_3/../stdio.h:138:20: warning: implicit declaration of function â€˜strdupâ€™ [-Wimplicit-function-declaration]
 #define xstrdup(a) strdup(a)
                    ^
./benchmarks/git/leak_3/../git.h:174:15: note: in expansion of macro â€˜xstrdupâ€™
  return str ? xstrdup(str) : NULL;
               ^~~~~~~
./benchmarks/git/leak_3/../stdio.h:138:20: warning: incompatible implicit declaration of built-in function â€˜strdupâ€™
 #define xstrdup(a) strdup(a)
                    ^
./benchmarks/git/leak_3/../git.h:174:15: note: in expansion of macro â€˜xstrdupâ€™
  return str ? xstrdup(str) : NULL;
               ^~~~~~~
In file included from ./benchmarks/git/leak_3/git_leak_3.c:10:0:
./benchmarks/git/leak_3/../git.h: At top level:
./benchmarks/git/leak_3/../git.h:236:55: warning: â€˜struct archiver_argsâ€™ declared inside parameter list will not be visible outside of this definition or declaration
  int (*write_archive)(const struct archiver *, struct archiver_args *);
                                                       ^~~~~~~~~~~~~
./benchmarks/git/leak_3/../git.h: In function â€˜strbuf_swapâ€™:
./benchmarks/git/leak_3/../git.h:126:2: warning: incompatible implicit declaration of built-in function â€˜memcpyâ€™
  memcpy(_swap_buffer, _swap_a_ptr, sizeof(a));  \
  ^
./benchmarks/git/leak_3/../git.h:407:2: note: in expansion of macro â€˜SWAPâ€™
  SWAP(*a, *b);
  ^~~~
./benchmarks/git/leak_3/../git.h:126:2: note: include â€˜<string.h>â€™ or provide a declaration of â€˜memcpyâ€™
  memcpy(_swap_buffer, _swap_a_ptr, sizeof(a));  \
  ^
./benchmarks/git/leak_3/../git.h:407:2: note: in expansion of macro â€˜SWAPâ€™
  SWAP(*a, *b);
  ^~~~
./benchmarks/git/leak_3/git_leak_3.c: In function â€˜find_bisectionâ€™:
./benchmarks/git/leak_3/git_leak_3.c:19:2: warning: implicit declaration of function â€˜show_listâ€™ [-Wimplicit-function-declaration]
  show_list("bisection 2 entry", 0, 0, *commit_list);
  ^~~~~~~~~
=======ipa_pta=========
===============The first stage : Point of interest stmt collect=================
--------GIMPLE Cond -------
succs:= 4
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 6
succs:= 6
succs:= 7
--------GIMPLE Cond -------
succs:= 8
succs:= 8
--------GIMPLE Cond -------
succs:= 12
--------GIMPLE Cond -------
succs:= 14
--------GIMPLE Cond -------
succs:= 14
succs:= 16
succs:= 16
--------GIMPLE Cond -------
succs:= 19
===============The first stage : Point of interest stmt collect=================
start PointerConstraint
pointer ftable is 1 
pointer ptable is 1 
===============The second stage : Mapping stmt=================
# .MEM_65 = VDEF <.MEM_13>
new_list_21 = malloc (16);
# .MEM_56 = VDEF <.MEM_13>
show_list ("bisection 2 entry", 0, 0, _25);
# .MEM_57 = VDEF <.MEM_53>
show_list ("bisection 2 sorted", 0, nr_38, list_42);
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
===============The second stage : record fucntion =================

=============== The third stage : Start detection  =================
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 3 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:show_list========= [0m
[40;33m =======POP node_fun stack:show_list========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f3a9b0c5ee8
    type <pointer_type 0x7f3a9abe70a8
        type <record_type 0x7f3a9abe71f8 commit_list TI
            size <integer_cst 0x7f3a9b0bdc30 constant 128>
            unit size <integer_cst 0x7f3a9b0bdc48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f3a9abe71f8 fields <field_decl 0x7f3a9abe9a18 item> context <translation_unit_decl 0x7f3a9b0c8168 ./benchmarks/git/leak_3/git_leak_3.c>
            pointer_to_this <pointer_type 0x7f3a9abe70a8> chain <type_decl 0x7f3a9abe9ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f3a9b0bdbe8 constant 64>
        unit size <integer_cst 0x7f3a9b0bdc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f3a9abe7498>>
    var <var_decl 0x7f3a9abff240 new_list>
    def_stmt new_list_21 = malloc (16);
    version 21
    ptr-info 0x7f3a9abeae10>
# .MEM_65 = VDEF <.MEM_13>
new_list_21 = malloc (16);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
list_80 = new_list_21;
bb index := 3
# VUSE <.MEM_55>
return 0;
In function â€˜mainâ€™:
lto1: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
list_80 = new_list_21;
bb index := 3
# VUSE <.MEM_55>
return 0;
lto1: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
list_80 = new_list_21;
./benchmarks/git/leak_3/git_leak_3.c:54:10: warning: use location
  *list_p = new_list;
          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
list_70 = PHI <list_73(D)(2), list_80(3)>
bb index := 4
# VUSE <.MEM_55>
return 0;
lto1: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
list_70 = PHI <list_73(D)(2), list_80(3)>
bb index := 4
# VUSE <.MEM_55>
return 0;
lto1: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
list_70 = PHI <list_73(D)(2), list_80(3)>
bb index := 4
# VUSE <.MEM_55>
return 0;
lto1: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
list_70 = PHI <list_73(D)(2), list_80(3)>
bb index := 4
# VUSE <.MEM_55>
return 0;
lto1: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
list_70 = PHI <list_73(D)(2), list_80(3)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_22 = list_70;
bb index := 3
# VUSE <.MEM_55>
return 0;
lto1: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_22 = list_70;
bb index := 3
# VUSE <.MEM_55>
return 0;
lto1: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = list_70;
./benchmarks/git/leak_3/git_leak_3.c:53:19: warning: use location
  new_list->next = *list_p;
                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
new_list_21->next = _22;
bb index := 3
# VUSE <.MEM_55>
return 0;
lto1: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
new_list_21->next = _22;
bb index := 3
# VUSE <.MEM_55>
return 0;
lto1: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
new_list_21->next = _22;
./benchmarks/git/leak_3/git_leak_3.c:53:17: warning: use location
  new_list->next = *list_p;
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
p_26 = list_70;
bb index := 5
# VUSE <.MEM_55>
return 0;
lto1: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
p_26 = list_70;
bb index := 5
# VUSE <.MEM_55>
return 0;
lto1: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 20

======================================================================
p_26 = list_70;
./benchmarks/git/leak_3/git_leak_3.c:25:40: warning: use location
  for (nr = on_list = 0, last = NULL, p = *commit_list;
                                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
p_27 = PHI <p_26(5), p_46(11)>
bb index := 12
# VUSE <.MEM_55>
return 0;
lto1: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
p_27 = PHI <p_26(5), p_46(11)>
bb index := 12
# VUSE <.MEM_55>
return 0;
lto1: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
p_27 = PHI <p_26(5), p_46(11)>
bb index := 12
# VUSE <.MEM_55>
return 0;
lto1: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
p_27 = PHI <p_26(5), p_46(11)>
bb index := 12
# VUSE <.MEM_55>
return 0;
lto1: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_27 = PHI <p_26(5), p_46(11)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_27->next = last_34;
./benchmarks/git/leak_3/git_leak_3.c:35:11: warning: use location
   p->next = last;
           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
list_75 = last_34;
bb index := 13
# VUSE <.MEM_55>
return 0;
lto1: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
list_75 = last_34;
bb index := 13
# VUSE <.MEM_55>
return 0;
lto1: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 20

======================================================================
list_75 = last_34;
./benchmarks/git/leak_3/git_leak_3.c:46:15: warning: use location
  *commit_list = list;
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = list_75;
bb index := 13
# VUSE <.MEM_55>
return 0;
lto1: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = list_75;
bb index := 13
# VUSE <.MEM_55>
return 0;
lto1: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 20

======================================================================
_1 = list_75;
./benchmarks/git/leak_3/git_leak_3.c:87:5: warning: use location
     free_commit_list(list);
     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
list_76 = _1;
bb index := 13
# VUSE <.MEM_55>
return 0;
lto1: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
list_76 = _1;
bb index := 13
# VUSE <.MEM_55>
return 0;
lto1: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 20

======================================================================
list_76 = _1;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
list_72 = PHI <list_76(13), list_71(18)>
bb index := 19
# VUSE <.MEM_55>
return 0;
lto1: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
list_72 = PHI <list_76(13), list_71(18)>
bb index := 19
# VUSE <.MEM_55>
return 0;
lto1: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
list_72 = PHI <list_76(13), list_71(18)>
bb index := 19
# VUSE <.MEM_55>
return 0;
lto1: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
list_72 = PHI <list_76(13), list_71(18)>
bb index := 19
# VUSE <.MEM_55>
return 0;
lto1: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
list_72 = PHI <list_76(13), list_71(18)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
list_71 = PHI <list_72(16), list_79(17)>
bb index := 18
# VUSE <.MEM_55>
return 0;
lto1: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
list_71 = PHI <list_72(16), list_79(17)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
top_48 = list_72;
bb index := 14
# VUSE <.MEM_55>
return 0;
lto1: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
top_48 = list_72;
./benchmarks/git/leak_3/git_leak_3.c:60:22: warning: use location
  struct commit_list *top = *stack;
                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free (top_48);
./benchmarks/git/leak_3/git_leak_3.c:65:3: warning: use location
   free(top);
   ^
this stmt is child function---free-----

 ================== find ================== 
free (top_48);
./benchmarks/git/leak_3/git_leak_3.c:65:3: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = top_48->next;
./benchmarks/git/leak_3/git_leak_3.c:64:15: warning: use location
   *stack = top->next;
               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
list_79 = _50;
./benchmarks/git/leak_3/git_leak_3.c:64:10: warning: use location
   *stack = top->next;
          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = top_48->item;
./benchmarks/git/leak_3/git_leak_3.c:61:40: warning: use location
  struct commit *item = top ? top->item : NULL;
                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_51 = PHI <0B(14), _49(15)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (top_48 != 0B)
./benchmarks/git/leak_3/git_leak_3.c:63:5: warning: use location
  if (top) {
     ^
if (top_48 != 0B)

 ================== find cond branch ================= 
./benchmarks/git/leak_3/git_leak_3.c:63:5: warning: use location
Cond in fucntion main basic block 16
 ================== possible direct basic block ================= 
from main basic block 17
 ================== possible direct basic block ================= 
from main basic block 18
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_24 = list_72;
bb index := 19
# VUSE <.MEM_55>
return 0;
lto1: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_24 = list_72;
bb index := 19
# VUSE <.MEM_55>
return 0;
lto1: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_24 = list_72;
bb index := 19
# VUSE <.MEM_55>
return 0;
lto1: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_24 = list_72;
bb index := 19
# VUSE <.MEM_55>
return 0;
lto1: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_24 = list_72;
./benchmarks/git/leak_3/git_leak_3.c:73:9: warning: use location
  while (list)
         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_53>
next_31 = p_27->next;
bb index := 6
# VUSE <.MEM_55>
return 0;
lto1: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
next_31 = p_27->next;
./benchmarks/git/leak_3/git_leak_3.c:30:8: warning: use location
   next = p->next;
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
p_46 = PHI <next_31(7), next_31(10)>
bb index := 11
# VUSE <.MEM_55>
return 0;
lto1: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p_46 = PHI <next_31(7), next_31(10)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
last_47 = PHI <last_34(7), p_27(10)>
bb index := 11
# VUSE <.MEM_55>
return 0;
lto1: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
last_47 = PHI <last_34(7), p_27(10)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
list_42 = last_34;
bb index := 13
# VUSE <.MEM_55>
return 0;
lto1: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
list_42 = last_34;
bb index := 13
# VUSE <.MEM_55>
return 0;
lto1: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 20

======================================================================
list_42 = last_34;
./benchmarks/git/leak_3/git_leak_3.c:41:7: warning: use location
  list = last;
       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_57 = VDEF <.MEM_53>
show_list ("bisection 2 sorted", 0, nr_38, list_42);
bb index := 13
# VUSE <.MEM_55>
return 0;
lto1: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_57 = VDEF <.MEM_53>
show_list ("bisection 2 sorted", 0, nr_38, list_42);
bb index := 13
# VUSE <.MEM_55>
return 0;
lto1: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 20

======================================================================
show_list ("bisection 2 sorted", 0, nr_38, list_42);
./benchmarks/git/leak_3/git_leak_3.c:42:2: warning: use location
  show_list("bisection 2 sorted", 0, nr, list);
  ^
this stmt is child function---show_list-----

 ================== trace ================== 
 <ssa_name 0x7f3a9b0c5ee8
    type <pointer_type 0x7f3a9abe70a8
        type <record_type 0x7f3a9abe71f8 commit_list TI
            size <integer_cst 0x7f3a9b0bdc30 constant 128>
            unit size <integer_cst 0x7f3a9b0bdc48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f3a9abe71f8 fields <field_decl 0x7f3a9abe9a18 item> context <translation_unit_decl 0x7f3a9b0c8168 ./benchmarks/git/leak_3/git_leak_3.c>
            pointer_to_this <pointer_type 0x7f3a9abe70a8> chain <type_decl 0x7f3a9abe9ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f3a9b0bdbe8 constant 64>
        unit size <integer_cst 0x7f3a9b0bdc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f3a9abe7498>>
    var <var_decl 0x7f3a9abff240 new_list>
    def_stmt new_list_21 = malloc (16);
    version 21
    ptr-info 0x7f3a9abeae10>
trace fucntion name:show_list 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_53>
_28 = p_27->item;
bb index := 6
# VUSE <.MEM_55>
return 0;
lto1: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_28 = p_27->item;
./benchmarks/git/leak_3/git_leak_3.c:28:21: warning: use location
   unsigned flags = p->item->object.flags;
                     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_53>
_29 = _28->object.flags;
bb index := 6
# VUSE <.MEM_55>
return 0;
lto1: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_29 = _28->object.flags;
./benchmarks/git/leak_3/git_leak_3.c:28:35: warning: use location
   unsigned flags = p->item->object.flags;
                                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_32 = _29 & 2;
bb index := 6
# VUSE <.MEM_55>
return 0;
lto1: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_32 = _29 & 2;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_32 != 0)
bb index := 6
# VUSE <.MEM_55>
return 0;
lto1: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_32 != 0)
./benchmarks/git/leak_3/git_leak_3.c:31:6: warning: use location
   if (flags & UNINTERESTING) {
      ^
if (_32 != 0)

 ================== find cond branch ================= 
./benchmarks/git/leak_3/git_leak_3.c:31:6: warning: use location
Cond in fucntion main basic block 6
 ================== possible direct basic block ================= 
from main basic block 7
 ================== possible direct basic block ================= 
from main basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_33 = (unsigned int) _32;
bb index := 6
# VUSE <.MEM_55>
return 0;
lto1: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = (unsigned int) _32;
./benchmarks/git/leak_3/git_leak_3.c:31:13: warning: use location
   if (flags & UNINTERESTING) {
             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
flags_30 = (unsigned int) _29;
bb index := 6
# VUSE <.MEM_55>
return 0;
lto1: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
flags_30 = (unsigned int) _29;
./benchmarks/git/leak_3/git_leak_3.c:28:12: warning: use location
   unsigned flags = p->item->object.flags;
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
last_35 = p_27;
./benchmarks/git/leak_3/git_leak_3.c:36:8: warning: use location
   last = p;
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_25 = list_70;
bb index := 5
# VUSE <.MEM_55>
return 0;
lto1: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_25 = list_70;
bb index := 5
# VUSE <.MEM_55>
return 0;
lto1: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 20

======================================================================
_25 = list_70;
./benchmarks/git/leak_3/git_leak_3.c:19:2: warning: use location
  show_list("bisection 2 entry", 0, 0, *commit_list);
  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_13>
show_list ("bisection 2 entry", 0, 0, _25);
bb index := 5
# VUSE <.MEM_55>
return 0;
lto1: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_13>
show_list ("bisection 2 entry", 0, 0, _25);
bb index := 5
# VUSE <.MEM_55>
return 0;
lto1: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 20

======================================================================
show_list ("bisection 2 entry", 0, 0, _25);
./benchmarks/git/leak_3/git_leak_3.c:19:2: warning: use location
this stmt is child function---show_list-----

 ================== trace ================== 
 <ssa_name 0x7f3a9b0c5ee8
    type <pointer_type 0x7f3a9abe70a8
        type <record_type 0x7f3a9abe71f8 commit_list TI
            size <integer_cst 0x7f3a9b0bdc30 constant 128>
            unit size <integer_cst 0x7f3a9b0bdc48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f3a9abe71f8 fields <field_decl 0x7f3a9abe9a18 item> context <translation_unit_decl 0x7f3a9b0c8168 ./benchmarks/git/leak_3/git_leak_3.c>
            pointer_to_this <pointer_type 0x7f3a9abe70a8> chain <type_decl 0x7f3a9abe9ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f3a9b0bdbe8 constant 64>
        unit size <integer_cst 0x7f3a9b0bdc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f3a9abe7498>>
    var <var_decl 0x7f3a9abff240 new_list>
    def_stmt new_list_21 = malloc (16);
    version 21
    ptr-info 0x7f3a9abeae10>
trace fucntion name:show_list 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
new_list_21->item = 0B;
bb index := 3
# VUSE <.MEM_55>
return 0;
lto1: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_66 = VDEF <.MEM_65>
new_list_21->item = 0B;
bb index := 3
# VUSE <.MEM_55>
return 0;
lto1: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
new_list_21->item = 0B;
./benchmarks/git/leak_3/git_leak_3.c:52:17: warning: use location
  new_list->item = item;
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_69 = new_list_21;
bb index := 3
# VUSE <.MEM_55>
return 0;
lto1: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_69 = new_list_21;
bb index := 3
# VUSE <.MEM_55>
return 0;
lto1: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_69 = new_list_21;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_23 = new_list_21;
bb index := 3
# VUSE <.MEM_55>
return 0;
lto1: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_23 = new_list_21;
bb index := 3
# VUSE <.MEM_55>
return 0;
lto1: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = new_list_21;
./benchmarks/git/leak_3/git_leak_3.c:55:9: warning: use location
  return new_list;
         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_13>
new_list_21 = malloc (16);
bb index := 3
# VUSE <.MEM_55>
return 0;
lto1: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_13>
new_list_21 = malloc (16);
bb index := 3
# VUSE <.MEM_55>
return 0;
lto1: warning: use location
beacuse in succ := 20 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 20

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
new_list_21 = malloc (16);
./benchmarks/git/leak_3/git_leak_3.c:51:22: warning: use location
  struct commit_list *new_list = xmalloc(sizeof(struct commit_list));
                      ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7f3a9b0c5ee8
    type <pointer_type 0x7f3a9abe70a8
        type <record_type 0x7f3a9abe71f8 commit_list TI
            size <integer_cst 0x7f3a9b0bdc30 constant 128>
            unit size <integer_cst 0x7f3a9b0bdc48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f3a9abe71f8 fields <field_decl 0x7f3a9abe9a18 item> context <translation_unit_decl 0x7f3a9b0c8168 ./benchmarks/git/leak_3/git_leak_3.c>
            pointer_to_this <pointer_type 0x7f3a9abe70a8> chain <type_decl 0x7f3a9abe9ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f3a9b0bdbe8 constant 64>
        unit size <integer_cst 0x7f3a9b0bdc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f3a9abe7498>>
    var <var_decl 0x7f3a9abff240 new_list>
    def_stmt new_list_21 = malloc (16);
    version 21
    ptr-info 0x7f3a9abeae10>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f3a9b0c5ee8
    type <pointer_type 0x7f3a9abe70a8
        type <record_type 0x7f3a9abe71f8 commit_list TI
            size <integer_cst 0x7f3a9b0bdc30 constant 128>
            unit size <integer_cst 0x7f3a9b0bdc48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f3a9abe71f8 fields <field_decl 0x7f3a9abe9a18 item> context <translation_unit_decl 0x7f3a9b0c8168 ./benchmarks/git/leak_3/git_leak_3.c>
            pointer_to_this <pointer_type 0x7f3a9abe70a8> chain <type_decl 0x7f3a9abe9ed8 D.4009>>
        public unsigned DI
        size <integer_cst 0x7f3a9b0bdbe8 constant 64>
        unit size <integer_cst 0x7f3a9b0bdc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f3a9abe7498>>
    var <var_decl 0x7f3a9abff240 new_list>
    def_stmt new_list_21 = malloc (16);
    version 21
    ptr-info 0x7f3a9abeae10>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_55>
free (top_48);
./benchmarks/git/leak_3/git_leak_3.c:65:3: warning: use location
   free(top);
   ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_62 = VDEF <.MEM_55>
free (top_48);
./benchmarks/git/leak_3/git_leak_3.c:65:3: warning: Use after free error!: free location 
list_70 = PHI <list_73(D)(2), list_80(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_55>
free (top_48);
./benchmarks/git/leak_3/git_leak_3.c:65:3: warning: Use after free error!: free location 
list_70 = PHI <list_73(D)(2), list_80(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_62 = VDEF <.MEM_55>
free (top_48);
./benchmarks/git/leak_3/git_leak_3.c:65:3: warning: Use after free error!: free location 
p_27 = PHI <p_26(5), p_46(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_55>
free (top_48);
./benchmarks/git/leak_3/git_leak_3.c:65:3: warning: Use after free error!: free location 
p_27 = PHI <p_26(5), p_46(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_62 = VDEF <.MEM_55>
free (top_48);
./benchmarks/git/leak_3/git_leak_3.c:65:3: warning: Use after free error!: free location 
list_72 = PHI <list_76(13), list_71(18)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_55>
free (top_48);
./benchmarks/git/leak_3/git_leak_3.c:65:3: warning: Use after free error!: free location 
list_72 = PHI <list_76(13), list_71(18)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_62 = VDEF <.MEM_55>
free (top_48);
./benchmarks/git/leak_3/git_leak_3.c:65:3: warning: Use after free error!: free location 
list_71 = PHI <list_72(16), list_79(17)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_55>
free (top_48);
./benchmarks/git/leak_3/git_leak_3.c:65:3: warning: Use after free error!: free location 
list_71 = PHI <list_72(16), list_79(17)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_62 = VDEF <.MEM_55>
free (top_48);
./benchmarks/git/leak_3/git_leak_3.c:65:3: warning: Use after free error!: free location 
_51 = PHI <0B(14), _49(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_55>
free (top_48);
./benchmarks/git/leak_3/git_leak_3.c:65:3: warning: Use after free error!: free location 
_51 = PHI <0B(14), _49(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_62 = VDEF <.MEM_55>
free (top_48);
./benchmarks/git/leak_3/git_leak_3.c:65:3: warning: Use after free error!: free location 
_24 = list_72;
./benchmarks/git/leak_3/git_leak_3.c:73:9: warning: use location
  while (list)
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_55>
free (top_48);
./benchmarks/git/leak_3/git_leak_3.c:65:3: warning: Use after free error!: free location 
   free(top);
   ^
_24 = list_72;
./benchmarks/git/leak_3/git_leak_3.c:73:9: warning: use location
  while (list)
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_62 = VDEF <.MEM_55>
free (top_48);
./benchmarks/git/leak_3/git_leak_3.c:65:3: warning: Use after free error!: free location 
   free(top);
   ^
p_46 = PHI <next_31(7), next_31(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_55>
free (top_48);
./benchmarks/git/leak_3/git_leak_3.c:65:3: warning: Use after free error!: free location 
p_46 = PHI <next_31(7), next_31(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_62 = VDEF <.MEM_55>
free (top_48);
./benchmarks/git/leak_3/git_leak_3.c:65:3: warning: Use after free error!: free location 
last_47 = PHI <last_34(7), p_27(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_55>
free (top_48);
./benchmarks/git/leak_3/git_leak_3.c:65:3: warning: Use after free error!: free location 
last_47 = PHI <last_34(7), p_27(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f3a9abead50 type <integer_type 0x7f3a9b0d17e0 long unsigned int> constant 16>

dot graph START

======================================================================
 <addr_expr 0x7f3a9abdbe60
    type <pointer_type 0x7f3a9abef7e0
        type <array_type 0x7f3a9abef738 type <integer_type 0x7f3a9abef690 char>
            BLK
            size <integer_cst 0x7f3a9abea330 constant 144>
            unit size <integer_cst 0x7f3a9abea318 constant 18>
            align 8 symtab 0 alias set -1 structural equality domain <integer_type 0x7f3a9abef5e8>
            pointer_to_this <pointer_type 0x7f3a9abef7e0>>
        unsigned DI
        size <integer_cst 0x7f3a9b0bdbe8 constant 64>
        unit size <integer_cst 0x7f3a9b0bdc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    readonly constant
    arg 0 <string_cst 0x7f3a9ac052f8 type <array_type 0x7f3a9abef738>
        readonly constant static "bisection 2 entry\000">
    ./benchmarks/git/leak_3/git_leak_3.c:19:12 start: ./benchmarks/git/leak_3/git_leak_3.c:19:12 finish: ./benchmarks/git/leak_3/git_leak_3.c:19:12>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f3a9abdbf00
    type <pointer_type 0x7f3a9abef9d8
        type <array_type 0x7f3a9abef930 type <integer_type 0x7f3a9abef690 char>
            BLK
            size <integer_cst 0x7f3a9abea378 constant 152>
            unit size <integer_cst 0x7f3a9abea1c8 constant 19>
            align 8 symtab 0 alias set -1 structural equality domain <integer_type 0x7f3a9abef888>
            pointer_to_this <pointer_type 0x7f3a9abef9d8>>
        unsigned DI
        size <integer_cst 0x7f3a9b0bdbe8 constant 64>
        unit size <integer_cst 0x7f3a9b0bdc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    readonly constant
    arg 0 <string_cst 0x7f3a9ac05410 type <array_type 0x7f3a9abef930>
        readonly constant static "bisection 2 sorted\000">
    ./benchmarks/git/leak_3/git_leak_3.c:42:12 start: ./benchmarks/git/leak_3/git_leak_3.c:42:12 finish: ./benchmarks/git/leak_3/git_leak_3.c:42:12>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:main========= [0m
fucntion collect path finsh

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [9.09%]:
goto <bb 4>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [90.91%]:
new_list_21 = malloc (16);
new_list_21->item = 0B;
_22 = list_70;
new_list_21->next = _22;
list_80 = new_list_21;
_23 = new_list_21;
_69 = new_list_21;
i_12 = i_2 + 1;

=======is loop:1=========

 bb index 4 
<bb 4> [100.00%]:
# i_2 = PHI <0(2), i_12(3)>
# list_70 = PHI <list_73(D)(2), list_80(3)>
if (i_2 <= 9)
  goto <bb 3>; [90.91%]
else
  goto <bb 5>; [9.09%]

=======is loop:0=========

 bb index 5 
<bb 5> [9.09%]:
_25 = list_70;
show_list ("bisection 2 entry", 0, 0, _25);
p_26 = list_70;
goto <bb 12>; [100.00%]

=======is loop:1=========

 bb index 6 
<bb 6> [51.51%]:
_28 = p_27->item;
_29 = _28->object.flags;
flags_30 = (unsigned int) _29;
next_31 = p_27->next;
_32 = _29 & 2;
_33 = (unsigned int) _32;
if (_32 != 0)
  goto <bb 7>; [33.00%]
else
  goto <bb 8>; [67.00%]

=======is loop:1=========

 bb index 7 
<bb 7> [17.00%]:
// predicted unlikely by continue predictor.
goto <bb 11>; [100.00%]

=======is loop:1=========

 bb index 8 
<bb 8> [34.51%]:
p_27->next = last_34;
last_35 = p_27;
_36 = _29 & 4;
_37 = (unsigned int) _36;
if (_36 == 0)
  goto <bb 9>; [50.00%]
else
  goto <bb 10>; [50.00%]

=======is loop:1=========

 bb index 9 
<bb 9> [17.26%]:
nr_39 = nr_38 + 1;

=======is loop:1=========

 bb index 10 
<bb 10> [34.51%]:
# nr_43 = PHI <nr_38(8), nr_39(9)>
on_list_41 = on_list_40 + 1;

=======is loop:1=========

 bb index 11 
<bb 11> [51.51%]:
# nr_44 = PHI <nr_38(7), nr_43(10)>
# on_list_45 = PHI <on_list_40(7), on_list_41(10)>
# p_46 = PHI <next_31(7), next_31(10)>
# last_47 = PHI <last_34(7), p_27(10)>

=======is loop:1=========

 bb index 12 
<bb 12> [60.60%]:
# nr_38 = PHI <0(5), nr_44(11)>
# on_list_40 = PHI <0(5), on_list_45(11)>
# p_27 = PHI <p_26(5), p_46(11)>
# last_34 = PHI <0B(5), last_47(11)>
if (p_27 != 0B)
  goto <bb 6>; [85.00%]
else
  goto <bb 13>; [15.00%]

=======is loop:0=========

 bb index 13 
<bb 13> [9.09%]:
list_42 = last_34;
show_list ("bisection 2 sorted", 0, nr_38, list_42);
all_74 = nr_38;
list_75 = last_34;
_1 = list_75;
list_76 = _1;
goto <bb 19>; [100.00%]

=======is loop:1=========

 bb index 14 
<bb 14> [51.51%]:
top_48 = list_72;
if (top_48 != 0B)
  goto <bb 15>; [95.93%]
else
  goto <bb 16>; [4.07%]

=======is loop:1=========

 bb index 15 
<bb 15> [49.41%]:
_49 = top_48->item;

=======is loop:1=========

 bb index 16 
<bb 16> [51.51%]:
# _51 = PHI <0B(14), _49(15)>
if (top_48 != 0B)
  goto <bb 17>; [57.44%]
else
  goto <bb 18>; [42.56%]

=======is loop:1=========

 bb index 17 
<bb 17> [29.59%]:
_50 = top_48->next;
list_79 = _50;
free (top_48);

=======is loop:1=========

 bb index 18 
<bb 18> [51.51%]:
# list_71 = PHI <list_72(16), list_79(17)>
_63 = _51;

=======is loop:1=========

 bb index 19 
<bb 19> [60.60%]:
# list_72 = PHI <list_76(13), list_71(18)>
_24 = list_72;
if (_24 != 0B)
  goto <bb 14>; [85.00%]
else
  goto <bb 20>; [15.00%]

=======is loop:0=========

 bb index 20 
<bb 20> [9.09%]:
return 0;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    find Entry point : 1 [0m
[40;34m    used_stmt array stack totalsize of : 1112 [0m
[40;34m    collect time: : 0.000101 s [0m
[40;34m    algorithm time: 0.004744 s [0m
[40;34m    gimple stmt count : : 45 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
/usr/bin/ld: /tmp/ccawmKSZ.ltrans0.ltrans.o: in function `main':
<artificial>:(.text+0x43): undefined reference to `show_list'
/usr/bin/ld: <artificial>:(.text+0xa4): undefined reference to `show_list'
collect2: error: ld returned 1 exit status
