In file included from ./benchmarks/git/use_after_free_5/git_uaf_5.c:11:0:
./benchmarks/git/use_after_free_5/../git.h: In function ‘copy_array’:
./benchmarks/git/use_after_free_5/../git.h:161:3: warning: implicit declaration of function ‘memcpy’ [-Wimplicit-function-declaration]
   memcpy(dst, src, st_mult(size, n));
   ^~~~~~
./benchmarks/git/use_after_free_5/../git.h:161:3: warning: incompatible implicit declaration of built-in function ‘memcpy’
./benchmarks/git/use_after_free_5/../git.h:161:3: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
./benchmarks/git/use_after_free_5/../git.h:161:20: warning: implicit declaration of function ‘st_mult’; did you mean ‘stdout’? [-Wimplicit-function-declaration]
   memcpy(dst, src, st_mult(size, n));
                    ^~~~~~~
                    stdout
./benchmarks/git/use_after_free_5/../git.h: In function ‘move_array’:
./benchmarks/git/use_after_free_5/../git.h:169:3: warning: implicit declaration of function ‘memmove’ [-Wimplicit-function-declaration]
   memmove(dst, src, st_mult(size, n));
   ^~~~~~~
./benchmarks/git/use_after_free_5/../git.h:169:3: warning: incompatible implicit declaration of built-in function ‘memmove’
./benchmarks/git/use_after_free_5/../git.h:169:3: note: include ‘<string.h>’ or provide a declaration of ‘memmove’
In file included from ./benchmarks/git/use_after_free_5/git_uaf_5.c:10:0:
./benchmarks/git/use_after_free_5/../git.h: In function ‘xstrdup_or_null’:
./benchmarks/git/use_after_free_5/../stdio.h:138:20: warning: implicit declaration of function ‘strdup’ [-Wimplicit-function-declaration]
 #define xstrdup(a) strdup(a)
                    ^
./benchmarks/git/use_after_free_5/../git.h:174:15: note: in expansion of macro ‘xstrdup’
  return str ? xstrdup(str) : NULL;
               ^~~~~~~
./benchmarks/git/use_after_free_5/../stdio.h:138:20: warning: incompatible implicit declaration of built-in function ‘strdup’
 #define xstrdup(a) strdup(a)
                    ^
./benchmarks/git/use_after_free_5/../git.h:174:15: note: in expansion of macro ‘xstrdup’
  return str ? xstrdup(str) : NULL;
               ^~~~~~~
In file included from ./benchmarks/git/use_after_free_5/git_uaf_5.c:11:0:
./benchmarks/git/use_after_free_5/../git.h: At top level:
./benchmarks/git/use_after_free_5/../git.h:236:55: warning: ‘struct archiver_args’ declared inside parameter list will not be visible outside of this definition or declaration
  int (*write_archive)(const struct archiver *, struct archiver_args *);
                                                       ^~~~~~~~~~~~~
./benchmarks/git/use_after_free_5/../git.h: In function ‘strbuf_swap’:
./benchmarks/git/use_after_free_5/../git.h:126:2: warning: incompatible implicit declaration of built-in function ‘memcpy’
  memcpy(_swap_buffer, _swap_a_ptr, sizeof(a));  \
  ^
./benchmarks/git/use_after_free_5/../git.h:407:2: note: in expansion of macro ‘SWAP’
  SWAP(*a, *b);
  ^~~~
./benchmarks/git/use_after_free_5/../git.h:126:2: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
  memcpy(_swap_buffer, _swap_a_ptr, sizeof(a));  \
  ^
./benchmarks/git/use_after_free_5/../git.h:407:2: note: in expansion of macro ‘SWAP’
  SWAP(*a, *b);
  ^~~~
./benchmarks/git/use_after_free_5/git_uaf_5.c: At top level:
./benchmarks/git/use_after_free_5/git_uaf_5.c:13:6: error: nested redefinition of ‘enum object_type’
 enum object_type {
      ^~~~~~~~~~~
./benchmarks/git/use_after_free_5/git_uaf_5.c:13:6: error: redeclaration of ‘enum object_type’
In file included from ./benchmarks/git/use_after_free_5/git_uaf_5.c:11:0:
./benchmarks/git/use_after_free_5/../git.h:135:6: note: originally defined here
 enum object_type {
      ^~~~~~~~~~~
./benchmarks/git/use_after_free_5/git_uaf_5.c:14:2: error: redeclaration of enumerator ‘OBJ_BAD’
  OBJ_BAD = -1,
  ^~~~~~~
In file included from ./benchmarks/git/use_after_free_5/git_uaf_5.c:11:0:
./benchmarks/git/use_after_free_5/../git.h:136:2: note: previous definition of ‘OBJ_BAD’ was here
  OBJ_BAD = -1,
  ^~~~~~~
./benchmarks/git/use_after_free_5/git_uaf_5.c:15:2: error: redeclaration of enumerator ‘OBJ_NONE’
  OBJ_NONE = 0,
  ^~~~~~~~
In file included from ./benchmarks/git/use_after_free_5/git_uaf_5.c:11:0:
./benchmarks/git/use_after_free_5/../git.h:137:2: note: previous definition of ‘OBJ_NONE’ was here
  OBJ_NONE = 0,
  ^~~~~~~~
./benchmarks/git/use_after_free_5/git_uaf_5.c:16:2: error: redeclaration of enumerator ‘OBJ_COMMIT’
  OBJ_COMMIT = 1,
  ^~~~~~~~~~
In file included from ./benchmarks/git/use_after_free_5/git_uaf_5.c:11:0:
./benchmarks/git/use_after_free_5/../git.h:138:2: note: previous definition of ‘OBJ_COMMIT’ was here
  OBJ_COMMIT = 1,
  ^~~~~~~~~~
./benchmarks/git/use_after_free_5/git_uaf_5.c:17:2: error: redeclaration of enumerator ‘OBJ_TREE’
  OBJ_TREE = 2,
  ^~~~~~~~
In file included from ./benchmarks/git/use_after_free_5/git_uaf_5.c:11:0:
./benchmarks/git/use_after_free_5/../git.h:139:2: note: previous definition of ‘OBJ_TREE’ was here
  OBJ_TREE = 2,
  ^~~~~~~~
./benchmarks/git/use_after_free_5/git_uaf_5.c:18:2: error: redeclaration of enumerator ‘OBJ_BLOB’
  OBJ_BLOB = 3,
  ^~~~~~~~
In file included from ./benchmarks/git/use_after_free_5/git_uaf_5.c:11:0:
./benchmarks/git/use_after_free_5/../git.h:140:2: note: previous definition of ‘OBJ_BLOB’ was here
  OBJ_BLOB = 3,
  ^~~~~~~~
./benchmarks/git/use_after_free_5/git_uaf_5.c:19:2: error: redeclaration of enumerator ‘OBJ_TAG’
  OBJ_TAG = 4,
  ^~~~~~~
In file included from ./benchmarks/git/use_after_free_5/git_uaf_5.c:11:0:
./benchmarks/git/use_after_free_5/../git.h:141:2: note: previous definition of ‘OBJ_TAG’ was here
  OBJ_TAG = 4,
  ^~~~~~~
./benchmarks/git/use_after_free_5/git_uaf_5.c:21:2: error: redeclaration of enumerator ‘OBJ_OFS_DELTA’
  OBJ_OFS_DELTA = 6,
  ^~~~~~~~~~~~~
In file included from ./benchmarks/git/use_after_free_5/git_uaf_5.c:11:0:
./benchmarks/git/use_after_free_5/../git.h:143:2: note: previous definition of ‘OBJ_OFS_DELTA’ was here
  OBJ_OFS_DELTA = 6,
  ^~~~~~~~~~~~~
./benchmarks/git/use_after_free_5/git_uaf_5.c:22:2: error: redeclaration of enumerator ‘OBJ_REF_DELTA’
  OBJ_REF_DELTA = 7,
  ^~~~~~~~~~~~~
In file included from ./benchmarks/git/use_after_free_5/git_uaf_5.c:11:0:
./benchmarks/git/use_after_free_5/../git.h:144:2: note: previous definition of ‘OBJ_REF_DELTA’ was here
  OBJ_REF_DELTA = 7,
  ^~~~~~~~~~~~~
./benchmarks/git/use_after_free_5/git_uaf_5.c:23:2: error: redeclaration of enumerator ‘OBJ_ANY’
  OBJ_ANY,
  ^~~~~~~
In file included from ./benchmarks/git/use_after_free_5/git_uaf_5.c:11:0:
./benchmarks/git/use_after_free_5/../git.h:145:2: note: previous definition of ‘OBJ_ANY’ was here
  OBJ_ANY,
  ^~~~~~~
./benchmarks/git/use_after_free_5/git_uaf_5.c:24:2: error: redeclaration of enumerator ‘OBJ_MAX’
  OBJ_MAX
  ^~~~~~~
In file included from ./benchmarks/git/use_after_free_5/git_uaf_5.c:11:0:
./benchmarks/git/use_after_free_5/../git.h:146:2: note: previous definition of ‘OBJ_MAX’ was here
  OBJ_MAX
  ^~~~~~~
./benchmarks/git/use_after_free_5/git_uaf_5.c: In function ‘object_type’:
./benchmarks/git/use_after_free_5/git_uaf_5.c:30:3: warning: implicit declaration of function ‘S_ISGITLINK’; did you mean ‘S_ISLNK’? [-Wimplicit-function-declaration]
   S_ISGITLINK(mode) ? OBJ_COMMIT :
   ^~~~~~~~~~~
   S_ISLNK
./benchmarks/git/use_after_free_5/git_uaf_5.c: In function ‘real_path’:
./benchmarks/git/use_after_free_5/git_uaf_5.c:151:9: warning: implicit declaration of function ‘real_path_internal’; did you mean ‘real_path’? [-Wimplicit-function-declaration]
  return real_path_internal(path, 1);
         ^~~~~~~~~~~~~~~~~~
         real_path
./benchmarks/git/use_after_free_5/git_uaf_5.c:151:9: warning: return makes pointer from integer without a cast [-Wint-conversion]
  return real_path_internal(path, 1);
         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./benchmarks/git/use_after_free_5/git_uaf_5.c: In function ‘read_gitfile_gently’:
./benchmarks/git/use_after_free_5/git_uaf_5.c:187:7: warning: implicit declaration of function ‘open’; did you mean ‘popen’? [-Wimplicit-function-declaration]
  fd = open(path, O_RDONLY);
       ^~~~
       popen
./benchmarks/git/use_after_free_5/git_uaf_5.c:193:8: warning: implicit declaration of function ‘read_in_full’; did you mean ‘read_gitfile’? [-Wimplicit-function-declaration]
  len = read_in_full(fd, buf, st.st_size);
        ^~~~~~~~~~~~
        read_gitfile
./benchmarks/git/use_after_free_5/git_uaf_5.c:194:2: warning: implicit declaration of function ‘close’; did you mean ‘pclose’? [-Wimplicit-function-declaration]
  close(fd);
  ^~~~~
  pclose
./benchmarks/git/use_after_free_5/git_uaf_5.c:200:7: warning: implicit declaration of function ‘starts_with’ [-Wimplicit-function-declaration]
  if (!starts_with(buf, "gitdir: ")) {
       ^~~~~~~~~~~
./benchmarks/git/use_after_free_5/git_uaf_5.c:213:7: warning: implicit declaration of function ‘is_absolute_path’ [-Wimplicit-function-declaration]
  if (!is_absolute_path(dir) && (slash = strrchr(path, '/'))) {
       ^~~~~~~~~~~~~~~~
./benchmarks/git/use_after_free_5/git_uaf_5.c:213:41: warning: implicit declaration of function ‘strrchr’ [-Wimplicit-function-declaration]
  if (!is_absolute_path(dir) && (slash = strrchr(path, '/'))) {
                                         ^~~~~~~
./benchmarks/git/use_after_free_5/git_uaf_5.c:213:41: warning: incompatible implicit declaration of built-in function ‘strrchr’
./benchmarks/git/use_after_free_5/git_uaf_5.c:213:41: note: include ‘<string.h>’ or provide a declaration of ‘strrchr’
./benchmarks/git/use_after_free_5/git_uaf_5.c:217:3: warning: implicit declaration of function ‘strncpy’ [-Wimplicit-function-declaration]
   strncpy(dir, path, pathlen);
   ^~~~~~~
./benchmarks/git/use_after_free_5/git_uaf_5.c:217:3: warning: incompatible implicit declaration of built-in function ‘strncpy’
./benchmarks/git/use_after_free_5/git_uaf_5.c:217:3: note: include ‘<string.h>’ or provide a declaration of ‘strncpy’
./benchmarks/git/use_after_free_5/git_uaf_5.c:227:2: warning: implicit declaration of function ‘update_linked_gitdir’ [-Wimplicit-function-declaration]
  update_linked_gitdir(path, dir);
  ^~~~~~~~~~~~~~~~~~~~
./benchmarks/git/use_after_free_5/git_uaf_5.c:257:4: warning: implicit declaration of function ‘assert’; did you mean ‘qsort’? [-Wimplicit-function-declaration]
    assert(0);
    ^~~~~~
    qsort
