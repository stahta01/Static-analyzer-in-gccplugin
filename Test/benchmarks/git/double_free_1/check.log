../Compiler/newplugin.so 11.2.0 
In file included from ./benchmarks/git/double_free_1/git_df_1.c:10:
./benchmarks/git/double_free_1/../git.h: In function ‘copy_array’:
./benchmarks/git/double_free_1/../git.h:161:17: warning: implicit declaration of function ‘memcpy’ [-Wimplicit-function-declaration]
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                 ^~~~~~
./benchmarks/git/double_free_1/../git.h:1:1: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
  +++ |+#include <string.h>
    1 | #define STRING_LIST_INIT_NODUP { NULL, 0, 0, 0, NULL }
./benchmarks/git/double_free_1/../git.h:161:17: warning: incompatible implicit declaration of built-in function ‘memcpy’ [-Wbuiltin-declaration-mismatch]
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                 ^~~~~~
./benchmarks/git/double_free_1/../git.h:161:17: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
./benchmarks/git/double_free_1/../git.h:161:34: warning: implicit declaration of function ‘st_mult’ [-Wimplicit-function-declaration]
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                                  ^~~~~~~
./benchmarks/git/double_free_1/../git.h: In function ‘move_array’:
./benchmarks/git/double_free_1/../git.h:169:17: warning: implicit declaration of function ‘memmove’ [-Wimplicit-function-declaration]
  169 |                 memmove(dst, src, st_mult(size, n));
      |                 ^~~~~~~
./benchmarks/git/double_free_1/../git.h:169:17: note: include ‘<string.h>’ or provide a declaration of ‘memmove’
./benchmarks/git/double_free_1/../git.h:169:17: warning: incompatible implicit declaration of built-in function ‘memmove’ [-Wbuiltin-declaration-mismatch]
./benchmarks/git/double_free_1/../git.h:169:17: note: include ‘<string.h>’ or provide a declaration of ‘memmove’
In file included from ./benchmarks/git/double_free_1/git_df_1.c:9:
./benchmarks/git/double_free_1/../git.h: In function ‘xstrdup_or_null’:
./benchmarks/git/double_free_1/../stdio.h:138:20: warning: implicit declaration of function ‘strdup’ [-Wimplicit-function-declaration]
  138 | #define xstrdup(a) strdup(a)
      |                    ^~~~~~
./benchmarks/git/double_free_1/../git.h:174:22: note: in expansion of macro ‘xstrdup’
  174 |         return str ? xstrdup(str) : NULL;
      |                      ^~~~~~~
./benchmarks/git/double_free_1/../stdio.h:138:20: warning: incompatible implicit declaration of built-in function ‘strdup’ [-Wbuiltin-declaration-mismatch]
  138 | #define xstrdup(a) strdup(a)
      |                    ^~~~~~
./benchmarks/git/double_free_1/../git.h:174:22: note: in expansion of macro ‘xstrdup’
  174 |         return str ? xstrdup(str) : NULL;
      |                      ^~~~~~~
In file included from ./benchmarks/git/double_free_1/git_df_1.c:10:
./benchmarks/git/double_free_1/../git.h: At top level:
./benchmarks/git/double_free_1/../git.h:236:62: warning: ‘struct archiver_args’ declared inside parameter list will not be visible outside of this definition or declaration
  236 |         int (*write_archive)(const struct archiver *, struct archiver_args *);
      |                                                              ^~~~~~~~~~~~~
./benchmarks/git/double_free_1/../git.h: In function ‘strbuf_swap’:
./benchmarks/git/double_free_1/../git.h:126:9: warning: incompatible implicit declaration of built-in function ‘memcpy’ [-Wbuiltin-declaration-mismatch]
  126 |         memcpy(_swap_buffer, _swap_a_ptr, sizeof(a));           \
      |         ^~~~~~
./benchmarks/git/double_free_1/../git.h:407:9: note: in expansion of macro ‘SWAP’
  407 |         SWAP(*a, *b);
      |         ^~~~
./benchmarks/git/double_free_1/../git.h:126:9: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
  126 |         memcpy(_swap_buffer, _swap_a_ptr, sizeof(a));           \
      |         ^~~~~~
./benchmarks/git/double_free_1/../git.h:407:9: note: in expansion of macro ‘SWAP’
  407 |         SWAP(*a, *b);
      |         ^~~~
In file included from ./benchmarks/git/double_free_1/git_df_1.c:9:
./benchmarks/git/double_free_1/git_df_1.c: In function ‘remote_exists’:
./benchmarks/git/double_free_1/git_df_1.c:185:29: warning: implicit declaration of function ‘strlen’ [-Wimplicit-function-declaration]
  185 |         char *url = xmalloc(strlen(remote->url) + strlen(path) + 1);    /* allocation site */
      |                             ^~~~~~
./benchmarks/git/double_free_1/../stdio.h:137:27: note: in definition of macro ‘xmalloc’
  137 | #define xmalloc(a) malloc(a)
      |                           ^
./benchmarks/git/double_free_1/git_df_1.c:11:1: note: include ‘<string.h>’ or provide a declaration of ‘strlen’
   10 | #include "../git.h"
  +++ |+#include <string.h>
   11 | 
In file included from ./benchmarks/git/double_free_1/git_df_1.c:9:
./benchmarks/git/double_free_1/git_df_1.c:185:29: warning: incompatible implicit declaration of built-in function ‘strlen’ [-Wbuiltin-declaration-mismatch]
  185 |         char *url = xmalloc(strlen(remote->url) + strlen(path) + 1);    /* allocation site */
      |                             ^~~~~~
./benchmarks/git/double_free_1/../stdio.h:137:27: note: in definition of macro ‘xmalloc’
  137 | #define xmalloc(a) malloc(a)
      |                           ^
./benchmarks/git/double_free_1/git_df_1.c:185:29: note: include ‘<string.h>’ or provide a declaration of ‘strlen’
  185 |         char *url = xmalloc(strlen(remote->url) + strlen(path) + 1);    /* allocation site */
      |                             ^~~~~~
./benchmarks/git/double_free_1/../stdio.h:137:27: note: in definition of macro ‘xmalloc’
  137 | #define xmalloc(a) malloc(a)
      |                           ^
./benchmarks/git/double_free_1/git_df_1.c:192:16: warning: implicit declaration of function ‘get_active_slot’ [-Wimplicit-function-declaration]
  192 |         slot = get_active_slot();
      |                ^~~~~~~~~~~~~~~
./benchmarks/git/double_free_1/git_df_1.c:192:14: warning: assignment to ‘struct active_request_slot *’ from ‘int’ makes pointer from integer without a cast [-Wint-conversion]
  192 |         slot = get_active_slot();
      |              ^
./benchmarks/git/double_free_1/git_df_1.c:194:9: warning: implicit declaration of function ‘curl_easy_setopt’ [-Wimplicit-function-declaration]
  194 |         curl_easy_setopt(slot->curl, CURLOPT_URL, url);
      |         ^~~~~~~~~~~~~~~~
./benchmarks/git/double_free_1/git_df_1.c:197:13: warning: implicit declaration of function ‘start_active_slot’ [-Wimplicit-function-declaration]
  197 |         if (start_active_slot(slot)) {
      |             ^~~~~~~~~~~~~~~~~
./benchmarks/git/double_free_1/git_df_1.c:198:17: warning: implicit declaration of function ‘run_active_slot’ [-Wimplicit-function-declaration]
  198 |                 run_active_slot(slot);
      |                 ^~~~~~~~~~~~~~~

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.01 ( 11%)   0.00 (  0%)   0.01 ( 10%)  1298k ( 52%)
 phase parsing                      :   0.08 ( 89%)   0.00 (  0%)   0.08 ( 80%)  1076k ( 43%)
 phase opt and generate             :   0.00 (  0%)   0.01 (100%)   0.01 ( 10%)    91k (  4%)
 callgraph ipa passes               :   0.00 (  0%)   0.01 (100%)   0.01 ( 10%)    52k (  2%)
 lto stream compression             :   0.00 (  0%)   0.00 (  0%)   0.01 ( 10%)     0  (  0%)
 ipa free lang data                 :   0.00 (  0%)   0.01 (100%)   0.00 (  0%)    11k (  0%)
 preprocessing                      :   0.04 ( 44%)   0.00 (  0%)   0.03 ( 30%)   330k ( 13%)
 lexical analysis                   :   0.01 ( 11%)   0.00 (  0%)   0.02 ( 20%)     0  (  0%)
 parser (global)                    :   0.02 ( 22%)   0.00 (  0%)   0.02 ( 20%)   573k ( 23%)
 parser struct body                 :   0.01 ( 11%)   0.00 (  0%)   0.00 (  0%)    83k (  3%)
 parser function body               :   0.00 (  0%)   0.00 (  0%)   0.01 ( 10%)    54k (  2%)
 TOTAL                              :   0.09          0.01          0.10         2477k
../Compiler/newplugin.so 11.2.0 

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.01 (100%)  2157k ( 97%)
 TOTAL                              :   0.00          0.00          0.01         2218k
../Compiler/newplugin.so 11.2.0 
=======ipa_pta=========
=============== The first stage : Point of interest stmt collect =================
=======node_fun:main=========
addr_expraddr_expraddr_expraddr_expraddr_expr------remote_exists--
=======node_fun:remote_exists=========
node:= 2 
 	next_branch :=3
	next_branch :=6
addr_expraddr_expraddr_expraddr_expraddr_expr------strlen--
addr_expraddr_expraddr_expraddr_expraddr_expr------strlen--
addr_expraddr_expraddr_expraddr_expraddr_expr------sprintf--
addr_expraddr_expraddr_expraddr_expraddr_expr------get_active_slot--
addr_expraddr_expraddr_expraddr_expraddr_expr------curl_easy_setopt--
addr_expraddr_expraddr_expraddr_expraddr_expr------curl_easy_setopt--
addr_expraddr_expraddr_expraddr_expraddr_expr------start_active_slot--
node:= 3 
 	next_branch :=7
	next_branch :=4
addr_expraddr_expraddr_expraddr_expraddr_expr------run_active_slot--
node:= 4 
 	next_branch :=7
	next_branch :=5
node:= 5 
 	next_branch :=7
addr_expraddr_expraddr_expraddr_expraddr_expr------fprintf--
node:= 6 
 	next_branch :=7
addr_expraddr_expraddr_expraddr_expraddr_expr------__builtin_fwrite--
=============== The first stage :  record fucntion =================
start PointerConstraint
ptable point 21 
===============The second stage : Mapping stmt=================
# .MEM_2 = VDEF <.MEM_1(D)>
remote_exists ("path");
# VUSE <.MEM_29(D)>
_3 = strlen (_2);
# VUSE <.MEM_29(D)>
_4 = strlen (path_22(D));
# .MEM_30 = VDEF <.MEM_29(D)>
url_24 = malloc (_6);
# .MEM_31 = VDEF <.MEM_30>
sprintf (url_24, "%s%s", _8, path_22(D));
# .MEM_32 = VDEF <.MEM_31>
_9 = get_active_slot ();
# .MEM_34 = VDEF <.MEM_33>
curl_easy_setopt (_11, 0, url_24);
# .MEM_35 = VDEF <.MEM_34>
curl_easy_setopt (_12, 0, 1);
# .MEM_36 = VDEF <.MEM_35>
_13 = start_active_slot (slot_27);
# .MEM_39 = VDEF <.MEM_36>
run_active_slot (slot_27);
# .MEM_41 = VDEF <.MEM_40>
fprintf (_17, "HEAD HTTP error %ld\n", _16);
# .MEM_38 = VDEF <.MEM_37>
__builtin_fwrite ("Unable to start HEAD request\n", 1, 29, _18);
===============The second stage : Program slicing=================
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
remote_exists ("path");
========================================================
 <ssa_name 0x7fa4ad584948
    type <pointer_type 0x7fa4ad09fa80
        type <record_type 0x7fa4ad09f9d8 CURL BLK
            size <integer_cst 0x7fa4ad57cc30 constant 0>
            unit-size <integer_cst 0x7fa4ad57cbe8 constant 0>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad09f930 context <translation_unit_decl 0x7fa4ad587168 ./benchmarks/git/double_free_1/git_df_1.c>
            pointer_to_this <pointer_type 0x7fa4ad09fa80>>
        unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _11 = slot_27->curl;
    version:11
    ptr-info 0x7fa4ad0a6480>
=============== *this point analyzable =================
_3 = strlen (_2);
========================================================
 <ssa_name 0x7fa4ad584948
    type <pointer_type 0x7fa4ad09fa80
        type <record_type 0x7fa4ad09f9d8 CURL BLK
            size <integer_cst 0x7fa4ad57cc30 constant 0>
            unit-size <integer_cst 0x7fa4ad57cbe8 constant 0>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad09f930 context <translation_unit_decl 0x7fa4ad587168 ./benchmarks/git/double_free_1/git_df_1.c>
            pointer_to_this <pointer_type 0x7fa4ad09fa80>>
        unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _11 = slot_27->curl;
    version:11
    ptr-info 0x7fa4ad0a6480>
=============== *this point analyzable =================
_3 = strlen (_2);
========================================================
 <ssa_name 0x7fa4ad584948
    type <pointer_type 0x7fa4ad09fa80
        type <record_type 0x7fa4ad09f9d8 CURL BLK
            size <integer_cst 0x7fa4ad57cc30 constant 0>
            unit-size <integer_cst 0x7fa4ad57cbe8 constant 0>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad09f930 context <translation_unit_decl 0x7fa4ad587168 ./benchmarks/git/double_free_1/git_df_1.c>
            pointer_to_this <pointer_type 0x7fa4ad09fa80>>
        unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _11 = slot_27->curl;
    version:11
    ptr-info 0x7fa4ad0a6480>
=============== *this point analyzable =================
_4 = strlen (path_22(D));
========================================================
 <ssa_name 0x7fa4ad584948
    type <pointer_type 0x7fa4ad09fa80
        type <record_type 0x7fa4ad09f9d8 CURL BLK
            size <integer_cst 0x7fa4ad57cc30 constant 0>
            unit-size <integer_cst 0x7fa4ad57cbe8 constant 0>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad09f930 context <translation_unit_decl 0x7fa4ad587168 ./benchmarks/git/double_free_1/git_df_1.c>
            pointer_to_this <pointer_type 0x7fa4ad09fa80>>
        unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _11 = slot_27->curl;
    version:11
    ptr-info 0x7fa4ad0a6480>
=============== *this point analyzable =================
_4 = strlen (path_22(D));
========================================================
 <ssa_name 0x7fa4ad584948
    type <pointer_type 0x7fa4ad09fa80
        type <record_type 0x7fa4ad09f9d8 CURL BLK
            size <integer_cst 0x7fa4ad57cc30 constant 0>
            unit-size <integer_cst 0x7fa4ad57cbe8 constant 0>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad09f930 context <translation_unit_decl 0x7fa4ad587168 ./benchmarks/git/double_free_1/git_df_1.c>
            pointer_to_this <pointer_type 0x7fa4ad09fa80>>
        unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _11 = slot_27->curl;
    version:11
    ptr-info 0x7fa4ad0a6480>
 <ssa_name 0x7fa4ad584c18
    type <pointer_type 0x7fa4ad094f18
        type <integer_type 0x7fa4ad0949d8 char public QI
            size <integer_cst 0x7fa4ad57cca8 constant 8>
            unit-size <integer_cst 0x7fa4ad57ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad5913f0 precision:8 min <integer_cst 0x7fa4ad08b720 -128> max <integer_cst 0x7fa4ad08b708 127>
            pointer_to_this <pointer_type 0x7fa4ad094f18>>
        unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fa4ad587168 ./benchmarks/git/double_free_1/git_df_1.c>>
    var <var_decl 0x7fa4ad0ad000 url>
    def_stmt url_24 = malloc (_6);
    version:24
    ptr-info 0x7fa4ad0a64f8>
=============== *this point analyzable =================
url_24 = malloc (_6);
========================================================
 <ssa_name 0x7fa4ad584948
    type <pointer_type 0x7fa4ad09fa80
        type <record_type 0x7fa4ad09f9d8 CURL BLK
            size <integer_cst 0x7fa4ad57cc30 constant 0>
            unit-size <integer_cst 0x7fa4ad57cbe8 constant 0>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad09f930 context <translation_unit_decl 0x7fa4ad587168 ./benchmarks/git/double_free_1/git_df_1.c>
            pointer_to_this <pointer_type 0x7fa4ad09fa80>>
        unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _11 = slot_27->curl;
    version:11
    ptr-info 0x7fa4ad0a6480>
 <ssa_name 0x7fa4ad584c18
    type <pointer_type 0x7fa4ad094f18
        type <integer_type 0x7fa4ad0949d8 char public QI
            size <integer_cst 0x7fa4ad57cca8 constant 8>
            unit-size <integer_cst 0x7fa4ad57ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad5913f0 precision:8 min <integer_cst 0x7fa4ad08b720 -128> max <integer_cst 0x7fa4ad08b708 127>
            pointer_to_this <pointer_type 0x7fa4ad094f18>>
        unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fa4ad587168 ./benchmarks/git/double_free_1/git_df_1.c>>
    var <var_decl 0x7fa4ad0ad000 url>
    def_stmt url_24 = malloc (_6);
    version:24
    ptr-info 0x7fa4ad0a64f8>
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
sprintf (url_24, "%s%s", _8, path_22(D));
========================================================
 <ssa_name 0x7fa4ad584c18
    type <pointer_type 0x7fa4ad094f18
        type <integer_type 0x7fa4ad0949d8 char public QI
            size <integer_cst 0x7fa4ad57cca8 constant 8>
            unit-size <integer_cst 0x7fa4ad57ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad5913f0 precision:8 min <integer_cst 0x7fa4ad08b720 -128> max <integer_cst 0x7fa4ad08b708 127>
            pointer_to_this <pointer_type 0x7fa4ad094f18>>
        unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fa4ad587168 ./benchmarks/git/double_free_1/git_df_1.c>>
    var <var_decl 0x7fa4ad0ad000 url>
    def_stmt url_24 = malloc (_6);
    version:24
    ptr-info 0x7fa4ad0a64f8>
 <ssa_name 0x7fa4ad584948
    type <pointer_type 0x7fa4ad09fa80
        type <record_type 0x7fa4ad09f9d8 CURL BLK
            size <integer_cst 0x7fa4ad57cc30 constant 0>
            unit-size <integer_cst 0x7fa4ad57cbe8 constant 0>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad09f930 context <translation_unit_decl 0x7fa4ad587168 ./benchmarks/git/double_free_1/git_df_1.c>
            pointer_to_this <pointer_type 0x7fa4ad09fa80>>
        unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _11 = slot_27->curl;
    version:11
    ptr-info 0x7fa4ad0a6480>
=============== *this point analyzable =================
sprintf (url_24, "%s%s", _8, path_22(D));
========================================================
=============== *this point analyzable =================
_9 = get_active_slot ();
========================================================
 <ssa_name 0x7fa4ad584948
    type <pointer_type 0x7fa4ad09fa80
        type <record_type 0x7fa4ad09f9d8 CURL BLK
            size <integer_cst 0x7fa4ad57cc30 constant 0>
            unit-size <integer_cst 0x7fa4ad57cbe8 constant 0>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad09f930 context <translation_unit_decl 0x7fa4ad587168 ./benchmarks/git/double_free_1/git_df_1.c>
            pointer_to_this <pointer_type 0x7fa4ad09fa80>>
        unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _11 = slot_27->curl;
    version:11
    ptr-info 0x7fa4ad0a6480>
=============== *this point analyzable =================
curl_easy_setopt (_11, 0, url_24);
========================================================
 <ssa_name 0x7fa4ad584990
    type <pointer_type 0x7fa4ad09fa80
        type <record_type 0x7fa4ad09f9d8 CURL BLK
            size <integer_cst 0x7fa4ad57cc30 constant 0>
            unit-size <integer_cst 0x7fa4ad57cbe8 constant 0>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad09f930 context <translation_unit_decl 0x7fa4ad587168 ./benchmarks/git/double_free_1/git_df_1.c>
            pointer_to_this <pointer_type 0x7fa4ad09fa80>>
        unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _12 = slot_27->curl;
    version:12
    ptr-info 0x7fa4ad0a6498>
=============== *this point analyzable =================
curl_easy_setopt (_12, 0, 1);
========================================================
 <ssa_name 0x7fa4ad584c60
    type <pointer_type 0x7fa4ad09f888
        type <record_type 0x7fa4ad09f7e0 active_request_slot BLK
            size <integer_cst 0x7fa4ad08b8b8 constant 576>
            unit-size <integer_cst 0x7fa4ad08b930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad09f7e0 fields <field_decl 0x7fa4ad09cda8 curl> context <translation_unit_decl 0x7fa4ad587168 ./benchmarks/git/double_free_1/git_df_1.c>
            pointer_to_this <pointer_type 0x7fa4ad09f888>>
        public unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fa4ade24f30 slot>
    def_stmt slot_27 = (struct active_request_slot *) _10;
    version:27
    ptr-info 0x7fa4ad0a6510>
=============== *this point analyzable =================
_13 = start_active_slot (slot_27);
========================================================
=============== *this point analyzable =================
_13 = start_active_slot (slot_27);
========================================================
 <ssa_name 0x7fa4ad584af8
    type <pointer_type 0x7fa4ad09b7e0
        type <record_type 0x7fa4ad09b738 FILE BLK
            size <integer_cst 0x7fa4ad08b780 constant 1728>
            unit-size <integer_cst 0x7fa4ad08b8a0 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad09b690 fields <field_decl 0x7fa4ad09c688 _flags> context <translation_unit_decl 0x7fa4ad587168 ./benchmarks/git/double_free_1/git_df_1.c>
            pointer_to_this <pointer_type 0x7fa4ad09b7e0>>
        unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fa4ad0a02a0>>
   
    def_stmt _17 = stderr;
    version:17
    ptr-info 0x7fa4ad0a64b0>
=============== *this point analyzable =================
fprintf (_17, "HEAD HTTP error %ld\n", _16);
========================================================
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
fprintf (_17, "HEAD HTTP error %ld\n", _16);
========================================================
 <ssa_name 0x7fa4ad584af8
    type <pointer_type 0x7fa4ad09b7e0
        type <record_type 0x7fa4ad09b738 FILE BLK
            size <integer_cst 0x7fa4ad08b780 constant 1728>
            unit-size <integer_cst 0x7fa4ad08b8a0 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad09b690 fields <field_decl 0x7fa4ad09c688 _flags> context <translation_unit_decl 0x7fa4ad587168 ./benchmarks/git/double_free_1/git_df_1.c>
            pointer_to_this <pointer_type 0x7fa4ad09b7e0>>
        unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fa4ad0a02a0>>
   
    def_stmt _17 = stderr;
    version:17
    ptr-info 0x7fa4ad0a64b0>
=============== *this point analyzable =================
fprintf (_17, "HEAD HTTP error %ld\n", _16);
========================================================
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
__builtin_fwrite ("Unable to start HEAD request\n", 1, 29, _18);
========================================================
=============== *this point analyzable =================
__builtin_fwrite ("Unable to start HEAD request\n", 1, 29, _18);
========================================================
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m

=============== The third stage : Start detection  =================
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:remote_exists========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path remote_exists  function_call count: 10 level :1========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:__builtin_fwrite========= [0m
[40;33m =======POP node_fun stack:__builtin_fwrite========= [0m
[40;42m =======pre add _ fucntion:fprintf========= [0m
[40;33m =======POP node_fun stack:fprintf========= [0m
[40;42m =======pre add _ fucntion:run_active_slot========= [0m
[40;33m =======POP node_fun stack:run_active_slot========= [0m
[40;42m =======pre add _ fucntion:start_active_slot========= [0m
[40;33m =======POP node_fun stack:start_active_slot========= [0m
[40;42m =======pre add _ fucntion:curl_easy_setopt========= [0m
[40;33m =======POP node_fun stack:curl_easy_setopt========= [0m
[40;42m =======pre add _ fucntion:get_active_slot========= [0m
[40;33m =======POP node_fun stack:get_active_slot========= [0m
[40;42m =======pre add _ fucntion:sprintf========= [0m
[40;33m =======POP node_fun stack:sprintf========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre_check_funciton:remote_exists========= [0m
[40;42m =======start_check_funciton:remote_exists========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fa4ad5846c0
    type <pointer_type 0x7fa4ad094f18
        type <integer_type 0x7fa4ad0949d8 char public QI
            size <integer_cst 0x7fa4ad57cca8 constant 8>
            unit-size <integer_cst 0x7fa4ad57ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad5913f0 precision:8 min <integer_cst 0x7fa4ad08b720 -128> max <integer_cst 0x7fa4ad08b708 127>
            pointer_to_this <pointer_type 0x7fa4ad094f18>>
        unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fa4ad587168 ./benchmarks/git/double_free_1/git_df_1.c>>
   
    def_stmt _2 = _1->url;
    version:2
    ptr-info 0x7fa4ad0a6438>
 <ssa_name 0x7fa4ad5846c0
    type <pointer_type 0x7fa4ad094f18
        type <integer_type 0x7fa4ad0949d8 char public QI
            size <integer_cst 0x7fa4ad57cca8 constant 8>
            unit-size <integer_cst 0x7fa4ad57ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad5913f0 precision:8 min <integer_cst 0x7fa4ad08b720 -128> max <integer_cst 0x7fa4ad08b708 127>
            pointer_to_this <pointer_type 0x7fa4ad094f18>>
        unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fa4ad587168 ./benchmarks/git/double_free_1/git_df_1.c>>
   
    def_stmt _2 = _1->url;
    version:2
    ptr-info 0x7fa4ad0a6438>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fa4ad5846c0
    type <pointer_type 0x7fa4ad094f18
        type <integer_type 0x7fa4ad0949d8 char public QI
            size <integer_cst 0x7fa4ad57cca8 constant 8>
            unit-size <integer_cst 0x7fa4ad57ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad5913f0 precision:8 min <integer_cst 0x7fa4ad08b720 -128> max <integer_cst 0x7fa4ad08b708 127>
            pointer_to_this <pointer_type 0x7fa4ad094f18>>
        unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fa4ad587168 ./benchmarks/git/double_free_1/git_df_1.c>>
   
    def_stmt _2 = _1->url;
    version:2
    ptr-info 0x7fa4ad0a6438>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_29(D)>
_3 = strlen (_2);
_3 = strlen (_2);
In function ‘main’:
./benchmarks/git/double_free_1/git_df_1.c:185:21: warning: use location
  185 |         char *url = xmalloc(strlen(remote->url) + strlen(path) + 1);    /* allocation site */
      |                     ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
_5 = _3 + _4;
./benchmarks/git/double_free_1/git_df_1.c:185:21: warning: use location
url_24 = malloc (_6);
./benchmarks/git/double_free_1/git_df_1.c:185:21: warning: use location
this stmt call this function :malloc
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
  211 |         free(url);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
  207 |                 free(url);      /* double-free */
      |                 ^
this stmt call this function :free

 ================== find free stmt ================== 
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
  199 |                 free(url);      /* double-free */
      |                 ^
this stmt call this function :free

 ================== find free stmt ================== 
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find free stmt ================== 
curl_easy_setopt (_11, 0, url_24);
./benchmarks/git/double_free_1/git_df_1.c:194:9: warning: use location
  194 |         curl_easy_setopt(slot->curl, CURLOPT_URL, url);
      |         ^
this stmt call this function :curl_easy_setopt
trace fucntion name:curl_easy_setopt 

 ================== trace ================== 
trace fucntion free:3 
sprintf (url_24, "%s%s", _8, path_22(D));
./benchmarks/git/double_free_1/git_df_1.c:190:9: warning: use location
  190 |         sprintf(url, "%s%s", remote->url, path);
      |         ^
this stmt call this function :sprintf
trace fucntion name:sprintf 

 ================== trace ================== 
trace fucntion free:3 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fa4ad5846c0
    type <pointer_type 0x7fa4ad094f18
        type <integer_type 0x7fa4ad0949d8 char public QI
            size <integer_cst 0x7fa4ad57cca8 constant 8>
            unit-size <integer_cst 0x7fa4ad57ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad5913f0 precision:8 min <integer_cst 0x7fa4ad08b720 -128> max <integer_cst 0x7fa4ad08b708 127>
            pointer_to_this <pointer_type 0x7fa4ad094f18>>
        unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fa4ad587168 ./benchmarks/git/double_free_1/git_df_1.c>>
   
    def_stmt _2 = _1->url;
    version:2
    ptr-info 0x7fa4ad0a6438>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:3 [0m
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fa4ad584708
    type <integer_type 0x7fa4ad5917e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad591738 precision:64 min <integer_cst 0x7fa4ad57ce88 0> max <integer_cst 0x7fa4ad57d500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fa4ad59d7e0>>
   
    def_stmt _3 = strlen (_2);
    version:3>
 <ssa_name 0x7fa4ad584708
    type <integer_type 0x7fa4ad5917e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad591738 precision:64 min <integer_cst 0x7fa4ad57ce88 0> max <integer_cst 0x7fa4ad57d500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fa4ad59d7e0>>
   
    def_stmt _3 = strlen (_2);
    version:3>

 ================== pre trace ptable ================== 
trace fucntion name:strlen 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fa4ad584708
    type <integer_type 0x7fa4ad5917e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad591738 precision:64 min <integer_cst 0x7fa4ad57ce88 0> max <integer_cst 0x7fa4ad57d500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fa4ad59d7e0>>
   
    def_stmt _3 = strlen (_2);
    version:3>
is Other function strlen
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_29(D)>
_3 = strlen (_2);
_3 = strlen (_2);
./benchmarks/git/double_free_1/git_df_1.c:185:21: warning: use location
  185 |         char *url = xmalloc(strlen(remote->url) + strlen(path) + 1);    /* allocation site */
      |                     ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
_5 = _3 + _4;
./benchmarks/git/double_free_1/git_df_1.c:185:21: warning: use location
url_24 = malloc (_6);
./benchmarks/git/double_free_1/git_df_1.c:185:21: warning: use location
this stmt call this function :malloc
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
  211 |         free(url);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
  207 |                 free(url);      /* double-free */
      |                 ^
this stmt call this function :free

 ================== find free stmt ================== 
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
  199 |                 free(url);      /* double-free */
      |                 ^
this stmt call this function :free

 ================== find free stmt ================== 
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find free stmt ================== 
curl_easy_setopt (_11, 0, url_24);
./benchmarks/git/double_free_1/git_df_1.c:194:9: warning: use location
  194 |         curl_easy_setopt(slot->curl, CURLOPT_URL, url);
      |         ^
this stmt call this function :curl_easy_setopt
trace fucntion name:curl_easy_setopt 

 ================== trace ================== 
trace fucntion free:3 
sprintf (url_24, "%s%s", _8, path_22(D));
./benchmarks/git/double_free_1/git_df_1.c:190:9: warning: use location
  190 |         sprintf(url, "%s%s", remote->url, path);
      |         ^
this stmt call this function :sprintf
trace fucntion name:sprintf 

 ================== trace ================== 
trace fucntion free:3 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fa4ad584708
    type <integer_type 0x7fa4ad5917e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad591738 precision:64 min <integer_cst 0x7fa4ad57ce88 0> max <integer_cst 0x7fa4ad57d500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fa4ad59d7e0>>
   
    def_stmt _3 = strlen (_2);
    version:3>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
  199 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
  207 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_42 = VDEF <.MEM_28>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
  211 |         free(url);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:3 [0m
[40;31m  	possible double free [Looserules]:3 [0m
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fa4ad584bd0
    type <pointer_type 0x7fa4ad094b28
        type <integer_type 0x7fa4ad094a80 char readonly QI
            size <integer_cst 0x7fa4ad57cca8 constant 8>
            unit-size <integer_cst 0x7fa4ad57ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad5913f0 precision:8 min <integer_cst 0x7fa4ad08b720 -128> max <integer_cst 0x7fa4ad08b708 127>
            pointer_to_this <pointer_type 0x7fa4ad094b28>>
        unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fa4ad0a1100 path>
    def_stmt GIMPLE_NOP
    version:22
    ptr-info 0x7fa4ad0a64e0>
 <ssa_name 0x7fa4ad584bd0
    type <pointer_type 0x7fa4ad094b28
        type <integer_type 0x7fa4ad094a80 char readonly QI
            size <integer_cst 0x7fa4ad57cca8 constant 8>
            unit-size <integer_cst 0x7fa4ad57ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad5913f0 precision:8 min <integer_cst 0x7fa4ad08b720 -128> max <integer_cst 0x7fa4ad08b708 127>
            pointer_to_this <pointer_type 0x7fa4ad094b28>>
        unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fa4ad0a1100 path>
    def_stmt GIMPLE_NOP
    version:22
    ptr-info 0x7fa4ad0a64e0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fa4ad584bd0
    type <pointer_type 0x7fa4ad094b28
        type <integer_type 0x7fa4ad094a80 char readonly QI
            size <integer_cst 0x7fa4ad57cca8 constant 8>
            unit-size <integer_cst 0x7fa4ad57ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad5913f0 precision:8 min <integer_cst 0x7fa4ad08b720 -128> max <integer_cst 0x7fa4ad08b708 127>
            pointer_to_this <pointer_type 0x7fa4ad094b28>>
        unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fa4ad0a1100 path>
    def_stmt GIMPLE_NOP
    version:22
    ptr-info 0x7fa4ad0a64e0>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_29(D)>
_4 = strlen (path_22(D));
_4 = strlen (path_22(D));
./benchmarks/git/double_free_1/git_df_1.c:185:21: warning: use location
  185 |         char *url = xmalloc(strlen(remote->url) + strlen(path) + 1);    /* allocation site */
      |                     ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
_5 = _3 + _4;
./benchmarks/git/double_free_1/git_df_1.c:185:21: warning: use location
url_24 = malloc (_6);
./benchmarks/git/double_free_1/git_df_1.c:185:21: warning: use location
this stmt call this function :malloc
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
  211 |         free(url);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
  207 |                 free(url);      /* double-free */
      |                 ^
this stmt call this function :free

 ================== find free stmt ================== 
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
  199 |                 free(url);      /* double-free */
      |                 ^
this stmt call this function :free

 ================== find free stmt ================== 
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find free stmt ================== 
curl_easy_setopt (_11, 0, url_24);
./benchmarks/git/double_free_1/git_df_1.c:194:9: warning: use location
  194 |         curl_easy_setopt(slot->curl, CURLOPT_URL, url);
      |         ^
this stmt call this function :curl_easy_setopt
trace fucntion name:curl_easy_setopt 

 ================== trace ================== 
trace fucntion free:3 
sprintf (url_24, "%s%s", _8, path_22(D));
./benchmarks/git/double_free_1/git_df_1.c:190:9: warning: use location
  190 |         sprintf(url, "%s%s", remote->url, path);
      |         ^
this stmt call this function :sprintf
trace fucntion name:sprintf 

 ================== trace ================== 
trace fucntion free:3 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fa4ad584bd0
    type <pointer_type 0x7fa4ad094b28
        type <integer_type 0x7fa4ad094a80 char readonly QI
            size <integer_cst 0x7fa4ad57cca8 constant 8>
            unit-size <integer_cst 0x7fa4ad57ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad5913f0 precision:8 min <integer_cst 0x7fa4ad08b720 -128> max <integer_cst 0x7fa4ad08b708 127>
            pointer_to_this <pointer_type 0x7fa4ad094b28>>
        unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fa4ad0a1100 path>
    def_stmt GIMPLE_NOP
    version:22
    ptr-info 0x7fa4ad0a64e0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:3 [0m
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fa4ad584750
    type <integer_type 0x7fa4ad5917e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad591738 precision:64 min <integer_cst 0x7fa4ad57ce88 0> max <integer_cst 0x7fa4ad57d500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fa4ad59d7e0>>
   
    def_stmt _4 = strlen (path_22(D));
    version:4>
 <ssa_name 0x7fa4ad584750
    type <integer_type 0x7fa4ad5917e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad591738 precision:64 min <integer_cst 0x7fa4ad57ce88 0> max <integer_cst 0x7fa4ad57d500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fa4ad59d7e0>>
   
    def_stmt _4 = strlen (path_22(D));
    version:4>

 ================== pre trace ptable ================== 
trace fucntion name:strlen 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fa4ad584750
    type <integer_type 0x7fa4ad5917e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad591738 precision:64 min <integer_cst 0x7fa4ad57ce88 0> max <integer_cst 0x7fa4ad57d500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fa4ad59d7e0>>
   
    def_stmt _4 = strlen (path_22(D));
    version:4>
is Other function strlen
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_29(D)>
_4 = strlen (path_22(D));
_4 = strlen (path_22(D));
./benchmarks/git/double_free_1/git_df_1.c:185:21: warning: use location
  185 |         char *url = xmalloc(strlen(remote->url) + strlen(path) + 1);    /* allocation site */
      |                     ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
_5 = _3 + _4;
./benchmarks/git/double_free_1/git_df_1.c:185:21: warning: use location
url_24 = malloc (_6);
./benchmarks/git/double_free_1/git_df_1.c:185:21: warning: use location
this stmt call this function :malloc
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
  211 |         free(url);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
  207 |                 free(url);      /* double-free */
      |                 ^
this stmt call this function :free

 ================== find free stmt ================== 
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
  199 |                 free(url);      /* double-free */
      |                 ^
this stmt call this function :free

 ================== find free stmt ================== 
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find free stmt ================== 
curl_easy_setopt (_11, 0, url_24);
./benchmarks/git/double_free_1/git_df_1.c:194:9: warning: use location
  194 |         curl_easy_setopt(slot->curl, CURLOPT_URL, url);
      |         ^
this stmt call this function :curl_easy_setopt
trace fucntion name:curl_easy_setopt 

 ================== trace ================== 
trace fucntion free:3 
sprintf (url_24, "%s%s", _8, path_22(D));
./benchmarks/git/double_free_1/git_df_1.c:190:9: warning: use location
  190 |         sprintf(url, "%s%s", remote->url, path);
      |         ^
this stmt call this function :sprintf
trace fucntion name:sprintf 

 ================== trace ================== 
trace fucntion free:3 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fa4ad584750
    type <integer_type 0x7fa4ad5917e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad591738 precision:64 min <integer_cst 0x7fa4ad57ce88 0> max <integer_cst 0x7fa4ad57d500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fa4ad59d7e0>>
   
    def_stmt _4 = strlen (path_22(D));
    version:4>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
  199 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
  207 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_42 = VDEF <.MEM_28>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
  211 |         free(url);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:3 [0m
[40;31m  	possible double free [Looserules]:3 [0m
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fa4ad584c18
    type <pointer_type 0x7fa4ad094f18
        type <integer_type 0x7fa4ad0949d8 char public QI
            size <integer_cst 0x7fa4ad57cca8 constant 8>
            unit-size <integer_cst 0x7fa4ad57ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad5913f0 precision:8 min <integer_cst 0x7fa4ad08b720 -128> max <integer_cst 0x7fa4ad08b708 127>
            pointer_to_this <pointer_type 0x7fa4ad094f18>>
        unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fa4ad587168 ./benchmarks/git/double_free_1/git_df_1.c>>
    var <var_decl 0x7fa4ad0ad000 url>
    def_stmt url_24 = malloc (_6);
    version:24
    ptr-info 0x7fa4ad0a64f8>
 <ssa_name 0x7fa4ad584c18
    type <pointer_type 0x7fa4ad094f18
        type <integer_type 0x7fa4ad0949d8 char public QI
            size <integer_cst 0x7fa4ad57cca8 constant 8>
            unit-size <integer_cst 0x7fa4ad57ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad5913f0 precision:8 min <integer_cst 0x7fa4ad08b720 -128> max <integer_cst 0x7fa4ad08b708 127>
            pointer_to_this <pointer_type 0x7fa4ad094f18>>
        unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fa4ad587168 ./benchmarks/git/double_free_1/git_df_1.c>>
    var <var_decl 0x7fa4ad0ad000 url>
    def_stmt url_24 = malloc (_6);
    version:24
    ptr-info 0x7fa4ad0a64f8>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
this stmt call this function :free

 ================== find free stmt ================== 
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
  207 |                 free(url);      /* double-free */
      |                 ^
this stmt call this function :free

 ================== find free stmt ================== 
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
  199 |                 free(url);      /* double-free */
      |                 ^
this stmt call this function :free

 ================== find free stmt ================== 
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find free stmt ================== 
curl_easy_setopt (_11, 0, url_24);
./benchmarks/git/double_free_1/git_df_1.c:194:9: warning: use location
  194 |         curl_easy_setopt(slot->curl, CURLOPT_URL, url);
      |         ^
this stmt call this function :curl_easy_setopt
trace fucntion name:curl_easy_setopt 

 ================== trace ================== 
trace fucntion free:3 
sprintf (url_24, "%s%s", _8, path_22(D));
./benchmarks/git/double_free_1/git_df_1.c:190:9: warning: use location
  190 |         sprintf(url, "%s%s", remote->url, path);
      |         ^
this stmt call this function :sprintf
trace fucntion name:sprintf 

 ================== trace ================== 
trace fucntion free:3 
# .MEM_30 = VDEF <.MEM_29(D)>
url_24 = malloc (_6);
url_24 = malloc (_6);
./benchmarks/git/double_free_1/git_df_1.c:185:21: warning: use location
  185 |         char *url = xmalloc(strlen(remote->url) + strlen(path) + 1);    /* allocation site */
      |                     ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fa4ad584c18
    type <pointer_type 0x7fa4ad094f18
        type <integer_type 0x7fa4ad0949d8 char public QI
            size <integer_cst 0x7fa4ad57cca8 constant 8>
            unit-size <integer_cst 0x7fa4ad57ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad5913f0 precision:8 min <integer_cst 0x7fa4ad08b720 -128> max <integer_cst 0x7fa4ad08b708 127>
            pointer_to_this <pointer_type 0x7fa4ad094f18>>
        unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fa4ad587168 ./benchmarks/git/double_free_1/git_df_1.c>>
    var <var_decl 0x7fa4ad0ad000 url>
    def_stmt url_24 = malloc (_6);
    version:24
    ptr-info 0x7fa4ad0a64f8>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
  199 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
  207 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_42 = VDEF <.MEM_28>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
  211 |         free(url);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:3 [0m
[40;31m  	possible double free [Looserules]:3 [0m
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fa4ad584c18
    type <pointer_type 0x7fa4ad094f18
        type <integer_type 0x7fa4ad0949d8 char public QI
            size <integer_cst 0x7fa4ad57cca8 constant 8>
            unit-size <integer_cst 0x7fa4ad57ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad5913f0 precision:8 min <integer_cst 0x7fa4ad08b720 -128> max <integer_cst 0x7fa4ad08b708 127>
            pointer_to_this <pointer_type 0x7fa4ad094f18>>
        unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fa4ad587168 ./benchmarks/git/double_free_1/git_df_1.c>>
    var <var_decl 0x7fa4ad0ad000 url>
    def_stmt url_24 = malloc (_6);
    version:24
    ptr-info 0x7fa4ad0a64f8>
 <ssa_name 0x7fa4ad584c18
    type <pointer_type 0x7fa4ad094f18
        type <integer_type 0x7fa4ad0949d8 char public QI
            size <integer_cst 0x7fa4ad57cca8 constant 8>
            unit-size <integer_cst 0x7fa4ad57ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad5913f0 precision:8 min <integer_cst 0x7fa4ad08b720 -128> max <integer_cst 0x7fa4ad08b708 127>
            pointer_to_this <pointer_type 0x7fa4ad094f18>>
        unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fa4ad587168 ./benchmarks/git/double_free_1/git_df_1.c>>
    var <var_decl 0x7fa4ad0ad000 url>
    def_stmt url_24 = malloc (_6);
    version:24
    ptr-info 0x7fa4ad0a64f8>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
this stmt call this function :free

 ================== find free stmt ================== 
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
  207 |                 free(url);      /* double-free */
      |                 ^
this stmt call this function :free

 ================== find free stmt ================== 
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
  199 |                 free(url);      /* double-free */
      |                 ^
this stmt call this function :free

 ================== find free stmt ================== 
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find free stmt ================== 
curl_easy_setopt (_11, 0, url_24);
./benchmarks/git/double_free_1/git_df_1.c:194:9: warning: use location
  194 |         curl_easy_setopt(slot->curl, CURLOPT_URL, url);
      |         ^
this stmt call this function :curl_easy_setopt
trace fucntion name:curl_easy_setopt 

 ================== trace ================== 
trace fucntion free:3 
# .MEM_31 = VDEF <.MEM_30>
sprintf (url_24, "%s%s", _8, path_22(D));
sprintf (url_24, "%s%s", _8, path_22(D));
./benchmarks/git/double_free_1/git_df_1.c:190:9: warning: use location
  190 |         sprintf(url, "%s%s", remote->url, path);
      |         ^
this stmt call this function :sprintf
trace fucntion name:sprintf 

 ================== trace ================== 
trace fucntion free:3 
url_24 = malloc (_6);
./benchmarks/git/double_free_1/git_df_1.c:185:21: warning: use location
  185 |         char *url = xmalloc(strlen(remote->url) + strlen(path) + 1);    /* allocation site */
      |                     ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fa4ad584c18
    type <pointer_type 0x7fa4ad094f18
        type <integer_type 0x7fa4ad0949d8 char public QI
            size <integer_cst 0x7fa4ad57cca8 constant 8>
            unit-size <integer_cst 0x7fa4ad57ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad5913f0 precision:8 min <integer_cst 0x7fa4ad08b720 -128> max <integer_cst 0x7fa4ad08b708 127>
            pointer_to_this <pointer_type 0x7fa4ad094f18>>
        unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fa4ad587168 ./benchmarks/git/double_free_1/git_df_1.c>>
    var <var_decl 0x7fa4ad0ad000 url>
    def_stmt url_24 = malloc (_6);
    version:24
    ptr-info 0x7fa4ad0a64f8>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
  199 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
  207 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_42 = VDEF <.MEM_28>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
  211 |         free(url);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:3 [0m
[40;31m  	possible double free [Looserules]:3 [0m
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <string_cst 0x7fa4ad778ba0
    type <array_type 0x7fa4ad09fe70
        type <integer_type 0x7fa4ad0949d8 char public QI
            size <integer_cst 0x7fa4ad57cca8 constant 8>
            unit-size <integer_cst 0x7fa4ad57ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad5913f0 precision:8 min <integer_cst 0x7fa4ad08b720 -128> max <integer_cst 0x7fa4ad08b708 127>
            pointer_to_this <pointer_type 0x7fa4ad094f18>>
        BLK
        size <integer_cst 0x7fa4ad08b978 constant 40>
        unit-size <integer_cst 0x7fa4ad08b960 constant 5>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7fa4ad09fdc8 type <integer_type 0x7fa4ad591000 sizetype>
            DI
            size <integer_cst 0x7fa4ad57cbb8 constant 64>
            unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad591738 precision:64 min <integer_cst 0x7fa4ad57cbe8 0> max <integer_cst 0x7fa4ad57ce10 4>>
        pointer_to_this <pointer_type 0x7fa4ad09ff18>>
    readonly constant static "%s%s\000">

dot graph START

======================================================================
 <ssa_name 0x7fa4ad584870
    type <pointer_type 0x7fa4ad094f18
        type <integer_type 0x7fa4ad0949d8 char public QI
            size <integer_cst 0x7fa4ad57cca8 constant 8>
            unit-size <integer_cst 0x7fa4ad57ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad5913f0 precision:8 min <integer_cst 0x7fa4ad08b720 -128> max <integer_cst 0x7fa4ad08b708 127>
            pointer_to_this <pointer_type 0x7fa4ad094f18>>
        unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fa4ad587168 ./benchmarks/git/double_free_1/git_df_1.c>>
   
    def_stmt _8 = _7->url;
    version:8
    ptr-info 0x7fa4ad0a6468>
 <ssa_name 0x7fa4ad584870
    type <pointer_type 0x7fa4ad094f18
        type <integer_type 0x7fa4ad0949d8 char public QI
            size <integer_cst 0x7fa4ad57cca8 constant 8>
            unit-size <integer_cst 0x7fa4ad57ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad5913f0 precision:8 min <integer_cst 0x7fa4ad08b720 -128> max <integer_cst 0x7fa4ad08b708 127>
            pointer_to_this <pointer_type 0x7fa4ad094f18>>
        unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fa4ad587168 ./benchmarks/git/double_free_1/git_df_1.c>>
   
    def_stmt _8 = _7->url;
    version:8
    ptr-info 0x7fa4ad0a6468>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fa4ad584870
    type <pointer_type 0x7fa4ad094f18
        type <integer_type 0x7fa4ad0949d8 char public QI
            size <integer_cst 0x7fa4ad57cca8 constant 8>
            unit-size <integer_cst 0x7fa4ad57ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad5913f0 precision:8 min <integer_cst 0x7fa4ad08b720 -128> max <integer_cst 0x7fa4ad08b708 127>
            pointer_to_this <pointer_type 0x7fa4ad094f18>>
        unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fa4ad587168 ./benchmarks/git/double_free_1/git_df_1.c>>
   
    def_stmt _8 = _7->url;
    version:8
    ptr-info 0x7fa4ad0a6468>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_31 = VDEF <.MEM_30>
sprintf (url_24, "%s%s", _8, path_22(D));
sprintf (url_24, "%s%s", _8, path_22(D));
./benchmarks/git/double_free_1/git_df_1.c:190:9: warning: use location
  190 |         sprintf(url, "%s%s", remote->url, path);
      |         ^
this stmt call this function :sprintf
trace fucntion name:sprintf 

 ================== trace ================== 
trace fucntion free:0 
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
  211 |         free(url);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
  207 |                 free(url);      /* double-free */
      |                 ^
this stmt call this function :free

 ================== find free stmt ================== 
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
  199 |                 free(url);      /* double-free */
      |                 ^
this stmt call this function :free

 ================== find free stmt ================== 
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find free stmt ================== 
curl_easy_setopt (_11, 0, url_24);
./benchmarks/git/double_free_1/git_df_1.c:194:9: warning: use location
  194 |         curl_easy_setopt(slot->curl, CURLOPT_URL, url);
      |         ^
this stmt call this function :curl_easy_setopt
trace fucntion name:curl_easy_setopt 

 ================== trace ================== 
trace fucntion free:3 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fa4ad584870
    type <pointer_type 0x7fa4ad094f18
        type <integer_type 0x7fa4ad0949d8 char public QI
            size <integer_cst 0x7fa4ad57cca8 constant 8>
            unit-size <integer_cst 0x7fa4ad57ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad5913f0 precision:8 min <integer_cst 0x7fa4ad08b720 -128> max <integer_cst 0x7fa4ad08b708 127>
            pointer_to_this <pointer_type 0x7fa4ad094f18>>
        unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fa4ad587168 ./benchmarks/git/double_free_1/git_df_1.c>>
   
    def_stmt _8 = _7->url;
    version:8
    ptr-info 0x7fa4ad0a6468>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:3 [0m
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fa4ad5848b8
    type <integer_type 0x7fa4ad5915e8 int public SI
        size <integer_cst 0x7fa4ad57cdf8 constant 32>
        unit-size <integer_cst 0x7fa4ad57ce10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad5915e8 precision:32 min <integer_cst 0x7fa4ad57cdb0 -2147483648> max <integer_cst 0x7fa4ad57cdc8 2147483647>
        pointer_to_this <pointer_type 0x7fa4ad5989d8>>
   
    def_stmt _9 = get_active_slot ();
    version:9>
 <ssa_name 0x7fa4ad5848b8
    type <integer_type 0x7fa4ad5915e8 int public SI
        size <integer_cst 0x7fa4ad57cdf8 constant 32>
        unit-size <integer_cst 0x7fa4ad57ce10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad5915e8 precision:32 min <integer_cst 0x7fa4ad57cdb0 -2147483648> max <integer_cst 0x7fa4ad57cdc8 2147483647>
        pointer_to_this <pointer_type 0x7fa4ad5989d8>>
   
    def_stmt _9 = get_active_slot ();
    version:9>

 ================== pre trace ptable ================== 
trace fucntion name:get_active_slot 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fa4ad5848b8
    type <integer_type 0x7fa4ad5915e8 int public SI
        size <integer_cst 0x7fa4ad57cdf8 constant 32>
        unit-size <integer_cst 0x7fa4ad57ce10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad5915e8 precision:32 min <integer_cst 0x7fa4ad57cdb0 -2147483648> max <integer_cst 0x7fa4ad57cdc8 2147483647>
        pointer_to_this <pointer_type 0x7fa4ad5989d8>>
   
    def_stmt _9 = get_active_slot ();
    version:9>
is Other function get_active_slot
 
 Start check Pointer Collect  

======================================================================
_10 = (long int) _9;
./benchmarks/git/double_free_1/git_df_1.c:192:16: warning: use location
  192 |         slot = get_active_slot();
      |                ^
slot_27 = (struct active_request_slot *) _10;
./benchmarks/git/double_free_1/git_df_1.c:192:14: warning: use location
  192 |         slot = get_active_slot();
      |              ^
run_active_slot (slot_27);
./benchmarks/git/double_free_1/git_df_1.c:198:17: warning: use location
  198 |                 run_active_slot(slot);
      |                 ^
this stmt call this function :run_active_slot
trace fucntion name:run_active_slot 

 ================== trace ================== 
trace fucntion free:0 
_13 = start_active_slot (slot_27);
./benchmarks/git/double_free_1/git_df_1.c:197:13: warning: use location
  197 |         if (start_active_slot(slot)) {
      |             ^
this stmt call this function :start_active_slot
trace fucntion name:start_active_slot 

 ================== trace ================== 
trace fucntion free:0 
if (_13 != 0)
./benchmarks/git/double_free_1/git_df_1.c:197:12: warning: use location
  197 |         if (start_active_slot(slot)) {
      |            ^
_12 = slot_27->curl;
./benchmarks/git/double_free_1/git_df_1.c:195:9: warning: use location
  195 |         curl_easy_setopt(slot->curl, CURLOPT_NOBODY, 1);
      |         ^
curl_easy_setopt (_12, 0, 1);
./benchmarks/git/double_free_1/git_df_1.c:195:9: warning: use location
this stmt call this function :curl_easy_setopt
trace fucntion name:curl_easy_setopt 

 ================== trace ================== 
trace fucntion free:0 
_11 = slot_27->curl;
./benchmarks/git/double_free_1/git_df_1.c:194:9: warning: use location
  194 |         curl_easy_setopt(slot->curl, CURLOPT_URL, url);
      |         ^
curl_easy_setopt (_11, 0, url_24);
./benchmarks/git/double_free_1/git_df_1.c:194:9: warning: use location
this stmt call this function :curl_easy_setopt
trace fucntion name:curl_easy_setopt 

 ================== trace ================== 
trace fucntion free:0 
slot_27->results = &results;
./benchmarks/git/double_free_1/git_df_1.c:193:23: warning: use location
  193 |         slot->results = &results;
      |                       ^
# .MEM_32 = VDEF <.MEM_31>
_9 = get_active_slot ();
_9 = get_active_slot ();
./benchmarks/git/double_free_1/git_df_1.c:192:16: warning: use location
  192 |         slot = get_active_slot();
      |                ^
this stmt call this function :get_active_slot
trace fucntion name:get_active_slot 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fa4ad5848b8
    type <integer_type 0x7fa4ad5915e8 int public SI
        size <integer_cst 0x7fa4ad57cdf8 constant 32>
        unit-size <integer_cst 0x7fa4ad57ce10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad5915e8 precision:32 min <integer_cst 0x7fa4ad57cdb0 -2147483648> max <integer_cst 0x7fa4ad57cdc8 2147483647>
        pointer_to_this <pointer_type 0x7fa4ad5989d8>>
   
    def_stmt _9 = get_active_slot ();
    version:9>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
  199 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
  207 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_42 = VDEF <.MEM_28>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
  211 |         free(url);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fa4ad584948
    type <pointer_type 0x7fa4ad09fa80
        type <record_type 0x7fa4ad09f9d8 CURL BLK
            size <integer_cst 0x7fa4ad57cc30 constant 0>
            unit-size <integer_cst 0x7fa4ad57cbe8 constant 0>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad09f930 context <translation_unit_decl 0x7fa4ad587168 ./benchmarks/git/double_free_1/git_df_1.c>
            pointer_to_this <pointer_type 0x7fa4ad09fa80>>
        unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _11 = slot_27->curl;
    version:11
    ptr-info 0x7fa4ad0a6480>
 <ssa_name 0x7fa4ad584948
    type <pointer_type 0x7fa4ad09fa80
        type <record_type 0x7fa4ad09f9d8 CURL BLK
            size <integer_cst 0x7fa4ad57cc30 constant 0>
            unit-size <integer_cst 0x7fa4ad57cbe8 constant 0>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad09f930 context <translation_unit_decl 0x7fa4ad587168 ./benchmarks/git/double_free_1/git_df_1.c>
            pointer_to_this <pointer_type 0x7fa4ad09fa80>>
        unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _11 = slot_27->curl;
    version:11
    ptr-info 0x7fa4ad0a6480>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fa4ad584948
    type <pointer_type 0x7fa4ad09fa80
        type <record_type 0x7fa4ad09f9d8 CURL BLK
            size <integer_cst 0x7fa4ad57cc30 constant 0>
            unit-size <integer_cst 0x7fa4ad57cbe8 constant 0>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad09f930 context <translation_unit_decl 0x7fa4ad587168 ./benchmarks/git/double_free_1/git_df_1.c>
            pointer_to_this <pointer_type 0x7fa4ad09fa80>>
        unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _11 = slot_27->curl;
    version:11
    ptr-info 0x7fa4ad0a6480>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_34 = VDEF <.MEM_33>
curl_easy_setopt (_11, 0, url_24);
curl_easy_setopt (_11, 0, url_24);
./benchmarks/git/double_free_1/git_df_1.c:194:9: warning: use location
  194 |         curl_easy_setopt(slot->curl, CURLOPT_URL, url);
      |         ^
this stmt call this function :curl_easy_setopt
trace fucntion name:curl_easy_setopt 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_34 = VDEF <.MEM_33>
curl_easy_setopt (_11, 0, url_24);
curl_easy_setopt (_11, 0, url_24);
./benchmarks/git/double_free_1/git_df_1.c:194:9: warning: use location
this stmt call this function :curl_easy_setopt
trace fucntion name:curl_easy_setopt 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fa4ad584948
    type <pointer_type 0x7fa4ad09fa80
        type <record_type 0x7fa4ad09f9d8 CURL BLK
            size <integer_cst 0x7fa4ad57cc30 constant 0>
            unit-size <integer_cst 0x7fa4ad57cbe8 constant 0>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad09f930 context <translation_unit_decl 0x7fa4ad587168 ./benchmarks/git/double_free_1/git_df_1.c>
            pointer_to_this <pointer_type 0x7fa4ad09fa80>>
        unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _11 = slot_27->curl;
    version:11
    ptr-info 0x7fa4ad0a6480>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
  199 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
  207 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_42 = VDEF <.MEM_28>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
  211 |         free(url);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fa4ad584990
    type <pointer_type 0x7fa4ad09fa80
        type <record_type 0x7fa4ad09f9d8 CURL BLK
            size <integer_cst 0x7fa4ad57cc30 constant 0>
            unit-size <integer_cst 0x7fa4ad57cbe8 constant 0>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad09f930 context <translation_unit_decl 0x7fa4ad587168 ./benchmarks/git/double_free_1/git_df_1.c>
            pointer_to_this <pointer_type 0x7fa4ad09fa80>>
        unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _12 = slot_27->curl;
    version:12
    ptr-info 0x7fa4ad0a6498>
 <ssa_name 0x7fa4ad584990
    type <pointer_type 0x7fa4ad09fa80
        type <record_type 0x7fa4ad09f9d8 CURL BLK
            size <integer_cst 0x7fa4ad57cc30 constant 0>
            unit-size <integer_cst 0x7fa4ad57cbe8 constant 0>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad09f930 context <translation_unit_decl 0x7fa4ad587168 ./benchmarks/git/double_free_1/git_df_1.c>
            pointer_to_this <pointer_type 0x7fa4ad09fa80>>
        unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _12 = slot_27->curl;
    version:12
    ptr-info 0x7fa4ad0a6498>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fa4ad584990
    type <pointer_type 0x7fa4ad09fa80
        type <record_type 0x7fa4ad09f9d8 CURL BLK
            size <integer_cst 0x7fa4ad57cc30 constant 0>
            unit-size <integer_cst 0x7fa4ad57cbe8 constant 0>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad09f930 context <translation_unit_decl 0x7fa4ad587168 ./benchmarks/git/double_free_1/git_df_1.c>
            pointer_to_this <pointer_type 0x7fa4ad09fa80>>
        unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _12 = slot_27->curl;
    version:12
    ptr-info 0x7fa4ad0a6498>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_35 = VDEF <.MEM_34>
curl_easy_setopt (_12, 0, 1);
curl_easy_setopt (_12, 0, 1);
./benchmarks/git/double_free_1/git_df_1.c:195:9: warning: use location
  195 |         curl_easy_setopt(slot->curl, CURLOPT_NOBODY, 1);
      |         ^
this stmt call this function :curl_easy_setopt
trace fucntion name:curl_easy_setopt 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_35 = VDEF <.MEM_34>
curl_easy_setopt (_12, 0, 1);
curl_easy_setopt (_12, 0, 1);
./benchmarks/git/double_free_1/git_df_1.c:195:9: warning: use location
this stmt call this function :curl_easy_setopt
trace fucntion name:curl_easy_setopt 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fa4ad584990
    type <pointer_type 0x7fa4ad09fa80
        type <record_type 0x7fa4ad09f9d8 CURL BLK
            size <integer_cst 0x7fa4ad57cc30 constant 0>
            unit-size <integer_cst 0x7fa4ad57cbe8 constant 0>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad09f930 context <translation_unit_decl 0x7fa4ad587168 ./benchmarks/git/double_free_1/git_df_1.c>
            pointer_to_this <pointer_type 0x7fa4ad09fa80>>
        unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _12 = slot_27->curl;
    version:12
    ptr-info 0x7fa4ad0a6498>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
  199 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
  207 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_42 = VDEF <.MEM_28>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
  211 |         free(url);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fa4ad584c60
    type <pointer_type 0x7fa4ad09f888
        type <record_type 0x7fa4ad09f7e0 active_request_slot BLK
            size <integer_cst 0x7fa4ad08b8b8 constant 576>
            unit-size <integer_cst 0x7fa4ad08b930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad09f7e0 fields <field_decl 0x7fa4ad09cda8 curl> context <translation_unit_decl 0x7fa4ad587168 ./benchmarks/git/double_free_1/git_df_1.c>
            pointer_to_this <pointer_type 0x7fa4ad09f888>>
        public unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fa4ade24f30 slot>
    def_stmt slot_27 = (struct active_request_slot *) _10;
    version:27
    ptr-info 0x7fa4ad0a6510>
 <ssa_name 0x7fa4ad584c60
    type <pointer_type 0x7fa4ad09f888
        type <record_type 0x7fa4ad09f7e0 active_request_slot BLK
            size <integer_cst 0x7fa4ad08b8b8 constant 576>
            unit-size <integer_cst 0x7fa4ad08b930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad09f7e0 fields <field_decl 0x7fa4ad09cda8 curl> context <translation_unit_decl 0x7fa4ad587168 ./benchmarks/git/double_free_1/git_df_1.c>
            pointer_to_this <pointer_type 0x7fa4ad09f888>>
        public unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fa4ade24f30 slot>
    def_stmt slot_27 = (struct active_request_slot *) _10;
    version:27
    ptr-info 0x7fa4ad0a6510>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fa4ad584c60
    type <pointer_type 0x7fa4ad09f888
        type <record_type 0x7fa4ad09f7e0 active_request_slot BLK
            size <integer_cst 0x7fa4ad08b8b8 constant 576>
            unit-size <integer_cst 0x7fa4ad08b930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad09f7e0 fields <field_decl 0x7fa4ad09cda8 curl> context <translation_unit_decl 0x7fa4ad587168 ./benchmarks/git/double_free_1/git_df_1.c>
            pointer_to_this <pointer_type 0x7fa4ad09f888>>
        public unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fa4ade24f30 slot>
    def_stmt slot_27 = (struct active_request_slot *) _10;
    version:27
    ptr-info 0x7fa4ad0a6510>
is Other function 
 
 Start check Pointer Collect  

======================================================================
run_active_slot (slot_27);
./benchmarks/git/double_free_1/git_df_1.c:198:17: warning: use location
  198 |                 run_active_slot(slot);
      |                 ^
this stmt call this function :run_active_slot
trace fucntion name:run_active_slot 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_36 = VDEF <.MEM_35>
_13 = start_active_slot (slot_27);
_13 = start_active_slot (slot_27);
./benchmarks/git/double_free_1/git_df_1.c:197:13: warning: use location
  197 |         if (start_active_slot(slot)) {
      |             ^
this stmt call this function :start_active_slot
trace fucntion name:start_active_slot 

 ================== trace ================== 
trace fucntion free:0 
if (_13 != 0)
./benchmarks/git/double_free_1/git_df_1.c:197:12: warning: use location
  197 |         if (start_active_slot(slot)) {
      |            ^
_12 = slot_27->curl;
./benchmarks/git/double_free_1/git_df_1.c:195:9: warning: use location
  195 |         curl_easy_setopt(slot->curl, CURLOPT_NOBODY, 1);
      |         ^
curl_easy_setopt (_12, 0, 1);
./benchmarks/git/double_free_1/git_df_1.c:195:9: warning: use location
this stmt call this function :curl_easy_setopt
trace fucntion name:curl_easy_setopt 

 ================== trace ================== 
trace fucntion free:0 
_11 = slot_27->curl;
./benchmarks/git/double_free_1/git_df_1.c:194:9: warning: use location
  194 |         curl_easy_setopt(slot->curl, CURLOPT_URL, url);
      |         ^
curl_easy_setopt (_11, 0, url_24);
./benchmarks/git/double_free_1/git_df_1.c:194:9: warning: use location
this stmt call this function :curl_easy_setopt
trace fucntion name:curl_easy_setopt 

 ================== trace ================== 
trace fucntion free:0 
slot_27->results = &results;
./benchmarks/git/double_free_1/git_df_1.c:193:23: warning: use location
  193 |         slot->results = &results;
      |                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fa4ad584c60
    type <pointer_type 0x7fa4ad09f888
        type <record_type 0x7fa4ad09f7e0 active_request_slot BLK
            size <integer_cst 0x7fa4ad08b8b8 constant 576>
            unit-size <integer_cst 0x7fa4ad08b930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad09f7e0 fields <field_decl 0x7fa4ad09cda8 curl> context <translation_unit_decl 0x7fa4ad587168 ./benchmarks/git/double_free_1/git_df_1.c>
            pointer_to_this <pointer_type 0x7fa4ad09f888>>
        public unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fa4ade24f30 slot>
    def_stmt slot_27 = (struct active_request_slot *) _10;
    version:27
    ptr-info 0x7fa4ad0a6510>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
  199 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
  207 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_42 = VDEF <.MEM_28>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
  211 |         free(url);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fa4ad5849d8
    type <integer_type 0x7fa4ad5915e8 int public SI
        size <integer_cst 0x7fa4ad57cdf8 constant 32>
        unit-size <integer_cst 0x7fa4ad57ce10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad5915e8 precision:32 min <integer_cst 0x7fa4ad57cdb0 -2147483648> max <integer_cst 0x7fa4ad57cdc8 2147483647>
        pointer_to_this <pointer_type 0x7fa4ad5989d8>>
   
    def_stmt _13 = start_active_slot (slot_27);
    version:13>
 <ssa_name 0x7fa4ad5849d8
    type <integer_type 0x7fa4ad5915e8 int public SI
        size <integer_cst 0x7fa4ad57cdf8 constant 32>
        unit-size <integer_cst 0x7fa4ad57ce10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad5915e8 precision:32 min <integer_cst 0x7fa4ad57cdb0 -2147483648> max <integer_cst 0x7fa4ad57cdc8 2147483647>
        pointer_to_this <pointer_type 0x7fa4ad5989d8>>
   
    def_stmt _13 = start_active_slot (slot_27);
    version:13>

 ================== pre trace ptable ================== 
trace fucntion name:start_active_slot 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fa4ad5849d8
    type <integer_type 0x7fa4ad5915e8 int public SI
        size <integer_cst 0x7fa4ad57cdf8 constant 32>
        unit-size <integer_cst 0x7fa4ad57ce10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad5915e8 precision:32 min <integer_cst 0x7fa4ad57cdb0 -2147483648> max <integer_cst 0x7fa4ad57cdc8 2147483647>
        pointer_to_this <pointer_type 0x7fa4ad5989d8>>
   
    def_stmt _13 = start_active_slot (slot_27);
    version:13>
is Other function start_active_slot
 
 Start check Pointer Collect  

======================================================================
run_active_slot (slot_27);
./benchmarks/git/double_free_1/git_df_1.c:198:17: warning: use location
  198 |                 run_active_slot(slot);
      |                 ^
this stmt call this function :run_active_slot
trace fucntion name:run_active_slot 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_36 = VDEF <.MEM_35>
_13 = start_active_slot (slot_27);
_13 = start_active_slot (slot_27);
./benchmarks/git/double_free_1/git_df_1.c:197:13: warning: use location
  197 |         if (start_active_slot(slot)) {
      |             ^
this stmt call this function :start_active_slot
trace fucntion name:start_active_slot 

 ================== trace ================== 
trace fucntion free:0 
if (_13 != 0)
./benchmarks/git/double_free_1/git_df_1.c:197:12: warning: use location
  197 |         if (start_active_slot(slot)) {
      |            ^
_12 = slot_27->curl;
./benchmarks/git/double_free_1/git_df_1.c:195:9: warning: use location
  195 |         curl_easy_setopt(slot->curl, CURLOPT_NOBODY, 1);
      |         ^
curl_easy_setopt (_12, 0, 1);
./benchmarks/git/double_free_1/git_df_1.c:195:9: warning: use location
this stmt call this function :curl_easy_setopt
trace fucntion name:curl_easy_setopt 

 ================== trace ================== 
trace fucntion free:0 
_11 = slot_27->curl;
./benchmarks/git/double_free_1/git_df_1.c:194:9: warning: use location
  194 |         curl_easy_setopt(slot->curl, CURLOPT_URL, url);
      |         ^
curl_easy_setopt (_11, 0, url_24);
./benchmarks/git/double_free_1/git_df_1.c:194:9: warning: use location
this stmt call this function :curl_easy_setopt
trace fucntion name:curl_easy_setopt 

 ================== trace ================== 
trace fucntion free:0 
slot_27->results = &results;
./benchmarks/git/double_free_1/git_df_1.c:193:23: warning: use location
  193 |         slot->results = &results;
      |                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fa4ad5849d8
    type <integer_type 0x7fa4ad5915e8 int public SI
        size <integer_cst 0x7fa4ad57cdf8 constant 32>
        unit-size <integer_cst 0x7fa4ad57ce10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad5915e8 precision:32 min <integer_cst 0x7fa4ad57cdb0 -2147483648> max <integer_cst 0x7fa4ad57cdc8 2147483647>
        pointer_to_this <pointer_type 0x7fa4ad5989d8>>
   
    def_stmt _13 = start_active_slot (slot_27);
    version:13>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
  199 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
  207 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_42 = VDEF <.MEM_28>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
  211 |         free(url);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fa4ad584af8
    type <pointer_type 0x7fa4ad09b7e0
        type <record_type 0x7fa4ad09b738 FILE BLK
            size <integer_cst 0x7fa4ad08b780 constant 1728>
            unit-size <integer_cst 0x7fa4ad08b8a0 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad09b690 fields <field_decl 0x7fa4ad09c688 _flags> context <translation_unit_decl 0x7fa4ad587168 ./benchmarks/git/double_free_1/git_df_1.c>
            pointer_to_this <pointer_type 0x7fa4ad09b7e0>>
        unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fa4ad0a02a0>>
   
    def_stmt _17 = stderr;
    version:17
    ptr-info 0x7fa4ad0a64b0>
 <ssa_name 0x7fa4ad584af8
    type <pointer_type 0x7fa4ad09b7e0
        type <record_type 0x7fa4ad09b738 FILE BLK
            size <integer_cst 0x7fa4ad08b780 constant 1728>
            unit-size <integer_cst 0x7fa4ad08b8a0 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad09b690 fields <field_decl 0x7fa4ad09c688 _flags> context <translation_unit_decl 0x7fa4ad587168 ./benchmarks/git/double_free_1/git_df_1.c>
            pointer_to_this <pointer_type 0x7fa4ad09b7e0>>
        unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fa4ad0a02a0>>
   
    def_stmt _17 = stderr;
    version:17
    ptr-info 0x7fa4ad0a64b0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fa4ad584af8
    type <pointer_type 0x7fa4ad09b7e0
        type <record_type 0x7fa4ad09b738 FILE BLK
            size <integer_cst 0x7fa4ad08b780 constant 1728>
            unit-size <integer_cst 0x7fa4ad08b8a0 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad09b690 fields <field_decl 0x7fa4ad09c688 _flags> context <translation_unit_decl 0x7fa4ad587168 ./benchmarks/git/double_free_1/git_df_1.c>
            pointer_to_this <pointer_type 0x7fa4ad09b7e0>>
        unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fa4ad0a02a0>>
   
    def_stmt _17 = stderr;
    version:17
    ptr-info 0x7fa4ad0a64b0>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_41 = VDEF <.MEM_40>
fprintf (_17, "HEAD HTTP error %ld\n", _16);
fprintf (_17, "HEAD HTTP error %ld\n", _16);
./benchmarks/git/double_free_1/git_df_1.c:205:25: warning: use location
  205 |                         fprintf(stderr, "HEAD HTTP error %ld\n", results.http_code);
      |                         ^
this stmt call this function :fprintf
trace fucntion name:fprintf 

 ================== trace ================== 
trace fucntion free:0 
_17 = stderr;
./benchmarks/git/double_free_1/git_df_1.c:205:25: warning: use location
_18 = stderr;
./benchmarks/git/double_free_1/git_df_1.c:208:17: warning: use location
  208 |                 fprintf(stderr, "Unable to start HEAD request\n");
      |                 ^
__builtin_fwrite ("Unable to start HEAD request\n", 1, 29, _18);
./benchmarks/git/double_free_1/git_df_1.c:208:17: warning: use location
this stmt call this function :__builtin_fwrite
trace fucntion name:__builtin_fwrite 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fa4ad584af8
    type <pointer_type 0x7fa4ad09b7e0
        type <record_type 0x7fa4ad09b738 FILE BLK
            size <integer_cst 0x7fa4ad08b780 constant 1728>
            unit-size <integer_cst 0x7fa4ad08b8a0 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad09b690 fields <field_decl 0x7fa4ad09c688 _flags> context <translation_unit_decl 0x7fa4ad587168 ./benchmarks/git/double_free_1/git_df_1.c>
            pointer_to_this <pointer_type 0x7fa4ad09b7e0>>
        unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fa4ad0a02a0>>
   
    def_stmt _17 = stderr;
    version:17
    ptr-info 0x7fa4ad0a64b0>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
  199 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
  207 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_42 = VDEF <.MEM_28>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
  211 |         free(url);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: free in this location
  199 |                 free(url);      /* double-free */
      |                 ^

===== possiable asias =====
# .MEM_41 = VDEF <.MEM_40>
fprintf (_17, "HEAD HTTP error %ld\n", _16);
./benchmarks/git/double_free_1/git_df_1.c:205:25: warning: use location
  205 |                         fprintf(stderr, "HEAD HTTP error %ld\n", results.http_code);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: free in this location
  199 |                 free(url);      /* double-free */
      |                 ^

===== possiable asias =====
# VUSE <.MEM_40>
_17 = stderr;
./benchmarks/git/double_free_1/git_df_1.c:205:25: warning: use location
  205 |                         fprintf(stderr, "HEAD HTTP error %ld\n", results.http_code);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: free in this location
  199 |                 free(url);      /* double-free */
      |                 ^

===== possiable asias =====
# VUSE <.MEM_37>
_18 = stderr;
./benchmarks/git/double_free_1/git_df_1.c:208:17: warning: use location
  208 |                 fprintf(stderr, "Unable to start HEAD request\n");
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: free in this location
  207 |                 free(url);      /* double-free */
      |                 ^

===== possiable asias =====
# VUSE <.MEM_37>
_18 = stderr;
./benchmarks/git/double_free_1/git_df_1.c:208:17: warning: use location
  208 |                 fprintf(stderr, "Unable to start HEAD request\n");
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: free in this location
  199 |                 free(url);      /* double-free */
      |                 ^

===== possiable asias =====
# .MEM_38 = VDEF <.MEM_37>
__builtin_fwrite ("Unable to start HEAD request\n", 1, 29, _18);
./benchmarks/git/double_free_1/git_df_1.c:208:17: warning: use location
  208 |                 fprintf(stderr, "Unable to start HEAD request\n");
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: free in this location
  207 |                 free(url);      /* double-free */
      |                 ^

===== possiable asias =====
# .MEM_38 = VDEF <.MEM_37>
__builtin_fwrite ("Unable to start HEAD request\n", 1, 29, _18);
./benchmarks/git/double_free_1/git_df_1.c:208:17: warning: use location
  208 |                 fprintf(stderr, "Unable to start HEAD request\n");
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <string_cst 0x7fa4ad57ab70
    type <array_type 0x7fa4ad0a0498
        type <integer_type 0x7fa4ad0949d8 char public QI
            size <integer_cst 0x7fa4ad57cca8 constant 8>
            unit-size <integer_cst 0x7fa4ad57ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad5913f0 precision:8 min <integer_cst 0x7fa4ad08b720 -128> max <integer_cst 0x7fa4ad08b708 127>
            pointer_to_this <pointer_type 0x7fa4ad094f18>>
        BLK
        size <integer_cst 0x7fa4ad08b9a8 constant 168>
        unit-size <integer_cst 0x7fa4ad08b990 constant 21>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7fa4ad0a03f0 type <integer_type 0x7fa4ad591000 sizetype>
            DI
            size <integer_cst 0x7fa4ad57cbb8 constant 64>
            unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad591738 precision:64 min <integer_cst 0x7fa4ad57cbe8 0> max <integer_cst 0x7fa4ad08b7b0 20>>
        pointer_to_this <pointer_type 0x7fa4ad0a0540>>
    readonly constant static "HEAD HTTP error %ld\012\000">

dot graph START

======================================================================
 <ssa_name 0x7fa4ad584ab0
    type <integer_type 0x7fa4ad591738 long int DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad591738 precision:64 min <integer_cst 0x7fa4ad57ce40 -9223372036854775808> max <integer_cst 0x7fa4ad57ce58 9223372036854775807>
        pointer_to_this <pointer_type 0x7fa4ad59d738>>
   
    def_stmt _16 = results.http_code;
    version:16>
 <ssa_name 0x7fa4ad584ab0
    type <integer_type 0x7fa4ad591738 long int DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad591738 precision:64 min <integer_cst 0x7fa4ad57ce40 -9223372036854775808> max <integer_cst 0x7fa4ad57ce58 9223372036854775807>
        pointer_to_this <pointer_type 0x7fa4ad59d738>>
   
    def_stmt _16 = results.http_code;
    version:16>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fa4ad584ab0
    type <integer_type 0x7fa4ad591738 long int DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad591738 precision:64 min <integer_cst 0x7fa4ad57ce40 -9223372036854775808> max <integer_cst 0x7fa4ad57ce58 9223372036854775807>
        pointer_to_this <pointer_type 0x7fa4ad59d738>>
   
    def_stmt _16 = results.http_code;
    version:16>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_41 = VDEF <.MEM_40>
fprintf (_17, "HEAD HTTP error %ld\n", _16);
fprintf (_17, "HEAD HTTP error %ld\n", _16);
./benchmarks/git/double_free_1/git_df_1.c:205:25: warning: use location
  205 |                         fprintf(stderr, "HEAD HTTP error %ld\n", results.http_code);
      |                         ^
this stmt call this function :fprintf
trace fucntion name:fprintf 

 ================== trace ================== 
trace fucntion free:0 
_17 = stderr;
./benchmarks/git/double_free_1/git_df_1.c:205:25: warning: use location
_18 = stderr;
./benchmarks/git/double_free_1/git_df_1.c:208:17: warning: use location
  208 |                 fprintf(stderr, "Unable to start HEAD request\n");
      |                 ^
__builtin_fwrite ("Unable to start HEAD request\n", 1, 29, _18);
./benchmarks/git/double_free_1/git_df_1.c:208:17: warning: use location
this stmt call this function :__builtin_fwrite
trace fucntion name:__builtin_fwrite 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fa4ad584ab0
    type <integer_type 0x7fa4ad591738 long int DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad591738 precision:64 min <integer_cst 0x7fa4ad57ce40 -9223372036854775808> max <integer_cst 0x7fa4ad57ce58 9223372036854775807>
        pointer_to_this <pointer_type 0x7fa4ad59d738>>
   
    def_stmt _16 = results.http_code;
    version:16>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
  199 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
  207 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_42 = VDEF <.MEM_28>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
  211 |         free(url);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: free in this location
  199 |                 free(url);      /* double-free */
      |                 ^

===== possiable asias =====
# .MEM_41 = VDEF <.MEM_40>
fprintf (_17, "HEAD HTTP error %ld\n", _16);
./benchmarks/git/double_free_1/git_df_1.c:205:25: warning: use location
  205 |                         fprintf(stderr, "HEAD HTTP error %ld\n", results.http_code);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: free in this location
  199 |                 free(url);      /* double-free */
      |                 ^

===== possiable asias =====
# VUSE <.MEM_40>
_17 = stderr;
./benchmarks/git/double_free_1/git_df_1.c:205:25: warning: use location
  205 |                         fprintf(stderr, "HEAD HTTP error %ld\n", results.http_code);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: free in this location
  199 |                 free(url);      /* double-free */
      |                 ^

===== possiable asias =====
# VUSE <.MEM_37>
_18 = stderr;
./benchmarks/git/double_free_1/git_df_1.c:208:17: warning: use location
  208 |                 fprintf(stderr, "Unable to start HEAD request\n");
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: free in this location
  207 |                 free(url);      /* double-free */
      |                 ^

===== possiable asias =====
# VUSE <.MEM_37>
_18 = stderr;
./benchmarks/git/double_free_1/git_df_1.c:208:17: warning: use location
  208 |                 fprintf(stderr, "Unable to start HEAD request\n");
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: free in this location
  199 |                 free(url);      /* double-free */
      |                 ^

===== possiable asias =====
# .MEM_38 = VDEF <.MEM_37>
__builtin_fwrite ("Unable to start HEAD request\n", 1, 29, _18);
./benchmarks/git/double_free_1/git_df_1.c:208:17: warning: use location
  208 |                 fprintf(stderr, "Unable to start HEAD request\n");
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: free in this location
  207 |                 free(url);      /* double-free */
      |                 ^

===== possiable asias =====
# .MEM_38 = VDEF <.MEM_37>
__builtin_fwrite ("Unable to start HEAD request\n", 1, 29, _18);
./benchmarks/git/double_free_1/git_df_1.c:208:17: warning: use location
  208 |                 fprintf(stderr, "Unable to start HEAD request\n");
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <string_cst 0x7fa4ad5860e0
    type <array_type 0x7fa4ad0a0738
        type <integer_type 0x7fa4ad0949d8 char public QI
            size <integer_cst 0x7fa4ad57cca8 constant 8>
            unit-size <integer_cst 0x7fa4ad57ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad5913f0 precision:8 min <integer_cst 0x7fa4ad08b720 -128> max <integer_cst 0x7fa4ad08b708 127>
            pointer_to_this <pointer_type 0x7fa4ad094f18>>
        BLK
        size <integer_cst 0x7fa4ad08b9f0 constant 240>
        unit-size <integer_cst 0x7fa4ad08b9d8 constant 30>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7fa4ad0a0690 type <integer_type 0x7fa4ad591000 sizetype>
            DI
            size <integer_cst 0x7fa4ad57cbb8 constant 64>
            unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad591738 precision:64 min <integer_cst 0x7fa4ad57cbe8 0> max <integer_cst 0x7fa4ad08b9c0 29>>
        pointer_to_this <pointer_type 0x7fa4ad0a07e0>>
    readonly constant static "Unable to start HEAD request\012\000">

dot graph START

======================================================================
 <ssa_name 0x7fa4ad584b40
    type <pointer_type 0x7fa4ad09b7e0
        type <record_type 0x7fa4ad09b738 FILE BLK
            size <integer_cst 0x7fa4ad08b780 constant 1728>
            unit-size <integer_cst 0x7fa4ad08b8a0 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad09b690 fields <field_decl 0x7fa4ad09c688 _flags> context <translation_unit_decl 0x7fa4ad587168 ./benchmarks/git/double_free_1/git_df_1.c>
            pointer_to_this <pointer_type 0x7fa4ad09b7e0>>
        unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fa4ad0a02a0>>
   
    def_stmt _18 = stderr;
    version:18
    ptr-info 0x7fa4ad0a64c8>
 <ssa_name 0x7fa4ad584b40
    type <pointer_type 0x7fa4ad09b7e0
        type <record_type 0x7fa4ad09b738 FILE BLK
            size <integer_cst 0x7fa4ad08b780 constant 1728>
            unit-size <integer_cst 0x7fa4ad08b8a0 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad09b690 fields <field_decl 0x7fa4ad09c688 _flags> context <translation_unit_decl 0x7fa4ad587168 ./benchmarks/git/double_free_1/git_df_1.c>
            pointer_to_this <pointer_type 0x7fa4ad09b7e0>>
        unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fa4ad0a02a0>>
   
    def_stmt _18 = stderr;
    version:18
    ptr-info 0x7fa4ad0a64c8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fa4ad584b40
    type <pointer_type 0x7fa4ad09b7e0
        type <record_type 0x7fa4ad09b738 FILE BLK
            size <integer_cst 0x7fa4ad08b780 constant 1728>
            unit-size <integer_cst 0x7fa4ad08b8a0 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad09b690 fields <field_decl 0x7fa4ad09c688 _flags> context <translation_unit_decl 0x7fa4ad587168 ./benchmarks/git/double_free_1/git_df_1.c>
            pointer_to_this <pointer_type 0x7fa4ad09b7e0>>
        unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fa4ad0a02a0>>
   
    def_stmt _18 = stderr;
    version:18
    ptr-info 0x7fa4ad0a64c8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_38 = VDEF <.MEM_37>
__builtin_fwrite ("Unable to start HEAD request\n", 1, 29, _18);
__builtin_fwrite ("Unable to start HEAD request\n", 1, 29, _18);
./benchmarks/git/double_free_1/git_df_1.c:208:17: warning: use location
this stmt call this function :__builtin_fwrite
trace fucntion name:__builtin_fwrite 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_38 = VDEF <.MEM_37>
__builtin_fwrite ("Unable to start HEAD request\n", 1, 29, _18);
__builtin_fwrite ("Unable to start HEAD request\n", 1, 29, _18);
./benchmarks/git/double_free_1/git_df_1.c:208:17: warning: use location
this stmt call this function :__builtin_fwrite
trace fucntion name:__builtin_fwrite 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fa4ad584b40
    type <pointer_type 0x7fa4ad09b7e0
        type <record_type 0x7fa4ad09b738 FILE BLK
            size <integer_cst 0x7fa4ad08b780 constant 1728>
            unit-size <integer_cst 0x7fa4ad08b8a0 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad09b690 fields <field_decl 0x7fa4ad09c688 _flags> context <translation_unit_decl 0x7fa4ad587168 ./benchmarks/git/double_free_1/git_df_1.c>
            pointer_to_this <pointer_type 0x7fa4ad09b7e0>>
        unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fa4ad0a02a0>>
   
    def_stmt _18 = stderr;
    version:18
    ptr-info 0x7fa4ad0a64c8>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
  199 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
  207 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_42 = VDEF <.MEM_28>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
  211 |         free(url);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: free in this location
  199 |                 free(url);      /* double-free */
      |                 ^

===== possiable asias =====
# .MEM_38 = VDEF <.MEM_37>
__builtin_fwrite ("Unable to start HEAD request\n", 1, 29, _18);
./benchmarks/git/double_free_1/git_df_1.c:208:17: warning: use location
  208 |                 fprintf(stderr, "Unable to start HEAD request\n");
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: free in this location
  207 |                 free(url);      /* double-free */
      |                 ^

===== possiable asias =====
# .MEM_38 = VDEF <.MEM_37>
__builtin_fwrite ("Unable to start HEAD request\n", 1, 29, _18);
./benchmarks/git/double_free_1/git_df_1.c:208:17: warning: use location
  208 |                 fprintf(stderr, "Unable to start HEAD request\n");
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: free in this location
  199 |                 free(url);      /* double-free */
      |                 ^

===== possiable asias =====
# .MEM_38 = VDEF <.MEM_37>
__builtin_fwrite ("Unable to start HEAD request\n", 1, 29, _18);
./benchmarks/git/double_free_1/git_df_1.c:208:17: warning: use location
  208 |                 fprintf(stderr, "Unable to start HEAD request\n");
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: free in this location
  207 |                 free(url);      /* double-free */
      |                 ^

===== possiable asias =====
# .MEM_38 = VDEF <.MEM_37>
__builtin_fwrite ("Unable to start HEAD request\n", 1, 29, _18);
./benchmarks/git/double_free_1/git_df_1.c:208:17: warning: use location
  208 |                 fprintf(stderr, "Unable to start HEAD request\n");
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fa4ad5847e0
    type <integer_type 0x7fa4ad5917e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad591738 precision:64 min <integer_cst 0x7fa4ad57ce88 0> max <integer_cst 0x7fa4ad57d500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fa4ad59d7e0>>
   
    def_stmt _6 = _5 + 1;
    version:6>
 <ssa_name 0x7fa4ad5847e0
    type <integer_type 0x7fa4ad5917e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad591738 precision:64 min <integer_cst 0x7fa4ad57ce88 0> max <integer_cst 0x7fa4ad57d500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fa4ad59d7e0>>
   
    def_stmt _6 = _5 + 1;
    version:6>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fa4ad5847e0
    type <integer_type 0x7fa4ad5917e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad591738 precision:64 min <integer_cst 0x7fa4ad57ce88 0> max <integer_cst 0x7fa4ad57d500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fa4ad59d7e0>>
   
    def_stmt _6 = _5 + 1;
    version:6>
is Other function 

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:remote_exists========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <string_cst 0x7fa4ad778a60
    type <array_type 0x7fa4ad09fe70
        type <integer_type 0x7fa4ad0949d8 char public QI
            size <integer_cst 0x7fa4ad57cca8 constant 8>
            unit-size <integer_cst 0x7fa4ad57ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad5913f0 precision:8 min <integer_cst 0x7fa4ad08b720 -128> max <integer_cst 0x7fa4ad08b708 127>
            pointer_to_this <pointer_type 0x7fa4ad094f18>>
        BLK
        size <integer_cst 0x7fa4ad08b978 constant 40>
        unit-size <integer_cst 0x7fa4ad08b960 constant 5>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7fa4ad09fdc8 type <integer_type 0x7fa4ad591000 sizetype>
            DI
            size <integer_cst 0x7fa4ad57cbb8 constant 64>
            unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad591738 precision:64 min <integer_cst 0x7fa4ad57cbe8 0> max <integer_cst 0x7fa4ad57ce10 4>>
        pointer_to_this <pointer_type 0x7fa4ad09ff18>>
    readonly constant static "path\000">
[40;33m =======POP node_fun stack:main========= [0m
[40;44m =======node_fun:remote_exists========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path remote_exists  function_call count: 10 level :0========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:__builtin_fwrite========= [0m
[40;33m =======POP node_fun stack:__builtin_fwrite========= [0m
[40;42m =======pre add _ fucntion:fprintf========= [0m
[40;33m =======POP node_fun stack:fprintf========= [0m
[40;42m =======pre add _ fucntion:run_active_slot========= [0m
[40;33m =======POP node_fun stack:run_active_slot========= [0m
[40;42m =======pre add _ fucntion:start_active_slot========= [0m
[40;33m =======POP node_fun stack:start_active_slot========= [0m
[40;42m =======pre add _ fucntion:curl_easy_setopt========= [0m
[40;33m =======POP node_fun stack:curl_easy_setopt========= [0m
[40;42m =======pre add _ fucntion:get_active_slot========= [0m
[40;33m =======POP node_fun stack:get_active_slot========= [0m
[40;42m =======pre add _ fucntion:sprintf========= [0m
[40;33m =======POP node_fun stack:sprintf========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre_check_funciton:remote_exists========= [0m
[40;42m =======start_check_funciton:remote_exists========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fa4ad5846c0
    type <pointer_type 0x7fa4ad094f18
        type <integer_type 0x7fa4ad0949d8 char public QI
            size <integer_cst 0x7fa4ad57cca8 constant 8>
            unit-size <integer_cst 0x7fa4ad57ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad5913f0 precision:8 min <integer_cst 0x7fa4ad08b720 -128> max <integer_cst 0x7fa4ad08b708 127>
            pointer_to_this <pointer_type 0x7fa4ad094f18>>
        unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fa4ad587168 ./benchmarks/git/double_free_1/git_df_1.c>>
   
    def_stmt _2 = _1->url;
    version:2
    ptr-info 0x7fa4ad0a6438>
 <ssa_name 0x7fa4ad5846c0
    type <pointer_type 0x7fa4ad094f18
        type <integer_type 0x7fa4ad0949d8 char public QI
            size <integer_cst 0x7fa4ad57cca8 constant 8>
            unit-size <integer_cst 0x7fa4ad57ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad5913f0 precision:8 min <integer_cst 0x7fa4ad08b720 -128> max <integer_cst 0x7fa4ad08b708 127>
            pointer_to_this <pointer_type 0x7fa4ad094f18>>
        unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fa4ad587168 ./benchmarks/git/double_free_1/git_df_1.c>>
   
    def_stmt _2 = _1->url;
    version:2
    ptr-info 0x7fa4ad0a6438>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fa4ad5846c0
    type <pointer_type 0x7fa4ad094f18
        type <integer_type 0x7fa4ad0949d8 char public QI
            size <integer_cst 0x7fa4ad57cca8 constant 8>
            unit-size <integer_cst 0x7fa4ad57ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad5913f0 precision:8 min <integer_cst 0x7fa4ad08b720 -128> max <integer_cst 0x7fa4ad08b708 127>
            pointer_to_this <pointer_type 0x7fa4ad094f18>>
        unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fa4ad587168 ./benchmarks/git/double_free_1/git_df_1.c>>
   
    def_stmt _2 = _1->url;
    version:2
    ptr-info 0x7fa4ad0a6438>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_29(D)>
_3 = strlen (_2);
_3 = strlen (_2);
In function ‘remote_exists’:
./benchmarks/git/double_free_1/git_df_1.c:185:21: warning: use location
  185 |         char *url = xmalloc(strlen(remote->url) + strlen(path) + 1);    /* allocation site */
      |                     ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
_5 = _3 + _4;
./benchmarks/git/double_free_1/git_df_1.c:185:21: warning: use location
url_24 = malloc (_6);
./benchmarks/git/double_free_1/git_df_1.c:185:21: warning: use location
this stmt call this function :malloc
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
  211 |         free(url);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
  207 |                 free(url);      /* double-free */
      |                 ^
this stmt call this function :free

 ================== find free stmt ================== 
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
  199 |                 free(url);      /* double-free */
      |                 ^
this stmt call this function :free

 ================== find free stmt ================== 
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find free stmt ================== 
curl_easy_setopt (_11, 0, url_24);
./benchmarks/git/double_free_1/git_df_1.c:194:9: warning: use location
  194 |         curl_easy_setopt(slot->curl, CURLOPT_URL, url);
      |         ^
this stmt call this function :curl_easy_setopt
trace fucntion name:curl_easy_setopt 

 ================== trace ================== 
trace fucntion free:3 
sprintf (url_24, "%s%s", _8, path_22(D));
./benchmarks/git/double_free_1/git_df_1.c:190:9: warning: use location
  190 |         sprintf(url, "%s%s", remote->url, path);
      |         ^
this stmt call this function :sprintf
trace fucntion name:sprintf 

 ================== trace ================== 
trace fucntion free:3 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fa4ad5846c0
    type <pointer_type 0x7fa4ad094f18
        type <integer_type 0x7fa4ad0949d8 char public QI
            size <integer_cst 0x7fa4ad57cca8 constant 8>
            unit-size <integer_cst 0x7fa4ad57ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad5913f0 precision:8 min <integer_cst 0x7fa4ad08b720 -128> max <integer_cst 0x7fa4ad08b708 127>
            pointer_to_this <pointer_type 0x7fa4ad094f18>>
        unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fa4ad587168 ./benchmarks/git/double_free_1/git_df_1.c>>
   
    def_stmt _2 = _1->url;
    version:2
    ptr-info 0x7fa4ad0a6438>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:3 [0m
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fa4ad584708
    type <integer_type 0x7fa4ad5917e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad591738 precision:64 min <integer_cst 0x7fa4ad57ce88 0> max <integer_cst 0x7fa4ad57d500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fa4ad59d7e0>>
   
    def_stmt _3 = strlen (_2);
    version:3>
 <ssa_name 0x7fa4ad584708
    type <integer_type 0x7fa4ad5917e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad591738 precision:64 min <integer_cst 0x7fa4ad57ce88 0> max <integer_cst 0x7fa4ad57d500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fa4ad59d7e0>>
   
    def_stmt _3 = strlen (_2);
    version:3>

 ================== pre trace ptable ================== 
trace fucntion name:strlen 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fa4ad584708
    type <integer_type 0x7fa4ad5917e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad591738 precision:64 min <integer_cst 0x7fa4ad57ce88 0> max <integer_cst 0x7fa4ad57d500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fa4ad59d7e0>>
   
    def_stmt _3 = strlen (_2);
    version:3>
is Other function strlen
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_29(D)>
_3 = strlen (_2);
_3 = strlen (_2);
./benchmarks/git/double_free_1/git_df_1.c:185:21: warning: use location
  185 |         char *url = xmalloc(strlen(remote->url) + strlen(path) + 1);    /* allocation site */
      |                     ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
_5 = _3 + _4;
./benchmarks/git/double_free_1/git_df_1.c:185:21: warning: use location
url_24 = malloc (_6);
./benchmarks/git/double_free_1/git_df_1.c:185:21: warning: use location
this stmt call this function :malloc
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
  211 |         free(url);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
  207 |                 free(url);      /* double-free */
      |                 ^
this stmt call this function :free

 ================== find free stmt ================== 
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
  199 |                 free(url);      /* double-free */
      |                 ^
this stmt call this function :free

 ================== find free stmt ================== 
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find free stmt ================== 
curl_easy_setopt (_11, 0, url_24);
./benchmarks/git/double_free_1/git_df_1.c:194:9: warning: use location
  194 |         curl_easy_setopt(slot->curl, CURLOPT_URL, url);
      |         ^
this stmt call this function :curl_easy_setopt
trace fucntion name:curl_easy_setopt 

 ================== trace ================== 
trace fucntion free:3 
sprintf (url_24, "%s%s", _8, path_22(D));
./benchmarks/git/double_free_1/git_df_1.c:190:9: warning: use location
  190 |         sprintf(url, "%s%s", remote->url, path);
      |         ^
this stmt call this function :sprintf
trace fucntion name:sprintf 

 ================== trace ================== 
trace fucntion free:3 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fa4ad584708
    type <integer_type 0x7fa4ad5917e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad591738 precision:64 min <integer_cst 0x7fa4ad57ce88 0> max <integer_cst 0x7fa4ad57d500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fa4ad59d7e0>>
   
    def_stmt _3 = strlen (_2);
    version:3>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
  199 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
  207 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_42 = VDEF <.MEM_28>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
  211 |         free(url);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:3 [0m
[40;31m  	possible double free [Looserules]:3 [0m
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fa4ad584bd0
    type <pointer_type 0x7fa4ad094b28
        type <integer_type 0x7fa4ad094a80 char readonly QI
            size <integer_cst 0x7fa4ad57cca8 constant 8>
            unit-size <integer_cst 0x7fa4ad57ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad5913f0 precision:8 min <integer_cst 0x7fa4ad08b720 -128> max <integer_cst 0x7fa4ad08b708 127>
            pointer_to_this <pointer_type 0x7fa4ad094b28>>
        unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fa4ad0a1100 path>
    def_stmt GIMPLE_NOP
    version:22
    ptr-info 0x7fa4ad0a64e0>
 <ssa_name 0x7fa4ad584bd0
    type <pointer_type 0x7fa4ad094b28
        type <integer_type 0x7fa4ad094a80 char readonly QI
            size <integer_cst 0x7fa4ad57cca8 constant 8>
            unit-size <integer_cst 0x7fa4ad57ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad5913f0 precision:8 min <integer_cst 0x7fa4ad08b720 -128> max <integer_cst 0x7fa4ad08b708 127>
            pointer_to_this <pointer_type 0x7fa4ad094b28>>
        unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fa4ad0a1100 path>
    def_stmt GIMPLE_NOP
    version:22
    ptr-info 0x7fa4ad0a64e0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fa4ad584bd0
    type <pointer_type 0x7fa4ad094b28
        type <integer_type 0x7fa4ad094a80 char readonly QI
            size <integer_cst 0x7fa4ad57cca8 constant 8>
            unit-size <integer_cst 0x7fa4ad57ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad5913f0 precision:8 min <integer_cst 0x7fa4ad08b720 -128> max <integer_cst 0x7fa4ad08b708 127>
            pointer_to_this <pointer_type 0x7fa4ad094b28>>
        unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fa4ad0a1100 path>
    def_stmt GIMPLE_NOP
    version:22
    ptr-info 0x7fa4ad0a64e0>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_29(D)>
_4 = strlen (path_22(D));
_4 = strlen (path_22(D));
./benchmarks/git/double_free_1/git_df_1.c:185:21: warning: use location
  185 |         char *url = xmalloc(strlen(remote->url) + strlen(path) + 1);    /* allocation site */
      |                     ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
_5 = _3 + _4;
./benchmarks/git/double_free_1/git_df_1.c:185:21: warning: use location
url_24 = malloc (_6);
./benchmarks/git/double_free_1/git_df_1.c:185:21: warning: use location
this stmt call this function :malloc
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
  211 |         free(url);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
  207 |                 free(url);      /* double-free */
      |                 ^
this stmt call this function :free

 ================== find free stmt ================== 
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
  199 |                 free(url);      /* double-free */
      |                 ^
this stmt call this function :free

 ================== find free stmt ================== 
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find free stmt ================== 
curl_easy_setopt (_11, 0, url_24);
./benchmarks/git/double_free_1/git_df_1.c:194:9: warning: use location
  194 |         curl_easy_setopt(slot->curl, CURLOPT_URL, url);
      |         ^
this stmt call this function :curl_easy_setopt
trace fucntion name:curl_easy_setopt 

 ================== trace ================== 
trace fucntion free:3 
sprintf (url_24, "%s%s", _8, path_22(D));
./benchmarks/git/double_free_1/git_df_1.c:190:9: warning: use location
  190 |         sprintf(url, "%s%s", remote->url, path);
      |         ^
this stmt call this function :sprintf
trace fucntion name:sprintf 

 ================== trace ================== 
trace fucntion free:3 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fa4ad584bd0
    type <pointer_type 0x7fa4ad094b28
        type <integer_type 0x7fa4ad094a80 char readonly QI
            size <integer_cst 0x7fa4ad57cca8 constant 8>
            unit-size <integer_cst 0x7fa4ad57ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad5913f0 precision:8 min <integer_cst 0x7fa4ad08b720 -128> max <integer_cst 0x7fa4ad08b708 127>
            pointer_to_this <pointer_type 0x7fa4ad094b28>>
        unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fa4ad0a1100 path>
    def_stmt GIMPLE_NOP
    version:22
    ptr-info 0x7fa4ad0a64e0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:3 [0m
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fa4ad584750
    type <integer_type 0x7fa4ad5917e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad591738 precision:64 min <integer_cst 0x7fa4ad57ce88 0> max <integer_cst 0x7fa4ad57d500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fa4ad59d7e0>>
   
    def_stmt _4 = strlen (path_22(D));
    version:4>
 <ssa_name 0x7fa4ad584750
    type <integer_type 0x7fa4ad5917e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad591738 precision:64 min <integer_cst 0x7fa4ad57ce88 0> max <integer_cst 0x7fa4ad57d500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fa4ad59d7e0>>
   
    def_stmt _4 = strlen (path_22(D));
    version:4>

 ================== pre trace ptable ================== 
trace fucntion name:strlen 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fa4ad584750
    type <integer_type 0x7fa4ad5917e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad591738 precision:64 min <integer_cst 0x7fa4ad57ce88 0> max <integer_cst 0x7fa4ad57d500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fa4ad59d7e0>>
   
    def_stmt _4 = strlen (path_22(D));
    version:4>
is Other function strlen
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_29(D)>
_4 = strlen (path_22(D));
_4 = strlen (path_22(D));
./benchmarks/git/double_free_1/git_df_1.c:185:21: warning: use location
  185 |         char *url = xmalloc(strlen(remote->url) + strlen(path) + 1);    /* allocation site */
      |                     ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
_5 = _3 + _4;
./benchmarks/git/double_free_1/git_df_1.c:185:21: warning: use location
url_24 = malloc (_6);
./benchmarks/git/double_free_1/git_df_1.c:185:21: warning: use location
this stmt call this function :malloc
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
  211 |         free(url);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
  207 |                 free(url);      /* double-free */
      |                 ^
this stmt call this function :free

 ================== find free stmt ================== 
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
  199 |                 free(url);      /* double-free */
      |                 ^
this stmt call this function :free

 ================== find free stmt ================== 
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find free stmt ================== 
curl_easy_setopt (_11, 0, url_24);
./benchmarks/git/double_free_1/git_df_1.c:194:9: warning: use location
  194 |         curl_easy_setopt(slot->curl, CURLOPT_URL, url);
      |         ^
this stmt call this function :curl_easy_setopt
trace fucntion name:curl_easy_setopt 

 ================== trace ================== 
trace fucntion free:3 
sprintf (url_24, "%s%s", _8, path_22(D));
./benchmarks/git/double_free_1/git_df_1.c:190:9: warning: use location
  190 |         sprintf(url, "%s%s", remote->url, path);
      |         ^
this stmt call this function :sprintf
trace fucntion name:sprintf 

 ================== trace ================== 
trace fucntion free:3 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fa4ad584750
    type <integer_type 0x7fa4ad5917e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad591738 precision:64 min <integer_cst 0x7fa4ad57ce88 0> max <integer_cst 0x7fa4ad57d500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fa4ad59d7e0>>
   
    def_stmt _4 = strlen (path_22(D));
    version:4>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
  199 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
  207 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_42 = VDEF <.MEM_28>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
  211 |         free(url);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:3 [0m
[40;31m  	possible double free [Looserules]:3 [0m
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fa4ad584c18
    type <pointer_type 0x7fa4ad094f18
        type <integer_type 0x7fa4ad0949d8 char public QI
            size <integer_cst 0x7fa4ad57cca8 constant 8>
            unit-size <integer_cst 0x7fa4ad57ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad5913f0 precision:8 min <integer_cst 0x7fa4ad08b720 -128> max <integer_cst 0x7fa4ad08b708 127>
            pointer_to_this <pointer_type 0x7fa4ad094f18>>
        unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fa4ad587168 ./benchmarks/git/double_free_1/git_df_1.c>>
    var <var_decl 0x7fa4ad0ad000 url>
    def_stmt url_24 = malloc (_6);
    version:24
    ptr-info 0x7fa4ad0a64f8>
 <ssa_name 0x7fa4ad584c18
    type <pointer_type 0x7fa4ad094f18
        type <integer_type 0x7fa4ad0949d8 char public QI
            size <integer_cst 0x7fa4ad57cca8 constant 8>
            unit-size <integer_cst 0x7fa4ad57ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad5913f0 precision:8 min <integer_cst 0x7fa4ad08b720 -128> max <integer_cst 0x7fa4ad08b708 127>
            pointer_to_this <pointer_type 0x7fa4ad094f18>>
        unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fa4ad587168 ./benchmarks/git/double_free_1/git_df_1.c>>
    var <var_decl 0x7fa4ad0ad000 url>
    def_stmt url_24 = malloc (_6);
    version:24
    ptr-info 0x7fa4ad0a64f8>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
this stmt call this function :free

 ================== find free stmt ================== 
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
  207 |                 free(url);      /* double-free */
      |                 ^
this stmt call this function :free

 ================== find free stmt ================== 
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
  199 |                 free(url);      /* double-free */
      |                 ^
this stmt call this function :free

 ================== find free stmt ================== 
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find free stmt ================== 
curl_easy_setopt (_11, 0, url_24);
./benchmarks/git/double_free_1/git_df_1.c:194:9: warning: use location
  194 |         curl_easy_setopt(slot->curl, CURLOPT_URL, url);
      |         ^
this stmt call this function :curl_easy_setopt
trace fucntion name:curl_easy_setopt 

 ================== trace ================== 
trace fucntion free:3 
sprintf (url_24, "%s%s", _8, path_22(D));
./benchmarks/git/double_free_1/git_df_1.c:190:9: warning: use location
  190 |         sprintf(url, "%s%s", remote->url, path);
      |         ^
this stmt call this function :sprintf
trace fucntion name:sprintf 

 ================== trace ================== 
trace fucntion free:3 
# .MEM_30 = VDEF <.MEM_29(D)>
url_24 = malloc (_6);
url_24 = malloc (_6);
./benchmarks/git/double_free_1/git_df_1.c:185:21: warning: use location
  185 |         char *url = xmalloc(strlen(remote->url) + strlen(path) + 1);    /* allocation site */
      |                     ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fa4ad584c18
    type <pointer_type 0x7fa4ad094f18
        type <integer_type 0x7fa4ad0949d8 char public QI
            size <integer_cst 0x7fa4ad57cca8 constant 8>
            unit-size <integer_cst 0x7fa4ad57ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad5913f0 precision:8 min <integer_cst 0x7fa4ad08b720 -128> max <integer_cst 0x7fa4ad08b708 127>
            pointer_to_this <pointer_type 0x7fa4ad094f18>>
        unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fa4ad587168 ./benchmarks/git/double_free_1/git_df_1.c>>
    var <var_decl 0x7fa4ad0ad000 url>
    def_stmt url_24 = malloc (_6);
    version:24
    ptr-info 0x7fa4ad0a64f8>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
  199 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
  207 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_42 = VDEF <.MEM_28>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
  211 |         free(url);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:3 [0m
[40;31m  	possible double free [Looserules]:3 [0m
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fa4ad584c18
    type <pointer_type 0x7fa4ad094f18
        type <integer_type 0x7fa4ad0949d8 char public QI
            size <integer_cst 0x7fa4ad57cca8 constant 8>
            unit-size <integer_cst 0x7fa4ad57ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad5913f0 precision:8 min <integer_cst 0x7fa4ad08b720 -128> max <integer_cst 0x7fa4ad08b708 127>
            pointer_to_this <pointer_type 0x7fa4ad094f18>>
        unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fa4ad587168 ./benchmarks/git/double_free_1/git_df_1.c>>
    var <var_decl 0x7fa4ad0ad000 url>
    def_stmt url_24 = malloc (_6);
    version:24
    ptr-info 0x7fa4ad0a64f8>
 <ssa_name 0x7fa4ad584c18
    type <pointer_type 0x7fa4ad094f18
        type <integer_type 0x7fa4ad0949d8 char public QI
            size <integer_cst 0x7fa4ad57cca8 constant 8>
            unit-size <integer_cst 0x7fa4ad57ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad5913f0 precision:8 min <integer_cst 0x7fa4ad08b720 -128> max <integer_cst 0x7fa4ad08b708 127>
            pointer_to_this <pointer_type 0x7fa4ad094f18>>
        unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fa4ad587168 ./benchmarks/git/double_free_1/git_df_1.c>>
    var <var_decl 0x7fa4ad0ad000 url>
    def_stmt url_24 = malloc (_6);
    version:24
    ptr-info 0x7fa4ad0a64f8>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
this stmt call this function :free

 ================== find free stmt ================== 
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
  207 |                 free(url);      /* double-free */
      |                 ^
this stmt call this function :free

 ================== find free stmt ================== 
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
  199 |                 free(url);      /* double-free */
      |                 ^
this stmt call this function :free

 ================== find free stmt ================== 
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find free stmt ================== 
curl_easy_setopt (_11, 0, url_24);
./benchmarks/git/double_free_1/git_df_1.c:194:9: warning: use location
  194 |         curl_easy_setopt(slot->curl, CURLOPT_URL, url);
      |         ^
this stmt call this function :curl_easy_setopt
trace fucntion name:curl_easy_setopt 

 ================== trace ================== 
trace fucntion free:3 
# .MEM_31 = VDEF <.MEM_30>
sprintf (url_24, "%s%s", _8, path_22(D));
sprintf (url_24, "%s%s", _8, path_22(D));
./benchmarks/git/double_free_1/git_df_1.c:190:9: warning: use location
  190 |         sprintf(url, "%s%s", remote->url, path);
      |         ^
this stmt call this function :sprintf
trace fucntion name:sprintf 

 ================== trace ================== 
trace fucntion free:3 
url_24 = malloc (_6);
./benchmarks/git/double_free_1/git_df_1.c:185:21: warning: use location
  185 |         char *url = xmalloc(strlen(remote->url) + strlen(path) + 1);    /* allocation site */
      |                     ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fa4ad584c18
    type <pointer_type 0x7fa4ad094f18
        type <integer_type 0x7fa4ad0949d8 char public QI
            size <integer_cst 0x7fa4ad57cca8 constant 8>
            unit-size <integer_cst 0x7fa4ad57ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad5913f0 precision:8 min <integer_cst 0x7fa4ad08b720 -128> max <integer_cst 0x7fa4ad08b708 127>
            pointer_to_this <pointer_type 0x7fa4ad094f18>>
        unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fa4ad587168 ./benchmarks/git/double_free_1/git_df_1.c>>
    var <var_decl 0x7fa4ad0ad000 url>
    def_stmt url_24 = malloc (_6);
    version:24
    ptr-info 0x7fa4ad0a64f8>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
  199 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
  207 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_42 = VDEF <.MEM_28>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
  211 |         free(url);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:3 [0m
[40;31m  	possible double free [Looserules]:3 [0m
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <string_cst 0x7fa4ad778ba0
    type <array_type 0x7fa4ad09fe70
        type <integer_type 0x7fa4ad0949d8 char public QI
            size <integer_cst 0x7fa4ad57cca8 constant 8>
            unit-size <integer_cst 0x7fa4ad57ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad5913f0 precision:8 min <integer_cst 0x7fa4ad08b720 -128> max <integer_cst 0x7fa4ad08b708 127>
            pointer_to_this <pointer_type 0x7fa4ad094f18>>
        BLK
        size <integer_cst 0x7fa4ad08b978 constant 40>
        unit-size <integer_cst 0x7fa4ad08b960 constant 5>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7fa4ad09fdc8 type <integer_type 0x7fa4ad591000 sizetype>
            DI
            size <integer_cst 0x7fa4ad57cbb8 constant 64>
            unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad591738 precision:64 min <integer_cst 0x7fa4ad57cbe8 0> max <integer_cst 0x7fa4ad57ce10 4>>
        pointer_to_this <pointer_type 0x7fa4ad09ff18>>
    readonly constant static "%s%s\000">

dot graph START

======================================================================
 <ssa_name 0x7fa4ad584870
    type <pointer_type 0x7fa4ad094f18
        type <integer_type 0x7fa4ad0949d8 char public QI
            size <integer_cst 0x7fa4ad57cca8 constant 8>
            unit-size <integer_cst 0x7fa4ad57ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad5913f0 precision:8 min <integer_cst 0x7fa4ad08b720 -128> max <integer_cst 0x7fa4ad08b708 127>
            pointer_to_this <pointer_type 0x7fa4ad094f18>>
        unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fa4ad587168 ./benchmarks/git/double_free_1/git_df_1.c>>
   
    def_stmt _8 = _7->url;
    version:8
    ptr-info 0x7fa4ad0a6468>
 <ssa_name 0x7fa4ad584870
    type <pointer_type 0x7fa4ad094f18
        type <integer_type 0x7fa4ad0949d8 char public QI
            size <integer_cst 0x7fa4ad57cca8 constant 8>
            unit-size <integer_cst 0x7fa4ad57ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad5913f0 precision:8 min <integer_cst 0x7fa4ad08b720 -128> max <integer_cst 0x7fa4ad08b708 127>
            pointer_to_this <pointer_type 0x7fa4ad094f18>>
        unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fa4ad587168 ./benchmarks/git/double_free_1/git_df_1.c>>
   
    def_stmt _8 = _7->url;
    version:8
    ptr-info 0x7fa4ad0a6468>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fa4ad584870
    type <pointer_type 0x7fa4ad094f18
        type <integer_type 0x7fa4ad0949d8 char public QI
            size <integer_cst 0x7fa4ad57cca8 constant 8>
            unit-size <integer_cst 0x7fa4ad57ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad5913f0 precision:8 min <integer_cst 0x7fa4ad08b720 -128> max <integer_cst 0x7fa4ad08b708 127>
            pointer_to_this <pointer_type 0x7fa4ad094f18>>
        unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fa4ad587168 ./benchmarks/git/double_free_1/git_df_1.c>>
   
    def_stmt _8 = _7->url;
    version:8
    ptr-info 0x7fa4ad0a6468>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_31 = VDEF <.MEM_30>
sprintf (url_24, "%s%s", _8, path_22(D));
sprintf (url_24, "%s%s", _8, path_22(D));
./benchmarks/git/double_free_1/git_df_1.c:190:9: warning: use location
  190 |         sprintf(url, "%s%s", remote->url, path);
      |         ^
this stmt call this function :sprintf
trace fucntion name:sprintf 

 ================== trace ================== 
trace fucntion free:0 
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
  211 |         free(url);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
  207 |                 free(url);      /* double-free */
      |                 ^
this stmt call this function :free

 ================== find free stmt ================== 
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
  199 |                 free(url);      /* double-free */
      |                 ^
this stmt call this function :free

 ================== find free stmt ================== 
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find free stmt ================== 
curl_easy_setopt (_11, 0, url_24);
./benchmarks/git/double_free_1/git_df_1.c:194:9: warning: use location
  194 |         curl_easy_setopt(slot->curl, CURLOPT_URL, url);
      |         ^
this stmt call this function :curl_easy_setopt
trace fucntion name:curl_easy_setopt 

 ================== trace ================== 
trace fucntion free:3 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fa4ad584870
    type <pointer_type 0x7fa4ad094f18
        type <integer_type 0x7fa4ad0949d8 char public QI
            size <integer_cst 0x7fa4ad57cca8 constant 8>
            unit-size <integer_cst 0x7fa4ad57ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad5913f0 precision:8 min <integer_cst 0x7fa4ad08b720 -128> max <integer_cst 0x7fa4ad08b708 127>
            pointer_to_this <pointer_type 0x7fa4ad094f18>>
        unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fa4ad587168 ./benchmarks/git/double_free_1/git_df_1.c>>
   
    def_stmt _8 = _7->url;
    version:8
    ptr-info 0x7fa4ad0a6468>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:3 [0m
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fa4ad5848b8
    type <integer_type 0x7fa4ad5915e8 int public SI
        size <integer_cst 0x7fa4ad57cdf8 constant 32>
        unit-size <integer_cst 0x7fa4ad57ce10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad5915e8 precision:32 min <integer_cst 0x7fa4ad57cdb0 -2147483648> max <integer_cst 0x7fa4ad57cdc8 2147483647>
        pointer_to_this <pointer_type 0x7fa4ad5989d8>>
   
    def_stmt _9 = get_active_slot ();
    version:9>
 <ssa_name 0x7fa4ad5848b8
    type <integer_type 0x7fa4ad5915e8 int public SI
        size <integer_cst 0x7fa4ad57cdf8 constant 32>
        unit-size <integer_cst 0x7fa4ad57ce10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad5915e8 precision:32 min <integer_cst 0x7fa4ad57cdb0 -2147483648> max <integer_cst 0x7fa4ad57cdc8 2147483647>
        pointer_to_this <pointer_type 0x7fa4ad5989d8>>
   
    def_stmt _9 = get_active_slot ();
    version:9>

 ================== pre trace ptable ================== 
trace fucntion name:get_active_slot 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fa4ad5848b8
    type <integer_type 0x7fa4ad5915e8 int public SI
        size <integer_cst 0x7fa4ad57cdf8 constant 32>
        unit-size <integer_cst 0x7fa4ad57ce10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad5915e8 precision:32 min <integer_cst 0x7fa4ad57cdb0 -2147483648> max <integer_cst 0x7fa4ad57cdc8 2147483647>
        pointer_to_this <pointer_type 0x7fa4ad5989d8>>
   
    def_stmt _9 = get_active_slot ();
    version:9>
is Other function get_active_slot
 
 Start check Pointer Collect  

======================================================================
_10 = (long int) _9;
./benchmarks/git/double_free_1/git_df_1.c:192:16: warning: use location
  192 |         slot = get_active_slot();
      |                ^
slot_27 = (struct active_request_slot *) _10;
./benchmarks/git/double_free_1/git_df_1.c:192:14: warning: use location
  192 |         slot = get_active_slot();
      |              ^
run_active_slot (slot_27);
./benchmarks/git/double_free_1/git_df_1.c:198:17: warning: use location
  198 |                 run_active_slot(slot);
      |                 ^
this stmt call this function :run_active_slot
trace fucntion name:run_active_slot 

 ================== trace ================== 
trace fucntion free:0 
_13 = start_active_slot (slot_27);
./benchmarks/git/double_free_1/git_df_1.c:197:13: warning: use location
  197 |         if (start_active_slot(slot)) {
      |             ^
this stmt call this function :start_active_slot
trace fucntion name:start_active_slot 

 ================== trace ================== 
trace fucntion free:0 
if (_13 != 0)
./benchmarks/git/double_free_1/git_df_1.c:197:12: warning: use location
  197 |         if (start_active_slot(slot)) {
      |            ^
_12 = slot_27->curl;
./benchmarks/git/double_free_1/git_df_1.c:195:9: warning: use location
  195 |         curl_easy_setopt(slot->curl, CURLOPT_NOBODY, 1);
      |         ^
curl_easy_setopt (_12, 0, 1);
./benchmarks/git/double_free_1/git_df_1.c:195:9: warning: use location
this stmt call this function :curl_easy_setopt
trace fucntion name:curl_easy_setopt 

 ================== trace ================== 
trace fucntion free:0 
_11 = slot_27->curl;
./benchmarks/git/double_free_1/git_df_1.c:194:9: warning: use location
  194 |         curl_easy_setopt(slot->curl, CURLOPT_URL, url);
      |         ^
curl_easy_setopt (_11, 0, url_24);
./benchmarks/git/double_free_1/git_df_1.c:194:9: warning: use location
this stmt call this function :curl_easy_setopt
trace fucntion name:curl_easy_setopt 

 ================== trace ================== 
trace fucntion free:0 
slot_27->results = &results;
./benchmarks/git/double_free_1/git_df_1.c:193:23: warning: use location
  193 |         slot->results = &results;
      |                       ^
# .MEM_32 = VDEF <.MEM_31>
_9 = get_active_slot ();
_9 = get_active_slot ();
./benchmarks/git/double_free_1/git_df_1.c:192:16: warning: use location
  192 |         slot = get_active_slot();
      |                ^
this stmt call this function :get_active_slot
trace fucntion name:get_active_slot 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fa4ad5848b8
    type <integer_type 0x7fa4ad5915e8 int public SI
        size <integer_cst 0x7fa4ad57cdf8 constant 32>
        unit-size <integer_cst 0x7fa4ad57ce10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad5915e8 precision:32 min <integer_cst 0x7fa4ad57cdb0 -2147483648> max <integer_cst 0x7fa4ad57cdc8 2147483647>
        pointer_to_this <pointer_type 0x7fa4ad5989d8>>
   
    def_stmt _9 = get_active_slot ();
    version:9>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
  199 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
  207 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_42 = VDEF <.MEM_28>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
  211 |         free(url);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fa4ad584948
    type <pointer_type 0x7fa4ad09fa80
        type <record_type 0x7fa4ad09f9d8 CURL BLK
            size <integer_cst 0x7fa4ad57cc30 constant 0>
            unit-size <integer_cst 0x7fa4ad57cbe8 constant 0>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad09f930 context <translation_unit_decl 0x7fa4ad587168 ./benchmarks/git/double_free_1/git_df_1.c>
            pointer_to_this <pointer_type 0x7fa4ad09fa80>>
        unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _11 = slot_27->curl;
    version:11
    ptr-info 0x7fa4ad0a6480>
 <ssa_name 0x7fa4ad584948
    type <pointer_type 0x7fa4ad09fa80
        type <record_type 0x7fa4ad09f9d8 CURL BLK
            size <integer_cst 0x7fa4ad57cc30 constant 0>
            unit-size <integer_cst 0x7fa4ad57cbe8 constant 0>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad09f930 context <translation_unit_decl 0x7fa4ad587168 ./benchmarks/git/double_free_1/git_df_1.c>
            pointer_to_this <pointer_type 0x7fa4ad09fa80>>
        unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _11 = slot_27->curl;
    version:11
    ptr-info 0x7fa4ad0a6480>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fa4ad584948
    type <pointer_type 0x7fa4ad09fa80
        type <record_type 0x7fa4ad09f9d8 CURL BLK
            size <integer_cst 0x7fa4ad57cc30 constant 0>
            unit-size <integer_cst 0x7fa4ad57cbe8 constant 0>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad09f930 context <translation_unit_decl 0x7fa4ad587168 ./benchmarks/git/double_free_1/git_df_1.c>
            pointer_to_this <pointer_type 0x7fa4ad09fa80>>
        unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _11 = slot_27->curl;
    version:11
    ptr-info 0x7fa4ad0a6480>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_34 = VDEF <.MEM_33>
curl_easy_setopt (_11, 0, url_24);
curl_easy_setopt (_11, 0, url_24);
./benchmarks/git/double_free_1/git_df_1.c:194:9: warning: use location
  194 |         curl_easy_setopt(slot->curl, CURLOPT_URL, url);
      |         ^
this stmt call this function :curl_easy_setopt
trace fucntion name:curl_easy_setopt 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_34 = VDEF <.MEM_33>
curl_easy_setopt (_11, 0, url_24);
curl_easy_setopt (_11, 0, url_24);
./benchmarks/git/double_free_1/git_df_1.c:194:9: warning: use location
this stmt call this function :curl_easy_setopt
trace fucntion name:curl_easy_setopt 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fa4ad584948
    type <pointer_type 0x7fa4ad09fa80
        type <record_type 0x7fa4ad09f9d8 CURL BLK
            size <integer_cst 0x7fa4ad57cc30 constant 0>
            unit-size <integer_cst 0x7fa4ad57cbe8 constant 0>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad09f930 context <translation_unit_decl 0x7fa4ad587168 ./benchmarks/git/double_free_1/git_df_1.c>
            pointer_to_this <pointer_type 0x7fa4ad09fa80>>
        unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _11 = slot_27->curl;
    version:11
    ptr-info 0x7fa4ad0a6480>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
  199 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
  207 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_42 = VDEF <.MEM_28>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
  211 |         free(url);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fa4ad584990
    type <pointer_type 0x7fa4ad09fa80
        type <record_type 0x7fa4ad09f9d8 CURL BLK
            size <integer_cst 0x7fa4ad57cc30 constant 0>
            unit-size <integer_cst 0x7fa4ad57cbe8 constant 0>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad09f930 context <translation_unit_decl 0x7fa4ad587168 ./benchmarks/git/double_free_1/git_df_1.c>
            pointer_to_this <pointer_type 0x7fa4ad09fa80>>
        unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _12 = slot_27->curl;
    version:12
    ptr-info 0x7fa4ad0a6498>
 <ssa_name 0x7fa4ad584990
    type <pointer_type 0x7fa4ad09fa80
        type <record_type 0x7fa4ad09f9d8 CURL BLK
            size <integer_cst 0x7fa4ad57cc30 constant 0>
            unit-size <integer_cst 0x7fa4ad57cbe8 constant 0>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad09f930 context <translation_unit_decl 0x7fa4ad587168 ./benchmarks/git/double_free_1/git_df_1.c>
            pointer_to_this <pointer_type 0x7fa4ad09fa80>>
        unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _12 = slot_27->curl;
    version:12
    ptr-info 0x7fa4ad0a6498>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fa4ad584990
    type <pointer_type 0x7fa4ad09fa80
        type <record_type 0x7fa4ad09f9d8 CURL BLK
            size <integer_cst 0x7fa4ad57cc30 constant 0>
            unit-size <integer_cst 0x7fa4ad57cbe8 constant 0>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad09f930 context <translation_unit_decl 0x7fa4ad587168 ./benchmarks/git/double_free_1/git_df_1.c>
            pointer_to_this <pointer_type 0x7fa4ad09fa80>>
        unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _12 = slot_27->curl;
    version:12
    ptr-info 0x7fa4ad0a6498>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_35 = VDEF <.MEM_34>
curl_easy_setopt (_12, 0, 1);
curl_easy_setopt (_12, 0, 1);
./benchmarks/git/double_free_1/git_df_1.c:195:9: warning: use location
  195 |         curl_easy_setopt(slot->curl, CURLOPT_NOBODY, 1);
      |         ^
this stmt call this function :curl_easy_setopt
trace fucntion name:curl_easy_setopt 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_35 = VDEF <.MEM_34>
curl_easy_setopt (_12, 0, 1);
curl_easy_setopt (_12, 0, 1);
./benchmarks/git/double_free_1/git_df_1.c:195:9: warning: use location
this stmt call this function :curl_easy_setopt
trace fucntion name:curl_easy_setopt 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fa4ad584990
    type <pointer_type 0x7fa4ad09fa80
        type <record_type 0x7fa4ad09f9d8 CURL BLK
            size <integer_cst 0x7fa4ad57cc30 constant 0>
            unit-size <integer_cst 0x7fa4ad57cbe8 constant 0>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad09f930 context <translation_unit_decl 0x7fa4ad587168 ./benchmarks/git/double_free_1/git_df_1.c>
            pointer_to_this <pointer_type 0x7fa4ad09fa80>>
        unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _12 = slot_27->curl;
    version:12
    ptr-info 0x7fa4ad0a6498>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
  199 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
  207 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_42 = VDEF <.MEM_28>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
  211 |         free(url);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fa4ad584c60
    type <pointer_type 0x7fa4ad09f888
        type <record_type 0x7fa4ad09f7e0 active_request_slot BLK
            size <integer_cst 0x7fa4ad08b8b8 constant 576>
            unit-size <integer_cst 0x7fa4ad08b930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad09f7e0 fields <field_decl 0x7fa4ad09cda8 curl> context <translation_unit_decl 0x7fa4ad587168 ./benchmarks/git/double_free_1/git_df_1.c>
            pointer_to_this <pointer_type 0x7fa4ad09f888>>
        public unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fa4ade24f30 slot>
    def_stmt slot_27 = (struct active_request_slot *) _10;
    version:27
    ptr-info 0x7fa4ad0a6510>
 <ssa_name 0x7fa4ad584c60
    type <pointer_type 0x7fa4ad09f888
        type <record_type 0x7fa4ad09f7e0 active_request_slot BLK
            size <integer_cst 0x7fa4ad08b8b8 constant 576>
            unit-size <integer_cst 0x7fa4ad08b930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad09f7e0 fields <field_decl 0x7fa4ad09cda8 curl> context <translation_unit_decl 0x7fa4ad587168 ./benchmarks/git/double_free_1/git_df_1.c>
            pointer_to_this <pointer_type 0x7fa4ad09f888>>
        public unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fa4ade24f30 slot>
    def_stmt slot_27 = (struct active_request_slot *) _10;
    version:27
    ptr-info 0x7fa4ad0a6510>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fa4ad584c60
    type <pointer_type 0x7fa4ad09f888
        type <record_type 0x7fa4ad09f7e0 active_request_slot BLK
            size <integer_cst 0x7fa4ad08b8b8 constant 576>
            unit-size <integer_cst 0x7fa4ad08b930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad09f7e0 fields <field_decl 0x7fa4ad09cda8 curl> context <translation_unit_decl 0x7fa4ad587168 ./benchmarks/git/double_free_1/git_df_1.c>
            pointer_to_this <pointer_type 0x7fa4ad09f888>>
        public unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fa4ade24f30 slot>
    def_stmt slot_27 = (struct active_request_slot *) _10;
    version:27
    ptr-info 0x7fa4ad0a6510>
is Other function 
 
 Start check Pointer Collect  

======================================================================
run_active_slot (slot_27);
./benchmarks/git/double_free_1/git_df_1.c:198:17: warning: use location
  198 |                 run_active_slot(slot);
      |                 ^
this stmt call this function :run_active_slot
trace fucntion name:run_active_slot 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_36 = VDEF <.MEM_35>
_13 = start_active_slot (slot_27);
_13 = start_active_slot (slot_27);
./benchmarks/git/double_free_1/git_df_1.c:197:13: warning: use location
  197 |         if (start_active_slot(slot)) {
      |             ^
this stmt call this function :start_active_slot
trace fucntion name:start_active_slot 

 ================== trace ================== 
trace fucntion free:0 
if (_13 != 0)
./benchmarks/git/double_free_1/git_df_1.c:197:12: warning: use location
  197 |         if (start_active_slot(slot)) {
      |            ^
_12 = slot_27->curl;
./benchmarks/git/double_free_1/git_df_1.c:195:9: warning: use location
  195 |         curl_easy_setopt(slot->curl, CURLOPT_NOBODY, 1);
      |         ^
curl_easy_setopt (_12, 0, 1);
./benchmarks/git/double_free_1/git_df_1.c:195:9: warning: use location
this stmt call this function :curl_easy_setopt
trace fucntion name:curl_easy_setopt 

 ================== trace ================== 
trace fucntion free:0 
_11 = slot_27->curl;
./benchmarks/git/double_free_1/git_df_1.c:194:9: warning: use location
  194 |         curl_easy_setopt(slot->curl, CURLOPT_URL, url);
      |         ^
curl_easy_setopt (_11, 0, url_24);
./benchmarks/git/double_free_1/git_df_1.c:194:9: warning: use location
this stmt call this function :curl_easy_setopt
trace fucntion name:curl_easy_setopt 

 ================== trace ================== 
trace fucntion free:0 
slot_27->results = &results;
./benchmarks/git/double_free_1/git_df_1.c:193:23: warning: use location
  193 |         slot->results = &results;
      |                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fa4ad584c60
    type <pointer_type 0x7fa4ad09f888
        type <record_type 0x7fa4ad09f7e0 active_request_slot BLK
            size <integer_cst 0x7fa4ad08b8b8 constant 576>
            unit-size <integer_cst 0x7fa4ad08b930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad09f7e0 fields <field_decl 0x7fa4ad09cda8 curl> context <translation_unit_decl 0x7fa4ad587168 ./benchmarks/git/double_free_1/git_df_1.c>
            pointer_to_this <pointer_type 0x7fa4ad09f888>>
        public unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fa4ade24f30 slot>
    def_stmt slot_27 = (struct active_request_slot *) _10;
    version:27
    ptr-info 0x7fa4ad0a6510>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
  199 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
  207 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_42 = VDEF <.MEM_28>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
  211 |         free(url);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fa4ad5849d8
    type <integer_type 0x7fa4ad5915e8 int public SI
        size <integer_cst 0x7fa4ad57cdf8 constant 32>
        unit-size <integer_cst 0x7fa4ad57ce10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad5915e8 precision:32 min <integer_cst 0x7fa4ad57cdb0 -2147483648> max <integer_cst 0x7fa4ad57cdc8 2147483647>
        pointer_to_this <pointer_type 0x7fa4ad5989d8>>
   
    def_stmt _13 = start_active_slot (slot_27);
    version:13>
 <ssa_name 0x7fa4ad5849d8
    type <integer_type 0x7fa4ad5915e8 int public SI
        size <integer_cst 0x7fa4ad57cdf8 constant 32>
        unit-size <integer_cst 0x7fa4ad57ce10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad5915e8 precision:32 min <integer_cst 0x7fa4ad57cdb0 -2147483648> max <integer_cst 0x7fa4ad57cdc8 2147483647>
        pointer_to_this <pointer_type 0x7fa4ad5989d8>>
   
    def_stmt _13 = start_active_slot (slot_27);
    version:13>

 ================== pre trace ptable ================== 
trace fucntion name:start_active_slot 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fa4ad5849d8
    type <integer_type 0x7fa4ad5915e8 int public SI
        size <integer_cst 0x7fa4ad57cdf8 constant 32>
        unit-size <integer_cst 0x7fa4ad57ce10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad5915e8 precision:32 min <integer_cst 0x7fa4ad57cdb0 -2147483648> max <integer_cst 0x7fa4ad57cdc8 2147483647>
        pointer_to_this <pointer_type 0x7fa4ad5989d8>>
   
    def_stmt _13 = start_active_slot (slot_27);
    version:13>
is Other function start_active_slot
 
 Start check Pointer Collect  

======================================================================
run_active_slot (slot_27);
./benchmarks/git/double_free_1/git_df_1.c:198:17: warning: use location
  198 |                 run_active_slot(slot);
      |                 ^
this stmt call this function :run_active_slot
trace fucntion name:run_active_slot 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_36 = VDEF <.MEM_35>
_13 = start_active_slot (slot_27);
_13 = start_active_slot (slot_27);
./benchmarks/git/double_free_1/git_df_1.c:197:13: warning: use location
  197 |         if (start_active_slot(slot)) {
      |             ^
this stmt call this function :start_active_slot
trace fucntion name:start_active_slot 

 ================== trace ================== 
trace fucntion free:0 
if (_13 != 0)
./benchmarks/git/double_free_1/git_df_1.c:197:12: warning: use location
  197 |         if (start_active_slot(slot)) {
      |            ^
_12 = slot_27->curl;
./benchmarks/git/double_free_1/git_df_1.c:195:9: warning: use location
  195 |         curl_easy_setopt(slot->curl, CURLOPT_NOBODY, 1);
      |         ^
curl_easy_setopt (_12, 0, 1);
./benchmarks/git/double_free_1/git_df_1.c:195:9: warning: use location
this stmt call this function :curl_easy_setopt
trace fucntion name:curl_easy_setopt 

 ================== trace ================== 
trace fucntion free:0 
_11 = slot_27->curl;
./benchmarks/git/double_free_1/git_df_1.c:194:9: warning: use location
  194 |         curl_easy_setopt(slot->curl, CURLOPT_URL, url);
      |         ^
curl_easy_setopt (_11, 0, url_24);
./benchmarks/git/double_free_1/git_df_1.c:194:9: warning: use location
this stmt call this function :curl_easy_setopt
trace fucntion name:curl_easy_setopt 

 ================== trace ================== 
trace fucntion free:0 
slot_27->results = &results;
./benchmarks/git/double_free_1/git_df_1.c:193:23: warning: use location
  193 |         slot->results = &results;
      |                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fa4ad5849d8
    type <integer_type 0x7fa4ad5915e8 int public SI
        size <integer_cst 0x7fa4ad57cdf8 constant 32>
        unit-size <integer_cst 0x7fa4ad57ce10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad5915e8 precision:32 min <integer_cst 0x7fa4ad57cdb0 -2147483648> max <integer_cst 0x7fa4ad57cdc8 2147483647>
        pointer_to_this <pointer_type 0x7fa4ad5989d8>>
   
    def_stmt _13 = start_active_slot (slot_27);
    version:13>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
  199 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
  207 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_42 = VDEF <.MEM_28>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
  211 |         free(url);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fa4ad584af8
    type <pointer_type 0x7fa4ad09b7e0
        type <record_type 0x7fa4ad09b738 FILE BLK
            size <integer_cst 0x7fa4ad08b780 constant 1728>
            unit-size <integer_cst 0x7fa4ad08b8a0 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad09b690 fields <field_decl 0x7fa4ad09c688 _flags> context <translation_unit_decl 0x7fa4ad587168 ./benchmarks/git/double_free_1/git_df_1.c>
            pointer_to_this <pointer_type 0x7fa4ad09b7e0>>
        unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fa4ad0a02a0>>
   
    def_stmt _17 = stderr;
    version:17
    ptr-info 0x7fa4ad0a64b0>
 <ssa_name 0x7fa4ad584af8
    type <pointer_type 0x7fa4ad09b7e0
        type <record_type 0x7fa4ad09b738 FILE BLK
            size <integer_cst 0x7fa4ad08b780 constant 1728>
            unit-size <integer_cst 0x7fa4ad08b8a0 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad09b690 fields <field_decl 0x7fa4ad09c688 _flags> context <translation_unit_decl 0x7fa4ad587168 ./benchmarks/git/double_free_1/git_df_1.c>
            pointer_to_this <pointer_type 0x7fa4ad09b7e0>>
        unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fa4ad0a02a0>>
   
    def_stmt _17 = stderr;
    version:17
    ptr-info 0x7fa4ad0a64b0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fa4ad584af8
    type <pointer_type 0x7fa4ad09b7e0
        type <record_type 0x7fa4ad09b738 FILE BLK
            size <integer_cst 0x7fa4ad08b780 constant 1728>
            unit-size <integer_cst 0x7fa4ad08b8a0 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad09b690 fields <field_decl 0x7fa4ad09c688 _flags> context <translation_unit_decl 0x7fa4ad587168 ./benchmarks/git/double_free_1/git_df_1.c>
            pointer_to_this <pointer_type 0x7fa4ad09b7e0>>
        unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fa4ad0a02a0>>
   
    def_stmt _17 = stderr;
    version:17
    ptr-info 0x7fa4ad0a64b0>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_41 = VDEF <.MEM_40>
fprintf (_17, "HEAD HTTP error %ld\n", _16);
fprintf (_17, "HEAD HTTP error %ld\n", _16);
./benchmarks/git/double_free_1/git_df_1.c:205:25: warning: use location
  205 |                         fprintf(stderr, "HEAD HTTP error %ld\n", results.http_code);
      |                         ^
this stmt call this function :fprintf
trace fucntion name:fprintf 

 ================== trace ================== 
trace fucntion free:0 
_17 = stderr;
./benchmarks/git/double_free_1/git_df_1.c:205:25: warning: use location
_18 = stderr;
./benchmarks/git/double_free_1/git_df_1.c:208:17: warning: use location
  208 |                 fprintf(stderr, "Unable to start HEAD request\n");
      |                 ^
__builtin_fwrite ("Unable to start HEAD request\n", 1, 29, _18);
./benchmarks/git/double_free_1/git_df_1.c:208:17: warning: use location
this stmt call this function :__builtin_fwrite
trace fucntion name:__builtin_fwrite 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fa4ad584af8
    type <pointer_type 0x7fa4ad09b7e0
        type <record_type 0x7fa4ad09b738 FILE BLK
            size <integer_cst 0x7fa4ad08b780 constant 1728>
            unit-size <integer_cst 0x7fa4ad08b8a0 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad09b690 fields <field_decl 0x7fa4ad09c688 _flags> context <translation_unit_decl 0x7fa4ad587168 ./benchmarks/git/double_free_1/git_df_1.c>
            pointer_to_this <pointer_type 0x7fa4ad09b7e0>>
        unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fa4ad0a02a0>>
   
    def_stmt _17 = stderr;
    version:17
    ptr-info 0x7fa4ad0a64b0>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
  199 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
  207 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_42 = VDEF <.MEM_28>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
  211 |         free(url);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: free in this location
  199 |                 free(url);      /* double-free */
      |                 ^

===== possiable asias =====
# .MEM_41 = VDEF <.MEM_40>
fprintf (_17, "HEAD HTTP error %ld\n", _16);
./benchmarks/git/double_free_1/git_df_1.c:205:25: warning: use location
  205 |                         fprintf(stderr, "HEAD HTTP error %ld\n", results.http_code);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: free in this location
  199 |                 free(url);      /* double-free */
      |                 ^

===== possiable asias =====
# VUSE <.MEM_40>
_17 = stderr;
./benchmarks/git/double_free_1/git_df_1.c:205:25: warning: use location
  205 |                         fprintf(stderr, "HEAD HTTP error %ld\n", results.http_code);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: free in this location
  199 |                 free(url);      /* double-free */
      |                 ^

===== possiable asias =====
# VUSE <.MEM_37>
_18 = stderr;
./benchmarks/git/double_free_1/git_df_1.c:208:17: warning: use location
  208 |                 fprintf(stderr, "Unable to start HEAD request\n");
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: free in this location
  207 |                 free(url);      /* double-free */
      |                 ^

===== possiable asias =====
# VUSE <.MEM_37>
_18 = stderr;
./benchmarks/git/double_free_1/git_df_1.c:208:17: warning: use location
  208 |                 fprintf(stderr, "Unable to start HEAD request\n");
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: free in this location
  199 |                 free(url);      /* double-free */
      |                 ^

===== possiable asias =====
# .MEM_38 = VDEF <.MEM_37>
__builtin_fwrite ("Unable to start HEAD request\n", 1, 29, _18);
./benchmarks/git/double_free_1/git_df_1.c:208:17: warning: use location
  208 |                 fprintf(stderr, "Unable to start HEAD request\n");
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: free in this location
  207 |                 free(url);      /* double-free */
      |                 ^

===== possiable asias =====
# .MEM_38 = VDEF <.MEM_37>
__builtin_fwrite ("Unable to start HEAD request\n", 1, 29, _18);
./benchmarks/git/double_free_1/git_df_1.c:208:17: warning: use location
  208 |                 fprintf(stderr, "Unable to start HEAD request\n");
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <string_cst 0x7fa4ad57ab70
    type <array_type 0x7fa4ad0a0498
        type <integer_type 0x7fa4ad0949d8 char public QI
            size <integer_cst 0x7fa4ad57cca8 constant 8>
            unit-size <integer_cst 0x7fa4ad57ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad5913f0 precision:8 min <integer_cst 0x7fa4ad08b720 -128> max <integer_cst 0x7fa4ad08b708 127>
            pointer_to_this <pointer_type 0x7fa4ad094f18>>
        BLK
        size <integer_cst 0x7fa4ad08b9a8 constant 168>
        unit-size <integer_cst 0x7fa4ad08b990 constant 21>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7fa4ad0a03f0 type <integer_type 0x7fa4ad591000 sizetype>
            DI
            size <integer_cst 0x7fa4ad57cbb8 constant 64>
            unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad591738 precision:64 min <integer_cst 0x7fa4ad57cbe8 0> max <integer_cst 0x7fa4ad08b7b0 20>>
        pointer_to_this <pointer_type 0x7fa4ad0a0540>>
    readonly constant static "HEAD HTTP error %ld\012\000">

dot graph START

======================================================================
 <ssa_name 0x7fa4ad584ab0
    type <integer_type 0x7fa4ad591738 long int DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad591738 precision:64 min <integer_cst 0x7fa4ad57ce40 -9223372036854775808> max <integer_cst 0x7fa4ad57ce58 9223372036854775807>
        pointer_to_this <pointer_type 0x7fa4ad59d738>>
   
    def_stmt _16 = results.http_code;
    version:16>
 <ssa_name 0x7fa4ad584ab0
    type <integer_type 0x7fa4ad591738 long int DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad591738 precision:64 min <integer_cst 0x7fa4ad57ce40 -9223372036854775808> max <integer_cst 0x7fa4ad57ce58 9223372036854775807>
        pointer_to_this <pointer_type 0x7fa4ad59d738>>
   
    def_stmt _16 = results.http_code;
    version:16>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fa4ad584ab0
    type <integer_type 0x7fa4ad591738 long int DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad591738 precision:64 min <integer_cst 0x7fa4ad57ce40 -9223372036854775808> max <integer_cst 0x7fa4ad57ce58 9223372036854775807>
        pointer_to_this <pointer_type 0x7fa4ad59d738>>
   
    def_stmt _16 = results.http_code;
    version:16>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_41 = VDEF <.MEM_40>
fprintf (_17, "HEAD HTTP error %ld\n", _16);
fprintf (_17, "HEAD HTTP error %ld\n", _16);
./benchmarks/git/double_free_1/git_df_1.c:205:25: warning: use location
  205 |                         fprintf(stderr, "HEAD HTTP error %ld\n", results.http_code);
      |                         ^
this stmt call this function :fprintf
trace fucntion name:fprintf 

 ================== trace ================== 
trace fucntion free:0 
_17 = stderr;
./benchmarks/git/double_free_1/git_df_1.c:205:25: warning: use location
_18 = stderr;
./benchmarks/git/double_free_1/git_df_1.c:208:17: warning: use location
  208 |                 fprintf(stderr, "Unable to start HEAD request\n");
      |                 ^
__builtin_fwrite ("Unable to start HEAD request\n", 1, 29, _18);
./benchmarks/git/double_free_1/git_df_1.c:208:17: warning: use location
this stmt call this function :__builtin_fwrite
trace fucntion name:__builtin_fwrite 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fa4ad584ab0
    type <integer_type 0x7fa4ad591738 long int DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad591738 precision:64 min <integer_cst 0x7fa4ad57ce40 -9223372036854775808> max <integer_cst 0x7fa4ad57ce58 9223372036854775807>
        pointer_to_this <pointer_type 0x7fa4ad59d738>>
   
    def_stmt _16 = results.http_code;
    version:16>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
  199 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
  207 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_42 = VDEF <.MEM_28>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
  211 |         free(url);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: free in this location
  199 |                 free(url);      /* double-free */
      |                 ^

===== possiable asias =====
# .MEM_41 = VDEF <.MEM_40>
fprintf (_17, "HEAD HTTP error %ld\n", _16);
./benchmarks/git/double_free_1/git_df_1.c:205:25: warning: use location
  205 |                         fprintf(stderr, "HEAD HTTP error %ld\n", results.http_code);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: free in this location
  199 |                 free(url);      /* double-free */
      |                 ^

===== possiable asias =====
# VUSE <.MEM_40>
_17 = stderr;
./benchmarks/git/double_free_1/git_df_1.c:205:25: warning: use location
  205 |                         fprintf(stderr, "HEAD HTTP error %ld\n", results.http_code);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: free in this location
  199 |                 free(url);      /* double-free */
      |                 ^

===== possiable asias =====
# VUSE <.MEM_37>
_18 = stderr;
./benchmarks/git/double_free_1/git_df_1.c:208:17: warning: use location
  208 |                 fprintf(stderr, "Unable to start HEAD request\n");
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: free in this location
  207 |                 free(url);      /* double-free */
      |                 ^

===== possiable asias =====
# VUSE <.MEM_37>
_18 = stderr;
./benchmarks/git/double_free_1/git_df_1.c:208:17: warning: use location
  208 |                 fprintf(stderr, "Unable to start HEAD request\n");
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: free in this location
  199 |                 free(url);      /* double-free */
      |                 ^

===== possiable asias =====
# .MEM_38 = VDEF <.MEM_37>
__builtin_fwrite ("Unable to start HEAD request\n", 1, 29, _18);
./benchmarks/git/double_free_1/git_df_1.c:208:17: warning: use location
  208 |                 fprintf(stderr, "Unable to start HEAD request\n");
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: free in this location
  207 |                 free(url);      /* double-free */
      |                 ^

===== possiable asias =====
# .MEM_38 = VDEF <.MEM_37>
__builtin_fwrite ("Unable to start HEAD request\n", 1, 29, _18);
./benchmarks/git/double_free_1/git_df_1.c:208:17: warning: use location
  208 |                 fprintf(stderr, "Unable to start HEAD request\n");
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <string_cst 0x7fa4ad5860e0
    type <array_type 0x7fa4ad0a0738
        type <integer_type 0x7fa4ad0949d8 char public QI
            size <integer_cst 0x7fa4ad57cca8 constant 8>
            unit-size <integer_cst 0x7fa4ad57ccc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad5913f0 precision:8 min <integer_cst 0x7fa4ad08b720 -128> max <integer_cst 0x7fa4ad08b708 127>
            pointer_to_this <pointer_type 0x7fa4ad094f18>>
        BLK
        size <integer_cst 0x7fa4ad08b9f0 constant 240>
        unit-size <integer_cst 0x7fa4ad08b9d8 constant 30>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7fa4ad0a0690 type <integer_type 0x7fa4ad591000 sizetype>
            DI
            size <integer_cst 0x7fa4ad57cbb8 constant 64>
            unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad591738 precision:64 min <integer_cst 0x7fa4ad57cbe8 0> max <integer_cst 0x7fa4ad08b9c0 29>>
        pointer_to_this <pointer_type 0x7fa4ad0a07e0>>
    readonly constant static "Unable to start HEAD request\012\000">

dot graph START

======================================================================
 <ssa_name 0x7fa4ad584b40
    type <pointer_type 0x7fa4ad09b7e0
        type <record_type 0x7fa4ad09b738 FILE BLK
            size <integer_cst 0x7fa4ad08b780 constant 1728>
            unit-size <integer_cst 0x7fa4ad08b8a0 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad09b690 fields <field_decl 0x7fa4ad09c688 _flags> context <translation_unit_decl 0x7fa4ad587168 ./benchmarks/git/double_free_1/git_df_1.c>
            pointer_to_this <pointer_type 0x7fa4ad09b7e0>>
        unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fa4ad0a02a0>>
   
    def_stmt _18 = stderr;
    version:18
    ptr-info 0x7fa4ad0a64c8>
 <ssa_name 0x7fa4ad584b40
    type <pointer_type 0x7fa4ad09b7e0
        type <record_type 0x7fa4ad09b738 FILE BLK
            size <integer_cst 0x7fa4ad08b780 constant 1728>
            unit-size <integer_cst 0x7fa4ad08b8a0 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad09b690 fields <field_decl 0x7fa4ad09c688 _flags> context <translation_unit_decl 0x7fa4ad587168 ./benchmarks/git/double_free_1/git_df_1.c>
            pointer_to_this <pointer_type 0x7fa4ad09b7e0>>
        unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fa4ad0a02a0>>
   
    def_stmt _18 = stderr;
    version:18
    ptr-info 0x7fa4ad0a64c8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fa4ad584b40
    type <pointer_type 0x7fa4ad09b7e0
        type <record_type 0x7fa4ad09b738 FILE BLK
            size <integer_cst 0x7fa4ad08b780 constant 1728>
            unit-size <integer_cst 0x7fa4ad08b8a0 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad09b690 fields <field_decl 0x7fa4ad09c688 _flags> context <translation_unit_decl 0x7fa4ad587168 ./benchmarks/git/double_free_1/git_df_1.c>
            pointer_to_this <pointer_type 0x7fa4ad09b7e0>>
        unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fa4ad0a02a0>>
   
    def_stmt _18 = stderr;
    version:18
    ptr-info 0x7fa4ad0a64c8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_38 = VDEF <.MEM_37>
__builtin_fwrite ("Unable to start HEAD request\n", 1, 29, _18);
__builtin_fwrite ("Unable to start HEAD request\n", 1, 29, _18);
./benchmarks/git/double_free_1/git_df_1.c:208:17: warning: use location
this stmt call this function :__builtin_fwrite
trace fucntion name:__builtin_fwrite 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_38 = VDEF <.MEM_37>
__builtin_fwrite ("Unable to start HEAD request\n", 1, 29, _18);
__builtin_fwrite ("Unable to start HEAD request\n", 1, 29, _18);
./benchmarks/git/double_free_1/git_df_1.c:208:17: warning: use location
this stmt call this function :__builtin_fwrite
trace fucntion name:__builtin_fwrite 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fa4ad584b40
    type <pointer_type 0x7fa4ad09b7e0
        type <record_type 0x7fa4ad09b738 FILE BLK
            size <integer_cst 0x7fa4ad08b780 constant 1728>
            unit-size <integer_cst 0x7fa4ad08b8a0 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad09b690 fields <field_decl 0x7fa4ad09c688 _flags> context <translation_unit_decl 0x7fa4ad587168 ./benchmarks/git/double_free_1/git_df_1.c>
            pointer_to_this <pointer_type 0x7fa4ad09b7e0>>
        unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fa4ad0a02a0>>
   
    def_stmt _18 = stderr;
    version:18
    ptr-info 0x7fa4ad0a64c8>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
  199 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
  207 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_42 = VDEF <.MEM_28>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
  211 |         free(url);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: free in this location
  199 |                 free(url);      /* double-free */
      |                 ^

===== possiable asias =====
# .MEM_38 = VDEF <.MEM_37>
__builtin_fwrite ("Unable to start HEAD request\n", 1, 29, _18);
./benchmarks/git/double_free_1/git_df_1.c:208:17: warning: use location
  208 |                 fprintf(stderr, "Unable to start HEAD request\n");
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: free in this location
  207 |                 free(url);      /* double-free */
      |                 ^

===== possiable asias =====
# .MEM_38 = VDEF <.MEM_37>
__builtin_fwrite ("Unable to start HEAD request\n", 1, 29, _18);
./benchmarks/git/double_free_1/git_df_1.c:208:17: warning: use location
  208 |                 fprintf(stderr, "Unable to start HEAD request\n");
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: free in this location
  199 |                 free(url);      /* double-free */
      |                 ^

===== possiable asias =====
# .MEM_38 = VDEF <.MEM_37>
__builtin_fwrite ("Unable to start HEAD request\n", 1, 29, _18);
./benchmarks/git/double_free_1/git_df_1.c:208:17: warning: use location
  208 |                 fprintf(stderr, "Unable to start HEAD request\n");
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: free in this location
  207 |                 free(url);      /* double-free */
      |                 ^

===== possiable asias =====
# .MEM_38 = VDEF <.MEM_37>
__builtin_fwrite ("Unable to start HEAD request\n", 1, 29, _18);
./benchmarks/git/double_free_1/git_df_1.c:208:17: warning: use location
  208 |                 fprintf(stderr, "Unable to start HEAD request\n");
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fa4ad5847e0
    type <integer_type 0x7fa4ad5917e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad591738 precision:64 min <integer_cst 0x7fa4ad57ce88 0> max <integer_cst 0x7fa4ad57d500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fa4ad59d7e0>>
   
    def_stmt _6 = _5 + 1;
    version:6>
 <ssa_name 0x7fa4ad5847e0
    type <integer_type 0x7fa4ad5917e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad591738 precision:64 min <integer_cst 0x7fa4ad57ce88 0> max <integer_cst 0x7fa4ad57d500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fa4ad59d7e0>>
   
    def_stmt _6 = _5 + 1;
    version:6>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fa4ad5847e0
    type <integer_type 0x7fa4ad5917e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fa4ad57cbb8 constant 64>
        unit-size <integer_cst 0x7fa4ad57cbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fa4ad591738 precision:64 min <integer_cst 0x7fa4ad57ce88 0> max <integer_cst 0x7fa4ad57d500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fa4ad59d7e0>>
   
    def_stmt _6 = _5 + 1;
    version:6>
is Other function 

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:remote_exists========= [0m
fucntion collect path finsh

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
remote_exists ("path");
return 0;

=======Mapping node_fun:remote_exists=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = remote;
_2 = _1->url;
_3 = strlen (_2);
_4 = strlen (path_22(D));
_5 = _3 + _4;
_6 = _5 + 1;
url_24 = malloc (_6);
_7 = remote;
_8 = _7->url;
sprintf (url_24, "%s%s", _8, path_22(D));
_9 = get_active_slot ();
_10 = (long int) _9;
slot_27 = (struct active_request_slot *) _10;
slot_27->results = &results;
_11 = slot_27->curl;
curl_easy_setopt (_11, 0, url_24);
_12 = slot_27->curl;
curl_easy_setopt (_12, 0, 1);
_13 = start_active_slot (slot_27);
if (_13 != 0)
  goto <bb 3>; [50.00%]
else
  goto <bb 6>; [50.00%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 536870913]:
run_active_slot (slot_27);
free (url_24);
_14 = results.http_code;
if (_14 == 404)
  goto <bb 7>; [34.00%]
else
  goto <bb 4>; [66.00%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 354334800]:
_15 = results.curl_result;
if (_15 == 0)
  goto <bb 7>; [67.00%]
else
  goto <bb 5>; [33.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 116930483]:
_16 = results.http_code;
_17 = stderr;
fprintf (_17, "HEAD HTTP error %ld\n", _16);
goto <bb 7>; [100.00%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 536870913]:
free (url_24);
_18 = stderr;
__builtin_fwrite ("Unable to start HEAD request\n", 1, 29, _18);

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 1073741824]:
# ret_19 = PHI <0(3), 1(4), -1(5), -1(6)>
free (url_24);
results ={v} {CLOBBER};
return ret_19;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    gimple malloc count : 1 [0m
[40;34m    gimple free   count : 3 [0m
[40;34m    all ptable point : 22 [0m
[40;34m    analyzable ptable point : 18 [0m
[40;34m    used_stmt array stack totalsize of : 0.001400 mb[0m
[40;34m    collect time: : 0.009079 s [0m
[40;34m    algorithm time: 0.072579 s [0m
[40;34m    gimple stmt count : : 37 [0m
[40;34m    this report analysis in Fri Feb 18 12:19:06 2022
 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.01 ( 14%)   0.00 (  0%)  2157k ( 90%)
 phase opt and generate             :   0.02 (100%)   0.06 ( 86%)   0.09 (100%)   183k (  8%)
 callgraph functions expansion      :   0.01 ( 50%)   0.01 ( 14%)   0.01 ( 11%)   135k (  6%)
 df live regs                       :   0.00 (  0%)   0.00 (  0%)   0.01 ( 11%)     0  (  0%)
 tree CFG cleanup                   :   0.00 (  0%)   0.00 (  0%)   0.01 ( 11%)  1064  (  0%)
 dominator optimization             :   0.01 ( 50%)   0.01 ( 14%)   0.00 (  0%)  2648  (  0%)
 plugin execution                   :   0.01 ( 50%)   0.05 ( 71%)   0.07 ( 78%)   336  (  0%)
 TOTAL                              :   0.02          0.07          0.09         2393k
/usr/bin/ld: /tmp/ccnGnZkE.ltrans0.ltrans.o: in function `remote_exists':
<artificial>:(.text+0x51): undefined reference to `get_active_slot'
/usr/bin/ld: <artificial>:(.text+0x6d): undefined reference to `curl_easy_setopt'
/usr/bin/ld: <artificial>:(.text+0x84): undefined reference to `curl_easy_setopt'
/usr/bin/ld: <artificial>:(.text+0x91): undefined reference to `start_active_slot'
/usr/bin/ld: <artificial>:(.text+0xa2): undefined reference to `run_active_slot'
collect2: error: ld returned 1 exit status
