In file included from ./benchmarks/git/double_free_1/git_df_1.c:10:
./benchmarks/git/double_free_1/../git.h: In function ‘copy_array’:
./benchmarks/git/double_free_1/../git.h:161:17: warning: implicit declaration of function ‘memcpy’ [-Wimplicit-function-declaration]
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                 ^~~~~~
./benchmarks/git/double_free_1/../git.h:1:1: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
  +++ |+#include <string.h>
    1 | #define STRING_LIST_INIT_NODUP { NULL, 0, 0, 0, NULL }
./benchmarks/git/double_free_1/../git.h:161:17: warning: incompatible implicit declaration of built-in function ‘memcpy’ [-Wbuiltin-declaration-mismatch]
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                 ^~~~~~
./benchmarks/git/double_free_1/../git.h:161:17: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
./benchmarks/git/double_free_1/../git.h:161:34: warning: implicit declaration of function ‘st_mult’ [-Wimplicit-function-declaration]
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                                  ^~~~~~~
./benchmarks/git/double_free_1/../git.h: In function ‘move_array’:
./benchmarks/git/double_free_1/../git.h:169:17: warning: implicit declaration of function ‘memmove’ [-Wimplicit-function-declaration]
  169 |                 memmove(dst, src, st_mult(size, n));
      |                 ^~~~~~~
./benchmarks/git/double_free_1/../git.h:169:17: note: include ‘<string.h>’ or provide a declaration of ‘memmove’
./benchmarks/git/double_free_1/../git.h:169:17: warning: incompatible implicit declaration of built-in function ‘memmove’ [-Wbuiltin-declaration-mismatch]
./benchmarks/git/double_free_1/../git.h:169:17: note: include ‘<string.h>’ or provide a declaration of ‘memmove’
In file included from ./benchmarks/git/double_free_1/git_df_1.c:9:
./benchmarks/git/double_free_1/../git.h: In function ‘xstrdup_or_null’:
./benchmarks/git/double_free_1/../stdio.h:138:20: warning: implicit declaration of function ‘strdup’ [-Wimplicit-function-declaration]
  138 | #define xstrdup(a) strdup(a)
      |                    ^~~~~~
./benchmarks/git/double_free_1/../git.h:174:22: note: in expansion of macro ‘xstrdup’
  174 |         return str ? xstrdup(str) : NULL;
      |                      ^~~~~~~
./benchmarks/git/double_free_1/../stdio.h:138:20: warning: incompatible implicit declaration of built-in function ‘strdup’ [-Wbuiltin-declaration-mismatch]
  138 | #define xstrdup(a) strdup(a)
      |                    ^~~~~~
./benchmarks/git/double_free_1/../git.h:174:22: note: in expansion of macro ‘xstrdup’
  174 |         return str ? xstrdup(str) : NULL;
      |                      ^~~~~~~
In file included from ./benchmarks/git/double_free_1/git_df_1.c:10:
./benchmarks/git/double_free_1/../git.h: At top level:
./benchmarks/git/double_free_1/../git.h:236:62: warning: ‘struct archiver_args’ declared inside parameter list will not be visible outside of this definition or declaration
  236 |         int (*write_archive)(const struct archiver *, struct archiver_args *);
      |                                                              ^~~~~~~~~~~~~
./benchmarks/git/double_free_1/../git.h: In function ‘strbuf_swap’:
./benchmarks/git/double_free_1/../git.h:126:9: warning: incompatible implicit declaration of built-in function ‘memcpy’ [-Wbuiltin-declaration-mismatch]
  126 |         memcpy(_swap_buffer, _swap_a_ptr, sizeof(a));           \
      |         ^~~~~~
./benchmarks/git/double_free_1/../git.h:407:9: note: in expansion of macro ‘SWAP’
  407 |         SWAP(*a, *b);
      |         ^~~~
./benchmarks/git/double_free_1/../git.h:126:9: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
  126 |         memcpy(_swap_buffer, _swap_a_ptr, sizeof(a));           \
      |         ^~~~~~
./benchmarks/git/double_free_1/../git.h:407:9: note: in expansion of macro ‘SWAP’
  407 |         SWAP(*a, *b);
      |         ^~~~
In file included from ./benchmarks/git/double_free_1/git_df_1.c:9:
./benchmarks/git/double_free_1/git_df_1.c: In function ‘remote_exists’:
./benchmarks/git/double_free_1/git_df_1.c:185:29: warning: implicit declaration of function ‘strlen’ [-Wimplicit-function-declaration]
  185 |         char *url = xmalloc(strlen(remote->url) + strlen(path) + 1);    /* allocation site */
      |                             ^~~~~~
./benchmarks/git/double_free_1/../stdio.h:137:27: note: in definition of macro ‘xmalloc’
  137 | #define xmalloc(a) malloc(a)
      |                           ^
./benchmarks/git/double_free_1/git_df_1.c:11:1: note: include ‘<string.h>’ or provide a declaration of ‘strlen’
   10 | #include "../git.h"
  +++ |+#include <string.h>
   11 | 
In file included from ./benchmarks/git/double_free_1/git_df_1.c:9:
./benchmarks/git/double_free_1/git_df_1.c:185:29: warning: incompatible implicit declaration of built-in function ‘strlen’ [-Wbuiltin-declaration-mismatch]
  185 |         char *url = xmalloc(strlen(remote->url) + strlen(path) + 1);    /* allocation site */
      |                             ^~~~~~
./benchmarks/git/double_free_1/../stdio.h:137:27: note: in definition of macro ‘xmalloc’
  137 | #define xmalloc(a) malloc(a)
      |                           ^
./benchmarks/git/double_free_1/git_df_1.c:185:29: note: include ‘<string.h>’ or provide a declaration of ‘strlen’
  185 |         char *url = xmalloc(strlen(remote->url) + strlen(path) + 1);    /* allocation site */
      |                             ^~~~~~
./benchmarks/git/double_free_1/../stdio.h:137:27: note: in definition of macro ‘xmalloc’
  137 | #define xmalloc(a) malloc(a)
      |                           ^
./benchmarks/git/double_free_1/git_df_1.c:192:16: warning: implicit declaration of function ‘get_active_slot’ [-Wimplicit-function-declaration]
  192 |         slot = get_active_slot();
      |                ^~~~~~~~~~~~~~~
./benchmarks/git/double_free_1/git_df_1.c:192:14: warning: assignment to ‘struct active_request_slot *’ from ‘int’ makes pointer from integer without a cast [-Wint-conversion]
  192 |         slot = get_active_slot();
      |              ^
./benchmarks/git/double_free_1/git_df_1.c:194:9: warning: implicit declaration of function ‘curl_easy_setopt’ [-Wimplicit-function-declaration]
  194 |         curl_easy_setopt(slot->curl, CURLOPT_URL, url);
      |         ^~~~~~~~~~~~~~~~
./benchmarks/git/double_free_1/git_df_1.c:197:13: warning: implicit declaration of function ‘start_active_slot’ [-Wimplicit-function-declaration]
  197 |         if (start_active_slot(slot)) {
      |             ^~~~~~~~~~~~~~~~~
./benchmarks/git/double_free_1/git_df_1.c:198:17: warning: implicit declaration of function ‘run_active_slot’ [-Wimplicit-function-declaration]
  198 |                 run_active_slot(slot);
      |                 ^~~~~~~~~~~~~~~
Profile consistency report:

                                 |mismatch     |mismatch     |                     |
Pass name                        |IN    |IN    |OUT   |OUT   |overall              |
                                 |freq  |count |freq  |count |size      |time      |
cfg                  ------------|      |      |      |      |          |          |
ompexp                           |      |      |      |      |   +100.0%|          |
fixup_cfg            ------------|      |      |      |      |          |          |
ssa                              |      |      |      |      |     -0.9%|          |
nothrow                          |      |      |      |      |     -1.0%|          |
fixup_cfg            ------------|      |      |      |      |          |          |
local-fnsummary      ------------|      |      |      |      |          |          |
einline              ------------|      |      |      |      |          |          |
early_optimizations  ------------|      |      |      |      |          |          |
objsz                ------------|      |      |      |      |          |          |
ccp                  ------------|      |      |      |      |          |          |
forwprop             ------------|      |      |      |      |          |          |
ethread              ------------|      |      |      |      |          |          |
esra                 ------------|      |      |      |      |          |          |
ealias               ------------|      |      |      |      |          |          |
mergephi             ------------|      |      |      |      |          |          |
cddce                ------------|      |      |      |      |          |          |
phiopt               ------------|      |      |      |      |          |          |
modref               ------------|      |      |      |      |          |          |
iftoswitch           ------------|      |      |      |      |          |          |
profile_estimate     ------------|      |      |      |      |          |          |
local-pure-const                 |      |      |      |      |          |   +100.0%|
release_ssa          ------------|      |      |      |      |          |          |
local-fnsummary      ------------|      |      |      |      |          |          |
=======ipa_pta=========
===============The first stage : Point of interest stmt collect=================
=======node_fun:main=========

=======node_fun:remote_exists=========

--------GIMPLE Cond -------
succs:= 2
--------GIMPLE Cond -------
succs:= 3
--------GIMPLE Cond -------
succs:= 4
succs:= 2
succs:= 3
succs:= 4
===============The first stage : Point of interest stmt collect=================
start PointerConstraint
pointer ftable is 1 
pointer ptable is 1 
===============The second stage : Mapping stmt=================
# .MEM_2 = VDEF <.MEM_1(D)>
remote_exists ("path");
# VUSE <.MEM_29(D)>
_3 = strlen (_2);
# VUSE <.MEM_29(D)>
_4 = strlen (path_22(D));
# .MEM_30 = VDEF <.MEM_29(D)>
url_24 = malloc (_6);
# .MEM_31 = VDEF <.MEM_30>
sprintf (url_24, "%s%s", _8, path_22(D));
# .MEM_32 = VDEF <.MEM_31>
_9 = get_active_slot ();
# .MEM_34 = VDEF <.MEM_33>
curl_easy_setopt (_11, 0, url_24);
# .MEM_35 = VDEF <.MEM_34>
curl_easy_setopt (_12, 0, 1);
# .MEM_36 = VDEF <.MEM_35>
_13 = start_active_slot (slot_27);
# .MEM_39 = VDEF <.MEM_36>
run_active_slot (slot_27);
# .MEM_41 = VDEF <.MEM_40>
fprintf (_17, "HEAD HTTP error %ld\n", _16);
# .MEM_38 = VDEF <.MEM_37>
__builtin_fwrite ("Unable to start HEAD request\n", 1, 29, _18);
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
===============The second stage : record fucntion =================

=============== The third stage : Start detection  =================
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:remote_exists========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path remote_exists  function_call count: 10 level :1========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:__builtin_fwrite========= [0m
[40;33m =======POP node_fun stack:__builtin_fwrite========= [0m
[40;42m =======pre add _ fucntion:fprintf========= [0m
[40;33m =======POP node_fun stack:fprintf========= [0m
[40;42m =======pre add _ fucntion:run_active_slot========= [0m
[40;33m =======POP node_fun stack:run_active_slot========= [0m
[40;42m =======pre add _ fucntion:start_active_slot========= [0m
[40;33m =======POP node_fun stack:start_active_slot========= [0m
[40;42m =======pre add _ fucntion:curl_easy_setopt========= [0m
[40;33m =======POP node_fun stack:curl_easy_setopt========= [0m
[40;42m =======pre add _ fucntion:get_active_slot========= [0m
[40;33m =======POP node_fun stack:get_active_slot========= [0m
[40;42m =======pre add _ fucntion:sprintf========= [0m
[40;33m =======POP node_fun stack:sprintf========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre_check_funciton:remote_exists========= [0m
[40;42m =======start_check_funciton:remote_exists========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fb7423fac18
    type <pointer_type 0x7fb741f1bf18
        type <integer_type 0x7fb741f1b9d8 char public QI
            size <integer_cst 0x7fb7423f2ca8 constant 8>
            unit-size <integer_cst 0x7fb7423f2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb7424073f0 precision:8 min <integer_cst 0x7fb741f12720 -128> max <integer_cst 0x7fb741f12708 127>
            pointer_to_this <pointer_type 0x7fb741f1bf18>>
        unsigned DI
        size <integer_cst 0x7fb7423f2bb8 constant 64>
        unit-size <integer_cst 0x7fb7423f2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fb7423fd168 ./benchmarks/git/double_free_1/git_df_1.c>>
    var <var_decl 0x7fb741f34000 url>
    def_stmt url_24 = malloc (_6);
    version:24
    ptr-info 0x7fb741f2d4f8>
# .MEM_30 = VDEF <.MEM_29(D)>
url_24 = malloc (_6);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
free (url_24);
In function ‘main’:
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
  211 |         free(url);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
  207 |                 free(url);      /* double-free */
      |                 ^
this stmt is child function---free-----

 ================== find ================== 
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
free (url_24);
bb index := 3
# VUSE <.MEM_43>
return ret_19;
In function ‘remote_exists’:
./benchmarks/git/double_free_1/git_df_1.c:212:16: warning: use location
  212 |         return ret;
      |                ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_43>
return ret_19;
./benchmarks/git/double_free_1/git_df_1.c:212:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================
free (url_24);
In function ‘main’:
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
  199 |                 free(url);      /* double-free */
      |                 ^
this stmt is child function---free-----

 ================== find ================== 
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find ================== 
curl_easy_setopt (_11, 0, url_24);
./benchmarks/git/double_free_1/git_df_1.c:194:9: warning: use location
  194 |         curl_easy_setopt(slot->curl, CURLOPT_URL, url);
      |         ^
this stmt is child function---curl_easy_setopt-----

 ================== trace ================== 
trace fucntion name:curl_easy_setopt 

 ================== trace ================== 
trace fucntion free:3 
sprintf (url_24, "%s%s", _8, path_22(D));
./benchmarks/git/double_free_1/git_df_1.c:190:9: warning: use location
  190 |         sprintf(url, "%s%s", remote->url, path);
      |         ^
this stmt is child function---sprintf-----

 ================== trace ================== 
trace fucntion name:sprintf 

 ================== trace ================== 
trace fucntion free:3 
url_24 = malloc (_6);
./benchmarks/git/double_free_1/git_df_1.c:185:21: warning: use location
  185 |         char *url = xmalloc(strlen(remote->url) + strlen(path) + 1);    /* allocation site */
      |                     ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb7423fac18
    type <pointer_type 0x7fb741f1bf18
        type <integer_type 0x7fb741f1b9d8 char public QI
            size <integer_cst 0x7fb7423f2ca8 constant 8>
            unit-size <integer_cst 0x7fb7423f2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb7424073f0 precision:8 min <integer_cst 0x7fb741f12720 -128> max <integer_cst 0x7fb741f12708 127>
            pointer_to_this <pointer_type 0x7fb741f1bf18>>
        unsigned DI
        size <integer_cst 0x7fb7423f2bb8 constant 64>
        unit-size <integer_cst 0x7fb7423f2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fb7423fd168 ./benchmarks/git/double_free_1/git_df_1.c>>
    var <var_decl 0x7fb741f34000 url>
    def_stmt url_24 = malloc (_6);
    version:24
    ptr-info 0x7fb741f2d4f8>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
  199 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
  207 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_42 = VDEF <.MEM_28>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
  211 |         free(url);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:3 [0m
[40;31m  	possible double free [Looserules]:3 [0m
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fb7423fa6c0
    type <pointer_type 0x7fb741f1bf18
        type <integer_type 0x7fb741f1b9d8 char public QI
            size <integer_cst 0x7fb7423f2ca8 constant 8>
            unit-size <integer_cst 0x7fb7423f2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb7424073f0 precision:8 min <integer_cst 0x7fb741f12720 -128> max <integer_cst 0x7fb741f12708 127>
            pointer_to_this <pointer_type 0x7fb741f1bf18>>
        unsigned DI
        size <integer_cst 0x7fb7423f2bb8 constant 64>
        unit-size <integer_cst 0x7fb7423f2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fb7423fd168 ./benchmarks/git/double_free_1/git_df_1.c>>
   
    def_stmt _2 = _1->url;
    version:2
    ptr-info 0x7fb741f2d438>
# VUSE <.MEM_29(D)>
_2 = _1->url;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_3 = strlen (_2);
./benchmarks/git/double_free_1/git_df_1.c:185:21: warning: use location
  185 |         char *url = xmalloc(strlen(remote->url) + strlen(path) + 1);    /* allocation site */
      |                     ^
this stmt is child function---strlen-----

 ================== trace ================== 
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
_5 = _3 + _4;
./benchmarks/git/double_free_1/git_df_1.c:185:21: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb7423fa6c0
    type <pointer_type 0x7fb741f1bf18
        type <integer_type 0x7fb741f1b9d8 char public QI
            size <integer_cst 0x7fb7423f2ca8 constant 8>
            unit-size <integer_cst 0x7fb7423f2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb7424073f0 precision:8 min <integer_cst 0x7fb741f12720 -128> max <integer_cst 0x7fb741f12708 127>
            pointer_to_this <pointer_type 0x7fb741f1bf18>>
        unsigned DI
        size <integer_cst 0x7fb7423f2bb8 constant 64>
        unit-size <integer_cst 0x7fb7423f2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fb7423fd168 ./benchmarks/git/double_free_1/git_df_1.c>>
   
    def_stmt _2 = _1->url;
    version:2
    ptr-info 0x7fb741f2d438>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fb7423fabd0
    type <pointer_type 0x7fb741f1bb28
        type <integer_type 0x7fb741f1ba80 char readonly QI
            size <integer_cst 0x7fb7423f2ca8 constant 8>
            unit-size <integer_cst 0x7fb7423f2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb7424073f0 precision:8 min <integer_cst 0x7fb741f12720 -128> max <integer_cst 0x7fb741f12708 127>
            pointer_to_this <pointer_type 0x7fb741f1bb28>>
        unsigned DI
        size <integer_cst 0x7fb7423f2bb8 constant 64>
        unit-size <integer_cst 0x7fb7423f2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fb741f28100 path>
    def_stmt GIMPLE_NOP
    version:22
    ptr-info 0x7fb741f2d4e0>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_4 = strlen (path_22(D));
./benchmarks/git/double_free_1/git_df_1.c:185:21: warning: use location
this stmt is child function---strlen-----

 ================== trace ================== 
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
_5 = _3 + _4;
./benchmarks/git/double_free_1/git_df_1.c:185:21: warning: use location
sprintf (url_24, "%s%s", _8, path_22(D));
./benchmarks/git/double_free_1/git_df_1.c:190:9: warning: use location
  190 |         sprintf(url, "%s%s", remote->url, path);
      |         ^
this stmt is child function---sprintf-----

 ================== trace ================== 
trace fucntion name:sprintf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb7423fabd0
    type <pointer_type 0x7fb741f1bb28
        type <integer_type 0x7fb741f1ba80 char readonly QI
            size <integer_cst 0x7fb7423f2ca8 constant 8>
            unit-size <integer_cst 0x7fb7423f2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb7424073f0 precision:8 min <integer_cst 0x7fb741f12720 -128> max <integer_cst 0x7fb741f12708 127>
            pointer_to_this <pointer_type 0x7fb741f1bb28>>
        unsigned DI
        size <integer_cst 0x7fb7423f2bb8 constant 64>
        unit-size <integer_cst 0x7fb7423f2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fb741f28100 path>
    def_stmt GIMPLE_NOP
    version:22
    ptr-info 0x7fb741f2d4e0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fb7423fa7e0
    type <integer_type 0x7fb7424077e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fb7423f2bb8 constant 64>
        unit-size <integer_cst 0x7fb7423f2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb742407738 precision:64 min <integer_cst 0x7fb7423f2e88 0> max <integer_cst 0x7fb7423f3500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fb7424137e0>>
   
    def_stmt _6 = _5 + 1;
    version:6>
_6 = _5 + 1;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
url_24 = malloc (_6);
./benchmarks/git/double_free_1/git_df_1.c:185:21: warning: use location
  185 |         char *url = xmalloc(strlen(remote->url) + strlen(path) + 1);    /* allocation site */
      |                     ^
this stmt is child function---malloc-----

 ================== trace ================== 
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
  211 |         free(url);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
  207 |                 free(url);      /* double-free */
      |                 ^
this stmt is child function---free-----

 ================== find ================== 
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
free (url_24);
bb index := 3
# VUSE <.MEM_43>
return ret_19;
In function ‘remote_exists’:
./benchmarks/git/double_free_1/git_df_1.c:212:16: warning: use location
  212 |         return ret;
      |                ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_43>
return ret_19;
./benchmarks/git/double_free_1/git_df_1.c:212:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================
free (url_24);
In function ‘main’:
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
  199 |                 free(url);      /* double-free */
      |                 ^
this stmt is child function---free-----

 ================== find ================== 
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find ================== 
curl_easy_setopt (_11, 0, url_24);
./benchmarks/git/double_free_1/git_df_1.c:194:9: warning: use location
  194 |         curl_easy_setopt(slot->curl, CURLOPT_URL, url);
      |         ^
this stmt is child function---curl_easy_setopt-----

 ================== trace ================== 
trace fucntion name:curl_easy_setopt 

 ================== trace ================== 
trace fucntion free:3 
sprintf (url_24, "%s%s", _8, path_22(D));
./benchmarks/git/double_free_1/git_df_1.c:190:9: warning: use location
  190 |         sprintf(url, "%s%s", remote->url, path);
      |         ^
this stmt is child function---sprintf-----

 ================== trace ================== 
trace fucntion name:sprintf 

 ================== trace ================== 
trace fucntion free:3 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb7423fa7e0
    type <integer_type 0x7fb7424077e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fb7423f2bb8 constant 64>
        unit-size <integer_cst 0x7fb7423f2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb742407738 precision:64 min <integer_cst 0x7fb7423f2e88 0> max <integer_cst 0x7fb7423f3500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fb7424137e0>>
   
    def_stmt _6 = _5 + 1;
    version:6>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
  199 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
  207 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_42 = VDEF <.MEM_28>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
  211 |         free(url);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:3 [0m
[40;31m  	possible double free [Looserules]:3 [0m
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fb7423fa8b8
    type <integer_type 0x7fb7424075e8 int public SI
        size <integer_cst 0x7fb7423f2df8 constant 32>
        unit-size <integer_cst 0x7fb7423f2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb7424075e8 precision:32 min <integer_cst 0x7fb7423f2db0 -2147483648> max <integer_cst 0x7fb7423f2dc8 2147483647>
        pointer_to_this <pointer_type 0x7fb74240e9d8>>
   
    def_stmt _9 = get_active_slot ();
    version:9>
# .MEM_32 = VDEF <.MEM_31>
_9 = get_active_slot ();

 ================== trace ptable================== 
trace fucntion name:get_active_slot 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---get_active_slot-----
this other function ------get_active_slot-----
 
 Start check Pointer Collect  

======================================================================
_10 = (long int) _9;
./benchmarks/git/double_free_1/git_df_1.c:192:16: warning: use location
  192 |         slot = get_active_slot();
      |                ^
slot_27 = (struct active_request_slot *) _10;
./benchmarks/git/double_free_1/git_df_1.c:192:14: warning: use location
  192 |         slot = get_active_slot();
      |              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_39 = VDEF <.MEM_36>
run_active_slot (slot_27);
bb index := 3
# VUSE <.MEM_43>
return ret_19;
In function ‘remote_exists’:
./benchmarks/git/double_free_1/git_df_1.c:212:16: warning: use location
  212 |         return ret;
      |                ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_43>
return ret_19;
./benchmarks/git/double_free_1/git_df_1.c:212:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================
run_active_slot (slot_27);
In function ‘main’:
./benchmarks/git/double_free_1/git_df_1.c:198:17: warning: use location
  198 |                 run_active_slot(slot);
      |                 ^
this stmt is child function---run_active_slot-----

 ================== trace ================== 
trace fucntion name:run_active_slot 

 ================== trace ================== 
trace fucntion free:0 
_13 = start_active_slot (slot_27);
./benchmarks/git/double_free_1/git_df_1.c:197:13: warning: use location
  197 |         if (start_active_slot(slot)) {
      |             ^
this stmt is child function---start_active_slot-----

 ================== trace ================== 
trace fucntion name:start_active_slot 

 ================== trace ================== 
trace fucntion free:0 
if (_13 != 0)
./benchmarks/git/double_free_1/git_df_1.c:197:12: warning: use location
  197 |         if (start_active_slot(slot)) {
      |            ^
if (_13 != 0)

 ================== find cond branch ================= 
./benchmarks/git/double_free_1/git_df_1.c:197:12: warning: use location
Cond in fucntion remote_exists basic block 2
 ================== possible direct basic block ================= 
from remote_exists basic block 3
 ================== possible direct basic block ================= 
from remote_exists basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_12 = slot_27->curl;
./benchmarks/git/double_free_1/git_df_1.c:195:9: warning: use location
  195 |         curl_easy_setopt(slot->curl, CURLOPT_NOBODY, 1);
      |         ^
curl_easy_setopt (_12, 0, 1);
./benchmarks/git/double_free_1/git_df_1.c:195:9: warning: use location
this stmt is child function---curl_easy_setopt-----

 ================== trace ================== 
trace fucntion name:curl_easy_setopt 

 ================== trace ================== 
trace fucntion free:0 
_11 = slot_27->curl;
./benchmarks/git/double_free_1/git_df_1.c:194:9: warning: use location
  194 |         curl_easy_setopt(slot->curl, CURLOPT_URL, url);
      |         ^
curl_easy_setopt (_11, 0, url_24);
./benchmarks/git/double_free_1/git_df_1.c:194:9: warning: use location
this stmt is child function---curl_easy_setopt-----

 ================== trace ================== 
trace fucntion name:curl_easy_setopt 

 ================== trace ================== 
trace fucntion free:0 
slot_27->results = &results;
./benchmarks/git/double_free_1/git_df_1.c:193:23: warning: use location
  193 |         slot->results = &results;
      |                       ^
_9 = get_active_slot ();
./benchmarks/git/double_free_1/git_df_1.c:192:16: warning: use location
  192 |         slot = get_active_slot();
      |                ^
this stmt is child function---get_active_slot-----

 ================== trace ================== 
trace fucntion name:get_active_slot 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb7423fa8b8
    type <integer_type 0x7fb7424075e8 int public SI
        size <integer_cst 0x7fb7423f2df8 constant 32>
        unit-size <integer_cst 0x7fb7423f2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb7424075e8 precision:32 min <integer_cst 0x7fb7423f2db0 -2147483648> max <integer_cst 0x7fb7423f2dc8 2147483647>
        pointer_to_this <pointer_type 0x7fb74240e9d8>>
   
    def_stmt _9 = get_active_slot ();
    version:9>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
  199 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
  207 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_42 = VDEF <.MEM_28>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
  211 |         free(url);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fb7423fa948
    type <pointer_type 0x7fb741f26a80
        type <record_type 0x7fb741f269d8 CURL BLK
            size <integer_cst 0x7fb7423f2c30 constant 0>
            unit-size <integer_cst 0x7fb7423f2be8 constant 0>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb741f26930 context <translation_unit_decl 0x7fb7423fd168 ./benchmarks/git/double_free_1/git_df_1.c>
            pointer_to_this <pointer_type 0x7fb741f26a80>>
        unsigned DI
        size <integer_cst 0x7fb7423f2bb8 constant 64>
        unit-size <integer_cst 0x7fb7423f2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _11 = slot_27->curl;
    version:11
    ptr-info 0x7fb741f2d480>
# VUSE <.MEM_33>
_11 = slot_27->curl;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_34 = VDEF <.MEM_33>
curl_easy_setopt (_11, 0, url_24);
curl_easy_setopt (_11, 0, url_24);
./benchmarks/git/double_free_1/git_df_1.c:194:9: warning: use location
  194 |         curl_easy_setopt(slot->curl, CURLOPT_URL, url);
      |         ^
this stmt is child function---curl_easy_setopt-----

 ================== trace ================== 
trace fucntion name:curl_easy_setopt 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_34 = VDEF <.MEM_33>
curl_easy_setopt (_11, 0, url_24);
curl_easy_setopt (_11, 0, url_24);
./benchmarks/git/double_free_1/git_df_1.c:194:9: warning: use location
this stmt is child function---curl_easy_setopt-----

 ================== trace ================== 
trace fucntion name:curl_easy_setopt 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb7423fa948
    type <pointer_type 0x7fb741f26a80
        type <record_type 0x7fb741f269d8 CURL BLK
            size <integer_cst 0x7fb7423f2c30 constant 0>
            unit-size <integer_cst 0x7fb7423f2be8 constant 0>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb741f26930 context <translation_unit_decl 0x7fb7423fd168 ./benchmarks/git/double_free_1/git_df_1.c>
            pointer_to_this <pointer_type 0x7fb741f26a80>>
        unsigned DI
        size <integer_cst 0x7fb7423f2bb8 constant 64>
        unit-size <integer_cst 0x7fb7423f2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _11 = slot_27->curl;
    version:11
    ptr-info 0x7fb741f2d480>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
  199 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
  207 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_42 = VDEF <.MEM_28>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
  211 |         free(url);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fb7423fa990
    type <pointer_type 0x7fb741f26a80
        type <record_type 0x7fb741f269d8 CURL BLK
            size <integer_cst 0x7fb7423f2c30 constant 0>
            unit-size <integer_cst 0x7fb7423f2be8 constant 0>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb741f26930 context <translation_unit_decl 0x7fb7423fd168 ./benchmarks/git/double_free_1/git_df_1.c>
            pointer_to_this <pointer_type 0x7fb741f26a80>>
        unsigned DI
        size <integer_cst 0x7fb7423f2bb8 constant 64>
        unit-size <integer_cst 0x7fb7423f2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _12 = slot_27->curl;
    version:12
    ptr-info 0x7fb741f2d498>
# VUSE <.MEM_34>
_12 = slot_27->curl;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_35 = VDEF <.MEM_34>
curl_easy_setopt (_12, 0, 1);
curl_easy_setopt (_12, 0, 1);
./benchmarks/git/double_free_1/git_df_1.c:195:9: warning: use location
  195 |         curl_easy_setopt(slot->curl, CURLOPT_NOBODY, 1);
      |         ^
this stmt is child function---curl_easy_setopt-----

 ================== trace ================== 
trace fucntion name:curl_easy_setopt 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_35 = VDEF <.MEM_34>
curl_easy_setopt (_12, 0, 1);
curl_easy_setopt (_12, 0, 1);
./benchmarks/git/double_free_1/git_df_1.c:195:9: warning: use location
this stmt is child function---curl_easy_setopt-----

 ================== trace ================== 
trace fucntion name:curl_easy_setopt 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb7423fa990
    type <pointer_type 0x7fb741f26a80
        type <record_type 0x7fb741f269d8 CURL BLK
            size <integer_cst 0x7fb7423f2c30 constant 0>
            unit-size <integer_cst 0x7fb7423f2be8 constant 0>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb741f26930 context <translation_unit_decl 0x7fb7423fd168 ./benchmarks/git/double_free_1/git_df_1.c>
            pointer_to_this <pointer_type 0x7fb741f26a80>>
        unsigned DI
        size <integer_cst 0x7fb7423f2bb8 constant 64>
        unit-size <integer_cst 0x7fb7423f2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _12 = slot_27->curl;
    version:12
    ptr-info 0x7fb741f2d498>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
  199 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
  207 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_42 = VDEF <.MEM_28>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
  211 |         free(url);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fb7423fac60
    type <pointer_type 0x7fb741f26888
        type <record_type 0x7fb741f267e0 active_request_slot BLK
            size <integer_cst 0x7fb741f128b8 constant 576>
            unit-size <integer_cst 0x7fb741f12930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb741f267e0 fields <field_decl 0x7fb741f23da8 curl> context <translation_unit_decl 0x7fb7423fd168 ./benchmarks/git/double_free_1/git_df_1.c>
            pointer_to_this <pointer_type 0x7fb741f26888>>
        public unsigned DI
        size <integer_cst 0x7fb7423f2bb8 constant 64>
        unit-size <integer_cst 0x7fb7423f2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fb742c9af30 slot>
    def_stmt slot_27 = (struct active_request_slot *) _10;
    version:27
    ptr-info 0x7fb741f2d510>
slot_27 = (struct active_request_slot *) _10;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_39 = VDEF <.MEM_36>
run_active_slot (slot_27);
bb index := 3
# VUSE <.MEM_43>
return ret_19;
In function ‘remote_exists’:
./benchmarks/git/double_free_1/git_df_1.c:212:16: warning: use location
  212 |         return ret;
      |                ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_43>
return ret_19;
./benchmarks/git/double_free_1/git_df_1.c:212:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================
run_active_slot (slot_27);
In function ‘main’:
./benchmarks/git/double_free_1/git_df_1.c:198:17: warning: use location
  198 |                 run_active_slot(slot);
      |                 ^
this stmt is child function---run_active_slot-----

 ================== trace ================== 
trace fucntion name:run_active_slot 

 ================== trace ================== 
trace fucntion free:0 
_13 = start_active_slot (slot_27);
./benchmarks/git/double_free_1/git_df_1.c:197:13: warning: use location
  197 |         if (start_active_slot(slot)) {
      |             ^
this stmt is child function---start_active_slot-----

 ================== trace ================== 
trace fucntion name:start_active_slot 

 ================== trace ================== 
trace fucntion free:0 
if (_13 != 0)
./benchmarks/git/double_free_1/git_df_1.c:197:12: warning: use location
  197 |         if (start_active_slot(slot)) {
      |            ^
if (_13 != 0)

 ================== find cond branch ================= 
./benchmarks/git/double_free_1/git_df_1.c:197:12: warning: use location
Cond in fucntion remote_exists basic block 2
 ================== possible direct basic block ================= 
from remote_exists basic block 3
 ================== possible direct basic block ================= 
from remote_exists basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_12 = slot_27->curl;
./benchmarks/git/double_free_1/git_df_1.c:195:9: warning: use location
  195 |         curl_easy_setopt(slot->curl, CURLOPT_NOBODY, 1);
      |         ^
curl_easy_setopt (_12, 0, 1);
./benchmarks/git/double_free_1/git_df_1.c:195:9: warning: use location
this stmt is child function---curl_easy_setopt-----

 ================== trace ================== 
trace fucntion name:curl_easy_setopt 

 ================== trace ================== 
trace fucntion free:0 
_11 = slot_27->curl;
./benchmarks/git/double_free_1/git_df_1.c:194:9: warning: use location
  194 |         curl_easy_setopt(slot->curl, CURLOPT_URL, url);
      |         ^
curl_easy_setopt (_11, 0, url_24);
./benchmarks/git/double_free_1/git_df_1.c:194:9: warning: use location
this stmt is child function---curl_easy_setopt-----

 ================== trace ================== 
trace fucntion name:curl_easy_setopt 

 ================== trace ================== 
trace fucntion free:0 
slot_27->results = &results;
./benchmarks/git/double_free_1/git_df_1.c:193:23: warning: use location
  193 |         slot->results = &results;
      |                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb7423fac60
    type <pointer_type 0x7fb741f26888
        type <record_type 0x7fb741f267e0 active_request_slot BLK
            size <integer_cst 0x7fb741f128b8 constant 576>
            unit-size <integer_cst 0x7fb741f12930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb741f267e0 fields <field_decl 0x7fb741f23da8 curl> context <translation_unit_decl 0x7fb7423fd168 ./benchmarks/git/double_free_1/git_df_1.c>
            pointer_to_this <pointer_type 0x7fb741f26888>>
        public unsigned DI
        size <integer_cst 0x7fb7423f2bb8 constant 64>
        unit-size <integer_cst 0x7fb7423f2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fb742c9af30 slot>
    def_stmt slot_27 = (struct active_request_slot *) _10;
    version:27
    ptr-info 0x7fb741f2d510>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
  199 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
  207 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_42 = VDEF <.MEM_28>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
  211 |         free(url);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fb7423fac60
    type <pointer_type 0x7fb741f26888
        type <record_type 0x7fb741f267e0 active_request_slot BLK
            size <integer_cst 0x7fb741f128b8 constant 576>
            unit-size <integer_cst 0x7fb741f12930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb741f267e0 fields <field_decl 0x7fb741f23da8 curl> context <translation_unit_decl 0x7fb7423fd168 ./benchmarks/git/double_free_1/git_df_1.c>
            pointer_to_this <pointer_type 0x7fb741f26888>>
        public unsigned DI
        size <integer_cst 0x7fb7423f2bb8 constant 64>
        unit-size <integer_cst 0x7fb7423f2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fb742c9af30 slot>
    def_stmt slot_27 = (struct active_request_slot *) _10;
    version:27
    ptr-info 0x7fb741f2d510>
slot_27 = (struct active_request_slot *) _10;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_39 = VDEF <.MEM_36>
run_active_slot (slot_27);
bb index := 3
# VUSE <.MEM_43>
return ret_19;
In function ‘remote_exists’:
./benchmarks/git/double_free_1/git_df_1.c:212:16: warning: use location
  212 |         return ret;
      |                ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_43>
return ret_19;
./benchmarks/git/double_free_1/git_df_1.c:212:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================
# .MEM_39 = VDEF <.MEM_36>
run_active_slot (slot_27);
run_active_slot (slot_27);
In function ‘main’:
./benchmarks/git/double_free_1/git_df_1.c:198:17: warning: use location
  198 |                 run_active_slot(slot);
      |                 ^
this stmt is child function---run_active_slot-----

 ================== trace ================== 
trace fucntion name:run_active_slot 

 ================== trace ================== 
trace fucntion free:0 
_13 = start_active_slot (slot_27);
./benchmarks/git/double_free_1/git_df_1.c:197:13: warning: use location
  197 |         if (start_active_slot(slot)) {
      |             ^
this stmt is child function---start_active_slot-----

 ================== trace ================== 
trace fucntion name:start_active_slot 

 ================== trace ================== 
trace fucntion free:0 
if (_13 != 0)
./benchmarks/git/double_free_1/git_df_1.c:197:12: warning: use location
  197 |         if (start_active_slot(slot)) {
      |            ^
if (_13 != 0)

 ================== find cond branch ================= 
./benchmarks/git/double_free_1/git_df_1.c:197:12: warning: use location
Cond in fucntion remote_exists basic block 2
 ================== possible direct basic block ================= 
from remote_exists basic block 3
 ================== possible direct basic block ================= 
from remote_exists basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_12 = slot_27->curl;
./benchmarks/git/double_free_1/git_df_1.c:195:9: warning: use location
  195 |         curl_easy_setopt(slot->curl, CURLOPT_NOBODY, 1);
      |         ^
curl_easy_setopt (_12, 0, 1);
./benchmarks/git/double_free_1/git_df_1.c:195:9: warning: use location
this stmt is child function---curl_easy_setopt-----

 ================== trace ================== 
trace fucntion name:curl_easy_setopt 

 ================== trace ================== 
trace fucntion free:0 
_11 = slot_27->curl;
./benchmarks/git/double_free_1/git_df_1.c:194:9: warning: use location
  194 |         curl_easy_setopt(slot->curl, CURLOPT_URL, url);
      |         ^
curl_easy_setopt (_11, 0, url_24);
./benchmarks/git/double_free_1/git_df_1.c:194:9: warning: use location
this stmt is child function---curl_easy_setopt-----

 ================== trace ================== 
trace fucntion name:curl_easy_setopt 

 ================== trace ================== 
trace fucntion free:0 
slot_27->results = &results;
./benchmarks/git/double_free_1/git_df_1.c:193:23: warning: use location
  193 |         slot->results = &results;
      |                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb7423fac60
    type <pointer_type 0x7fb741f26888
        type <record_type 0x7fb741f267e0 active_request_slot BLK
            size <integer_cst 0x7fb741f128b8 constant 576>
            unit-size <integer_cst 0x7fb741f12930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb741f267e0 fields <field_decl 0x7fb741f23da8 curl> context <translation_unit_decl 0x7fb7423fd168 ./benchmarks/git/double_free_1/git_df_1.c>
            pointer_to_this <pointer_type 0x7fb741f26888>>
        public unsigned DI
        size <integer_cst 0x7fb7423f2bb8 constant 64>
        unit-size <integer_cst 0x7fb7423f2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fb742c9af30 slot>
    def_stmt slot_27 = (struct active_request_slot *) _10;
    version:27
    ptr-info 0x7fb741f2d510>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
  199 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
  207 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_42 = VDEF <.MEM_28>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
  211 |         free(url);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fb7423faaf8
    type <pointer_type 0x7fb741f227e0
        type <record_type 0x7fb741f22738 FILE BLK
            size <integer_cst 0x7fb741f12780 constant 1728>
            unit-size <integer_cst 0x7fb741f128a0 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb741f22690 fields <field_decl 0x7fb741f23688 _flags> context <translation_unit_decl 0x7fb7423fd168 ./benchmarks/git/double_free_1/git_df_1.c>
            pointer_to_this <pointer_type 0x7fb741f227e0>>
        unsigned DI
        size <integer_cst 0x7fb7423f2bb8 constant 64>
        unit-size <integer_cst 0x7fb7423f2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fb741f272a0>>
   
    def_stmt _17 = stderr;
    version:17
    ptr-info 0x7fb741f2d4b0>
# VUSE <.MEM_40>
_17 = stderr;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
fprintf (_17, "HEAD HTTP error %ld\n", _16);
bb index := 5
# VUSE <.MEM_43>
return ret_19;
In function ‘remote_exists’:
./benchmarks/git/double_free_1/git_df_1.c:212:16: warning: use location
  212 |         return ret;
      |                ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_43>
return ret_19;
./benchmarks/git/double_free_1/git_df_1.c:212:16: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================
# .MEM_41 = VDEF <.MEM_40>
fprintf (_17, "HEAD HTTP error %ld\n", _16);
fprintf (_17, "HEAD HTTP error %ld\n", _16);
In function ‘main’:
./benchmarks/git/double_free_1/git_df_1.c:205:25: warning: use location
  205 |                         fprintf(stderr, "HEAD HTTP error %ld\n", results.http_code);
      |                         ^
this stmt is child function---fprintf-----

 ================== trace ================== 
trace fucntion name:fprintf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
fprintf (_17, "HEAD HTTP error %ld\n", _16);
bb index := 5
# VUSE <.MEM_43>
return ret_19;
In function ‘remote_exists’:
./benchmarks/git/double_free_1/git_df_1.c:212:16: warning: use location
  212 |         return ret;
      |                ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_43>
return ret_19;
./benchmarks/git/double_free_1/git_df_1.c:212:16: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================
# .MEM_41 = VDEF <.MEM_40>
fprintf (_17, "HEAD HTTP error %ld\n", _16);
fprintf (_17, "HEAD HTTP error %ld\n", _16);
In function ‘main’:
./benchmarks/git/double_free_1/git_df_1.c:205:25: warning: use location
  205 |                         fprintf(stderr, "HEAD HTTP error %ld\n", results.http_code);
      |                         ^
this stmt is child function---fprintf-----

 ================== trace ================== 
trace fucntion name:fprintf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb7423faaf8
    type <pointer_type 0x7fb741f227e0
        type <record_type 0x7fb741f22738 FILE BLK
            size <integer_cst 0x7fb741f12780 constant 1728>
            unit-size <integer_cst 0x7fb741f128a0 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb741f22690 fields <field_decl 0x7fb741f23688 _flags> context <translation_unit_decl 0x7fb7423fd168 ./benchmarks/git/double_free_1/git_df_1.c>
            pointer_to_this <pointer_type 0x7fb741f227e0>>
        unsigned DI
        size <integer_cst 0x7fb7423f2bb8 constant 64>
        unit-size <integer_cst 0x7fb7423f2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fb741f272a0>>
   
    def_stmt _17 = stderr;
    version:17
    ptr-info 0x7fb741f2d4b0>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
  199 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
  207 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_42 = VDEF <.MEM_28>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
  211 |         free(url);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: Use after free error!: free location 
  199 |                 free(url);      /* double-free */
      |                 ^
# .MEM_41 = VDEF <.MEM_40>
fprintf (_17, "HEAD HTTP error %ld\n", _16);
./benchmarks/git/double_free_1/git_df_1.c:205:25: warning: use location
  205 |                         fprintf(stderr, "HEAD HTTP error %ld\n", results.http_code);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_13 != 0)
./benchmarks/git/double_free_1/git_df_1.c:197:12: warning: use location
  197 |         if (start_active_slot(slot)) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: Use after free error!: free location 
  199 |                 free(url);      /* double-free */
      |                 ^
# .MEM_41 = VDEF <.MEM_40>
fprintf (_17, "HEAD HTTP error %ld\n", _16);
./benchmarks/git/double_free_1/git_df_1.c:205:25: warning: use location
  205 |                         fprintf(stderr, "HEAD HTTP error %ld\n", results.http_code);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_13 != 0)
./benchmarks/git/double_free_1/git_df_1.c:197:12: warning: use location
  197 |         if (start_active_slot(slot)) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fb7425eed80
    type <pointer_type 0x7fb741f277e0
        type <array_type 0x7fb741f27738 type <integer_type 0x7fb741f1b9d8 char>
            BLK
            size <integer_cst 0x7fb741f129f0 constant 240>
            unit-size <integer_cst 0x7fb741f129d8 constant 30>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fb741f27690>
            pointer_to_this <pointer_type 0x7fb741f277e0>>
        unsigned DI
        size <integer_cst 0x7fb7423f2bb8 constant 64>
        unit-size <integer_cst 0x7fb7423f2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7fb7423fc0e0 type <array_type 0x7fb741f27738>
        readonly constant static "Unable to start HEAD request\012\000">
    ./benchmarks/git/double_free_1/git_df_1.c:208:19 start: ./benchmarks/git/double_free_1/git_df_1.c:208:19 finish: ./benchmarks/git/double_free_1/git_df_1.c:208:19>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:remote_exists========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m

dot graph START

======================================================================
 <addr_expr 0x7fb7425eea80
    type <pointer_type 0x7fb741f26f18
        type <array_type 0x7fb741f26e70 type <integer_type 0x7fb741f1b9d8 char>
            BLK
            size <integer_cst 0x7fb741f12978 constant 40>
            unit-size <integer_cst 0x7fb741f12960 constant 5>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fb741f26dc8>
            pointer_to_this <pointer_type 0x7fb741f26f18>>
        unsigned DI
        size <integer_cst 0x7fb7423f2bb8 constant 64>
        unit-size <integer_cst 0x7fb7423f2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7fb7425eea60 type <array_type 0x7fb741f26e70>
        readonly constant static "path\000">
    ./benchmarks/git/double_free_1/git_df_1.c:217:19 start: ./benchmarks/git/double_free_1/git_df_1.c:217:19 finish: ./benchmarks/git/double_free_1/git_df_1.c:217:19>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:main========= [0m
[40;44m =======node_fun:remote_exists========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path remote_exists  function_call count: 10 level :0========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:__builtin_fwrite========= [0m
[40;33m =======POP node_fun stack:__builtin_fwrite========= [0m
[40;42m =======pre add _ fucntion:fprintf========= [0m
[40;33m =======POP node_fun stack:fprintf========= [0m
[40;42m =======pre add _ fucntion:run_active_slot========= [0m
[40;33m =======POP node_fun stack:run_active_slot========= [0m
[40;42m =======pre add _ fucntion:start_active_slot========= [0m
[40;33m =======POP node_fun stack:start_active_slot========= [0m
[40;42m =======pre add _ fucntion:curl_easy_setopt========= [0m
[40;33m =======POP node_fun stack:curl_easy_setopt========= [0m
[40;42m =======pre add _ fucntion:get_active_slot========= [0m
[40;33m =======POP node_fun stack:get_active_slot========= [0m
[40;42m =======pre add _ fucntion:sprintf========= [0m
[40;33m =======POP node_fun stack:sprintf========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre_check_funciton:remote_exists========= [0m
[40;42m =======start_check_funciton:remote_exists========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fb7423fac18
    type <pointer_type 0x7fb741f1bf18
        type <integer_type 0x7fb741f1b9d8 char public QI
            size <integer_cst 0x7fb7423f2ca8 constant 8>
            unit-size <integer_cst 0x7fb7423f2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb7424073f0 precision:8 min <integer_cst 0x7fb741f12720 -128> max <integer_cst 0x7fb741f12708 127>
            pointer_to_this <pointer_type 0x7fb741f1bf18>>
        unsigned DI
        size <integer_cst 0x7fb7423f2bb8 constant 64>
        unit-size <integer_cst 0x7fb7423f2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fb7423fd168 ./benchmarks/git/double_free_1/git_df_1.c>>
    var <var_decl 0x7fb741f34000 url>
    def_stmt url_24 = malloc (_6);
    version:24
    ptr-info 0x7fb741f2d4f8>
# .MEM_30 = VDEF <.MEM_29(D)>
url_24 = malloc (_6);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
free (url_24);
In function ‘remote_exists’:
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
  211 |         free(url);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
  207 |                 free(url);      /* double-free */
      |                 ^
this stmt is child function---free-----

 ================== find ================== 
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
free (url_24);
bb index := 3
# VUSE <.MEM_43>
return ret_19;
./benchmarks/git/double_free_1/git_df_1.c:212:16: warning: use location
  212 |         return ret;
      |                ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_43>
return ret_19;
./benchmarks/git/double_free_1/git_df_1.c:212:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
  199 |                 free(url);      /* double-free */
      |                 ^
this stmt is child function---free-----

 ================== find ================== 
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find ================== 
curl_easy_setopt (_11, 0, url_24);
./benchmarks/git/double_free_1/git_df_1.c:194:9: warning: use location
  194 |         curl_easy_setopt(slot->curl, CURLOPT_URL, url);
      |         ^
this stmt is child function---curl_easy_setopt-----

 ================== trace ================== 
trace fucntion name:curl_easy_setopt 

 ================== trace ================== 
trace fucntion free:3 
sprintf (url_24, "%s%s", _8, path_22(D));
./benchmarks/git/double_free_1/git_df_1.c:190:9: warning: use location
  190 |         sprintf(url, "%s%s", remote->url, path);
      |         ^
this stmt is child function---sprintf-----

 ================== trace ================== 
trace fucntion name:sprintf 

 ================== trace ================== 
trace fucntion free:3 
url_24 = malloc (_6);
./benchmarks/git/double_free_1/git_df_1.c:185:21: warning: use location
  185 |         char *url = xmalloc(strlen(remote->url) + strlen(path) + 1);    /* allocation site */
      |                     ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb7423fac18
    type <pointer_type 0x7fb741f1bf18
        type <integer_type 0x7fb741f1b9d8 char public QI
            size <integer_cst 0x7fb7423f2ca8 constant 8>
            unit-size <integer_cst 0x7fb7423f2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb7424073f0 precision:8 min <integer_cst 0x7fb741f12720 -128> max <integer_cst 0x7fb741f12708 127>
            pointer_to_this <pointer_type 0x7fb741f1bf18>>
        unsigned DI
        size <integer_cst 0x7fb7423f2bb8 constant 64>
        unit-size <integer_cst 0x7fb7423f2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fb7423fd168 ./benchmarks/git/double_free_1/git_df_1.c>>
    var <var_decl 0x7fb741f34000 url>
    def_stmt url_24 = malloc (_6);
    version:24
    ptr-info 0x7fb741f2d4f8>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
  199 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
  207 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_42 = VDEF <.MEM_28>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
  211 |         free(url);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:3 [0m
[40;31m  	possible double free [Looserules]:3 [0m
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fb7423fa6c0
    type <pointer_type 0x7fb741f1bf18
        type <integer_type 0x7fb741f1b9d8 char public QI
            size <integer_cst 0x7fb7423f2ca8 constant 8>
            unit-size <integer_cst 0x7fb7423f2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb7424073f0 precision:8 min <integer_cst 0x7fb741f12720 -128> max <integer_cst 0x7fb741f12708 127>
            pointer_to_this <pointer_type 0x7fb741f1bf18>>
        unsigned DI
        size <integer_cst 0x7fb7423f2bb8 constant 64>
        unit-size <integer_cst 0x7fb7423f2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fb7423fd168 ./benchmarks/git/double_free_1/git_df_1.c>>
   
    def_stmt _2 = _1->url;
    version:2
    ptr-info 0x7fb741f2d438>
# VUSE <.MEM_29(D)>
_2 = _1->url;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_3 = strlen (_2);
./benchmarks/git/double_free_1/git_df_1.c:185:21: warning: use location
  185 |         char *url = xmalloc(strlen(remote->url) + strlen(path) + 1);    /* allocation site */
      |                     ^
this stmt is child function---strlen-----

 ================== trace ================== 
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
_5 = _3 + _4;
./benchmarks/git/double_free_1/git_df_1.c:185:21: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb7423fa6c0
    type <pointer_type 0x7fb741f1bf18
        type <integer_type 0x7fb741f1b9d8 char public QI
            size <integer_cst 0x7fb7423f2ca8 constant 8>
            unit-size <integer_cst 0x7fb7423f2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb7424073f0 precision:8 min <integer_cst 0x7fb741f12720 -128> max <integer_cst 0x7fb741f12708 127>
            pointer_to_this <pointer_type 0x7fb741f1bf18>>
        unsigned DI
        size <integer_cst 0x7fb7423f2bb8 constant 64>
        unit-size <integer_cst 0x7fb7423f2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fb7423fd168 ./benchmarks/git/double_free_1/git_df_1.c>>
   
    def_stmt _2 = _1->url;
    version:2
    ptr-info 0x7fb741f2d438>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fb7423fabd0
    type <pointer_type 0x7fb741f1bb28
        type <integer_type 0x7fb741f1ba80 char readonly QI
            size <integer_cst 0x7fb7423f2ca8 constant 8>
            unit-size <integer_cst 0x7fb7423f2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb7424073f0 precision:8 min <integer_cst 0x7fb741f12720 -128> max <integer_cst 0x7fb741f12708 127>
            pointer_to_this <pointer_type 0x7fb741f1bb28>>
        unsigned DI
        size <integer_cst 0x7fb7423f2bb8 constant 64>
        unit-size <integer_cst 0x7fb7423f2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fb741f28100 path>
    def_stmt GIMPLE_NOP
    version:22
    ptr-info 0x7fb741f2d4e0>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_4 = strlen (path_22(D));
./benchmarks/git/double_free_1/git_df_1.c:185:21: warning: use location
this stmt is child function---strlen-----

 ================== trace ================== 
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
_5 = _3 + _4;
./benchmarks/git/double_free_1/git_df_1.c:185:21: warning: use location
sprintf (url_24, "%s%s", _8, path_22(D));
./benchmarks/git/double_free_1/git_df_1.c:190:9: warning: use location
  190 |         sprintf(url, "%s%s", remote->url, path);
      |         ^
this stmt is child function---sprintf-----

 ================== trace ================== 
trace fucntion name:sprintf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb7423fabd0
    type <pointer_type 0x7fb741f1bb28
        type <integer_type 0x7fb741f1ba80 char readonly QI
            size <integer_cst 0x7fb7423f2ca8 constant 8>
            unit-size <integer_cst 0x7fb7423f2cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb7424073f0 precision:8 min <integer_cst 0x7fb741f12720 -128> max <integer_cst 0x7fb741f12708 127>
            pointer_to_this <pointer_type 0x7fb741f1bb28>>
        unsigned DI
        size <integer_cst 0x7fb7423f2bb8 constant 64>
        unit-size <integer_cst 0x7fb7423f2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fb741f28100 path>
    def_stmt GIMPLE_NOP
    version:22
    ptr-info 0x7fb741f2d4e0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fb7423fa7e0
    type <integer_type 0x7fb7424077e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fb7423f2bb8 constant 64>
        unit-size <integer_cst 0x7fb7423f2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb742407738 precision:64 min <integer_cst 0x7fb7423f2e88 0> max <integer_cst 0x7fb7423f3500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fb7424137e0>>
   
    def_stmt _6 = _5 + 1;
    version:6>
_6 = _5 + 1;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
url_24 = malloc (_6);
./benchmarks/git/double_free_1/git_df_1.c:185:21: warning: use location
  185 |         char *url = xmalloc(strlen(remote->url) + strlen(path) + 1);    /* allocation site */
      |                     ^
this stmt is child function---malloc-----

 ================== trace ================== 
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
  211 |         free(url);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
  207 |                 free(url);      /* double-free */
      |                 ^
this stmt is child function---free-----

 ================== find ================== 
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_39>
free (url_24);
bb index := 3
# VUSE <.MEM_43>
return ret_19;
./benchmarks/git/double_free_1/git_df_1.c:212:16: warning: use location
  212 |         return ret;
      |                ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_43>
return ret_19;
./benchmarks/git/double_free_1/git_df_1.c:212:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
  199 |                 free(url);      /* double-free */
      |                 ^
this stmt is child function---free-----

 ================== find ================== 
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find ================== 
curl_easy_setopt (_11, 0, url_24);
./benchmarks/git/double_free_1/git_df_1.c:194:9: warning: use location
  194 |         curl_easy_setopt(slot->curl, CURLOPT_URL, url);
      |         ^
this stmt is child function---curl_easy_setopt-----

 ================== trace ================== 
trace fucntion name:curl_easy_setopt 

 ================== trace ================== 
trace fucntion free:3 
sprintf (url_24, "%s%s", _8, path_22(D));
./benchmarks/git/double_free_1/git_df_1.c:190:9: warning: use location
  190 |         sprintf(url, "%s%s", remote->url, path);
      |         ^
this stmt is child function---sprintf-----

 ================== trace ================== 
trace fucntion name:sprintf 

 ================== trace ================== 
trace fucntion free:3 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb7423fa7e0
    type <integer_type 0x7fb7424077e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fb7423f2bb8 constant 64>
        unit-size <integer_cst 0x7fb7423f2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb742407738 precision:64 min <integer_cst 0x7fb7423f2e88 0> max <integer_cst 0x7fb7423f3500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fb7424137e0>>
   
    def_stmt _6 = _5 + 1;
    version:6>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
  199 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
  207 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_42 = VDEF <.MEM_28>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
  211 |         free(url);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:3 [0m
[40;31m  	possible double free [Looserules]:3 [0m
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fb7423fa8b8
    type <integer_type 0x7fb7424075e8 int public SI
        size <integer_cst 0x7fb7423f2df8 constant 32>
        unit-size <integer_cst 0x7fb7423f2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb7424075e8 precision:32 min <integer_cst 0x7fb7423f2db0 -2147483648> max <integer_cst 0x7fb7423f2dc8 2147483647>
        pointer_to_this <pointer_type 0x7fb74240e9d8>>
   
    def_stmt _9 = get_active_slot ();
    version:9>
# .MEM_32 = VDEF <.MEM_31>
_9 = get_active_slot ();

 ================== trace ptable================== 
trace fucntion name:get_active_slot 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---get_active_slot-----
this other function ------get_active_slot-----
 
 Start check Pointer Collect  

======================================================================
_10 = (long int) _9;
./benchmarks/git/double_free_1/git_df_1.c:192:16: warning: use location
  192 |         slot = get_active_slot();
      |                ^
slot_27 = (struct active_request_slot *) _10;
./benchmarks/git/double_free_1/git_df_1.c:192:14: warning: use location
  192 |         slot = get_active_slot();
      |              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_39 = VDEF <.MEM_36>
run_active_slot (slot_27);
bb index := 3
# VUSE <.MEM_43>
return ret_19;
./benchmarks/git/double_free_1/git_df_1.c:212:16: warning: use location
  212 |         return ret;
      |                ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_43>
return ret_19;
./benchmarks/git/double_free_1/git_df_1.c:212:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================
run_active_slot (slot_27);
./benchmarks/git/double_free_1/git_df_1.c:198:17: warning: use location
  198 |                 run_active_slot(slot);
      |                 ^
this stmt is child function---run_active_slot-----

 ================== trace ================== 
trace fucntion name:run_active_slot 

 ================== trace ================== 
trace fucntion free:0 
_13 = start_active_slot (slot_27);
./benchmarks/git/double_free_1/git_df_1.c:197:13: warning: use location
  197 |         if (start_active_slot(slot)) {
      |             ^
this stmt is child function---start_active_slot-----

 ================== trace ================== 
trace fucntion name:start_active_slot 

 ================== trace ================== 
trace fucntion free:0 
if (_13 != 0)
./benchmarks/git/double_free_1/git_df_1.c:197:12: warning: use location
  197 |         if (start_active_slot(slot)) {
      |            ^
if (_13 != 0)

 ================== find cond branch ================= 
./benchmarks/git/double_free_1/git_df_1.c:197:12: warning: use location
Cond in fucntion remote_exists basic block 2
 ================== possible direct basic block ================= 
from remote_exists basic block 3
 ================== possible direct basic block ================= 
from remote_exists basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_12 = slot_27->curl;
./benchmarks/git/double_free_1/git_df_1.c:195:9: warning: use location
  195 |         curl_easy_setopt(slot->curl, CURLOPT_NOBODY, 1);
      |         ^
curl_easy_setopt (_12, 0, 1);
./benchmarks/git/double_free_1/git_df_1.c:195:9: warning: use location
this stmt is child function---curl_easy_setopt-----

 ================== trace ================== 
trace fucntion name:curl_easy_setopt 

 ================== trace ================== 
trace fucntion free:0 
_11 = slot_27->curl;
./benchmarks/git/double_free_1/git_df_1.c:194:9: warning: use location
  194 |         curl_easy_setopt(slot->curl, CURLOPT_URL, url);
      |         ^
curl_easy_setopt (_11, 0, url_24);
./benchmarks/git/double_free_1/git_df_1.c:194:9: warning: use location
this stmt is child function---curl_easy_setopt-----

 ================== trace ================== 
trace fucntion name:curl_easy_setopt 

 ================== trace ================== 
trace fucntion free:0 
slot_27->results = &results;
./benchmarks/git/double_free_1/git_df_1.c:193:23: warning: use location
  193 |         slot->results = &results;
      |                       ^
_9 = get_active_slot ();
./benchmarks/git/double_free_1/git_df_1.c:192:16: warning: use location
  192 |         slot = get_active_slot();
      |                ^
this stmt is child function---get_active_slot-----

 ================== trace ================== 
trace fucntion name:get_active_slot 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb7423fa8b8
    type <integer_type 0x7fb7424075e8 int public SI
        size <integer_cst 0x7fb7423f2df8 constant 32>
        unit-size <integer_cst 0x7fb7423f2e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb7424075e8 precision:32 min <integer_cst 0x7fb7423f2db0 -2147483648> max <integer_cst 0x7fb7423f2dc8 2147483647>
        pointer_to_this <pointer_type 0x7fb74240e9d8>>
   
    def_stmt _9 = get_active_slot ();
    version:9>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
  199 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
  207 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_42 = VDEF <.MEM_28>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
  211 |         free(url);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fb7423fa948
    type <pointer_type 0x7fb741f26a80
        type <record_type 0x7fb741f269d8 CURL BLK
            size <integer_cst 0x7fb7423f2c30 constant 0>
            unit-size <integer_cst 0x7fb7423f2be8 constant 0>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb741f26930 context <translation_unit_decl 0x7fb7423fd168 ./benchmarks/git/double_free_1/git_df_1.c>
            pointer_to_this <pointer_type 0x7fb741f26a80>>
        unsigned DI
        size <integer_cst 0x7fb7423f2bb8 constant 64>
        unit-size <integer_cst 0x7fb7423f2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _11 = slot_27->curl;
    version:11
    ptr-info 0x7fb741f2d480>
# VUSE <.MEM_33>
_11 = slot_27->curl;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_34 = VDEF <.MEM_33>
curl_easy_setopt (_11, 0, url_24);
curl_easy_setopt (_11, 0, url_24);
./benchmarks/git/double_free_1/git_df_1.c:194:9: warning: use location
  194 |         curl_easy_setopt(slot->curl, CURLOPT_URL, url);
      |         ^
this stmt is child function---curl_easy_setopt-----

 ================== trace ================== 
trace fucntion name:curl_easy_setopt 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_34 = VDEF <.MEM_33>
curl_easy_setopt (_11, 0, url_24);
curl_easy_setopt (_11, 0, url_24);
./benchmarks/git/double_free_1/git_df_1.c:194:9: warning: use location
this stmt is child function---curl_easy_setopt-----

 ================== trace ================== 
trace fucntion name:curl_easy_setopt 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb7423fa948
    type <pointer_type 0x7fb741f26a80
        type <record_type 0x7fb741f269d8 CURL BLK
            size <integer_cst 0x7fb7423f2c30 constant 0>
            unit-size <integer_cst 0x7fb7423f2be8 constant 0>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb741f26930 context <translation_unit_decl 0x7fb7423fd168 ./benchmarks/git/double_free_1/git_df_1.c>
            pointer_to_this <pointer_type 0x7fb741f26a80>>
        unsigned DI
        size <integer_cst 0x7fb7423f2bb8 constant 64>
        unit-size <integer_cst 0x7fb7423f2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _11 = slot_27->curl;
    version:11
    ptr-info 0x7fb741f2d480>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
  199 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
  207 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_42 = VDEF <.MEM_28>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
  211 |         free(url);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fb7423fa990
    type <pointer_type 0x7fb741f26a80
        type <record_type 0x7fb741f269d8 CURL BLK
            size <integer_cst 0x7fb7423f2c30 constant 0>
            unit-size <integer_cst 0x7fb7423f2be8 constant 0>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb741f26930 context <translation_unit_decl 0x7fb7423fd168 ./benchmarks/git/double_free_1/git_df_1.c>
            pointer_to_this <pointer_type 0x7fb741f26a80>>
        unsigned DI
        size <integer_cst 0x7fb7423f2bb8 constant 64>
        unit-size <integer_cst 0x7fb7423f2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _12 = slot_27->curl;
    version:12
    ptr-info 0x7fb741f2d498>
# VUSE <.MEM_34>
_12 = slot_27->curl;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_35 = VDEF <.MEM_34>
curl_easy_setopt (_12, 0, 1);
curl_easy_setopt (_12, 0, 1);
./benchmarks/git/double_free_1/git_df_1.c:195:9: warning: use location
  195 |         curl_easy_setopt(slot->curl, CURLOPT_NOBODY, 1);
      |         ^
this stmt is child function---curl_easy_setopt-----

 ================== trace ================== 
trace fucntion name:curl_easy_setopt 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_35 = VDEF <.MEM_34>
curl_easy_setopt (_12, 0, 1);
curl_easy_setopt (_12, 0, 1);
./benchmarks/git/double_free_1/git_df_1.c:195:9: warning: use location
this stmt is child function---curl_easy_setopt-----

 ================== trace ================== 
trace fucntion name:curl_easy_setopt 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb7423fa990
    type <pointer_type 0x7fb741f26a80
        type <record_type 0x7fb741f269d8 CURL BLK
            size <integer_cst 0x7fb7423f2c30 constant 0>
            unit-size <integer_cst 0x7fb7423f2be8 constant 0>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb741f26930 context <translation_unit_decl 0x7fb7423fd168 ./benchmarks/git/double_free_1/git_df_1.c>
            pointer_to_this <pointer_type 0x7fb741f26a80>>
        unsigned DI
        size <integer_cst 0x7fb7423f2bb8 constant 64>
        unit-size <integer_cst 0x7fb7423f2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _12 = slot_27->curl;
    version:12
    ptr-info 0x7fb741f2d498>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
  199 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
  207 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_42 = VDEF <.MEM_28>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
  211 |         free(url);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fb7423fac60
    type <pointer_type 0x7fb741f26888
        type <record_type 0x7fb741f267e0 active_request_slot BLK
            size <integer_cst 0x7fb741f128b8 constant 576>
            unit-size <integer_cst 0x7fb741f12930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb741f267e0 fields <field_decl 0x7fb741f23da8 curl> context <translation_unit_decl 0x7fb7423fd168 ./benchmarks/git/double_free_1/git_df_1.c>
            pointer_to_this <pointer_type 0x7fb741f26888>>
        public unsigned DI
        size <integer_cst 0x7fb7423f2bb8 constant 64>
        unit-size <integer_cst 0x7fb7423f2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fb742c9af30 slot>
    def_stmt slot_27 = (struct active_request_slot *) _10;
    version:27
    ptr-info 0x7fb741f2d510>
slot_27 = (struct active_request_slot *) _10;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_39 = VDEF <.MEM_36>
run_active_slot (slot_27);
bb index := 3
# VUSE <.MEM_43>
return ret_19;
./benchmarks/git/double_free_1/git_df_1.c:212:16: warning: use location
  212 |         return ret;
      |                ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_43>
return ret_19;
./benchmarks/git/double_free_1/git_df_1.c:212:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================
run_active_slot (slot_27);
./benchmarks/git/double_free_1/git_df_1.c:198:17: warning: use location
  198 |                 run_active_slot(slot);
      |                 ^
this stmt is child function---run_active_slot-----

 ================== trace ================== 
trace fucntion name:run_active_slot 

 ================== trace ================== 
trace fucntion free:0 
_13 = start_active_slot (slot_27);
./benchmarks/git/double_free_1/git_df_1.c:197:13: warning: use location
  197 |         if (start_active_slot(slot)) {
      |             ^
this stmt is child function---start_active_slot-----

 ================== trace ================== 
trace fucntion name:start_active_slot 

 ================== trace ================== 
trace fucntion free:0 
if (_13 != 0)
./benchmarks/git/double_free_1/git_df_1.c:197:12: warning: use location
  197 |         if (start_active_slot(slot)) {
      |            ^
if (_13 != 0)

 ================== find cond branch ================= 
./benchmarks/git/double_free_1/git_df_1.c:197:12: warning: use location
Cond in fucntion remote_exists basic block 2
 ================== possible direct basic block ================= 
from remote_exists basic block 3
 ================== possible direct basic block ================= 
from remote_exists basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_12 = slot_27->curl;
./benchmarks/git/double_free_1/git_df_1.c:195:9: warning: use location
  195 |         curl_easy_setopt(slot->curl, CURLOPT_NOBODY, 1);
      |         ^
curl_easy_setopt (_12, 0, 1);
./benchmarks/git/double_free_1/git_df_1.c:195:9: warning: use location
this stmt is child function---curl_easy_setopt-----

 ================== trace ================== 
trace fucntion name:curl_easy_setopt 

 ================== trace ================== 
trace fucntion free:0 
_11 = slot_27->curl;
./benchmarks/git/double_free_1/git_df_1.c:194:9: warning: use location
  194 |         curl_easy_setopt(slot->curl, CURLOPT_URL, url);
      |         ^
curl_easy_setopt (_11, 0, url_24);
./benchmarks/git/double_free_1/git_df_1.c:194:9: warning: use location
this stmt is child function---curl_easy_setopt-----

 ================== trace ================== 
trace fucntion name:curl_easy_setopt 

 ================== trace ================== 
trace fucntion free:0 
slot_27->results = &results;
./benchmarks/git/double_free_1/git_df_1.c:193:23: warning: use location
  193 |         slot->results = &results;
      |                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb7423fac60
    type <pointer_type 0x7fb741f26888
        type <record_type 0x7fb741f267e0 active_request_slot BLK
            size <integer_cst 0x7fb741f128b8 constant 576>
            unit-size <integer_cst 0x7fb741f12930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb741f267e0 fields <field_decl 0x7fb741f23da8 curl> context <translation_unit_decl 0x7fb7423fd168 ./benchmarks/git/double_free_1/git_df_1.c>
            pointer_to_this <pointer_type 0x7fb741f26888>>
        public unsigned DI
        size <integer_cst 0x7fb7423f2bb8 constant 64>
        unit-size <integer_cst 0x7fb7423f2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fb742c9af30 slot>
    def_stmt slot_27 = (struct active_request_slot *) _10;
    version:27
    ptr-info 0x7fb741f2d510>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
  199 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
  207 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_42 = VDEF <.MEM_28>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
  211 |         free(url);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fb7423fac60
    type <pointer_type 0x7fb741f26888
        type <record_type 0x7fb741f267e0 active_request_slot BLK
            size <integer_cst 0x7fb741f128b8 constant 576>
            unit-size <integer_cst 0x7fb741f12930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb741f267e0 fields <field_decl 0x7fb741f23da8 curl> context <translation_unit_decl 0x7fb7423fd168 ./benchmarks/git/double_free_1/git_df_1.c>
            pointer_to_this <pointer_type 0x7fb741f26888>>
        public unsigned DI
        size <integer_cst 0x7fb7423f2bb8 constant 64>
        unit-size <integer_cst 0x7fb7423f2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fb742c9af30 slot>
    def_stmt slot_27 = (struct active_request_slot *) _10;
    version:27
    ptr-info 0x7fb741f2d510>
slot_27 = (struct active_request_slot *) _10;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_39 = VDEF <.MEM_36>
run_active_slot (slot_27);
bb index := 3
# VUSE <.MEM_43>
return ret_19;
./benchmarks/git/double_free_1/git_df_1.c:212:16: warning: use location
  212 |         return ret;
      |                ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_43>
return ret_19;
./benchmarks/git/double_free_1/git_df_1.c:212:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================
# .MEM_39 = VDEF <.MEM_36>
run_active_slot (slot_27);
run_active_slot (slot_27);
./benchmarks/git/double_free_1/git_df_1.c:198:17: warning: use location
  198 |                 run_active_slot(slot);
      |                 ^
this stmt is child function---run_active_slot-----

 ================== trace ================== 
trace fucntion name:run_active_slot 

 ================== trace ================== 
trace fucntion free:0 
_13 = start_active_slot (slot_27);
./benchmarks/git/double_free_1/git_df_1.c:197:13: warning: use location
  197 |         if (start_active_slot(slot)) {
      |             ^
this stmt is child function---start_active_slot-----

 ================== trace ================== 
trace fucntion name:start_active_slot 

 ================== trace ================== 
trace fucntion free:0 
if (_13 != 0)
./benchmarks/git/double_free_1/git_df_1.c:197:12: warning: use location
  197 |         if (start_active_slot(slot)) {
      |            ^
if (_13 != 0)

 ================== find cond branch ================= 
./benchmarks/git/double_free_1/git_df_1.c:197:12: warning: use location
Cond in fucntion remote_exists basic block 2
 ================== possible direct basic block ================= 
from remote_exists basic block 3
 ================== possible direct basic block ================= 
from remote_exists basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_12 = slot_27->curl;
./benchmarks/git/double_free_1/git_df_1.c:195:9: warning: use location
  195 |         curl_easy_setopt(slot->curl, CURLOPT_NOBODY, 1);
      |         ^
curl_easy_setopt (_12, 0, 1);
./benchmarks/git/double_free_1/git_df_1.c:195:9: warning: use location
this stmt is child function---curl_easy_setopt-----

 ================== trace ================== 
trace fucntion name:curl_easy_setopt 

 ================== trace ================== 
trace fucntion free:0 
_11 = slot_27->curl;
./benchmarks/git/double_free_1/git_df_1.c:194:9: warning: use location
  194 |         curl_easy_setopt(slot->curl, CURLOPT_URL, url);
      |         ^
curl_easy_setopt (_11, 0, url_24);
./benchmarks/git/double_free_1/git_df_1.c:194:9: warning: use location
this stmt is child function---curl_easy_setopt-----

 ================== trace ================== 
trace fucntion name:curl_easy_setopt 

 ================== trace ================== 
trace fucntion free:0 
slot_27->results = &results;
./benchmarks/git/double_free_1/git_df_1.c:193:23: warning: use location
  193 |         slot->results = &results;
      |                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb7423fac60
    type <pointer_type 0x7fb741f26888
        type <record_type 0x7fb741f267e0 active_request_slot BLK
            size <integer_cst 0x7fb741f128b8 constant 576>
            unit-size <integer_cst 0x7fb741f12930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb741f267e0 fields <field_decl 0x7fb741f23da8 curl> context <translation_unit_decl 0x7fb7423fd168 ./benchmarks/git/double_free_1/git_df_1.c>
            pointer_to_this <pointer_type 0x7fb741f26888>>
        public unsigned DI
        size <integer_cst 0x7fb7423f2bb8 constant 64>
        unit-size <integer_cst 0x7fb7423f2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fb742c9af30 slot>
    def_stmt slot_27 = (struct active_request_slot *) _10;
    version:27
    ptr-info 0x7fb741f2d510>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
  199 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
  207 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_42 = VDEF <.MEM_28>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
  211 |         free(url);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fb7423faaf8
    type <pointer_type 0x7fb741f227e0
        type <record_type 0x7fb741f22738 FILE BLK
            size <integer_cst 0x7fb741f12780 constant 1728>
            unit-size <integer_cst 0x7fb741f128a0 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb741f22690 fields <field_decl 0x7fb741f23688 _flags> context <translation_unit_decl 0x7fb7423fd168 ./benchmarks/git/double_free_1/git_df_1.c>
            pointer_to_this <pointer_type 0x7fb741f227e0>>
        unsigned DI
        size <integer_cst 0x7fb7423f2bb8 constant 64>
        unit-size <integer_cst 0x7fb7423f2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fb741f272a0>>
   
    def_stmt _17 = stderr;
    version:17
    ptr-info 0x7fb741f2d4b0>
# VUSE <.MEM_40>
_17 = stderr;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
fprintf (_17, "HEAD HTTP error %ld\n", _16);
bb index := 5
# VUSE <.MEM_43>
return ret_19;
./benchmarks/git/double_free_1/git_df_1.c:212:16: warning: use location
  212 |         return ret;
      |                ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_43>
return ret_19;
./benchmarks/git/double_free_1/git_df_1.c:212:16: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================
# .MEM_41 = VDEF <.MEM_40>
fprintf (_17, "HEAD HTTP error %ld\n", _16);
fprintf (_17, "HEAD HTTP error %ld\n", _16);
./benchmarks/git/double_free_1/git_df_1.c:205:25: warning: use location
  205 |                         fprintf(stderr, "HEAD HTTP error %ld\n", results.http_code);
      |                         ^
this stmt is child function---fprintf-----

 ================== trace ================== 
trace fucntion name:fprintf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
fprintf (_17, "HEAD HTTP error %ld\n", _16);
bb index := 5
# VUSE <.MEM_43>
return ret_19;
./benchmarks/git/double_free_1/git_df_1.c:212:16: warning: use location
  212 |         return ret;
      |                ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_43>
return ret_19;
./benchmarks/git/double_free_1/git_df_1.c:212:16: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================
# .MEM_41 = VDEF <.MEM_40>
fprintf (_17, "HEAD HTTP error %ld\n", _16);
fprintf (_17, "HEAD HTTP error %ld\n", _16);
./benchmarks/git/double_free_1/git_df_1.c:205:25: warning: use location
  205 |                         fprintf(stderr, "HEAD HTTP error %ld\n", results.http_code);
      |                         ^
this stmt is child function---fprintf-----

 ================== trace ================== 
trace fucntion name:fprintf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb7423faaf8
    type <pointer_type 0x7fb741f227e0
        type <record_type 0x7fb741f22738 FILE BLK
            size <integer_cst 0x7fb741f12780 constant 1728>
            unit-size <integer_cst 0x7fb741f128a0 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb741f22690 fields <field_decl 0x7fb741f23688 _flags> context <translation_unit_decl 0x7fb7423fd168 ./benchmarks/git/double_free_1/git_df_1.c>
            pointer_to_this <pointer_type 0x7fb741f227e0>>
        unsigned DI
        size <integer_cst 0x7fb7423f2bb8 constant 64>
        unit-size <integer_cst 0x7fb7423f2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fb741f272a0>>
   
    def_stmt _17 = stderr;
    version:17
    ptr-info 0x7fb741f2d4b0>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
  199 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
  207 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_42 = VDEF <.MEM_28>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
  211 |         free(url);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: Use after free error!: free location 
  199 |                 free(url);      /* double-free */
      |                 ^
# .MEM_41 = VDEF <.MEM_40>
fprintf (_17, "HEAD HTTP error %ld\n", _16);
./benchmarks/git/double_free_1/git_df_1.c:205:25: warning: use location
  205 |                         fprintf(stderr, "HEAD HTTP error %ld\n", results.http_code);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_13 != 0)
./benchmarks/git/double_free_1/git_df_1.c:197:12: warning: use location
  197 |         if (start_active_slot(slot)) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (url_24);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: Use after free error!: free location 
  199 |                 free(url);      /* double-free */
      |                 ^
# .MEM_41 = VDEF <.MEM_40>
fprintf (_17, "HEAD HTTP error %ld\n", _16);
./benchmarks/git/double_free_1/git_df_1.c:205:25: warning: use location
  205 |                         fprintf(stderr, "HEAD HTTP error %ld\n", results.http_code);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (_13 != 0)
./benchmarks/git/double_free_1/git_df_1.c:197:12: warning: use location
  197 |         if (start_active_slot(slot)) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fb7425eed80
    type <pointer_type 0x7fb741f277e0
        type <array_type 0x7fb741f27738 type <integer_type 0x7fb741f1b9d8 char>
            BLK
            size <integer_cst 0x7fb741f129f0 constant 240>
            unit-size <integer_cst 0x7fb741f129d8 constant 30>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fb741f27690>
            pointer_to_this <pointer_type 0x7fb741f277e0>>
        unsigned DI
        size <integer_cst 0x7fb7423f2bb8 constant 64>
        unit-size <integer_cst 0x7fb7423f2bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7fb7423fc0e0 type <array_type 0x7fb741f27738>
        readonly constant static "Unable to start HEAD request\012\000">
    ./benchmarks/git/double_free_1/git_df_1.c:208:19 start: ./benchmarks/git/double_free_1/git_df_1.c:208:19 finish: ./benchmarks/git/double_free_1/git_df_1.c:208:19>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:remote_exists========= [0m
fucntion collect path finsh

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
remote_exists ("path");
return 0;

=======Mapping node_fun:remote_exists=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = remote;
_2 = _1->url;
_3 = strlen (_2);
_4 = strlen (path_22(D));
_5 = _3 + _4;
_6 = _5 + 1;
url_24 = malloc (_6);
_7 = remote;
_8 = _7->url;
sprintf (url_24, "%s%s", _8, path_22(D));
_9 = get_active_slot ();
_10 = (long int) _9;
slot_27 = (struct active_request_slot *) _10;
slot_27->results = &results;
_11 = slot_27->curl;
curl_easy_setopt (_11, 0, url_24);
_12 = slot_27->curl;
curl_easy_setopt (_12, 0, 1);
_13 = start_active_slot (slot_27);
if (_13 != 0)
  goto <bb 3>; [50.00%]
else
  goto <bb 6>; [50.00%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 536870913]:
run_active_slot (slot_27);
free (url_24);
_14 = results.http_code;
if (_14 == 404)
  goto <bb 7>; [34.00%]
else
  goto <bb 4>; [66.00%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 354334800]:
_15 = results.curl_result;
if (_15 == 0)
  goto <bb 7>; [67.00%]
else
  goto <bb 5>; [33.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 116930483]:
_16 = results.http_code;
_17 = stderr;
fprintf (_17, "HEAD HTTP error %ld\n", _16);
goto <bb 7>; [100.00%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 536870913]:
free (url_24);
_18 = stderr;
__builtin_fwrite ("Unable to start HEAD request\n", 1, 29, _18);

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 1073741824]:
# ret_19 = PHI <0(3), 1(4), -1(5), -1(6)>
free (url_24);
results ={v} {CLOBBER};
return ret_19;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    gimple malloc count : 1 [0m
[40;34m    gimple free   count : 3 [0m
[40;34m    find Entry point : 9 [0m
[40;34m    used_stmt array stack totalsize of : 0.001016 mb[0m
[40;34m    collect time: : 0.000117 s [0m
[40;34m    algorithm time: 0.025411 s [0m
[40;34m    gimple stmt count : : 37 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
Profile consistency report:

                                 |mismatch     |mismatch     |                     |
Pass name                        |IN    |IN    |OUT   |OUT   |overall              |
                                 |freq  |count |freq  |count |size      |time      |
cp                   ------------|      |      |      |      |          |          |
inline               ------------|      |      |      |      |          |          |
fixup_cfg            ------------|      |      |      |      |          |          |
adjust_alignment     ------------|      |      |      |      |          |          |
ccp                              |      |      |      |      |     -1.5%|     -0.6%|
backprop                         |      |      |      |      |     -1.5%|     -0.6%|
phiprop              ------------|      |      |      |      |          |          |
forwprop             ------------|      |      |      |      |          |          |
objsz                ------------|      |      |      |      |          |          |
alias                ------------|      |      |      |      |          |          |
retslot              ------------|      |      |      |      |          |          |
mergephi             ------------|      |      |      |      |          |          |
dce                  ------------|      |      |      |      |          |          |
stdarg               ------------|      |      |      |      |          |          |
cdce                 ------------|      |      |      |      |          |          |
cselim               ------------|      |      |      |      |          |          |
copyprop             ------------|      |      |      |      |          |          |
ifcombine            ------------|      |      |      |      |          |          |
mergephi             ------------|      |      |      |      |          |          |
phiopt               ------------|      |      |      |      |          |          |
ch                   ------------|      |      |      |      |          |          |
cplxlower            ------------|      |      |      |      |          |          |
sra                  ------------|      |      |      |      |          |          |
dom                              |      |      |      |      |     -1.5%|     -0.3%|
copyprop                         |      |      |      |      |     -1.5%|     -0.3%|
reassoc              ------------|      |      |      |      |          |          |
dce                  ------------|      |      |      |      |          |          |
forwprop             ------------|      |      |      |      |          |          |
phiopt               ------------|      |      |      |      |          |          |
ccp                  ------------|      |      |      |      |          |          |
sincos               ------------|      |      |      |      |          |          |
laddress             ------------|      |      |      |      |          |          |
lim                  ------------|      |      |      |      |          |          |
walloca              ------------|      |      |      |      |          |          |
sink                 ------------|      |      |      |      |          |          |
dce                  ------------|      |      |      |      |          |          |
fix_loops            ------------|      |      |      |      |          |          |
no_loop              ------------|      |      |      |      |          |          |
veclower2            ------------|      |      |      |      |          |          |
switchlower          ------------|      |      |      |      |          |          |
reassoc              ------------|      |      |      |      |          |          |
slsr                 ------------|      |      |      |      |          |          |
dom                  ------------|      |      |      |      |          |          |
strlen               ------------|      |      |      |      |          |          |
copyprop             ------------|      |      |      |      |          |          |
wrestrict            ------------|      |      |      |      |          |          |
cddce                ------------|      |      |      |      |          |          |
forwprop             ------------|      |      |      |      |          |          |
phiopt               ------------|      |      |      |      |          |          |
fab                  ------------|      |      |      |      |          |          |
dce                  ------------|      |      |      |      |          |          |
crited               ------------|      |      |      |      |          |          |
uncprop              ------------|      |      |      |      |          |          |
local-pure-const     ------------|      |      |      |      |          |          |
modref               ------------|      |      |      |      |          |          |
nrv                  ------------|      |      |      |      |          |          |
isel                 ------------|      |      |      |      |          |          |
optimized            ------------|      |      |      |      |          |          |
expand                           |      |      |      |      |----------|----------|
vregs                            |      |      |      |      |    +72.8%|    +31.6%|
into_cfglayout                   |      |      |      |      |     -1.5%|     -0.5%|
jump                             |      |      |      |      |     -1.5%|     -0.5%|
subreg1              ------------|      |      |      |      |          |          |
dfinit               ------------|      |      |      |      |          |          |
cse1                 ------------|      |      |      |      |          |          |
fwprop1                          |      |      |      |      |     -3.6%|     -4.6%|
ce1                              |      |      |      |      |     -3.7%|     -4.7%|
reginfo                          |      |      |      |      |          |     +0.1%|
loop2                ------------|      |      |      |      |          |          |
loop2_init           ------------|      |      |      |      |          |          |
loop2_invariant      ------------|      |      |      |      |          |          |
loop2_done           ------------|      |      |      |      |          |          |
dse1                 ------------|      |      |      |      |          |          |
fwprop2              ------------|      |      |      |      |          |          |
init-regs            ------------|      |      |      |      |          |          |
combine                          |      |      |      |      |     +1.4%|     +1.6%|
ce2                              |      |      |      |      |     +1.3%|     +1.6%|
outof_cfglayout                  |      |      |      |      |     +1.1%|     +0.4%|
split1                           |      |      |      |      |     +1.1%|     +0.4%|
subreg3              ------------|      |      |      |      |          |          |
mode_sw              ------------|      |      |      |      |          |          |
asmcons              ------------|      |      |      |      |          |          |
ira                  ------------|      |      |      |      |          |          |
reload                           |      |      |      |      |     -5.2%|     -5.8%|
postreload                       |      |      |      |      |     -5.5%|     -6.2%|
split2               ------------|      |      |      |      |          |          |
cmpelim              ------------|      |      |      |      |          |          |
pro_and_epilogue                 |      |      |      |      |     +7.6%|    +10.1%|
dse2                             |      |      |      |      |     +7.0%|     +9.2%|
csa                  ------------|      |      |      |      |          |          |
jump2                ------------|      |      |      |      |          |          |
ce3                  ------------|      |      |      |      |          |          |
cprop_hardreg        ------------|      |      |      |      |          |          |
rtl_dce              ------------|      |      |      |      |          |          |
bbro                             |      |      |      |      |          |     -0.2%|
split4                           |      |      |      |      |          |     -0.2%|
stack                ------------|      |      |      |      |          |          |
zero_call_used_regs  ------------|      |      |      |      |          |          |
alignments           ------------|      |      |      |      |          |          |
/usr/bin/ld: /tmp/ccDsHZ3h.ltrans0.ltrans.o: in function `remote_exists':
<artificial>:(.text+0x51): undefined reference to `get_active_slot'
/usr/bin/ld: <artificial>:(.text+0x6d): undefined reference to `curl_easy_setopt'
/usr/bin/ld: <artificial>:(.text+0x84): undefined reference to `curl_easy_setopt'
/usr/bin/ld: <artificial>:(.text+0x91): undefined reference to `start_active_slot'
/usr/bin/ld: <artificial>:(.text+0xa2): undefined reference to `run_active_slot'
collect2: error: ld returned 1 exit status
