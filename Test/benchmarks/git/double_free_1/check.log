../Compiler/newplugin.so 11.2.0 
In file included from ./benchmarks/git/double_free_1/git_df_1.c:10:
./benchmarks/git/double_free_1/../git.h: In function ‘copy_array’:
./benchmarks/git/double_free_1/../git.h:161:17: warning: implicit declaration of function ‘memcpy’ [-Wimplicit-function-declaration]
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                 ^~~~~~
./benchmarks/git/double_free_1/../git.h:1:1: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
  +++ |+#include <string.h>
    1 | #define STRING_LIST_INIT_NODUP { NULL, 0, 0, 0, NULL }
./benchmarks/git/double_free_1/../git.h:161:17: warning: incompatible implicit declaration of built-in function ‘memcpy’ [-Wbuiltin-declaration-mismatch]
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                 ^~~~~~
./benchmarks/git/double_free_1/../git.h:161:17: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
./benchmarks/git/double_free_1/../git.h:161:34: warning: implicit declaration of function ‘st_mult’ [-Wimplicit-function-declaration]
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                                  ^~~~~~~
./benchmarks/git/double_free_1/../git.h: In function ‘move_array’:
./benchmarks/git/double_free_1/../git.h:169:17: warning: implicit declaration of function ‘memmove’ [-Wimplicit-function-declaration]
  169 |                 memmove(dst, src, st_mult(size, n));
      |                 ^~~~~~~
./benchmarks/git/double_free_1/../git.h:169:17: note: include ‘<string.h>’ or provide a declaration of ‘memmove’
./benchmarks/git/double_free_1/../git.h:169:17: warning: incompatible implicit declaration of built-in function ‘memmove’ [-Wbuiltin-declaration-mismatch]
./benchmarks/git/double_free_1/../git.h:169:17: note: include ‘<string.h>’ or provide a declaration of ‘memmove’
In file included from ./benchmarks/git/double_free_1/git_df_1.c:9:
./benchmarks/git/double_free_1/../git.h: In function ‘xstrdup_or_null’:
./benchmarks/git/double_free_1/../stdio.h:138:20: warning: implicit declaration of function ‘strdup’ [-Wimplicit-function-declaration]
  138 | #define xstrdup(a) strdup(a)
      |                    ^~~~~~
./benchmarks/git/double_free_1/../git.h:174:22: note: in expansion of macro ‘xstrdup’
  174 |         return str ? xstrdup(str) : NULL;
      |                      ^~~~~~~
./benchmarks/git/double_free_1/../stdio.h:138:20: warning: incompatible implicit declaration of built-in function ‘strdup’ [-Wbuiltin-declaration-mismatch]
  138 | #define xstrdup(a) strdup(a)
      |                    ^~~~~~
./benchmarks/git/double_free_1/../git.h:174:22: note: in expansion of macro ‘xstrdup’
  174 |         return str ? xstrdup(str) : NULL;
      |                      ^~~~~~~
In file included from ./benchmarks/git/double_free_1/git_df_1.c:10:
./benchmarks/git/double_free_1/../git.h: At top level:
./benchmarks/git/double_free_1/../git.h:236:62: warning: ‘struct archiver_args’ declared inside parameter list will not be visible outside of this definition or declaration
  236 |         int (*write_archive)(const struct archiver *, struct archiver_args *);
      |                                                              ^~~~~~~~~~~~~
./benchmarks/git/double_free_1/../git.h: In function ‘strbuf_swap’:
./benchmarks/git/double_free_1/../git.h:126:9: warning: incompatible implicit declaration of built-in function ‘memcpy’ [-Wbuiltin-declaration-mismatch]
  126 |         memcpy(_swap_buffer, _swap_a_ptr, sizeof(a));           \
      |         ^~~~~~
./benchmarks/git/double_free_1/../git.h:407:9: note: in expansion of macro ‘SWAP’
  407 |         SWAP(*a, *b);
      |         ^~~~
./benchmarks/git/double_free_1/../git.h:126:9: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
  126 |         memcpy(_swap_buffer, _swap_a_ptr, sizeof(a));           \
      |         ^~~~~~
./benchmarks/git/double_free_1/../git.h:407:9: note: in expansion of macro ‘SWAP’
  407 |         SWAP(*a, *b);
      |         ^~~~
In file included from ./benchmarks/git/double_free_1/git_df_1.c:9:
./benchmarks/git/double_free_1/git_df_1.c: In function ‘remote_exists’:
./benchmarks/git/double_free_1/git_df_1.c:185:29: warning: implicit declaration of function ‘strlen’ [-Wimplicit-function-declaration]
  185 |         char *url = xmalloc(strlen(remote->url) + strlen(path) + 1);    /* allocation site */
      |                             ^~~~~~
./benchmarks/git/double_free_1/../stdio.h:137:27: note: in definition of macro ‘xmalloc’
  137 | #define xmalloc(a) malloc(a)
      |                           ^
./benchmarks/git/double_free_1/git_df_1.c:11:1: note: include ‘<string.h>’ or provide a declaration of ‘strlen’
   10 | #include "../git.h"
  +++ |+#include <string.h>
   11 | 
In file included from ./benchmarks/git/double_free_1/git_df_1.c:9:
./benchmarks/git/double_free_1/git_df_1.c:185:29: warning: incompatible implicit declaration of built-in function ‘strlen’ [-Wbuiltin-declaration-mismatch]
  185 |         char *url = xmalloc(strlen(remote->url) + strlen(path) + 1);    /* allocation site */
      |                             ^~~~~~
./benchmarks/git/double_free_1/../stdio.h:137:27: note: in definition of macro ‘xmalloc’
  137 | #define xmalloc(a) malloc(a)
      |                           ^
./benchmarks/git/double_free_1/git_df_1.c:185:29: note: include ‘<string.h>’ or provide a declaration of ‘strlen’
  185 |         char *url = xmalloc(strlen(remote->url) + strlen(path) + 1);    /* allocation site */
      |                             ^~~~~~
./benchmarks/git/double_free_1/../stdio.h:137:27: note: in definition of macro ‘xmalloc’
  137 | #define xmalloc(a) malloc(a)
      |                           ^
./benchmarks/git/double_free_1/git_df_1.c:192:16: warning: implicit declaration of function ‘get_active_slot’ [-Wimplicit-function-declaration]
  192 |         slot = get_active_slot();
      |                ^~~~~~~~~~~~~~~
./benchmarks/git/double_free_1/git_df_1.c:192:14: warning: assignment to ‘struct active_request_slot *’ from ‘int’ makes pointer from integer without a cast [-Wint-conversion]
  192 |         slot = get_active_slot();
      |              ^
./benchmarks/git/double_free_1/git_df_1.c:194:9: warning: implicit declaration of function ‘curl_easy_setopt’ [-Wimplicit-function-declaration]
  194 |         curl_easy_setopt(slot->curl, CURLOPT_URL, url);
      |         ^~~~~~~~~~~~~~~~
./benchmarks/git/double_free_1/git_df_1.c:197:13: warning: implicit declaration of function ‘start_active_slot’ [-Wimplicit-function-declaration]
  197 |         if (start_active_slot(slot)) {
      |             ^~~~~~~~~~~~~~~~~
./benchmarks/git/double_free_1/git_df_1.c:198:17: warning: implicit declaration of function ‘run_active_slot’ [-Wimplicit-function-declaration]
  198 |                 run_active_slot(slot);
      |                 ^~~~~~~~~~~~~~~

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.01 ( 17%)  1298k ( 51%)
 phase parsing                      :   0.02 (100%)   0.02 ( 67%)   0.04 ( 67%)  1158k ( 45%)
 phase opt and generate             :   0.00 (  0%)   0.01 ( 33%)   0.01 ( 17%)    92k (  4%)
 callgraph ipa passes               :   0.00 (  0%)   0.00 (  0%)   0.01 ( 17%)    52k (  2%)
 lto stream compression             :   0.00 (  0%)   0.00 (  0%)   0.01 ( 17%)     0  (  0%)
 preprocessing                      :   0.00 (  0%)   0.00 (  0%)   0.01 ( 17%)   355k ( 14%)
 lexical analysis                   :   0.01 ( 50%)   0.01 ( 33%)   0.02 ( 33%)     0  (  0%)
 parser (global)                    :   0.01 ( 50%)   0.01 ( 33%)   0.00 (  0%)   614k ( 24%)
 parser struct body                 :   0.00 (  0%)   0.00 (  0%)   0.01 ( 17%)    83k (  3%)
 dominance computation              :   0.00 (  0%)   0.01 ( 33%)   0.00 (  0%)     0  (  0%)
 TOTAL                              :   0.02          0.03          0.06         2559k
../Compiler/newplugin.so 11.2.0 

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.01 (100%)  2157k ( 97%)
 TOTAL                              :   0.00          0.00          0.01         2218k
../Compiler/newplugin.so 11.2.0 
=======ipa_pta=========
=============== The first stage : Point of interest stmt collect =================
=======node_fun:main=========
node:= 2 
 	next_branch :=3
	next_branch :=6
node:= 3 
 	next_branch :=7
	next_branch :=4
node:= 4 
 	next_branch :=7
	next_branch :=5
node:= 5 
 	next_branch :=7
node:= 6 
 	next_branch :=7
=============== The first stage :  record fucntion =================
start PointerConstraint
ptable point 6 
===============The second stage : Mapping stmt=================
# VUSE <.MEM_1(D)>
_5 = strlen (_4);
# .MEM_25 = VDEF <.MEM_1(D)>
url_9 = malloc (_8);
# .MEM_26 = VDEF <.MEM_25>
sprintf (url_9, "%s%s", _11, "path");
# .MEM_27 = VDEF <.MEM_26>
_12 = get_active_slot ();
# .MEM_29 = VDEF <.MEM_28>
curl_easy_setopt (_15, 0, url_9);
# .MEM_30 = VDEF <.MEM_29>
curl_easy_setopt (_16, 0, 1);
# .MEM_31 = VDEF <.MEM_30>
_17 = start_active_slot (slot_14);
# .MEM_34 = VDEF <.MEM_31>
run_active_slot (slot_14);
# .MEM_36 = VDEF <.MEM_35>
fprintf (_21, "HEAD HTTP error %ld\n", _20);
# .MEM_33 = VDEF <.MEM_32>
__builtin_fwrite ("Unable to start HEAD request\n", 1, 29, _22);
===============The second stage : Program slicing=================
=============== *this point analyzable =================
_5 = strlen (_4);
=============== *this point analyzable =================
url_9 = malloc (_8);
=============== *this point analyzable =================
_12 = get_active_slot ();
=============== *this point analyzable =================
_17 = start_active_slot (slot_14);
=============== *this point analyzable =================
_5 = strlen (_4);
=============== *this point analyzable =================
url_9 = malloc (_8);
=============== *this point analyzable =================
sprintf (url_9, "%s%s", _11, "path");
=============== *this point analyzable =================
curl_easy_setopt (_15, 0, url_9);
=============== *this point analyzable =================
curl_easy_setopt (_16, 0, 1);
=============== *this point analyzable =================
_17 = start_active_slot (slot_14);
=============== *this point analyzable =================
fprintf (_21, "HEAD HTTP error %ld\n", _20);
=============== *this point analyzable =================
fprintf (_21, "HEAD HTTP error %ld\n", _20);
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m

=============== The third stage : Start detection  =================
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 10 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:__builtin_fwrite========= [0m
[40;33m =======POP node_fun stack:__builtin_fwrite========= [0m
[40;42m =======pre add _ fucntion:fprintf========= [0m
[40;33m =======POP node_fun stack:fprintf========= [0m
[40;42m =======pre add _ fucntion:run_active_slot========= [0m
[40;33m =======POP node_fun stack:run_active_slot========= [0m
[40;42m =======pre add _ fucntion:start_active_slot========= [0m
[40;33m =======POP node_fun stack:start_active_slot========= [0m
[40;42m =======pre add _ fucntion:curl_easy_setopt========= [0m
[40;33m =======POP node_fun stack:curl_easy_setopt========= [0m
[40;42m =======pre add _ fucntion:get_active_slot========= [0m
[40;33m =======POP node_fun stack:get_active_slot========= [0m
[40;42m =======pre add _ fucntion:sprintf========= [0m
[40;33m =======POP node_fun stack:sprintf========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f2d5a383d80
    type <integer_type 0x7f2d5a3907e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2d5a37bbb8 constant 64>
        unit-size <integer_cst 0x7f2d5a37bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2d5a390738 precision:64 min <integer_cst 0x7f2d5a37be88 0> max <integer_cst 0x7f2d5a37c500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f2d5a39c7e0>>
   
    def_stmt _5 = strlen (_4);
    version:5
    ptr-info 0x7f2d59eb3260>
# VUSE <.MEM_1(D)>
_5 = strlen (_4);

 ================== pre trace ptable ================== 
trace fucntion name:strlen 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function strlen
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_1(D)>
_5 = strlen (_4);
_5 = strlen (_4);
In function ‘main’:
./benchmarks/git/double_free_1/git_df_1.c:185:21: warning: use location
  185 |         char *url = xmalloc(strlen(remote->url) + strlen(path) + 1);    /* allocation site */
      |                     ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
_7 = _5 + _6;
./benchmarks/git/double_free_1/git_df_1.c:185:21: warning: use location
url_9 = malloc (_8);
./benchmarks/git/double_free_1/git_df_1.c:185:21: warning: use location
this stmt call this function :malloc
free (url_9);
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
  211 |         free(url);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (url_9);
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
free (url_9);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
  207 |                 free(url);      /* double-free */
      |                 ^
this stmt call this function :free

 ================== find free stmt ================== 
free (url_9);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 
free (url_9);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
  199 |                 free(url);      /* double-free */
      |                 ^
this stmt call this function :free

 ================== find free stmt ================== 
free (url_9);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find free stmt ================== 
curl_easy_setopt (_15, 0, url_9);
./benchmarks/git/double_free_1/git_df_1.c:194:9: warning: use location
  194 |         curl_easy_setopt(slot->curl, CURLOPT_URL, url);
      |         ^
this stmt call this function :curl_easy_setopt
trace fucntion name:curl_easy_setopt 

 ================== trace ================== 
trace fucntion free:3 
sprintf (url_9, "%s%s", _11, "path");
./benchmarks/git/double_free_1/git_df_1.c:190:9: warning: use location
  190 |         sprintf(url, "%s%s", remote->url, path);
      |         ^
this stmt call this function :sprintf
trace fucntion name:sprintf 

 ================== trace ================== 
trace fucntion free:3 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2d5a383d80
    type <integer_type 0x7f2d5a3907e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2d5a37bbb8 constant 64>
        unit-size <integer_cst 0x7f2d5a37bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2d5a390738 precision:64 min <integer_cst 0x7f2d5a37be88 0> max <integer_cst 0x7f2d5a37c500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f2d5a39c7e0>>
   
    def_stmt _5 = strlen (_4);
    version:5
    ptr-info 0x7f2d59eb3260>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_35 = VDEF <.MEM_34>
free (url_9);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
  199 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_32 = VDEF <.MEM_31>
free (url_9);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
  207 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_24>
free (url_9);
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
  211 |         free(url);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:3 [0m
[40;31m  	possible double free [Looserules]:3 [0m
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2d5a383ea0
    type <pointer_type 0x7f2d59e93498
        type <integer_type 0x7f2d59e93b28 char public QI
            size <integer_cst 0x7f2d5a37bca8 constant 8>
            unit-size <integer_cst 0x7f2d5a37bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2d5a3903f0 precision:8 min <integer_cst 0x7f2d59e8a720 -128> max <integer_cst 0x7f2d59e8a708 127>
            pointer_to_this <pointer_type 0x7f2d59e93498>>
        unsigned DI
        size <integer_cst 0x7f2d5a37bbb8 constant 64>
        unit-size <integer_cst 0x7f2d5a37bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2d5a386168 ./benchmarks/git/double_free_1/git_df_1.c>>
    var <var_decl 0x7f2d59eac630 url>
    def_stmt url_9 = malloc (_8);
    version:9
    ptr-info 0x7f2d59ea54c8>
# .MEM_25 = VDEF <.MEM_1(D)>
url_9 = malloc (_8);

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
free (url_9);
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
this stmt call this function :free

 ================== find free stmt ================== 
free (url_9);
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
free (url_9);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
  207 |                 free(url);      /* double-free */
      |                 ^
this stmt call this function :free

 ================== find free stmt ================== 
free (url_9);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 
free (url_9);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
  199 |                 free(url);      /* double-free */
      |                 ^
this stmt call this function :free

 ================== find free stmt ================== 
free (url_9);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find free stmt ================== 
curl_easy_setopt (_15, 0, url_9);
./benchmarks/git/double_free_1/git_df_1.c:194:9: warning: use location
  194 |         curl_easy_setopt(slot->curl, CURLOPT_URL, url);
      |         ^
this stmt call this function :curl_easy_setopt
trace fucntion name:curl_easy_setopt 

 ================== trace ================== 
trace fucntion free:3 
sprintf (url_9, "%s%s", _11, "path");
./benchmarks/git/double_free_1/git_df_1.c:190:9: warning: use location
  190 |         sprintf(url, "%s%s", remote->url, path);
      |         ^
this stmt call this function :sprintf
trace fucntion name:sprintf 

 ================== trace ================== 
trace fucntion free:3 
# .MEM_25 = VDEF <.MEM_1(D)>
url_9 = malloc (_8);
url_9 = malloc (_8);
./benchmarks/git/double_free_1/git_df_1.c:185:21: warning: use location
  185 |         char *url = xmalloc(strlen(remote->url) + strlen(path) + 1);    /* allocation site */
      |                     ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2d5a383ea0
    type <pointer_type 0x7f2d59e93498
        type <integer_type 0x7f2d59e93b28 char public QI
            size <integer_cst 0x7f2d5a37bca8 constant 8>
            unit-size <integer_cst 0x7f2d5a37bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2d5a3903f0 precision:8 min <integer_cst 0x7f2d59e8a720 -128> max <integer_cst 0x7f2d59e8a708 127>
            pointer_to_this <pointer_type 0x7f2d59e93498>>
        unsigned DI
        size <integer_cst 0x7f2d5a37bbb8 constant 64>
        unit-size <integer_cst 0x7f2d5a37bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2d5a386168 ./benchmarks/git/double_free_1/git_df_1.c>>
    var <var_decl 0x7f2d59eac630 url>
    def_stmt url_9 = malloc (_8);
    version:9
    ptr-info 0x7f2d59ea54c8>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_35 = VDEF <.MEM_34>
free (url_9);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
  199 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_32 = VDEF <.MEM_31>
free (url_9);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
  207 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_24>
free (url_9);
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
  211 |         free(url);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:3 [0m
[40;31m  	possible double free [Looserules]:3 [0m
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2d5a383f78
    type <integer_type 0x7f2d5a3905e8 int public SI
        size <integer_cst 0x7f2d5a37bdf8 constant 32>
        unit-size <integer_cst 0x7f2d5a37be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2d5a3905e8 precision:32 min <integer_cst 0x7f2d5a37bdb0 -2147483648> max <integer_cst 0x7f2d5a37bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f2d5a3979d8>>
   
    def_stmt _12 = get_active_slot ();
    version:12>
# .MEM_27 = VDEF <.MEM_26>
_12 = get_active_slot ();

 ================== pre trace ptable ================== 
trace fucntion name:get_active_slot 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function get_active_slot
 
 Start check Pointer Collect  

======================================================================
_13 = (long int) _12;
./benchmarks/git/double_free_1/git_df_1.c:192:16: warning: use location
  192 |         slot = get_active_slot();
      |                ^
slot_14 = (struct active_request_slot *) _13;
./benchmarks/git/double_free_1/git_df_1.c:192:14: warning: use location
  192 |         slot = get_active_slot();
      |              ^
run_active_slot (slot_14);
./benchmarks/git/double_free_1/git_df_1.c:198:17: warning: use location
  198 |                 run_active_slot(slot);
      |                 ^
this stmt call this function :run_active_slot
trace fucntion name:run_active_slot 

 ================== trace ================== 
trace fucntion free:0 
_17 = start_active_slot (slot_14);
./benchmarks/git/double_free_1/git_df_1.c:197:13: warning: use location
  197 |         if (start_active_slot(slot)) {
      |             ^
this stmt call this function :start_active_slot
trace fucntion name:start_active_slot 

 ================== trace ================== 
trace fucntion free:0 
if (_17 != 0)
./benchmarks/git/double_free_1/git_df_1.c:197:12: warning: use location
  197 |         if (start_active_slot(slot)) {
      |            ^
_16 = slot_14->curl;
./benchmarks/git/double_free_1/git_df_1.c:195:9: warning: use location
  195 |         curl_easy_setopt(slot->curl, CURLOPT_NOBODY, 1);
      |         ^
curl_easy_setopt (_16, 0, 1);
./benchmarks/git/double_free_1/git_df_1.c:195:9: warning: use location
this stmt call this function :curl_easy_setopt
trace fucntion name:curl_easy_setopt 

 ================== trace ================== 
trace fucntion free:0 
_15 = slot_14->curl;
./benchmarks/git/double_free_1/git_df_1.c:194:9: warning: use location
  194 |         curl_easy_setopt(slot->curl, CURLOPT_URL, url);
      |         ^
curl_easy_setopt (_15, 0, url_9);
./benchmarks/git/double_free_1/git_df_1.c:194:9: warning: use location
this stmt call this function :curl_easy_setopt
trace fucntion name:curl_easy_setopt 

 ================== trace ================== 
trace fucntion free:0 
slot_14->results = &results;
./benchmarks/git/double_free_1/git_df_1.c:193:23: warning: use location
  193 |         slot->results = &results;
      |                       ^
# .MEM_27 = VDEF <.MEM_26>
_12 = get_active_slot ();
_12 = get_active_slot ();
./benchmarks/git/double_free_1/git_df_1.c:192:16: warning: use location
  192 |         slot = get_active_slot();
      |                ^
this stmt call this function :get_active_slot
trace fucntion name:get_active_slot 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2d5a383f78
    type <integer_type 0x7f2d5a3905e8 int public SI
        size <integer_cst 0x7f2d5a37bdf8 constant 32>
        unit-size <integer_cst 0x7f2d5a37be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2d5a3905e8 precision:32 min <integer_cst 0x7f2d5a37bdb0 -2147483648> max <integer_cst 0x7f2d5a37bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f2d5a3979d8>>
   
    def_stmt _12 = get_active_slot ();
    version:12>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_35 = VDEF <.MEM_34>
free (url_9);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
  199 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_32 = VDEF <.MEM_31>
free (url_9);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
  207 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_24>
free (url_9);
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
  211 |         free(url);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2d59eb0120
    type <integer_type 0x7f2d5a3905e8 int public SI
        size <integer_cst 0x7f2d5a37bdf8 constant 32>
        unit-size <integer_cst 0x7f2d5a37be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2d5a3905e8 precision:32 min <integer_cst 0x7f2d5a37bdb0 -2147483648> max <integer_cst 0x7f2d5a37bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f2d5a3979d8>>
   
    def_stmt _17 = start_active_slot (slot_14);
    version:17>
# .MEM_31 = VDEF <.MEM_30>
_17 = start_active_slot (slot_14);

 ================== pre trace ptable ================== 
trace fucntion name:start_active_slot 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function start_active_slot
 
 Start check Pointer Collect  

======================================================================
run_active_slot (slot_14);
./benchmarks/git/double_free_1/git_df_1.c:198:17: warning: use location
  198 |                 run_active_slot(slot);
      |                 ^
this stmt call this function :run_active_slot
trace fucntion name:run_active_slot 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_31 = VDEF <.MEM_30>
_17 = start_active_slot (slot_14);
_17 = start_active_slot (slot_14);
./benchmarks/git/double_free_1/git_df_1.c:197:13: warning: use location
  197 |         if (start_active_slot(slot)) {
      |             ^
this stmt call this function :start_active_slot
trace fucntion name:start_active_slot 

 ================== trace ================== 
trace fucntion free:0 
if (_17 != 0)
./benchmarks/git/double_free_1/git_df_1.c:197:12: warning: use location
  197 |         if (start_active_slot(slot)) {
      |            ^
_16 = slot_14->curl;
./benchmarks/git/double_free_1/git_df_1.c:195:9: warning: use location
  195 |         curl_easy_setopt(slot->curl, CURLOPT_NOBODY, 1);
      |         ^
curl_easy_setopt (_16, 0, 1);
./benchmarks/git/double_free_1/git_df_1.c:195:9: warning: use location
this stmt call this function :curl_easy_setopt
trace fucntion name:curl_easy_setopt 

 ================== trace ================== 
trace fucntion free:0 
_15 = slot_14->curl;
./benchmarks/git/double_free_1/git_df_1.c:194:9: warning: use location
  194 |         curl_easy_setopt(slot->curl, CURLOPT_URL, url);
      |         ^
curl_easy_setopt (_15, 0, url_9);
./benchmarks/git/double_free_1/git_df_1.c:194:9: warning: use location
this stmt call this function :curl_easy_setopt
trace fucntion name:curl_easy_setopt 

 ================== trace ================== 
trace fucntion free:0 
slot_14->results = &results;
./benchmarks/git/double_free_1/git_df_1.c:193:23: warning: use location
  193 |         slot->results = &results;
      |                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2d59eb0120
    type <integer_type 0x7f2d5a3905e8 int public SI
        size <integer_cst 0x7f2d5a37bdf8 constant 32>
        unit-size <integer_cst 0x7f2d5a37be10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2d5a3905e8 precision:32 min <integer_cst 0x7f2d5a37bdb0 -2147483648> max <integer_cst 0x7f2d5a37bdc8 2147483647>
        pointer_to_this <pointer_type 0x7f2d5a3979d8>>
   
    def_stmt _17 = start_active_slot (slot_14);
    version:17>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_35 = VDEF <.MEM_34>
free (url_9);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
  199 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_32 = VDEF <.MEM_31>
free (url_9);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
  207 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_24>
free (url_9);
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
  211 |         free(url);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2d5a383d38
    type <pointer_type 0x7f2d59e93498
        type <integer_type 0x7f2d59e93b28 char public QI
            size <integer_cst 0x7f2d5a37bca8 constant 8>
            unit-size <integer_cst 0x7f2d5a37bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2d5a3903f0 precision:8 min <integer_cst 0x7f2d59e8a720 -128> max <integer_cst 0x7f2d59e8a708 127>
            pointer_to_this <pointer_type 0x7f2d59e93498>>
        unsigned DI
        size <integer_cst 0x7f2d5a37bbb8 constant 64>
        unit-size <integer_cst 0x7f2d5a37bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2d5a386168 ./benchmarks/git/double_free_1/git_df_1.c>>
   
    def_stmt _4 = _3->url;
    version:4
    ptr-info 0x7f2d59ea54b0>
# VUSE <.MEM_1(D)>
_4 = _3->url;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_1(D)>
_5 = strlen (_4);
_5 = strlen (_4);
./benchmarks/git/double_free_1/git_df_1.c:185:21: warning: use location
  185 |         char *url = xmalloc(strlen(remote->url) + strlen(path) + 1);    /* allocation site */
      |                     ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
_7 = _5 + _6;
./benchmarks/git/double_free_1/git_df_1.c:185:21: warning: use location
url_9 = malloc (_8);
./benchmarks/git/double_free_1/git_df_1.c:185:21: warning: use location
this stmt call this function :malloc
free (url_9);
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
  211 |         free(url);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (url_9);
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
free (url_9);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
  207 |                 free(url);      /* double-free */
      |                 ^
this stmt call this function :free

 ================== find free stmt ================== 
free (url_9);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 
free (url_9);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
  199 |                 free(url);      /* double-free */
      |                 ^
this stmt call this function :free

 ================== find free stmt ================== 
free (url_9);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find free stmt ================== 
curl_easy_setopt (_15, 0, url_9);
./benchmarks/git/double_free_1/git_df_1.c:194:9: warning: use location
  194 |         curl_easy_setopt(slot->curl, CURLOPT_URL, url);
      |         ^
this stmt call this function :curl_easy_setopt
trace fucntion name:curl_easy_setopt 

 ================== trace ================== 
trace fucntion free:3 
sprintf (url_9, "%s%s", _11, "path");
./benchmarks/git/double_free_1/git_df_1.c:190:9: warning: use location
  190 |         sprintf(url, "%s%s", remote->url, path);
      |         ^
this stmt call this function :sprintf
trace fucntion name:sprintf 

 ================== trace ================== 
trace fucntion free:3 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2d5a383d38
    type <pointer_type 0x7f2d59e93498
        type <integer_type 0x7f2d59e93b28 char public QI
            size <integer_cst 0x7f2d5a37bca8 constant 8>
            unit-size <integer_cst 0x7f2d5a37bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2d5a3903f0 precision:8 min <integer_cst 0x7f2d59e8a720 -128> max <integer_cst 0x7f2d59e8a708 127>
            pointer_to_this <pointer_type 0x7f2d59e93498>>
        unsigned DI
        size <integer_cst 0x7f2d5a37bbb8 constant 64>
        unit-size <integer_cst 0x7f2d5a37bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2d5a386168 ./benchmarks/git/double_free_1/git_df_1.c>>
   
    def_stmt _4 = _3->url;
    version:4
    ptr-info 0x7f2d59ea54b0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:3 [0m
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2d5a383e58
    type <integer_type 0x7f2d5a3907e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2d5a37bbb8 constant 64>
        unit-size <integer_cst 0x7f2d5a37bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2d5a390738 precision:64 min <integer_cst 0x7f2d5a37be88 0> max <integer_cst 0x7f2d5a37c500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f2d5a39c7e0>>
   
    def_stmt _8 = _7 + 1;
    version:8>
_8 = _7 + 1;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_25 = VDEF <.MEM_1(D)>
url_9 = malloc (_8);
url_9 = malloc (_8);
./benchmarks/git/double_free_1/git_df_1.c:185:21: warning: use location
  185 |         char *url = xmalloc(strlen(remote->url) + strlen(path) + 1);    /* allocation site */
      |                     ^
this stmt call this function :malloc
free (url_9);
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
  211 |         free(url);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (url_9);
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
free (url_9);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
  207 |                 free(url);      /* double-free */
      |                 ^
this stmt call this function :free

 ================== find free stmt ================== 
free (url_9);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 
free (url_9);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
  199 |                 free(url);      /* double-free */
      |                 ^
this stmt call this function :free

 ================== find free stmt ================== 
free (url_9);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find free stmt ================== 
curl_easy_setopt (_15, 0, url_9);
./benchmarks/git/double_free_1/git_df_1.c:194:9: warning: use location
  194 |         curl_easy_setopt(slot->curl, CURLOPT_URL, url);
      |         ^
this stmt call this function :curl_easy_setopt
trace fucntion name:curl_easy_setopt 

 ================== trace ================== 
trace fucntion free:3 
sprintf (url_9, "%s%s", _11, "path");
./benchmarks/git/double_free_1/git_df_1.c:190:9: warning: use location
  190 |         sprintf(url, "%s%s", remote->url, path);
      |         ^
this stmt call this function :sprintf
trace fucntion name:sprintf 

 ================== trace ================== 
trace fucntion free:3 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2d5a383e58
    type <integer_type 0x7f2d5a3907e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2d5a37bbb8 constant 64>
        unit-size <integer_cst 0x7f2d5a37bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2d5a390738 precision:64 min <integer_cst 0x7f2d5a37be88 0> max <integer_cst 0x7f2d5a37c500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f2d5a39c7e0>>
   
    def_stmt _8 = _7 + 1;
    version:8>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_35 = VDEF <.MEM_34>
free (url_9);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
  199 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_32 = VDEF <.MEM_31>
free (url_9);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
  207 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_24>
free (url_9);
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
  211 |         free(url);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:3 [0m
[40;31m  	possible double free [Looserules]:3 [0m
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2d5a383f30
    type <pointer_type 0x7f2d59e93498
        type <integer_type 0x7f2d59e93b28 char public QI
            size <integer_cst 0x7f2d5a37bca8 constant 8>
            unit-size <integer_cst 0x7f2d5a37bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2d5a3903f0 precision:8 min <integer_cst 0x7f2d59e8a720 -128> max <integer_cst 0x7f2d59e8a708 127>
            pointer_to_this <pointer_type 0x7f2d59e93498>>
        unsigned DI
        size <integer_cst 0x7f2d5a37bbb8 constant 64>
        unit-size <integer_cst 0x7f2d5a37bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2d5a386168 ./benchmarks/git/double_free_1/git_df_1.c>>
   
    def_stmt _11 = _10->url;
    version:11
    ptr-info 0x7f2d59ea54f8>
# VUSE <.MEM_25>
_11 = _10->url;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_26 = VDEF <.MEM_25>
sprintf (url_9, "%s%s", _11, "path");
sprintf (url_9, "%s%s", _11, "path");
./benchmarks/git/double_free_1/git_df_1.c:190:9: warning: use location
  190 |         sprintf(url, "%s%s", remote->url, path);
      |         ^
this stmt call this function :sprintf
trace fucntion name:sprintf 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_26 = VDEF <.MEM_25>
sprintf (url_9, "%s%s", _11, "path");
sprintf (url_9, "%s%s", _11, "path");
./benchmarks/git/double_free_1/git_df_1.c:190:9: warning: use location
this stmt call this function :sprintf
trace fucntion name:sprintf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2d5a383f30
    type <pointer_type 0x7f2d59e93498
        type <integer_type 0x7f2d59e93b28 char public QI
            size <integer_cst 0x7f2d5a37bca8 constant 8>
            unit-size <integer_cst 0x7f2d5a37bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2d5a3903f0 precision:8 min <integer_cst 0x7f2d59e8a720 -128> max <integer_cst 0x7f2d59e8a708 127>
            pointer_to_this <pointer_type 0x7f2d59e93498>>
        unsigned DI
        size <integer_cst 0x7f2d5a37bbb8 constant 64>
        unit-size <integer_cst 0x7f2d5a37bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2d5a386168 ./benchmarks/git/double_free_1/git_df_1.c>>
   
    def_stmt _11 = _10->url;
    version:11
    ptr-info 0x7f2d59ea54f8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2d59eb0090
    type <pointer_type 0x7f2d59e9ea80
        type <record_type 0x7f2d59e9e9d8 CURL BLK
            size <integer_cst 0x7f2d5a37bc30 constant 0>
            unit-size <integer_cst 0x7f2d5a37bbe8 constant 0>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2d59e9e930 context <translation_unit_decl 0x7f2d5a386168 ./benchmarks/git/double_free_1/git_df_1.c>
            pointer_to_this <pointer_type 0x7f2d59e9ea80>>
        unsigned DI
        size <integer_cst 0x7f2d5a37bbb8 constant 64>
        unit-size <integer_cst 0x7f2d5a37bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _15 = slot_14->curl;
    version:15
    ptr-info 0x7f2d59ea5528>
# VUSE <.MEM_28>
_15 = slot_14->curl;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_29 = VDEF <.MEM_28>
curl_easy_setopt (_15, 0, url_9);
curl_easy_setopt (_15, 0, url_9);
./benchmarks/git/double_free_1/git_df_1.c:194:9: warning: use location
  194 |         curl_easy_setopt(slot->curl, CURLOPT_URL, url);
      |         ^
this stmt call this function :curl_easy_setopt
trace fucntion name:curl_easy_setopt 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_29 = VDEF <.MEM_28>
curl_easy_setopt (_15, 0, url_9);
curl_easy_setopt (_15, 0, url_9);
./benchmarks/git/double_free_1/git_df_1.c:194:9: warning: use location
this stmt call this function :curl_easy_setopt
trace fucntion name:curl_easy_setopt 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2d59eb0090
    type <pointer_type 0x7f2d59e9ea80
        type <record_type 0x7f2d59e9e9d8 CURL BLK
            size <integer_cst 0x7f2d5a37bc30 constant 0>
            unit-size <integer_cst 0x7f2d5a37bbe8 constant 0>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2d59e9e930 context <translation_unit_decl 0x7f2d5a386168 ./benchmarks/git/double_free_1/git_df_1.c>
            pointer_to_this <pointer_type 0x7f2d59e9ea80>>
        unsigned DI
        size <integer_cst 0x7f2d5a37bbb8 constant 64>
        unit-size <integer_cst 0x7f2d5a37bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _15 = slot_14->curl;
    version:15
    ptr-info 0x7f2d59ea5528>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_35 = VDEF <.MEM_34>
free (url_9);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
  199 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_32 = VDEF <.MEM_31>
free (url_9);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
  207 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_24>
free (url_9);
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
  211 |         free(url);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2d59eb00d8
    type <pointer_type 0x7f2d59e9ea80
        type <record_type 0x7f2d59e9e9d8 CURL BLK
            size <integer_cst 0x7f2d5a37bc30 constant 0>
            unit-size <integer_cst 0x7f2d5a37bbe8 constant 0>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2d59e9e930 context <translation_unit_decl 0x7f2d5a386168 ./benchmarks/git/double_free_1/git_df_1.c>
            pointer_to_this <pointer_type 0x7f2d59e9ea80>>
        unsigned DI
        size <integer_cst 0x7f2d5a37bbb8 constant 64>
        unit-size <integer_cst 0x7f2d5a37bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _16 = slot_14->curl;
    version:16
    ptr-info 0x7f2d59ea5540>
# VUSE <.MEM_29>
_16 = slot_14->curl;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_30 = VDEF <.MEM_29>
curl_easy_setopt (_16, 0, 1);
curl_easy_setopt (_16, 0, 1);
./benchmarks/git/double_free_1/git_df_1.c:195:9: warning: use location
  195 |         curl_easy_setopt(slot->curl, CURLOPT_NOBODY, 1);
      |         ^
this stmt call this function :curl_easy_setopt
trace fucntion name:curl_easy_setopt 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_30 = VDEF <.MEM_29>
curl_easy_setopt (_16, 0, 1);
curl_easy_setopt (_16, 0, 1);
./benchmarks/git/double_free_1/git_df_1.c:195:9: warning: use location
this stmt call this function :curl_easy_setopt
trace fucntion name:curl_easy_setopt 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2d59eb00d8
    type <pointer_type 0x7f2d59e9ea80
        type <record_type 0x7f2d59e9e9d8 CURL BLK
            size <integer_cst 0x7f2d5a37bc30 constant 0>
            unit-size <integer_cst 0x7f2d5a37bbe8 constant 0>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2d59e9e930 context <translation_unit_decl 0x7f2d5a386168 ./benchmarks/git/double_free_1/git_df_1.c>
            pointer_to_this <pointer_type 0x7f2d59e9ea80>>
        unsigned DI
        size <integer_cst 0x7f2d5a37bbb8 constant 64>
        unit-size <integer_cst 0x7f2d5a37bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _16 = slot_14->curl;
    version:16
    ptr-info 0x7f2d59ea5540>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_35 = VDEF <.MEM_34>
free (url_9);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
  199 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_32 = VDEF <.MEM_31>
free (url_9);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
  207 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_24>
free (url_9);
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
  211 |         free(url);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2d59eb0048
    type <pointer_type 0x7f2d59e9e888
        type <record_type 0x7f2d59e9e7e0 active_request_slot BLK
            size <integer_cst 0x7f2d59e8a8b8 constant 576>
            unit-size <integer_cst 0x7f2d59e8a930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2d59e9e7e0 fields <field_decl 0x7f2d59e9bda8 curl> context <translation_unit_decl 0x7f2d5a386168 ./benchmarks/git/double_free_1/git_df_1.c>
            pointer_to_this <pointer_type 0x7f2d59e9e888>>
        public unsigned DI
        size <integer_cst 0x7f2d5a37bbb8 constant 64>
        unit-size <integer_cst 0x7f2d5a37bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f2d59eac6c0 slot>
    def_stmt slot_14 = (struct active_request_slot *) _13;
    version:14
    ptr-info 0x7f2d59ea5510>
slot_14 = (struct active_request_slot *) _13;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
run_active_slot (slot_14);
./benchmarks/git/double_free_1/git_df_1.c:198:17: warning: use location
  198 |                 run_active_slot(slot);
      |                 ^
this stmt call this function :run_active_slot
trace fucntion name:run_active_slot 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_31 = VDEF <.MEM_30>
_17 = start_active_slot (slot_14);
_17 = start_active_slot (slot_14);
./benchmarks/git/double_free_1/git_df_1.c:197:13: warning: use location
  197 |         if (start_active_slot(slot)) {
      |             ^
this stmt call this function :start_active_slot
trace fucntion name:start_active_slot 

 ================== trace ================== 
trace fucntion free:0 
if (_17 != 0)
./benchmarks/git/double_free_1/git_df_1.c:197:12: warning: use location
  197 |         if (start_active_slot(slot)) {
      |            ^
_16 = slot_14->curl;
./benchmarks/git/double_free_1/git_df_1.c:195:9: warning: use location
  195 |         curl_easy_setopt(slot->curl, CURLOPT_NOBODY, 1);
      |         ^
curl_easy_setopt (_16, 0, 1);
./benchmarks/git/double_free_1/git_df_1.c:195:9: warning: use location
this stmt call this function :curl_easy_setopt
trace fucntion name:curl_easy_setopt 

 ================== trace ================== 
trace fucntion free:0 
_15 = slot_14->curl;
./benchmarks/git/double_free_1/git_df_1.c:194:9: warning: use location
  194 |         curl_easy_setopt(slot->curl, CURLOPT_URL, url);
      |         ^
curl_easy_setopt (_15, 0, url_9);
./benchmarks/git/double_free_1/git_df_1.c:194:9: warning: use location
this stmt call this function :curl_easy_setopt
trace fucntion name:curl_easy_setopt 

 ================== trace ================== 
trace fucntion free:0 
slot_14->results = &results;
./benchmarks/git/double_free_1/git_df_1.c:193:23: warning: use location
  193 |         slot->results = &results;
      |                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2d59eb0048
    type <pointer_type 0x7f2d59e9e888
        type <record_type 0x7f2d59e9e7e0 active_request_slot BLK
            size <integer_cst 0x7f2d59e8a8b8 constant 576>
            unit-size <integer_cst 0x7f2d59e8a930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2d59e9e7e0 fields <field_decl 0x7f2d59e9bda8 curl> context <translation_unit_decl 0x7f2d5a386168 ./benchmarks/git/double_free_1/git_df_1.c>
            pointer_to_this <pointer_type 0x7f2d59e9e888>>
        public unsigned DI
        size <integer_cst 0x7f2d5a37bbb8 constant 64>
        unit-size <integer_cst 0x7f2d5a37bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f2d59eac6c0 slot>
    def_stmt slot_14 = (struct active_request_slot *) _13;
    version:14
    ptr-info 0x7f2d59ea5510>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_35 = VDEF <.MEM_34>
free (url_9);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
  199 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_32 = VDEF <.MEM_31>
free (url_9);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
  207 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_24>
free (url_9);
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
  211 |         free(url);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2d59eb0048
    type <pointer_type 0x7f2d59e9e888
        type <record_type 0x7f2d59e9e7e0 active_request_slot BLK
            size <integer_cst 0x7f2d59e8a8b8 constant 576>
            unit-size <integer_cst 0x7f2d59e8a930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2d59e9e7e0 fields <field_decl 0x7f2d59e9bda8 curl> context <translation_unit_decl 0x7f2d5a386168 ./benchmarks/git/double_free_1/git_df_1.c>
            pointer_to_this <pointer_type 0x7f2d59e9e888>>
        public unsigned DI
        size <integer_cst 0x7f2d5a37bbb8 constant 64>
        unit-size <integer_cst 0x7f2d5a37bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f2d59eac6c0 slot>
    def_stmt slot_14 = (struct active_request_slot *) _13;
    version:14
    ptr-info 0x7f2d59ea5510>
slot_14 = (struct active_request_slot *) _13;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_34 = VDEF <.MEM_31>
run_active_slot (slot_14);
run_active_slot (slot_14);
./benchmarks/git/double_free_1/git_df_1.c:198:17: warning: use location
  198 |                 run_active_slot(slot);
      |                 ^
this stmt call this function :run_active_slot
trace fucntion name:run_active_slot 

 ================== trace ================== 
trace fucntion free:0 
_17 = start_active_slot (slot_14);
./benchmarks/git/double_free_1/git_df_1.c:197:13: warning: use location
  197 |         if (start_active_slot(slot)) {
      |             ^
this stmt call this function :start_active_slot
trace fucntion name:start_active_slot 

 ================== trace ================== 
trace fucntion free:0 
if (_17 != 0)
./benchmarks/git/double_free_1/git_df_1.c:197:12: warning: use location
  197 |         if (start_active_slot(slot)) {
      |            ^
_16 = slot_14->curl;
./benchmarks/git/double_free_1/git_df_1.c:195:9: warning: use location
  195 |         curl_easy_setopt(slot->curl, CURLOPT_NOBODY, 1);
      |         ^
curl_easy_setopt (_16, 0, 1);
./benchmarks/git/double_free_1/git_df_1.c:195:9: warning: use location
this stmt call this function :curl_easy_setopt
trace fucntion name:curl_easy_setopt 

 ================== trace ================== 
trace fucntion free:0 
_15 = slot_14->curl;
./benchmarks/git/double_free_1/git_df_1.c:194:9: warning: use location
  194 |         curl_easy_setopt(slot->curl, CURLOPT_URL, url);
      |         ^
curl_easy_setopt (_15, 0, url_9);
./benchmarks/git/double_free_1/git_df_1.c:194:9: warning: use location
this stmt call this function :curl_easy_setopt
trace fucntion name:curl_easy_setopt 

 ================== trace ================== 
trace fucntion free:0 
slot_14->results = &results;
./benchmarks/git/double_free_1/git_df_1.c:193:23: warning: use location
  193 |         slot->results = &results;
      |                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2d59eb0048
    type <pointer_type 0x7f2d59e9e888
        type <record_type 0x7f2d59e9e7e0 active_request_slot BLK
            size <integer_cst 0x7f2d59e8a8b8 constant 576>
            unit-size <integer_cst 0x7f2d59e8a930 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2d59e9e7e0 fields <field_decl 0x7f2d59e9bda8 curl> context <translation_unit_decl 0x7f2d5a386168 ./benchmarks/git/double_free_1/git_df_1.c>
            pointer_to_this <pointer_type 0x7f2d59e9e888>>
        public unsigned DI
        size <integer_cst 0x7f2d5a37bbb8 constant 64>
        unit-size <integer_cst 0x7f2d5a37bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f2d59eac6c0 slot>
    def_stmt slot_14 = (struct active_request_slot *) _13;
    version:14
    ptr-info 0x7f2d59ea5510>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_35 = VDEF <.MEM_34>
free (url_9);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
  199 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_32 = VDEF <.MEM_31>
free (url_9);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
  207 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_24>
free (url_9);
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
  211 |         free(url);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2d59eb0240
    type <pointer_type 0x7f2d59e9a930
        type <record_type 0x7f2d59e9a888 FILE BLK
            size <integer_cst 0x7f2d59e8a780 constant 1728>
            unit-size <integer_cst 0x7f2d59e8a8a0 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2d59e9a7e0 fields <field_decl 0x7f2d59e9b688 _flags> context <translation_unit_decl 0x7f2d5a386168 ./benchmarks/git/double_free_1/git_df_1.c>
            pointer_to_this <pointer_type 0x7f2d59e9a930>>
        unsigned DI
        size <integer_cst 0x7f2d5a37bbb8 constant 64>
        unit-size <integer_cst 0x7f2d5a37bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2d59e9f2a0>>
   
    def_stmt _21 = stderr;
    version:21
    ptr-info 0x7f2d59ea5558>
# VUSE <.MEM_35>
_21 = stderr;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_36 = VDEF <.MEM_35>
fprintf (_21, "HEAD HTTP error %ld\n", _20);
fprintf (_21, "HEAD HTTP error %ld\n", _20);
./benchmarks/git/double_free_1/git_df_1.c:205:25: warning: use location
  205 |                         fprintf(stderr, "HEAD HTTP error %ld\n", results.http_code);
      |                         ^
this stmt call this function :fprintf
trace fucntion name:fprintf 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_36 = VDEF <.MEM_35>
fprintf (_21, "HEAD HTTP error %ld\n", _20);
fprintf (_21, "HEAD HTTP error %ld\n", _20);
./benchmarks/git/double_free_1/git_df_1.c:205:25: warning: use location
this stmt call this function :fprintf
trace fucntion name:fprintf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2d59eb0240
    type <pointer_type 0x7f2d59e9a930
        type <record_type 0x7f2d59e9a888 FILE BLK
            size <integer_cst 0x7f2d59e8a780 constant 1728>
            unit-size <integer_cst 0x7f2d59e8a8a0 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2d59e9a7e0 fields <field_decl 0x7f2d59e9b688 _flags> context <translation_unit_decl 0x7f2d5a386168 ./benchmarks/git/double_free_1/git_df_1.c>
            pointer_to_this <pointer_type 0x7f2d59e9a930>>
        unsigned DI
        size <integer_cst 0x7f2d5a37bbb8 constant 64>
        unit-size <integer_cst 0x7f2d5a37bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2d59e9f2a0>>
   
    def_stmt _21 = stderr;
    version:21
    ptr-info 0x7f2d59ea5558>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_35 = VDEF <.MEM_34>
free (url_9);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
  199 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_32 = VDEF <.MEM_31>
free (url_9);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
  207 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_24>
free (url_9);
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
  211 |         free(url);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_35 = VDEF <.MEM_34>
free (url_9);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: free in this location
  199 |                 free(url);      /* double-free */
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_36 = VDEF <.MEM_35>
fprintf (_21, "HEAD HTTP error %ld\n", _20);
./benchmarks/git/double_free_1/git_df_1.c:205:25: warning: use location
  205 |                         fprintf(stderr, "HEAD HTTP error %ld\n", results.http_code);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_35 = VDEF <.MEM_34>
free (url_9);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: free in this location
  199 |                 free(url);      /* double-free */
      |                 ^
[40;35m target gimple type: ssa_name [0m
# .MEM_36 = VDEF <.MEM_35>
fprintf (_21, "HEAD HTTP error %ld\n", _20);
./benchmarks/git/double_free_1/git_df_1.c:205:25: warning: use location
  205 |                         fprintf(stderr, "HEAD HTTP error %ld\n", results.http_code);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2d59eb01f8
    type <integer_type 0x7f2d5a390738 long int DI
        size <integer_cst 0x7f2d5a37bbb8 constant 64>
        unit-size <integer_cst 0x7f2d5a37bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2d5a390738 precision:64 min <integer_cst 0x7f2d5a37be40 -9223372036854775808> max <integer_cst 0x7f2d5a37be58 9223372036854775807>
        pointer_to_this <pointer_type 0x7f2d5a39c738>>
   
    def_stmt _20 = results.http_code;
    version:20>
# VUSE <.MEM_35>
_20 = results.http_code;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_36 = VDEF <.MEM_35>
fprintf (_21, "HEAD HTTP error %ld\n", _20);
fprintf (_21, "HEAD HTTP error %ld\n", _20);
./benchmarks/git/double_free_1/git_df_1.c:205:25: warning: use location
this stmt call this function :fprintf
trace fucntion name:fprintf 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_36 = VDEF <.MEM_35>
fprintf (_21, "HEAD HTTP error %ld\n", _20);
fprintf (_21, "HEAD HTTP error %ld\n", _20);
./benchmarks/git/double_free_1/git_df_1.c:205:25: warning: use location
this stmt call this function :fprintf
trace fucntion name:fprintf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2d59eb01f8
    type <integer_type 0x7f2d5a390738 long int DI
        size <integer_cst 0x7f2d5a37bbb8 constant 64>
        unit-size <integer_cst 0x7f2d5a37bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2d5a390738 precision:64 min <integer_cst 0x7f2d5a37be40 -9223372036854775808> max <integer_cst 0x7f2d5a37be58 9223372036854775807>
        pointer_to_this <pointer_type 0x7f2d5a39c738>>
   
    def_stmt _20 = results.http_code;
    version:20>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_35 = VDEF <.MEM_34>
free (url_9);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: use location
  199 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_32 = VDEF <.MEM_31>
free (url_9);
./benchmarks/git/double_free_1/git_df_1.c:207:17: warning: use location
  207 |                 free(url);      /* double-free */
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_24>
free (url_9);
./benchmarks/git/double_free_1/git_df_1.c:211:9: warning: use location
  211 |         free(url);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_35 = VDEF <.MEM_34>
free (url_9);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: free in this location
  199 |                 free(url);      /* double-free */
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_36 = VDEF <.MEM_35>
fprintf (_21, "HEAD HTTP error %ld\n", _20);
./benchmarks/git/double_free_1/git_df_1.c:205:25: warning: use location
  205 |                         fprintf(stderr, "HEAD HTTP error %ld\n", results.http_code);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_35 = VDEF <.MEM_34>
free (url_9);
./benchmarks/git/double_free_1/git_df_1.c:199:17: warning: free in this location
  199 |                 free(url);      /* double-free */
      |                 ^
[40;35m target gimple type: ssa_name [0m
# .MEM_36 = VDEF <.MEM_35>
fprintf (_21, "HEAD HTTP error %ld\n", _20);
./benchmarks/git/double_free_1/git_df_1.c:205:25: warning: use location
  205 |                         fprintf(stderr, "HEAD HTTP error %ld\n", results.http_code);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2d59eb0288
    type <pointer_type 0x7f2d59e9a930
        type <record_type 0x7f2d59e9a888 FILE BLK
            size <integer_cst 0x7f2d59e8a780 constant 1728>
            unit-size <integer_cst 0x7f2d59e8a8a0 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2d59e9a7e0 fields <field_decl 0x7f2d59e9b688 _flags> context <translation_unit_decl 0x7f2d5a386168 ./benchmarks/git/double_free_1/git_df_1.c>
            pointer_to_this <pointer_type 0x7f2d59e9a930>>
        unsigned DI
        size <integer_cst 0x7f2d5a37bbb8 constant 64>
        unit-size <integer_cst 0x7f2d5a37bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2d59e9f2a0>>
   
    def_stmt _22 = stderr;
    version:22
    ptr-info 0x7f2d59ea5570>
# VUSE <.MEM_32>
_22 = stderr;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:main========= [0m
fucntion collect path finsh

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741823]:
_3 = 0B;
_4 = _3->url;
_5 = strlen (_4);
_6 = 4;
_7 = _5 + _6;
_8 = _7 + 1;
url_9 = malloc (_8);
_10 = 0B;
_11 = _10->url;
sprintf (url_9, "%s%s", _11, "path");
_12 = get_active_slot ();
_13 = (long int) _12;
slot_14 = (struct active_request_slot *) _13;
slot_14->results = &results;
_15 = slot_14->curl;
curl_easy_setopt (_15, 0, url_9);
_16 = slot_14->curl;
curl_easy_setopt (_16, 0, 1);
_17 = start_active_slot (slot_14);
if (_17 != 0)
  goto <bb 3>; [50.00%]
else
  goto <bb 6>; [50.00%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 536870911]:
run_active_slot (slot_14);
free (url_9);
_18 = results.http_code;
if (_18 == 404)
  goto <bb 7>; [34.00%]
else
  goto <bb 4>; [66.00%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 354334800]:
_19 = results.curl_result;
if (_19 == 0)
  goto <bb 7>; [67.00%]
else
  goto <bb 5>; [33.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 116930483]:
_20 = results.http_code;
_21 = stderr;
fprintf (_21, "HEAD HTTP error %ld\n", _20);
goto <bb 7>; [100.00%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 536870911]:
free (url_9);
_22 = stderr;
__builtin_fwrite ("Unable to start HEAD request\n", 1, 29, _22);

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 1073741824]:
# ret_23 = PHI <0(3), 1(4), -1(5), -1(6)>
free (url_9);
results ={v} {CLOBBER};
return 0;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    gimple malloc count : 1 [0m
[40;34m    gimple free   count : 3 [0m
[40;34m    all ptable point : 16 [0m
[40;34m    analyzable ptable point : 12 [0m
[40;34m    used_stmt array stack totalsize of : 0.000968 mb[0m
[40;34m    collect time: : 0.000626 s [0m
[40;34m    algorithm time: 0.028553 s [0m
[40;34m    gimple stmt count : : 35 [0m
[40;34m    this report analysis in Fri Feb 18 06:36:44 2022
 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.00 (  0%)  2157k ( 91%)
 phase opt and generate             :   0.02 (100%)   0.02 (100%)   0.04 (100%)   153k (  6%)
 callgraph functions expansion      :   0.01 ( 50%)   0.01 ( 50%)   0.01 ( 25%)    88k (  4%)
 tree reassociation                 :   0.00 (  0%)   0.00 (  0%)   0.01 ( 25%)    48  (  0%)
 plugin execution                   :   0.01 ( 50%)   0.01 ( 50%)   0.03 ( 75%)   304  (  0%)
 initialize rtl                     :   0.01 ( 50%)   0.01 ( 50%)   0.00 (  0%)    12k (  1%)
 TOTAL                              :   0.02          0.02          0.04         2363k
/usr/bin/ld: /tmp/ccGM5TJY.ltrans0.ltrans.o: in function `main':
<artificial>:(.text+0x42): undefined reference to `get_active_slot'
/usr/bin/ld: <artificial>:(.text+0x5e): undefined reference to `curl_easy_setopt'
/usr/bin/ld: <artificial>:(.text+0x75): undefined reference to `curl_easy_setopt'
/usr/bin/ld: <artificial>:(.text+0x82): undefined reference to `start_active_slot'
/usr/bin/ld: <artificial>:(.text+0x93): undefined reference to `run_active_slot'
collect2: error: ld returned 1 exit status
