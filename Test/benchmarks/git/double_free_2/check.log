../Compiler/newplugin.so 11.2.0 
In file included from ./benchmarks/git/double_free_2/git_df_2.c:11:
./benchmarks/git/double_free_2/../git.h: In function ‘copy_array’:
./benchmarks/git/double_free_2/../git.h:161:17: warning: implicit declaration of function ‘memcpy’ [-Wimplicit-function-declaration]
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                 ^~~~~~
./benchmarks/git/double_free_2/../git.h:1:1: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
  +++ |+#include <string.h>
    1 | #define STRING_LIST_INIT_NODUP { NULL, 0, 0, 0, NULL }
./benchmarks/git/double_free_2/../git.h:161:17: warning: incompatible implicit declaration of built-in function ‘memcpy’ [-Wbuiltin-declaration-mismatch]
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                 ^~~~~~
./benchmarks/git/double_free_2/../git.h:161:17: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
./benchmarks/git/double_free_2/../git.h:161:34: warning: implicit declaration of function ‘st_mult’ [-Wimplicit-function-declaration]
  161 |                 memcpy(dst, src, st_mult(size, n));
      |                                  ^~~~~~~
./benchmarks/git/double_free_2/../git.h: In function ‘move_array’:
./benchmarks/git/double_free_2/../git.h:169:17: warning: implicit declaration of function ‘memmove’ [-Wimplicit-function-declaration]
  169 |                 memmove(dst, src, st_mult(size, n));
      |                 ^~~~~~~
./benchmarks/git/double_free_2/../git.h:169:17: note: include ‘<string.h>’ or provide a declaration of ‘memmove’
./benchmarks/git/double_free_2/../git.h:169:17: warning: incompatible implicit declaration of built-in function ‘memmove’ [-Wbuiltin-declaration-mismatch]
./benchmarks/git/double_free_2/../git.h:169:17: note: include ‘<string.h>’ or provide a declaration of ‘memmove’
In file included from ./benchmarks/git/double_free_2/git_df_2.c:10:
./benchmarks/git/double_free_2/../git.h: In function ‘xstrdup_or_null’:
./benchmarks/git/double_free_2/../stdio.h:138:20: warning: implicit declaration of function ‘strdup’ [-Wimplicit-function-declaration]
  138 | #define xstrdup(a) strdup(a)
      |                    ^~~~~~
./benchmarks/git/double_free_2/../git.h:174:22: note: in expansion of macro ‘xstrdup’
  174 |         return str ? xstrdup(str) : NULL;
      |                      ^~~~~~~
./benchmarks/git/double_free_2/../stdio.h:138:20: warning: incompatible implicit declaration of built-in function ‘strdup’ [-Wbuiltin-declaration-mismatch]
  138 | #define xstrdup(a) strdup(a)
      |                    ^~~~~~
./benchmarks/git/double_free_2/../git.h:174:22: note: in expansion of macro ‘xstrdup’
  174 |         return str ? xstrdup(str) : NULL;
      |                      ^~~~~~~
In file included from ./benchmarks/git/double_free_2/git_df_2.c:11:
./benchmarks/git/double_free_2/../git.h: At top level:
./benchmarks/git/double_free_2/../git.h:236:62: warning: ‘struct archiver_args’ declared inside parameter list will not be visible outside of this definition or declaration
  236 |         int (*write_archive)(const struct archiver *, struct archiver_args *);
      |                                                              ^~~~~~~~~~~~~
./benchmarks/git/double_free_2/../git.h: In function ‘strbuf_swap’:
./benchmarks/git/double_free_2/../git.h:126:9: warning: incompatible implicit declaration of built-in function ‘memcpy’ [-Wbuiltin-declaration-mismatch]
  126 |         memcpy(_swap_buffer, _swap_a_ptr, sizeof(a));           \
      |         ^~~~~~
./benchmarks/git/double_free_2/../git.h:407:9: note: in expansion of macro ‘SWAP’
  407 |         SWAP(*a, *b);
      |         ^~~~
./benchmarks/git/double_free_2/../git.h:126:9: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
  126 |         memcpy(_swap_buffer, _swap_a_ptr, sizeof(a));           \
      |         ^~~~~~
./benchmarks/git/double_free_2/../git.h:407:9: note: in expansion of macro ‘SWAP’
  407 |         SWAP(*a, *b);
      |         ^~~~
./benchmarks/git/double_free_2/git_df_2.c: In function ‘strbuf_release’:
./benchmarks/git/double_free_2/git_df_2.c:16:5: warning: implicit declaration of function ‘memset’ [-Wimplicit-function-declaration]
   16 |     memset(sb, 0, sizeof(*sb));
      |     ^~~~~~
./benchmarks/git/double_free_2/git_df_2.c:12:1: note: include ‘<string.h>’ or provide a declaration of ‘memset’
   11 | #include "../git.h"
  +++ |+#include <string.h>
   12 | 
./benchmarks/git/double_free_2/git_df_2.c:16:5: warning: incompatible implicit declaration of built-in function ‘memset’ [-Wbuiltin-declaration-mismatch]
   16 |     memset(sb, 0, sizeof(*sb));
      |     ^~~~~~
./benchmarks/git/double_free_2/git_df_2.c:16:5: note: include ‘<string.h>’ or provide a declaration of ‘memset’
In file included from ./benchmarks/git/double_free_2/git_df_2.c:11:
./benchmarks/git/double_free_2/git_df_2.c: In function ‘strbuf_grow’:
./benchmarks/git/double_free_2/../git.h:112:29: warning: implicit declaration of function ‘alloc_nr’; did you mean ‘alloca’? [-Wimplicit-function-declaration]
  112 |                         if (alloc_nr(alloc) < (nr)) \
      |                             ^~~~~~~~
./benchmarks/git/double_free_2/git_df_2.c:23:9: note: in expansion of macro ‘ALLOC_GROW’
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^~~~~~~~~~
./benchmarks/git/double_free_2/git_df_2.c: In function ‘strbuf_reset’:
./benchmarks/git/double_free_2/git_df_2.c:29:17: warning: implicit declaration of function ‘strbuf_setlen’; did you mean ‘strbuf_reset’? [-Wimplicit-function-declaration]
   29 |                 strbuf_setlen(sb, 0);
      |                 ^~~~~~~~~~~~~
      |                 strbuf_reset
./benchmarks/git/double_free_2/git_df_2.c: In function ‘strbuf_add’:
./benchmarks/git/double_free_2/git_df_2.c:35:9: warning: incompatible implicit declaration of built-in function ‘memcpy’ [-Wbuiltin-declaration-mismatch]
   35 |         memcpy(sb->buf + sb->len, data, len);
      |         ^~~~~~
./benchmarks/git/double_free_2/git_df_2.c:35:9: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
./benchmarks/git/double_free_2/git_df_2.c: In function ‘strtoul’:
./benchmarks/git/double_free_2/git_df_2.c:62:13: warning: assignment discards ‘const’ qualifier from pointer target type [-Wdiscarded-qualifiers]
   62 |     *endptr = str + base;
      |             ^
./benchmarks/git/double_free_2/git_df_2.c: In function ‘unquote_c_style’:
./benchmarks/git/double_free_2/git_df_2.c:87:23: warning: implicit declaration of function ‘strcspn’ [-Wimplicit-function-declaration]
   87 |                 len = strcspn(quoted, "\"\\");
      |                       ^~~~~~~
./benchmarks/git/double_free_2/git_df_2.c:87:23: note: include ‘<string.h>’ or provide a declaration of ‘strcspn’
./benchmarks/git/double_free_2/git_df_2.c:87:23: warning: incompatible implicit declaration of built-in function ‘strcspn’ [-Wbuiltin-declaration-mismatch]
./benchmarks/git/double_free_2/git_df_2.c:87:23: note: include ‘<string.h>’ or provide a declaration of ‘strcspn’
./benchmarks/git/double_free_2/git_df_2.c:128:17: warning: implicit declaration of function ‘strbuf_addch’; did you mean ‘strbuf_add’? [-Wimplicit-function-declaration]
  128 |                 strbuf_addch(sb, ch);
      |                 ^~~~~~~~~~~~
      |                 strbuf_add
./benchmarks/git/double_free_2/git_df_2.c: In function ‘read_index_info’:
./benchmarks/git/double_free_2/git_df_2.c:141:9: warning: implicit declaration of function ‘strbuf_init’ [-Wimplicit-function-declaration]
  141 |         strbuf_init(&buf, 0);
      |         ^~~~~~~~~~~
./benchmarks/git/double_free_2/git_df_2.c:174:23: warning: implicit declaration of function ‘strchr’ [-Wimplicit-function-declaration]
  174 |                 tab = strchr(ptr, '\t');
      |                       ^~~~~~
./benchmarks/git/double_free_2/git_df_2.c:174:23: note: include ‘<string.h>’ or provide a declaration of ‘strchr’
./benchmarks/git/double_free_2/git_df_2.c:174:23: warning: incompatible implicit declaration of built-in function ‘strchr’ [-Wbuiltin-declaration-mismatch]
./benchmarks/git/double_free_2/git_df_2.c:174:23: note: include ‘<string.h>’ or provide a declaration of ‘strchr’
./benchmarks/git/double_free_2/git_df_2.c:188:21: warning: implicit declaration of function ‘get_sha1_hex’ [-Wimplicit-function-declaration]
  188 |                 if (get_sha1_hex(tab - 40, sha1) || tab[-41] != ' ')
      |                     ^~~~~~~~~~~~
./benchmarks/git/double_free_2/git_df_2.c:200:22: warning: implicit declaration of function ‘verify_path’ [-Wimplicit-function-declaration]
  200 |                 if (!verify_path(path_name)) {
      |                      ^~~~~~~~~~~
./benchmarks/git/double_free_2/git_df_2.c:207:29: warning: implicit declaration of function ‘remove_file_from_cache’ [-Wimplicit-function-declaration]
  207 |                         if (remove_file_from_cache(path_name))
      |                             ^~~~~~~~~~~~~~~~~~~~~~
./benchmarks/git/double_free_2/git_df_2.c:217:29: warning: implicit declaration of function ‘add_cacheinfo’ [-Wimplicit-function-declaration]
  217 |                         if (add_cacheinfo(mode, sha1, path_name, stage))
      |                             ^~~~~~~~~~~~~

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.00 (  0%)  1298k ( 45%)
 phase parsing                      :   0.04 ( 67%)   0.02 (100%)   0.06 ( 75%)  1207k ( 42%)
 phase opt and generate             :   0.02 ( 33%)   0.00 (  0%)   0.02 ( 25%)   369k ( 13%)
 callgraph construction             :   0.01 ( 17%)   0.00 (  0%)   0.00 (  0%)    96k (  3%)
 callgraph optimization             :   0.01 ( 17%)   0.00 (  0%)   0.00 (  0%)     0  (  0%)
 callgraph ipa passes               :   0.01 ( 17%)   0.00 (  0%)   0.02 ( 25%)   161k (  6%)
 lto stream compression             :   0.00 (  0%)   0.00 (  0%)   0.01 ( 13%)     0  (  0%)
 ipa free lang data                 :   0.00 (  0%)   0.00 (  0%)   0.01 ( 12%)    10k (  0%)
 preprocessing                      :   0.01 ( 17%)   0.02 (100%)   0.03 ( 37%)   367k ( 13%)
 lexical analysis                   :   0.00 (  0%)   0.00 (  0%)   0.02 ( 25%)     0  (  0%)
 parser (global)                    :   0.01 ( 17%)   0.00 (  0%)   0.00 (  0%)   614k ( 21%)
 parser function body               :   0.01 ( 17%)   0.00 (  0%)   0.01 ( 12%)    73k (  3%)
 plugin execution                   :   0.01 ( 17%)   0.00 (  0%)   0.00 (  0%)     0  (  0%)
 TOTAL                              :   0.06          0.02          0.08         2886k
../Compiler/newplugin.so 11.2.0 

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.01 (100%)   0.00 (  0%)   0.01 (100%)  2157k ( 96%)
 TOTAL                              :   0.01          0.00          0.01         2238k
../Compiler/newplugin.so 11.2.0 
=======ipa_pta=========
=============== The first stage : Point of interest stmt collect =================
=======node_fun:main=========
node:= 2 
 	next_branch :=59
node:= 3 
 	next_branch :=7
	next_branch :=4
node:= 4 
 	next_branch :=7
	next_branch :=5
node:= 5 
 	next_branch :=7
	next_branch :=6
node:= 6 
 	next_branch :=7
	next_branch :=8
node:= 7 
 	next_branch :=57
node:= 8 
 	next_branch :=10
	next_branch :=9
node:= 9 
 	next_branch :=10
	next_branch :=11
node:= 10 
 	next_branch :=57
node:= 11 
 	next_branch :=12
	next_branch :=15
node:= 12 
 	next_branch :=13
	next_branch :=15
node:= 13 
 	next_branch :=14
	next_branch :=15
node:= 14 
 	next_branch :=16
node:= 15 
 	next_branch :=16
node:= 16 
 	next_branch :=18
	next_branch :=17
node:= 17 
 	next_branch :=18
	next_branch :=19
node:= 18 
 	next_branch :=57
node:= 19 
 	next_branch :=20
	next_branch :=47
node:= 20 
 	next_branch :=21
	next_branch :=47
node:= 21 
 	next_branch :=22
	next_branch :=23
node:= 22 
 	next_branch :=23
node:= 23 
 	next_branch :=44
	next_branch :=24
node:= 24 
 	next_branch :=25
	next_branch :=44
	next_branch :=26
node:= 25 
 	next_branch :=43
node:= 26 
 	next_branch :=41
	next_branch :=42
	next_branch :=34
	next_branch :=27
	next_branch :=28
	next_branch :=29
	next_branch :=30
	next_branch :=31
	next_branch :=32
	next_branch :=33
node:= 27 
 	next_branch :=42
node:= 28 
 	next_branch :=42
node:= 29 
 	next_branch :=42
node:= 30 
 	next_branch :=42
node:= 31 
 	next_branch :=42
node:= 32 
 	next_branch :=42
node:= 33 
 	next_branch :=42
node:= 34 
 	next_branch :=36
	next_branch :=35
node:= 35 
 	next_branch :=36
	next_branch :=37
node:= 36 
 	next_branch :=43
node:= 37 
 	next_branch :=39
	next_branch :=38
node:= 38 
 	next_branch :=39
	next_branch :=40
node:= 39 
 	next_branch :=43
node:= 40 
 	next_branch :=42
node:= 41 
 	next_branch :=43
node:= 42 
 	next_branch :=24
node:= 43 
 	next_branch :=44
node:= 44 
 	next_branch :=45
	next_branch :=46
node:= 45 
 node:= 46 
 	next_branch :=47
node:= 47 
 	next_branch :=48
	next_branch :=49
node:= 48 
 	next_branch :=58
node:= 49 
 	next_branch :=50
	next_branch :=52
node:= 50 
 	next_branch :=51
	next_branch :=54
node:= 51 
 node:= 52 
 	next_branch :=53
	next_branch :=54
node:= 53 
 node:= 54 
 	next_branch :=55
	next_branch :=56
node:= 55 
 	next_branch :=56
node:= 56 
 	next_branch :=58
node:= 57 
 node:= 58 
 	next_branch :=59
node:= 59 
 	next_branch :=69
	next_branch :=60
node:= 60 
 	next_branch :=61
	next_branch :=62
node:= 61 
 	next_branch :=62
node:= 62 
 	next_branch :=65
node:= 63 
 	next_branch :=66
	next_branch :=64
node:= 64 
 	next_branch :=65
node:= 65 
 	next_branch :=63
	next_branch :=66
node:= 66 
 	next_branch :=67
	next_branch :=68
node:= 67 
 	next_branch :=69
	next_branch :=68
node:= 68 
 	next_branch :=69
node:= 69 
 	next_branch :=3
	next_branch :=70
=======node_fun:strtoul=========
=======node_fun:strbuf_grow=========
node:= 2 
 	next_branch :=3
	next_branch :=4
node:= 3 
 node:= 4 
 	next_branch :=5
	next_branch :=16
node:= 5 
 	next_branch :=6
	next_branch :=7
node:= 6 
 	next_branch :=8
node:= 7 
 	next_branch :=8
node:= 8 
 	next_branch :=9
	next_branch :=10
node:= 9 
 	next_branch :=10
node:= 10 
 	next_branch :=11
	next_branch :=15
node:= 11 
 	next_branch :=12
	next_branch :=13
node:= 12 
 	next_branch :=13
node:= 13 
 	next_branch :=14
	next_branch :=15
node:= 14 
 node:= 15 
 	next_branch :=16
=============== The first stage :  record fucntion =================
start PointerConstraint
ptable point 20 
===============The second stage : Mapping stmt=================
# .MEM_114 = VDEF <.MEM_3(D)>
strbuf_init (&buf, 0);
# .MEM_115 = VDEF <.MEM_114>
strbuf_init (&uq, 0);
_5 = __errno_location ();
_12 = __errno_location ();
# VUSE <.MEM_131>
tab_17 = strchr (_16, 9);
# .MEM_136 = VDEF <.MEM_101>
_31 = get_sha1_hex (_30, &sha1);
# .MEM_137 = VDEF <.MEM_136>
strbuf_setlen (&uq, 0);
# VUSE <.MEM_108>
len_58 = strcspn (quoted_57, "\"\\");
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
# .MEM_139 = VDEF <.MEM_138>
memcpy (_83, quoted_57, len_58);
# .MEM_140 = VDEF <.MEM_139>
strbuf_setlen (&uq, _85);
# .MEM_141 = VDEF <.MEM_140>
strbuf_addch (&uq, ch_77);
# .MEM_142 = VDEF <.MEM_140>
strbuf_setlen (&uq, oldlen_54);
# .MEM_146 = VDEF <.MEM_102>
_38 = verify_path (path_name_37);
# .MEM_156 = VDEF <.MEM_146>
fprintf (_39, "Ignoring path %s\n", path_name_37);
# .MEM_152 = VDEF <.MEM_146>
_40 = remove_file_from_cache (path_name_37);
# .MEM_149 = VDEF <.MEM_148>
_46 = add_cacheinfo (mode_15, &sha1, path_name_37, stage_45);
# .MEM_116 = VDEF <.MEM_107>
strbuf_grow (&buf, 0);
# .MEM_117 = VDEF <.MEM_116>
_86 = feof (_49);
# .MEM_118 = VDEF <.MEM_117>
strbuf_setlen (&buf, 0);
# .MEM_120 = VDEF <.MEM_119>
strbuf_grow (&buf, 1);
# .MEM_119 = VDEF <.MEM_111>
ch_87 = fgetc (_49);
# .MEM_126 = VDEF <.MEM_125>
memset (&buf, 0, 24);
# .MEM_128 = VDEF <.MEM_127>
memset (&uq, 0, 24);
# .MEM_34 = VDEF <.MEM_33(D)>
_10 = alloc_nr (_9);
# .MEM_35 = VDEF <.MEM_34>
_19 = alloc_nr (_18);
# .MEM_38 = VDEF <.MEM_31>
_22 = st_mult (1, _21);
===============The second stage : Program slicing=================
=============== *this point analyzable =================
_5 = __errno_location ();
=============== *this point analyzable =================
_12 = __errno_location ();
=============== *this point analyzable =================
tab_17 = strchr (_16, 9);
=============== *this point analyzable =================
_31 = get_sha1_hex (_30, &sha1);
=============== *this point analyzable =================
len_58 = strcspn (quoted_57, "\"\\");
=============== *this point analyzable =================
_38 = verify_path (path_name_37);
=============== *this point analyzable =================
_40 = remove_file_from_cache (path_name_37);
=============== *this point analyzable =================
_46 = add_cacheinfo (mode_15, &sha1, path_name_37, stage_45);
=============== *this point analyzable =================
_86 = feof (_49);
=============== *this point analyzable =================
ch_87 = fgetc (_49);
=============== *this point analyzable =================
_10 = alloc_nr (_9);
=============== *this point analyzable =================
_19 = alloc_nr (_18);
=============== *this point analyzable =================
_22 = st_mult (1, _21);
=============== *this point analyzable =================
ret_43 = realloc (_24, _23);
=============== *this point analyzable =================
ret_47 = realloc (_24, 1);
=============== *this point analyzable =================
ret_49 = realloc (_24, _23);
=============== *this point analyzable =================
ret_53 = realloc (_24, 1);
=============== *this point analyzable =================
tab_17 = strchr (_16, 9);
=============== *this point analyzable =================
_31 = get_sha1_hex (_30, &sha1);
=============== *this point analyzable =================
len_58 = strcspn (quoted_57, "\"\\");
=============== *this point analyzable =================
memcpy (_83, quoted_57, len_58);
=============== *this point analyzable =================
strbuf_setlen (&uq, _85);
=============== *this point analyzable =================
strbuf_addch (&uq, ch_77);
=============== *this point analyzable =================
strbuf_setlen (&uq, oldlen_54);
=============== *this point analyzable =================
_38 = verify_path (path_name_37);
=============== *this point analyzable =================
fprintf (_39, "Ignoring path %s\n", path_name_37);
=============== *this point analyzable =================
_46 = add_cacheinfo (mode_15, &sha1, path_name_37, stage_45);
=============== *this point analyzable =================
_46 = add_cacheinfo (mode_15, &sha1, path_name_37, stage_45);
=============== *this point analyzable =================
_86 = feof (_49);
=============== *this point analyzable =================
_10 = alloc_nr (_9);
=============== *this point analyzable =================
_19 = alloc_nr (_18);
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m

=============== The third stage : Start detection  =================
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 19 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:memset========= [0m
[40;33m =======POP node_fun stack:memset========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:fgetc========= [0m
[40;33m =======POP node_fun stack:fgetc========= [0m
[40;42m =======pre add _ fucntion:strbuf_grow========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path strbuf_grow  function_call count: 5 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;33m =======POP node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;33m =======POP node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:alloc_nr========= [0m
[40;33m =======POP node_fun stack:alloc_nr========= [0m
[40;42m =======pre_check_funciton:strbuf_grow========= [0m
[40;42m =======start_check_funciton:strbuf_grow========= [0m

dot graph START

======================================================================
 <ssa_name 0x7ff99405b7e0
    type <integer_type 0x7ff9945175e8 int public SI
        size <integer_cst 0x7ff994502df8 constant 32>
        unit-size <integer_cst 0x7ff994502e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff9945175e8 precision:32 min <integer_cst 0x7ff994502db0 -2147483648> max <integer_cst 0x7ff994502dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff99451e9d8>>
   
    def_stmt _10 = alloc_nr (_9);
    version:10>
# .MEM_34 = VDEF <.MEM_33(D)>
_10 = alloc_nr (_9);

 ================== pre trace ptable ================== 
trace fucntion name:alloc_nr 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function alloc_nr
 
 Start check Pointer Collect  

======================================================================
# .MEM_34 = VDEF <.MEM_33(D)>
_10 = alloc_nr (_9);
_10 = alloc_nr (_9);
In function ‘main’:
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^
this stmt call this function :alloc_nr
trace fucntion name:alloc_nr 

 ================== trace ================== 
trace fucntion free:0 
_11 = (long unsigned int) _10;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
if (_11 < _14)
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff99405b7e0
    type <integer_type 0x7ff9945175e8 int public SI
        size <integer_cst 0x7ff994502df8 constant 32>
        unit-size <integer_cst 0x7ff994502e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff9945175e8 precision:32 min <integer_cst 0x7ff994502db0 -2147483648> max <integer_cst 0x7ff994502dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff99451e9d8>>
   
    def_stmt _10 = alloc_nr (_9);
    version:10>

 ================================================================= 
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:4 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:4 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff99405ba68
    type <integer_type 0x7ff9945175e8 int public SI
        size <integer_cst 0x7ff994502df8 constant 32>
        unit-size <integer_cst 0x7ff994502e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff9945175e8 precision:32 min <integer_cst 0x7ff994502db0 -2147483648> max <integer_cst 0x7ff994502dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff99451e9d8>>
   
    def_stmt _19 = alloc_nr (_18);
    version:19>
# .MEM_35 = VDEF <.MEM_34>
_19 = alloc_nr (_18);

 ================== pre trace ptable ================== 
trace fucntion name:alloc_nr 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function alloc_nr
 
 Start check Pointer Collect  

======================================================================
# .MEM_35 = VDEF <.MEM_34>
_19 = alloc_nr (_18);
_19 = alloc_nr (_18);
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^
this stmt call this function :alloc_nr
trace fucntion name:alloc_nr 

 ================== trace ================== 
trace fucntion free:0 
_20 = (long unsigned int) _19;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
sb_29(D)->alloc = _20;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_24 = sb_29(D)->buf;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
this stmt call this function :realloc

 ================== find free stmt ================== 
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: use location
[40;32m    FIND REALLOC STMT count:1 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find free stmt ================== 
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----
_65 = ret_55;
lto1: warning: use location
if (ret_54 == 0B)
./benchmarks/git/double_free_2/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
this stmt call this function :realloc

 ================== find free stmt ================== 
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: use location
[40;32m    FIND REALLOC STMT count:2 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find free stmt ================== 
_50 = ret_49 == 0B;
./benchmarks/git/double_free_2/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^
if (_52 != 0)
./benchmarks/git/double_free_2/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
this stmt call this function :realloc

 ================== find free stmt ================== 
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: use location
[40;32m    FIND REALLOC STMT count:3 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find free stmt ================== 
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
this stmt call this function :realloc

 ================== find free stmt ================== 
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: use location
[40;32m    FIND REALLOC STMT count:4 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find free stmt ================== 
_44 = ret_43 == 0B;
./benchmarks/git/double_free_2/../git.h:415:13: warning: use location
  415 |         if (!ret && !size)
      |             ^
_46 = _44 & _45;
./benchmarks/git/double_free_2/../git.h:415:18: warning: use location
  415 |         if (!ret && !size)
      |                  ^
_21 = sb_29(D)->alloc;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^
_22 = st_mult (1, _21);
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
this stmt call this function :st_mult
trace fucntion name:st_mult 

 ================== trace ================== 
trace fucntion free:4 
_23 = (long unsigned int) _22;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_51 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^
_45 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:415:21: warning: use location
  415 |         if (!ret && !size)
      |                     ^
_18 = sb_29(D)->alloc;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^
sb_29(D)->alloc = _17;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
sb_29(D)->alloc = _17;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_15 = sb_29(D)->len;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_16 = _15 + extra_30(D);
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_12 = sb_29(D)->len;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_13 = _12 + extra_30(D);
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_9 = sb_29(D)->alloc;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location

======================================================================

 Expand conflict 
 The same function may have multiple branches :alloc_nr
# .MEM_35 = VDEF <.MEM_34>
_19 = alloc_nr (_18);
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
# .MEM_34 = VDEF <.MEM_33(D)>
_10 = alloc_nr (_9);
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_8 = sb_29(D)->alloc;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^
_5 = sb_29(D)->len;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_4 = sb_29(D)->len;
./benchmarks/git/double_free_2/git_df_2.c:21:38: warning: use location
   21 |         if (sb->len + extra + 1 <= sb->len)
      |                                      ^
_1 = sb_29(D)->len;
./benchmarks/git/double_free_2/git_df_2.c:21:15: warning: use location
   21 |         if (sb->len + extra + 1 <= sb->len)
      |               ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff99405ba68
    type <integer_type 0x7ff9945175e8 int public SI
        size <integer_cst 0x7ff994502df8 constant 32>
        unit-size <integer_cst 0x7ff994502e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff9945175e8 precision:32 min <integer_cst 0x7ff994502db0 -2147483648> max <integer_cst 0x7ff994502dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff99451e9d8>>
   
    def_stmt _19 = alloc_nr (_18);
    version:19>

 ================================================================= 
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
[40;35m target gimple type: ssa_name [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: component_ref [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: component_ref [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: component_ref [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: component_ref [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: component_ref [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: component_ref [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: component_ref [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: component_ref [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
[40;35m target gimple type: ssa_name [0m
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
[40;35m target gimple type: ssa_name [0m
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
[40;35m target gimple type: ssa_name [0m
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
[40;35m target gimple type: ssa_name [0m
_65 = ret_55;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_65 = ret_55;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_65 = ret_55;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_65 = ret_55;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
[40;35m target gimple type: ssa_name [0m
_65 = ret_55;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_65 = ret_55;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_65 = ret_55;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
_65 = ret_55;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
[40;35m target gimple type: ssa_name [0m
if (ret_54 == 0B)
./benchmarks/git/double_free_2/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
if (ret_54 == 0B)
./benchmarks/git/double_free_2/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
if (ret_54 == 0B)
./benchmarks/git/double_free_2/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
if (ret_54 == 0B)
./benchmarks/git/double_free_2/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
if (ret_54 == 0B)
./benchmarks/git/double_free_2/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
if (ret_54 == 0B)
./benchmarks/git/double_free_2/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
if (ret_54 == 0B)
./benchmarks/git/double_free_2/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
if (ret_54 == 0B)
./benchmarks/git/double_free_2/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_50 = ret_49 == 0B;
./benchmarks/git/double_free_2/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_50 = ret_49 == 0B;
./benchmarks/git/double_free_2/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_50 = ret_49 == 0B;
./benchmarks/git/double_free_2/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_50 = ret_49 == 0B;
./benchmarks/git/double_free_2/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_50 = ret_49 == 0B;
./benchmarks/git/double_free_2/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_50 = ret_49 == 0B;
./benchmarks/git/double_free_2/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
if (_52 != 0)
./benchmarks/git/double_free_2/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
if (_52 != 0)
./benchmarks/git/double_free_2/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
if (_52 != 0)
./benchmarks/git/double_free_2/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
if (_52 != 0)
./benchmarks/git/double_free_2/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
if (_52 != 0)
./benchmarks/git/double_free_2/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
if (_52 != 0)
./benchmarks/git/double_free_2/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
[40;35m target gimple type: ssa_name [0m
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_44 = ret_43 == 0B;
./benchmarks/git/double_free_2/../git.h:415:13: warning: use location
  415 |         if (!ret && !size)
      |             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_44 = ret_43 == 0B;
./benchmarks/git/double_free_2/../git.h:415:13: warning: use location
  415 |         if (!ret && !size)
      |             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_46 = _44 & _45;
./benchmarks/git/double_free_2/../git.h:415:18: warning: use location
  415 |         if (!ret && !size)
      |                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_46 = _44 & _45;
./benchmarks/git/double_free_2/../git.h:415:18: warning: use location
  415 |         if (!ret && !size)
      |                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_51 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_51 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_51 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_51 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_51 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_51 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_45 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:415:21: warning: use location
  415 |         if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_45 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:415:21: warning: use location
  415 |         if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:4 [0m
[40;31m  	free count:4 [0m
[40;31m  	possible double free [Looserules]:4 [0m
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff99405bb40
    type <integer_type 0x7ff9945175e8 int public SI
        size <integer_cst 0x7ff994502df8 constant 32>
        unit-size <integer_cst 0x7ff994502e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff9945175e8 precision:32 min <integer_cst 0x7ff994502db0 -2147483648> max <integer_cst 0x7ff994502dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff99451e9d8>>
   
    def_stmt _22 = st_mult (1, _21);
    version:22>
# .MEM_38 = VDEF <.MEM_31>
_22 = st_mult (1, _21);

 ================== pre trace ptable ================== 
trace fucntion name:st_mult 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function st_mult
 
 Start check Pointer Collect  

======================================================================
# .MEM_38 = VDEF <.MEM_31>
_22 = st_mult (1, _21);
_22 = st_mult (1, _21);
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^
this stmt call this function :st_mult
trace fucntion name:st_mult 

 ================== trace ================== 
trace fucntion free:0 
_23 = (long unsigned int) _22;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_51 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^
if (_52 != 0)
./benchmarks/git/double_free_2/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
this stmt call this function :realloc

 ================== find free stmt ================== 
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: use location
[40;32m    FIND REALLOC STMT count:1 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find free stmt ================== 
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----
_65 = ret_55;
lto1: warning: use location
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^
_24 = sb_29(D)->buf;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
this stmt call this function :realloc

 ================== find free stmt ================== 
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: use location
[40;32m    FIND REALLOC STMT count:2 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find free stmt ================== 
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
this stmt call this function :realloc

 ================== find free stmt ================== 
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: use location
[40;32m    FIND REALLOC STMT count:3 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find free stmt ================== 
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----
if (ret_48 == 0B)
./benchmarks/git/double_free_2/../git.h:417:12: warning: use location
  417 |         if (!ret) {
      |            ^
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
this stmt call this function :realloc

 ================== find free stmt ================== 
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: use location
[40;32m    FIND REALLOC STMT count:4 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find free stmt ================== 
_44 = ret_43 == 0B;
./benchmarks/git/double_free_2/../git.h:415:13: warning: use location
  415 |         if (!ret && !size)
      |             ^
_46 = _44 & _45;
./benchmarks/git/double_free_2/../git.h:415:18: warning: use location
  415 |         if (!ret && !size)
      |                  ^
_21 = sb_29(D)->alloc;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^
sb_29(D)->alloc = _20;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^
sb_29(D)->alloc = _20;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_18 = sb_29(D)->alloc;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_19 = alloc_nr (_18);
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
this stmt call this function :alloc_nr
trace fucntion name:alloc_nr 

 ================== trace ================== 
trace fucntion free:4 
sb_29(D)->alloc = _17;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
sb_29(D)->alloc = _17;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_15 = sb_29(D)->len;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_16 = _15 + extra_30(D);
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_12 = sb_29(D)->len;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_13 = _12 + extra_30(D);
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_9 = sb_29(D)->alloc;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_10 = alloc_nr (_9);
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
this stmt call this function :alloc_nr
trace fucntion name:alloc_nr 

 ================== trace ================== 
trace fucntion free:4 
_11 = (long unsigned int) _10;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_8 = sb_29(D)->alloc;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^
_5 = sb_29(D)->len;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_4 = sb_29(D)->len;
./benchmarks/git/double_free_2/git_df_2.c:21:38: warning: use location
   21 |         if (sb->len + extra + 1 <= sb->len)
      |                                      ^
_1 = sb_29(D)->len;
./benchmarks/git/double_free_2/git_df_2.c:21:15: warning: use location
   21 |         if (sb->len + extra + 1 <= sb->len)
      |               ^
_50 = ret_49 == 0B;
./benchmarks/git/double_free_2/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^
_45 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:415:21: warning: use location
  415 |         if (!ret && !size)
      |                     ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff99405bb40
    type <integer_type 0x7ff9945175e8 int public SI
        size <integer_cst 0x7ff994502df8 constant 32>
        unit-size <integer_cst 0x7ff994502e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff9945175e8 precision:32 min <integer_cst 0x7ff994502db0 -2147483648> max <integer_cst 0x7ff994502dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff99451e9d8>>
   
    def_stmt _22 = st_mult (1, _21);
    version:22>

 ================================================================= 
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_51 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_51 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_51 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_51 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_51 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_51 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
if (_52 != 0)
./benchmarks/git/double_free_2/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
if (_52 != 0)
./benchmarks/git/double_free_2/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
if (_52 != 0)
./benchmarks/git/double_free_2/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
if (_52 != 0)
./benchmarks/git/double_free_2/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
if (_52 != 0)
./benchmarks/git/double_free_2/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
if (_52 != 0)
./benchmarks/git/double_free_2/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
[40;35m target gimple type: ssa_name [0m
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
[40;35m target gimple type: ssa_name [0m
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_65 = ret_55;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
_65 = ret_55;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_65 = ret_55;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_65 = ret_55;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
[40;35m target gimple type: ssa_name [0m
_65 = ret_55;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_65 = ret_55;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_65 = ret_55;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
_65 = ret_55;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
[40;35m target gimple type: ssa_name [0m
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
if (ret_48 == 0B)
./benchmarks/git/double_free_2/../git.h:417:12: warning: use location
  417 |         if (!ret) {
      |            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
if (ret_48 == 0B)
./benchmarks/git/double_free_2/../git.h:417:12: warning: use location
  417 |         if (!ret) {
      |            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
if (ret_48 == 0B)
./benchmarks/git/double_free_2/../git.h:417:12: warning: use location
  417 |         if (!ret) {
      |            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
if (ret_48 == 0B)
./benchmarks/git/double_free_2/../git.h:417:12: warning: use location
  417 |         if (!ret) {
      |            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_44 = ret_43 == 0B;
./benchmarks/git/double_free_2/../git.h:415:13: warning: use location
  415 |         if (!ret && !size)
      |             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_44 = ret_43 == 0B;
./benchmarks/git/double_free_2/../git.h:415:13: warning: use location
  415 |         if (!ret && !size)
      |             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_46 = _44 & _45;
./benchmarks/git/double_free_2/../git.h:415:18: warning: use location
  415 |         if (!ret && !size)
      |                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_46 = _44 & _45;
./benchmarks/git/double_free_2/../git.h:415:18: warning: use location
  415 |         if (!ret && !size)
      |                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_50 = ret_49 == 0B;
./benchmarks/git/double_free_2/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_50 = ret_49 == 0B;
./benchmarks/git/double_free_2/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_50 = ret_49 == 0B;
./benchmarks/git/double_free_2/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_50 = ret_49 == 0B;
./benchmarks/git/double_free_2/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_50 = ret_49 == 0B;
./benchmarks/git/double_free_2/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_50 = ret_49 == 0B;
./benchmarks/git/double_free_2/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_45 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:415:21: warning: use location
  415 |         if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_45 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:415:21: warning: use location
  415 |         if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:4 [0m
[40;31m  	free count:4 [0m
[40;31m  	possible double free [Looserules]:4 [0m
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff99405d4c8
    type <pointer_type 0x7ff99451e000
        type <void_type 0x7ff994517f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff99451e000>>
        public unsigned DI
        size <integer_cst 0x7ff994502bb8 constant 64>
        unit-size <integer_cst 0x7ff994502bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff9945239d8>>
    var <var_decl 0x7ff994058d80 ret>
    def_stmt ret_43 = realloc (_24, _23);
    version:43
    ptr-info 0x7ff994011ae0>
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);

 ================== pre trace ptable ================== 
trace fucntion name:realloc 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Reserved word function :realloc
 
 Start check Pointer Collect  

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :realloc
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----
_65 = ret_55;
lto1: warning: use location
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^
_24 = sb_29(D)->buf;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_21 = sb_29(D)->alloc;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_22 = st_mult (1, _21);
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
this stmt call this function :st_mult
trace fucntion name:st_mult 

 ================== trace ================== 
trace fucntion free:0 
sb_29(D)->alloc = _20;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^
sb_29(D)->alloc = _20;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_18 = sb_29(D)->alloc;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_19 = alloc_nr (_18);
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
this stmt call this function :alloc_nr
trace fucntion name:alloc_nr 

 ================== trace ================== 
trace fucntion free:0 
sb_29(D)->alloc = _17;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
sb_29(D)->alloc = _17;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_15 = sb_29(D)->len;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_16 = _15 + extra_30(D);
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_12 = sb_29(D)->len;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_13 = _12 + extra_30(D);
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_9 = sb_29(D)->alloc;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_10 = alloc_nr (_9);
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
this stmt call this function :alloc_nr
trace fucntion name:alloc_nr 

 ================== trace ================== 
trace fucntion free:0 
_11 = (long unsigned int) _10;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_8 = sb_29(D)->alloc;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^
_5 = sb_29(D)->len;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_4 = sb_29(D)->len;
./benchmarks/git/double_free_2/git_df_2.c:21:38: warning: use location
   21 |         if (sb->len + extra + 1 <= sb->len)
      |                                      ^
_1 = sb_29(D)->len;
./benchmarks/git/double_free_2/git_df_2.c:21:15: warning: use location
   21 |         if (sb->len + extra + 1 <= sb->len)
      |               ^
if (ret_54 == 0B)
./benchmarks/git/double_free_2/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

======================================================================

 Expand conflict 
 The same function may have multiple branches :realloc
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
_50 = ret_49 == 0B;
./benchmarks/git/double_free_2/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^
if (_52 != 0)
./benchmarks/git/double_free_2/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

======================================================================

 Expand conflict 
 The same function may have multiple branches :realloc
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
this stmt call this function :realloc

 ================== find free stmt ================== 
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: use location
[40;32m    FIND REALLOC STMT count:1 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find free stmt ================== 
_44 = ret_43 == 0B;
./benchmarks/git/double_free_2/../git.h:415:13: warning: use location
  415 |         if (!ret && !size)
      |             ^
_46 = _44 & _45;
./benchmarks/git/double_free_2/../git.h:415:18: warning: use location
  415 |         if (!ret && !size)
      |                  ^
_51 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^
_45 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:415:21: warning: use location
  415 |         if (!ret && !size)
      |                     ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff99405d4c8
    type <pointer_type 0x7ff99451e000
        type <void_type 0x7ff994517f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff99451e000>>
        public unsigned DI
        size <integer_cst 0x7ff994502bb8 constant 64>
        unit-size <integer_cst 0x7ff994502bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff9945239d8>>
    var <var_decl 0x7ff994058d80 ret>
    def_stmt ret_43 = realloc (_24, _23);
    version:43
    ptr-info 0x7ff994011ae0>

 ================================================================= 
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
[40;35m target gimple type: ssa_name [0m
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
[40;35m target gimple type: ssa_name [0m
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_65 = ret_55;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
[40;35m target gimple type: ssa_name [0m
_65 = ret_55;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_65 = ret_55;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_65 = ret_55;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
_65 = ret_55;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
if (ret_54 == 0B)
./benchmarks/git/double_free_2/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
if (ret_54 == 0B)
./benchmarks/git/double_free_2/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
if (ret_54 == 0B)
./benchmarks/git/double_free_2/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
if (ret_54 == 0B)
./benchmarks/git/double_free_2/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
if (ret_54 == 0B)
./benchmarks/git/double_free_2/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_50 = ret_49 == 0B;
./benchmarks/git/double_free_2/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_50 = ret_49 == 0B;
./benchmarks/git/double_free_2/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_50 = ret_49 == 0B;
./benchmarks/git/double_free_2/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_50 = ret_49 == 0B;
./benchmarks/git/double_free_2/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
if (_52 != 0)
./benchmarks/git/double_free_2/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
if (_52 != 0)
./benchmarks/git/double_free_2/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
if (_52 != 0)
./benchmarks/git/double_free_2/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
if (_52 != 0)
./benchmarks/git/double_free_2/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
[40;35m target gimple type: ssa_name [0m
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_44 = ret_43 == 0B;
./benchmarks/git/double_free_2/../git.h:415:13: warning: use location
  415 |         if (!ret && !size)
      |             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_44 = ret_43 == 0B;
./benchmarks/git/double_free_2/../git.h:415:13: warning: use location
  415 |         if (!ret && !size)
      |             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_46 = _44 & _45;
./benchmarks/git/double_free_2/../git.h:415:18: warning: use location
  415 |         if (!ret && !size)
      |                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_46 = _44 & _45;
./benchmarks/git/double_free_2/../git.h:415:18: warning: use location
  415 |         if (!ret && !size)
      |                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_51 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_51 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_51 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_51 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_45 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:415:21: warning: use location
  415 |         if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_45 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:415:21: warning: use location
  415 |         if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:4 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:4 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff99405d5e8
    type <pointer_type 0x7ff99451e000
        type <void_type 0x7ff994517f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff99451e000>>
        public unsigned DI
        size <integer_cst 0x7ff994502bb8 constant 64>
        unit-size <integer_cst 0x7ff994502bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff9945239d8>>
    var <var_decl 0x7ff994058d80 ret>
    def_stmt ret_47 = realloc (_24, 1);
    version:47
    ptr-info 0x7ff994011af8>
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);

 ================== pre trace ptable ================== 
trace fucntion name:realloc 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Reserved word function :realloc
 
 Start check Pointer Collect  

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :realloc
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----
_65 = ret_55;
lto1: warning: use location
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^
_24 = sb_29(D)->buf;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_21 = sb_29(D)->alloc;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_22 = st_mult (1, _21);
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
this stmt call this function :st_mult
trace fucntion name:st_mult 

 ================== trace ================== 
trace fucntion free:0 
_23 = (long unsigned int) _22;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_51 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^
if (_52 != 0)
./benchmarks/git/double_free_2/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

======================================================================

 Expand conflict 
 The same function may have multiple branches :realloc
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
_50 = ret_49 == 0B;
./benchmarks/git/double_free_2/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^
_45 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:415:21: warning: use location
  415 |         if (!ret && !size)
      |                     ^
_46 = _44 & _45;
./benchmarks/git/double_free_2/../git.h:415:18: warning: use location
  415 |         if (!ret && !size)
      |                  ^

======================================================================

 Expand conflict 
 The same function may have multiple branches :realloc
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
sb_29(D)->alloc = _20;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^
sb_29(D)->alloc = _20;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_18 = sb_29(D)->alloc;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_19 = alloc_nr (_18);
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
this stmt call this function :alloc_nr
trace fucntion name:alloc_nr 

 ================== trace ================== 
trace fucntion free:0 
sb_29(D)->alloc = _17;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
sb_29(D)->alloc = _17;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_15 = sb_29(D)->len;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_16 = _15 + extra_30(D);
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_12 = sb_29(D)->len;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_13 = _12 + extra_30(D);
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_9 = sb_29(D)->alloc;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_10 = alloc_nr (_9);
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
this stmt call this function :alloc_nr
trace fucntion name:alloc_nr 

 ================== trace ================== 
trace fucntion free:0 
_11 = (long unsigned int) _10;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_8 = sb_29(D)->alloc;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^
_5 = sb_29(D)->len;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_4 = sb_29(D)->len;
./benchmarks/git/double_free_2/git_df_2.c:21:38: warning: use location
   21 |         if (sb->len + extra + 1 <= sb->len)
      |                                      ^
_1 = sb_29(D)->len;
./benchmarks/git/double_free_2/git_df_2.c:21:15: warning: use location
   21 |         if (sb->len + extra + 1 <= sb->len)
      |               ^
if (ret_54 == 0B)
./benchmarks/git/double_free_2/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
this stmt call this function :realloc

 ================== find free stmt ================== 
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: use location
[40;32m    FIND REALLOC STMT count:1 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find free stmt ================== 
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff99405d5e8
    type <pointer_type 0x7ff99451e000
        type <void_type 0x7ff994517f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff99451e000>>
        public unsigned DI
        size <integer_cst 0x7ff994502bb8 constant 64>
        unit-size <integer_cst 0x7ff994502bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff9945239d8>>
    var <var_decl 0x7ff994058d80 ret>
    def_stmt ret_47 = realloc (_24, 1);
    version:47
    ptr-info 0x7ff994011af8>

 ================================================================= 
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_65 = ret_55;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_65 = ret_55;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_65 = ret_55;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_65 = ret_55;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
_65 = ret_55;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_51 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_51 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_51 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_51 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
if (_52 != 0)
./benchmarks/git/double_free_2/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
if (_52 != 0)
./benchmarks/git/double_free_2/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
if (_52 != 0)
./benchmarks/git/double_free_2/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
if (_52 != 0)
./benchmarks/git/double_free_2/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_50 = ret_49 == 0B;
./benchmarks/git/double_free_2/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_50 = ret_49 == 0B;
./benchmarks/git/double_free_2/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_50 = ret_49 == 0B;
./benchmarks/git/double_free_2/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_50 = ret_49 == 0B;
./benchmarks/git/double_free_2/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_45 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:415:21: warning: use location
  415 |         if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_46 = _44 & _45;
./benchmarks/git/double_free_2/../git.h:415:18: warning: use location
  415 |         if (!ret && !size)
      |                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
if (ret_54 == 0B)
./benchmarks/git/double_free_2/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
if (ret_54 == 0B)
./benchmarks/git/double_free_2/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
if (ret_54 == 0B)
./benchmarks/git/double_free_2/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
if (ret_54 == 0B)
./benchmarks/git/double_free_2/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
if (ret_54 == 0B)
./benchmarks/git/double_free_2/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:4 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:4 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff99405d678
    type <pointer_type 0x7ff99451e000
        type <void_type 0x7ff994517f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff99451e000>>
        public unsigned DI
        size <integer_cst 0x7ff994502bb8 constant 64>
        unit-size <integer_cst 0x7ff994502bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff9945239d8>>
    var <var_decl 0x7ff994058d80 ret>
    def_stmt ret_49 = realloc (_24, _23);
    version:49
    ptr-info 0x7ff994011ba0>
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);

 ================== pre trace ptable ================== 
trace fucntion name:realloc 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Reserved word function :realloc
 
 Start check Pointer Collect  

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :realloc
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----
_65 = ret_55;
lto1: warning: use location
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^
_24 = sb_29(D)->buf;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_21 = sb_29(D)->alloc;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_22 = st_mult (1, _21);
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
this stmt call this function :st_mult
trace fucntion name:st_mult 

 ================== trace ================== 
trace fucntion free:0 
_23 = (long unsigned int) _22;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_51 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^
if (_52 != 0)
./benchmarks/git/double_free_2/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
this stmt call this function :realloc

 ================== find free stmt ================== 
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: use location
[40;32m    FIND REALLOC STMT count:1 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find free stmt ================== 
_50 = ret_49 == 0B;
./benchmarks/git/double_free_2/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^
_45 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:415:21: warning: use location
  415 |         if (!ret && !size)
      |                     ^
_46 = _44 & _45;
./benchmarks/git/double_free_2/../git.h:415:18: warning: use location
  415 |         if (!ret && !size)
      |                  ^

======================================================================

 Expand conflict 
 The same function may have multiple branches :realloc
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----
if (ret_48 == 0B)
./benchmarks/git/double_free_2/../git.h:417:12: warning: use location
  417 |         if (!ret) {
      |            ^
_44 = ret_43 == 0B;
./benchmarks/git/double_free_2/../git.h:415:13: warning: use location
  415 |         if (!ret && !size)
      |             ^
sb_29(D)->alloc = _20;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^
sb_29(D)->alloc = _20;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_18 = sb_29(D)->alloc;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_19 = alloc_nr (_18);
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
this stmt call this function :alloc_nr
trace fucntion name:alloc_nr 

 ================== trace ================== 
trace fucntion free:1 
sb_29(D)->alloc = _17;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
sb_29(D)->alloc = _17;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_15 = sb_29(D)->len;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_16 = _15 + extra_30(D);
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_12 = sb_29(D)->len;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_13 = _12 + extra_30(D);
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_9 = sb_29(D)->alloc;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_10 = alloc_nr (_9);
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
this stmt call this function :alloc_nr
trace fucntion name:alloc_nr 

 ================== trace ================== 
trace fucntion free:1 
_11 = (long unsigned int) _10;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_8 = sb_29(D)->alloc;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^
_5 = sb_29(D)->len;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_4 = sb_29(D)->len;
./benchmarks/git/double_free_2/git_df_2.c:21:38: warning: use location
   21 |         if (sb->len + extra + 1 <= sb->len)
      |                                      ^
_1 = sb_29(D)->len;
./benchmarks/git/double_free_2/git_df_2.c:21:15: warning: use location
   21 |         if (sb->len + extra + 1 <= sb->len)
      |               ^

======================================================================

 Expand conflict 
 The same function may have multiple branches :realloc
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff99405d678
    type <pointer_type 0x7ff99451e000
        type <void_type 0x7ff994517f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff99451e000>>
        public unsigned DI
        size <integer_cst 0x7ff994502bb8 constant 64>
        unit-size <integer_cst 0x7ff994502bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff9945239d8>>
    var <var_decl 0x7ff994058d80 ret>
    def_stmt ret_49 = realloc (_24, _23);
    version:49
    ptr-info 0x7ff994011ba0>

 ================================================================= 
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_65 = ret_55;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_65 = ret_55;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_65 = ret_55;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_65 = ret_55;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
_65 = ret_55;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_51 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_51 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_51 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_51 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
if (_52 != 0)
./benchmarks/git/double_free_2/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
if (_52 != 0)
./benchmarks/git/double_free_2/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
if (_52 != 0)
./benchmarks/git/double_free_2/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
if (_52 != 0)
./benchmarks/git/double_free_2/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_50 = ret_49 == 0B;
./benchmarks/git/double_free_2/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_50 = ret_49 == 0B;
./benchmarks/git/double_free_2/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_50 = ret_49 == 0B;
./benchmarks/git/double_free_2/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_50 = ret_49 == 0B;
./benchmarks/git/double_free_2/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_45 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:415:21: warning: use location
  415 |         if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_46 = _44 & _45;
./benchmarks/git/double_free_2/../git.h:415:18: warning: use location
  415 |         if (!ret && !size)
      |                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
if (ret_48 == 0B)
./benchmarks/git/double_free_2/../git.h:417:12: warning: use location
  417 |         if (!ret) {
      |            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
if (ret_48 == 0B)
./benchmarks/git/double_free_2/../git.h:417:12: warning: use location
  417 |         if (!ret) {
      |            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_44 = ret_43 == 0B;
./benchmarks/git/double_free_2/../git.h:415:13: warning: use location
  415 |         if (!ret && !size)
      |             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:4 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:4 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff99405d798
    type <pointer_type 0x7ff99451e000
        type <void_type 0x7ff994517f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff99451e000>>
        public unsigned DI
        size <integer_cst 0x7ff994502bb8 constant 64>
        unit-size <integer_cst 0x7ff994502bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff9945239d8>>
    var <var_decl 0x7ff994058d80 ret>
    def_stmt ret_53 = realloc (_24, 1);
    version:53
    ptr-info 0x7ff994011be8>
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);

 ================== pre trace ptable ================== 
trace fucntion name:realloc 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Reserved word function :realloc
 
 Start check Pointer Collect  

======================================================================
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
this stmt call this function :realloc

 ================== find free stmt ================== 
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: use location
[40;32m    FIND REALLOC STMT count:1 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find free stmt ================== 
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----
_65 = ret_55;
lto1: warning: use location
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^
_24 = sb_29(D)->buf;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_21 = sb_29(D)->alloc;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_22 = st_mult (1, _21);
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
this stmt call this function :st_mult
trace fucntion name:st_mult 

 ================== trace ================== 
trace fucntion free:1 
_23 = (long unsigned int) _22;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_51 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^
if (_52 != 0)
./benchmarks/git/double_free_2/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

======================================================================

 Expand conflict 
 The same function may have multiple branches :realloc
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
_45 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:415:21: warning: use location
  415 |         if (!ret && !size)
      |                     ^
_46 = _44 & _45;
./benchmarks/git/double_free_2/../git.h:415:18: warning: use location
  415 |         if (!ret && !size)
      |                  ^

======================================================================

 Expand conflict 
 The same function may have multiple branches :realloc
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----
if (ret_48 == 0B)
./benchmarks/git/double_free_2/../git.h:417:12: warning: use location
  417 |         if (!ret) {
      |            ^
_44 = ret_43 == 0B;
./benchmarks/git/double_free_2/../git.h:415:13: warning: use location
  415 |         if (!ret && !size)
      |             ^
sb_29(D)->alloc = _20;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^
sb_29(D)->alloc = _20;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_18 = sb_29(D)->alloc;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_19 = alloc_nr (_18);
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
this stmt call this function :alloc_nr
trace fucntion name:alloc_nr 

 ================== trace ================== 
trace fucntion free:1 
sb_29(D)->alloc = _17;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
sb_29(D)->alloc = _17;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_15 = sb_29(D)->len;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_16 = _15 + extra_30(D);
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_12 = sb_29(D)->len;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_13 = _12 + extra_30(D);
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_9 = sb_29(D)->alloc;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_10 = alloc_nr (_9);
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
this stmt call this function :alloc_nr
trace fucntion name:alloc_nr 

 ================== trace ================== 
trace fucntion free:1 
_11 = (long unsigned int) _10;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_8 = sb_29(D)->alloc;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^
_5 = sb_29(D)->len;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_4 = sb_29(D)->len;
./benchmarks/git/double_free_2/git_df_2.c:21:38: warning: use location
   21 |         if (sb->len + extra + 1 <= sb->len)
      |                                      ^
_1 = sb_29(D)->len;
./benchmarks/git/double_free_2/git_df_2.c:21:15: warning: use location
   21 |         if (sb->len + extra + 1 <= sb->len)
      |               ^

======================================================================

 Expand conflict 
 The same function may have multiple branches :realloc
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff99405d798
    type <pointer_type 0x7ff99451e000
        type <void_type 0x7ff994517f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff99451e000>>
        public unsigned DI
        size <integer_cst 0x7ff994502bb8 constant 64>
        unit-size <integer_cst 0x7ff994502bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff9945239d8>>
    var <var_decl 0x7ff994058d80 ret>
    def_stmt ret_53 = realloc (_24, 1);
    version:53
    ptr-info 0x7ff994011be8>

 ================================================================= 
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
[40;35m target gimple type: ssa_name [0m
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
[40;35m target gimple type: ssa_name [0m
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
[40;35m target gimple type: ssa_name [0m
_65 = ret_55;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_65 = ret_55;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_65 = ret_55;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_65 = ret_55;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
_65 = ret_55;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
[40;35m target gimple type: ssa_name [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_51 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_51 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_51 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
if (_52 != 0)
./benchmarks/git/double_free_2/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
if (_52 != 0)
./benchmarks/git/double_free_2/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
if (_52 != 0)
./benchmarks/git/double_free_2/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_45 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:415:21: warning: use location
  415 |         if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_46 = _44 & _45;
./benchmarks/git/double_free_2/../git.h:415:18: warning: use location
  415 |         if (!ret && !size)
      |                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
if (ret_48 == 0B)
./benchmarks/git/double_free_2/../git.h:417:12: warning: use location
  417 |         if (!ret) {
      |            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
if (ret_48 == 0B)
./benchmarks/git/double_free_2/../git.h:417:12: warning: use location
  417 |         if (!ret) {
      |            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_44 = ret_43 == 0B;
./benchmarks/git/double_free_2/../git.h:415:13: warning: use location
  415 |         if (!ret && !size)
      |             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:4 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:4 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff99405b798
    type <integer_type 0x7ff9945177e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff994502bb8 constant 64>
        unit-size <integer_cst 0x7ff994502bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff994517738 precision:64 min <integer_cst 0x7ff994502e88 0> max <integer_cst 0x7ff994503500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff9945237e0>>
   
    def_stmt _9 = sb_29(D)->alloc;
    version:9>
# VUSE <.MEM_33(D)>
_9 = sb_29(D)->alloc;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_34 = VDEF <.MEM_33(D)>
_10 = alloc_nr (_9);
_10 = alloc_nr (_9);
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^
this stmt call this function :alloc_nr
trace fucntion name:alloc_nr 

 ================== trace ================== 
trace fucntion free:0 
_11 = (long unsigned int) _10;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
if (_11 < _14)
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff99405b798
    type <integer_type 0x7ff9945177e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff994502bb8 constant 64>
        unit-size <integer_cst 0x7ff994502bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff994517738 precision:64 min <integer_cst 0x7ff994502e88 0> max <integer_cst 0x7ff994503500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff9945237e0>>
   
    def_stmt _9 = sb_29(D)->alloc;
    version:9>

 ================================================================= 
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:4 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:4 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff99405ba20
    type <integer_type 0x7ff9945177e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff994502bb8 constant 64>
        unit-size <integer_cst 0x7ff994502bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff994517738 precision:64 min <integer_cst 0x7ff994502e88 0> max <integer_cst 0x7ff994503500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff9945237e0>>
   
    def_stmt _18 = sb_29(D)->alloc;
    version:18>
# VUSE <.MEM_34>
_18 = sb_29(D)->alloc;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_35 = VDEF <.MEM_34>
_19 = alloc_nr (_18);
_19 = alloc_nr (_18);
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^
this stmt call this function :alloc_nr
trace fucntion name:alloc_nr 

 ================== trace ================== 
trace fucntion free:0 
_20 = (long unsigned int) _19;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
sb_29(D)->alloc = _20;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_24 = sb_29(D)->buf;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
this stmt call this function :realloc

 ================== find free stmt ================== 
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: use location
[40;32m    FIND REALLOC STMT count:1 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find free stmt ================== 
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----
_65 = ret_55;
lto1: warning: use location
if (ret_54 == 0B)
./benchmarks/git/double_free_2/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
this stmt call this function :realloc

 ================== find free stmt ================== 
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: use location
[40;32m    FIND REALLOC STMT count:2 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find free stmt ================== 
_50 = ret_49 == 0B;
./benchmarks/git/double_free_2/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^
if (_52 != 0)
./benchmarks/git/double_free_2/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
this stmt call this function :realloc

 ================== find free stmt ================== 
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: use location
[40;32m    FIND REALLOC STMT count:3 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find free stmt ================== 
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
this stmt call this function :realloc

 ================== find free stmt ================== 
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: use location
[40;32m    FIND REALLOC STMT count:4 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find free stmt ================== 
_44 = ret_43 == 0B;
./benchmarks/git/double_free_2/../git.h:415:13: warning: use location
  415 |         if (!ret && !size)
      |             ^
_46 = _44 & _45;
./benchmarks/git/double_free_2/../git.h:415:18: warning: use location
  415 |         if (!ret && !size)
      |                  ^
_21 = sb_29(D)->alloc;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^
_22 = st_mult (1, _21);
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
this stmt call this function :st_mult
trace fucntion name:st_mult 

 ================== trace ================== 
trace fucntion free:4 
_23 = (long unsigned int) _22;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_51 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^
_45 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:415:21: warning: use location
  415 |         if (!ret && !size)
      |                     ^
_18 = sb_29(D)->alloc;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^
sb_29(D)->alloc = _17;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
sb_29(D)->alloc = _17;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_15 = sb_29(D)->len;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_16 = _15 + extra_30(D);
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_12 = sb_29(D)->len;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_13 = _12 + extra_30(D);
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_9 = sb_29(D)->alloc;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location

======================================================================

 Expand conflict 
 The same function may have multiple branches :alloc_nr
# .MEM_35 = VDEF <.MEM_34>
_19 = alloc_nr (_18);
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
# .MEM_34 = VDEF <.MEM_33(D)>
_10 = alloc_nr (_9);
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_11 = (long unsigned int) _10;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_8 = sb_29(D)->alloc;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^
_5 = sb_29(D)->len;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_4 = sb_29(D)->len;
./benchmarks/git/double_free_2/git_df_2.c:21:38: warning: use location
   21 |         if (sb->len + extra + 1 <= sb->len)
      |                                      ^
_1 = sb_29(D)->len;
./benchmarks/git/double_free_2/git_df_2.c:21:15: warning: use location
   21 |         if (sb->len + extra + 1 <= sb->len)
      |               ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff99405ba20
    type <integer_type 0x7ff9945177e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff994502bb8 constant 64>
        unit-size <integer_cst 0x7ff994502bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff994517738 precision:64 min <integer_cst 0x7ff994502e88 0> max <integer_cst 0x7ff994503500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff9945237e0>>
   
    def_stmt _18 = sb_29(D)->alloc;
    version:18>

 ================================================================= 
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
[40;35m target gimple type: ssa_name [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: component_ref [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: component_ref [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: component_ref [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: component_ref [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: component_ref [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: component_ref [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: component_ref [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: component_ref [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
[40;35m target gimple type: ssa_name [0m
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
[40;35m target gimple type: ssa_name [0m
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
[40;35m target gimple type: ssa_name [0m
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
[40;35m target gimple type: ssa_name [0m
_65 = ret_55;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_65 = ret_55;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_65 = ret_55;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_65 = ret_55;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
[40;35m target gimple type: ssa_name [0m
_65 = ret_55;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_65 = ret_55;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_65 = ret_55;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
_65 = ret_55;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
[40;35m target gimple type: ssa_name [0m
if (ret_54 == 0B)
./benchmarks/git/double_free_2/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
if (ret_54 == 0B)
./benchmarks/git/double_free_2/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
if (ret_54 == 0B)
./benchmarks/git/double_free_2/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
if (ret_54 == 0B)
./benchmarks/git/double_free_2/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
if (ret_54 == 0B)
./benchmarks/git/double_free_2/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
if (ret_54 == 0B)
./benchmarks/git/double_free_2/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
if (ret_54 == 0B)
./benchmarks/git/double_free_2/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
if (ret_54 == 0B)
./benchmarks/git/double_free_2/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_50 = ret_49 == 0B;
./benchmarks/git/double_free_2/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_50 = ret_49 == 0B;
./benchmarks/git/double_free_2/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_50 = ret_49 == 0B;
./benchmarks/git/double_free_2/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_50 = ret_49 == 0B;
./benchmarks/git/double_free_2/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_50 = ret_49 == 0B;
./benchmarks/git/double_free_2/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_50 = ret_49 == 0B;
./benchmarks/git/double_free_2/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
if (_52 != 0)
./benchmarks/git/double_free_2/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
if (_52 != 0)
./benchmarks/git/double_free_2/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
if (_52 != 0)
./benchmarks/git/double_free_2/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
if (_52 != 0)
./benchmarks/git/double_free_2/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
if (_52 != 0)
./benchmarks/git/double_free_2/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
if (_52 != 0)
./benchmarks/git/double_free_2/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
[40;35m target gimple type: ssa_name [0m
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_44 = ret_43 == 0B;
./benchmarks/git/double_free_2/../git.h:415:13: warning: use location
  415 |         if (!ret && !size)
      |             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_44 = ret_43 == 0B;
./benchmarks/git/double_free_2/../git.h:415:13: warning: use location
  415 |         if (!ret && !size)
      |             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_46 = _44 & _45;
./benchmarks/git/double_free_2/../git.h:415:18: warning: use location
  415 |         if (!ret && !size)
      |                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_46 = _44 & _45;
./benchmarks/git/double_free_2/../git.h:415:18: warning: use location
  415 |         if (!ret && !size)
      |                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_51 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_51 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_51 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_51 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_51 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_51 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_45 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:415:21: warning: use location
  415 |         if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_45 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:415:21: warning: use location
  415 |         if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:4 [0m
[40;31m  	free count:4 [0m
[40;31m  	possible double free [Looserules]:4 [0m
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff99405baf8
    type <integer_type 0x7ff9945177e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff994502bb8 constant 64>
        unit-size <integer_cst 0x7ff994502bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff994517738 precision:64 min <integer_cst 0x7ff994502e88 0> max <integer_cst 0x7ff994503500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff9945237e0>>
   
    def_stmt _21 = sb_29(D)->alloc;
    version:21>
# VUSE <.MEM_31>
_21 = sb_29(D)->alloc;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:strbuf_grow========= [0m
[40;42m =======pre add _ fucntion:strbuf_setlen========= [0m
[40;33m =======POP node_fun stack:strbuf_setlen========= [0m
[40;42m =======pre add _ fucntion:feof========= [0m
[40;33m =======POP node_fun stack:feof========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:add_cacheinfo========= [0m
[40;33m =======POP node_fun stack:add_cacheinfo========= [0m
[40;42m =======pre add _ fucntion:remove_file_from_cache========= [0m
[40;33m =======POP node_fun stack:remove_file_from_cache========= [0m
[40;42m =======pre add _ fucntion:fprintf========= [0m
[40;33m =======POP node_fun stack:fprintf========= [0m
[40;42m =======pre add _ fucntion:verify_path========= [0m
[40;33m =======POP node_fun stack:verify_path========= [0m
[40;42m =======pre add _ fucntion:strbuf_addch========= [0m
[40;33m =======POP node_fun stack:strbuf_addch========= [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strcspn========= [0m
[40;33m =======POP node_fun stack:strcspn========= [0m
[40;42m =======pre add _ fucntion:get_sha1_hex========= [0m
[40;33m =======POP node_fun stack:get_sha1_hex========= [0m
[40;42m =======pre add _ fucntion:strchr========= [0m
[40;33m =======POP node_fun stack:strchr========= [0m
[40;42m =======pre add _ fucntion:__errno_location========= [0m
[40;33m =======POP node_fun stack:__errno_location========= [0m
[40;42m =======pre add _ fucntion:strbuf_init========= [0m
[40;33m =======POP node_fun stack:strbuf_init========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m

dot graph START

======================================================================
 <ssa_name 0x7ff99403e510
    type <pointer_type 0x7ff99451e9d8
        type <integer_type 0x7ff9945175e8 int public SI
            size <integer_cst 0x7ff994502df8 constant 32>
            unit-size <integer_cst 0x7ff994502e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff9945175e8 precision:32 min <integer_cst 0x7ff994502db0 -2147483648> max <integer_cst 0x7ff994502dc8 2147483647>
            pointer_to_this <pointer_type 0x7ff99451e9d8>>
        public unsigned DI
        size <integer_cst 0x7ff994502bb8 constant 64>
        unit-size <integer_cst 0x7ff994502bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = __errno_location ();
    version:5
    ptr-info 0x7ff994032c60>
_5 = __errno_location ();

 ================== pre trace ptable ================== 
trace fucntion name:__errno_location 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function __errno_location
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_5 = 0;
./benchmarks/git/double_free_2/git_df_2.c:167:23: warning: use location
  167 |                 errno = 0;
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_5 = 0;
./benchmarks/git/double_free_2/git_df_2.c:167:23: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_5 = __errno_location ();
_5 = __errno_location ();
./benchmarks/git/double_free_2/git_df_2.c:167:17: warning: use location
  167 |                 errno = 0;
      |                 ^
this stmt call this function :__errno_location
trace fucntion name:__errno_location 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff99403e510
    type <pointer_type 0x7ff99451e9d8
        type <integer_type 0x7ff9945175e8 int public SI
            size <integer_cst 0x7ff994502df8 constant 32>
            unit-size <integer_cst 0x7ff994502e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff9945175e8 precision:32 min <integer_cst 0x7ff994502db0 -2147483648> max <integer_cst 0x7ff994502dc8 2147483647>
            pointer_to_this <pointer_type 0x7ff99451e9d8>>
        public unsigned DI
        size <integer_cst 0x7ff994502bb8 constant 64>
        unit-size <integer_cst 0x7ff994502bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = __errno_location ();
    version:5
    ptr-info 0x7ff994032c60>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_155 = VDEF <.MEM_103>
free (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:222:25: warning: use location
  222 |                         free(path_name);
      |                         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_125 = VDEF <.MEM_112>
free (_100);
./benchmarks/git/double_free_2/git_df_2.c:15:5: warning: use location
   15 |     free(sb->buf);
      |     ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_127 = VDEF <.MEM_126>
free (_99);
./benchmarks/git/double_free_2/git_df_2.c:15:5: warning: use location
   15 |     free(sb->buf);
      |     ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff99403e708
    type <pointer_type 0x7ff99451e9d8
        type <integer_type 0x7ff9945175e8 int public SI
            size <integer_cst 0x7ff994502df8 constant 32>
            unit-size <integer_cst 0x7ff994502e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff9945175e8 precision:32 min <integer_cst 0x7ff994502db0 -2147483648> max <integer_cst 0x7ff994502dc8 2147483647>
            pointer_to_this <pointer_type 0x7ff99451e9d8>>
        public unsigned DI
        size <integer_cst 0x7ff994502bb8 constant 64>
        unit-size <integer_cst 0x7ff994502bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _12 = __errno_location ();
    version:12
    ptr-info 0x7ff994032cd8>
_12 = __errno_location ();

 ================== pre trace ptable ================== 
trace fucntion name:__errno_location 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function __errno_location
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_13 = *_12;
./benchmarks/git/double_free_2/git_df_2.c:170:24: warning: use location
  170 |                     || errno || (unsigned int) ul != ul)
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_13 != 0)
./benchmarks/git/double_free_2/git_df_2.c:170:21: warning: use location
  170 |                     || errno || (unsigned int) ul != ul)
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_12 = __errno_location ();
_12 = __errno_location ();
./benchmarks/git/double_free_2/git_df_2.c:170:24: warning: use location
  170 |                     || errno || (unsigned int) ul != ul)
      |                        ^
this stmt call this function :__errno_location
trace fucntion name:__errno_location 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff99403e708
    type <pointer_type 0x7ff99451e9d8
        type <integer_type 0x7ff9945175e8 int public SI
            size <integer_cst 0x7ff994502df8 constant 32>
            unit-size <integer_cst 0x7ff994502e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff9945175e8 precision:32 min <integer_cst 0x7ff994502db0 -2147483648> max <integer_cst 0x7ff994502dc8 2147483647>
            pointer_to_this <pointer_type 0x7ff99451e9d8>>
        public unsigned DI
        size <integer_cst 0x7ff994502bb8 constant 64>
        unit-size <integer_cst 0x7ff994502bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _12 = __errno_location ();
    version:12
    ptr-info 0x7ff994032cd8>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_155 = VDEF <.MEM_103>
free (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:222:25: warning: use location
  222 |                         free(path_name);
      |                         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_125 = VDEF <.MEM_112>
free (_100);
./benchmarks/git/double_free_2/git_df_2.c:15:5: warning: use location
   15 |     free(sb->buf);
      |     ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_127 = VDEF <.MEM_126>
free (_99);
./benchmarks/git/double_free_2/git_df_2.c:15:5: warning: use location
   15 |     free(sb->buf);
      |     ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff99403e870
    type <pointer_type 0x7ff99401adc8
        type <integer_type 0x7ff99401ad20 char public QI
            size <integer_cst 0x7ff994502ca8 constant 8>
            unit-size <integer_cst 0x7ff994502cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff9945173f0 precision:8 min <integer_cst 0x7ff994011720 -128> max <integer_cst 0x7ff994011708 127>
            pointer_to_this <pointer_type 0x7ff99401adc8>>
        public unsigned DI
        size <integer_cst 0x7ff994502bb8 constant 64>
        unit-size <integer_cst 0x7ff994502bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7ff99450d168 ./benchmarks/git/double_free_2/git_df_2.c>
        pointer_to_this <pointer_type 0x7ff99401ae70>>
    var <var_decl 0x7ff9940421b0 tab>
    def_stmt tab_17 = strchr (_16, 9);
    version:17
    ptr-info 0x7ff994032d08>
# VUSE <.MEM_131>
tab_17 = strchr (_16, 9);

 ================== pre trace ptable ================== 
trace fucntion name:strchr 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function strchr
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_131>
tab_17 = strchr (_16, 9);
tab_17 = strchr (_16, 9);
./benchmarks/git/double_free_2/git_df_2.c:174:23: warning: use location
  174 |                 tab = strchr(ptr, '\t');
      |                       ^
this stmt call this function :strchr
trace fucntion name:strchr 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = MEM[(char *)tab_17 + -1B];
./benchmarks/git/double_free_2/git_df_2.c:179:36: warning: use location
  179 |                         stage = tab[-1] - '0';
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_24 = (int) _23;
./benchmarks/git/double_free_2/git_df_2.c:179:36: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
stage_25 = _24 + -48;
./benchmarks/git/double_free_2/git_df_2.c:179:31: warning: use location
  179 |                         stage = tab[-1] - '0';
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
stage_45 = PHI <stage_25(14), 0(15)>
lto1: warning: use location
this stmt have mutiple branch ---strchr-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = add_cacheinfo (mode_15, &sha1, path_name_37, stage_45);
./benchmarks/git/double_free_2/git_df_2.c:217:29: warning: use location
  217 |                         if (add_cacheinfo(mode, sha1, path_name, stage))
      |                             ^
this stmt call this function :add_cacheinfo
trace fucntion name:add_cacheinfo 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_46 != 0)
./benchmarks/git/double_free_2/git_df_2.c:217:28: warning: use location
  217 |                         if (add_cacheinfo(mode, sha1, path_name, stage))
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (mode_15 == 0)
./benchmarks/git/double_free_2/git_df_2.c:205:20: warning: use location
  205 |                 if (!mode) {
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:222:25: warning: use location
  222 |                         free(path_name);
      |                         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:222:25: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
printf ("git-update-index: unable to update %s", path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:218:33: warning: use location
  218 |                                 die("git-update-index: unable to update %s",
      |                                 ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_40 = remove_file_from_cache (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:207:29: warning: use location
  207 |                         if (remove_file_from_cache(path_name))
      |                             ^
this stmt call this function :remove_file_from_cache
trace fucntion name:remove_file_from_cache 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
fprintf (_39, "Ignoring path %s\n", path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:201:25: warning: use location
  201 |                         fprintf(stderr, "Ignoring path %s\n", path_name);
      |                         ^
this stmt call this function :fprintf
trace fucntion name:fprintf 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = verify_path (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:200:22: warning: use location
  200 |                 if (!verify_path(path_name)) {
      |                      ^
this stmt call this function :verify_path
trace fucntion name:verify_path 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (path_name_37 != _47)
./benchmarks/git/double_free_2/git_df_2.c:221:20: warning: use location
  221 |                 if (path_name != ptr)
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = MEM[(char *)tab_17 + -1B];
./benchmarks/git/double_free_2/git_df_2.c:178:60: warning: use location
  178 |                 if (tab[-2] == ' ' && '0' <= tab[-1] && tab[-1] <= '3') {
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_22 <= 51)
./benchmarks/git/double_free_2/git_df_2.c:178:54: warning: use location
  178 |                 if (tab[-2] == ' ' && '0' <= tab[-1] && tab[-1] <= '3') {
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = MEM[(char *)tab_17 + -1B];
./benchmarks/git/double_free_2/git_df_2.c:178:49: warning: use location
  178 |                 if (tab[-2] == ' ' && '0' <= tab[-1] && tab[-1] <= '3') {
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_21 > 47)
./benchmarks/git/double_free_2/git_df_2.c:178:36: warning: use location
  178 |                 if (tab[-2] == ' ' && '0' <= tab[-1] && tab[-1] <= '3') {
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = MEM[(char *)tab_17 + -2B];
./benchmarks/git/double_free_2/git_df_2.c:178:24: warning: use location
  178 |                 if (tab[-2] == ' ' && '0' <= tab[-1] && tab[-1] <= '3') {
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_20 == 32)
./benchmarks/git/double_free_2/git_df_2.c:178:20: warning: use location
  178 |                 if (tab[-2] == ' ' && '0' <= tab[-1] && tab[-1] <= '3') {
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tab_29 = PHI <tab_27(14), tab_17(15)>
lto1: warning: use location
this stmt have mutiple branch ---verify_path-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_32 = MEM[(char *)tab_29 + -41B];
./benchmarks/git/double_free_2/git_df_2.c:188:56: warning: use location
  188 |                 if (get_sha1_hex(tab - 40, sha1) || tab[-41] != ' ')
      |                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_30 = tab_29 + 18446744073709551576;
./benchmarks/git/double_free_2/git_df_2.c:188:21: warning: use location
  188 |                 if (get_sha1_hex(tab - 40, sha1) || tab[-41] != ' ')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_31 = get_sha1_hex (_30, &sha1);
./benchmarks/git/double_free_2/git_df_2.c:188:21: warning: use location
this stmt call this function :get_sha1_hex
trace fucntion name:get_sha1_hex 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_28 = tab_17 + 1;
./benchmarks/git/double_free_2/git_df_2.c:185:35: warning: use location
  185 |                         ptr = tab + 1; /* point at the head of path */
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tab_27 = tab_17 + 18446744073709551614;
./benchmarks/git/double_free_2/git_df_2.c:181:29: warning: use location
  181 |                         tab = tab - 2; /* point at tail of sha1 */
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ptr_163 = _26;
./benchmarks/git/double_free_2/git_df_2.c:180:29: warning: use location
  180 |                         ptr = tab + 1; /* point at the head of path */
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ptr_161 = PHI <ptr_163(14), ptr_164(15)>
lto1: warning: use location
this stmt have mutiple branch ---get_sha1_hex-----
_41 = ptr_161;
./benchmarks/git/double_free_2/git_df_2.c:208:33: warning: use location
  208 |                                 die("git-update-index: unable to remove %s",
      |                                 ^
printf ("git-update-index: unable to remove %s", _41);
./benchmarks/git/double_free_2/git_df_2.c:208:33: warning: use location
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
MEM[(char *)_43 + -42B] = _44;
./benchmarks/git/double_free_2/git_df_2.c:216:34: warning: use location
  216 |                         ptr[-42] = ptr[-1] = 0;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
MEM[(char *)_43 + -42B] = _44;
./benchmarks/git/double_free_2/git_df_2.c:216:34: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = ptr_161;
./benchmarks/git/double_free_2/git_df_2.c:216:39: warning: use location
  216 |                         ptr[-42] = ptr[-1] = 0;
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
MEM[(char *)_42 + -1B] = 0;
./benchmarks/git/double_free_2/git_df_2.c:216:44: warning: use location
  216 |                         ptr[-42] = ptr[-1] = 0;
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
path_name_33 = ptr_161;
./benchmarks/git/double_free_2/git_df_2.c:191:27: warning: use location
  191 |                 path_name = ptr;
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_56 = MEM[(const char *)path_name_33];
./benchmarks/git/double_free_2/git_df_2.c:83:13: warning: use location
   83 |         if (*quoted++ != '"')
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_56 != 34)
./benchmarks/git/double_free_2/git_df_2.c:83:12: warning: use location
   83 |         if (*quoted++ != '"')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_34 = *path_name_33;
./benchmarks/git/double_free_2/git_df_2.c:192:50: warning: use location
  192 |                 if (line_termination && path_name[0] == '"') {
      |                                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_34 == 34)
./benchmarks/git/double_free_2/git_df_2.c:192:38: warning: use location
  192 |                 if (line_termination && path_name[0] == '"') {
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
quoted_55 = path_name_33 + 1;
./benchmarks/git/double_free_2/git_df_2.c:83:20: warning: use location
   83 |         if (*quoted++ != '"')
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
quoted_57 = PHI <quoted_55(23), quoted_79(42)>
lto1: warning: use location
this stmt have mutiple branch ---printf-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
memcpy (_83, quoted_57, len_58);
./benchmarks/git/double_free_2/git_df_2.c:35:9: warning: use location
   35 |         memcpy(sb->buf + sb->len, data, len);
      |         ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
len_58 = strcspn (quoted_57, "\"\\");
./benchmarks/git/double_free_2/git_df_2.c:87:23: warning: use location
   87 |                 len = strcspn(quoted, "\"\\");
      |                       ^
this stmt call this function :strcspn
trace fucntion name:strcspn 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: use location
   34 |         strbuf_grow(sb, len);
      |         ^
this stmt call this function :strbuf_grow
trace fucntion name:strbuf_grow 
[40;44m =======trace_function_path strbuf_grow  function_call count: 5 level :0========  [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
[40;31m  find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
[40;31m  find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:alloc_nr========= [0m
[40;46m =======add node_fun stack:alloc_nr========= [0m

 ================== trace ================== 
trace fucntion free:5 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_85 = len_58 + _84;
./benchmarks/git/double_free_2/git_df_2.c:36:9: warning: use location
   36 |         strbuf_setlen(sb, sb->len + len);
      |         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strbuf_setlen (&uq, _85);
./benchmarks/git/double_free_2/git_df_2.c:36:9: warning: use location
this stmt call this function :strbuf_setlen
trace fucntion name:strbuf_setlen 

 ================== trace ================== 
trace fucntion free:5 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
quoted_59 = quoted_57 + len_58;
./benchmarks/git/double_free_2/git_df_2.c:89:24: warning: use location
   89 |                 quoted += len;
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = MEM[(const char *)quoted_59 + 3B];
./benchmarks/git/double_free_2/git_df_2.c:120:35: warning: use location
  120 |                         if ((ch = *quoted++) < '0' || '7' < ch)
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ch_74 = (int) _73;
./benchmarks/git/double_free_2/git_df_2.c:120:33: warning: use location
  120 |                         if ((ch = *quoted++) < '0' || '7' < ch)
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ac_76 = ac_71 | _75;
./benchmarks/git/double_free_2/git_df_2.c:122:44: warning: use location
  122 |                                         ac |= (ch - '0');
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ch_77 = PHI <ch_64(26), 7(27), 8(28), 12(29), 10(30), 13(31), 9(32), 11(33), ac_76(40)>
lto1: warning: use location
this stmt have mutiple branch ---strbuf_setlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strbuf_addch (&uq, ch_77);
./benchmarks/git/double_free_2/git_df_2.c:128:17: warning: use location
  128 |                 strbuf_addch(sb, ch);
      |                 ^
this stmt call this function :strbuf_addch
trace fucntion name:strbuf_addch 

 ================== trace ================== 
trace fucntion free:5 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (ch_74 > 55)
./benchmarks/git/double_free_2/git_df_2.c:120:52: warning: use location
  120 |                         if ((ch = *quoted++) < '0' || '7' < ch)
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (ch_74 <= 47)
./benchmarks/git/double_free_2/git_df_2.c:120:28: warning: use location
  120 |                         if ((ch = *quoted++) < '0' || '7' < ch)
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_67 = MEM[(const char *)quoted_59 + 2B];
./benchmarks/git/double_free_2/git_df_2.c:117:35: warning: use location
  117 |                         if ((ch = *quoted++) < '0' || '7' < ch)
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ch_68 = (int) _67;
./benchmarks/git/double_free_2/git_df_2.c:117:33: warning: use location
  117 |                         if ((ch = *quoted++) < '0' || '7' < ch)
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_69 = ch_68 + -48;
./benchmarks/git/double_free_2/git_df_2.c:119:52: warning: use location
  119 |                                         ac |= ((ch - '0') << 3);
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = _69 << 3;
./benchmarks/git/double_free_2/git_df_2.c:119:59: warning: use location
  119 |                                         ac |= ((ch - '0') << 3);
      |                                                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ac_71 = ac_66 | _70;
./benchmarks/git/double_free_2/git_df_2.c:119:44: warning: use location
  119 |                                         ac |= ((ch - '0') << 3);
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = MEM[(const char *)quoted_59 + 1B];
./benchmarks/git/double_free_2/git_df_2.c:102:31: warning: use location
  102 |                 switch ((ch = *quoted++)) {
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
quoted_62 = &MEM <const char> [(void *)quoted_59 + 2B];
./benchmarks/git/double_free_2/git_df_2.c:102:38: warning: use location
  102 |                 switch ((ch = *quoted++)) {
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
quoted_79 = PHI <quoted_62(26), quoted_62(27), quoted_62(28), quoted_62(29), quoted_62(30), quoted_62(31), quoted_62(32), quoted_62(33), quoted_72(40)>
lto1: warning: use location
this stmt have mutiple branch ---strbuf_addch-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (tab_17 == 0B)
./benchmarks/git/double_free_2/git_df_2.c:175:20: warning: use location
  175 |                 if (!tab || tab - ptr < 41)
      |                    ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff99403e870
    type <pointer_type 0x7ff99401adc8
        type <integer_type 0x7ff99401ad20 char public QI
            size <integer_cst 0x7ff994502ca8 constant 8>
            unit-size <integer_cst 0x7ff994502cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff9945173f0 precision:8 min <integer_cst 0x7ff994011720 -128> max <integer_cst 0x7ff994011708 127>
            pointer_to_this <pointer_type 0x7ff99401adc8>>
        public unsigned DI
        size <integer_cst 0x7ff994502bb8 constant 64>
        unit-size <integer_cst 0x7ff994502bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7ff99450d168 ./benchmarks/git/double_free_2/git_df_2.c>
        pointer_to_this <pointer_type 0x7ff99401ae70>>
    var <var_decl 0x7ff9940421b0 tab>
    def_stmt tab_17 = strchr (_16, 9);
    version:17
    ptr-info 0x7ff994032d08>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_155 = VDEF <.MEM_103>
free (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:222:25: warning: use location
  222 |                         free(path_name);
      |                         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_125 = VDEF <.MEM_112>
free (_100);
./benchmarks/git/double_free_2/git_df_2.c:15:5: warning: use location
   15 |     free(sb->buf);
      |     ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_127 = VDEF <.MEM_126>
free (_99);
./benchmarks/git/double_free_2/git_df_2.c:15:5: warning: use location
   15 |     free(sb->buf);
      |     ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_155 = VDEF <.MEM_103>
free (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:222:25: warning: free in this location
  222 |                         free(path_name);
      |                         ^
[40;35m target gimple type: ssa_name [0m
stage_45 = PHI <stage_25(14), 0(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: ssa_name [0m
stage_45 = PHI <stage_25(14), 0(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_155 = VDEF <.MEM_103>
free (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:222:25: warning: free in this location
  222 |                         free(path_name);
      |                         ^
[40;35m target gimple type: ssa_name [0m
stage_45 = PHI <stage_25(14), 0(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_125 = VDEF <.MEM_112>
free (_100);
./benchmarks/git/double_free_2/git_df_2.c:15:5: warning: free in this location
   15 |     free(sb->buf);
      |     ^
[40;35m target gimple type: ssa_name [0m
stage_45 = PHI <stage_25(14), 0(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_127 = VDEF <.MEM_126>
free (_99);
./benchmarks/git/double_free_2/git_df_2.c:15:5: warning: free in this location
   15 |     free(sb->buf);
      |     ^
[40;35m target gimple type: ssa_name [0m
stage_45 = PHI <stage_25(14), 0(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: ssa_name [0m
# .MEM_149 = VDEF <.MEM_148>
_46 = add_cacheinfo (mode_15, &sha1, path_name_37, stage_45);
./benchmarks/git/double_free_2/git_df_2.c:217:29: warning: use location
  217 |                         if (add_cacheinfo(mode, sha1, path_name, stage))
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: ssa_name [0m
if (_46 != 0)
./benchmarks/git/double_free_2/git_df_2.c:217:28: warning: use location
  217 |                         if (add_cacheinfo(mode, sha1, path_name, stage))
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: ssa_name [0m
if (mode_15 == 0)
./benchmarks/git/double_free_2/git_df_2.c:205:20: warning: use location
  205 |                 if (!mode) {
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: addr_expr [0m
# .MEM_155 = VDEF <.MEM_103>
free (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:222:25: warning: use location
  222 |                         free(path_name);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: addr_expr [0m
# .MEM_150 = VDEF <.MEM_149>
printf ("git-update-index: unable to update %s", path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:218:33: warning: use location
  218 |                                 die("git-update-index: unable to update %s",
      |                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: ssa_name [0m
# .MEM_152 = VDEF <.MEM_146>
_40 = remove_file_from_cache (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:207:29: warning: use location
  207 |                         if (remove_file_from_cache(path_name))
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: addr_expr [0m
# .MEM_156 = VDEF <.MEM_146>
fprintf (_39, "Ignoring path %s\n", path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:201:25: warning: use location
  201 |                         fprintf(stderr, "Ignoring path %s\n", path_name);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: ssa_name [0m
# .MEM_146 = VDEF <.MEM_102>
_38 = verify_path (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:200:22: warning: use location
  200 |                 if (!verify_path(path_name)) {
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: ssa_name [0m
if (path_name_37 != _47)
./benchmarks/git/double_free_2/git_df_2.c:221:20: warning: use location
  221 |                 if (path_name != ptr)
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_155 = VDEF <.MEM_103>
free (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:222:25: warning: free in this location
  222 |                         free(path_name);
      |                         ^
[40;35m target gimple type: ssa_name [0m
tab_29 = PHI <tab_27(14), tab_17(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: ssa_name [0m
tab_29 = PHI <tab_27(14), tab_17(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_155 = VDEF <.MEM_103>
free (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:222:25: warning: free in this location
  222 |                         free(path_name);
      |                         ^
[40;35m target gimple type: ssa_name [0m
tab_29 = PHI <tab_27(14), tab_17(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_125 = VDEF <.MEM_112>
free (_100);
./benchmarks/git/double_free_2/git_df_2.c:15:5: warning: free in this location
   15 |     free(sb->buf);
      |     ^
[40;35m target gimple type: ssa_name [0m
tab_29 = PHI <tab_27(14), tab_17(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_127 = VDEF <.MEM_126>
free (_99);
./benchmarks/git/double_free_2/git_df_2.c:15:5: warning: free in this location
   15 |     free(sb->buf);
      |     ^
[40;35m target gimple type: ssa_name [0m
tab_29 = PHI <tab_27(14), tab_17(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_155 = VDEF <.MEM_103>
free (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:222:25: warning: free in this location
  222 |                         free(path_name);
      |                         ^
[40;35m target gimple type: ssa_name [0m
ptr_161 = PHI <ptr_163(14), ptr_164(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: ssa_name [0m
ptr_161 = PHI <ptr_163(14), ptr_164(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_155 = VDEF <.MEM_103>
free (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:222:25: warning: free in this location
  222 |                         free(path_name);
      |                         ^
[40;35m target gimple type: ssa_name [0m
ptr_161 = PHI <ptr_163(14), ptr_164(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_125 = VDEF <.MEM_112>
free (_100);
./benchmarks/git/double_free_2/git_df_2.c:15:5: warning: free in this location
   15 |     free(sb->buf);
      |     ^
[40;35m target gimple type: ssa_name [0m
ptr_161 = PHI <ptr_163(14), ptr_164(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_127 = VDEF <.MEM_126>
free (_99);
./benchmarks/git/double_free_2/git_df_2.c:15:5: warning: free in this location
   15 |     free(sb->buf);
      |     ^
[40;35m target gimple type: ssa_name [0m
ptr_161 = PHI <ptr_163(14), ptr_164(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: ssa_name [0m
_41 = ptr_161;
./benchmarks/git/double_free_2/git_df_2.c:208:33: warning: use location
  208 |                                 die("git-update-index: unable to remove %s",
      |                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: addr_expr [0m
# .MEM_153 = VDEF <.MEM_152>
printf ("git-update-index: unable to remove %s", _41);
./benchmarks/git/double_free_2/git_df_2.c:208:33: warning: use location
  208 |                                 die("git-update-index: unable to remove %s",
      |                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: ssa_name [0m
# .MEM_148 = VDEF <.MEM_147>
MEM[(char *)_43 + -42B] = _44;
./benchmarks/git/double_free_2/git_df_2.c:216:34: warning: use location
  216 |                         ptr[-42] = ptr[-1] = 0;
      |                                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: mem_ref [0m
# .MEM_148 = VDEF <.MEM_147>
MEM[(char *)_43 + -42B] = _44;
./benchmarks/git/double_free_2/git_df_2.c:216:34: warning: use location
  216 |                         ptr[-42] = ptr[-1] = 0;
      |                                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: ssa_name [0m
_42 = ptr_161;
./benchmarks/git/double_free_2/git_df_2.c:216:39: warning: use location
  216 |                         ptr[-42] = ptr[-1] = 0;
      |                                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: mem_ref [0m
# .MEM_147 = VDEF <.MEM_146>
MEM[(char *)_42 + -1B] = 0;
./benchmarks/git/double_free_2/git_df_2.c:216:44: warning: use location
  216 |                         ptr[-42] = ptr[-1] = 0;
      |                                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_155 = VDEF <.MEM_103>
free (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:222:25: warning: free in this location
  222 |                         free(path_name);
      |                         ^
[40;35m target gimple type: ssa_name [0m
quoted_57 = PHI <quoted_55(23), quoted_79(42)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: ssa_name [0m
quoted_57 = PHI <quoted_55(23), quoted_79(42)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_155 = VDEF <.MEM_103>
free (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:222:25: warning: free in this location
  222 |                         free(path_name);
      |                         ^
[40;35m target gimple type: ssa_name [0m
quoted_57 = PHI <quoted_55(23), quoted_79(42)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_125 = VDEF <.MEM_112>
free (_100);
./benchmarks/git/double_free_2/git_df_2.c:15:5: warning: free in this location
   15 |     free(sb->buf);
      |     ^
[40;35m target gimple type: ssa_name [0m
quoted_57 = PHI <quoted_55(23), quoted_79(42)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_127 = VDEF <.MEM_126>
free (_99);
./benchmarks/git/double_free_2/git_df_2.c:15:5: warning: free in this location
   15 |     free(sb->buf);
      |     ^
[40;35m target gimple type: ssa_name [0m
quoted_57 = PHI <quoted_55(23), quoted_79(42)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: addr_expr [0m
# .MEM_139 = VDEF <.MEM_138>
memcpy (_83, quoted_57, len_58);
./benchmarks/git/double_free_2/git_df_2.c:35:9: warning: use location
   35 |         memcpy(sb->buf + sb->len, data, len);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: ssa_name [0m
_85 = len_58 + _84;
./benchmarks/git/double_free_2/git_df_2.c:36:9: warning: use location
   36 |         strbuf_setlen(sb, sb->len + len);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: addr_expr [0m
# .MEM_140 = VDEF <.MEM_139>
strbuf_setlen (&uq, _85);
./benchmarks/git/double_free_2/git_df_2.c:36:9: warning: use location
   36 |         strbuf_setlen(sb, sb->len + len);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: ssa_name [0m
quoted_59 = quoted_57 + len_58;
./benchmarks/git/double_free_2/git_df_2.c:89:24: warning: use location
   89 |                 quoted += len;
      |                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_140>
_73 = MEM[(const char *)quoted_59 + 3B];
./benchmarks/git/double_free_2/git_df_2.c:120:35: warning: use location
  120 |                         if ((ch = *quoted++) < '0' || '7' < ch)
      |                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: ssa_name [0m
ch_74 = (int) _73;
./benchmarks/git/double_free_2/git_df_2.c:120:33: warning: use location
  120 |                         if ((ch = *quoted++) < '0' || '7' < ch)
      |                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: ssa_name [0m
ac_76 = ac_71 | _75;
./benchmarks/git/double_free_2/git_df_2.c:122:44: warning: use location
  122 |                                         ac |= (ch - '0');
      |                                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_155 = VDEF <.MEM_103>
free (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:222:25: warning: free in this location
  222 |                         free(path_name);
      |                         ^
[40;35m target gimple type: ssa_name [0m
ch_77 = PHI <ch_64(26), 7(27), 8(28), 12(29), 10(30), 13(31), 9(32), 11(33), ac_76(40)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: ssa_name [0m
ch_77 = PHI <ch_64(26), 7(27), 8(28), 12(29), 10(30), 13(31), 9(32), 11(33), ac_76(40)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_155 = VDEF <.MEM_103>
free (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:222:25: warning: free in this location
  222 |                         free(path_name);
      |                         ^
[40;35m target gimple type: ssa_name [0m
ch_77 = PHI <ch_64(26), 7(27), 8(28), 12(29), 10(30), 13(31), 9(32), 11(33), ac_76(40)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_125 = VDEF <.MEM_112>
free (_100);
./benchmarks/git/double_free_2/git_df_2.c:15:5: warning: free in this location
   15 |     free(sb->buf);
      |     ^
[40;35m target gimple type: ssa_name [0m
ch_77 = PHI <ch_64(26), 7(27), 8(28), 12(29), 10(30), 13(31), 9(32), 11(33), ac_76(40)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_127 = VDEF <.MEM_126>
free (_99);
./benchmarks/git/double_free_2/git_df_2.c:15:5: warning: free in this location
   15 |     free(sb->buf);
      |     ^
[40;35m target gimple type: ssa_name [0m
ch_77 = PHI <ch_64(26), 7(27), 8(28), 12(29), 10(30), 13(31), 9(32), 11(33), ac_76(40)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: addr_expr [0m
# .MEM_141 = VDEF <.MEM_140>
strbuf_addch (&uq, ch_77);
./benchmarks/git/double_free_2/git_df_2.c:128:17: warning: use location
  128 |                 strbuf_addch(sb, ch);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: ssa_name [0m
if (ch_74 > 55)
./benchmarks/git/double_free_2/git_df_2.c:120:52: warning: use location
  120 |                         if ((ch = *quoted++) < '0' || '7' < ch)
      |                                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: ssa_name [0m
if (ch_74 <= 47)
./benchmarks/git/double_free_2/git_df_2.c:120:28: warning: use location
  120 |                         if ((ch = *quoted++) < '0' || '7' < ch)
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_140>
_67 = MEM[(const char *)quoted_59 + 2B];
./benchmarks/git/double_free_2/git_df_2.c:117:35: warning: use location
  117 |                         if ((ch = *quoted++) < '0' || '7' < ch)
      |                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: ssa_name [0m
ch_68 = (int) _67;
./benchmarks/git/double_free_2/git_df_2.c:117:33: warning: use location
  117 |                         if ((ch = *quoted++) < '0' || '7' < ch)
      |                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: ssa_name [0m
_69 = ch_68 + -48;
./benchmarks/git/double_free_2/git_df_2.c:119:52: warning: use location
  119 |                                         ac |= ((ch - '0') << 3);
      |                                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: ssa_name [0m
_70 = _69 << 3;
./benchmarks/git/double_free_2/git_df_2.c:119:59: warning: use location
  119 |                                         ac |= ((ch - '0') << 3);
      |                                                           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: ssa_name [0m
ac_71 = ac_66 | _70;
./benchmarks/git/double_free_2/git_df_2.c:119:44: warning: use location
  119 |                                         ac |= ((ch - '0') << 3);
      |                                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_140>
_63 = MEM[(const char *)quoted_59 + 1B];
./benchmarks/git/double_free_2/git_df_2.c:102:31: warning: use location
  102 |                 switch ((ch = *quoted++)) {
      |                               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: ssa_name [0m
quoted_62 = &MEM <const char> [(void *)quoted_59 + 2B];
./benchmarks/git/double_free_2/git_df_2.c:102:38: warning: use location
  102 |                 switch ((ch = *quoted++)) {
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_155 = VDEF <.MEM_103>
free (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:222:25: warning: free in this location
  222 |                         free(path_name);
      |                         ^
[40;35m target gimple type: ssa_name [0m
quoted_79 = PHI <quoted_62(26), quoted_62(27), quoted_62(28), quoted_62(29), quoted_62(30), quoted_62(31), quoted_62(32), quoted_62(33), quoted_72(40)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: ssa_name [0m
quoted_79 = PHI <quoted_62(26), quoted_62(27), quoted_62(28), quoted_62(29), quoted_62(30), quoted_62(31), quoted_62(32), quoted_62(33), quoted_72(40)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_155 = VDEF <.MEM_103>
free (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:222:25: warning: free in this location
  222 |                         free(path_name);
      |                         ^
[40;35m target gimple type: ssa_name [0m
quoted_79 = PHI <quoted_62(26), quoted_62(27), quoted_62(28), quoted_62(29), quoted_62(30), quoted_62(31), quoted_62(32), quoted_62(33), quoted_72(40)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_125 = VDEF <.MEM_112>
free (_100);
./benchmarks/git/double_free_2/git_df_2.c:15:5: warning: free in this location
   15 |     free(sb->buf);
      |     ^
[40;35m target gimple type: ssa_name [0m
quoted_79 = PHI <quoted_62(26), quoted_62(27), quoted_62(28), quoted_62(29), quoted_62(30), quoted_62(31), quoted_62(32), quoted_62(33), quoted_72(40)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_127 = VDEF <.MEM_126>
free (_99);
./benchmarks/git/double_free_2/git_df_2.c:15:5: warning: free in this location
   15 |     free(sb->buf);
      |     ^
[40;35m target gimple type: ssa_name [0m
quoted_79 = PHI <quoted_62(26), quoted_62(27), quoted_62(28), quoted_62(29), quoted_62(30), quoted_62(31), quoted_62(32), quoted_62(33), quoted_72(40)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:5 [0m
[40;31m  	possible double free [Looserules]:3 [0m
[40;31m  	possible double free [rigorous]:5 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff99403ec60
    type <integer_type 0x7ff9945175e8 int public SI
        size <integer_cst 0x7ff994502df8 constant 32>
        unit-size <integer_cst 0x7ff994502e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff9945175e8 precision:32 min <integer_cst 0x7ff994502db0 -2147483648> max <integer_cst 0x7ff994502dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff99451e9d8>>
   
    def_stmt _31 = get_sha1_hex (_30, &sha1);
    version:31>
# .MEM_136 = VDEF <.MEM_101>
_31 = get_sha1_hex (_30, &sha1);

 ================== pre trace ptable ================== 
trace fucntion name:get_sha1_hex 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function get_sha1_hex
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_136 = VDEF <.MEM_101>
_31 = get_sha1_hex (_30, &sha1);
_31 = get_sha1_hex (_30, &sha1);
./benchmarks/git/double_free_2/git_df_2.c:188:21: warning: use location
  188 |                 if (get_sha1_hex(tab - 40, sha1) || tab[-41] != ' ')
      |                     ^
this stmt call this function :get_sha1_hex
trace fucntion name:get_sha1_hex 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_31 != 0)
./benchmarks/git/double_free_2/git_df_2.c:188:20: warning: use location
  188 |                 if (get_sha1_hex(tab - 40, sha1) || tab[-41] != ' ')
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = add_cacheinfo (mode_15, &sha1, path_name_37, stage_45);
./benchmarks/git/double_free_2/git_df_2.c:217:29: warning: use location
  217 |                         if (add_cacheinfo(mode, sha1, path_name, stage))
      |                             ^
this stmt call this function :add_cacheinfo
trace fucntion name:add_cacheinfo 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff99403ec60
    type <integer_type 0x7ff9945175e8 int public SI
        size <integer_cst 0x7ff994502df8 constant 32>
        unit-size <integer_cst 0x7ff994502e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff9945175e8 precision:32 min <integer_cst 0x7ff994502db0 -2147483648> max <integer_cst 0x7ff994502dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff99451e9d8>>
   
    def_stmt _31 = get_sha1_hex (_30, &sha1);
    version:31>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_155 = VDEF <.MEM_103>
free (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:222:25: warning: use location
  222 |                         free(path_name);
      |                         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_125 = VDEF <.MEM_112>
free (_100);
./benchmarks/git/double_free_2/git_df_2.c:15:5: warning: use location
   15 |     free(sb->buf);
      |     ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_127 = VDEF <.MEM_126>
free (_99);
./benchmarks/git/double_free_2/git_df_2.c:15:5: warning: use location
   15 |     free(sb->buf);
      |     ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff994046e10
    type <integer_type 0x7ff99401a9d8 size_t public unsigned DI
        size <integer_cst 0x7ff994502bb8 constant 64>
        unit-size <integer_cst 0x7ff994502bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff994517738 precision:64 min <integer_cst 0x7ff994502e88 0> max <integer_cst 0x7ff994503500 18446744073709551615> context <translation_unit_decl 0x7ff99450d168 ./benchmarks/git/double_free_2/git_df_2.c>>
    var <var_decl 0x7ff994049b40 len>
    def_stmt len_58 = strcspn (quoted_57, "\"\\");
    version:58>
# VUSE <.MEM_108>
len_58 = strcspn (quoted_57, "\"\\");

 ================== pre trace ptable ================== 
trace fucntion name:strcspn 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function strcspn
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
memcpy (_83, quoted_57, len_58);
./benchmarks/git/double_free_2/git_df_2.c:35:9: warning: use location
   35 |         memcpy(sb->buf + sb->len, data, len);
      |         ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_108>
len_58 = strcspn (quoted_57, "\"\\");
len_58 = strcspn (quoted_57, "\"\\");
./benchmarks/git/double_free_2/git_df_2.c:87:23: warning: use location
   87 |                 len = strcspn(quoted, "\"\\");
      |                       ^
this stmt call this function :strcspn
trace fucntion name:strcspn 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: use location
   34 |         strbuf_grow(sb, len);
      |         ^
this stmt call this function :strbuf_grow
trace fucntion name:strbuf_grow 
[40;44m =======trace_function_path strbuf_grow  function_call count: 5 level :0========  [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
[40;31m  find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
[40;31m  find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:alloc_nr========= [0m
[40;46m =======add node_fun stack:alloc_nr========= [0m

 ================== trace ================== 
trace fucntion free:4 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_85 = len_58 + _84;
./benchmarks/git/double_free_2/git_df_2.c:36:9: warning: use location
   36 |         strbuf_setlen(sb, sb->len + len);
      |         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strbuf_setlen (&uq, _85);
./benchmarks/git/double_free_2/git_df_2.c:36:9: warning: use location
this stmt call this function :strbuf_setlen
trace fucntion name:strbuf_setlen 

 ================== trace ================== 
trace fucntion free:4 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
quoted_59 = quoted_57 + len_58;
./benchmarks/git/double_free_2/git_df_2.c:89:24: warning: use location
   89 |                 quoted += len;
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = MEM[(const char *)quoted_59 + 3B];
./benchmarks/git/double_free_2/git_df_2.c:120:35: warning: use location
  120 |                         if ((ch = *quoted++) < '0' || '7' < ch)
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ch_74 = (int) _73;
./benchmarks/git/double_free_2/git_df_2.c:120:33: warning: use location
  120 |                         if ((ch = *quoted++) < '0' || '7' < ch)
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ac_76 = ac_71 | _75;
./benchmarks/git/double_free_2/git_df_2.c:122:44: warning: use location
  122 |                                         ac |= (ch - '0');
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ch_77 = PHI <ch_64(26), 7(27), 8(28), 12(29), 10(30), 13(31), 9(32), 11(33), ac_76(40)>
lto1: warning: use location
this stmt have mutiple branch ---strbuf_setlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strbuf_addch (&uq, ch_77);
./benchmarks/git/double_free_2/git_df_2.c:128:17: warning: use location
  128 |                 strbuf_addch(sb, ch);
      |                 ^
this stmt call this function :strbuf_addch
trace fucntion name:strbuf_addch 

 ================== trace ================== 
trace fucntion free:4 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (ch_74 > 55)
./benchmarks/git/double_free_2/git_df_2.c:120:52: warning: use location
  120 |                         if ((ch = *quoted++) < '0' || '7' < ch)
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (ch_74 <= 47)
./benchmarks/git/double_free_2/git_df_2.c:120:28: warning: use location
  120 |                         if ((ch = *quoted++) < '0' || '7' < ch)
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_67 = MEM[(const char *)quoted_59 + 2B];
./benchmarks/git/double_free_2/git_df_2.c:117:35: warning: use location
  117 |                         if ((ch = *quoted++) < '0' || '7' < ch)
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ch_68 = (int) _67;
./benchmarks/git/double_free_2/git_df_2.c:117:33: warning: use location
  117 |                         if ((ch = *quoted++) < '0' || '7' < ch)
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_69 = ch_68 + -48;
./benchmarks/git/double_free_2/git_df_2.c:119:52: warning: use location
  119 |                                         ac |= ((ch - '0') << 3);
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = _69 << 3;
./benchmarks/git/double_free_2/git_df_2.c:119:59: warning: use location
  119 |                                         ac |= ((ch - '0') << 3);
      |                                                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ac_71 = ac_66 | _70;
./benchmarks/git/double_free_2/git_df_2.c:119:44: warning: use location
  119 |                                         ac |= ((ch - '0') << 3);
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = MEM[(const char *)quoted_59 + 1B];
./benchmarks/git/double_free_2/git_df_2.c:102:31: warning: use location
  102 |                 switch ((ch = *quoted++)) {
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = *quoted_59;
./benchmarks/git/double_free_2/git_df_2.c:91:25: warning: use location
   91 |                 switch (*quoted++) {
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
quoted_62 = &MEM <const char> [(void *)quoted_59 + 2B];
./benchmarks/git/double_free_2/git_df_2.c:102:38: warning: use location
  102 |                 switch ((ch = *quoted++)) {
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
quoted_79 = PHI <quoted_62(26), quoted_62(27), quoted_62(28), quoted_62(29), quoted_62(30), quoted_62(31), quoted_62(32), quoted_62(33), quoted_72(40)>
lto1: warning: use location
this stmt have mutiple branch ---strbuf_addch-----

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff994046e10
    type <integer_type 0x7ff99401a9d8 size_t public unsigned DI
        size <integer_cst 0x7ff994502bb8 constant 64>
        unit-size <integer_cst 0x7ff994502bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff994517738 precision:64 min <integer_cst 0x7ff994502e88 0> max <integer_cst 0x7ff994503500 18446744073709551615> context <translation_unit_decl 0x7ff99450d168 ./benchmarks/git/double_free_2/git_df_2.c>>
    var <var_decl 0x7ff994049b40 len>
    def_stmt len_58 = strcspn (quoted_57, "\"\\");
    version:58>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_155 = VDEF <.MEM_103>
free (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:222:25: warning: use location
  222 |                         free(path_name);
      |                         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_125 = VDEF <.MEM_112>
free (_100);
./benchmarks/git/double_free_2/git_df_2.c:15:5: warning: use location
   15 |     free(sb->buf);
      |     ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_127 = VDEF <.MEM_126>
free (_99);
./benchmarks/git/double_free_2/git_df_2.c:15:5: warning: use location
   15 |     free(sb->buf);
      |     ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: addr_expr [0m
# .MEM_139 = VDEF <.MEM_138>
memcpy (_83, quoted_57, len_58);
./benchmarks/git/double_free_2/git_df_2.c:35:9: warning: use location
   35 |         memcpy(sb->buf + sb->len, data, len);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: ssa_name [0m
_85 = len_58 + _84;
./benchmarks/git/double_free_2/git_df_2.c:36:9: warning: use location
   36 |         strbuf_setlen(sb, sb->len + len);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: addr_expr [0m
# .MEM_140 = VDEF <.MEM_139>
strbuf_setlen (&uq, _85);
./benchmarks/git/double_free_2/git_df_2.c:36:9: warning: use location
   36 |         strbuf_setlen(sb, sb->len + len);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: ssa_name [0m
quoted_59 = quoted_57 + len_58;
./benchmarks/git/double_free_2/git_df_2.c:89:24: warning: use location
   89 |                 quoted += len;
      |                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_140>
_73 = MEM[(const char *)quoted_59 + 3B];
./benchmarks/git/double_free_2/git_df_2.c:120:35: warning: use location
  120 |                         if ((ch = *quoted++) < '0' || '7' < ch)
      |                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: ssa_name [0m
ch_74 = (int) _73;
./benchmarks/git/double_free_2/git_df_2.c:120:33: warning: use location
  120 |                         if ((ch = *quoted++) < '0' || '7' < ch)
      |                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: ssa_name [0m
ac_76 = ac_71 | _75;
./benchmarks/git/double_free_2/git_df_2.c:122:44: warning: use location
  122 |                                         ac |= (ch - '0');
      |                                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: ssa_name [0m
ch_77 = PHI <ch_64(26), 7(27), 8(28), 12(29), 10(30), 13(31), 9(32), 11(33), ac_76(40)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_155 = VDEF <.MEM_103>
free (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:222:25: warning: free in this location
  222 |                         free(path_name);
      |                         ^
[40;35m target gimple type: ssa_name [0m
ch_77 = PHI <ch_64(26), 7(27), 8(28), 12(29), 10(30), 13(31), 9(32), 11(33), ac_76(40)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_125 = VDEF <.MEM_112>
free (_100);
./benchmarks/git/double_free_2/git_df_2.c:15:5: warning: free in this location
   15 |     free(sb->buf);
      |     ^
[40;35m target gimple type: ssa_name [0m
ch_77 = PHI <ch_64(26), 7(27), 8(28), 12(29), 10(30), 13(31), 9(32), 11(33), ac_76(40)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_127 = VDEF <.MEM_126>
free (_99);
./benchmarks/git/double_free_2/git_df_2.c:15:5: warning: free in this location
   15 |     free(sb->buf);
      |     ^
[40;35m target gimple type: ssa_name [0m
ch_77 = PHI <ch_64(26), 7(27), 8(28), 12(29), 10(30), 13(31), 9(32), 11(33), ac_76(40)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: addr_expr [0m
# .MEM_141 = VDEF <.MEM_140>
strbuf_addch (&uq, ch_77);
./benchmarks/git/double_free_2/git_df_2.c:128:17: warning: use location
  128 |                 strbuf_addch(sb, ch);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: ssa_name [0m
if (ch_74 > 55)
./benchmarks/git/double_free_2/git_df_2.c:120:52: warning: use location
  120 |                         if ((ch = *quoted++) < '0' || '7' < ch)
      |                                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: ssa_name [0m
if (ch_74 <= 47)
./benchmarks/git/double_free_2/git_df_2.c:120:28: warning: use location
  120 |                         if ((ch = *quoted++) < '0' || '7' < ch)
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_140>
_67 = MEM[(const char *)quoted_59 + 2B];
./benchmarks/git/double_free_2/git_df_2.c:117:35: warning: use location
  117 |                         if ((ch = *quoted++) < '0' || '7' < ch)
      |                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: ssa_name [0m
ch_68 = (int) _67;
./benchmarks/git/double_free_2/git_df_2.c:117:33: warning: use location
  117 |                         if ((ch = *quoted++) < '0' || '7' < ch)
      |                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: ssa_name [0m
_69 = ch_68 + -48;
./benchmarks/git/double_free_2/git_df_2.c:119:52: warning: use location
  119 |                                         ac |= ((ch - '0') << 3);
      |                                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: ssa_name [0m
_70 = _69 << 3;
./benchmarks/git/double_free_2/git_df_2.c:119:59: warning: use location
  119 |                                         ac |= ((ch - '0') << 3);
      |                                                           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: ssa_name [0m
ac_71 = ac_66 | _70;
./benchmarks/git/double_free_2/git_df_2.c:119:44: warning: use location
  119 |                                         ac |= ((ch - '0') << 3);
      |                                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_140>
_63 = MEM[(const char *)quoted_59 + 1B];
./benchmarks/git/double_free_2/git_df_2.c:102:31: warning: use location
  102 |                 switch ((ch = *quoted++)) {
      |                               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_140>
_60 = *quoted_59;
./benchmarks/git/double_free_2/git_df_2.c:91:25: warning: use location
   91 |                 switch (*quoted++) {
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: ssa_name [0m
quoted_62 = &MEM <const char> [(void *)quoted_59 + 2B];
./benchmarks/git/double_free_2/git_df_2.c:102:38: warning: use location
  102 |                 switch ((ch = *quoted++)) {
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: ssa_name [0m
quoted_79 = PHI <quoted_62(26), quoted_62(27), quoted_62(28), quoted_62(29), quoted_62(30), quoted_62(31), quoted_62(32), quoted_62(33), quoted_72(40)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_155 = VDEF <.MEM_103>
free (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:222:25: warning: free in this location
  222 |                         free(path_name);
      |                         ^
[40;35m target gimple type: ssa_name [0m
quoted_79 = PHI <quoted_62(26), quoted_62(27), quoted_62(28), quoted_62(29), quoted_62(30), quoted_62(31), quoted_62(32), quoted_62(33), quoted_72(40)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_125 = VDEF <.MEM_112>
free (_100);
./benchmarks/git/double_free_2/git_df_2.c:15:5: warning: free in this location
   15 |     free(sb->buf);
      |     ^
[40;35m target gimple type: ssa_name [0m
quoted_79 = PHI <quoted_62(26), quoted_62(27), quoted_62(28), quoted_62(29), quoted_62(30), quoted_62(31), quoted_62(32), quoted_62(33), quoted_72(40)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_127 = VDEF <.MEM_126>
free (_99);
./benchmarks/git/double_free_2/git_df_2.c:15:5: warning: free in this location
   15 |     free(sb->buf);
      |     ^
[40;35m target gimple type: ssa_name [0m
quoted_79 = PHI <quoted_62(26), quoted_62(27), quoted_62(28), quoted_62(29), quoted_62(30), quoted_62(31), quoted_62(32), quoted_62(33), quoted_72(40)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:4 [0m
[40;31m  	possible double free [Looserules]:3 [0m
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff99403ee58
    type <integer_type 0x7ff9945175e8 int public SI
        size <integer_cst 0x7ff994502df8 constant 32>
        unit-size <integer_cst 0x7ff994502e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff9945175e8 precision:32 min <integer_cst 0x7ff994502db0 -2147483648> max <integer_cst 0x7ff994502dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff99451e9d8>>
   
    def_stmt _38 = verify_path (path_name_37);
    version:38>
# .MEM_146 = VDEF <.MEM_102>
_38 = verify_path (path_name_37);

 ================== pre trace ptable ================== 
trace fucntion name:verify_path 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function verify_path
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:222:25: warning: use location
  222 |                         free(path_name);
      |                         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:222:25: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
printf ("git-update-index: unable to update %s", path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:218:33: warning: use location
  218 |                                 die("git-update-index: unable to update %s",
      |                                 ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = add_cacheinfo (mode_15, &sha1, path_name_37, stage_45);
./benchmarks/git/double_free_2/git_df_2.c:217:29: warning: use location
  217 |                         if (add_cacheinfo(mode, sha1, path_name, stage))
      |                             ^
this stmt call this function :add_cacheinfo
trace fucntion name:add_cacheinfo 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_46 != 0)
./benchmarks/git/double_free_2/git_df_2.c:217:28: warning: use location
  217 |                         if (add_cacheinfo(mode, sha1, path_name, stage))
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (mode_15 == 0)
./benchmarks/git/double_free_2/git_df_2.c:205:20: warning: use location
  205 |                 if (!mode) {
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_40 = remove_file_from_cache (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:207:29: warning: use location
  207 |                         if (remove_file_from_cache(path_name))
      |                             ^
this stmt call this function :remove_file_from_cache
trace fucntion name:remove_file_from_cache 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
fprintf (_39, "Ignoring path %s\n", path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:201:25: warning: use location
  201 |                         fprintf(stderr, "Ignoring path %s\n", path_name);
      |                         ^
this stmt call this function :fprintf
trace fucntion name:fprintf 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_146 = VDEF <.MEM_102>
_38 = verify_path (path_name_37);
_38 = verify_path (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:200:22: warning: use location
  200 |                 if (!verify_path(path_name)) {
      |                      ^
this stmt call this function :verify_path
trace fucntion name:verify_path 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (path_name_37 != _47)
./benchmarks/git/double_free_2/git_df_2.c:221:20: warning: use location
  221 |                 if (path_name != ptr)
      |                    ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff99403ee58
    type <integer_type 0x7ff9945175e8 int public SI
        size <integer_cst 0x7ff994502df8 constant 32>
        unit-size <integer_cst 0x7ff994502e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff9945175e8 precision:32 min <integer_cst 0x7ff994502db0 -2147483648> max <integer_cst 0x7ff994502dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff99451e9d8>>
   
    def_stmt _38 = verify_path (path_name_37);
    version:38>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_155 = VDEF <.MEM_103>
free (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:222:25: warning: use location
  222 |                         free(path_name);
      |                         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_125 = VDEF <.MEM_112>
free (_100);
./benchmarks/git/double_free_2/git_df_2.c:15:5: warning: use location
   15 |     free(sb->buf);
      |     ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_127 = VDEF <.MEM_126>
free (_99);
./benchmarks/git/double_free_2/git_df_2.c:15:5: warning: use location
   15 |     free(sb->buf);
      |     ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff99403eee8
    type <integer_type 0x7ff9945175e8 int public SI
        size <integer_cst 0x7ff994502df8 constant 32>
        unit-size <integer_cst 0x7ff994502e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff9945175e8 precision:32 min <integer_cst 0x7ff994502db0 -2147483648> max <integer_cst 0x7ff994502dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff99451e9d8>>
   
    def_stmt _40 = remove_file_from_cache (path_name_37);
    version:40>
# .MEM_152 = VDEF <.MEM_146>
_40 = remove_file_from_cache (path_name_37);

 ================== pre trace ptable ================== 
trace fucntion name:remove_file_from_cache 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function remove_file_from_cache
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:222:25: warning: use location
  222 |                         free(path_name);
      |                         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:222:25: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
printf ("git-update-index: unable to update %s", path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:218:33: warning: use location
  218 |                                 die("git-update-index: unable to update %s",
      |                                 ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = add_cacheinfo (mode_15, &sha1, path_name_37, stage_45);
./benchmarks/git/double_free_2/git_df_2.c:217:29: warning: use location
  217 |                         if (add_cacheinfo(mode, sha1, path_name, stage))
      |                             ^
this stmt call this function :add_cacheinfo
trace fucntion name:add_cacheinfo 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_46 != 0)
./benchmarks/git/double_free_2/git_df_2.c:217:28: warning: use location
  217 |                         if (add_cacheinfo(mode, sha1, path_name, stage))
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (mode_15 == 0)
./benchmarks/git/double_free_2/git_df_2.c:205:20: warning: use location
  205 |                 if (!mode) {
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_152 = VDEF <.MEM_146>
_40 = remove_file_from_cache (path_name_37);
_40 = remove_file_from_cache (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:207:29: warning: use location
  207 |                         if (remove_file_from_cache(path_name))
      |                             ^
this stmt call this function :remove_file_from_cache
trace fucntion name:remove_file_from_cache 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
fprintf (_39, "Ignoring path %s\n", path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:201:25: warning: use location
  201 |                         fprintf(stderr, "Ignoring path %s\n", path_name);
      |                         ^
this stmt call this function :fprintf
trace fucntion name:fprintf 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = verify_path (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:200:22: warning: use location
  200 |                 if (!verify_path(path_name)) {
      |                      ^
this stmt call this function :verify_path
trace fucntion name:verify_path 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (path_name_37 != _47)
./benchmarks/git/double_free_2/git_df_2.c:221:20: warning: use location
  221 |                 if (path_name != ptr)
      |                    ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff99403eee8
    type <integer_type 0x7ff9945175e8 int public SI
        size <integer_cst 0x7ff994502df8 constant 32>
        unit-size <integer_cst 0x7ff994502e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff9945175e8 precision:32 min <integer_cst 0x7ff994502db0 -2147483648> max <integer_cst 0x7ff994502dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff99451e9d8>>
   
    def_stmt _40 = remove_file_from_cache (path_name_37);
    version:40>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_155 = VDEF <.MEM_103>
free (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:222:25: warning: use location
  222 |                         free(path_name);
      |                         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_125 = VDEF <.MEM_112>
free (_100);
./benchmarks/git/double_free_2/git_df_2.c:15:5: warning: use location
   15 |     free(sb->buf);
      |     ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_127 = VDEF <.MEM_126>
free (_99);
./benchmarks/git/double_free_2/git_df_2.c:15:5: warning: use location
   15 |     free(sb->buf);
      |     ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff994046048
    type <integer_type 0x7ff9945175e8 int public SI
        size <integer_cst 0x7ff994502df8 constant 32>
        unit-size <integer_cst 0x7ff994502e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff9945175e8 precision:32 min <integer_cst 0x7ff994502db0 -2147483648> max <integer_cst 0x7ff994502dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff99451e9d8>>
   
    def_stmt _46 = add_cacheinfo (mode_15, &sha1, path_name_37, stage_45);
    version:46>
# .MEM_149 = VDEF <.MEM_148>
_46 = add_cacheinfo (mode_15, &sha1, path_name_37, stage_45);

 ================== pre trace ptable ================== 
trace fucntion name:add_cacheinfo 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function add_cacheinfo
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_149 = VDEF <.MEM_148>
_46 = add_cacheinfo (mode_15, &sha1, path_name_37, stage_45);
_46 = add_cacheinfo (mode_15, &sha1, path_name_37, stage_45);
./benchmarks/git/double_free_2/git_df_2.c:217:29: warning: use location
  217 |                         if (add_cacheinfo(mode, sha1, path_name, stage))
      |                             ^
this stmt call this function :add_cacheinfo
trace fucntion name:add_cacheinfo 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_46 != 0)
./benchmarks/git/double_free_2/git_df_2.c:217:28: warning: use location
  217 |                         if (add_cacheinfo(mode, sha1, path_name, stage))
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:222:25: warning: use location
  222 |                         free(path_name);
      |                         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:222:25: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
printf ("git-update-index: unable to update %s", path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:218:33: warning: use location
  218 |                                 die("git-update-index: unable to update %s",
      |                                 ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_40 = remove_file_from_cache (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:207:29: warning: use location
  207 |                         if (remove_file_from_cache(path_name))
      |                             ^
this stmt call this function :remove_file_from_cache
trace fucntion name:remove_file_from_cache 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
fprintf (_39, "Ignoring path %s\n", path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:201:25: warning: use location
  201 |                         fprintf(stderr, "Ignoring path %s\n", path_name);
      |                         ^
this stmt call this function :fprintf
trace fucntion name:fprintf 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = verify_path (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:200:22: warning: use location
  200 |                 if (!verify_path(path_name)) {
      |                      ^
this stmt call this function :verify_path
trace fucntion name:verify_path 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (path_name_37 != _47)
./benchmarks/git/double_free_2/git_df_2.c:221:20: warning: use location
  221 |                 if (path_name != ptr)
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (mode_15 == 0)
./benchmarks/git/double_free_2/git_df_2.c:205:20: warning: use location
  205 |                 if (!mode) {
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_31 = get_sha1_hex (_30, &sha1);
./benchmarks/git/double_free_2/git_df_2.c:188:21: warning: use location
  188 |                 if (get_sha1_hex(tab - 40, sha1) || tab[-41] != ' ')
      |                     ^
this stmt call this function :get_sha1_hex
trace fucntion name:get_sha1_hex 

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff994046048
    type <integer_type 0x7ff9945175e8 int public SI
        size <integer_cst 0x7ff994502df8 constant 32>
        unit-size <integer_cst 0x7ff994502e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff9945175e8 precision:32 min <integer_cst 0x7ff994502db0 -2147483648> max <integer_cst 0x7ff994502dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff99451e9d8>>
   
    def_stmt _46 = add_cacheinfo (mode_15, &sha1, path_name_37, stage_45);
    version:46>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_155 = VDEF <.MEM_103>
free (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:222:25: warning: use location
  222 |                         free(path_name);
      |                         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_125 = VDEF <.MEM_112>
free (_100);
./benchmarks/git/double_free_2/git_df_2.c:15:5: warning: use location
   15 |     free(sb->buf);
      |     ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_127 = VDEF <.MEM_126>
free (_99);
./benchmarks/git/double_free_2/git_df_2.c:15:5: warning: use location
   15 |     free(sb->buf);
      |     ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;32m   No memory leak, need more check!  [0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff99404ed38
    type <integer_type 0x7ff9945175e8 int public SI
        size <integer_cst 0x7ff994502df8 constant 32>
        unit-size <integer_cst 0x7ff994502e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff9945175e8 precision:32 min <integer_cst 0x7ff994502db0 -2147483648> max <integer_cst 0x7ff994502dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff99451e9d8>>
   
    def_stmt _86 = feof (_49);
    version:86>
# .MEM_117 = VDEF <.MEM_116>
_86 = feof (_49);

 ================== pre trace ptable ================== 
trace fucntion name:feof 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function feof
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ch_87 = fgetc (_49);
./benchmarks/git/double_free_2/git_df_2.c:47:22: warning: use location
   47 |         while ((ch = fgetc(fp)) != EOF) {
      |                      ^
this stmt call this function :fgetc
trace fucntion name:fgetc 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (ch_87 == -1)
./benchmarks/git/double_free_2/git_df_2.c:53:12: warning: use location
   53 |         if (ch == EOF && sb->len == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = (char) ch_87;
./benchmarks/git/double_free_2/git_df_2.c:51:36: warning: use location
   51 |                 sb->buf[sb->len++] = ch;
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_91 = _92;
./benchmarks/git/double_free_2/git_df_2.c:51:36: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_117 = VDEF <.MEM_116>
_86 = feof (_49);
_86 = feof (_49);
./benchmarks/git/double_free_2/git_df_2.c:43:13: warning: use location
   43 |         if (feof(fp))
      |             ^
this stmt call this function :feof
trace fucntion name:feof 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_86 != 0)
./benchmarks/git/double_free_2/git_df_2.c:43:12: warning: use location
   43 |         if (feof(fp))
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff99404ed38
    type <integer_type 0x7ff9945175e8 int public SI
        size <integer_cst 0x7ff994502df8 constant 32>
        unit-size <integer_cst 0x7ff994502e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff9945175e8 precision:32 min <integer_cst 0x7ff994502db0 -2147483648> max <integer_cst 0x7ff994502dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff99451e9d8>>
   
    def_stmt _86 = feof (_49);
    version:86>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_155 = VDEF <.MEM_103>
free (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:222:25: warning: use location
  222 |                         free(path_name);
      |                         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_125 = VDEF <.MEM_112>
free (_100);
./benchmarks/git/double_free_2/git_df_2.c:15:5: warning: use location
   15 |     free(sb->buf);
      |     ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_127 = VDEF <.MEM_126>
free (_99);
./benchmarks/git/double_free_2/git_df_2.c:15:5: warning: use location
   15 |     free(sb->buf);
      |     ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_155 = VDEF <.MEM_103>
free (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:222:25: warning: free in this location
  222 |                         free(path_name);
      |                         ^
[40;35m target gimple type: ssa_name [0m
# .MEM_119 = VDEF <.MEM_111>
ch_87 = fgetc (_49);
./benchmarks/git/double_free_2/git_df_2.c:47:22: warning: use location
   47 |         while ((ch = fgetc(fp)) != EOF) {
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_155 = VDEF <.MEM_103>
free (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:222:25: warning: free in this location
  222 |                         free(path_name);
      |                         ^
[40;35m target gimple type: ssa_name [0m
if (ch_87 == -1)
./benchmarks/git/double_free_2/git_df_2.c:53:12: warning: use location
   53 |         if (ch == EOF && sb->len == 0)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_155 = VDEF <.MEM_103>
free (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:222:25: warning: free in this location
  222 |                         free(path_name);
      |                         ^
[40;35m target gimple type: ssa_name [0m
_92 = (char) ch_87;
./benchmarks/git/double_free_2/git_df_2.c:51:36: warning: use location
   51 |                 sb->buf[sb->len++] = ch;
      |                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_155 = VDEF <.MEM_103>
free (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:222:25: warning: free in this location
  222 |                         free(path_name);
      |                         ^
[40;35m target gimple type: mem_ref [0m
# .MEM_122 = VDEF <.MEM_121>
*_91 = _92;
./benchmarks/git/double_free_2/git_df_2.c:51:36: warning: use location
   51 |                 sb->buf[sb->len++] = ch;
      |                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_155 = VDEF <.MEM_103>
free (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:222:25: warning: free in this location
  222 |                         free(path_name);
      |                         ^
[40;35m target gimple type: ssa_name [0m
# .MEM_117 = VDEF <.MEM_116>
_86 = feof (_49);
./benchmarks/git/double_free_2/git_df_2.c:43:13: warning: use location
   43 |         if (feof(fp))
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_155 = VDEF <.MEM_103>
free (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:222:25: warning: free in this location
  222 |                         free(path_name);
      |                         ^
[40;35m target gimple type: ssa_name [0m
if (_86 != 0)
./benchmarks/git/double_free_2/git_df_2.c:43:12: warning: use location
   43 |         if (feof(fp))
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff99404ed80
    type <integer_type 0x7ff9945175e8 int public SI
        size <integer_cst 0x7ff994502df8 constant 32>
        unit-size <integer_cst 0x7ff994502e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff9945175e8 precision:32 min <integer_cst 0x7ff994502db0 -2147483648> max <integer_cst 0x7ff994502dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff99451e9d8>>
    var <var_decl 0x7ff994051bd0 ch>
    def_stmt ch_87 = fgetc (_49);
    version:87>
# .MEM_119 = VDEF <.MEM_111>
ch_87 = fgetc (_49);

 ================== pre trace ptable ================== 
trace fucntion name:fgetc 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function fgetc
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_119 = VDEF <.MEM_111>
ch_87 = fgetc (_49);
ch_87 = fgetc (_49);
./benchmarks/git/double_free_2/git_df_2.c:47:22: warning: use location
   47 |         while ((ch = fgetc(fp)) != EOF) {
      |                      ^
this stmt call this function :fgetc
trace fucntion name:fgetc 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (ch_87 == -1)
./benchmarks/git/double_free_2/git_df_2.c:53:12: warning: use location
   53 |         if (ch == EOF && sb->len == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = (char) ch_87;
./benchmarks/git/double_free_2/git_df_2.c:51:36: warning: use location
   51 |                 sb->buf[sb->len++] = ch;
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_91 = _92;
./benchmarks/git/double_free_2/git_df_2.c:51:36: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_86 = feof (_49);
./benchmarks/git/double_free_2/git_df_2.c:43:13: warning: use location
   43 |         if (feof(fp))
      |             ^
this stmt call this function :feof
trace fucntion name:feof 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff99404ed80
    type <integer_type 0x7ff9945175e8 int public SI
        size <integer_cst 0x7ff994502df8 constant 32>
        unit-size <integer_cst 0x7ff994502e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff9945175e8 precision:32 min <integer_cst 0x7ff994502db0 -2147483648> max <integer_cst 0x7ff994502dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff99451e9d8>>
    var <var_decl 0x7ff994051bd0 ch>
    def_stmt ch_87 = fgetc (_49);
    version:87>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_155 = VDEF <.MEM_103>
free (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:222:25: warning: use location
  222 |                         free(path_name);
      |                         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_125 = VDEF <.MEM_112>
free (_100);
./benchmarks/git/double_free_2/git_df_2.c:15:5: warning: use location
   15 |     free(sb->buf);
      |     ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_127 = VDEF <.MEM_126>
free (_99);
./benchmarks/git/double_free_2/git_df_2.c:15:5: warning: use location
   15 |     free(sb->buf);
      |     ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_155 = VDEF <.MEM_103>
free (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:222:25: warning: free in this location
  222 |                         free(path_name);
      |                         ^
[40;35m target gimple type: ssa_name [0m
# .MEM_119 = VDEF <.MEM_111>
ch_87 = fgetc (_49);
./benchmarks/git/double_free_2/git_df_2.c:47:22: warning: use location
   47 |         while ((ch = fgetc(fp)) != EOF) {
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_155 = VDEF <.MEM_103>
free (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:222:25: warning: free in this location
  222 |                         free(path_name);
      |                         ^
[40;35m target gimple type: ssa_name [0m
if (ch_87 == -1)
./benchmarks/git/double_free_2/git_df_2.c:53:12: warning: use location
   53 |         if (ch == EOF && sb->len == 0)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_155 = VDEF <.MEM_103>
free (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:222:25: warning: free in this location
  222 |                         free(path_name);
      |                         ^
[40;35m target gimple type: ssa_name [0m
_92 = (char) ch_87;
./benchmarks/git/double_free_2/git_df_2.c:51:36: warning: use location
   51 |                 sb->buf[sb->len++] = ch;
      |                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_155 = VDEF <.MEM_103>
free (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:222:25: warning: free in this location
  222 |                         free(path_name);
      |                         ^
[40;35m target gimple type: mem_ref [0m
# .MEM_122 = VDEF <.MEM_121>
*_91 = _92;
./benchmarks/git/double_free_2/git_df_2.c:51:36: warning: use location
   51 |                 sb->buf[sb->len++] = ch;
      |                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_155 = VDEF <.MEM_103>
free (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:222:25: warning: free in this location
  222 |                         free(path_name);
      |                         ^
[40;35m target gimple type: ssa_name [0m
# .MEM_117 = VDEF <.MEM_116>
_86 = feof (_49);
./benchmarks/git/double_free_2/git_df_2.c:43:13: warning: use location
   43 |         if (feof(fp))
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff99403e828
    type <pointer_type 0x7ff99401adc8
        type <integer_type 0x7ff99401ad20 char public QI
            size <integer_cst 0x7ff994502ca8 constant 8>
            unit-size <integer_cst 0x7ff994502cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff9945173f0 precision:8 min <integer_cst 0x7ff994011720 -128> max <integer_cst 0x7ff994011708 127>
            pointer_to_this <pointer_type 0x7ff99401adc8>>
        public unsigned DI
        size <integer_cst 0x7ff994502bb8 constant 64>
        unit-size <integer_cst 0x7ff994502bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7ff99450d168 ./benchmarks/git/double_free_2/git_df_2.c>
        pointer_to_this <pointer_type 0x7ff99401ae70>>
   
    def_stmt _16 = ptr_162;
    version:16
    ptr-info 0x7ff994032cf0>
_16 = ptr_162;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_131>
tab_17 = strchr (_16, 9);
tab_17 = strchr (_16, 9);
./benchmarks/git/double_free_2/git_df_2.c:174:23: warning: use location
  174 |                 tab = strchr(ptr, '\t');
      |                       ^
this stmt call this function :strchr
trace fucntion name:strchr 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = MEM[(char *)tab_17 + -1B];
./benchmarks/git/double_free_2/git_df_2.c:179:36: warning: use location
  179 |                         stage = tab[-1] - '0';
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_24 = (int) _23;
./benchmarks/git/double_free_2/git_df_2.c:179:36: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
stage_25 = _24 + -48;
./benchmarks/git/double_free_2/git_df_2.c:179:31: warning: use location
  179 |                         stage = tab[-1] - '0';
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
stage_45 = PHI <stage_25(14), 0(15)>
lto1: warning: use location
this stmt have mutiple branch ---strchr-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = add_cacheinfo (mode_15, &sha1, path_name_37, stage_45);
./benchmarks/git/double_free_2/git_df_2.c:217:29: warning: use location
  217 |                         if (add_cacheinfo(mode, sha1, path_name, stage))
      |                             ^
this stmt call this function :add_cacheinfo
trace fucntion name:add_cacheinfo 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_46 != 0)
./benchmarks/git/double_free_2/git_df_2.c:217:28: warning: use location
  217 |                         if (add_cacheinfo(mode, sha1, path_name, stage))
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (mode_15 == 0)
./benchmarks/git/double_free_2/git_df_2.c:205:20: warning: use location
  205 |                 if (!mode) {
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:222:25: warning: use location
  222 |                         free(path_name);
      |                         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:222:25: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
printf ("git-update-index: unable to update %s", path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:218:33: warning: use location
  218 |                                 die("git-update-index: unable to update %s",
      |                                 ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_40 = remove_file_from_cache (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:207:29: warning: use location
  207 |                         if (remove_file_from_cache(path_name))
      |                             ^
this stmt call this function :remove_file_from_cache
trace fucntion name:remove_file_from_cache 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
fprintf (_39, "Ignoring path %s\n", path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:201:25: warning: use location
  201 |                         fprintf(stderr, "Ignoring path %s\n", path_name);
      |                         ^
this stmt call this function :fprintf
trace fucntion name:fprintf 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = verify_path (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:200:22: warning: use location
  200 |                 if (!verify_path(path_name)) {
      |                      ^
this stmt call this function :verify_path
trace fucntion name:verify_path 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (path_name_37 != _47)
./benchmarks/git/double_free_2/git_df_2.c:221:20: warning: use location
  221 |                 if (path_name != ptr)
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = MEM[(char *)tab_17 + -1B];
./benchmarks/git/double_free_2/git_df_2.c:178:60: warning: use location
  178 |                 if (tab[-2] == ' ' && '0' <= tab[-1] && tab[-1] <= '3') {
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_22 <= 51)
./benchmarks/git/double_free_2/git_df_2.c:178:54: warning: use location
  178 |                 if (tab[-2] == ' ' && '0' <= tab[-1] && tab[-1] <= '3') {
      |                                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = MEM[(char *)tab_17 + -1B];
./benchmarks/git/double_free_2/git_df_2.c:178:49: warning: use location
  178 |                 if (tab[-2] == ' ' && '0' <= tab[-1] && tab[-1] <= '3') {
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_21 > 47)
./benchmarks/git/double_free_2/git_df_2.c:178:36: warning: use location
  178 |                 if (tab[-2] == ' ' && '0' <= tab[-1] && tab[-1] <= '3') {
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = MEM[(char *)tab_17 + -2B];
./benchmarks/git/double_free_2/git_df_2.c:178:24: warning: use location
  178 |                 if (tab[-2] == ' ' && '0' <= tab[-1] && tab[-1] <= '3') {
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_20 == 32)
./benchmarks/git/double_free_2/git_df_2.c:178:20: warning: use location
  178 |                 if (tab[-2] == ' ' && '0' <= tab[-1] && tab[-1] <= '3') {
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tab_29 = PHI <tab_27(14), tab_17(15)>
lto1: warning: use location
this stmt have mutiple branch ---verify_path-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_32 = MEM[(char *)tab_29 + -41B];
./benchmarks/git/double_free_2/git_df_2.c:188:56: warning: use location
  188 |                 if (get_sha1_hex(tab - 40, sha1) || tab[-41] != ' ')
      |                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_30 = tab_29 + 18446744073709551576;
./benchmarks/git/double_free_2/git_df_2.c:188:21: warning: use location
  188 |                 if (get_sha1_hex(tab - 40, sha1) || tab[-41] != ' ')
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_31 = get_sha1_hex (_30, &sha1);
./benchmarks/git/double_free_2/git_df_2.c:188:21: warning: use location
this stmt call this function :get_sha1_hex
trace fucntion name:get_sha1_hex 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_28 = tab_17 + 1;
./benchmarks/git/double_free_2/git_df_2.c:185:35: warning: use location
  185 |                         ptr = tab + 1; /* point at the head of path */
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
tab_27 = tab_17 + 18446744073709551614;
./benchmarks/git/double_free_2/git_df_2.c:181:29: warning: use location
  181 |                         tab = tab - 2; /* point at tail of sha1 */
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ptr_163 = _26;
./benchmarks/git/double_free_2/git_df_2.c:180:29: warning: use location
  180 |                         ptr = tab + 1; /* point at the head of path */
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ptr_161 = PHI <ptr_163(14), ptr_164(15)>
lto1: warning: use location
this stmt have mutiple branch ---get_sha1_hex-----
_41 = ptr_161;
./benchmarks/git/double_free_2/git_df_2.c:208:33: warning: use location
  208 |                                 die("git-update-index: unable to remove %s",
      |                                 ^
printf ("git-update-index: unable to remove %s", _41);
./benchmarks/git/double_free_2/git_df_2.c:208:33: warning: use location
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
MEM[(char *)_43 + -42B] = _44;
./benchmarks/git/double_free_2/git_df_2.c:216:34: warning: use location
  216 |                         ptr[-42] = ptr[-1] = 0;
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
MEM[(char *)_43 + -42B] = _44;
./benchmarks/git/double_free_2/git_df_2.c:216:34: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = ptr_161;
./benchmarks/git/double_free_2/git_df_2.c:216:39: warning: use location
  216 |                         ptr[-42] = ptr[-1] = 0;
      |                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
MEM[(char *)_42 + -1B] = 0;
./benchmarks/git/double_free_2/git_df_2.c:216:44: warning: use location
  216 |                         ptr[-42] = ptr[-1] = 0;
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
path_name_33 = ptr_161;
./benchmarks/git/double_free_2/git_df_2.c:191:27: warning: use location
  191 |                 path_name = ptr;
      |                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_56 = MEM[(const char *)path_name_33];
./benchmarks/git/double_free_2/git_df_2.c:83:13: warning: use location
   83 |         if (*quoted++ != '"')
      |             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_56 != 34)
./benchmarks/git/double_free_2/git_df_2.c:83:12: warning: use location
   83 |         if (*quoted++ != '"')
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_34 = *path_name_33;
./benchmarks/git/double_free_2/git_df_2.c:192:50: warning: use location
  192 |                 if (line_termination && path_name[0] == '"') {
      |                                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_34 == 34)
./benchmarks/git/double_free_2/git_df_2.c:192:38: warning: use location
  192 |                 if (line_termination && path_name[0] == '"') {
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
quoted_55 = path_name_33 + 1;
./benchmarks/git/double_free_2/git_df_2.c:83:20: warning: use location
   83 |         if (*quoted++ != '"')
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
quoted_57 = PHI <quoted_55(23), quoted_79(42)>
lto1: warning: use location
this stmt have mutiple branch ---printf-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
memcpy (_83, quoted_57, len_58);
./benchmarks/git/double_free_2/git_df_2.c:35:9: warning: use location
   35 |         memcpy(sb->buf + sb->len, data, len);
      |         ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
len_58 = strcspn (quoted_57, "\"\\");
./benchmarks/git/double_free_2/git_df_2.c:87:23: warning: use location
   87 |                 len = strcspn(quoted, "\"\\");
      |                       ^
this stmt call this function :strcspn
trace fucntion name:strcspn 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: use location
   34 |         strbuf_grow(sb, len);
      |         ^
this stmt call this function :strbuf_grow
trace fucntion name:strbuf_grow 
[40;44m =======trace_function_path strbuf_grow  function_call count: 5 level :0========  [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
[40;31m  find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
[40;31m  find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:alloc_nr========= [0m
[40;46m =======add node_fun stack:alloc_nr========= [0m

 ================== trace ================== 
trace fucntion free:5 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_85 = len_58 + _84;
./benchmarks/git/double_free_2/git_df_2.c:36:9: warning: use location
   36 |         strbuf_setlen(sb, sb->len + len);
      |         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strbuf_setlen (&uq, _85);
./benchmarks/git/double_free_2/git_df_2.c:36:9: warning: use location
this stmt call this function :strbuf_setlen
trace fucntion name:strbuf_setlen 

 ================== trace ================== 
trace fucntion free:5 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
quoted_59 = quoted_57 + len_58;
./benchmarks/git/double_free_2/git_df_2.c:89:24: warning: use location
   89 |                 quoted += len;
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = MEM[(const char *)quoted_59 + 3B];
./benchmarks/git/double_free_2/git_df_2.c:120:35: warning: use location
  120 |                         if ((ch = *quoted++) < '0' || '7' < ch)
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ch_74 = (int) _73;
./benchmarks/git/double_free_2/git_df_2.c:120:33: warning: use location
  120 |                         if ((ch = *quoted++) < '0' || '7' < ch)
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ac_76 = ac_71 | _75;
./benchmarks/git/double_free_2/git_df_2.c:122:44: warning: use location
  122 |                                         ac |= (ch - '0');
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ch_77 = PHI <ch_64(26), 7(27), 8(28), 12(29), 10(30), 13(31), 9(32), 11(33), ac_76(40)>
lto1: warning: use location
this stmt have mutiple branch ---strbuf_setlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strbuf_addch (&uq, ch_77);
./benchmarks/git/double_free_2/git_df_2.c:128:17: warning: use location
  128 |                 strbuf_addch(sb, ch);
      |                 ^
this stmt call this function :strbuf_addch
trace fucntion name:strbuf_addch 

 ================== trace ================== 
trace fucntion free:5 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (ch_74 > 55)
./benchmarks/git/double_free_2/git_df_2.c:120:52: warning: use location
  120 |                         if ((ch = *quoted++) < '0' || '7' < ch)
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (ch_74 <= 47)
./benchmarks/git/double_free_2/git_df_2.c:120:28: warning: use location
  120 |                         if ((ch = *quoted++) < '0' || '7' < ch)
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_67 = MEM[(const char *)quoted_59 + 2B];
./benchmarks/git/double_free_2/git_df_2.c:117:35: warning: use location
  117 |                         if ((ch = *quoted++) < '0' || '7' < ch)
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ch_68 = (int) _67;
./benchmarks/git/double_free_2/git_df_2.c:117:33: warning: use location
  117 |                         if ((ch = *quoted++) < '0' || '7' < ch)
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_69 = ch_68 + -48;
./benchmarks/git/double_free_2/git_df_2.c:119:52: warning: use location
  119 |                                         ac |= ((ch - '0') << 3);
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = _69 << 3;
./benchmarks/git/double_free_2/git_df_2.c:119:59: warning: use location
  119 |                                         ac |= ((ch - '0') << 3);
      |                                                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ac_71 = ac_66 | _70;
./benchmarks/git/double_free_2/git_df_2.c:119:44: warning: use location
  119 |                                         ac |= ((ch - '0') << 3);
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = MEM[(const char *)quoted_59 + 1B];
./benchmarks/git/double_free_2/git_df_2.c:102:31: warning: use location
  102 |                 switch ((ch = *quoted++)) {
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
quoted_62 = &MEM <const char> [(void *)quoted_59 + 2B];
./benchmarks/git/double_free_2/git_df_2.c:102:38: warning: use location
  102 |                 switch ((ch = *quoted++)) {
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
quoted_79 = PHI <quoted_62(26), quoted_62(27), quoted_62(28), quoted_62(29), quoted_62(30), quoted_62(31), quoted_62(32), quoted_62(33), quoted_72(40)>
lto1: warning: use location
this stmt have mutiple branch ---strbuf_addch-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (tab_17 == 0B)
./benchmarks/git/double_free_2/git_df_2.c:175:20: warning: use location
  175 |                 if (!tab || tab - ptr < 41)
      |                    ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff99403e828
    type <pointer_type 0x7ff99401adc8
        type <integer_type 0x7ff99401ad20 char public QI
            size <integer_cst 0x7ff994502ca8 constant 8>
            unit-size <integer_cst 0x7ff994502cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff9945173f0 precision:8 min <integer_cst 0x7ff994011720 -128> max <integer_cst 0x7ff994011708 127>
            pointer_to_this <pointer_type 0x7ff99401adc8>>
        public unsigned DI
        size <integer_cst 0x7ff994502bb8 constant 64>
        unit-size <integer_cst 0x7ff994502bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7ff99450d168 ./benchmarks/git/double_free_2/git_df_2.c>
        pointer_to_this <pointer_type 0x7ff99401ae70>>
   
    def_stmt _16 = ptr_162;
    version:16
    ptr-info 0x7ff994032cf0>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_155 = VDEF <.MEM_103>
free (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:222:25: warning: use location
  222 |                         free(path_name);
      |                         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_125 = VDEF <.MEM_112>
free (_100);
./benchmarks/git/double_free_2/git_df_2.c:15:5: warning: use location
   15 |     free(sb->buf);
      |     ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_127 = VDEF <.MEM_126>
free (_99);
./benchmarks/git/double_free_2/git_df_2.c:15:5: warning: use location
   15 |     free(sb->buf);
      |     ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_155 = VDEF <.MEM_103>
free (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:222:25: warning: free in this location
  222 |                         free(path_name);
      |                         ^
[40;35m target gimple type: ssa_name [0m
stage_45 = PHI <stage_25(14), 0(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: ssa_name [0m
stage_45 = PHI <stage_25(14), 0(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_155 = VDEF <.MEM_103>
free (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:222:25: warning: free in this location
  222 |                         free(path_name);
      |                         ^
[40;35m target gimple type: ssa_name [0m
stage_45 = PHI <stage_25(14), 0(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_125 = VDEF <.MEM_112>
free (_100);
./benchmarks/git/double_free_2/git_df_2.c:15:5: warning: free in this location
   15 |     free(sb->buf);
      |     ^
[40;35m target gimple type: ssa_name [0m
stage_45 = PHI <stage_25(14), 0(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_127 = VDEF <.MEM_126>
free (_99);
./benchmarks/git/double_free_2/git_df_2.c:15:5: warning: free in this location
   15 |     free(sb->buf);
      |     ^
[40;35m target gimple type: ssa_name [0m
stage_45 = PHI <stage_25(14), 0(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: ssa_name [0m
# .MEM_149 = VDEF <.MEM_148>
_46 = add_cacheinfo (mode_15, &sha1, path_name_37, stage_45);
./benchmarks/git/double_free_2/git_df_2.c:217:29: warning: use location
  217 |                         if (add_cacheinfo(mode, sha1, path_name, stage))
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: ssa_name [0m
if (_46 != 0)
./benchmarks/git/double_free_2/git_df_2.c:217:28: warning: use location
  217 |                         if (add_cacheinfo(mode, sha1, path_name, stage))
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: ssa_name [0m
if (mode_15 == 0)
./benchmarks/git/double_free_2/git_df_2.c:205:20: warning: use location
  205 |                 if (!mode) {
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: addr_expr [0m
# .MEM_155 = VDEF <.MEM_103>
free (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:222:25: warning: use location
  222 |                         free(path_name);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: addr_expr [0m
# .MEM_150 = VDEF <.MEM_149>
printf ("git-update-index: unable to update %s", path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:218:33: warning: use location
  218 |                                 die("git-update-index: unable to update %s",
      |                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: ssa_name [0m
# .MEM_152 = VDEF <.MEM_146>
_40 = remove_file_from_cache (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:207:29: warning: use location
  207 |                         if (remove_file_from_cache(path_name))
      |                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: addr_expr [0m
# .MEM_156 = VDEF <.MEM_146>
fprintf (_39, "Ignoring path %s\n", path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:201:25: warning: use location
  201 |                         fprintf(stderr, "Ignoring path %s\n", path_name);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: ssa_name [0m
# .MEM_146 = VDEF <.MEM_102>
_38 = verify_path (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:200:22: warning: use location
  200 |                 if (!verify_path(path_name)) {
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: ssa_name [0m
if (path_name_37 != _47)
./benchmarks/git/double_free_2/git_df_2.c:221:20: warning: use location
  221 |                 if (path_name != ptr)
      |                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_155 = VDEF <.MEM_103>
free (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:222:25: warning: free in this location
  222 |                         free(path_name);
      |                         ^
[40;35m target gimple type: ssa_name [0m
tab_29 = PHI <tab_27(14), tab_17(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: ssa_name [0m
tab_29 = PHI <tab_27(14), tab_17(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_155 = VDEF <.MEM_103>
free (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:222:25: warning: free in this location
  222 |                         free(path_name);
      |                         ^
[40;35m target gimple type: ssa_name [0m
tab_29 = PHI <tab_27(14), tab_17(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_125 = VDEF <.MEM_112>
free (_100);
./benchmarks/git/double_free_2/git_df_2.c:15:5: warning: free in this location
   15 |     free(sb->buf);
      |     ^
[40;35m target gimple type: ssa_name [0m
tab_29 = PHI <tab_27(14), tab_17(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_127 = VDEF <.MEM_126>
free (_99);
./benchmarks/git/double_free_2/git_df_2.c:15:5: warning: free in this location
   15 |     free(sb->buf);
      |     ^
[40;35m target gimple type: ssa_name [0m
tab_29 = PHI <tab_27(14), tab_17(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_155 = VDEF <.MEM_103>
free (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:222:25: warning: free in this location
  222 |                         free(path_name);
      |                         ^
[40;35m target gimple type: ssa_name [0m
ptr_161 = PHI <ptr_163(14), ptr_164(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: ssa_name [0m
ptr_161 = PHI <ptr_163(14), ptr_164(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_155 = VDEF <.MEM_103>
free (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:222:25: warning: free in this location
  222 |                         free(path_name);
      |                         ^
[40;35m target gimple type: ssa_name [0m
ptr_161 = PHI <ptr_163(14), ptr_164(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_125 = VDEF <.MEM_112>
free (_100);
./benchmarks/git/double_free_2/git_df_2.c:15:5: warning: free in this location
   15 |     free(sb->buf);
      |     ^
[40;35m target gimple type: ssa_name [0m
ptr_161 = PHI <ptr_163(14), ptr_164(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_127 = VDEF <.MEM_126>
free (_99);
./benchmarks/git/double_free_2/git_df_2.c:15:5: warning: free in this location
   15 |     free(sb->buf);
      |     ^
[40;35m target gimple type: ssa_name [0m
ptr_161 = PHI <ptr_163(14), ptr_164(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: ssa_name [0m
_41 = ptr_161;
./benchmarks/git/double_free_2/git_df_2.c:208:33: warning: use location
  208 |                                 die("git-update-index: unable to remove %s",
      |                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: addr_expr [0m
# .MEM_153 = VDEF <.MEM_152>
printf ("git-update-index: unable to remove %s", _41);
./benchmarks/git/double_free_2/git_df_2.c:208:33: warning: use location
  208 |                                 die("git-update-index: unable to remove %s",
      |                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: ssa_name [0m
# .MEM_148 = VDEF <.MEM_147>
MEM[(char *)_43 + -42B] = _44;
./benchmarks/git/double_free_2/git_df_2.c:216:34: warning: use location
  216 |                         ptr[-42] = ptr[-1] = 0;
      |                                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: mem_ref [0m
# .MEM_148 = VDEF <.MEM_147>
MEM[(char *)_43 + -42B] = _44;
./benchmarks/git/double_free_2/git_df_2.c:216:34: warning: use location
  216 |                         ptr[-42] = ptr[-1] = 0;
      |                                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: ssa_name [0m
_42 = ptr_161;
./benchmarks/git/double_free_2/git_df_2.c:216:39: warning: use location
  216 |                         ptr[-42] = ptr[-1] = 0;
      |                                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: mem_ref [0m
# .MEM_147 = VDEF <.MEM_146>
MEM[(char *)_42 + -1B] = 0;
./benchmarks/git/double_free_2/git_df_2.c:216:44: warning: use location
  216 |                         ptr[-42] = ptr[-1] = 0;
      |                                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_155 = VDEF <.MEM_103>
free (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:222:25: warning: free in this location
  222 |                         free(path_name);
      |                         ^
[40;35m target gimple type: ssa_name [0m
quoted_57 = PHI <quoted_55(23), quoted_79(42)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: ssa_name [0m
quoted_57 = PHI <quoted_55(23), quoted_79(42)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_155 = VDEF <.MEM_103>
free (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:222:25: warning: free in this location
  222 |                         free(path_name);
      |                         ^
[40;35m target gimple type: ssa_name [0m
quoted_57 = PHI <quoted_55(23), quoted_79(42)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_125 = VDEF <.MEM_112>
free (_100);
./benchmarks/git/double_free_2/git_df_2.c:15:5: warning: free in this location
   15 |     free(sb->buf);
      |     ^
[40;35m target gimple type: ssa_name [0m
quoted_57 = PHI <quoted_55(23), quoted_79(42)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_127 = VDEF <.MEM_126>
free (_99);
./benchmarks/git/double_free_2/git_df_2.c:15:5: warning: free in this location
   15 |     free(sb->buf);
      |     ^
[40;35m target gimple type: ssa_name [0m
quoted_57 = PHI <quoted_55(23), quoted_79(42)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: addr_expr [0m
# .MEM_139 = VDEF <.MEM_138>
memcpy (_83, quoted_57, len_58);
./benchmarks/git/double_free_2/git_df_2.c:35:9: warning: use location
   35 |         memcpy(sb->buf + sb->len, data, len);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: ssa_name [0m
_85 = len_58 + _84;
./benchmarks/git/double_free_2/git_df_2.c:36:9: warning: use location
   36 |         strbuf_setlen(sb, sb->len + len);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: addr_expr [0m
# .MEM_140 = VDEF <.MEM_139>
strbuf_setlen (&uq, _85);
./benchmarks/git/double_free_2/git_df_2.c:36:9: warning: use location
   36 |         strbuf_setlen(sb, sb->len + len);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: ssa_name [0m
quoted_59 = quoted_57 + len_58;
./benchmarks/git/double_free_2/git_df_2.c:89:24: warning: use location
   89 |                 quoted += len;
      |                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_140>
_73 = MEM[(const char *)quoted_59 + 3B];
./benchmarks/git/double_free_2/git_df_2.c:120:35: warning: use location
  120 |                         if ((ch = *quoted++) < '0' || '7' < ch)
      |                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: ssa_name [0m
ch_74 = (int) _73;
./benchmarks/git/double_free_2/git_df_2.c:120:33: warning: use location
  120 |                         if ((ch = *quoted++) < '0' || '7' < ch)
      |                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: ssa_name [0m
ac_76 = ac_71 | _75;
./benchmarks/git/double_free_2/git_df_2.c:122:44: warning: use location
  122 |                                         ac |= (ch - '0');
      |                                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_155 = VDEF <.MEM_103>
free (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:222:25: warning: free in this location
  222 |                         free(path_name);
      |                         ^
[40;35m target gimple type: ssa_name [0m
ch_77 = PHI <ch_64(26), 7(27), 8(28), 12(29), 10(30), 13(31), 9(32), 11(33), ac_76(40)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: ssa_name [0m
ch_77 = PHI <ch_64(26), 7(27), 8(28), 12(29), 10(30), 13(31), 9(32), 11(33), ac_76(40)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_155 = VDEF <.MEM_103>
free (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:222:25: warning: free in this location
  222 |                         free(path_name);
      |                         ^
[40;35m target gimple type: ssa_name [0m
ch_77 = PHI <ch_64(26), 7(27), 8(28), 12(29), 10(30), 13(31), 9(32), 11(33), ac_76(40)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_125 = VDEF <.MEM_112>
free (_100);
./benchmarks/git/double_free_2/git_df_2.c:15:5: warning: free in this location
   15 |     free(sb->buf);
      |     ^
[40;35m target gimple type: ssa_name [0m
ch_77 = PHI <ch_64(26), 7(27), 8(28), 12(29), 10(30), 13(31), 9(32), 11(33), ac_76(40)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_127 = VDEF <.MEM_126>
free (_99);
./benchmarks/git/double_free_2/git_df_2.c:15:5: warning: free in this location
   15 |     free(sb->buf);
      |     ^
[40;35m target gimple type: ssa_name [0m
ch_77 = PHI <ch_64(26), 7(27), 8(28), 12(29), 10(30), 13(31), 9(32), 11(33), ac_76(40)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: addr_expr [0m
# .MEM_141 = VDEF <.MEM_140>
strbuf_addch (&uq, ch_77);
./benchmarks/git/double_free_2/git_df_2.c:128:17: warning: use location
  128 |                 strbuf_addch(sb, ch);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: ssa_name [0m
if (ch_74 > 55)
./benchmarks/git/double_free_2/git_df_2.c:120:52: warning: use location
  120 |                         if ((ch = *quoted++) < '0' || '7' < ch)
      |                                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: ssa_name [0m
if (ch_74 <= 47)
./benchmarks/git/double_free_2/git_df_2.c:120:28: warning: use location
  120 |                         if ((ch = *quoted++) < '0' || '7' < ch)
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_140>
_67 = MEM[(const char *)quoted_59 + 2B];
./benchmarks/git/double_free_2/git_df_2.c:117:35: warning: use location
  117 |                         if ((ch = *quoted++) < '0' || '7' < ch)
      |                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: ssa_name [0m
ch_68 = (int) _67;
./benchmarks/git/double_free_2/git_df_2.c:117:33: warning: use location
  117 |                         if ((ch = *quoted++) < '0' || '7' < ch)
      |                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: ssa_name [0m
_69 = ch_68 + -48;
./benchmarks/git/double_free_2/git_df_2.c:119:52: warning: use location
  119 |                                         ac |= ((ch - '0') << 3);
      |                                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: ssa_name [0m
_70 = _69 << 3;
./benchmarks/git/double_free_2/git_df_2.c:119:59: warning: use location
  119 |                                         ac |= ((ch - '0') << 3);
      |                                                           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: ssa_name [0m
ac_71 = ac_66 | _70;
./benchmarks/git/double_free_2/git_df_2.c:119:44: warning: use location
  119 |                                         ac |= ((ch - '0') << 3);
      |                                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_140>
_63 = MEM[(const char *)quoted_59 + 1B];
./benchmarks/git/double_free_2/git_df_2.c:102:31: warning: use location
  102 |                 switch ((ch = *quoted++)) {
      |                               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: ssa_name [0m
quoted_62 = &MEM <const char> [(void *)quoted_59 + 2B];
./benchmarks/git/double_free_2/git_df_2.c:102:38: warning: use location
  102 |                 switch ((ch = *quoted++)) {
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_155 = VDEF <.MEM_103>
free (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:222:25: warning: free in this location
  222 |                         free(path_name);
      |                         ^
[40;35m target gimple type: ssa_name [0m
quoted_79 = PHI <quoted_62(26), quoted_62(27), quoted_62(28), quoted_62(29), quoted_62(30), quoted_62(31), quoted_62(32), quoted_62(33), quoted_72(40)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: ssa_name [0m
quoted_79 = PHI <quoted_62(26), quoted_62(27), quoted_62(28), quoted_62(29), quoted_62(30), quoted_62(31), quoted_62(32), quoted_62(33), quoted_72(40)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_155 = VDEF <.MEM_103>
free (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:222:25: warning: free in this location
  222 |                         free(path_name);
      |                         ^
[40;35m target gimple type: ssa_name [0m
quoted_79 = PHI <quoted_62(26), quoted_62(27), quoted_62(28), quoted_62(29), quoted_62(30), quoted_62(31), quoted_62(32), quoted_62(33), quoted_72(40)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_125 = VDEF <.MEM_112>
free (_100);
./benchmarks/git/double_free_2/git_df_2.c:15:5: warning: free in this location
   15 |     free(sb->buf);
      |     ^
[40;35m target gimple type: ssa_name [0m
quoted_79 = PHI <quoted_62(26), quoted_62(27), quoted_62(28), quoted_62(29), quoted_62(30), quoted_62(31), quoted_62(32), quoted_62(33), quoted_72(40)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_127 = VDEF <.MEM_126>
free (_99);
./benchmarks/git/double_free_2/git_df_2.c:15:5: warning: free in this location
   15 |     free(sb->buf);
      |     ^
[40;35m target gimple type: ssa_name [0m
quoted_79 = PHI <quoted_62(26), quoted_62(27), quoted_62(28), quoted_62(29), quoted_62(30), quoted_62(31), quoted_62(32), quoted_62(33), quoted_72(40)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:5 [0m
[40;31m  	possible double free [Looserules]:3 [0m
[40;31m  	possible double free [rigorous]:5 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff99403ec18
    type <pointer_type 0x7ff99401adc8
        type <integer_type 0x7ff99401ad20 char public QI
            size <integer_cst 0x7ff994502ca8 constant 8>
            unit-size <integer_cst 0x7ff994502cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff9945173f0 precision:8 min <integer_cst 0x7ff994011720 -128> max <integer_cst 0x7ff994011708 127>
            pointer_to_this <pointer_type 0x7ff99401adc8>>
        public unsigned DI
        size <integer_cst 0x7ff994502bb8 constant 64>
        unit-size <integer_cst 0x7ff994502bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7ff99450d168 ./benchmarks/git/double_free_2/git_df_2.c>
        pointer_to_this <pointer_type 0x7ff99401ae70>>
   
    def_stmt _30 = tab_29 + 18446744073709551576;
    version:30
    ptr-info 0x7ff994032d98>
_30 = tab_29 + 18446744073709551576;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_136 = VDEF <.MEM_101>
_31 = get_sha1_hex (_30, &sha1);
_31 = get_sha1_hex (_30, &sha1);
./benchmarks/git/double_free_2/git_df_2.c:188:21: warning: use location
  188 |                 if (get_sha1_hex(tab - 40, sha1) || tab[-41] != ' ')
      |                     ^
this stmt call this function :get_sha1_hex
trace fucntion name:get_sha1_hex 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_31 != 0)
./benchmarks/git/double_free_2/git_df_2.c:188:20: warning: use location
  188 |                 if (get_sha1_hex(tab - 40, sha1) || tab[-41] != ' ')
      |                    ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff99403ec18
    type <pointer_type 0x7ff99401adc8
        type <integer_type 0x7ff99401ad20 char public QI
            size <integer_cst 0x7ff994502ca8 constant 8>
            unit-size <integer_cst 0x7ff994502cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff9945173f0 precision:8 min <integer_cst 0x7ff994011720 -128> max <integer_cst 0x7ff994011708 127>
            pointer_to_this <pointer_type 0x7ff99401adc8>>
        public unsigned DI
        size <integer_cst 0x7ff994502bb8 constant 64>
        unit-size <integer_cst 0x7ff994502bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7ff99450d168 ./benchmarks/git/double_free_2/git_df_2.c>
        pointer_to_this <pointer_type 0x7ff99401ae70>>
   
    def_stmt _30 = tab_29 + 18446744073709551576;
    version:30
    ptr-info 0x7ff994032d98>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_155 = VDEF <.MEM_103>
free (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:222:25: warning: use location
  222 |                         free(path_name);
      |                         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_125 = VDEF <.MEM_112>
free (_100);
./benchmarks/git/double_free_2/git_df_2.c:15:5: warning: use location
   15 |     free(sb->buf);
      |     ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_127 = VDEF <.MEM_126>
free (_99);
./benchmarks/git/double_free_2/git_df_2.c:15:5: warning: use location
   15 |     free(sb->buf);
      |     ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff994046dc8
    type <pointer_type 0x7ff99401a498
        type <integer_type 0x7ff99401a348 char readonly public QI
            size <integer_cst 0x7ff994502ca8 constant 8>
            unit-size <integer_cst 0x7ff994502cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff9945173f0 precision:8 min <integer_cst 0x7ff994011720 -128> max <integer_cst 0x7ff994011708 127>
            pointer_to_this <pointer_type 0x7ff99401a498>>
        public unsigned DI
        size <integer_cst 0x7ff994502bb8 constant 64>
        unit-size <integer_cst 0x7ff994502bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff994021dc8>>
    var <var_decl 0x7ff994049990 quoted>
    def_stmt quoted_57 = PHI <quoted_55(23), quoted_79(42)>
    version:57
    ptr-info 0x7ff994032ed0>
quoted_57 = PHI <quoted_55(23), quoted_79(42)>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
memcpy (_83, quoted_57, len_58);
./benchmarks/git/double_free_2/git_df_2.c:35:9: warning: use location
   35 |         memcpy(sb->buf + sb->len, data, len);
      |         ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_108>
len_58 = strcspn (quoted_57, "\"\\");
len_58 = strcspn (quoted_57, "\"\\");
./benchmarks/git/double_free_2/git_df_2.c:87:23: warning: use location
   87 |                 len = strcspn(quoted, "\"\\");
      |                       ^
this stmt call this function :strcspn
trace fucntion name:strcspn 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: use location
   34 |         strbuf_grow(sb, len);
      |         ^
this stmt call this function :strbuf_grow
trace fucntion name:strbuf_grow 
[40;44m =======trace_function_path strbuf_grow  function_call count: 5 level :0========  [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
[40;31m  find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
[40;31m  find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
[40;31m  find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;46m =======add node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:alloc_nr========= [0m
[40;46m =======add node_fun stack:alloc_nr========= [0m

 ================== trace ================== 
trace fucntion free:4 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_85 = len_58 + _84;
./benchmarks/git/double_free_2/git_df_2.c:36:9: warning: use location
   36 |         strbuf_setlen(sb, sb->len + len);
      |         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strbuf_setlen (&uq, _85);
./benchmarks/git/double_free_2/git_df_2.c:36:9: warning: use location
this stmt call this function :strbuf_setlen
trace fucntion name:strbuf_setlen 

 ================== trace ================== 
trace fucntion free:4 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
quoted_59 = quoted_57 + len_58;
./benchmarks/git/double_free_2/git_df_2.c:89:24: warning: use location
   89 |                 quoted += len;
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = MEM[(const char *)quoted_59 + 3B];
./benchmarks/git/double_free_2/git_df_2.c:120:35: warning: use location
  120 |                         if ((ch = *quoted++) < '0' || '7' < ch)
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ch_74 = (int) _73;
./benchmarks/git/double_free_2/git_df_2.c:120:33: warning: use location
  120 |                         if ((ch = *quoted++) < '0' || '7' < ch)
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ac_76 = ac_71 | _75;
./benchmarks/git/double_free_2/git_df_2.c:122:44: warning: use location
  122 |                                         ac |= (ch - '0');
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ch_77 = PHI <ch_64(26), 7(27), 8(28), 12(29), 10(30), 13(31), 9(32), 11(33), ac_76(40)>
lto1: warning: use location
this stmt have mutiple branch ---strbuf_setlen-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
strbuf_addch (&uq, ch_77);
./benchmarks/git/double_free_2/git_df_2.c:128:17: warning: use location
  128 |                 strbuf_addch(sb, ch);
      |                 ^
this stmt call this function :strbuf_addch
trace fucntion name:strbuf_addch 

 ================== trace ================== 
trace fucntion free:4 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (ch_74 > 55)
./benchmarks/git/double_free_2/git_df_2.c:120:52: warning: use location
  120 |                         if ((ch = *quoted++) < '0' || '7' < ch)
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (ch_74 <= 47)
./benchmarks/git/double_free_2/git_df_2.c:120:28: warning: use location
  120 |                         if ((ch = *quoted++) < '0' || '7' < ch)
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_67 = MEM[(const char *)quoted_59 + 2B];
./benchmarks/git/double_free_2/git_df_2.c:117:35: warning: use location
  117 |                         if ((ch = *quoted++) < '0' || '7' < ch)
      |                                   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ch_68 = (int) _67;
./benchmarks/git/double_free_2/git_df_2.c:117:33: warning: use location
  117 |                         if ((ch = *quoted++) < '0' || '7' < ch)
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_69 = ch_68 + -48;
./benchmarks/git/double_free_2/git_df_2.c:119:52: warning: use location
  119 |                                         ac |= ((ch - '0') << 3);
      |                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_70 = _69 << 3;
./benchmarks/git/double_free_2/git_df_2.c:119:59: warning: use location
  119 |                                         ac |= ((ch - '0') << 3);
      |                                                           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ac_71 = ac_66 | _70;
./benchmarks/git/double_free_2/git_df_2.c:119:44: warning: use location
  119 |                                         ac |= ((ch - '0') << 3);
      |                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = MEM[(const char *)quoted_59 + 1B];
./benchmarks/git/double_free_2/git_df_2.c:102:31: warning: use location
  102 |                 switch ((ch = *quoted++)) {
      |                               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = *quoted_59;
./benchmarks/git/double_free_2/git_df_2.c:91:25: warning: use location
   91 |                 switch (*quoted++) {
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
quoted_62 = &MEM <const char> [(void *)quoted_59 + 2B];
./benchmarks/git/double_free_2/git_df_2.c:102:38: warning: use location
  102 |                 switch ((ch = *quoted++)) {
      |                                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
quoted_79 = PHI <quoted_62(26), quoted_62(27), quoted_62(28), quoted_62(29), quoted_62(30), quoted_62(31), quoted_62(32), quoted_62(33), quoted_72(40)>
lto1: warning: use location
this stmt have mutiple branch ---strbuf_addch-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
quoted_57 = PHI <quoted_55(23), quoted_79(42)>
lto1: warning: use location
this stmt have mutiple branch ---strbuf_addch-----

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff994046dc8
    type <pointer_type 0x7ff99401a498
        type <integer_type 0x7ff99401a348 char readonly public QI
            size <integer_cst 0x7ff994502ca8 constant 8>
            unit-size <integer_cst 0x7ff994502cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff9945173f0 precision:8 min <integer_cst 0x7ff994011720 -128> max <integer_cst 0x7ff994011708 127>
            pointer_to_this <pointer_type 0x7ff99401a498>>
        public unsigned DI
        size <integer_cst 0x7ff994502bb8 constant 64>
        unit-size <integer_cst 0x7ff994502bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff994021dc8>>
    var <var_decl 0x7ff994049990 quoted>
    def_stmt quoted_57 = PHI <quoted_55(23), quoted_79(42)>
    version:57
    ptr-info 0x7ff994032ed0>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_155 = VDEF <.MEM_103>
free (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:222:25: warning: use location
  222 |                         free(path_name);
      |                         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_125 = VDEF <.MEM_112>
free (_100);
./benchmarks/git/double_free_2/git_df_2.c:15:5: warning: use location
   15 |     free(sb->buf);
      |     ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_127 = VDEF <.MEM_126>
free (_99);
./benchmarks/git/double_free_2/git_df_2.c:15:5: warning: use location
   15 |     free(sb->buf);
      |     ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: addr_expr [0m
# .MEM_139 = VDEF <.MEM_138>
memcpy (_83, quoted_57, len_58);
./benchmarks/git/double_free_2/git_df_2.c:35:9: warning: use location
   35 |         memcpy(sb->buf + sb->len, data, len);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: ssa_name [0m
_85 = len_58 + _84;
./benchmarks/git/double_free_2/git_df_2.c:36:9: warning: use location
   36 |         strbuf_setlen(sb, sb->len + len);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: addr_expr [0m
# .MEM_140 = VDEF <.MEM_139>
strbuf_setlen (&uq, _85);
./benchmarks/git/double_free_2/git_df_2.c:36:9: warning: use location
   36 |         strbuf_setlen(sb, sb->len + len);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: ssa_name [0m
quoted_59 = quoted_57 + len_58;
./benchmarks/git/double_free_2/git_df_2.c:89:24: warning: use location
   89 |                 quoted += len;
      |                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_140>
_73 = MEM[(const char *)quoted_59 + 3B];
./benchmarks/git/double_free_2/git_df_2.c:120:35: warning: use location
  120 |                         if ((ch = *quoted++) < '0' || '7' < ch)
      |                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: ssa_name [0m
ch_74 = (int) _73;
./benchmarks/git/double_free_2/git_df_2.c:120:33: warning: use location
  120 |                         if ((ch = *quoted++) < '0' || '7' < ch)
      |                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: ssa_name [0m
ac_76 = ac_71 | _75;
./benchmarks/git/double_free_2/git_df_2.c:122:44: warning: use location
  122 |                                         ac |= (ch - '0');
      |                                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: ssa_name [0m
ch_77 = PHI <ch_64(26), 7(27), 8(28), 12(29), 10(30), 13(31), 9(32), 11(33), ac_76(40)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_155 = VDEF <.MEM_103>
free (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:222:25: warning: free in this location
  222 |                         free(path_name);
      |                         ^
[40;35m target gimple type: ssa_name [0m
ch_77 = PHI <ch_64(26), 7(27), 8(28), 12(29), 10(30), 13(31), 9(32), 11(33), ac_76(40)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_125 = VDEF <.MEM_112>
free (_100);
./benchmarks/git/double_free_2/git_df_2.c:15:5: warning: free in this location
   15 |     free(sb->buf);
      |     ^
[40;35m target gimple type: ssa_name [0m
ch_77 = PHI <ch_64(26), 7(27), 8(28), 12(29), 10(30), 13(31), 9(32), 11(33), ac_76(40)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_127 = VDEF <.MEM_126>
free (_99);
./benchmarks/git/double_free_2/git_df_2.c:15:5: warning: free in this location
   15 |     free(sb->buf);
      |     ^
[40;35m target gimple type: ssa_name [0m
ch_77 = PHI <ch_64(26), 7(27), 8(28), 12(29), 10(30), 13(31), 9(32), 11(33), ac_76(40)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: addr_expr [0m
# .MEM_141 = VDEF <.MEM_140>
strbuf_addch (&uq, ch_77);
./benchmarks/git/double_free_2/git_df_2.c:128:17: warning: use location
  128 |                 strbuf_addch(sb, ch);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: ssa_name [0m
if (ch_74 > 55)
./benchmarks/git/double_free_2/git_df_2.c:120:52: warning: use location
  120 |                         if ((ch = *quoted++) < '0' || '7' < ch)
      |                                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: ssa_name [0m
if (ch_74 <= 47)
./benchmarks/git/double_free_2/git_df_2.c:120:28: warning: use location
  120 |                         if ((ch = *quoted++) < '0' || '7' < ch)
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_140>
_67 = MEM[(const char *)quoted_59 + 2B];
./benchmarks/git/double_free_2/git_df_2.c:117:35: warning: use location
  117 |                         if ((ch = *quoted++) < '0' || '7' < ch)
      |                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: ssa_name [0m
ch_68 = (int) _67;
./benchmarks/git/double_free_2/git_df_2.c:117:33: warning: use location
  117 |                         if ((ch = *quoted++) < '0' || '7' < ch)
      |                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: ssa_name [0m
_69 = ch_68 + -48;
./benchmarks/git/double_free_2/git_df_2.c:119:52: warning: use location
  119 |                                         ac |= ((ch - '0') << 3);
      |                                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: ssa_name [0m
_70 = _69 << 3;
./benchmarks/git/double_free_2/git_df_2.c:119:59: warning: use location
  119 |                                         ac |= ((ch - '0') << 3);
      |                                                           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: ssa_name [0m
ac_71 = ac_66 | _70;
./benchmarks/git/double_free_2/git_df_2.c:119:44: warning: use location
  119 |                                         ac |= ((ch - '0') << 3);
      |                                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_140>
_63 = MEM[(const char *)quoted_59 + 1B];
./benchmarks/git/double_free_2/git_df_2.c:102:31: warning: use location
  102 |                 switch ((ch = *quoted++)) {
      |                               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_140>
_60 = *quoted_59;
./benchmarks/git/double_free_2/git_df_2.c:91:25: warning: use location
   91 |                 switch (*quoted++) {
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: ssa_name [0m
quoted_62 = &MEM <const char> [(void *)quoted_59 + 2B];
./benchmarks/git/double_free_2/git_df_2.c:102:38: warning: use location
  102 |                 switch ((ch = *quoted++)) {
      |                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: ssa_name [0m
quoted_79 = PHI <quoted_62(26), quoted_62(27), quoted_62(28), quoted_62(29), quoted_62(30), quoted_62(31), quoted_62(32), quoted_62(33), quoted_72(40)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_155 = VDEF <.MEM_103>
free (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:222:25: warning: free in this location
  222 |                         free(path_name);
      |                         ^
[40;35m target gimple type: ssa_name [0m
quoted_79 = PHI <quoted_62(26), quoted_62(27), quoted_62(28), quoted_62(29), quoted_62(30), quoted_62(31), quoted_62(32), quoted_62(33), quoted_72(40)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_125 = VDEF <.MEM_112>
free (_100);
./benchmarks/git/double_free_2/git_df_2.c:15:5: warning: free in this location
   15 |     free(sb->buf);
      |     ^
[40;35m target gimple type: ssa_name [0m
quoted_79 = PHI <quoted_62(26), quoted_62(27), quoted_62(28), quoted_62(29), quoted_62(30), quoted_62(31), quoted_62(32), quoted_62(33), quoted_72(40)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_127 = VDEF <.MEM_126>
free (_99);
./benchmarks/git/double_free_2/git_df_2.c:15:5: warning: free in this location
   15 |     free(sb->buf);
      |     ^
[40;35m target gimple type: ssa_name [0m
quoted_79 = PHI <quoted_62(26), quoted_62(27), quoted_62(28), quoted_62(29), quoted_62(30), quoted_62(31), quoted_62(32), quoted_62(33), quoted_72(40)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_138 = VDEF <.MEM_108>
strbuf_grow (&uq, len_58);
./benchmarks/git/double_free_2/git_df_2.c:34:9: warning: free in this location
   34 |         strbuf_grow(sb, len);
      |         ^
[40;35m target gimple type: ssa_name [0m
quoted_57 = PHI <quoted_55(23), quoted_79(42)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_155 = VDEF <.MEM_103>
free (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:222:25: warning: free in this location
  222 |                         free(path_name);
      |                         ^
[40;35m target gimple type: ssa_name [0m
quoted_57 = PHI <quoted_55(23), quoted_79(42)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_125 = VDEF <.MEM_112>
free (_100);
./benchmarks/git/double_free_2/git_df_2.c:15:5: warning: free in this location
   15 |     free(sb->buf);
      |     ^
[40;35m target gimple type: ssa_name [0m
quoted_57 = PHI <quoted_55(23), quoted_79(42)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_127 = VDEF <.MEM_126>
free (_99);
./benchmarks/git/double_free_2/git_df_2.c:15:5: warning: free in this location
   15 |     free(sb->buf);
      |     ^
[40;35m target gimple type: ssa_name [0m
quoted_57 = PHI <quoted_55(23), quoted_79(42)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:4 [0m
[40;31m  	possible double free [Looserules]:3 [0m
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff99404e828
    type <pointer_type 0x7ff99401adc8
        type <integer_type 0x7ff99401ad20 char public QI
            size <integer_cst 0x7ff994502ca8 constant 8>
            unit-size <integer_cst 0x7ff994502cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff9945173f0 precision:8 min <integer_cst 0x7ff994011720 -128> max <integer_cst 0x7ff994011708 127>
            pointer_to_this <pointer_type 0x7ff99401adc8>>
        public unsigned DI
        size <integer_cst 0x7ff994502bb8 constant 64>
        unit-size <integer_cst 0x7ff994502bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7ff99450d168 ./benchmarks/git/double_free_2/git_df_2.c>
        pointer_to_this <pointer_type 0x7ff99401ae70>>
   
    def_stmt _83 = _81 + _82;
    version:83
    ptr-info 0x7ff994032f60>
_83 = _81 + _82;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_139 = VDEF <.MEM_138>
memcpy (_83, quoted_57, len_58);
memcpy (_83, quoted_57, len_58);
./benchmarks/git/double_free_2/git_df_2.c:35:9: warning: use location
   35 |         memcpy(sb->buf + sb->len, data, len);
      |         ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_139 = VDEF <.MEM_138>
memcpy (_83, quoted_57, len_58);
memcpy (_83, quoted_57, len_58);
./benchmarks/git/double_free_2/git_df_2.c:35:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff99404e828
    type <pointer_type 0x7ff99401adc8
        type <integer_type 0x7ff99401ad20 char public QI
            size <integer_cst 0x7ff994502ca8 constant 8>
            unit-size <integer_cst 0x7ff994502cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff9945173f0 precision:8 min <integer_cst 0x7ff994011720 -128> max <integer_cst 0x7ff994011708 127>
            pointer_to_this <pointer_type 0x7ff99401adc8>>
        public unsigned DI
        size <integer_cst 0x7ff994502bb8 constant 64>
        unit-size <integer_cst 0x7ff994502bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7ff99450d168 ./benchmarks/git/double_free_2/git_df_2.c>
        pointer_to_this <pointer_type 0x7ff99401ae70>>
   
    def_stmt _83 = _81 + _82;
    version:83
    ptr-info 0x7ff994032f60>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_155 = VDEF <.MEM_103>
free (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:222:25: warning: use location
  222 |                         free(path_name);
      |                         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_125 = VDEF <.MEM_112>
free (_100);
./benchmarks/git/double_free_2/git_df_2.c:15:5: warning: use location
   15 |     free(sb->buf);
      |     ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_127 = VDEF <.MEM_126>
free (_99);
./benchmarks/git/double_free_2/git_df_2.c:15:5: warning: use location
   15 |     free(sb->buf);
      |     ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff99404e8b8
    type <integer_type 0x7ff9945177e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff994502bb8 constant 64>
        unit-size <integer_cst 0x7ff994502bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff994517738 precision:64 min <integer_cst 0x7ff994502e88 0> max <integer_cst 0x7ff994503500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff9945237e0>>
   
    def_stmt _85 = len_58 + _84;
    version:85>
_85 = len_58 + _84;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_140 = VDEF <.MEM_139>
strbuf_setlen (&uq, _85);
strbuf_setlen (&uq, _85);
./benchmarks/git/double_free_2/git_df_2.c:36:9: warning: use location
   36 |         strbuf_setlen(sb, sb->len + len);
      |         ^
this stmt call this function :strbuf_setlen
trace fucntion name:strbuf_setlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_140 = VDEF <.MEM_139>
strbuf_setlen (&uq, _85);
strbuf_setlen (&uq, _85);
./benchmarks/git/double_free_2/git_df_2.c:36:9: warning: use location
this stmt call this function :strbuf_setlen
trace fucntion name:strbuf_setlen 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff99404e8b8
    type <integer_type 0x7ff9945177e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff994502bb8 constant 64>
        unit-size <integer_cst 0x7ff994502bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff994517738 precision:64 min <integer_cst 0x7ff994502e88 0> max <integer_cst 0x7ff994503500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff9945237e0>>
   
    def_stmt _85 = len_58 + _84;
    version:85>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_155 = VDEF <.MEM_103>
free (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:222:25: warning: use location
  222 |                         free(path_name);
      |                         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_125 = VDEF <.MEM_112>
free (_100);
./benchmarks/git/double_free_2/git_df_2.c:15:5: warning: use location
   15 |     free(sb->buf);
      |     ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_127 = VDEF <.MEM_126>
free (_99);
./benchmarks/git/double_free_2/git_df_2.c:15:5: warning: use location
   15 |     free(sb->buf);
      |     ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff99404e318
    type <integer_type 0x7ff9945175e8 int public SI
        size <integer_cst 0x7ff994502df8 constant 32>
        unit-size <integer_cst 0x7ff994502e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff9945175e8 precision:32 min <integer_cst 0x7ff994502db0 -2147483648> max <integer_cst 0x7ff994502dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff99451e9d8>>
    var <var_decl 0x7ff994049bd0 ch>
    def_stmt ch_77 = PHI <ch_64(26), 7(27), 8(28), 12(29), 10(30), 13(31), 9(32), 11(33), ac_76(40)>
    version:77>
ch_77 = PHI <ch_64(26), 7(27), 8(28), 12(29), 10(30), 13(31), 9(32), 11(33), ac_76(40)>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_141 = VDEF <.MEM_140>
strbuf_addch (&uq, ch_77);
strbuf_addch (&uq, ch_77);
./benchmarks/git/double_free_2/git_df_2.c:128:17: warning: use location
  128 |                 strbuf_addch(sb, ch);
      |                 ^
this stmt call this function :strbuf_addch
trace fucntion name:strbuf_addch 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_141 = VDEF <.MEM_140>
strbuf_addch (&uq, ch_77);
strbuf_addch (&uq, ch_77);
./benchmarks/git/double_free_2/git_df_2.c:128:17: warning: use location
this stmt call this function :strbuf_addch
trace fucntion name:strbuf_addch 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff99404e318
    type <integer_type 0x7ff9945175e8 int public SI
        size <integer_cst 0x7ff994502df8 constant 32>
        unit-size <integer_cst 0x7ff994502e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff9945175e8 precision:32 min <integer_cst 0x7ff994502db0 -2147483648> max <integer_cst 0x7ff994502dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff99451e9d8>>
    var <var_decl 0x7ff994049bd0 ch>
    def_stmt ch_77 = PHI <ch_64(26), 7(27), 8(28), 12(29), 10(30), 13(31), 9(32), 11(33), ac_76(40)>
    version:77>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_155 = VDEF <.MEM_103>
free (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:222:25: warning: use location
  222 |                         free(path_name);
      |                         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_125 = VDEF <.MEM_112>
free (_100);
./benchmarks/git/double_free_2/git_df_2.c:15:5: warning: use location
   15 |     free(sb->buf);
      |     ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_127 = VDEF <.MEM_126>
free (_99);
./benchmarks/git/double_free_2/git_df_2.c:15:5: warning: use location
   15 |     free(sb->buf);
      |     ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff994046cf0
    type <integer_type 0x7ff99401a9d8 size_t public unsigned DI
        size <integer_cst 0x7ff994502bb8 constant 64>
        unit-size <integer_cst 0x7ff994502bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff994517738 precision:64 min <integer_cst 0x7ff994502e88 0> max <integer_cst 0x7ff994503500 18446744073709551615> context <translation_unit_decl 0x7ff99450d168 ./benchmarks/git/double_free_2/git_df_2.c>>
    var <var_decl 0x7ff994049ab0 oldlen>
    def_stmt oldlen_54 = uq.len;
    version:54>
# VUSE <.MEM_110>
oldlen_54 = uq.len;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_142 = VDEF <.MEM_140>
strbuf_setlen (&uq, oldlen_54);
strbuf_setlen (&uq, oldlen_54);
./benchmarks/git/double_free_2/git_df_2.c:132:9: warning: use location
  132 |         strbuf_setlen(sb, oldlen);
      |         ^
this stmt call this function :strbuf_setlen
trace fucntion name:strbuf_setlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_142 = VDEF <.MEM_140>
strbuf_setlen (&uq, oldlen_54);
strbuf_setlen (&uq, oldlen_54);
./benchmarks/git/double_free_2/git_df_2.c:132:9: warning: use location
this stmt call this function :strbuf_setlen
trace fucntion name:strbuf_setlen 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff994046cf0
    type <integer_type 0x7ff99401a9d8 size_t public unsigned DI
        size <integer_cst 0x7ff994502bb8 constant 64>
        unit-size <integer_cst 0x7ff994502bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff994517738 precision:64 min <integer_cst 0x7ff994502e88 0> max <integer_cst 0x7ff994503500 18446744073709551615> context <translation_unit_decl 0x7ff99450d168 ./benchmarks/git/double_free_2/git_df_2.c>>
    var <var_decl 0x7ff994049ab0 oldlen>
    def_stmt oldlen_54 = uq.len;
    version:54>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_155 = VDEF <.MEM_103>
free (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:222:25: warning: use location
  222 |                         free(path_name);
      |                         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_125 = VDEF <.MEM_112>
free (_100);
./benchmarks/git/double_free_2/git_df_2.c:15:5: warning: use location
   15 |     free(sb->buf);
      |     ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_127 = VDEF <.MEM_126>
free (_99);
./benchmarks/git/double_free_2/git_df_2.c:15:5: warning: use location
   15 |     free(sb->buf);
      |     ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff99403ee10
    type <pointer_type 0x7ff99401adc8
        type <integer_type 0x7ff99401ad20 char public QI
            size <integer_cst 0x7ff994502ca8 constant 8>
            unit-size <integer_cst 0x7ff994502cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff9945173f0 precision:8 min <integer_cst 0x7ff994011720 -128> max <integer_cst 0x7ff994011708 127>
            pointer_to_this <pointer_type 0x7ff99401adc8>>
        public unsigned DI
        size <integer_cst 0x7ff994502bb8 constant 64>
        unit-size <integer_cst 0x7ff994502bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7ff99450d168 ./benchmarks/git/double_free_2/git_df_2.c>
        pointer_to_this <pointer_type 0x7ff99401ae70>>
    var <var_decl 0x7ff994042240 path_name>
    def_stmt path_name_37 = PHI <path_name_33(19), path_name_33(20), path_name_36(46)>
    version:37
    ptr-info 0x7ff994032de0>
path_name_37 = PHI <path_name_33(19), path_name_33(20), path_name_36(46)>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:222:25: warning: use location
  222 |                         free(path_name);
      |                         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:222:25: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
printf ("git-update-index: unable to update %s", path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:218:33: warning: use location
  218 |                                 die("git-update-index: unable to update %s",
      |                                 ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = add_cacheinfo (mode_15, &sha1, path_name_37, stage_45);
./benchmarks/git/double_free_2/git_df_2.c:217:29: warning: use location
  217 |                         if (add_cacheinfo(mode, sha1, path_name, stage))
      |                             ^
this stmt call this function :add_cacheinfo
trace fucntion name:add_cacheinfo 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_46 != 0)
./benchmarks/git/double_free_2/git_df_2.c:217:28: warning: use location
  217 |                         if (add_cacheinfo(mode, sha1, path_name, stage))
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (mode_15 == 0)
./benchmarks/git/double_free_2/git_df_2.c:205:20: warning: use location
  205 |                 if (!mode) {
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_40 = remove_file_from_cache (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:207:29: warning: use location
  207 |                         if (remove_file_from_cache(path_name))
      |                             ^
this stmt call this function :remove_file_from_cache
trace fucntion name:remove_file_from_cache 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
fprintf (_39, "Ignoring path %s\n", path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:201:25: warning: use location
  201 |                         fprintf(stderr, "Ignoring path %s\n", path_name);
      |                         ^
this stmt call this function :fprintf
trace fucntion name:fprintf 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_146 = VDEF <.MEM_102>
_38 = verify_path (path_name_37);
_38 = verify_path (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:200:22: warning: use location
  200 |                 if (!verify_path(path_name)) {
      |                      ^
this stmt call this function :verify_path
trace fucntion name:verify_path 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (path_name_37 != _47)
./benchmarks/git/double_free_2/git_df_2.c:221:20: warning: use location
  221 |                 if (path_name != ptr)
      |                    ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff99403ee10
    type <pointer_type 0x7ff99401adc8
        type <integer_type 0x7ff99401ad20 char public QI
            size <integer_cst 0x7ff994502ca8 constant 8>
            unit-size <integer_cst 0x7ff994502cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff9945173f0 precision:8 min <integer_cst 0x7ff994011720 -128> max <integer_cst 0x7ff994011708 127>
            pointer_to_this <pointer_type 0x7ff99401adc8>>
        public unsigned DI
        size <integer_cst 0x7ff994502bb8 constant 64>
        unit-size <integer_cst 0x7ff994502bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7ff99450d168 ./benchmarks/git/double_free_2/git_df_2.c>
        pointer_to_this <pointer_type 0x7ff99401ae70>>
    var <var_decl 0x7ff994042240 path_name>
    def_stmt path_name_37 = PHI <path_name_33(19), path_name_33(20), path_name_36(46)>
    version:37
    ptr-info 0x7ff994032de0>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_155 = VDEF <.MEM_103>
free (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:222:25: warning: use location
  222 |                         free(path_name);
      |                         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_125 = VDEF <.MEM_112>
free (_100);
./benchmarks/git/double_free_2/git_df_2.c:15:5: warning: use location
   15 |     free(sb->buf);
      |     ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_127 = VDEF <.MEM_126>
free (_99);
./benchmarks/git/double_free_2/git_df_2.c:15:5: warning: use location
   15 |     free(sb->buf);
      |     ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff99403eea0
    type <pointer_type 0x7ff994021a80
        type <record_type 0x7ff9940219d8 FILE BLK
            size <integer_cst 0x7ff9945d70a8 constant 1728>
            unit-size <integer_cst 0x7ff994011840 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff994021930 fields <field_decl 0x7ff994022260 _flags> context <translation_unit_decl 0x7ff99450d168 ./benchmarks/git/double_free_2/git_df_2.c>
            pointer_to_this <pointer_type 0x7ff994021a80>>
        unsigned DI
        size <integer_cst 0x7ff994502bb8 constant 64>
        unit-size <integer_cst 0x7ff994502bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff994028150>>
   
    def_stmt _39 = stderr;
    version:39
    ptr-info 0x7ff994032df8>
# VUSE <.MEM_146>
_39 = stderr;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_156 = VDEF <.MEM_146>
fprintf (_39, "Ignoring path %s\n", path_name_37);
fprintf (_39, "Ignoring path %s\n", path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:201:25: warning: use location
  201 |                         fprintf(stderr, "Ignoring path %s\n", path_name);
      |                         ^
this stmt call this function :fprintf
trace fucntion name:fprintf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_156 = VDEF <.MEM_146>
fprintf (_39, "Ignoring path %s\n", path_name_37);
fprintf (_39, "Ignoring path %s\n", path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:201:25: warning: use location
this stmt call this function :fprintf
trace fucntion name:fprintf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff99403eea0
    type <pointer_type 0x7ff994021a80
        type <record_type 0x7ff9940219d8 FILE BLK
            size <integer_cst 0x7ff9945d70a8 constant 1728>
            unit-size <integer_cst 0x7ff994011840 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff994021930 fields <field_decl 0x7ff994022260 _flags> context <translation_unit_decl 0x7ff99450d168 ./benchmarks/git/double_free_2/git_df_2.c>
            pointer_to_this <pointer_type 0x7ff994021a80>>
        unsigned DI
        size <integer_cst 0x7ff994502bb8 constant 64>
        unit-size <integer_cst 0x7ff994502bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff994028150>>
   
    def_stmt _39 = stderr;
    version:39
    ptr-info 0x7ff994032df8>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_155 = VDEF <.MEM_103>
free (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:222:25: warning: use location
  222 |                         free(path_name);
      |                         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_125 = VDEF <.MEM_112>
free (_100);
./benchmarks/git/double_free_2/git_df_2.c:15:5: warning: use location
   15 |     free(sb->buf);
      |     ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_127 = VDEF <.MEM_126>
free (_99);
./benchmarks/git/double_free_2/git_df_2.c:15:5: warning: use location
   15 |     free(sb->buf);
      |     ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff99403e7e0
    type <integer_type 0x7ff994517690 unsigned int public unsigned SI
        size <integer_cst 0x7ff994502df8 constant 32>
        unit-size <integer_cst 0x7ff994502e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff994517690 precision:32 min <integer_cst 0x7ff994502e28 0> max <integer_cst 0x7ff994502de0 4294967295>
        pointer_to_this <pointer_type 0x7ff994523690>>
    var <var_decl 0x7ff994042360 mode>
    def_stmt mode_15 = (unsigned int) ul_7;
    version:15>
mode_15 = (unsigned int) ul_7;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_149 = VDEF <.MEM_148>
_46 = add_cacheinfo (mode_15, &sha1, path_name_37, stage_45);
_46 = add_cacheinfo (mode_15, &sha1, path_name_37, stage_45);
./benchmarks/git/double_free_2/git_df_2.c:217:29: warning: use location
  217 |                         if (add_cacheinfo(mode, sha1, path_name, stage))
      |                             ^
this stmt call this function :add_cacheinfo
trace fucntion name:add_cacheinfo 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_46 != 0)
./benchmarks/git/double_free_2/git_df_2.c:217:28: warning: use location
  217 |                         if (add_cacheinfo(mode, sha1, path_name, stage))
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:222:25: warning: use location
  222 |                         free(path_name);
      |                         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:222:25: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
printf ("git-update-index: unable to update %s", path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:218:33: warning: use location
  218 |                                 die("git-update-index: unable to update %s",
      |                                 ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_40 = remove_file_from_cache (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:207:29: warning: use location
  207 |                         if (remove_file_from_cache(path_name))
      |                             ^
this stmt call this function :remove_file_from_cache
trace fucntion name:remove_file_from_cache 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
fprintf (_39, "Ignoring path %s\n", path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:201:25: warning: use location
  201 |                         fprintf(stderr, "Ignoring path %s\n", path_name);
      |                         ^
this stmt call this function :fprintf
trace fucntion name:fprintf 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = verify_path (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:200:22: warning: use location
  200 |                 if (!verify_path(path_name)) {
      |                      ^
this stmt call this function :verify_path
trace fucntion name:verify_path 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (path_name_37 != _47)
./benchmarks/git/double_free_2/git_df_2.c:221:20: warning: use location
  221 |                 if (path_name != ptr)
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (mode_15 == 0)
./benchmarks/git/double_free_2/git_df_2.c:205:20: warning: use location
  205 |                 if (!mode) {
      |                    ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff99403e7e0
    type <integer_type 0x7ff994517690 unsigned int public unsigned SI
        size <integer_cst 0x7ff994502df8 constant 32>
        unit-size <integer_cst 0x7ff994502e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff994517690 precision:32 min <integer_cst 0x7ff994502e28 0> max <integer_cst 0x7ff994502de0 4294967295>
        pointer_to_this <pointer_type 0x7ff994523690>>
    var <var_decl 0x7ff994042360 mode>
    def_stmt mode_15 = (unsigned int) ul_7;
    version:15>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_155 = VDEF <.MEM_103>
free (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:222:25: warning: use location
  222 |                         free(path_name);
      |                         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_125 = VDEF <.MEM_112>
free (_100);
./benchmarks/git/double_free_2/git_df_2.c:15:5: warning: use location
   15 |     free(sb->buf);
      |     ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_127 = VDEF <.MEM_126>
free (_99);
./benchmarks/git/double_free_2/git_df_2.c:15:5: warning: use location
   15 |     free(sb->buf);
      |     ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff994046000
    type <integer_type 0x7ff9945175e8 int public SI
        size <integer_cst 0x7ff994502df8 constant 32>
        unit-size <integer_cst 0x7ff994502e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff9945175e8 precision:32 min <integer_cst 0x7ff994502db0 -2147483648> max <integer_cst 0x7ff994502dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff99451e9d8>>
    var <var_decl 0x7ff994042480 stage>
    def_stmt stage_45 = PHI <stage_25(14), 0(15)>
    version:45>
stage_45 = PHI <stage_25(14), 0(15)>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_149 = VDEF <.MEM_148>
_46 = add_cacheinfo (mode_15, &sha1, path_name_37, stage_45);
_46 = add_cacheinfo (mode_15, &sha1, path_name_37, stage_45);
./benchmarks/git/double_free_2/git_df_2.c:217:29: warning: use location
  217 |                         if (add_cacheinfo(mode, sha1, path_name, stage))
      |                             ^
this stmt call this function :add_cacheinfo
trace fucntion name:add_cacheinfo 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_46 != 0)
./benchmarks/git/double_free_2/git_df_2.c:217:28: warning: use location
  217 |                         if (add_cacheinfo(mode, sha1, path_name, stage))
      |                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (mode_15 == 0)
./benchmarks/git/double_free_2/git_df_2.c:205:20: warning: use location
  205 |                 if (!mode) {
      |                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:222:25: warning: use location
  222 |                         free(path_name);
      |                         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:222:25: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
printf ("git-update-index: unable to update %s", path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:218:33: warning: use location
  218 |                                 die("git-update-index: unable to update %s",
      |                                 ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_40 = remove_file_from_cache (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:207:29: warning: use location
  207 |                         if (remove_file_from_cache(path_name))
      |                             ^
this stmt call this function :remove_file_from_cache
trace fucntion name:remove_file_from_cache 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
fprintf (_39, "Ignoring path %s\n", path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:201:25: warning: use location
  201 |                         fprintf(stderr, "Ignoring path %s\n", path_name);
      |                         ^
this stmt call this function :fprintf
trace fucntion name:fprintf 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = verify_path (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:200:22: warning: use location
  200 |                 if (!verify_path(path_name)) {
      |                      ^
this stmt call this function :verify_path
trace fucntion name:verify_path 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (path_name_37 != _47)
./benchmarks/git/double_free_2/git_df_2.c:221:20: warning: use location
  221 |                 if (path_name != ptr)
      |                    ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff994046000
    type <integer_type 0x7ff9945175e8 int public SI
        size <integer_cst 0x7ff994502df8 constant 32>
        unit-size <integer_cst 0x7ff994502e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff9945175e8 precision:32 min <integer_cst 0x7ff994502db0 -2147483648> max <integer_cst 0x7ff994502dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff99451e9d8>>
    var <var_decl 0x7ff994042480 stage>
    def_stmt stage_45 = PHI <stage_25(14), 0(15)>
    version:45>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_155 = VDEF <.MEM_103>
free (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:222:25: warning: use location
  222 |                         free(path_name);
      |                         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_125 = VDEF <.MEM_112>
free (_100);
./benchmarks/git/double_free_2/git_df_2.c:15:5: warning: use location
   15 |     free(sb->buf);
      |     ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_127 = VDEF <.MEM_126>
free (_99);
./benchmarks/git/double_free_2/git_df_2.c:15:5: warning: use location
   15 |     free(sb->buf);
      |     ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff994046120
    type <pointer_type 0x7ff994021a80
        type <record_type 0x7ff9940219d8 FILE BLK
            size <integer_cst 0x7ff9945d70a8 constant 1728>
            unit-size <integer_cst 0x7ff994011840 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff994021930 fields <field_decl 0x7ff994022260 _flags> context <translation_unit_decl 0x7ff99450d168 ./benchmarks/git/double_free_2/git_df_2.c>
            pointer_to_this <pointer_type 0x7ff994021a80>>
        unsigned DI
        size <integer_cst 0x7ff994502bb8 constant 64>
        unit-size <integer_cst 0x7ff994502bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff994028150>>
   
    def_stmt _49 = stdin;
    version:49
    ptr-info 0x7ff994032e88>
# VUSE <.MEM_107>
_49 = stdin;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ch_87 = fgetc (_49);
./benchmarks/git/double_free_2/git_df_2.c:47:22: warning: use location
   47 |         while ((ch = fgetc(fp)) != EOF) {
      |                      ^
this stmt call this function :fgetc
trace fucntion name:fgetc 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (ch_87 == -1)
./benchmarks/git/double_free_2/git_df_2.c:53:12: warning: use location
   53 |         if (ch == EOF && sb->len == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = (char) ch_87;
./benchmarks/git/double_free_2/git_df_2.c:51:36: warning: use location
   51 |                 sb->buf[sb->len++] = ch;
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_91 = _92;
./benchmarks/git/double_free_2/git_df_2.c:51:36: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_117 = VDEF <.MEM_116>
_86 = feof (_49);
_86 = feof (_49);
./benchmarks/git/double_free_2/git_df_2.c:43:13: warning: use location
   43 |         if (feof(fp))
      |             ^
this stmt call this function :feof
trace fucntion name:feof 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_86 != 0)
./benchmarks/git/double_free_2/git_df_2.c:43:12: warning: use location
   43 |         if (feof(fp))
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff994046120
    type <pointer_type 0x7ff994021a80
        type <record_type 0x7ff9940219d8 FILE BLK
            size <integer_cst 0x7ff9945d70a8 constant 1728>
            unit-size <integer_cst 0x7ff994011840 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff994021930 fields <field_decl 0x7ff994022260 _flags> context <translation_unit_decl 0x7ff99450d168 ./benchmarks/git/double_free_2/git_df_2.c>
            pointer_to_this <pointer_type 0x7ff994021a80>>
        unsigned DI
        size <integer_cst 0x7ff994502bb8 constant 64>
        unit-size <integer_cst 0x7ff994502bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff994028150>>
   
    def_stmt _49 = stdin;
    version:49
    ptr-info 0x7ff994032e88>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_155 = VDEF <.MEM_103>
free (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:222:25: warning: use location
  222 |                         free(path_name);
      |                         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_125 = VDEF <.MEM_112>
free (_100);
./benchmarks/git/double_free_2/git_df_2.c:15:5: warning: use location
   15 |     free(sb->buf);
      |     ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_127 = VDEF <.MEM_126>
free (_99);
./benchmarks/git/double_free_2/git_df_2.c:15:5: warning: use location
   15 |     free(sb->buf);
      |     ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_155 = VDEF <.MEM_103>
free (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:222:25: warning: free in this location
  222 |                         free(path_name);
      |                         ^
[40;35m target gimple type: ssa_name [0m
# .MEM_119 = VDEF <.MEM_111>
ch_87 = fgetc (_49);
./benchmarks/git/double_free_2/git_df_2.c:47:22: warning: use location
   47 |         while ((ch = fgetc(fp)) != EOF) {
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_155 = VDEF <.MEM_103>
free (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:222:25: warning: free in this location
  222 |                         free(path_name);
      |                         ^
[40;35m target gimple type: ssa_name [0m
if (ch_87 == -1)
./benchmarks/git/double_free_2/git_df_2.c:53:12: warning: use location
   53 |         if (ch == EOF && sb->len == 0)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_155 = VDEF <.MEM_103>
free (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:222:25: warning: free in this location
  222 |                         free(path_name);
      |                         ^
[40;35m target gimple type: ssa_name [0m
_92 = (char) ch_87;
./benchmarks/git/double_free_2/git_df_2.c:51:36: warning: use location
   51 |                 sb->buf[sb->len++] = ch;
      |                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_155 = VDEF <.MEM_103>
free (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:222:25: warning: free in this location
  222 |                         free(path_name);
      |                         ^
[40;35m target gimple type: mem_ref [0m
# .MEM_122 = VDEF <.MEM_121>
*_91 = _92;
./benchmarks/git/double_free_2/git_df_2.c:51:36: warning: use location
   51 |                 sb->buf[sb->len++] = ch;
      |                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_155 = VDEF <.MEM_103>
free (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:222:25: warning: free in this location
  222 |                         free(path_name);
      |                         ^
[40;35m target gimple type: ssa_name [0m
# .MEM_117 = VDEF <.MEM_116>
_86 = feof (_49);
./benchmarks/git/double_free_2/git_df_2.c:43:13: warning: use location
   43 |         if (feof(fp))
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_155 = VDEF <.MEM_103>
free (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:222:25: warning: free in this location
  222 |                         free(path_name);
      |                         ^
[40;35m target gimple type: ssa_name [0m
if (_86 != 0)
./benchmarks/git/double_free_2/git_df_2.c:43:12: warning: use location
   43 |         if (feof(fp))
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff994046120
    type <pointer_type 0x7ff994021a80
        type <record_type 0x7ff9940219d8 FILE BLK
            size <integer_cst 0x7ff9945d70a8 constant 1728>
            unit-size <integer_cst 0x7ff994011840 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff994021930 fields <field_decl 0x7ff994022260 _flags> context <translation_unit_decl 0x7ff99450d168 ./benchmarks/git/double_free_2/git_df_2.c>
            pointer_to_this <pointer_type 0x7ff994021a80>>
        unsigned DI
        size <integer_cst 0x7ff994502bb8 constant 64>
        unit-size <integer_cst 0x7ff994502bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff994028150>>
   
    def_stmt _49 = stdin;
    version:49
    ptr-info 0x7ff994032e88>
# VUSE <.MEM_107>
_49 = stdin;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_119 = VDEF <.MEM_111>
ch_87 = fgetc (_49);
ch_87 = fgetc (_49);
./benchmarks/git/double_free_2/git_df_2.c:47:22: warning: use location
   47 |         while ((ch = fgetc(fp)) != EOF) {
      |                      ^
this stmt call this function :fgetc
trace fucntion name:fgetc 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (ch_87 == -1)
./benchmarks/git/double_free_2/git_df_2.c:53:12: warning: use location
   53 |         if (ch == EOF && sb->len == 0)
      |            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = (char) ch_87;
./benchmarks/git/double_free_2/git_df_2.c:51:36: warning: use location
   51 |                 sb->buf[sb->len++] = ch;
      |                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_91 = _92;
./benchmarks/git/double_free_2/git_df_2.c:51:36: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_86 = feof (_49);
./benchmarks/git/double_free_2/git_df_2.c:43:13: warning: use location
   43 |         if (feof(fp))
      |             ^
this stmt call this function :feof
trace fucntion name:feof 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_86 != 0)
./benchmarks/git/double_free_2/git_df_2.c:43:12: warning: use location
   43 |         if (feof(fp))
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff994046120
    type <pointer_type 0x7ff994021a80
        type <record_type 0x7ff9940219d8 FILE BLK
            size <integer_cst 0x7ff9945d70a8 constant 1728>
            unit-size <integer_cst 0x7ff994011840 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff994021930 fields <field_decl 0x7ff994022260 _flags> context <translation_unit_decl 0x7ff99450d168 ./benchmarks/git/double_free_2/git_df_2.c>
            pointer_to_this <pointer_type 0x7ff994021a80>>
        unsigned DI
        size <integer_cst 0x7ff994502bb8 constant 64>
        unit-size <integer_cst 0x7ff994502bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff994028150>>
   
    def_stmt _49 = stdin;
    version:49
    ptr-info 0x7ff994032e88>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_155 = VDEF <.MEM_103>
free (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:222:25: warning: use location
  222 |                         free(path_name);
      |                         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_125 = VDEF <.MEM_112>
free (_100);
./benchmarks/git/double_free_2/git_df_2.c:15:5: warning: use location
   15 |     free(sb->buf);
      |     ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_127 = VDEF <.MEM_126>
free (_99);
./benchmarks/git/double_free_2/git_df_2.c:15:5: warning: use location
   15 |     free(sb->buf);
      |     ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_155 = VDEF <.MEM_103>
free (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:222:25: warning: free in this location
  222 |                         free(path_name);
      |                         ^
[40;35m target gimple type: ssa_name [0m
# .MEM_119 = VDEF <.MEM_111>
ch_87 = fgetc (_49);
./benchmarks/git/double_free_2/git_df_2.c:47:22: warning: use location
   47 |         while ((ch = fgetc(fp)) != EOF) {
      |                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_155 = VDEF <.MEM_103>
free (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:222:25: warning: free in this location
  222 |                         free(path_name);
      |                         ^
[40;35m target gimple type: ssa_name [0m
if (ch_87 == -1)
./benchmarks/git/double_free_2/git_df_2.c:53:12: warning: use location
   53 |         if (ch == EOF && sb->len == 0)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_155 = VDEF <.MEM_103>
free (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:222:25: warning: free in this location
  222 |                         free(path_name);
      |                         ^
[40;35m target gimple type: ssa_name [0m
_92 = (char) ch_87;
./benchmarks/git/double_free_2/git_df_2.c:51:36: warning: use location
   51 |                 sb->buf[sb->len++] = ch;
      |                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_155 = VDEF <.MEM_103>
free (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:222:25: warning: free in this location
  222 |                         free(path_name);
      |                         ^
[40;35m target gimple type: mem_ref [0m
# .MEM_122 = VDEF <.MEM_121>
*_91 = _92;
./benchmarks/git/double_free_2/git_df_2.c:51:36: warning: use location
   51 |                 sb->buf[sb->len++] = ch;
      |                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_155 = VDEF <.MEM_103>
free (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:222:25: warning: free in this location
  222 |                         free(path_name);
      |                         ^
[40;35m target gimple type: ssa_name [0m
# .MEM_117 = VDEF <.MEM_116>
_86 = feof (_49);
./benchmarks/git/double_free_2/git_df_2.c:43:13: warning: use location
   43 |         if (feof(fp))
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_155 = VDEF <.MEM_103>
free (path_name_37);
./benchmarks/git/double_free_2/git_df_2.c:222:25: warning: free in this location
  222 |                         free(path_name);
      |                         ^
[40;35m target gimple type: ssa_name [0m
if (_86 != 0)
./benchmarks/git/double_free_2/git_df_2.c:43:12: warning: use location
   43 |         if (feof(fp))
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:main========= [0m
[40;44m =======node_fun:strtoul========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path strtoul  function_call count: 0 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:strtoul========= [0m
[40;42m =======start_check_funciton:strtoul========= [0m
[40;33m =======POP node_fun stack:strtoul========= [0m
[40;44m =======node_fun:strbuf_grow========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path strbuf_grow  function_call count: 5 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;33m =======POP node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:st_mult========= [0m
[40;33m =======POP node_fun stack:st_mult========= [0m
[40;42m =======pre add _ fucntion:alloc_nr========= [0m
[40;33m =======POP node_fun stack:alloc_nr========= [0m
[40;42m =======pre_check_funciton:strbuf_grow========= [0m
[40;42m =======start_check_funciton:strbuf_grow========= [0m

dot graph START

======================================================================
 <ssa_name 0x7ff99405b7e0
    type <integer_type 0x7ff9945175e8 int public SI
        size <integer_cst 0x7ff994502df8 constant 32>
        unit-size <integer_cst 0x7ff994502e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff9945175e8 precision:32 min <integer_cst 0x7ff994502db0 -2147483648> max <integer_cst 0x7ff994502dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff99451e9d8>>
   
    def_stmt _10 = alloc_nr (_9);
    version:10>
# .MEM_34 = VDEF <.MEM_33(D)>
_10 = alloc_nr (_9);

 ================== pre trace ptable ================== 
trace fucntion name:alloc_nr 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function alloc_nr
 
 Start check Pointer Collect  

======================================================================
# .MEM_34 = VDEF <.MEM_33(D)>
_10 = alloc_nr (_9);
_10 = alloc_nr (_9);
In function ‘strbuf_grow’:
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^
this stmt call this function :alloc_nr
trace fucntion name:alloc_nr 

 ================== trace ================== 
trace fucntion free:0 
_11 = (long unsigned int) _10;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
if (_11 < _14)
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff99405b7e0
    type <integer_type 0x7ff9945175e8 int public SI
        size <integer_cst 0x7ff994502df8 constant 32>
        unit-size <integer_cst 0x7ff994502e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff9945175e8 precision:32 min <integer_cst 0x7ff994502db0 -2147483648> max <integer_cst 0x7ff994502dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff99451e9d8>>
   
    def_stmt _10 = alloc_nr (_9);
    version:10>

 ================================================================= 
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:4 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:4 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff99405ba68
    type <integer_type 0x7ff9945175e8 int public SI
        size <integer_cst 0x7ff994502df8 constant 32>
        unit-size <integer_cst 0x7ff994502e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff9945175e8 precision:32 min <integer_cst 0x7ff994502db0 -2147483648> max <integer_cst 0x7ff994502dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff99451e9d8>>
   
    def_stmt _19 = alloc_nr (_18);
    version:19>
# .MEM_35 = VDEF <.MEM_34>
_19 = alloc_nr (_18);

 ================== pre trace ptable ================== 
trace fucntion name:alloc_nr 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function alloc_nr
 
 Start check Pointer Collect  

======================================================================
# .MEM_35 = VDEF <.MEM_34>
_19 = alloc_nr (_18);
_19 = alloc_nr (_18);
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^
this stmt call this function :alloc_nr
trace fucntion name:alloc_nr 

 ================== trace ================== 
trace fucntion free:0 
_20 = (long unsigned int) _19;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
sb_29(D)->alloc = _20;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_24 = sb_29(D)->buf;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
this stmt call this function :realloc

 ================== find free stmt ================== 
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: use location
[40;32m    FIND REALLOC STMT count:1 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find free stmt ================== 
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----
_65 = ret_55;
lto1: warning: use location
if (ret_54 == 0B)
./benchmarks/git/double_free_2/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
this stmt call this function :realloc

 ================== find free stmt ================== 
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: use location
[40;32m    FIND REALLOC STMT count:2 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find free stmt ================== 
_50 = ret_49 == 0B;
./benchmarks/git/double_free_2/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^
if (_52 != 0)
./benchmarks/git/double_free_2/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
this stmt call this function :realloc

 ================== find free stmt ================== 
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: use location
[40;32m    FIND REALLOC STMT count:3 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find free stmt ================== 
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
this stmt call this function :realloc

 ================== find free stmt ================== 
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: use location
[40;32m    FIND REALLOC STMT count:4 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find free stmt ================== 
_44 = ret_43 == 0B;
./benchmarks/git/double_free_2/../git.h:415:13: warning: use location
  415 |         if (!ret && !size)
      |             ^
_46 = _44 & _45;
./benchmarks/git/double_free_2/../git.h:415:18: warning: use location
  415 |         if (!ret && !size)
      |                  ^
_21 = sb_29(D)->alloc;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^
_22 = st_mult (1, _21);
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
this stmt call this function :st_mult
trace fucntion name:st_mult 

 ================== trace ================== 
trace fucntion free:4 
_23 = (long unsigned int) _22;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_51 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^
_45 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:415:21: warning: use location
  415 |         if (!ret && !size)
      |                     ^
_18 = sb_29(D)->alloc;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^
sb_29(D)->alloc = _17;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
sb_29(D)->alloc = _17;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_15 = sb_29(D)->len;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_16 = _15 + extra_30(D);
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_12 = sb_29(D)->len;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_13 = _12 + extra_30(D);
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_9 = sb_29(D)->alloc;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location

======================================================================

 Expand conflict 
 The same function may have multiple branches :alloc_nr
# .MEM_35 = VDEF <.MEM_34>
_19 = alloc_nr (_18);
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
# .MEM_34 = VDEF <.MEM_33(D)>
_10 = alloc_nr (_9);
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_8 = sb_29(D)->alloc;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^
_5 = sb_29(D)->len;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_4 = sb_29(D)->len;
./benchmarks/git/double_free_2/git_df_2.c:21:38: warning: use location
   21 |         if (sb->len + extra + 1 <= sb->len)
      |                                      ^
_1 = sb_29(D)->len;
./benchmarks/git/double_free_2/git_df_2.c:21:15: warning: use location
   21 |         if (sb->len + extra + 1 <= sb->len)
      |               ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff99405ba68
    type <integer_type 0x7ff9945175e8 int public SI
        size <integer_cst 0x7ff994502df8 constant 32>
        unit-size <integer_cst 0x7ff994502e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff9945175e8 precision:32 min <integer_cst 0x7ff994502db0 -2147483648> max <integer_cst 0x7ff994502dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff99451e9d8>>
   
    def_stmt _19 = alloc_nr (_18);
    version:19>

 ================================================================= 
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
[40;35m target gimple type: ssa_name [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: component_ref [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: component_ref [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: component_ref [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: component_ref [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: component_ref [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: component_ref [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: component_ref [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: component_ref [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
[40;35m target gimple type: ssa_name [0m
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
[40;35m target gimple type: ssa_name [0m
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
[40;35m target gimple type: ssa_name [0m
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
[40;35m target gimple type: ssa_name [0m
_65 = ret_55;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_65 = ret_55;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_65 = ret_55;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_65 = ret_55;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
[40;35m target gimple type: ssa_name [0m
_65 = ret_55;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_65 = ret_55;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_65 = ret_55;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
_65 = ret_55;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
[40;35m target gimple type: ssa_name [0m
if (ret_54 == 0B)
./benchmarks/git/double_free_2/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
if (ret_54 == 0B)
./benchmarks/git/double_free_2/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
if (ret_54 == 0B)
./benchmarks/git/double_free_2/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
if (ret_54 == 0B)
./benchmarks/git/double_free_2/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
if (ret_54 == 0B)
./benchmarks/git/double_free_2/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
if (ret_54 == 0B)
./benchmarks/git/double_free_2/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
if (ret_54 == 0B)
./benchmarks/git/double_free_2/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
if (ret_54 == 0B)
./benchmarks/git/double_free_2/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_50 = ret_49 == 0B;
./benchmarks/git/double_free_2/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_50 = ret_49 == 0B;
./benchmarks/git/double_free_2/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_50 = ret_49 == 0B;
./benchmarks/git/double_free_2/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_50 = ret_49 == 0B;
./benchmarks/git/double_free_2/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_50 = ret_49 == 0B;
./benchmarks/git/double_free_2/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_50 = ret_49 == 0B;
./benchmarks/git/double_free_2/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
if (_52 != 0)
./benchmarks/git/double_free_2/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
if (_52 != 0)
./benchmarks/git/double_free_2/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
if (_52 != 0)
./benchmarks/git/double_free_2/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
if (_52 != 0)
./benchmarks/git/double_free_2/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
if (_52 != 0)
./benchmarks/git/double_free_2/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
if (_52 != 0)
./benchmarks/git/double_free_2/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
[40;35m target gimple type: ssa_name [0m
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_44 = ret_43 == 0B;
./benchmarks/git/double_free_2/../git.h:415:13: warning: use location
  415 |         if (!ret && !size)
      |             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_44 = ret_43 == 0B;
./benchmarks/git/double_free_2/../git.h:415:13: warning: use location
  415 |         if (!ret && !size)
      |             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_46 = _44 & _45;
./benchmarks/git/double_free_2/../git.h:415:18: warning: use location
  415 |         if (!ret && !size)
      |                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_46 = _44 & _45;
./benchmarks/git/double_free_2/../git.h:415:18: warning: use location
  415 |         if (!ret && !size)
      |                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_51 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_51 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_51 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_51 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_51 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_51 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_45 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:415:21: warning: use location
  415 |         if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_45 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:415:21: warning: use location
  415 |         if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:4 [0m
[40;31m  	free count:4 [0m
[40;31m  	possible double free [Looserules]:4 [0m
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff99405bb40
    type <integer_type 0x7ff9945175e8 int public SI
        size <integer_cst 0x7ff994502df8 constant 32>
        unit-size <integer_cst 0x7ff994502e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff9945175e8 precision:32 min <integer_cst 0x7ff994502db0 -2147483648> max <integer_cst 0x7ff994502dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff99451e9d8>>
   
    def_stmt _22 = st_mult (1, _21);
    version:22>
# .MEM_38 = VDEF <.MEM_31>
_22 = st_mult (1, _21);

 ================== pre trace ptable ================== 
trace fucntion name:st_mult 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function st_mult
 
 Start check Pointer Collect  

======================================================================
# .MEM_38 = VDEF <.MEM_31>
_22 = st_mult (1, _21);
_22 = st_mult (1, _21);
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^
this stmt call this function :st_mult
trace fucntion name:st_mult 

 ================== trace ================== 
trace fucntion free:0 
_23 = (long unsigned int) _22;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_51 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^
if (_52 != 0)
./benchmarks/git/double_free_2/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
this stmt call this function :realloc

 ================== find free stmt ================== 
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: use location
[40;32m    FIND REALLOC STMT count:1 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find free stmt ================== 
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----
_65 = ret_55;
lto1: warning: use location
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^
_24 = sb_29(D)->buf;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
this stmt call this function :realloc

 ================== find free stmt ================== 
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: use location
[40;32m    FIND REALLOC STMT count:2 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find free stmt ================== 
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
this stmt call this function :realloc

 ================== find free stmt ================== 
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: use location
[40;32m    FIND REALLOC STMT count:3 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find free stmt ================== 
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----
if (ret_48 == 0B)
./benchmarks/git/double_free_2/../git.h:417:12: warning: use location
  417 |         if (!ret) {
      |            ^
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
this stmt call this function :realloc

 ================== find free stmt ================== 
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: use location
[40;32m    FIND REALLOC STMT count:4 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find free stmt ================== 
_44 = ret_43 == 0B;
./benchmarks/git/double_free_2/../git.h:415:13: warning: use location
  415 |         if (!ret && !size)
      |             ^
_46 = _44 & _45;
./benchmarks/git/double_free_2/../git.h:415:18: warning: use location
  415 |         if (!ret && !size)
      |                  ^
_21 = sb_29(D)->alloc;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^
sb_29(D)->alloc = _20;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^
sb_29(D)->alloc = _20;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_18 = sb_29(D)->alloc;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_19 = alloc_nr (_18);
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
this stmt call this function :alloc_nr
trace fucntion name:alloc_nr 

 ================== trace ================== 
trace fucntion free:4 
sb_29(D)->alloc = _17;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
sb_29(D)->alloc = _17;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_15 = sb_29(D)->len;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_16 = _15 + extra_30(D);
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_12 = sb_29(D)->len;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_13 = _12 + extra_30(D);
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_9 = sb_29(D)->alloc;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_10 = alloc_nr (_9);
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
this stmt call this function :alloc_nr
trace fucntion name:alloc_nr 

 ================== trace ================== 
trace fucntion free:4 
_11 = (long unsigned int) _10;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_8 = sb_29(D)->alloc;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^
_5 = sb_29(D)->len;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_4 = sb_29(D)->len;
./benchmarks/git/double_free_2/git_df_2.c:21:38: warning: use location
   21 |         if (sb->len + extra + 1 <= sb->len)
      |                                      ^
_1 = sb_29(D)->len;
./benchmarks/git/double_free_2/git_df_2.c:21:15: warning: use location
   21 |         if (sb->len + extra + 1 <= sb->len)
      |               ^
_50 = ret_49 == 0B;
./benchmarks/git/double_free_2/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^
_45 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:415:21: warning: use location
  415 |         if (!ret && !size)
      |                     ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff99405bb40
    type <integer_type 0x7ff9945175e8 int public SI
        size <integer_cst 0x7ff994502df8 constant 32>
        unit-size <integer_cst 0x7ff994502e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff9945175e8 precision:32 min <integer_cst 0x7ff994502db0 -2147483648> max <integer_cst 0x7ff994502dc8 2147483647>
        pointer_to_this <pointer_type 0x7ff99451e9d8>>
   
    def_stmt _22 = st_mult (1, _21);
    version:22>

 ================================================================= 
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_51 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_51 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_51 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_51 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_51 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_51 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
if (_52 != 0)
./benchmarks/git/double_free_2/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
if (_52 != 0)
./benchmarks/git/double_free_2/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
if (_52 != 0)
./benchmarks/git/double_free_2/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
if (_52 != 0)
./benchmarks/git/double_free_2/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
if (_52 != 0)
./benchmarks/git/double_free_2/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
if (_52 != 0)
./benchmarks/git/double_free_2/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
[40;35m target gimple type: ssa_name [0m
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
[40;35m target gimple type: ssa_name [0m
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_65 = ret_55;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
_65 = ret_55;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_65 = ret_55;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_65 = ret_55;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
[40;35m target gimple type: ssa_name [0m
_65 = ret_55;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_65 = ret_55;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_65 = ret_55;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
_65 = ret_55;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
[40;35m target gimple type: ssa_name [0m
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
if (ret_48 == 0B)
./benchmarks/git/double_free_2/../git.h:417:12: warning: use location
  417 |         if (!ret) {
      |            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
if (ret_48 == 0B)
./benchmarks/git/double_free_2/../git.h:417:12: warning: use location
  417 |         if (!ret) {
      |            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
if (ret_48 == 0B)
./benchmarks/git/double_free_2/../git.h:417:12: warning: use location
  417 |         if (!ret) {
      |            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
if (ret_48 == 0B)
./benchmarks/git/double_free_2/../git.h:417:12: warning: use location
  417 |         if (!ret) {
      |            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_44 = ret_43 == 0B;
./benchmarks/git/double_free_2/../git.h:415:13: warning: use location
  415 |         if (!ret && !size)
      |             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_44 = ret_43 == 0B;
./benchmarks/git/double_free_2/../git.h:415:13: warning: use location
  415 |         if (!ret && !size)
      |             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_46 = _44 & _45;
./benchmarks/git/double_free_2/../git.h:415:18: warning: use location
  415 |         if (!ret && !size)
      |                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_46 = _44 & _45;
./benchmarks/git/double_free_2/../git.h:415:18: warning: use location
  415 |         if (!ret && !size)
      |                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_50 = ret_49 == 0B;
./benchmarks/git/double_free_2/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_50 = ret_49 == 0B;
./benchmarks/git/double_free_2/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_50 = ret_49 == 0B;
./benchmarks/git/double_free_2/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_50 = ret_49 == 0B;
./benchmarks/git/double_free_2/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_50 = ret_49 == 0B;
./benchmarks/git/double_free_2/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_50 = ret_49 == 0B;
./benchmarks/git/double_free_2/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_45 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:415:21: warning: use location
  415 |         if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_45 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:415:21: warning: use location
  415 |         if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:4 [0m
[40;31m  	free count:4 [0m
[40;31m  	possible double free [Looserules]:4 [0m
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff99405d4c8
    type <pointer_type 0x7ff99451e000
        type <void_type 0x7ff994517f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff99451e000>>
        public unsigned DI
        size <integer_cst 0x7ff994502bb8 constant 64>
        unit-size <integer_cst 0x7ff994502bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff9945239d8>>
    var <var_decl 0x7ff994058d80 ret>
    def_stmt ret_43 = realloc (_24, _23);
    version:43
    ptr-info 0x7ff994011ae0>
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);

 ================== pre trace ptable ================== 
trace fucntion name:realloc 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Reserved word function :realloc
 
 Start check Pointer Collect  

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :realloc
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----
_65 = ret_55;
lto1: warning: use location
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^
_24 = sb_29(D)->buf;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_21 = sb_29(D)->alloc;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_22 = st_mult (1, _21);
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
this stmt call this function :st_mult
trace fucntion name:st_mult 

 ================== trace ================== 
trace fucntion free:0 
sb_29(D)->alloc = _20;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^
sb_29(D)->alloc = _20;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_18 = sb_29(D)->alloc;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_19 = alloc_nr (_18);
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
this stmt call this function :alloc_nr
trace fucntion name:alloc_nr 

 ================== trace ================== 
trace fucntion free:0 
sb_29(D)->alloc = _17;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
sb_29(D)->alloc = _17;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_15 = sb_29(D)->len;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_16 = _15 + extra_30(D);
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_12 = sb_29(D)->len;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_13 = _12 + extra_30(D);
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_9 = sb_29(D)->alloc;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_10 = alloc_nr (_9);
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
this stmt call this function :alloc_nr
trace fucntion name:alloc_nr 

 ================== trace ================== 
trace fucntion free:0 
_11 = (long unsigned int) _10;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_8 = sb_29(D)->alloc;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^
_5 = sb_29(D)->len;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_4 = sb_29(D)->len;
./benchmarks/git/double_free_2/git_df_2.c:21:38: warning: use location
   21 |         if (sb->len + extra + 1 <= sb->len)
      |                                      ^
_1 = sb_29(D)->len;
./benchmarks/git/double_free_2/git_df_2.c:21:15: warning: use location
   21 |         if (sb->len + extra + 1 <= sb->len)
      |               ^
if (ret_54 == 0B)
./benchmarks/git/double_free_2/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

======================================================================

 Expand conflict 
 The same function may have multiple branches :realloc
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
_50 = ret_49 == 0B;
./benchmarks/git/double_free_2/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^
if (_52 != 0)
./benchmarks/git/double_free_2/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

======================================================================

 Expand conflict 
 The same function may have multiple branches :realloc
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
this stmt call this function :realloc

 ================== find free stmt ================== 
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: use location
[40;32m    FIND REALLOC STMT count:1 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find free stmt ================== 
_44 = ret_43 == 0B;
./benchmarks/git/double_free_2/../git.h:415:13: warning: use location
  415 |         if (!ret && !size)
      |             ^
_46 = _44 & _45;
./benchmarks/git/double_free_2/../git.h:415:18: warning: use location
  415 |         if (!ret && !size)
      |                  ^
_51 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^
_45 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:415:21: warning: use location
  415 |         if (!ret && !size)
      |                     ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff99405d4c8
    type <pointer_type 0x7ff99451e000
        type <void_type 0x7ff994517f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff99451e000>>
        public unsigned DI
        size <integer_cst 0x7ff994502bb8 constant 64>
        unit-size <integer_cst 0x7ff994502bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff9945239d8>>
    var <var_decl 0x7ff994058d80 ret>
    def_stmt ret_43 = realloc (_24, _23);
    version:43
    ptr-info 0x7ff994011ae0>

 ================================================================= 
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
[40;35m target gimple type: ssa_name [0m
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
[40;35m target gimple type: ssa_name [0m
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_65 = ret_55;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
[40;35m target gimple type: ssa_name [0m
_65 = ret_55;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_65 = ret_55;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_65 = ret_55;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
_65 = ret_55;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
if (ret_54 == 0B)
./benchmarks/git/double_free_2/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
if (ret_54 == 0B)
./benchmarks/git/double_free_2/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
if (ret_54 == 0B)
./benchmarks/git/double_free_2/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
if (ret_54 == 0B)
./benchmarks/git/double_free_2/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
if (ret_54 == 0B)
./benchmarks/git/double_free_2/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_50 = ret_49 == 0B;
./benchmarks/git/double_free_2/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_50 = ret_49 == 0B;
./benchmarks/git/double_free_2/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_50 = ret_49 == 0B;
./benchmarks/git/double_free_2/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_50 = ret_49 == 0B;
./benchmarks/git/double_free_2/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
if (_52 != 0)
./benchmarks/git/double_free_2/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
if (_52 != 0)
./benchmarks/git/double_free_2/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
if (_52 != 0)
./benchmarks/git/double_free_2/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
if (_52 != 0)
./benchmarks/git/double_free_2/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
[40;35m target gimple type: ssa_name [0m
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_44 = ret_43 == 0B;
./benchmarks/git/double_free_2/../git.h:415:13: warning: use location
  415 |         if (!ret && !size)
      |             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_44 = ret_43 == 0B;
./benchmarks/git/double_free_2/../git.h:415:13: warning: use location
  415 |         if (!ret && !size)
      |             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_46 = _44 & _45;
./benchmarks/git/double_free_2/../git.h:415:18: warning: use location
  415 |         if (!ret && !size)
      |                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_46 = _44 & _45;
./benchmarks/git/double_free_2/../git.h:415:18: warning: use location
  415 |         if (!ret && !size)
      |                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_51 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_51 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_51 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_51 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_45 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:415:21: warning: use location
  415 |         if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_45 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:415:21: warning: use location
  415 |         if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:4 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:4 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff99405d5e8
    type <pointer_type 0x7ff99451e000
        type <void_type 0x7ff994517f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff99451e000>>
        public unsigned DI
        size <integer_cst 0x7ff994502bb8 constant 64>
        unit-size <integer_cst 0x7ff994502bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff9945239d8>>
    var <var_decl 0x7ff994058d80 ret>
    def_stmt ret_47 = realloc (_24, 1);
    version:47
    ptr-info 0x7ff994011af8>
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);

 ================== pre trace ptable ================== 
trace fucntion name:realloc 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Reserved word function :realloc
 
 Start check Pointer Collect  

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :realloc
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----
_65 = ret_55;
lto1: warning: use location
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^
_24 = sb_29(D)->buf;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_21 = sb_29(D)->alloc;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_22 = st_mult (1, _21);
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
this stmt call this function :st_mult
trace fucntion name:st_mult 

 ================== trace ================== 
trace fucntion free:0 
_23 = (long unsigned int) _22;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_51 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^
if (_52 != 0)
./benchmarks/git/double_free_2/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

======================================================================

 Expand conflict 
 The same function may have multiple branches :realloc
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
_50 = ret_49 == 0B;
./benchmarks/git/double_free_2/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^
_45 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:415:21: warning: use location
  415 |         if (!ret && !size)
      |                     ^
_46 = _44 & _45;
./benchmarks/git/double_free_2/../git.h:415:18: warning: use location
  415 |         if (!ret && !size)
      |                  ^

======================================================================

 Expand conflict 
 The same function may have multiple branches :realloc
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
sb_29(D)->alloc = _20;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^
sb_29(D)->alloc = _20;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_18 = sb_29(D)->alloc;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_19 = alloc_nr (_18);
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
this stmt call this function :alloc_nr
trace fucntion name:alloc_nr 

 ================== trace ================== 
trace fucntion free:0 
sb_29(D)->alloc = _17;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
sb_29(D)->alloc = _17;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_15 = sb_29(D)->len;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_16 = _15 + extra_30(D);
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_12 = sb_29(D)->len;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_13 = _12 + extra_30(D);
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_9 = sb_29(D)->alloc;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_10 = alloc_nr (_9);
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
this stmt call this function :alloc_nr
trace fucntion name:alloc_nr 

 ================== trace ================== 
trace fucntion free:0 
_11 = (long unsigned int) _10;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_8 = sb_29(D)->alloc;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^
_5 = sb_29(D)->len;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_4 = sb_29(D)->len;
./benchmarks/git/double_free_2/git_df_2.c:21:38: warning: use location
   21 |         if (sb->len + extra + 1 <= sb->len)
      |                                      ^
_1 = sb_29(D)->len;
./benchmarks/git/double_free_2/git_df_2.c:21:15: warning: use location
   21 |         if (sb->len + extra + 1 <= sb->len)
      |               ^
if (ret_54 == 0B)
./benchmarks/git/double_free_2/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
this stmt call this function :realloc

 ================== find free stmt ================== 
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: use location
[40;32m    FIND REALLOC STMT count:1 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find free stmt ================== 
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff99405d5e8
    type <pointer_type 0x7ff99451e000
        type <void_type 0x7ff994517f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff99451e000>>
        public unsigned DI
        size <integer_cst 0x7ff994502bb8 constant 64>
        unit-size <integer_cst 0x7ff994502bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff9945239d8>>
    var <var_decl 0x7ff994058d80 ret>
    def_stmt ret_47 = realloc (_24, 1);
    version:47
    ptr-info 0x7ff994011af8>

 ================================================================= 
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_65 = ret_55;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_65 = ret_55;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_65 = ret_55;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_65 = ret_55;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
_65 = ret_55;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_51 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_51 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_51 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_51 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
if (_52 != 0)
./benchmarks/git/double_free_2/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
if (_52 != 0)
./benchmarks/git/double_free_2/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
if (_52 != 0)
./benchmarks/git/double_free_2/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
if (_52 != 0)
./benchmarks/git/double_free_2/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_50 = ret_49 == 0B;
./benchmarks/git/double_free_2/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_50 = ret_49 == 0B;
./benchmarks/git/double_free_2/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_50 = ret_49 == 0B;
./benchmarks/git/double_free_2/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_50 = ret_49 == 0B;
./benchmarks/git/double_free_2/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_45 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:415:21: warning: use location
  415 |         if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_46 = _44 & _45;
./benchmarks/git/double_free_2/../git.h:415:18: warning: use location
  415 |         if (!ret && !size)
      |                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
if (ret_54 == 0B)
./benchmarks/git/double_free_2/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
if (ret_54 == 0B)
./benchmarks/git/double_free_2/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
if (ret_54 == 0B)
./benchmarks/git/double_free_2/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
if (ret_54 == 0B)
./benchmarks/git/double_free_2/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
if (ret_54 == 0B)
./benchmarks/git/double_free_2/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:4 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:4 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff99405d678
    type <pointer_type 0x7ff99451e000
        type <void_type 0x7ff994517f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff99451e000>>
        public unsigned DI
        size <integer_cst 0x7ff994502bb8 constant 64>
        unit-size <integer_cst 0x7ff994502bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff9945239d8>>
    var <var_decl 0x7ff994058d80 ret>
    def_stmt ret_49 = realloc (_24, _23);
    version:49
    ptr-info 0x7ff994011ba0>
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);

 ================== pre trace ptable ================== 
trace fucntion name:realloc 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Reserved word function :realloc
 
 Start check Pointer Collect  

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :realloc
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----
_65 = ret_55;
lto1: warning: use location
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^
_24 = sb_29(D)->buf;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_21 = sb_29(D)->alloc;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_22 = st_mult (1, _21);
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
this stmt call this function :st_mult
trace fucntion name:st_mult 

 ================== trace ================== 
trace fucntion free:0 
_23 = (long unsigned int) _22;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_51 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^
if (_52 != 0)
./benchmarks/git/double_free_2/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
this stmt call this function :realloc

 ================== find free stmt ================== 
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: use location
[40;32m    FIND REALLOC STMT count:1 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find free stmt ================== 
_50 = ret_49 == 0B;
./benchmarks/git/double_free_2/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^
_45 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:415:21: warning: use location
  415 |         if (!ret && !size)
      |                     ^
_46 = _44 & _45;
./benchmarks/git/double_free_2/../git.h:415:18: warning: use location
  415 |         if (!ret && !size)
      |                  ^

======================================================================

 Expand conflict 
 The same function may have multiple branches :realloc
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----
if (ret_48 == 0B)
./benchmarks/git/double_free_2/../git.h:417:12: warning: use location
  417 |         if (!ret) {
      |            ^
_44 = ret_43 == 0B;
./benchmarks/git/double_free_2/../git.h:415:13: warning: use location
  415 |         if (!ret && !size)
      |             ^
sb_29(D)->alloc = _20;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^
sb_29(D)->alloc = _20;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_18 = sb_29(D)->alloc;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_19 = alloc_nr (_18);
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
this stmt call this function :alloc_nr
trace fucntion name:alloc_nr 

 ================== trace ================== 
trace fucntion free:1 
sb_29(D)->alloc = _17;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
sb_29(D)->alloc = _17;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_15 = sb_29(D)->len;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_16 = _15 + extra_30(D);
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_12 = sb_29(D)->len;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_13 = _12 + extra_30(D);
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_9 = sb_29(D)->alloc;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_10 = alloc_nr (_9);
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
this stmt call this function :alloc_nr
trace fucntion name:alloc_nr 

 ================== trace ================== 
trace fucntion free:1 
_11 = (long unsigned int) _10;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_8 = sb_29(D)->alloc;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^
_5 = sb_29(D)->len;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_4 = sb_29(D)->len;
./benchmarks/git/double_free_2/git_df_2.c:21:38: warning: use location
   21 |         if (sb->len + extra + 1 <= sb->len)
      |                                      ^
_1 = sb_29(D)->len;
./benchmarks/git/double_free_2/git_df_2.c:21:15: warning: use location
   21 |         if (sb->len + extra + 1 <= sb->len)
      |               ^

======================================================================

 Expand conflict 
 The same function may have multiple branches :realloc
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff99405d678
    type <pointer_type 0x7ff99451e000
        type <void_type 0x7ff994517f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff99451e000>>
        public unsigned DI
        size <integer_cst 0x7ff994502bb8 constant 64>
        unit-size <integer_cst 0x7ff994502bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff9945239d8>>
    var <var_decl 0x7ff994058d80 ret>
    def_stmt ret_49 = realloc (_24, _23);
    version:49
    ptr-info 0x7ff994011ba0>

 ================================================================= 
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_65 = ret_55;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_65 = ret_55;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_65 = ret_55;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_65 = ret_55;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
_65 = ret_55;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_51 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_51 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_51 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_51 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
if (_52 != 0)
./benchmarks/git/double_free_2/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
if (_52 != 0)
./benchmarks/git/double_free_2/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
if (_52 != 0)
./benchmarks/git/double_free_2/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
if (_52 != 0)
./benchmarks/git/double_free_2/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_50 = ret_49 == 0B;
./benchmarks/git/double_free_2/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_50 = ret_49 == 0B;
./benchmarks/git/double_free_2/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_50 = ret_49 == 0B;
./benchmarks/git/double_free_2/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_50 = ret_49 == 0B;
./benchmarks/git/double_free_2/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_45 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:415:21: warning: use location
  415 |         if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_46 = _44 & _45;
./benchmarks/git/double_free_2/../git.h:415:18: warning: use location
  415 |         if (!ret && !size)
      |                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
if (ret_48 == 0B)
./benchmarks/git/double_free_2/../git.h:417:12: warning: use location
  417 |         if (!ret) {
      |            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
if (ret_48 == 0B)
./benchmarks/git/double_free_2/../git.h:417:12: warning: use location
  417 |         if (!ret) {
      |            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_44 = ret_43 == 0B;
./benchmarks/git/double_free_2/../git.h:415:13: warning: use location
  415 |         if (!ret && !size)
      |             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:4 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:4 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff99405d798
    type <pointer_type 0x7ff99451e000
        type <void_type 0x7ff994517f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff99451e000>>
        public unsigned DI
        size <integer_cst 0x7ff994502bb8 constant 64>
        unit-size <integer_cst 0x7ff994502bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff9945239d8>>
    var <var_decl 0x7ff994058d80 ret>
    def_stmt ret_53 = realloc (_24, 1);
    version:53
    ptr-info 0x7ff994011be8>
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);

 ================== pre trace ptable ================== 
trace fucntion name:realloc 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Reserved word function :realloc
 
 Start check Pointer Collect  

======================================================================
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
this stmt call this function :realloc

 ================== find free stmt ================== 
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: use location
[40;32m    FIND REALLOC STMT count:1 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find free stmt ================== 
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----
_65 = ret_55;
lto1: warning: use location
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^
_24 = sb_29(D)->buf;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_21 = sb_29(D)->alloc;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_22 = st_mult (1, _21);
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
this stmt call this function :st_mult
trace fucntion name:st_mult 

 ================== trace ================== 
trace fucntion free:1 
_23 = (long unsigned int) _22;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_51 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^
if (_52 != 0)
./benchmarks/git/double_free_2/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

======================================================================

 Expand conflict 
 The same function may have multiple branches :realloc
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
_45 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:415:21: warning: use location
  415 |         if (!ret && !size)
      |                     ^
_46 = _44 & _45;
./benchmarks/git/double_free_2/../git.h:415:18: warning: use location
  415 |         if (!ret && !size)
      |                  ^

======================================================================

 Expand conflict 
 The same function may have multiple branches :realloc
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----
if (ret_48 == 0B)
./benchmarks/git/double_free_2/../git.h:417:12: warning: use location
  417 |         if (!ret) {
      |            ^
_44 = ret_43 == 0B;
./benchmarks/git/double_free_2/../git.h:415:13: warning: use location
  415 |         if (!ret && !size)
      |             ^
sb_29(D)->alloc = _20;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^
sb_29(D)->alloc = _20;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_18 = sb_29(D)->alloc;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_19 = alloc_nr (_18);
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
this stmt call this function :alloc_nr
trace fucntion name:alloc_nr 

 ================== trace ================== 
trace fucntion free:1 
sb_29(D)->alloc = _17;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
sb_29(D)->alloc = _17;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_15 = sb_29(D)->len;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_16 = _15 + extra_30(D);
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_12 = sb_29(D)->len;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_13 = _12 + extra_30(D);
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_9 = sb_29(D)->alloc;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_10 = alloc_nr (_9);
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
this stmt call this function :alloc_nr
trace fucntion name:alloc_nr 

 ================== trace ================== 
trace fucntion free:1 
_11 = (long unsigned int) _10;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_8 = sb_29(D)->alloc;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^
_5 = sb_29(D)->len;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_4 = sb_29(D)->len;
./benchmarks/git/double_free_2/git_df_2.c:21:38: warning: use location
   21 |         if (sb->len + extra + 1 <= sb->len)
      |                                      ^
_1 = sb_29(D)->len;
./benchmarks/git/double_free_2/git_df_2.c:21:15: warning: use location
   21 |         if (sb->len + extra + 1 <= sb->len)
      |               ^

======================================================================

 Expand conflict 
 The same function may have multiple branches :realloc
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff99405d798
    type <pointer_type 0x7ff99451e000
        type <void_type 0x7ff994517f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff99451e000>>
        public unsigned DI
        size <integer_cst 0x7ff994502bb8 constant 64>
        unit-size <integer_cst 0x7ff994502bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff9945239d8>>
    var <var_decl 0x7ff994058d80 ret>
    def_stmt ret_53 = realloc (_24, 1);
    version:53
    ptr-info 0x7ff994011be8>

 ================================================================= 
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
[40;35m target gimple type: ssa_name [0m
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
[40;35m target gimple type: ssa_name [0m
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
[40;35m target gimple type: ssa_name [0m
_65 = ret_55;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_65 = ret_55;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_65 = ret_55;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_65 = ret_55;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
_65 = ret_55;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
[40;35m target gimple type: ssa_name [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_51 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_51 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_51 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
if (_52 != 0)
./benchmarks/git/double_free_2/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
if (_52 != 0)
./benchmarks/git/double_free_2/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
if (_52 != 0)
./benchmarks/git/double_free_2/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_45 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:415:21: warning: use location
  415 |         if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_46 = _44 & _45;
./benchmarks/git/double_free_2/../git.h:415:18: warning: use location
  415 |         if (!ret && !size)
      |                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
if (ret_48 == 0B)
./benchmarks/git/double_free_2/../git.h:417:12: warning: use location
  417 |         if (!ret) {
      |            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
if (ret_48 == 0B)
./benchmarks/git/double_free_2/../git.h:417:12: warning: use location
  417 |         if (!ret) {
      |            ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_44 = ret_43 == 0B;
./benchmarks/git/double_free_2/../git.h:415:13: warning: use location
  415 |         if (!ret && !size)
      |             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:4 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:4 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff99405b798
    type <integer_type 0x7ff9945177e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff994502bb8 constant 64>
        unit-size <integer_cst 0x7ff994502bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff994517738 precision:64 min <integer_cst 0x7ff994502e88 0> max <integer_cst 0x7ff994503500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff9945237e0>>
   
    def_stmt _9 = sb_29(D)->alloc;
    version:9>
# VUSE <.MEM_33(D)>
_9 = sb_29(D)->alloc;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_34 = VDEF <.MEM_33(D)>
_10 = alloc_nr (_9);
_10 = alloc_nr (_9);
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^
this stmt call this function :alloc_nr
trace fucntion name:alloc_nr 

 ================== trace ================== 
trace fucntion free:0 
_11 = (long unsigned int) _10;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
if (_11 < _14)
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff99405b798
    type <integer_type 0x7ff9945177e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff994502bb8 constant 64>
        unit-size <integer_cst 0x7ff994502bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff994517738 precision:64 min <integer_cst 0x7ff994502e88 0> max <integer_cst 0x7ff994503500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff9945237e0>>
   
    def_stmt _9 = sb_29(D)->alloc;
    version:9>

 ================================================================= 
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:4 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:4 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff99405ba20
    type <integer_type 0x7ff9945177e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff994502bb8 constant 64>
        unit-size <integer_cst 0x7ff994502bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff994517738 precision:64 min <integer_cst 0x7ff994502e88 0> max <integer_cst 0x7ff994503500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff9945237e0>>
   
    def_stmt _18 = sb_29(D)->alloc;
    version:18>
# VUSE <.MEM_34>
_18 = sb_29(D)->alloc;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_35 = VDEF <.MEM_34>
_19 = alloc_nr (_18);
_19 = alloc_nr (_18);
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^
this stmt call this function :alloc_nr
trace fucntion name:alloc_nr 

 ================== trace ================== 
trace fucntion free:0 
_20 = (long unsigned int) _19;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
sb_29(D)->alloc = _20;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_24 = sb_29(D)->buf;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
this stmt call this function :realloc

 ================== find free stmt ================== 
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: use location
[40;32m    FIND REALLOC STMT count:1 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find free stmt ================== 
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----
_65 = ret_55;
lto1: warning: use location
if (ret_54 == 0B)
./benchmarks/git/double_free_2/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
this stmt call this function :realloc

 ================== find free stmt ================== 
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: use location
[40;32m    FIND REALLOC STMT count:2 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find free stmt ================== 
_50 = ret_49 == 0B;
./benchmarks/git/double_free_2/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^
if (_52 != 0)
./benchmarks/git/double_free_2/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
this stmt call this function :realloc

 ================== find free stmt ================== 
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: use location
[40;32m    FIND REALLOC STMT count:3 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find free stmt ================== 
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location
this stmt have mutiple branch ---realloc-----
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
this stmt call this function :realloc

 ================== find free stmt ================== 
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: use location
[40;32m    FIND REALLOC STMT count:4 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find free stmt ================== 
_44 = ret_43 == 0B;
./benchmarks/git/double_free_2/../git.h:415:13: warning: use location
  415 |         if (!ret && !size)
      |             ^
_46 = _44 & _45;
./benchmarks/git/double_free_2/../git.h:415:18: warning: use location
  415 |         if (!ret && !size)
      |                  ^
_21 = sb_29(D)->alloc;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^
_22 = st_mult (1, _21);
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
this stmt call this function :st_mult
trace fucntion name:st_mult 

 ================== trace ================== 
trace fucntion free:4 
_23 = (long unsigned int) _22;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_51 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^
_45 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:415:21: warning: use location
  415 |         if (!ret && !size)
      |                     ^
_18 = sb_29(D)->alloc;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^
sb_29(D)->alloc = _17;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
sb_29(D)->alloc = _17;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_15 = sb_29(D)->len;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_16 = _15 + extra_30(D);
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_12 = sb_29(D)->len;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_13 = _12 + extra_30(D);
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_9 = sb_29(D)->alloc;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location

======================================================================

 Expand conflict 
 The same function may have multiple branches :alloc_nr
# .MEM_35 = VDEF <.MEM_34>
_19 = alloc_nr (_18);
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
# .MEM_34 = VDEF <.MEM_33(D)>
_10 = alloc_nr (_9);
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_11 = (long unsigned int) _10;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_8 = sb_29(D)->alloc;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^
_5 = sb_29(D)->len;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
_4 = sb_29(D)->len;
./benchmarks/git/double_free_2/git_df_2.c:21:38: warning: use location
   21 |         if (sb->len + extra + 1 <= sb->len)
      |                                      ^
_1 = sb_29(D)->len;
./benchmarks/git/double_free_2/git_df_2.c:21:15: warning: use location
   21 |         if (sb->len + extra + 1 <= sb->len)
      |               ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff99405ba20
    type <integer_type 0x7ff9945177e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff994502bb8 constant 64>
        unit-size <integer_cst 0x7ff994502bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff994517738 precision:64 min <integer_cst 0x7ff994502e88 0> max <integer_cst 0x7ff994503500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff9945237e0>>
   
    def_stmt _18 = sb_29(D)->alloc;
    version:18>

 ================================================================= 
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: use location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: use location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: use location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: use location
  420 |                         ret = realloc(ptr, 1);
      |                               ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
[40;35m target gimple type: ssa_name [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: component_ref [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: component_ref [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: component_ref [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: component_ref [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: component_ref [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: component_ref [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: component_ref [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: component_ref [0m
# .MEM_40 = VDEF <.MEM_58>
sb_29(D)->buf = _25;
./benchmarks/git/double_free_2/git_df_2.c:23:9: warning: use location
   23 |         ALLOC_GROW(sb->buf, sb->len + extra + 1, sb->alloc);    /* allocation site */
      |         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
[40;35m target gimple type: ssa_name [0m
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
ret_54 = PHI <ret_49(11), ret_53(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
[40;35m target gimple type: ssa_name [0m
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
[40;35m target gimple type: ssa_name [0m
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
ret_55 = PHI <ret_48(10), ret_54(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
[40;35m target gimple type: ssa_name [0m
_65 = ret_55;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_65 = ret_55;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_65 = ret_55;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_65 = ret_55;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
[40;35m target gimple type: ssa_name [0m
_65 = ret_55;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_65 = ret_55;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_65 = ret_55;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
_65 = ret_55;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
[40;35m target gimple type: ssa_name [0m
if (ret_54 == 0B)
./benchmarks/git/double_free_2/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
if (ret_54 == 0B)
./benchmarks/git/double_free_2/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
if (ret_54 == 0B)
./benchmarks/git/double_free_2/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
if (ret_54 == 0B)
./benchmarks/git/double_free_2/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
if (ret_54 == 0B)
./benchmarks/git/double_free_2/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
if (ret_54 == 0B)
./benchmarks/git/double_free_2/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
if (ret_54 == 0B)
./benchmarks/git/double_free_2/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
if (ret_54 == 0B)
./benchmarks/git/double_free_2/../git.h:421:20: warning: use location
  421 |                 if (!ret)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_50 = ret_49 == 0B;
./benchmarks/git/double_free_2/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_50 = ret_49 == 0B;
./benchmarks/git/double_free_2/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_50 = ret_49 == 0B;
./benchmarks/git/double_free_2/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_50 = ret_49 == 0B;
./benchmarks/git/double_free_2/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_50 = ret_49 == 0B;
./benchmarks/git/double_free_2/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_50 = ret_49 == 0B;
./benchmarks/git/double_free_2/../git.h:419:21: warning: use location
  419 |                 if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
if (_52 != 0)
./benchmarks/git/double_free_2/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
if (_52 != 0)
./benchmarks/git/double_free_2/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
if (_52 != 0)
./benchmarks/git/double_free_2/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
if (_52 != 0)
./benchmarks/git/double_free_2/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
if (_52 != 0)
./benchmarks/git/double_free_2/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
if (_52 != 0)
./benchmarks/git/double_free_2/../git.h:419:20: warning: use location
  419 |                 if (!ret && !size)
      |                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
[40;35m target gimple type: ssa_name [0m
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_62 = VDEF <.MEM_61>
ret_53 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:420:31: warning: free in this location
  420 |                         ret = realloc(ptr, 1);
      |                               ^
[40;35m target gimple type: ssa_name [0m
ret_48 = PHI <ret_43(8), ret_47(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_44 = ret_43 == 0B;
./benchmarks/git/double_free_2/../git.h:415:13: warning: use location
  415 |         if (!ret && !size)
      |             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_44 = ret_43 == 0B;
./benchmarks/git/double_free_2/../git.h:415:13: warning: use location
  415 |         if (!ret && !size)
      |             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_46 = _44 & _45;
./benchmarks/git/double_free_2/../git.h:415:18: warning: use location
  415 |         if (!ret && !size)
      |                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_46 = _44 & _45;
./benchmarks/git/double_free_2/../git.h:415:18: warning: use location
  415 |         if (!ret && !size)
      |                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_51 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_51 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_51 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_51 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_59>
ret_47 = realloc (_24, 1);
./benchmarks/git/double_free_2/../git.h:416:23: warning: free in this location
  416 |                 ret = realloc(ptr, 1);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_51 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_56>
ret_49 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:418:23: warning: free in this location
  418 |                 ret = realloc(ptr, size);
      |                       ^
[40;35m target gimple type: ssa_name [0m
_51 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:419:29: warning: use location
  419 |                 if (!ret && !size)
      |                             ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_45 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:415:21: warning: use location
  415 |         if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_38>
ret_43 = realloc (_24, _23);
./benchmarks/git/double_free_2/../git.h:414:15: warning: free in this location
  414 |         ret = realloc(ptr, size);
      |               ^
[40;35m target gimple type: ssa_name [0m
_45 = _23 == 0;
./benchmarks/git/double_free_2/../git.h:415:21: warning: use location
  415 |         if (!ret && !size)
      |                     ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:4 [0m
[40;31m  	free count:4 [0m
[40;31m  	possible double free [Looserules]:4 [0m
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff99405baf8
    type <integer_type 0x7ff9945177e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ff994502bb8 constant 64>
        unit-size <integer_cst 0x7ff994502bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff994517738 precision:64 min <integer_cst 0x7ff994502e88 0> max <integer_cst 0x7ff994503500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ff9945237e0>>
   
    def_stmt _21 = sb_29(D)->alloc;
    version:21>
# VUSE <.MEM_31>
_21 = sb_29(D)->alloc;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:strbuf_grow========= [0m
fucntion collect path finsh

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 2756800]:
strbuf_init (&buf, 0);
strbuf_init (&uq, 0);
goto <bb 59>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 114969115]:
_5 = __errno_location ();
*_5 = 0;
_6 = buf.buf;
_51 = 8;
_52 = _6 + _51;
ptr_162 = _52;
_53 = 8;
_133 = _53;
ul_7 = _133;
_8 = buf.buf;
_9 = ptr_162;
if (_8 == _9)
  goto <bb 7>; [0.04%]
else
  goto <bb 4>; [99.96%]

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 114923127]:
_10 = ptr_162;
_11 = *_10;
if (_11 != 32)
  goto <bb 7>; [0.04%]
else
  goto <bb 5>; [99.96%]

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 114877158]:
_12 = __errno_location ();
_13 = *_12;
if (_13 != 0)
  goto <bb 7>; [0.04%]
else
  goto <bb 6>; [99.96%]

=======is loop:1=========

 bb index 6 
<bb 6> [local count: 114831208]:
_14 = ul_7 & 4294967295;
if (ul_7 != _14)
  goto <bb 7>; [0.04%]
else
  goto <bb 8>; [99.96%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 183840]:
// predicted unlikely by goto predictor.
goto <bb 57>; [100.00%]

=======is loop:1=========

 bb index 8 
<bb 8> [local count: 114785275]:
mode_15 = (unsigned int) ul_7;
_16 = ptr_162;
tab_17 = strchr (_16, 9);
if (tab_17 == 0B)
  goto <bb 10>; [0.04%]
else
  goto <bb 9>; [99.96%]

=======is loop:1=========

 bb index 9 
<bb 9> [local count: 114739361]:
_18 = ptr_162;
_19 = tab_17 - _18;
if (_19 <= 40)
  goto <bb 10>; [0.04%]
else
  goto <bb 11>; [99.96%]

=======is loop:0=========

 bb index 10 
<bb 10> [local count: 91810]:
// predicted unlikely by goto predictor.
goto <bb 57>; [100.00%]

=======is loop:1=========

 bb index 11 
<bb 11> [local count: 114693465]:
_20 = MEM[(char *)tab_17 + -2B];
if (_20 == 32)
  goto <bb 12>; [34.00%]
else
  goto <bb 15>; [66.00%]

=======is loop:1=========

 bb index 12 
<bb 12> [local count: 38995779]:
_21 = MEM[(char *)tab_17 + -1B];
if (_21 > 47)
  goto <bb 13>; [50.00%]
else
  goto <bb 15>; [50.00%]

=======is loop:1=========

 bb index 13 
<bb 13> [local count: 19497889]:
_22 = MEM[(char *)tab_17 + -1B];
if (_22 <= 51)
  goto <bb 14>; [50.00%]
else
  goto <bb 15>; [50.00%]

=======is loop:1=========

 bb index 14 
<bb 14> [local count: 9748945]:
_23 = MEM[(char *)tab_17 + -1B];
_24 = (int) _23;
stage_25 = _24 + -48;
_26 = tab_17 + 1;
ptr_163 = _26;
tab_27 = tab_17 + 18446744073709551614;
goto <bb 16>; [100.00%]

=======is loop:1=========

 bb index 15 
<bb 15> [local count: 104944521]:
_28 = tab_17 + 1;
ptr_164 = _28;

=======is loop:1=========

 bb index 16 
<bb 16> [local count: 114693466]:
# tab_29 = PHI <tab_27(14), tab_17(15)>
# stage_45 = PHI <stage_25(14), 0(15)>
# ptr_161 = PHI <ptr_163(14), ptr_164(15)>
_30 = tab_29 + 18446744073709551576;
_31 = get_sha1_hex (_30, &sha1);
if (_31 != 0)
  goto <bb 18>; [0.04%]
else
  goto <bb 17>; [99.96%]

=======is loop:1=========

 bb index 17 
<bb 17> [local count: 114647588]:
_32 = MEM[(char *)tab_29 + -41B];
if (_32 != 32)
  goto <bb 18>; [0.04%]
else
  goto <bb 19>; [99.96%]

=======is loop:0=========

 bb index 18 
<bb 18> [local count: 91736]:
// predicted unlikely by goto predictor.
goto <bb 57>; [100.00%]

=======is loop:1=========

 bb index 19 
<bb 19> [local count: 114601729]:
path_name_33 = ptr_161;
if (line_2(D) != 0)
  goto <bb 20>; [67.00%]
else
  goto <bb 47>; [33.00%]

=======is loop:1=========

 bb index 20 
<bb 20> [local count: 76783159]:
_34 = *path_name_33;
if (_34 == 34)
  goto <bb 21>; [20.24%]
else
  goto <bb 47>; [79.76%]

=======is loop:1=========

 bb index 21 
<bb 21> [local count: 15540911]:
_80 = uq.len;
if (_80 != 0)
  goto <bb 22>; [33.00%]
else
  goto <bb 23>; [67.00%]

=======is loop:1=========

 bb index 22 
<bb 22> [local count: 5128501]:
strbuf_setlen (&uq, 0);

=======is loop:1=========

 bb index 23 
<bb 23> [local count: 15540911]:
oldlen_54 = uq.len;
quoted_55 = path_name_33 + 1;
_56 = MEM[(const char *)path_name_33];
if (_56 != 34)
  goto <bb 44>; [2.00%]
else
  goto <bb 24>; [98.00%]

=======is loop:1=========

 bb index 24 
<bb 24> [local count: 21677141]:
# quoted_57 = PHI <quoted_55(23), quoted_79(42)>
len_58 = strcspn (quoted_57, "\"\\");
strbuf_grow (&uq, len_58);
_81 = uq.buf;
_82 = uq.len;
_83 = _81 + _82;
memcpy (_83, quoted_57, len_58);
_84 = uq.len;
_85 = len_58 + _84;
strbuf_setlen (&uq, _85);
quoted_59 = quoted_57 + len_58;
_60 = *quoted_59;
switch (_60) <default: <L2> [33.33%], case 34: <L15> [33.33%], case 92: <L3> [33.33%]>

=======is loop:1=========

 bb index 25 
<bb 25> [local count: 7225714]:
<L2>:
// predicted unlikely by goto predictor.
goto <bb 43>; [100.00%]

=======is loop:1=========

 bb index 26 
<bb 26> [local count: 7225714]:
<L3>:
quoted_62 = &MEM <const char> [(void *)quoted_59 + 2B];
_63 = MEM[(const char *)quoted_59 + 1B];
ch_64 = (int) _63;
switch (_63) <default: <L12> [10.00%], case 34: <L13> [10.00%], case 48 ... 51: <L11> [10.00%], case 92: <L13> [10.00%], case 97: <L4> [10.00%], case 98: <L5> [10.00%], case 102: <L6> [10.00%], case 110: <L7> [10.00%], case 114: <L8> [10.00%], case 116: <L9> [10.00%], case 118: <L10> [10.00%]>

=======is loop:1=========

 bb index 27 
<bb 27> [local count: 722571]:
<L4>:
goto <bb 42>; [100.00%]

=======is loop:1=========

 bb index 28 
<bb 28> [local count: 722571]:
<L5>:
goto <bb 42>; [100.00%]

=======is loop:1=========

 bb index 29 
<bb 29> [local count: 722571]:
<L6>:
goto <bb 42>; [100.00%]

=======is loop:1=========

 bb index 30 
<bb 30> [local count: 722571]:
<L7>:
goto <bb 42>; [100.00%]

=======is loop:1=========

 bb index 31 
<bb 31> [local count: 722571]:
<L8>:
goto <bb 42>; [100.00%]

=======is loop:1=========

 bb index 32 
<bb 32> [local count: 722571]:
<L9>:
goto <bb 42>; [100.00%]

=======is loop:1=========

 bb index 33 
<bb 33> [local count: 722571]:
<L10>:
goto <bb 42>; [100.00%]

=======is loop:1=========

 bb index 34 
<bb 34> [local count: 722571]:
<L11>:
_65 = ch_64 + -48;
ac_66 = _65 << 6;
_67 = MEM[(const char *)quoted_59 + 2B];
ch_68 = (int) _67;
if (ch_68 <= 47)
  goto <bb 36>; [2.00%]
else
  goto <bb 35>; [98.00%]

=======is loop:1=========

 bb index 35 
<bb 35> [local count: 708120]:
if (ch_68 > 55)
  goto <bb 36>; [2.00%]
else
  goto <bb 37>; [98.00%]

=======is loop:1=========

 bb index 36 
<bb 36> [local count: 28614]:
// predicted unlikely by goto predictor.
goto <bb 43>; [100.00%]

=======is loop:1=========

 bb index 37 
<bb 37> [local count: 693958]:
_69 = ch_68 + -48;
_70 = _69 << 3;
ac_71 = ac_66 | _70;
quoted_72 = &MEM <const char> [(void *)quoted_59 + 4B];
_73 = MEM[(const char *)quoted_59 + 3B];
ch_74 = (int) _73;
if (ch_74 <= 47)
  goto <bb 39>; [2.00%]
else
  goto <bb 38>; [98.00%]

=======is loop:1=========

 bb index 38 
<bb 38> [local count: 680078]:
if (ch_74 > 55)
  goto <bb 39>; [2.00%]
else
  goto <bb 40>; [98.00%]

=======is loop:1=========

 bb index 39 
<bb 39> [local count: 27481]:
// predicted unlikely by goto predictor.
goto <bb 43>; [100.00%]

=======is loop:1=========

 bb index 40 
<bb 40> [local count: 666477]:
_75 = ch_74 + -48;
ac_76 = ac_71 | _75;
goto <bb 42>; [100.00%]

=======is loop:1=========

 bb index 41 
<bb 41> [local count: 722571]:
<L12>:
// predicted unlikely by goto predictor.
goto <bb 43>; [100.00%]

=======is loop:1=========

 bb index 42 
<bb 42> [local count: 6447048]:
# quoted_79 = PHI <quoted_62(26), quoted_62(27), quoted_62(28), quoted_62(29), quoted_62(30), quoted_62(31), quoted_62(32), quoted_62(33), quoted_72(40)>
# ch_77 = PHI <ch_64(26), 7(27), 8(28), 12(29), 10(30), 13(31), 9(32), 11(33), ac_76(40)>
<L13>:
strbuf_addch (&uq, ch_77);
goto <bb 24>; [100.00%]

=======is loop:1=========

 bb index 43 
<bb 43> [local count: 8004380]:
error:
strbuf_setlen (&uq, oldlen_54);

=======is loop:1=========

 bb index 44 
<bb 44> [local count: 15540912]:
# _78 = PHI <-1(23), 0(24), -1(43)>
<L15>:
_143 = _78;
_35 = _143;
if (_35 != 0)
  goto <bb 45>; [0.04%]
else
  goto <bb 46>; [99.96%]

=======is loop:0=========

 bb index 45 
<bb 45> [local count: 6216]:
printf ("git-update-index: bad quoting of path name%s", "");
exit (1);

=======is loop:1=========

 bb index 46 
<bb 46> [local count: 15534695]:
path_name_36 = uq.buf;

=======is loop:1=========

 bb index 47 
<bb 47> [local count: 114595514]:
# path_name_37 = PHI <path_name_33(19), path_name_33(20), path_name_36(46)>
_38 = verify_path (path_name_37);
if (_38 == 0)
  goto <bb 48>; [19.52%]
else
  goto <bb 49>; [80.48%]

=======is loop:1=========

 bb index 48 
<bb 48> [local count: 22369045]:
_39 = stderr;
fprintf (_39, "Ignoring path %s\n", path_name_37);
// predicted unlikely by continue predictor.
goto <bb 58>; [100.00%]

=======is loop:1=========

 bb index 49 
<bb 49> [local count: 92226469]:
if (mode_15 == 0)
  goto <bb 50>; [50.00%]
else
  goto <bb 52>; [50.00%]

=======is loop:1=========

 bb index 50 
<bb 50> [local count: 46113234]:
_40 = remove_file_from_cache (path_name_37);
if (_40 != 0)
  goto <bb 51>; [0.04%]
else
  goto <bb 54>; [99.96%]

=======is loop:0=========

 bb index 51 
<bb 51> [local count: 18445]:
_41 = ptr_161;
printf ("git-update-index: unable to remove %s", _41);
exit (1);

=======is loop:1=========

 bb index 52 
<bb 52> [local count: 46113234]:
_42 = ptr_161;
MEM[(char *)_42 + -1B] = 0;
_43 = ptr_161;
_44 = MEM[(char *)_42 + -1B];
MEM[(char *)_43 + -42B] = _44;
_46 = add_cacheinfo (mode_15, &sha1, path_name_37, stage_45);
if (_46 != 0)
  goto <bb 53>; [0.04%]
else
  goto <bb 54>; [99.96%]

=======is loop:0=========

 bb index 53 
<bb 53> [local count: 18445]:
printf ("git-update-index: unable to update %s", path_name_37);
exit (1);

=======is loop:1=========

 bb index 54 
<bb 54> [local count: 92189578]:
_47 = ptr_161;
if (path_name_37 != _47)
  goto <bb 55>; [53.47%]
else
  goto <bb 56>; [46.53%]

=======is loop:1=========

 bb index 55 
<bb 55> [local count: 49293767]:
free (path_name_37);

=======is loop:1=========

 bb index 56 
<bb 56> [local count: 92189578]:
// predicted unlikely by continue predictor.
goto <bb 58>; [100.00%]

=======is loop:0=========

 bb index 57 
<bb 57> [local count: 367386]:
bad_line:
_48 = buf.buf;
printf ("malformed index info %s", _48);
exit (1);

=======is loop:1=========

 bb index 58 
<bb 58> [local count: 114558623]:
sha1 ={v} {CLOBBER};

=======is loop:1=========

 bb index 59 
<bb 59> [local count: 117315423]:
_49 = stdin;
strbuf_grow (&buf, 0);
_86 = feof (_49);
if (_86 != 0)
  goto <bb 69>; [2.09%]
else
  goto <bb 60>; [97.91%]

=======is loop:1=========

 bb index 60 
<bb 60> [local count: 114863530]:
_98 = buf.len;
if (_98 != 0)
  goto <bb 61>; [33.00%]
else
  goto <bb 62>; [67.00%]

=======is loop:1=========

 bb index 61 
<bb 61> [local count: 37904965]:
strbuf_setlen (&buf, 0);

=======is loop:1=========

 bb index 62 
<bb 62> [local count: 114863530]:
goto <bb 65>; [100.00%]

=======is loop:1=========

 bb index 63 
<bb 63> [local count: 1014686025]:
if (line_2(D) == ch_87)
  goto <bb 66>; [5.50%]
else
  goto <bb 64>; [94.50%]

=======is loop:1=========

 bb index 64 
<bb 64> [local count: 958878294]:
strbuf_grow (&buf, 1);
_88 = buf.buf;
_89 = buf.len;
_90 = _89 + 1;
buf.len = _90;
_91 = _88 + _89;
_92 = (char) ch_87;
*_91 = _92;

=======is loop:1=========

 bb index 65 
<bb 65> [local count: 1073741824]:
ch_87 = fgetc (_49);
if (ch_87 != -1)
  goto <bb 63>; [94.50%]
else
  goto <bb 66>; [5.50%]

=======is loop:1=========

 bb index 66 
<bb 66> [local count: 114863531]:
if (ch_87 == -1)
  goto <bb 67>; [34.00%]
else
  goto <bb 68>; [66.00%]

=======is loop:1=========

 bb index 67 
<bb 67> [local count: 39053601]:
_93 = buf.len;
if (_93 == 0)
  goto <bb 69>; [1.04%]
else
  goto <bb 68>; [98.96%]

=======is loop:1=========

 bb index 68 
<bb 68> [local count: 114457374]:
_94 = buf.buf;
_95 = buf.len;
_96 = _94 + _95;
*_96 = 0;

=======is loop:1=========

 bb index 69 
<bb 69> [local count: 117315424]:
# _97 = PHI <-1(59), -1(67), 0(68)>
_124 = _97;
_50 = _124;
if (_50 != -1)
  goto <bb 3>; [98.00%]
else
  goto <bb 70>; [2.00%]

=======is loop:0=========

 bb index 70 
<bb 70> [local count: 2346309]:
_100 = buf.buf;
free (_100);
memset (&buf, 0, 24);
_99 = uq.buf;
free (_99);
memset (&uq, 0, 24);
buf ={v} {CLOBBER};
uq ={v} {CLOBBER};
return 0;

=======Mapping node_fun:strtoul=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = (sizetype) base_3(D);
_2 = str_4(D) + _1;
*endptr_6(D) = _2;
_8 = (long unsigned int) base_3(D);
return _8;

=======Mapping node_fun:strbuf_grow=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = sb_29(D)->len;
_2 = _1 + extra_30(D);
_3 = _2 + 1;
_4 = sb_29(D)->len;
if (_3 <= _4)
  goto <bb 3>; [0.04%]
else
  goto <bb 4>; [99.96%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 429496]:
printf ("you want to use way too much memory %s", "");
exit (1);

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073312329]:
_5 = sb_29(D)->len;
_6 = _5 + extra_30(D);
_7 = _6 + 1;
_8 = sb_29(D)->alloc;
if (_7 > _8)
  goto <bb 5>; [33.00%]
else
  goto <bb 16>; [67.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 354193067]:
_9 = sb_29(D)->alloc;
_10 = alloc_nr (_9);
_11 = (long unsigned int) _10;
_12 = sb_29(D)->len;
_13 = _12 + extra_30(D);
_14 = _13 + 1;
if (_11 < _14)
  goto <bb 6>; [67.00%]
else
  goto <bb 7>; [33.00%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 237309355]:
_15 = sb_29(D)->len;
_16 = _15 + extra_30(D);
_17 = _16 + 1;
sb_29(D)->alloc = _17;
goto <bb 8>; [100.00%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 116883711]:
_18 = sb_29(D)->alloc;
_19 = alloc_nr (_18);
_20 = (long unsigned int) _19;
sb_29(D)->alloc = _20;

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 354193067]:
_21 = sb_29(D)->alloc;
_22 = st_mult (1, _21);
_23 = (long unsigned int) _22;
_24 = sb_29(D)->buf;
ret_43 = realloc (_24, _23);
_44 = ret_43 == 0B;
_45 = _23 == 0;
_46 = _44 & _45;
if (_46 != 0)
  goto <bb 9>; [33.00%]
else
  goto <bb 10>; [67.00%]

=======is loop:0=========

 bb index 9 
<bb 9> [local count: 116883711]:
ret_47 = realloc (_24, 1);

=======is loop:0=========

 bb index 10 
<bb 10> [local count: 354193067]:
# ret_48 = PHI <ret_43(8), ret_47(9)>
if (ret_48 == 0B)
  goto <bb 11>; [0.04%]
else
  goto <bb 15>; [99.96%]

=======is loop:0=========

 bb index 11 
<bb 11> [local count: 141677]:
ret_49 = realloc (_24, _23);
_50 = ret_49 == 0B;
_51 = _23 == 0;
_52 = _50 & _51;
if (_52 != 0)
  goto <bb 12>; [33.00%]
else
  goto <bb 13>; [67.00%]

=======is loop:0=========

 bb index 12 
<bb 12> [local count: 46753]:
ret_53 = realloc (_24, 1);

=======is loop:0=========

 bb index 13 
<bb 13> [local count: 141677]:
# ret_54 = PHI <ret_49(11), ret_53(12)>
if (ret_54 == 0B)
  goto <bb 14>; [0.04%]
else
  goto <bb 15>; [99.96%]

=======is loop:0=========

 bb index 14 
<bb 14> [local count: 57]:
printf ("Out of memory, realloc failed%s", "");
exit (1);

=======is loop:0=========

 bb index 15 
<bb 15> [local count: 354193010]:
# ret_55 = PHI <ret_48(10), ret_54(13)>
_65 = ret_55;
_25 = _65;
sb_29(D)->buf = _25;

=======is loop:0=========

 bb index 16 
<bb 16> [local count: 1073312273]:
return;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    gimple malloc count : 4 [0m
[40;34m    gimple free   count : 3 [0m
[40;34m    all ptable point : 36 [0m
[40;34m    analyzable ptable point : 31 [0m
[40;34m    used_stmt array stack totalsize of : 0.010768 mb[0m
[40;34m    collect time: : 0.002405 s [0m
[40;34m    algorithm time: 0.147521 s [0m
[40;34m    gimple stmt count : : 242 [0m
[40;34m    this report analysis in Fri Feb 18 06:36:45 2022
 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.00 (  0%)  2157k ( 72%)
 phase opt and generate             :   0.07 (100%)   0.11 (100%)   0.19 (100%)   768k ( 26%)
 callgraph functions expansion      :   0.02 ( 29%)   0.00 (  0%)   0.03 ( 16%)   415k ( 14%)
 cfg cleanup                        :   0.01 ( 14%)   0.00 (  0%)   0.00 (  0%)    48  (  0%)
 alias analysis                     :   0.01 ( 14%)   0.00 (  0%)   0.00 (  0%)    14k (  0%)
 integration                        :   0.01 ( 14%)   0.00 (  0%)   0.00 (  0%)    97k (  3%)
 tree operand scan                  :   0.00 (  0%)   0.00 (  0%)   0.01 (  5%)    50k (  2%)
 dominator optimization             :   0.00 (  0%)   0.00 (  0%)   0.02 ( 11%)    26k (  1%)
 integrated RA                      :   0.00 (  0%)   0.00 (  0%)   0.01 (  5%)   103k (  3%)
 plugin execution                   :   0.04 ( 57%)   0.11 (100%)   0.15 ( 79%)  3936  (  0%)
 TOTAL                              :   0.07          0.11          0.19         2999k
/usr/bin/ld: /tmp/ccVitC9L.ltrans0.ltrans.o: in function `strbuf_grow':
<artificial>:(.text+0x55): undefined reference to `alloc_nr'
/usr/bin/ld: <artificial>:(.text+0x75): undefined reference to `st_mult'
/usr/bin/ld: <artificial>:(.text+0xb3): undefined reference to `alloc_nr'
/usr/bin/ld: /tmp/ccVitC9L.ltrans0.ltrans.o: in function `main':
<artificial>:(.text+0x12f): undefined reference to `strbuf_init'
/usr/bin/ld: <artificial>:(.text+0x143): undefined reference to `strbuf_init'
/usr/bin/ld: <artificial>:(.text+0x1d3): undefined reference to `strbuf_setlen'
/usr/bin/ld: <artificial>:(.text+0x24d): undefined reference to `get_sha1_hex'
/usr/bin/ld: <artificial>:(.text+0x267): undefined reference to `verify_path'
/usr/bin/ld: <artificial>:(.text+0x28f): undefined reference to `add_cacheinfo'
collect2: error: ld returned 1 exit status
