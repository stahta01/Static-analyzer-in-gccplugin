../Compiler/newplugin.so 11.2.0 
./benchmarks/tmux/use_after_free_3/tmux_uaf_3.c: In function ‘session_cmp’:
./benchmarks/tmux/use_after_free_3/tmux_uaf_3.c:91:13: warning: implicit declaration of function ‘strcmp’ [-Wimplicit-function-declaration]
   91 |     return (strcmp(s1->name, s2->name));
      |             ^~~~~~
./benchmarks/tmux/use_after_free_3/tmux_uaf_3.c:11:1: note: include ‘<string.h>’ or provide a declaration of ‘strcmp’
   10 | #include "../tmux.h"
  +++ |+#include <string.h>
   11 | 
In file included from ./benchmarks/tmux/use_after_free_3/tmux_uaf_3.c:9:
./benchmarks/tmux/use_after_free_3/tmux_uaf_3.c: In function ‘window_choose_init’:
./benchmarks/tmux/use_after_free_3/../stdio.h:138:20: warning: implicit declaration of function ‘strdup’ [-Wimplicit-function-declaration]
  138 | #define xstrdup(a) strdup(a)
      |                    ^~~~~~
./benchmarks/tmux/use_after_free_3/tmux_uaf_3.c:143:27: note: in expansion of macro ‘xstrdup’
  143 |         data->input_str = xstrdup("");
      |                           ^~~~~~~
./benchmarks/tmux/use_after_free_3/../stdio.h:138:20: warning: incompatible implicit declaration of built-in function ‘strdup’ [-Wbuiltin-declaration-mismatch]
  138 | #define xstrdup(a) strdup(a)
      |                    ^~~~~~
./benchmarks/tmux/use_after_free_3/tmux_uaf_3.c:143:27: note: in expansion of macro ‘xstrdup’
  143 |         data->input_str = xstrdup("");
      |                           ^~~~~~~
In file included from ./benchmarks/tmux/use_after_free_3/../tmux.h:23,
                 from ./benchmarks/tmux/use_after_free_3/tmux_uaf_3.c:10:
./benchmarks/tmux/use_after_free_3/tmux_uaf_3.c: In function ‘window_choose_collapse’:
./benchmarks/tmux/use_after_free_3/../array.h:86:9: warning: implicit declaration of function ‘memcpy’ [-Wimplicit-function-declaration]
   86 |         memcpy((a)->list + (a)->num, (b)->list, (b)->num * ARRAY_ITEMSIZE(a)); \
      |         ^~~~~~
./benchmarks/tmux/use_after_free_3/tmux_uaf_3.c:238:17: note: in expansion of macro ‘ARRAY_CONCAT’
  238 |                 ARRAY_CONCAT(&data->list, &list_copy);
      |                 ^~~~~~~~~~~~
./benchmarks/tmux/use_after_free_3/../array.h:86:9: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
   86 |         memcpy((a)->list + (a)->num, (b)->list, (b)->num * ARRAY_ITEMSIZE(a)); \
      |         ^~~~~~
./benchmarks/tmux/use_after_free_3/tmux_uaf_3.c:238:17: note: in expansion of macro ‘ARRAY_CONCAT’
  238 |                 ARRAY_CONCAT(&data->list, &list_copy);
      |                 ^~~~~~~~~~~~
./benchmarks/tmux/use_after_free_3/../array.h:86:9: warning: incompatible implicit declaration of built-in function ‘memcpy’ [-Wbuiltin-declaration-mismatch]
   86 |         memcpy((a)->list + (a)->num, (b)->list, (b)->num * ARRAY_ITEMSIZE(a)); \
      |         ^~~~~~
./benchmarks/tmux/use_after_free_3/tmux_uaf_3.c:238:17: note: in expansion of macro ‘ARRAY_CONCAT’
  238 |                 ARRAY_CONCAT(&data->list, &list_copy);
      |                 ^~~~~~~~~~~~
./benchmarks/tmux/use_after_free_3/../array.h:86:9: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
   86 |         memcpy((a)->list + (a)->num, (b)->list, (b)->num * ARRAY_ITEMSIZE(a)); \
      |         ^~~~~~
./benchmarks/tmux/use_after_free_3/tmux_uaf_3.c:238:17: note: in expansion of macro ‘ARRAY_CONCAT’
  238 |                 ARRAY_CONCAT(&data->list, &list_copy);
      |                 ^~~~~~~~~~~~
./benchmarks/tmux/use_after_free_3/tmux_uaf_3.c: In function ‘window_choose_expand’:
./benchmarks/tmux/use_after_free_3/../array.h:57:17: warning: implicit declaration of function ‘memmove’ [-Wimplicit-function-declaration]
   57 |                 memmove((a)->list + (i) + 1, (a)->list + (i),           \
      |                 ^~~~~~~
./benchmarks/tmux/use_after_free_3/tmux_uaf_3.c:335:41: note: in expansion of macro ‘ARRAY_INSERT’
  335 |                                         ARRAY_INSERT(&data->list,
      |                                         ^~~~~~~~~~~~
./benchmarks/tmux/use_after_free_3/../array.h:57:17: note: include ‘<string.h>’ or provide a declaration of ‘memmove’
   57 |                 memmove((a)->list + (i) + 1, (a)->list + (i),           \
      |                 ^~~~~~~
./benchmarks/tmux/use_after_free_3/tmux_uaf_3.c:335:41: note: in expansion of macro ‘ARRAY_INSERT’
  335 |                                         ARRAY_INSERT(&data->list,
      |                                         ^~~~~~~~~~~~
./benchmarks/tmux/use_after_free_3/../array.h:57:17: warning: incompatible implicit declaration of built-in function ‘memmove’ [-Wbuiltin-declaration-mismatch]
   57 |                 memmove((a)->list + (i) + 1, (a)->list + (i),           \
      |                 ^~~~~~~
./benchmarks/tmux/use_after_free_3/tmux_uaf_3.c:335:41: note: in expansion of macro ‘ARRAY_INSERT’
  335 |                                         ARRAY_INSERT(&data->list,
      |                                         ^~~~~~~~~~~~
./benchmarks/tmux/use_after_free_3/../array.h:57:17: note: include ‘<string.h>’ or provide a declaration of ‘memmove’
   57 |                 memmove((a)->list + (i) + 1, (a)->list + (i),           \
      |                 ^~~~~~~
./benchmarks/tmux/use_after_free_3/tmux_uaf_3.c:335:41: note: in expansion of macro ‘ARRAY_INSERT’
  335 |                                         ARRAY_INSERT(&data->list,
      |                                         ^~~~~~~~~~~~
./benchmarks/tmux/use_after_free_3/tmux_uaf_3.c: In function ‘window_pane_destroy’:
./benchmarks/tmux/use_after_free_3/tmux_uaf_3.c:413:16: warning: passing argument 1 of ‘free’ discards ‘const’ qualifier from pointer target type [-Wdiscarded-qualifiers]
  413 |         free(wp->cwd);
      |              ~~^~~~~
In file included from ./benchmarks/tmux/use_after_free_3/tmux_uaf_3.c:7:
/usr/include/stdlib.h:565:25: note: expected ‘void *’ but argument is of type ‘const char *’
  565 | extern void free (void *__ptr) __THROW;
      |                   ~~~~~~^~~~~

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.00 (  0%)  1298k ( 28%)
 phase parsing                      :   0.07 ( 70%)   0.00 (  0%)   0.08 ( 67%)  2288k ( 50%)
 phase opt and generate             :   0.03 ( 30%)   0.02 (100%)   0.04 ( 33%)   988k ( 22%)
 callgraph ipa passes               :   0.02 ( 20%)   0.01 ( 50%)   0.04 ( 33%)   506k ( 11%)
 lto stream compression             :   0.00 (  0%)   0.00 (  0%)   0.01 (  8%)     0  (  0%)
 ipa lto gimple out                 :   0.00 (  0%)   0.01 ( 50%)   0.00 (  0%)  2744  (  0%)
 ipa free lang data                 :   0.00 (  0%)   0.00 (  0%)   0.01 (  8%)    19k (  0%)
 preprocessing                      :   0.01 ( 10%)   0.00 (  0%)   0.00 (  0%)   893k ( 19%)
 lexical analysis                   :   0.03 ( 30%)   0.00 (  0%)   0.04 ( 33%)     0  (  0%)
 parser (global)                    :   0.01 ( 10%)   0.00 (  0%)   0.02 ( 17%)   611k ( 13%)
 parser struct body                 :   0.01 ( 10%)   0.00 (  0%)   0.01 (  8%)   160k (  4%)
 parser function body               :   0.00 (  0%)   0.00 (  0%)   0.01 (  8%)   524k ( 11%)
 tree gimplify                      :   0.01 ( 10%)   0.01 ( 50%)   0.00 (  0%)   322k (  7%)
 tree PTA                           :   0.01 ( 10%)   0.00 (  0%)   0.00 (  0%)    22k (  0%)
 tree CCP                           :   0.00 (  0%)   0.00 (  0%)   0.01 (  8%)  4088  (  0%)
 dominance computation              :   0.00 (  0%)   0.00 (  0%)   0.01 (  8%)     0  (  0%)
 varconst                           :   0.01 ( 10%)   0.00 (  0%)   0.00 (  0%)     0  (  0%)
 branch prediction                  :   0.01 ( 10%)   0.00 (  0%)   0.00 (  0%)    27k (  1%)
 TOTAL                              :   0.10          0.02          0.12         4585k
../Compiler/newplugin.so 11.2.0 

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.01 (100%)   0.00 (  0%)   0.00 (  0%)  2157k ( 92%)
 phase stream in                    :   0.00 (  0%)   0.00 (  0%)   0.01 (100%)   175k (  8%)
 ipa lto decl in                    :   0.00 (  0%)   0.00 (  0%)   0.01 (100%)   147k (  6%)
 TOTAL                              :   0.01          0.00          0.01         2335k
../Compiler/newplugin.so 11.2.0 
--------plugin argument-----------
contextsentive 1
debugoutput 0
=======ipa_pta=========
=============== The first stage : Point of interest stmt collect =================
=======node_fun:main=========
=======node_fun:window_pane_destroy=========
=======node_fun:window_pane_create=========
=======node_fun:window_choose_expand=========
=======node_fun:window_choose_expand_all=========
=======node_fun:window_choose_collapse_all=========
=======node_fun:window_choose_collapse=========
=======node_fun:window_choose_free=========
=======node_fun:window_choose_data_create=========
=======node_fun:window_choose_init=========
=======node_fun:window_choose_add=========
=======node_fun:xrealloc=========
=======node_fun:sessions_RB_MINMAX=========
=======node_fun:sessions_RB_NEXT=========
=============== The first stage :  record fucntion =================
start PointerConstraint
ptable point 77 
===============The second stage : Mapping stmt=================
# .MEM_23 = VDEF <.MEM_22(D)>
wp_11 = window_pane_create (0B, _3, _2, _1);
# .MEM_24 = VDEF <.MEM_23>
window_choose_init (wp_11);
# .MEM_31 = VDEF <.MEM_25>
wcd_20 = window_choose_data_create (&ctx);
# .MEM_32 = VDEF <.MEM_31>
window_choose_add (wp_11, wcd_20);
# .MEM_25 = VDEF <.MEM_21>
_4 = getchar ();
# .MEM_26 = VDEF <.MEM_25>
window_choose_expand_all (wp_11);
# .MEM_27 = VDEF <.MEM_26>
window_choose_collapse_all (wp_11);
# .MEM_28 = VDEF <.MEM_27>
window_choose_free (wp_11);
# .MEM_29 = VDEF <.MEM_28>
window_pane_destroy (wp_11);
# .MEM_19 = VDEF <.MEM_18(D)>
wp_4 = calloc (1, 600);
# .MEM_174 = VDEF <.MEM_150>
printf ("number too big%s", "");
# .MEM_172 = VDEF <.MEM_150>
printf ("size too big%s", "");
# .MEM_164 = VDEF <.MEM_163>
_27 = xrealloc (_26, 1, _25);
# .MEM_169 = VDEF <.MEM_141>
_30 = xrealloc (_29, 2, _28);
# .MEM_166 = VDEF <.MEM_141>
memmove (_55, _49, _44);
# .MEM_161 = VDEF <.MEM_150>
printf ("number too big%s", "");
# .MEM_159 = VDEF <.MEM_150>
printf ("size too big%s", "");
# .MEM_152 = VDEF <.MEM_151>
_74 = xrealloc (_73, 1, _72);
# .MEM_156 = VDEF <.MEM_144>
_77 = xrealloc (_76, 2, _75);
# VUSE <.MEM_26(D)>
s_18 = sessions_RB_MINMAX (&sessions, -1);
# .MEM_27 = VDEF <.MEM_24>
window_choose_expand (wp_16(D), s_10, i_11);
# VUSE <.MEM_24>
s_19 = sessions_RB_NEXT (s_10);
# VUSE <.MEM_34(D)>
s_25 = sessions_RB_MINMAX (&sessions, -1);
# .MEM_36 = VDEF <.MEM_31>
window_choose_collapse (wp_22(D), s_16);
# VUSE <.MEM_36>
s_30 = sessions_RB_NEXT (s_16);
# .MEM_229 = VDEF <.MEM_222>
printf ("number too big%s", "");
# .MEM_227 = VDEF <.MEM_222>
printf ("size too big%s", "");
# .MEM_223 = VDEF <.MEM_222>
_21 = xrealloc (_20, 1, _19);
# .MEM_226 = VDEF <.MEM_195>
_24 = xrealloc (_23, 2, _22);
# .MEM_220 = VDEF <.MEM_191>
printf ("number too big%s", "");
# .MEM_218 = VDEF <.MEM_191>
printf ("size too big%s", "");
# .MEM_215 = VDEF <.MEM_191>
_50 = xrealloc (_49, 1, _48);
# .MEM_217 = VDEF <.MEM_196>
_53 = xrealloc (_52, 2, _51);
# .MEM_213 = VDEF <.MEM_202>
printf ("number too big%s", "");
# .MEM_211 = VDEF <.MEM_202>
printf ("size too big%s", "");
# .MEM_204 = VDEF <.MEM_203>
_85 = xrealloc (_84, 1, _83);
# .MEM_208 = VDEF <.MEM_194>
_88 = xrealloc (_87, 2, _86);
# .MEM_206 = VDEF <.MEM_194>
memcpy (_105, _100, _99);
# .MEM_11 = VDEF <.MEM_10(D)>
wcd_5 = malloc (80);
# .MEM_24 = VDEF <.MEM_23(D)>
data_6 = malloc (232);
# .MEM_29 = VDEF <.MEM_28>
_1 = strdup ("");
# .MEM_59 = VDEF <.MEM_44(D)>
printf ("number too big%s", "");
# .MEM_57 = VDEF <.MEM_44(D)>
printf ("size too big%s", "");
# .MEM_46 = VDEF <.MEM_45>
_8 = xrealloc (_7, 1, _6);
# .MEM_54 = VDEF <.MEM_43>
_11 = xrealloc (_10, 2, _9);
# .MEM_49 = VDEF <.MEM_48>
_26 = malloc (10);
# .MEM_15 = VDEF <.MEM_9(D)>
printf ("zero size%s", "");
# .MEM_13 = VDEF <.MEM_9(D)>
printf ("nmemb * size > SIZE_MAX%s", "");
# .MEM_11 = VDEF <.MEM_10>
printf ("xrealloc failed%s", "");
===============The second stage : Program slicing=================
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m

=============== The third stage : Start detection  =================

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 118111600]:
_1 = (unsigned int) hlimit_6(D);
_2 = (unsigned int) sy_7(D);
_3 = (unsigned int) sx_8(D);
wp_11 = window_pane_create (0B, _3, _2, _1);
window_choose_init (wp_11);
goto <bb 4>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 955630225]:
wcd_20 = window_choose_data_create (&ctx);
window_choose_add (wp_11, wcd_20);

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 1073741824]:
_4 = getchar ();
if (_4 != 0)
  goto <bb 3>; [89.00%]
else
  goto <bb 5>; [11.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 118111600]:
window_choose_expand_all (wp_11);
window_choose_collapse_all (wp_11);
window_choose_free (wp_11);
window_pane_destroy (wp_11);
ctx ={v} {CLOBBER};
return 0;

=======Mapping node_fun:window_pane_destroy=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = wp_4(D)->cwd;
free (_1);
_2 = wp_4(D)->shell;
free (_2);
free (wp_4(D));
return;

=======Mapping node_fun:window_pane_create=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
wp_4 = calloc (1, 600);
wp_4->window = w_5(D);
wp_4->shell = 0B;
wp_4->cwd = 0B;
wp_4->fd = -1;
wp_4->event = 0B;
wp_4->mode = 0B;
wp_4->layout_cell = 0B;
wp_4->xoff = 0;
wp_4->yoff = 0;
wp_4->sx = sx_15(D);
wp_4->sy = sy_17(D);
wp_4->pipe_fd = -1;
wp_4->pipe_off = 0;
wp_4->pipe_event = 0B;
wp_4->saved_grid = 0B;
_1 = &wp_4->base;
wp_4->screen = _1;
return wp_4;

=======Mapping node_fun:window_choose_expand=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 54518614]:
data_105 = wp_104(D)->modedata;
_1 = data_105->list.list;
_2 = (long unsigned int) pos_106(D);
_3 = _2 * 24;
chosen_107 = _1 + _3;
_4 = data_105->old_list.num;
items_108 = _4 + 4294967295;
_5 = chosen_107->wcd;
_6 = _5->type;
_7 = _6 & 2;
if (_7 == 0)
  goto <bb 32>; [34.00%]
else
  goto <bb 3>; [66.00%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 35982285]:
_8 = chosen_107->state;
_9 = _8 & 1;
if (_9 != 0)
  goto <bb 32>; [34.00%]
else
  goto <bb 4>; [66.00%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 23748308]:
_10 = chosen_107->state;
_11 = _10 | 1;
chosen_107->state = _11;
goto <bb 31>; [100.00%]

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 1050119505]:
_12 = data_105->old_list.list;
_13 = (long unsigned int) i_96;
_14 = _13 * 24;
item_110 = _12 + _14;
_15 = item_110->state;
_16 = _15 | 1;
item_110->state = _16;
wcd_112 = item_110->wcd;
_17 = wcd_112->tree_session;
if (_17 == s_113(D))
  goto <bb 6>; [30.00%]
else
  goto <bb 30>; [70.00%]

=======is loop:1=========

 bb index 6 
<bb 6> [local count: 315035849]:
_18 = wcd_112->type;
_19 = _18 & 1;
if (_19 != 0)
  goto <bb 7>; [50.00%]
else
  goto <bb 30>; [50.00%]

=======is loop:1=========

 bb index 7 
<bb 7> [local count: 157517924]:
if (i_96 > pos_106(D))
  goto <bb 8>; [50.00%]
else
  goto <bb 20>; [50.00%]

=======is loop:1=========

 bb index 8 
<bb 8> [local count: 78758962]:
_20 = data_105->list.num;
if (_20 > 1073741823)
  goto <bb 9>; [0.04%]
else
  goto <bb 10>; [99.96%]

=======is loop:0=========

 bb index 9 
<bb 9> [local count: 31504]:
printf ("number too big%s", "");
exit (1);

=======is loop:1=========

 bb index 10 
<bb 10> [local count: 78727459]:
_21 = data_105->list.num;
_22 = _21 + 1;
_23 = 1073741824 / _22;
if (_23 <= 23)
  goto <bb 11>; [0.04%]
else
  goto <bb 12>; [99.96%]

=======is loop:0=========

 bb index 11 
<bb 11> [local count: 31491]:
printf ("size too big%s", "");
exit (1);

=======is loop:1=========

 bb index 12 
<bb 12> [local count: 78695968]:
_24 = data_105->list.space;
if (_24 == 0)
  goto <bb 13>; [33.00%]
else
  goto <bb 14>; [67.00%]

=======is loop:1=========

 bb index 13 
<bb 13> [local count: 25969669]:
data_105->list.space = 240;
_25 = data_105->list.space;
_26 = data_105->list.list;
_27 = xrealloc (_26, 1, _25);
data_105->list.list = _27;

=======is loop:1=========

 bb index 14 
<bb 14> [local count: 78695968]:
goto <bb 16>; [100.00%]

=======is loop:1=========

 bb index 15 
<bb 15> [local count: 636721925]:
_28 = data_105->list.space;
_29 = data_105->list.list;
_30 = xrealloc (_29, 2, _28);
data_105->list.list = _30;
_31 = data_105->list.space;
_32 = _31 * 2;
data_105->list.space = _32;

=======is loop:1=========

 bb index 16 
<bb 16> [local count: 715417893]:
_33 = data_105->list.space;
_34 = data_105->list.num;
_35 = _34 + 1;
_36 = (long unsigned int) _35;
_37 = _36 * 24;
if (_33 <= _37)
  goto <bb 15>; [89.00%]
else
  goto <bb 17>; [11.00%]

=======is loop:1=========

 bb index 17 
<bb 17> [local count: 78695968]:
_38 = pos_106(D) + 1;
_39 = data_105->list.num;
if (_38 < _39)
  goto <bb 18>; [33.00%]
else
  goto <bb 19>; [67.00%]

=======is loop:1=========

 bb index 18 
<bb 18> [local count: 25969669]:
_40 = data_105->list.num;
_41 = _40 - pos_106(D);
_42 = _41 + 4294967295;
_43 = (long unsigned int) _42;
_44 = _43 * 24;
_45 = data_105->list.list;
_46 = pos_106(D) + 1;
_47 = (long unsigned int) _46;
_48 = _47 * 24;
_49 = _45 + _48;
_50 = data_105->list.list;
_51 = pos_106(D) + 1;
_52 = (sizetype) _51;
_53 = _52 + 1;
_54 = _53 * 24;
_55 = _50 + _54;
memmove (_55, _49, _44);

=======is loop:1=========

 bb index 19 
<bb 19> [local count: 78695968]:
_56 = data_105->old_list.list;
_57 = (long unsigned int) i_96;
_58 = _57 * 24;
_59 = _56 + _58;
_60 = data_105->list.list;
_61 = pos_106(D) + 1;
_62 = (long unsigned int) _61;
_63 = _62 * 24;
_64 = _60 + _63;
*_64 = *_59;
_65 = data_105->list.num;
_66 = _65 + 1;
data_105->list.num = _66;
goto <bb 30>; [100.00%]

=======is loop:1=========

 bb index 20 
<bb 20> [local count: 78758962]:
_67 = data_105->list.num;
if (_67 > 1073741823)
  goto <bb 21>; [0.04%]
else
  goto <bb 22>; [99.96%]

=======is loop:0=========

 bb index 21 
<bb 21> [local count: 31504]:
printf ("number too big%s", "");
exit (1);

=======is loop:1=========

 bb index 22 
<bb 22> [local count: 78727459]:
_68 = data_105->list.num;
_69 = _68 + 1;
_70 = 1073741824 / _69;
if (_70 <= 23)
  goto <bb 23>; [0.04%]
else
  goto <bb 24>; [99.96%]

=======is loop:0=========

 bb index 23 
<bb 23> [local count: 31491]:
printf ("size too big%s", "");
exit (1);

=======is loop:1=========

 bb index 24 
<bb 24> [local count: 78695968]:
_71 = data_105->list.space;
if (_71 == 0)
  goto <bb 25>; [33.00%]
else
  goto <bb 26>; [67.00%]

=======is loop:1=========

 bb index 25 
<bb 25> [local count: 25969669]:
data_105->list.space = 240;
_72 = data_105->list.space;
_73 = data_105->list.list;
_74 = xrealloc (_73, 1, _72);
data_105->list.list = _74;

=======is loop:1=========

 bb index 26 
<bb 26> [local count: 78695968]:
goto <bb 28>; [100.00%]

=======is loop:1=========

 bb index 27 
<bb 27> [local count: 636721925]:
_75 = data_105->list.space;
_76 = data_105->list.list;
_77 = xrealloc (_76, 2, _75);
data_105->list.list = _77;
_78 = data_105->list.space;
_79 = _78 * 2;
data_105->list.space = _79;

=======is loop:1=========

 bb index 28 
<bb 28> [local count: 715417893]:
_80 = data_105->list.space;
_81 = data_105->list.num;
_82 = _81 + 1;
_83 = (long unsigned int) _82;
_84 = _83 * 24;
if (_80 <= _84)
  goto <bb 27>; [89.00%]
else
  goto <bb 29>; [11.00%]

=======is loop:1=========

 bb index 29 
<bb 29> [local count: 78695968]:
_85 = data_105->old_list.list;
_86 = (long unsigned int) i_96;
_87 = _86 * 24;
_88 = _85 + _87;
_89 = data_105->list.list;
_90 = data_105->list.num;
_91 = (long unsigned int) _90;
_92 = _91 * 24;
_93 = _89 + _92;
*_93 = *_88;
_94 = data_105->list.num;
_95 = _94 + 1;
data_105->list.num = _95;

=======is loop:1=========

 bb index 30 
<bb 30> [local count: 1049993516]:
i_139 = i_96 + 4294967295;

=======is loop:1=========

 bb index 31 
<bb 31> [local count: 1073741824]:
# i_96 = PHI <items_108(4), i_139(30)>
if (i_96 != 0)
  goto <bb 5>; [97.80%]
else
  goto <bb 32>; [2.20%]

=======is loop:0=========

 bb index 32 
<bb 32> [local count: 54392626]:
return;

=======Mapping node_fun:window_choose_expand_all=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 14598063]:
data_17 = wp_16(D)->modedata;
s_18 = sessions_RB_MINMAX (&sessions, -1);
goto <bb 10>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 955630225]:
_1 = data_17->list.list;
_2 = (long unsigned int) i_11;
_3 = _2 * 24;
item_20 = _1 + _3;
_4 = item_20->wcd;
_5 = _4->tree_session;
if (_5 != s_10)
  goto <bb 4>; [53.47%]
else
  goto <bb 5>; [46.53%]

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 510975480]:
// predicted unlikely by continue predictor.
goto <bb 7>; [100.00%]

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 444654745]:
_6 = item_20->wcd;
_7 = _6->type;
_8 = _7 & 2;
if (_8 != 0)
  goto <bb 6>; [33.00%]
else
  goto <bb 7>; [67.00%]

=======is loop:1=========

 bb index 6 
<bb 6> [local count: 146736065]:
window_choose_expand (wp_16(D), s_10, i_11);

=======is loop:1=========

 bb index 7 
<bb 7> [local count: 955630227]:
i_22 = i_11 + 1;

=======is loop:1=========

 bb index 8 
<bb 8> [local count: 1073741824]:
# i_11 = PHI <i_22(7), 0(10)>
_9 = data_17->list.num;
if (_9 > i_11)
  goto <bb 3>; [89.00%]
else
  goto <bb 9>; [11.00%]

=======is loop:1=========

 bb index 9 
<bb 9> [local count: 118111600]:
s_19 = sessions_RB_NEXT (s_10);

=======is loop:1=========

 bb index 10 
<bb 10> [local count: 132709663]:
# s_10 = PHI <s_18(2), s_19(9)>
if (s_10 != 0B)
  goto <bb 8>; [89.00%]
else
  goto <bb 11>; [11.00%]

=======is loop:0=========

 bb index 11 
<bb 11> [local count: 14598063]:
return;

=======Mapping node_fun:window_choose_collapse_all=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 118111600]:
data_23 = wp_22(D)->modedata;
_1 = data_23->list.list;
_2 = data_23->selected;
_3 = (long unsigned int) _2;
_4 = _3 * 24;
chosen_24 = _1 + _4;
s_25 = sessions_RB_MINMAX (&sessions, -1);
goto <bb 4>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 955630225]:
window_choose_collapse (wp_22(D), s_16);
s_30 = sessions_RB_NEXT (s_16);

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 1073741824]:
# s_16 = PHI <s_25(2), s_30(3)>
if (s_16 != 0B)
  goto <bb 3>; [89.00%]
else
  goto <bb 10>; [11.00%]

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 955630225]:
_5 = data_23->list.list;
_6 = (long unsigned int) i_17;
_7 = _6 * 24;
item_26 = _5 + _7;
_8 = chosen_24->wcd;
_9 = _8->session;
_10 = item_26->wcd;
_11 = _10->tree_session;
if (_9 != _11)
  goto <bb 6>; [53.47%]
else
  goto <bb 7>; [46.53%]

=======is loop:1=========

 bb index 6 
<bb 6> [local count: 510975480]:
// predicted unlikely by continue predictor.
goto <bb 9>; [100.00%]

=======is loop:1=========

 bb index 7 
<bb 7> [local count: 444654745]:
_12 = item_26->wcd;
_13 = _12->type;
_14 = _13 & 2;
if (_14 != 0)
  goto <bb 8>; [50.00%]
else
  goto <bb 9>; [50.00%]

=======is loop:1=========

 bb index 8 
<bb 8> [local count: 222327372]:
data_23->selected = i_17;

=======is loop:1=========

 bb index 9 
<bb 9> [local count: 955630227]:
i_28 = i_17 + 1;

=======is loop:1=========

 bb index 10 
<bb 10> [local count: 1073741824]:
# i_17 = PHI <0(4), i_28(9)>
_15 = data_23->list.num;
if (_15 > i_17)
  goto <bb 5>; [89.00%]
else
  goto <bb 11>; [11.00%]

=======is loop:0=========

 bb index 11 
<bb 11> [local count: 118111600]:
return;

=======Mapping node_fun:window_choose_collapse=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 5864703]:
data_118 = wp_117(D)->modedata;
list_copy$num_175 = 0;
list_copy$list_176 = 0B;
list_copy$space_177 = 0;
pos_119 = data_118->selected;
_1 = data_118->list.list;
_2 = (long unsigned int) pos_119;
_3 = _2 * 24;
chosen_120 = _1 + _3;
_4 = chosen_120->state;
_5 = _4 & -2;
chosen_120->state = _5;
goto <bb 26>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 255194614]:
_6 = data_118->list.list;
_7 = (long unsigned int) i_109;
_8 = _7 * 24;
item_139 = _6 + _8;
wcd_140 = item_139->wcd;
_9 = wcd_140->tree_session;
if (_9 == s_141(D))
  goto <bb 4>; [53.68%]
else
  goto <bb 15>; [46.32%]

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 136988468]:
_10 = wcd_140->type;
_11 = _10 & 2;
if (_11 != 0)
  goto <bb 5>; [27.00%]
else
  goto <bb 25>; [73.00%]

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 36986887]:
_12 = item_139->state;
_13 = _12 & -2;
item_139->state = _13;
_14 = list_copy$num_168;
if (_14 > 1073741823)
  goto <bb 6>; [0.04%]
else
  goto <bb 7>; [99.96%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 14795]:
printf ("number too big%s", "");
exit (1);

=======is loop:1=========

 bb index 7 
<bb 7> [local count: 36972092]:
_15 = list_copy$num_168;
_16 = _15 + 1;
_17 = 1073741824 / _16;
if (_17 <= 23)
  goto <bb 8>; [0.04%]
else
  goto <bb 9>; [99.96%]

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 14789]:
printf ("size too big%s", "");
exit (1);

=======is loop:1=========

 bb index 9 
<bb 9> [local count: 36957303]:
_18 = list_copy$space_174;
if (_18 == 0)
  goto <bb 10>; [33.00%]
else
  goto <bb 11>; [67.00%]

=======is loop:1=========

 bb index 10 
<bb 10> [local count: 12195910]:
list_copy$space_183 = 240;
_19 = list_copy$space_183;
_20 = list_copy$list_166;
_21 = xrealloc (_20, 1, _19);
list_copy$list_184 = _21;

=======is loop:1=========

 bb index 11 
<bb 11> [local count: 36957303]:
# list_copy$list_161 = PHI <list_copy$list_166(9), list_copy$list_184(10)>
# list_copy$space_171 = PHI <list_copy$space_174(9), list_copy$space_183(10)>
goto <bb 13>; [100.00%]

=======is loop:1=========

 bb index 12 
<bb 12> [local count: 299018183]:
_22 = list_copy$space_170;
_23 = list_copy$list_162;
_24 = xrealloc (_23, 2, _22);
list_copy$list_186 = _24;
_25 = list_copy$space_170;
_26 = _25 * 2;
list_copy$space_187 = _26;

=======is loop:1=========

 bb index 13 
<bb 13> [local count: 335975486]:
# list_copy$list_162 = PHI <list_copy$list_161(11), list_copy$list_186(12)>
# list_copy$space_170 = PHI <list_copy$space_171(11), list_copy$space_187(12)>
_27 = list_copy$space_170;
_28 = list_copy$num_168;
_29 = _28 + 1;
_30 = (long unsigned int) _29;
_31 = _30 * 24;
if (_27 <= _31)
  goto <bb 12>; [89.00%]
else
  goto <bb 14>; [11.00%]

=======is loop:1=========

 bb index 14 
<bb 14> [local count: 36957303]:
_32 = data_118->list.list;
_33 = (long unsigned int) i_109;
_34 = _33 * 24;
_35 = _32 + _34;
_36 = list_copy$list_162;
_37 = list_copy$num_168;
_38 = (long unsigned int) _37;
_39 = _38 * 24;
_40 = _36 + _39;
*_40 = *_35;
_41 = list_copy$num_168;
_42 = _41 + 1;
list_copy$num_185 = _42;
data_118->selected = i_109;
goto <bb 25>; [100.00%]

=======is loop:1=========

 bb index 15 
<bb 15> [local count: 118206146]:
_43 = list_copy$num_168;
if (_43 > 1073741823)
  goto <bb 16>; [0.04%]
else
  goto <bb 17>; [99.96%]

=======is loop:0=========

 bb index 16 
<bb 16> [local count: 47282]:
printf ("number too big%s", "");
exit (1);

=======is loop:1=========

 bb index 17 
<bb 17> [local count: 118158863]:
_44 = list_copy$num_168;
_45 = _44 + 1;
_46 = 1073741824 / _45;
if (_46 <= 23)
  goto <bb 18>; [0.04%]
else
  goto <bb 19>; [99.96%]

=======is loop:0=========

 bb index 18 
<bb 18> [local count: 47263]:
printf ("size too big%s", "");
exit (1);

=======is loop:1=========

 bb index 19 
<bb 19> [local count: 118111600]:
_47 = list_copy$space_174;
if (_47 == 0)
  goto <bb 20>; [33.00%]
else
  goto <bb 21>; [67.00%]

=======is loop:1=========

 bb index 20 
<bb 20> [local count: 38976828]:
list_copy$space_178 = 240;
_48 = list_copy$space_178;
_49 = list_copy$list_166;
_50 = xrealloc (_49, 1, _48);
list_copy$list_179 = _50;

=======is loop:1=========

 bb index 21 
<bb 21> [local count: 118111600]:
# list_copy$list_160 = PHI <list_copy$list_166(19), list_copy$list_179(20)>
# list_copy$space_159 = PHI <list_copy$space_174(19), list_copy$space_178(20)>
goto <bb 23>; [100.00%]

=======is loop:1=========

 bb index 22 
<bb 22> [local count: 955630226]:
_51 = list_copy$space_172;
_52 = list_copy$list_164;
_53 = xrealloc (_52, 2, _51);
list_copy$list_181 = _53;
_54 = list_copy$space_172;
_55 = _54 * 2;
list_copy$space_182 = _55;

=======is loop:1=========

 bb index 23 
<bb 23> [local count: 1073741824]:
# list_copy$list_164 = PHI <list_copy$list_160(21), list_copy$list_181(22)>
# list_copy$space_172 = PHI <list_copy$space_159(21), list_copy$space_182(22)>
_56 = list_copy$space_172;
_57 = list_copy$num_168;
_58 = _57 + 1;
_59 = (long unsigned int) _58;
_60 = _59 * 24;
if (_56 <= _60)
  goto <bb 22>; [89.00%]
else
  goto <bb 24>; [11.00%]

=======is loop:1=========

 bb index 24 
<bb 24> [local count: 118111600]:
_61 = data_118->list.list;
_62 = (long unsigned int) i_109;
_63 = _62 * 24;
_64 = _61 + _63;
_65 = list_copy$list_164;
_66 = list_copy$num_168;
_67 = (long unsigned int) _66;
_68 = _67 * 24;
_69 = _65 + _68;
*_69 = *_64;
_70 = list_copy$num_168;
_71 = _70 + 1;
list_copy$num_180 = _71;

=======is loop:1=========

 bb index 25 
<bb 25> [local count: 255070484]:
# list_copy$list_165 = PHI <list_copy$list_166(4), list_copy$list_162(14), list_copy$list_164(24)>
# list_copy$num_167 = PHI <list_copy$num_168(4), list_copy$num_185(14), list_copy$num_180(24)>
# list_copy$space_173 = PHI <list_copy$space_174(4), list_copy$space_170(14), list_copy$space_172(24)>
i_158 = i_109 + 1;

=======is loop:1=========

 bb index 26 
<bb 26> [local count: 260935188]:
# i_109 = PHI <0(2), i_158(25)>
# list_copy$list_166 = PHI <list_copy$list_176(2), list_copy$list_165(25)>
# list_copy$num_168 = PHI <list_copy$num_175(2), list_copy$num_167(25)>
# list_copy$space_174 = PHI <list_copy$space_177(2), list_copy$space_173(25)>
_72 = data_118->list.num;
if (_72 > i_109)
  goto <bb 3>; [97.80%]
else
  goto <bb 27>; [2.20%]

=======is loop:0=========

 bb index 27 
<bb 27> [local count: 5740574]:
_73 = list_copy$num_168;
if (_73 != 0)
  goto <bb 28>; [33.00%]
else
  goto <bb 38>; [67.00%]

=======is loop:0=========

 bb index 28 
<bb 28> [local count: 1894389]:
_74 = data_118->list.list;
free (_74);
data_118->list.num = 0;
data_118->list.list = 0B;
data_118->list.space = 0;
_75 = list_copy$num_168;
_76 = 1073741824 - _75;
_77 = data_118->list.num;
if (_76 < _77)
  goto <bb 29>; [0.04%]
else
  goto <bb 30>; [99.96%]

=======is loop:0=========

 bb index 29 
<bb 29> [local count: 758]:
printf ("number too big%s", "");
exit (1);

=======is loop:0=========

 bb index 30 
<bb 30> [local count: 1893632]:
_78 = data_118->list.num;
_79 = list_copy$num_168;
_80 = _78 + _79;
_81 = 1073741824 / _80;
if (_81 <= 23)
  goto <bb 31>; [0.04%]
else
  goto <bb 32>; [99.96%]

=======is loop:0=========

 bb index 31 
<bb 31> [local count: 757]:
printf ("size too big%s", "");
exit (1);

=======is loop:0=========

 bb index 32 
<bb 32> [local count: 1892874]:
_82 = data_118->list.space;
if (_82 == 0)
  goto <bb 33>; [33.00%]
else
  goto <bb 34>; [67.00%]

=======is loop:0=========

 bb index 33 
<bb 33> [local count: 624648]:
data_118->list.space = 240;
_83 = data_118->list.space;
_84 = data_118->list.list;
_85 = xrealloc (_84, 1, _83);
data_118->list.list = _85;

=======is loop:0=========

 bb index 34 
<bb 34> [local count: 1892874]:
goto <bb 36>; [100.00%]

=======is loop:1=========

 bb index 35 
<bb 35> [local count: 15315073]:
_86 = data_118->list.space;
_87 = data_118->list.list;
_88 = xrealloc (_87, 2, _86);
data_118->list.list = _88;
_89 = data_118->list.space;
_90 = _89 * 2;
data_118->list.space = _90;

=======is loop:1=========

 bb index 36 
<bb 36> [local count: 17207948]:
_91 = data_118->list.space;
_92 = data_118->list.num;
_93 = list_copy$num_168;
_94 = _92 + _93;
_95 = (long unsigned int) _94;
_96 = _95 * 24;
if (_91 <= _96)
  goto <bb 35>; [89.00%]
else
  goto <bb 37>; [11.00%]

=======is loop:0=========

 bb index 37 
<bb 37> [local count: 1892874]:
_97 = list_copy$num_168;
_98 = (long unsigned int) _97;
_99 = _98 * 24;
_100 = list_copy$list_166;
_101 = data_118->list.list;
_102 = data_118->list.num;
_103 = (long unsigned int) _102;
_104 = _103 * 24;
_105 = _101 + _104;
memcpy (_105, _100, _99);
_106 = data_118->list.num;
_107 = list_copy$num_168;
_108 = _106 + _107;
data_118->list.num = _108;

=======is loop:0=========

 bb index 38 
<bb 38> [local count: 5739059]:
return;

=======Mapping node_fun:window_choose_free=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 118111598]:
data_18 = wp_17(D)->modedata;
goto <bb 7>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 955630225]:
_1 = data_18->list.list;
_2 = (long unsigned int) i_13;
_3 = _2 * 24;
item_29 = _1 + _3;
_4 = data_18->freefn;
if (_4 != 0B)
  goto <bb 4>; [70.00%]
else
  goto <bb 6>; [30.00%]

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 668941161]:
_5 = item_29->wcd;
if (_5 != 0B)
  goto <bb 5>; [70.00%]
else
  goto <bb 6>; [30.00%]

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 468258814]:
_6 = data_18->freefn;
_7 = item_29->wcd;
_6 (_7);

=======is loop:1=========

 bb index 6 
<bb 6> [local count: 955630227]:
_8 = item_29->name;
free (_8);
i_32 = i_13 + 1;

=======is loop:1=========

 bb index 7 
<bb 7> [local count: 1073741824]:
# i_13 = PHI <0(2), i_32(6)>
_9 = data_18->list.num;
if (_9 > i_13)
  goto <bb 3>; [89.00%]
else
  goto <bb 8>; [11.00%]

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 118111600]:
_10 = data_18->list.list;
free (_10);
data_18->list.num = 0;
data_18->list.list = 0B;
data_18->list.space = 0;
_11 = data_18->old_list.list;
free (_11);
data_18->old_list.num = 0;
data_18->old_list.list = 0B;
data_18->old_list.space = 0;
_12 = data_18->input_str;
free (_12);
free (data_18);
return;

=======Mapping node_fun:window_choose_data_create=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
wcd_5 = malloc (80);
wcd_5->command = 0B;
wcd_5->wl = 0B;
wcd_5->tree_session = 0B;
_1 = ctx_9(D)->curclient;
_2 = _1->session;
wcd_5->session = _2;
wcd_5->idx = 4294967295;
wcd_5->type = 0;
return wcd_5;

=======Mapping node_fun:window_choose_init=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
data_6 = malloc (232);
wp_7(D)->modedata = data_6;
data_6->callbackfn = 0B;
data_6->freefn = 0B;
data_6->input_type = -1;
_1 = strdup ("");
data_6->input_str = _1;
data_6->input_prompt = 0B;
data_6->list.num = 0;
data_6->list.list = 0B;
data_6->list.space = 0;
data_6->old_list.num = 0;
data_6->old_list.list = 0B;
data_6->old_list.space = 0;
data_6->top = 0;
s_22 = &data_6->screen;
_2 = MEM[(struct screen *)data_6].mode;
_3 = _2 & -2;
MEM[(struct screen *)data_6].mode = _3;
return s_22;

=======Mapping node_fun:window_choose_add=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 118206146]:
data_33 = wp_32(D)->modedata;
_1 = data_33->list.num;
if (_1 > 1073741823)
  goto <bb 3>; [0.04%]
else
  goto <bb 4>; [99.96%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 47282]:
printf ("number too big%s", "");
exit (1);

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 118158863]:
_2 = data_33->list.num;
_3 = _2 + 1;
_4 = 1073741824 / _3;
if (_4 <= 23)
  goto <bb 5>; [0.04%]
else
  goto <bb 6>; [99.96%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 47263]:
printf ("size too big%s", "");
exit (1);

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 118111600]:
_5 = data_33->list.space;
if (_5 == 0)
  goto <bb 7>; [33.00%]
else
  goto <bb 8>; [67.00%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 38976828]:
data_33->list.space = 240;
_6 = data_33->list.space;
_7 = data_33->list.list;
_8 = xrealloc (_7, 1, _6);
data_33->list.list = _8;

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 118111600]:
goto <bb 10>; [100.00%]

=======is loop:1=========

 bb index 9 
<bb 9> [local count: 955630224]:
_9 = data_33->list.space;
_10 = data_33->list.list;
_11 = xrealloc (_10, 2, _9);
data_33->list.list = _11;
_12 = data_33->list.space;
_13 = _12 * 2;
data_33->list.space = _13;

=======is loop:1=========

 bb index 10 
<bb 10> [local count: 1073741824]:
_14 = data_33->list.space;
_15 = data_33->list.num;
_16 = _15 + 1;
_17 = (long unsigned int) _16;
_18 = _17 * 24;
if (_14 <= _18)
  goto <bb 9>; [89.00%]
else
  goto <bb 11>; [11.00%]

=======is loop:0=========

 bb index 11 
<bb 11> [local count: 118111600]:
_19 = data_33->list.num;
_20 = _19 + 1;
data_33->list.num = _20;
_21 = data_33->list.list;
_22 = data_33->list.num;
_23 = _22 + 4294967295;
_24 = (long unsigned int) _23;
_25 = _24 * 24;
item_38 = _21 + _25;
_26 = malloc (10);
item_38->name = _26;
item_38->wcd = wcd_41(D);
_27 = data_33->list.num;
_28 = _27 + 4294967295;
_29 = (int) _28;
item_38->pos = _29;
item_38->state = 0;
return;

=======Mapping node_fun:xrealloc=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
newsize_4 = nmemb_2(D) * size_3(D);
if (newsize_4 == 0)
  goto <bb 3>; [0.04%]
else
  goto <bb 4>; [99.96%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 429496]:
printf ("zero size%s", "");
exit (1);

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073312329]:
_1 = 1073741824 / nmemb_2(D);
if (_1 < size_3(D))
  goto <bb 5>; [0.04%]
else
  goto <bb 6>; [99.96%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 429324]:
printf ("nmemb * size > SIZE_MAX%s", "");
exit (1);

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 1072883005]:
newptr_8 = realloc (oldptr_6(D), newsize_4);
if (newptr_8 == 0B)
  goto <bb 7>; [0.04%]
else
  goto <bb 8>; [99.96%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 429152]:
printf ("xrealloc failed%s", "");
exit (1);

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 1072453853]:
return newptr_8;

=======Mapping node_fun:sessions_RB_MINMAX=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 118111598]:
tmp_5 = head_4(D)->rbh_root;
goto <bb 8>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 955630225]:
if (val_8(D) < 0)
  goto <bb 4>; [41.00%]
else
  goto <bb 5>; [59.00%]

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 391808389]:
tmp_10 = tmp_1->entry.rbe_left;
goto <bb 6>; [100.00%]

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 563821837]:
tmp_9 = tmp_1->entry.rbe_right;

=======is loop:1=========

 bb index 6 
<bb 6> [local count: 955630225]:
# tmp_6 = PHI <tmp_10(4), tmp_9(5)>
# parent_7 = PHI <tmp_1(4), tmp_1(5)>

=======is loop:1=========

 bb index 8 
<bb 8> [local count: 1073741824]:
# tmp_1 = PHI <tmp_5(2), tmp_6(6)>
# parent_2 = PHI <0B(2), parent_7(6)>
if (tmp_1 != 0B)
  goto <bb 3>; [89.00%]
else
  goto <bb 7>; [11.00%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 118111600]:
return parent_2;

=======Mapping node_fun:sessions_RB_NEXT=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 168730857]:
_1 = elm_13(D)->entry.rbe_right;
if (_1 != 0B)
  goto <bb 3>; [70.00%]
else
  goto <bb 6>; [30.00%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 118111600]:
elm_17 = elm_13(D)->entry.rbe_right;
goto <bb 5>; [100.00%]

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 955630226]:
elm_18 = elm_9->entry.rbe_left;

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 1073741824]:
# elm_9 = PHI <elm_17(3), elm_18(4)>
_2 = elm_9->entry.rbe_left;
if (_2 != 0B)
  goto <bb 4>; [89.00%]
else
  goto <bb 13>; [11.00%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 50619256]:
_3 = elm_13(D)->entry.rbe_parent;
if (_3 != 0B)
  goto <bb 7>; [70.00%]
else
  goto <bb 10>; [30.00%]

=======is loop:0=========

 bb index 10 
<bb 10> [local count: 39989213]:
# elm_19 = PHI <elm_13(D)(6), elm_13(D)(7)>
goto <bb 14>; [100.00%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 35433480]:
_4 = elm_13(D)->entry.rbe_parent;
_5 = _4->entry.rbe_left;
if (_5 == elm_13(D))
  goto <bb 8>; [30.00%]
else
  goto <bb 10>; [70.00%]

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 10630044]:
elm_14 = elm_13(D)->entry.rbe_parent;
goto <bb 13>; [100.00%]

=======is loop:1=========

 bb index 9 
<bb 9> [local count: 333829092]:
elm_15 = elm_10->entry.rbe_parent;

=======is loop:1=========

 bb index 14 
<bb 14> [local count: 373818306]:
# elm_10 = PHI <elm_19(10), elm_15(9)>
_6 = elm_10->entry.rbe_parent;
if (_6 != 0B)
  goto <bb 11>; [94.50%]
else
  goto <bb 12>; [5.50%]

=======is loop:1=========

 bb index 11 
<bb 11> [local count: 353258299]:
_7 = elm_10->entry.rbe_parent;
_8 = _7->entry.rbe_right;
if (_8 == elm_10)
  goto <bb 9>; [94.50%]
else
  goto <bb 12>; [5.50%]

=======is loop:0=========

 bb index 12 
<bb 12> [local count: 39989213]:
elm_16 = elm_10->entry.rbe_parent;

=======is loop:0=========

 bb index 13 
<bb 13> [local count: 168730857]:
# elm_11 = PHI <elm_9(5), elm_14(8), elm_16(12)>
return elm_11;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    gimple malloc count : 6 [0m
[40;34m    gimple free   count : 9 [0m
[40;34m    all ptable point : 77 [0m
[40;34m    analyzable ptable point : 65 [0m
[40;34m    analyzable ptable all point stmt : 627 [0m
[40;34m    used_stmt array stack totalsize of : 0.016224 mb[0m
[40;34m    collect time: : 0.000978 s [0m
[40;34m    mapping time: : 0.003884 s [0m
[40;34m    algorithm time: 0.026144 s [0m
[40;34m    gimple stmt count : : 550 [0m
[40;34m    this report analysis in Mon Jun 20 14:58:19 2022
 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.01 (  6%)  2157k ( 50%)
 phase opt and generate             :   0.09 (100%)   0.06 (100%)   0.15 ( 94%)  1969k ( 46%)
 dump files                         :   0.01 ( 11%)   0.00 (  0%)   0.01 (  6%)     0  (  0%)
 callgraph functions expansion      :   0.06 ( 67%)   0.05 ( 83%)   0.11 ( 69%)  1597k ( 37%)
 cfg cleanup                        :   0.00 (  0%)   0.00 (  0%)   0.01 (  6%)  1424  (  0%)
 register scan                      :   0.00 (  0%)   0.00 (  0%)   0.01 (  6%)  3136  (  0%)
 dominator optimization             :   0.00 (  0%)   0.00 (  0%)   0.01 (  6%)    82k (  2%)
 tree CCP                           :   0.00 (  0%)   0.00 (  0%)   0.01 (  6%)  4968  (  0%)
 dominance computation              :   0.00 (  0%)   0.00 (  0%)   0.01 (  6%)     0  (  0%)
 expand                             :   0.01 ( 11%)   0.01 ( 17%)   0.00 (  0%)   247k (  6%)
 dead store elim1                   :   0.01 ( 11%)   0.00 (  0%)   0.00 (  0%)    25k (  1%)
 loop invariant motion              :   0.00 (  0%)   0.00 (  0%)   0.01 (  6%)   512  (  0%)
 combiner                           :   0.01 ( 11%)   0.00 (  0%)   0.01 (  6%)   130k (  3%)
 integrated RA                      :   0.00 (  0%)   0.01 ( 17%)   0.01 (  6%)   429k ( 10%)
 LRA non-specific                   :   0.00 (  0%)   0.00 (  0%)   0.01 (  6%)    16k (  0%)
 hard reg cprop                     :   0.01 ( 11%)   0.00 (  0%)   0.00 (  0%)   408  (  0%)
 reorder blocks                     :   0.00 (  0%)   0.01 ( 17%)   0.00 (  0%)  9808  (  0%)
 final                              :   0.00 (  0%)   0.01 ( 17%)   0.01 (  6%)    58k (  1%)
 plugin execution                   :   0.03 ( 33%)   0.01 ( 17%)   0.03 ( 19%)  6048  (  0%)
 rest of compilation                :   0.01 ( 11%)   0.01 ( 17%)   0.01 (  6%)    51k (  1%)
 TOTAL                              :   0.09          0.06          0.16         4284k
