./benchmarks/tmux/leak_4/tmux_leak_4.c:15: warning: "S_IRWXU" redefined
   15 | #define S_IRWXU 0
      | 
In file included from ./benchmarks/tmux/leak_4/tmux_leak_4.c:9:
/usr/include/x86_64-linux-gnu/sys/stat.h:172: note: this is the location of the previous definition
  172 | #define S_IRWXU (__S_IREAD|__S_IWRITE|__S_IEXEC)
      | 
./benchmarks/tmux/leak_4/tmux_leak_4.c:16: warning: "S_IRWXO" redefined
   16 | #define S_IRWXO 0
      | 
In file included from ./benchmarks/tmux/leak_4/tmux_leak_4.c:9:
/usr/include/x86_64-linux-gnu/sys/stat.h:190: note: this is the location of the previous definition
  190 | #define S_IRWXO (S_IRWXG >> 3)
      | 
./benchmarks/tmux/leak_4/tmux_leak_4.c: In function â€˜vasprintfâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:23: warning: implicit declaration of function â€˜strlenâ€™ [-Wimplicit-function-declaration]
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |                       ^~~~~~
./benchmarks/tmux/leak_4/tmux_leak_4.c:13:1: note: include â€˜<string.h>â€™ or provide a declaration of â€˜strlenâ€™
   12 | #include "../tmux.h"
  +++ |+#include <string.h>
   13 | 
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:23: warning: incompatible implicit declaration of built-in function â€˜strlenâ€™ [-Wbuiltin-declaration-mismatch]
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |                       ^~~~~~
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:23: note: include â€˜<string.h>â€™ or provide a declaration of â€˜strlenâ€™
./benchmarks/tmux/leak_4/tmux_leak_4.c: In function â€˜xasprintfâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:56:13: warning: implicit declaration of function â€˜xvasprintfâ€™; did you mean â€˜xasprintfâ€™? [-Wimplicit-function-declaration]
   56 |         i = xvasprintf(ret, fmt, ap);
      |             ^~~~~~~~~~
      |             xasprintf
In file included from ./benchmarks/tmux/leak_4/tmux_leak_4.c:11:
./benchmarks/tmux/leak_4/tmux_leak_4.c: In function â€˜xvasprintfâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:69:41: warning: implicit declaration of function â€˜strerrorâ€™; did you mean â€˜perrorâ€™? [-Wimplicit-function-declaration]
   69 |                 fatalx("xasprintf: %s", strerror(errno));
      |                                         ^~~~~~~~
./benchmarks/tmux/leak_4/../stdio.h:135:33: note: in definition of macro â€˜fatalâ€™
  135 | #define fatal(a, b) { printf(a, b); exit(1); }
      |                                 ^
./benchmarks/tmux/leak_4/tmux_leak_4.c:69:17: note: in expansion of macro â€˜fatalxâ€™
   69 |                 fatalx("xasprintf: %s", strerror(errno));
      |                 ^~~~~~
./benchmarks/tmux/leak_4/tmux_leak_4.c: In function â€˜make_labelâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:84:15: warning: implicit declaration of function â€˜getuidâ€™ [-Wimplicit-function-declaration]
   84 |         uid = getuid();
      |               ^~~~~~
Profile consistency report:

                                 |mismatch     |mismatch     |                     |
Pass name                        |IN    |IN    |OUT   |OUT   |overall              |
                                 |freq  |count |freq  |count |size      |time      |
cfg                  ------------|      |      |      |      |          |          |
ompexp                           |      |      |      |      |   +100.0%|          |
fixup_cfg            ------------|      |      |      |      |          |          |
ssa                              |      |      |      |      |     -3.2%|          |
nothrow                          |      |      |      |      |     -3.3%|          |
fixup_cfg            ------------|      |      |      |      |          |          |
local-fnsummary      ------------|      |      |      |      |          |          |
einline              ------------|      |      |      |      |          |          |
early_optimizations  ------------|      |      |      |      |          |          |
objsz                ------------|      |      |      |      |          |          |
ccp                              |      |      |      |      |     -0.7%|          |
forwprop                         |      |      |      |      |     -0.7%|          |
ethread              ------------|      |      |      |      |          |          |
esra                 ------------|      |      |      |      |          |          |
ealias               ------------|      |      |      |      |          |          |
mergephi             ------------|      |      |      |      |          |          |
cddce                ------------|      |      |      |      |          |          |
phiopt               ------------|      |      |      |      |          |          |
modref               ------------|      |      |      |      |          |          |
iftoswitch           ------------|      |      |      |      |          |          |
profile_estimate     ------------|      |      |      |      |          |          |
local-pure-const                 |      |      |      |      |          |   +100.0%|
release_ssa          ------------|      |      |      |      |          |          |
local-fnsummary      ------------|      |      |      |      |          |          |
=======ipa_pta=========
===============The first stage : Point of interest stmt collect=================
=======node_fun:main=========

=======node_fun:make_label=========

--------GIMPLE Cond -------
succs:= 2
--------GIMPLE Cond -------
succs:= 3
succs:= 2
succs:= 3
--------GIMPLE Cond -------
succs:= 6
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 7
succs:= 6
succs:= 7
succs:= 8
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 9
succs:= 9
succs:= 10
--------GIMPLE Cond -------
succs:= 11
--------GIMPLE Cond -------
succs:= 11
succs:= 12
--------GIMPLE Cond -------
succs:= 13
--------GIMPLE Cond -------
succs:= 13
succs:= 14
--------GIMPLE Cond -------
succs:= 15
succs:= 8
succs:= 10
succs:= 12
succs:= 14
succs:= 15
=======node_fun:xvasprintf=========

--------GIMPLE Cond -------
succs:= 2
--------GIMPLE Cond -------
succs:= 2
succs:= 3
succs:= 3
=======node_fun:xasprintf=========

=======node_fun:vasprintf=========

--------GIMPLE Cond -------
succs:= 2
=======node_fun:strlcpy=========

--------GIMPLE Cond -------
succs:= 2
--------GIMPLE Cond -------
succs:= 3
--------GIMPLE Cond -------
succs:= 4
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 2
succs:= 3
succs:= 4
succs:= 5
--------GIMPLE Cond -------
succs:= 6
succs:= 7
succs:= 7
--------GIMPLE Cond -------
succs:= 6
succs:= 12
===============The first stage : Point of interest stmt collect=================
start PointerConstraint
pointer ftable is 1 
pointer ptable is 1 
===============The second stage : Mapping stmt=================
# .MEM_2 = VDEF <.MEM_1(D)>
make_label ("label");
# .MEM_42 = VDEF <.MEM_41(D)>
_1 = getuid ();
# .MEM_43 = VDEF <.MEM_42>
s_28 = getenv ("TMUX_TMPDIR");
# .MEM_44 = VDEF <.MEM_43>
xasprintf (&base, "%s/tmux-", s_28);
# .MEM_45 = VDEF <.MEM_43>
xasprintf (&base, "%s/tmux-", "/tmp");
# .MEM_46 = VDEF <.MEM_38>
_4 = mkdir (_3, 0);
_5 = __errno_location ();
# .MEM_47 = VDEF <.MEM_46>
_8 = lstat (_7, &sb);
_11 = __errno_location ();
_13 = __errno_location ();
# .MEM_48 = VDEF <.MEM_47>
_15 = realpath (_14, &resolved);
# .MEM_49 = VDEF <.MEM_48>
strlcpy (&resolved, _16, 4096);
_17 = __errno_location ();
 <var_decl 0x7f4f513bc000 base
    type <pointer_type 0x7f4f513a2c78
        type <integer_type 0x7f4f513a2a80 char public QI
            size <integer_cst 0x7f4f51879ca8 constant 8>
            unit-size <integer_cst 0x7f4f51879cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4f5188e3f0 precision:8 min <integer_cst 0x7f4f51399720 -128> max <integer_cst 0x7f4f51399708 127> context <translation_unit_decl 0x7f4f51884168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f4f513a2c78>>
        public unsigned DI
        size <integer_cst 0x7f4f51879bb8 constant 64>
        unit-size <integer_cst 0x7f4f51879bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f4f51884168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
        pointer_to_this <pointer_type 0x7f4f513a2dc8>>
    addressable unsigned DI ./benchmarks/tmux/leak_4/tmux_leak_4.c:77:9 size <integer_cst 0x7f4f51879bb8 64> unit-size <integer_cst 0x7f4f51879bd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7f4f513a3e00 make_label> chain <var_decl 0x7f4f52121f30 resolved>>
_19 = __errno_location ();
# .MEM_12 = VDEF <.MEM_11(D)>
i_10 = vasprintf (ret_6(D), fmt_7(D), ap_8(D));
_2 = __errno_location ();
# .MEM_13 = VDEF <.MEM_12>
_4 = strerror (_3);
# .MEM_14 = VDEF <.MEM_13>
printf ("xasprintf: %s", _4);
# .MEM_8 = VDEF <.MEM_7(D)>
i_6 = xvasprintf (ret_2(D), fmt_3(D), ap_4(D));
# VUSE <.MEM_12(D)>
_1 = strlen (fmt_8(D));
# VUSE <.MEM_12(D)>
_2 = strlen (ap_9(D));
# .MEM_13 = VDEF <.MEM_12(D)>
_4 = malloc (_3);
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
===============The second stage : record fucntion =================

=============== The third stage : Start detection  =================
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:make_label========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path make_label  function_call count: 9 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:__errno_location========= [0m
[40;33m =======POP node_fun stack:__errno_location========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:strlcpy========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path strlcpy  function_call count: 0 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:strlcpy========= [0m
[40;42m =======start_check_funciton:strlcpy========= [0m
[40;33m =======POP node_fun stack:strlcpy========= [0m
[40;42m =======pre add _ fucntion:realpath========= [0m
[40;33m =======POP node_fun stack:realpath========= [0m
[40;42m =======pre add _ fucntion:lstat========= [0m
[40;33m =======POP node_fun stack:lstat========= [0m
[40;42m =======pre add _ fucntion:mkdir========= [0m
[40;33m =======POP node_fun stack:mkdir========= [0m
[40;42m =======pre add _ fucntion:xasprintf========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path xasprintf  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:xvasprintf========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path xvasprintf  function_call count: 5 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:strerror========= [0m
[40;33m =======POP node_fun stack:strerror========= [0m
[40;42m =======pre add _ fucntion:__errno_location========= [0m
[40;33m =======POP node_fun stack:__errno_location========= [0m
[40;42m =======pre add _ fucntion:vasprintf========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path vasprintf  function_call count: 2 level :4========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre_check_funciton:vasprintf========= [0m
[40;42m =======start_check_funciton:vasprintf========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f4f513c08b8
    type <pointer_type 0x7f4f51895000
        type <void_type 0x7f4f5188ef18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f4f51895000>>
        public unsigned DI
        size <integer_cst 0x7f4f51879bb8 constant 64>
        unit-size <integer_cst 0x7f4f51879bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f4f5189a9d8>>
   
    def_stmt _4 = malloc (_3);
    version:4
    ptr-info 0x7f4f513b47b0>
# .MEM_13 = VDEF <.MEM_12(D)>
_4 = malloc (_3);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
*ret_11(D) = _4;
bb index := 2
# VUSE <.MEM_14>
return _6;
In function â€˜vasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
*ret_11(D) = _4;
In function â€˜mainâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:14: warning: use location
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
*ret_11(D) = _4;
bb index := 2
# VUSE <.MEM_14>
return _6;
In function â€˜vasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
*ret_11(D) = _4;
In function â€˜mainâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:14: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12(D)>
_4 = malloc (_3);
bb index := 2
# VUSE <.MEM_14>
return _6;
In function â€˜vasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_4 = malloc (_3);
In function â€˜mainâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:16: warning: use location
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |                ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f4f513c08b8
    type <pointer_type 0x7f4f51895000
        type <void_type 0x7f4f5188ef18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f4f51895000>>
        public unsigned DI
        size <integer_cst 0x7f4f51879bb8 constant 64>
        unit-size <integer_cst 0x7f4f51879bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f4f5189a9d8>>
   
    def_stmt _4 = malloc (_3);
    version:4
    ptr-info 0x7f4f513b47b0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f4f513c0990
    type <pointer_type 0x7f4f513a2bd0
        type <integer_type 0x7f4f513a2b28 char readonly public QI
            size <integer_cst 0x7f4f51879ca8 constant 8>
            unit-size <integer_cst 0x7f4f51879cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4f5188e3f0 precision:8 min <integer_cst 0x7f4f51399720 -128> max <integer_cst 0x7f4f51399708 127> context <translation_unit_decl 0x7f4f51884168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f4f513a2bd0>>
        public unsigned DI
        size <integer_cst 0x7f4f51879bb8 constant 64>
        unit-size <integer_cst 0x7f4f51879bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f4f513bb800 fmt>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f4f513b47e0>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_12(D)>
_1 = strlen (fmt_8(D));
bb index := 2
# VUSE <.MEM_14>
return _6;
In function â€˜vasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_1 = strlen (fmt_8(D));
In function â€˜mainâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:23: warning: use location
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |                       ^
this stmt is child function---strlen-----

 ================== trace ================== 
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _1 + _2;
bb index := 2
# VUSE <.MEM_14>
return _6;
In function â€˜vasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_3 = _1 + _2;
In function â€˜mainâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:16: warning: use location
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12(D)>
_4 = malloc (_3);
bb index := 2
# VUSE <.MEM_14>
return _6;
In function â€˜vasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_4 = malloc (_3);
In function â€˜mainâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:16: warning: use location
this stmt is child function---malloc-----

 ================== trace ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
*ret_11(D) = _4;
bb index := 2
# VUSE <.MEM_14>
return _6;
In function â€˜vasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
*ret_11(D) = _4;
In function â€˜mainâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:14: warning: use location
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |              ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f4f513c0990
    type <pointer_type 0x7f4f513a2bd0
        type <integer_type 0x7f4f513a2b28 char readonly public QI
            size <integer_cst 0x7f4f51879ca8 constant 8>
            unit-size <integer_cst 0x7f4f51879cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4f5188e3f0 precision:8 min <integer_cst 0x7f4f51399720 -128> max <integer_cst 0x7f4f51399708 127> context <translation_unit_decl 0x7f4f51884168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f4f513a2bd0>>
        public unsigned DI
        size <integer_cst 0x7f4f51879bb8 constant 64>
        unit-size <integer_cst 0x7f4f51879bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f4f513bb800 fmt>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f4f513b47e0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f4f513c09d8
    type <pointer_type 0x7f4f513a2c78
        type <integer_type 0x7f4f513a2a80 char public QI
            size <integer_cst 0x7f4f51879ca8 constant 8>
            unit-size <integer_cst 0x7f4f51879cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4f5188e3f0 precision:8 min <integer_cst 0x7f4f51399720 -128> max <integer_cst 0x7f4f51399708 127> context <translation_unit_decl 0x7f4f51884168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f4f513a2c78>>
        public unsigned DI
        size <integer_cst 0x7f4f51879bb8 constant 64>
        unit-size <integer_cst 0x7f4f51879bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f4f51884168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
        pointer_to_this <pointer_type 0x7f4f513a2dc8>>
    var <parm_decl 0x7f4f513bb880 ap>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7f4f513b47f8>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_12(D)>
_2 = strlen (ap_9(D));
bb index := 2
# VUSE <.MEM_14>
return _6;
In function â€˜vasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_2 = strlen (ap_9(D));
In function â€˜mainâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:37: warning: use location
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |                                     ^
this stmt is child function---strlen-----

 ================== trace ================== 
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _1 + _2;
bb index := 2
# VUSE <.MEM_14>
return _6;
In function â€˜vasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_3 = _1 + _2;
In function â€˜mainâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:16: warning: use location
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12(D)>
_4 = malloc (_3);
bb index := 2
# VUSE <.MEM_14>
return _6;
In function â€˜vasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_4 = malloc (_3);
In function â€˜mainâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:16: warning: use location
this stmt is child function---malloc-----

 ================== trace ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
*ret_11(D) = _4;
bb index := 2
# VUSE <.MEM_14>
return _6;
In function â€˜vasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
*ret_11(D) = _4;
In function â€˜mainâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:14: warning: use location
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |              ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f4f513c09d8
    type <pointer_type 0x7f4f513a2c78
        type <integer_type 0x7f4f513a2a80 char public QI
            size <integer_cst 0x7f4f51879ca8 constant 8>
            unit-size <integer_cst 0x7f4f51879cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4f5188e3f0 precision:8 min <integer_cst 0x7f4f51399720 -128> max <integer_cst 0x7f4f51399708 127> context <translation_unit_decl 0x7f4f51884168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f4f513a2c78>>
        public unsigned DI
        size <integer_cst 0x7f4f51879bb8 constant 64>
        unit-size <integer_cst 0x7f4f51879bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f4f51884168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
        pointer_to_this <pointer_type 0x7f4f513a2dc8>>
    var <parm_decl 0x7f4f513bb880 ap>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7f4f513b47f8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f4f513c0870
    type <integer_type 0x7f4f5188e7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f4f51879bb8 constant 64>
        unit-size <integer_cst 0x7f4f51879bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4f5188e738 precision:64 min <integer_cst 0x7f4f51879e88 0> max <integer_cst 0x7f4f5187a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f4f5189a7e0>>
   
    def_stmt _3 = _1 + _2;
    version:3>
_3 = _1 + _2;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:vasprintf========= [0m
[40;42m =======pre_check_funciton:xvasprintf========= [0m
[40;42m =======start_check_funciton:xvasprintf========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f4f513c03a8
    type <pointer_type 0x7f4f513a2dc8
        type <pointer_type 0x7f4f513a2c78 type <integer_type 0x7f4f513a2a80 char>
            public unsigned DI
            size <integer_cst 0x7f4f51879bb8 constant 64>
            unit-size <integer_cst 0x7f4f51879bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f4f51884168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f4f513a2dc8>>
        public unsigned DI size <integer_cst 0x7f4f51879bb8 64> unit-size <integer_cst 0x7f4f51879bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f4f513bb400 ret>
    def_stmt GIMPLE_NOP
    version:6
    ptr-info 0x7f4f513b4720>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_12>
_1 = *ret_6(D);
bb index := 3
# VUSE <.MEM_12>
return i_10;
In function â€˜xvasprintfâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
   71 |         return i;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_12>
_1 = *ret_6(D);
bb index := 3
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_12>
_1 = *ret_6(D);
bb index := 3
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
_1 = *ret_6(D);
In function â€˜mainâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:68:22: warning: use location
   68 |         if (i < 0 || *ret == NULL)
      |                      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 3
# VUSE <.MEM_12>
return i_10;
In function â€˜xvasprintfâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
   71 |         return i;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 3
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 3
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
if (_1 == 0B)
In function â€˜mainâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:68:19: warning: use location
   68 |         if (i < 0 || *ret == NULL)
      |                   ^
if (_1 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_4/tmux_leak_4.c:68:19: warning: use location
Cond in fucntion xvasprintf basic block 3
 ================== possible direct basic block ================= 
from xvasprintf basic block 4
 ================== possible direct basic block ================= 
from xvasprintf basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11(D)>
i_10 = vasprintf (ret_6(D), fmt_7(D), ap_8(D));
bb index := 2
# VUSE <.MEM_12>
return i_10;
In function â€˜xvasprintfâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
   71 |         return i;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11(D)>
i_10 = vasprintf (ret_6(D), fmt_7(D), ap_8(D));
bb index := 2
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
i_10 = vasprintf (ret_6(D), fmt_7(D), ap_8(D));
In function â€˜mainâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:66:13: warning: use location
   66 |         i = vasprintf(ret, fmt, ap);
      |             ^
this stmt is child function---vasprintf-----

 ================== trace ================== 
trace fucntion name:vasprintf 
[40;44m =======trace_function_path vasprintf  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:vasprintf========= [0m
[40;36m ======= find relate stmt with ret ========= [0m
[40;36m ======= relate stmt argument:ret ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (i_10 < 0)
bb index := 2
# VUSE <.MEM_12>
return i_10;
In function â€˜xvasprintfâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
   71 |         return i;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (i_10 < 0)
bb index := 2
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
if (i_10 < 0)
In function â€˜mainâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:68:12: warning: use location
   68 |         if (i < 0 || *ret == NULL)
      |            ^
if (i_10 < 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_4/tmux_leak_4.c:68:12: warning: use location
Cond in fucntion xvasprintf basic block 2
 ================== possible direct basic block ================= 
from xvasprintf basic block 4
 ================== possible direct basic block ================= 
from xvasprintf basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f4f513c03a8
    type <pointer_type 0x7f4f513a2dc8
        type <pointer_type 0x7f4f513a2c78 type <integer_type 0x7f4f513a2a80 char>
            public unsigned DI
            size <integer_cst 0x7f4f51879bb8 constant 64>
            unit-size <integer_cst 0x7f4f51879bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f4f51884168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f4f513a2dc8>>
        public unsigned DI size <integer_cst 0x7f4f51879bb8 64> unit-size <integer_cst 0x7f4f51879bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f4f513bb400 ret>
    def_stmt GIMPLE_NOP
    version:6
    ptr-info 0x7f4f513b4720>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f4f513c02d0
    type <pointer_type 0x7f4f518959d8
        type <integer_type 0x7f4f5188e5e8 int public SI
            size <integer_cst 0x7f4f51879df8 constant 32>
            unit-size <integer_cst 0x7f4f51879e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4f5188e5e8 precision:32 min <integer_cst 0x7f4f51879db0 -2147483648> max <integer_cst 0x7f4f51879dc8 2147483647>
            pointer_to_this <pointer_type 0x7f4f518959d8>>
        public unsigned DI
        size <integer_cst 0x7f4f51879bb8 constant 64>
        unit-size <integer_cst 0x7f4f51879bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = __errno_location ();
    version:2
    ptr-info 0x7f4f513b4708>
_2 = __errno_location ();

 ================== trace ptable================== 
trace fucntion name:__errno_location 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---__errno_location-----
this other function ------__errno_location-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_12>
_3 = *_2;
bb index := 4
# VUSE <.MEM_12>
return i_10;
In function â€˜xvasprintfâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
   71 |         return i;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_12>
_3 = *_2;
bb index := 4
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
_3 = *_2;
In function â€˜mainâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:69:17: warning: use location
   69 |                 fatalx("xasprintf: %s", strerror(errno));
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
_4 = strerror (_3);
bb index := 4
# VUSE <.MEM_12>
return i_10;
In function â€˜xvasprintfâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
   71 |         return i;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
_4 = strerror (_3);
bb index := 4
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
_4 = strerror (_3);
In function â€˜mainâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:69:17: warning: use location
   69 |                 fatalx("xasprintf: %s", strerror(errno));
      |                 ^
this stmt is child function---strerror-----

 ================== trace ================== 
trace fucntion name:strerror 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
printf ("xasprintf: %s", _4);
bb index := 4
# VUSE <.MEM_12>
return i_10;
In function â€˜xvasprintfâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
   71 |         return i;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
printf ("xasprintf: %s", _4);
bb index := 4
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
printf ("xasprintf: %s", _4);
In function â€˜mainâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:69:17: warning: use location
   69 |                 fatalx("xasprintf: %s", strerror(errno));
      |                 ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = __errno_location ();
bb index := 4
# VUSE <.MEM_12>
return i_10;
In function â€˜xvasprintfâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
   71 |         return i;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = __errno_location ();
bb index := 4
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
_2 = __errno_location ();
In function â€˜mainâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:69:17: warning: use location
   69 |                 fatalx("xasprintf: %s", strerror(errno));
      |                 ^
this stmt is child function---__errno_location-----

 ================== trace ================== 
trace fucntion name:__errno_location 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f4f513c02d0
    type <pointer_type 0x7f4f518959d8
        type <integer_type 0x7f4f5188e5e8 int public SI
            size <integer_cst 0x7f4f51879df8 constant 32>
            unit-size <integer_cst 0x7f4f51879e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4f5188e5e8 precision:32 min <integer_cst 0x7f4f51879db0 -2147483648> max <integer_cst 0x7f4f51879dc8 2147483647>
            pointer_to_this <pointer_type 0x7f4f518959d8>>
        public unsigned DI
        size <integer_cst 0x7f4f51879bb8 constant 64>
        unit-size <integer_cst 0x7f4f51879bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = __errno_location ();
    version:2
    ptr-info 0x7f4f513b4708>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f4f513c0318
    type <integer_type 0x7f4f5188e5e8 int public SI
        size <integer_cst 0x7f4f51879df8 constant 32>
        unit-size <integer_cst 0x7f4f51879e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4f5188e5e8 precision:32 min <integer_cst 0x7f4f51879db0 -2147483648> max <integer_cst 0x7f4f51879dc8 2147483647>
        pointer_to_this <pointer_type 0x7f4f518959d8>>
   
    def_stmt _3 = *_2;
    version:3>
# VUSE <.MEM_12>
_3 = *_2;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
_4 = strerror (_3);
bb index := 4
# VUSE <.MEM_12>
return i_10;
In function â€˜xvasprintfâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
   71 |         return i;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
_4 = strerror (_3);
bb index := 4
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
_4 = strerror (_3);
In function â€˜mainâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:69:17: warning: use location
   69 |                 fatalx("xasprintf: %s", strerror(errno));
      |                 ^
this stmt is child function---strerror-----

 ================== trace ================== 
trace fucntion name:strerror 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
printf ("xasprintf: %s", _4);
bb index := 4
# VUSE <.MEM_12>
return i_10;
In function â€˜xvasprintfâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
   71 |         return i;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
printf ("xasprintf: %s", _4);
bb index := 4
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
printf ("xasprintf: %s", _4);
In function â€˜mainâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:69:17: warning: use location
   69 |                 fatalx("xasprintf: %s", strerror(errno));
      |                 ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f4f513c0318
    type <integer_type 0x7f4f5188e5e8 int public SI
        size <integer_cst 0x7f4f51879df8 constant 32>
        unit-size <integer_cst 0x7f4f51879e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4f5188e5e8 precision:32 min <integer_cst 0x7f4f51879db0 -2147483648> max <integer_cst 0x7f4f51879dc8 2147483647>
        pointer_to_this <pointer_type 0x7f4f518959d8>>
   
    def_stmt _3 = *_2;
    version:3>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f4f51a75f60
    type <pointer_type 0x7f4f513aabd0
        type <array_type 0x7f4f513aab28 type <integer_type 0x7f4f513a2a80 char>
            BLK
            size <integer_cst 0x7f4f51399780 constant 112>
            unit-size <integer_cst 0x7f4f51399768 constant 14>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f4f513aaa80>
            pointer_to_this <pointer_type 0x7f4f513aabd0>>
        unsigned DI
        size <integer_cst 0x7f4f51879bb8 constant 64>
        unit-size <integer_cst 0x7f4f51879bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f4f513c1190 type <array_type 0x7f4f513aab28>
        readonly constant static "xasprintf: %s\000">
    ./benchmarks/tmux/leak_4/tmux_leak_4.c:69:3 start: ./benchmarks/tmux/leak_4/tmux_leak_4.c:69:3 finish: ./benchmarks/tmux/leak_4/tmux_leak_4.c:69:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:xvasprintf========= [0m
[40;42m =======pre_check_funciton:xasprintf========= [0m
[40;42m =======start_check_funciton:xasprintf========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f4f513c0630
    type <pointer_type 0x7f4f513a2dc8
        type <pointer_type 0x7f4f513a2c78 type <integer_type 0x7f4f513a2a80 char>
            public unsigned DI
            size <integer_cst 0x7f4f51879bb8 constant 64>
            unit-size <integer_cst 0x7f4f51879bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f4f51884168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f4f513a2dc8>>
        public unsigned DI size <integer_cst 0x7f4f51879bb8 64> unit-size <integer_cst 0x7f4f51879bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f4f513bb600 ret>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f4f513b4768>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
i_6 = xvasprintf (ret_2(D), fmt_3(D), ap_4(D));
./benchmarks/tmux/leak_4/tmux_leak_4.c:56:13: warning: use location
   56 |         i = xvasprintf(ret, fmt, ap);
      |             ^
this stmt is child function---xvasprintf-----

 ================== trace ================== 
trace fucntion name:xvasprintf 
[40;44m =======trace_function_path xvasprintf  function_call count: 5 level :0========  [0m
[40;36m ======= node_fun:xvasprintf========= [0m
[40;36m ======= find relate stmt with ret ========= [0m
[40;36m ======= relate stmt argument:ret ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:strerror========= [0m
[40;46m =======add node_fun stack:strerror========= [0m
[40;42m =======pre add _ fucntion:__errno_location========= [0m
[40;46m =======add node_fun stack:__errno_location========= [0m
[40;42m =======pre add _ fucntion:vasprintf========= [0m
[40;46m =======add node_fun stack:vasprintf========= [0m
[40;44m =======trace_function_path vasprintf  function_call count: 2 level :1========  [0m
[40;36m ======= node_fun:vasprintf========= [0m
[40;36m ======= find relate stmt with ret ========= [0m
[40;36m ======= relate stmt argument:ret ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
i_6 = xvasprintf (ret_2(D), fmt_3(D), ap_4(D));
./benchmarks/tmux/leak_4/tmux_leak_4.c:56:13: warning: use location
this stmt is child function---xvasprintf-----

 ================== trace ================== 
trace fucntion name:xvasprintf 
[40;44m =======trace_function_path xvasprintf  function_call count: 5 level :0========  [0m
[40;36m ======= node_fun:xvasprintf========= [0m
[40;36m ======= find relate stmt with ret ========= [0m
[40;36m ======= relate stmt argument:ret ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:strerror========= [0m
[40;46m =======add node_fun stack:strerror========= [0m
[40;42m =======pre add _ fucntion:__errno_location========= [0m
[40;46m =======add node_fun stack:__errno_location========= [0m
[40;42m =======pre add _ fucntion:vasprintf========= [0m
[40;46m =======add node_fun stack:vasprintf========= [0m
[40;44m =======trace_function_path vasprintf  function_call count: 2 level :1========  [0m
[40;36m ======= node_fun:vasprintf========= [0m
[40;36m ======= find relate stmt with ret ========= [0m
[40;36m ======= relate stmt argument:ret ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f4f513c0630
    type <pointer_type 0x7f4f513a2dc8
        type <pointer_type 0x7f4f513a2c78 type <integer_type 0x7f4f513a2a80 char>
            public unsigned DI
            size <integer_cst 0x7f4f51879bb8 constant 64>
            unit-size <integer_cst 0x7f4f51879bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f4f51884168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f4f513a2dc8>>
        public unsigned DI size <integer_cst 0x7f4f51879bb8 64> unit-size <integer_cst 0x7f4f51879bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f4f513bb600 ret>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f4f513b4768>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:xasprintf========= [0m
[40;42m =======pre add _ fucntion:getenv========= [0m
[40;33m =======POP node_fun stack:getenv========= [0m
[40;42m =======pre add _ fucntion:getuid========= [0m
[40;33m =======POP node_fun stack:getuid========= [0m
[40;42m =======pre_check_funciton:make_label========= [0m
[40;42m =======start_check_funciton:make_label========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f4f51881678
    type <integer_type 0x7f4f5188e5e8 int public SI
        size <integer_cst 0x7f4f51879df8 constant 32>
        unit-size <integer_cst 0x7f4f51879e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4f5188e5e8 precision:32 min <integer_cst 0x7f4f51879db0 -2147483648> max <integer_cst 0x7f4f51879dc8 2147483647>
        pointer_to_this <pointer_type 0x7f4f518959d8>>
   
    def_stmt _1 = getuid ();
    version:1>
# .MEM_42 = VDEF <.MEM_41(D)>
_1 = getuid ();

 ================== trace ptable================== 
trace fucntion name:getuid 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---getuid-----
this other function ------getuid-----
 
 Start check Pointer Collect  

======================================================================
uid_26 = (uid_t) _1;
./benchmarks/tmux/leak_4/tmux_leak_4.c:84:13: warning: use location
   84 |         uid = getuid();
      |             ^
uid_26 = (uid_t) _1;
./benchmarks/tmux/leak_4/tmux_leak_4.c:84:13: warning: use location
_1 = getuid ();
./benchmarks/tmux/leak_4/tmux_leak_4.c:84:15: warning: use location
   84 |         uid = getuid();
      |               ^
this stmt is child function---getuid-----

 ================== trace ================== 
trace fucntion name:getuid 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f4f51881678
    type <integer_type 0x7f4f5188e5e8 int public SI
        size <integer_cst 0x7f4f51879df8 constant 32>
        unit-size <integer_cst 0x7f4f51879e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4f5188e5e8 precision:32 min <integer_cst 0x7f4f51879db0 -2147483648> max <integer_cst 0x7f4f51879dc8 2147483647>
        pointer_to_this <pointer_type 0x7f4f518959d8>>
   
    def_stmt _1 = getuid ();
    version:1>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: use location
  113 |         free(base);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f4f51a75ba0
    type <pointer_type 0x7f4f513abbd0
        type <array_type 0x7f4f513abb28 type <integer_type 0x7f4f513a2a80 char>
            BLK
            size <integer_cst 0x7f4f51399828 constant 96>
            unit-size <integer_cst 0x7f4f513998d0 constant 12>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f4f513aba80>
            pointer_to_this <pointer_type 0x7f4f513abbd0>>
        unsigned DI
        size <integer_cst 0x7f4f51879bb8 constant 64>
        unit-size <integer_cst 0x7f4f51879bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f4f513b5c58 type <array_type 0x7f4f513abb28>
        readonly constant static "TMUX_TMPDIR\000">
    ./benchmarks/tmux/leak_4/tmux_leak_4.c:86:18 start: ./benchmarks/tmux/leak_4/tmux_leak_4.c:86:18 finish: ./benchmarks/tmux/leak_4/tmux_leak_4.c:86:18>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f4f51a75be0
    type <pointer_type 0x7f4f513a2dc8
        type <pointer_type 0x7f4f513a2c78 type <integer_type 0x7f4f513a2a80 char>
            public unsigned DI
            size <integer_cst 0x7f4f51879bb8 constant 64>
            unit-size <integer_cst 0x7f4f51879bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f4f51884168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f4f513a2dc8>>
        public unsigned DI size <integer_cst 0x7f4f51879bb8 64> unit-size <integer_cst 0x7f4f51879bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    arg:0 <var_decl 0x7f4f513bc000 base type <pointer_type 0x7f4f513a2c78>
        addressable unsigned DI ./benchmarks/tmux/leak_4/tmux_leak_4.c:77:9 size <integer_cst 0x7f4f51879bb8 64> unit-size <integer_cst 0x7f4f51879bd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7f4f513a3e00 make_label>
        chain <var_decl 0x7f4f52121f30 resolved type <array_type 0x7f4f513ab930>
            addressable BLK ./benchmarks/tmux/leak_4/tmux_leak_4.c:77:15
            size <integer_cst 0x7f4f51399888 constant 32768>
            unit-size <integer_cst 0x7f4f51399870 constant 4096>
            align:8 warn_if_not_align:0 context <function_decl 0x7f4f513a3e00 make_label> chain <var_decl 0x7f4f52121ea0 s>>>
    ./benchmarks/tmux/leak_4/tmux_leak_4.c:87:3 start: ./benchmarks/tmux/leak_4/tmux_leak_4.c:87:3 finish: ./benchmarks/tmux/leak_4/tmux_leak_4.c:87:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f4f51a75c60
    type <pointer_type 0x7f4f513a2dc8
        type <pointer_type 0x7f4f513a2c78 type <integer_type 0x7f4f513a2a80 char>
            public unsigned DI
            size <integer_cst 0x7f4f51879bb8 constant 64>
            unit-size <integer_cst 0x7f4f51879bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f4f51884168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f4f513a2dc8>>
        public unsigned DI size <integer_cst 0x7f4f51879bb8 64> unit-size <integer_cst 0x7f4f51879bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    arg:0 <var_decl 0x7f4f513bc000 base type <pointer_type 0x7f4f513a2c78>
        addressable unsigned DI ./benchmarks/tmux/leak_4/tmux_leak_4.c:77:9 size <integer_cst 0x7f4f51879bb8 64> unit-size <integer_cst 0x7f4f51879bd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7f4f513a3e00 make_label>
        chain <var_decl 0x7f4f52121f30 resolved type <array_type 0x7f4f513ab930>
            addressable BLK ./benchmarks/tmux/leak_4/tmux_leak_4.c:77:15
            size <integer_cst 0x7f4f51399888 constant 32768>
            unit-size <integer_cst 0x7f4f51399870 constant 4096>
            align:8 warn_if_not_align:0 context <function_decl 0x7f4f513a3e00 make_label> chain <var_decl 0x7f4f52121ea0 s>>>
    ./benchmarks/tmux/leak_4/tmux_leak_4.c:89:3 start: ./benchmarks/tmux/leak_4/tmux_leak_4.c:89:3 finish: ./benchmarks/tmux/leak_4/tmux_leak_4.c:89:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f4f51881708
    type <pointer_type 0x7f4f513a2c78
        type <integer_type 0x7f4f513a2a80 char public QI
            size <integer_cst 0x7f4f51879ca8 constant 8>
            unit-size <integer_cst 0x7f4f51879cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4f5188e3f0 precision:8 min <integer_cst 0x7f4f51399720 -128> max <integer_cst 0x7f4f51399708 127> context <translation_unit_decl 0x7f4f51884168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f4f513a2c78>>
        public unsigned DI
        size <integer_cst 0x7f4f51879bb8 constant 64>
        unit-size <integer_cst 0x7f4f51879bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f4f51884168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
        pointer_to_this <pointer_type 0x7f4f513a2dc8>>
   
    def_stmt _3 = base;
    version:3
    ptr-info 0x7f4f513b45b8>
# VUSE <.MEM_38>
_3 = base;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_4 = mkdir (_3, 0);
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:13: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |             ^
this stmt is child function---mkdir-----

 ================== trace ================== 
trace fucntion name:mkdir 

 ================== trace ================== 
trace fucntion free:0 
if (_4 != 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:12: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |            ^
if (_4 != 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:12: warning: use location
Cond in fucntion make_label basic block 6
 ================== possible direct basic block ================= 
from make_label basic block 7
 ================== possible direct basic block ================= 
from make_label basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f4f51881708
    type <pointer_type 0x7f4f513a2c78
        type <integer_type 0x7f4f513a2a80 char public QI
            size <integer_cst 0x7f4f51879ca8 constant 8>
            unit-size <integer_cst 0x7f4f51879cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4f5188e3f0 precision:8 min <integer_cst 0x7f4f51399720 -128> max <integer_cst 0x7f4f51399708 127> context <translation_unit_decl 0x7f4f51884168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f4f513a2c78>>
        public unsigned DI
        size <integer_cst 0x7f4f51879bb8 constant 64>
        unit-size <integer_cst 0x7f4f51879bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f4f51884168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
        pointer_to_this <pointer_type 0x7f4f513a2dc8>>
   
    def_stmt _3 = base;
    version:3
    ptr-info 0x7f4f513b45b8>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: use location
  113 |         free(base);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f4f51881798
    type <pointer_type 0x7f4f518959d8
        type <integer_type 0x7f4f5188e5e8 int public SI
            size <integer_cst 0x7f4f51879df8 constant 32>
            unit-size <integer_cst 0x7f4f51879e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4f5188e5e8 precision:32 min <integer_cst 0x7f4f51879db0 -2147483648> max <integer_cst 0x7f4f51879dc8 2147483647>
            pointer_to_this <pointer_type 0x7f4f518959d8>>
        public unsigned DI
        size <integer_cst 0x7f4f51879bb8 constant 64>
        unit-size <integer_cst 0x7f4f51879bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = __errno_location ();
    version:5
    ptr-info 0x7f4f513b45d0>
_5 = __errno_location ();

 ================== trace ptable================== 
trace fucntion name:__errno_location 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---__errno_location-----
this other function ------__errno_location-----
 
 Start check Pointer Collect  

======================================================================
_6 = *_5;
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:42: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |                                          ^
if (_6 != 17)
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:39: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |                                       ^
if (_6 != 17)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:39: warning: use location
Cond in fucntion make_label basic block 7
 ================== possible direct basic block ================= 
from make_label basic block 8
 ================== possible direct basic block ================= 
from make_label basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_5 = __errno_location ();
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:42: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |                                          ^
this stmt is child function---__errno_location-----

 ================== trace ================== 
trace fucntion name:__errno_location 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f4f51881798
    type <pointer_type 0x7f4f518959d8
        type <integer_type 0x7f4f5188e5e8 int public SI
            size <integer_cst 0x7f4f51879df8 constant 32>
            unit-size <integer_cst 0x7f4f51879e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4f5188e5e8 precision:32 min <integer_cst 0x7f4f51879db0 -2147483648> max <integer_cst 0x7f4f51879dc8 2147483647>
            pointer_to_this <pointer_type 0x7f4f518959d8>>
        public unsigned DI
        size <integer_cst 0x7f4f51879bb8 constant 64>
        unit-size <integer_cst 0x7f4f51879bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = __errno_location ();
    version:5
    ptr-info 0x7f4f513b45d0>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: use location
  113 |         free(base);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f4f51881828
    type <pointer_type 0x7f4f513a2c78
        type <integer_type 0x7f4f513a2a80 char public QI
            size <integer_cst 0x7f4f51879ca8 constant 8>
            unit-size <integer_cst 0x7f4f51879cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4f5188e3f0 precision:8 min <integer_cst 0x7f4f51399720 -128> max <integer_cst 0x7f4f51399708 127> context <translation_unit_decl 0x7f4f51884168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f4f513a2c78>>
        public unsigned DI
        size <integer_cst 0x7f4f51879bb8 constant 64>
        unit-size <integer_cst 0x7f4f51879bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f4f51884168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
        pointer_to_this <pointer_type 0x7f4f513a2dc8>>
   
    def_stmt _7 = base;
    version:7
    ptr-info 0x7f4f513b45e8>
# VUSE <.MEM_46>
_7 = base;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_8 = lstat (_7, &sb);
./benchmarks/tmux/leak_4/tmux_leak_4.c:94:13: warning: use location
   94 |         if (lstat(base, &sb) != 0)
      |             ^
this stmt is child function---lstat-----

 ================== trace ================== 
trace fucntion name:lstat 

 ================== trace ================== 
trace fucntion free:0 
if (_8 != 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:94:12: warning: use location
   94 |         if (lstat(base, &sb) != 0)
      |            ^
if (_8 != 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_4/tmux_leak_4.c:94:12: warning: use location
Cond in fucntion make_label basic block 9
 ================== possible direct basic block ================= 
from make_label basic block 10
 ================== possible direct basic block ================= 
from make_label basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f4f51881828
    type <pointer_type 0x7f4f513a2c78
        type <integer_type 0x7f4f513a2a80 char public QI
            size <integer_cst 0x7f4f51879ca8 constant 8>
            unit-size <integer_cst 0x7f4f51879cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4f5188e3f0 precision:8 min <integer_cst 0x7f4f51399720 -128> max <integer_cst 0x7f4f51399708 127> context <translation_unit_decl 0x7f4f51884168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f4f513a2c78>>
        public unsigned DI
        size <integer_cst 0x7f4f51879bb8 constant 64>
        unit-size <integer_cst 0x7f4f51879bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f4f51884168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
        pointer_to_this <pointer_type 0x7f4f513a2dc8>>
   
    def_stmt _7 = base;
    version:7
    ptr-info 0x7f4f513b45e8>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: use location
  113 |         free(base);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f4f51881948
    type <pointer_type 0x7f4f518959d8
        type <integer_type 0x7f4f5188e5e8 int public SI
            size <integer_cst 0x7f4f51879df8 constant 32>
            unit-size <integer_cst 0x7f4f51879e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4f5188e5e8 precision:32 min <integer_cst 0x7f4f51879db0 -2147483648> max <integer_cst 0x7f4f51879dc8 2147483647>
            pointer_to_this <pointer_type 0x7f4f518959d8>>
        public unsigned DI
        size <integer_cst 0x7f4f51879bb8 constant 64>
        unit-size <integer_cst 0x7f4f51879bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _11 = __errno_location ();
    version:11
    ptr-info 0x7f4f513b4600>
_11 = __errno_location ();

 ================== trace ptable================== 
trace fucntion name:__errno_location 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---__errno_location-----
this other function ------__errno_location-----
 
 Start check Pointer Collect  

======================================================================
*_11 = 20;
./benchmarks/tmux/leak_4/tmux_leak_4.c:97:23: warning: use location
   97 |                 errno = ENOTDIR;
      |                       ^
*_11 = 20;
./benchmarks/tmux/leak_4/tmux_leak_4.c:97:23: warning: use location
_11 = __errno_location ();
./benchmarks/tmux/leak_4/tmux_leak_4.c:97:17: warning: use location
   97 |                 errno = ENOTDIR;
      |                 ^
this stmt is child function---__errno_location-----

 ================== trace ================== 
trace fucntion name:__errno_location 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f4f51881948
    type <pointer_type 0x7f4f518959d8
        type <integer_type 0x7f4f5188e5e8 int public SI
            size <integer_cst 0x7f4f51879df8 constant 32>
            unit-size <integer_cst 0x7f4f51879e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4f5188e5e8 precision:32 min <integer_cst 0x7f4f51879db0 -2147483648> max <integer_cst 0x7f4f51879dc8 2147483647>
            pointer_to_this <pointer_type 0x7f4f518959d8>>
        public unsigned DI
        size <integer_cst 0x7f4f51879bb8 constant 64>
        unit-size <integer_cst 0x7f4f51879bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _11 = __errno_location ();
    version:11
    ptr-info 0x7f4f513b4600>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: use location
  113 |         free(base);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f4f518819d8
    type <pointer_type 0x7f4f518959d8
        type <integer_type 0x7f4f5188e5e8 int public SI
            size <integer_cst 0x7f4f51879df8 constant 32>
            unit-size <integer_cst 0x7f4f51879e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4f5188e5e8 precision:32 min <integer_cst 0x7f4f51879db0 -2147483648> max <integer_cst 0x7f4f51879dc8 2147483647>
            pointer_to_this <pointer_type 0x7f4f518959d8>>
        public unsigned DI
        size <integer_cst 0x7f4f51879bb8 constant 64>
        unit-size <integer_cst 0x7f4f51879bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _13 = __errno_location ();
    version:13
    ptr-info 0x7f4f513b4618>
_13 = __errno_location ();

 ================== trace ptable================== 
trace fucntion name:__errno_location 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---__errno_location-----
this other function ------__errno_location-----
 
 Start check Pointer Collect  

======================================================================
*_13 = 13;
./benchmarks/tmux/leak_4/tmux_leak_4.c:101:23: warning: use location
  101 |                 errno = EACCES;
      |                       ^
*_13 = 13;
./benchmarks/tmux/leak_4/tmux_leak_4.c:101:23: warning: use location
_13 = __errno_location ();
./benchmarks/tmux/leak_4/tmux_leak_4.c:101:17: warning: use location
  101 |                 errno = EACCES;
      |                 ^
this stmt is child function---__errno_location-----

 ================== trace ================== 
trace fucntion name:__errno_location 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f4f518819d8
    type <pointer_type 0x7f4f518959d8
        type <integer_type 0x7f4f5188e5e8 int public SI
            size <integer_cst 0x7f4f51879df8 constant 32>
            unit-size <integer_cst 0x7f4f51879e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4f5188e5e8 precision:32 min <integer_cst 0x7f4f51879db0 -2147483648> max <integer_cst 0x7f4f51879dc8 2147483647>
            pointer_to_this <pointer_type 0x7f4f518959d8>>
        public unsigned DI
        size <integer_cst 0x7f4f51879bb8 constant 64>
        unit-size <integer_cst 0x7f4f51879bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _13 = __errno_location ();
    version:13
    ptr-info 0x7f4f513b4618>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: use location
  113 |         free(base);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f4f51881a20
    type <pointer_type 0x7f4f513a2c78
        type <integer_type 0x7f4f513a2a80 char public QI
            size <integer_cst 0x7f4f51879ca8 constant 8>
            unit-size <integer_cst 0x7f4f51879cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4f5188e3f0 precision:8 min <integer_cst 0x7f4f51399720 -128> max <integer_cst 0x7f4f51399708 127> context <translation_unit_decl 0x7f4f51884168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f4f513a2c78>>
        public unsigned DI
        size <integer_cst 0x7f4f51879bb8 constant 64>
        unit-size <integer_cst 0x7f4f51879bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f4f51884168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
        pointer_to_this <pointer_type 0x7f4f513a2dc8>>
   
    def_stmt _14 = base;
    version:14
    ptr-info 0x7f4f513b4630>
# VUSE <.MEM_47>
_14 = base;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_48 = VDEF <.MEM_47>
_15 = realpath (_14, &resolved);
bb index := 15
# VUSE <.MEM_56>
return 0B;
In function â€˜make_labelâ€™:
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_56>
return 0B;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_48 = VDEF <.MEM_47>
_15 = realpath (_14, &resolved);
bb index := 15
# VUSE <.MEM_35>
return _30;
./benchmarks/tmux/leak_4/tmux_leak_4.c:41:24: warning: use location
   41 |         return(s - src - 1);        /* count does not include NUL */
      |                        ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_35>
return _30;
./benchmarks/tmux/leak_4/tmux_leak_4.c:41:24: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 11

======================================================================
_15 = realpath (_14, &resolved);
In function â€˜mainâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:105:13: warning: use location
  105 |         if (realpath(base, resolved) == NULL)
      |             ^
this stmt is child function---realpath-----

 ================== trace ================== 
trace fucntion name:realpath 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_15 == 0B)
bb index := 15
# VUSE <.MEM_56>
return 0B;
In function â€˜make_labelâ€™:
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_56>
return 0B;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_15 == 0B)
bb index := 15
# VUSE <.MEM_35>
return _30;
./benchmarks/tmux/leak_4/tmux_leak_4.c:41:24: warning: use location
   41 |         return(s - src - 1);        /* count does not include NUL */
      |                        ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_35>
return _30;
./benchmarks/tmux/leak_4/tmux_leak_4.c:41:24: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 11

======================================================================
if (_15 == 0B)
In function â€˜mainâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:105:12: warning: use location
  105 |         if (realpath(base, resolved) == NULL)
      |            ^
if (_15 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_4/tmux_leak_4.c:105:12: warning: use location
Cond in fucntion make_label basic block 15
 ================== possible direct basic block ================= 
from make_label basic block 16
 ================== possible direct basic block ================= 
from make_label basic block 18
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f4f51881a20
    type <pointer_type 0x7f4f513a2c78
        type <integer_type 0x7f4f513a2a80 char public QI
            size <integer_cst 0x7f4f51879ca8 constant 8>
            unit-size <integer_cst 0x7f4f51879cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4f5188e3f0 precision:8 min <integer_cst 0x7f4f51399720 -128> max <integer_cst 0x7f4f51399708 127> context <translation_unit_decl 0x7f4f51884168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f4f513a2c78>>
        public unsigned DI
        size <integer_cst 0x7f4f51879bb8 constant 64>
        unit-size <integer_cst 0x7f4f51879bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f4f51884168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
        pointer_to_this <pointer_type 0x7f4f513a2dc8>>
   
    def_stmt _14 = base;
    version:14
    ptr-info 0x7f4f513b4630>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: use location
  113 |         free(base);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f4f51a75e20
    type <pointer_type 0x7f4f513ad348
        type <array_type 0x7f4f513ab930 type <integer_type 0x7f4f513a2a80 char>
            BLK
            size <integer_cst 0x7f4f51399888 constant 32768>
            unit-size <integer_cst 0x7f4f51399870 constant 4096>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f4f513ab888>
            pointer_to_this <pointer_type 0x7f4f513ad348>>
        unsigned DI
        size <integer_cst 0x7f4f51879bb8 constant 64>
        unit-size <integer_cst 0x7f4f51879bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    arg:0 <var_decl 0x7f4f52121f30 resolved type <array_type 0x7f4f513ab930>
        addressable BLK ./benchmarks/tmux/leak_4/tmux_leak_4.c:77:15 size <integer_cst 0x7f4f51399888 32768> unit-size <integer_cst 0x7f4f51399870 4096>
        align:8 warn_if_not_align:0 context <function_decl 0x7f4f513a3e00 make_label>
        chain <var_decl 0x7f4f52121ea0 s type <pointer_type 0x7f4f513a2c78>
            unsigned DI ./benchmarks/tmux/leak_4/tmux_leak_4.c:77:43 size <integer_cst 0x7f4f51879bb8 64> unit-size <integer_cst 0x7f4f51879bd0 8>
            align:64 warn_if_not_align:0 context <function_decl 0x7f4f513a3e00 make_label> chain <var_decl 0x7f4f52121e10 sb>>>
    ./benchmarks/tmux/leak_4/tmux_leak_4.c:106:11 start: ./benchmarks/tmux/leak_4/tmux_leak_4.c:106:11 finish: ./benchmarks/tmux/leak_4/tmux_leak_4.c:106:11>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f4f51881af8
    type <pointer_type 0x7f4f518959d8
        type <integer_type 0x7f4f5188e5e8 int public SI
            size <integer_cst 0x7f4f51879df8 constant 32>
            unit-size <integer_cst 0x7f4f51879e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4f5188e5e8 precision:32 min <integer_cst 0x7f4f51879db0 -2147483648> max <integer_cst 0x7f4f51879dc8 2147483647>
            pointer_to_this <pointer_type 0x7f4f518959d8>>
        public unsigned DI
        size <integer_cst 0x7f4f51879bb8 constant 64>
        unit-size <integer_cst 0x7f4f51879bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _17 = __errno_location ();
    version:17
    ptr-info 0x7f4f513b4678>
_17 = __errno_location ();

 ================== trace ptable================== 
trace fucntion name:__errno_location 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---__errno_location-----
this other function ------__errno_location-----
 
 Start check Pointer Collect  

======================================================================
saved_errno_37 = *_17;
./benchmarks/tmux/leak_4/tmux_leak_4.c:112:21: warning: use location
  112 |         saved_errno = errno;
      |                     ^
*_19 = saved_errno_37;
./benchmarks/tmux/leak_4/tmux_leak_4.c:114:15: warning: use location
  114 |         errno = saved_errno;
      |               ^
_17 = __errno_location ();
./benchmarks/tmux/leak_4/tmux_leak_4.c:112:23: warning: use location
  112 |         saved_errno = errno;
      |                       ^
this stmt is child function---__errno_location-----

 ================== trace ================== 
trace fucntion name:__errno_location 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f4f51881af8
    type <pointer_type 0x7f4f518959d8
        type <integer_type 0x7f4f5188e5e8 int public SI
            size <integer_cst 0x7f4f51879df8 constant 32>
            unit-size <integer_cst 0x7f4f51879e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4f5188e5e8 precision:32 min <integer_cst 0x7f4f51879db0 -2147483648> max <integer_cst 0x7f4f51879dc8 2147483647>
            pointer_to_this <pointer_type 0x7f4f518959d8>>
        public unsigned DI
        size <integer_cst 0x7f4f51879bb8 constant 64>
        unit-size <integer_cst 0x7f4f51879bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _17 = __errno_location ();
    version:17
    ptr-info 0x7f4f513b4678>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: use location
  113 |         free(base);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: Use after free error!: free location 
# .MEM_53 = VDEF <.MEM_52>
*_19 = saved_errno_37;
./benchmarks/tmux/leak_4/tmux_leak_4.c:114:15: warning: use location
  114 |         errno = saved_errno;
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/tmux/leak_4/tmux_leak_4.c:92:17: warning: use location
   92 |                 goto fail;
      |                 ^
	relate logic:= 1
succs:= 7
if (_6 != 17)
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:39: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |                                       ^
	relate logic:= 1
succs:= 6
if (_4 != 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:12: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 10
// predicted unlikely by goto predictor.
./benchmarks/tmux/leak_4/tmux_leak_4.c:95:17: warning: use location
   95 |                 goto fail;
      |                 ^
	relate logic:= 1
succs:= 9
if (_8 != 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:94:12: warning: use location
   94 |         if (lstat(base, &sb) != 0)
      |            ^
	relate logic:= 0
succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/tmux/leak_4/tmux_leak_4.c:92:17: warning: use location
   92 |                 goto fail;
      |                 ^
	relate logic:= 1
succs:= 7
if (_6 != 17)
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:39: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |                                       ^
	relate logic:= 1
succs:= 6
if (_4 != 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:12: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 12
// predicted unlikely by goto predictor.
./benchmarks/tmux/leak_4/tmux_leak_4.c:98:17: warning: use location
   98 |                 goto fail;
      |                 ^
	relate logic:= 1
succs:= 11
if (_10 != 16384)
./benchmarks/tmux/leak_4/tmux_leak_4.c:96:12: warning: use location
   96 |         if (!S_ISDIR(sb.st_mode)) {
      |            ^
	relate logic:= 0
succs:= 10
// predicted unlikely by goto predictor.
./benchmarks/tmux/leak_4/tmux_leak_4.c:95:17: warning: use location
   95 |                 goto fail;
      |                 ^
	relate logic:= 1
succs:= 9
if (_8 != 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:94:12: warning: use location
   94 |         if (lstat(base, &sb) != 0)
      |            ^
	relate logic:= 0
succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/tmux/leak_4/tmux_leak_4.c:92:17: warning: use location
   92 |                 goto fail;
      |                 ^
	relate logic:= 1
succs:= 7
if (_6 != 17)
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:39: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |                                       ^
	relate logic:= 1
succs:= 6
if (_4 != 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:12: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 14
// predicted unlikely by goto predictor.
./benchmarks/tmux/leak_4/tmux_leak_4.c:102:17: warning: use location
  102 |                 goto fail;
      |                 ^
	relate logic:= 1
succs:= 13
if (_12 != uid_26)
./benchmarks/tmux/leak_4/tmux_leak_4.c:100:12: warning: use location
  100 |         if (sb.st_uid != uid || (sb.st_mode & S_IRWXO) != 0) {
      |            ^
	relate logic:= 0
succs:= 12
// predicted unlikely by goto predictor.
./benchmarks/tmux/leak_4/tmux_leak_4.c:98:17: warning: use location
   98 |                 goto fail;
      |                 ^
	relate logic:= 1
succs:= 11
if (_10 != 16384)
./benchmarks/tmux/leak_4/tmux_leak_4.c:96:12: warning: use location
   96 |         if (!S_ISDIR(sb.st_mode)) {
      |            ^
	relate logic:= 0
succs:= 10
// predicted unlikely by goto predictor.
./benchmarks/tmux/leak_4/tmux_leak_4.c:95:17: warning: use location
   95 |                 goto fail;
      |                 ^
	relate logic:= 1
succs:= 9
if (_8 != 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:94:12: warning: use location
   94 |         if (lstat(base, &sb) != 0)
      |            ^
	relate logic:= 0
succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/tmux/leak_4/tmux_leak_4.c:92:17: warning: use location
   92 |                 goto fail;
      |                 ^
	relate logic:= 1
succs:= 7
if (_6 != 17)
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:39: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |                                       ^
	relate logic:= 1
succs:= 6
if (_4 != 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:12: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f4f51881b88
    type <pointer_type 0x7f4f518959d8
        type <integer_type 0x7f4f5188e5e8 int public SI
            size <integer_cst 0x7f4f51879df8 constant 32>
            unit-size <integer_cst 0x7f4f51879e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4f5188e5e8 precision:32 min <integer_cst 0x7f4f51879db0 -2147483648> max <integer_cst 0x7f4f51879dc8 2147483647>
            pointer_to_this <pointer_type 0x7f4f518959d8>>
        public unsigned DI
        size <integer_cst 0x7f4f51879bb8 constant 64>
        unit-size <integer_cst 0x7f4f51879bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _19 = __errno_location ();
    version:19
    ptr-info 0x7f4f513b46a8>
_19 = __errno_location ();

 ================== trace ptable================== 
trace fucntion name:__errno_location 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---__errno_location-----
this other function ------__errno_location-----
 
 Start check Pointer Collect  

======================================================================
*_19 = saved_errno_37;
./benchmarks/tmux/leak_4/tmux_leak_4.c:114:15: warning: use location
  114 |         errno = saved_errno;
      |               ^
*_19 = saved_errno_37;
./benchmarks/tmux/leak_4/tmux_leak_4.c:114:15: warning: use location
_19 = __errno_location ();
./benchmarks/tmux/leak_4/tmux_leak_4.c:114:9: warning: use location
  114 |         errno = saved_errno;
      |         ^
this stmt is child function---__errno_location-----

 ================== trace ================== 
trace fucntion name:__errno_location 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f4f51881b88
    type <pointer_type 0x7f4f518959d8
        type <integer_type 0x7f4f5188e5e8 int public SI
            size <integer_cst 0x7f4f51879df8 constant 32>
            unit-size <integer_cst 0x7f4f51879e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4f5188e5e8 precision:32 min <integer_cst 0x7f4f51879db0 -2147483648> max <integer_cst 0x7f4f51879dc8 2147483647>
            pointer_to_this <pointer_type 0x7f4f518959d8>>
        public unsigned DI
        size <integer_cst 0x7f4f51879bb8 constant 64>
        unit-size <integer_cst 0x7f4f51879bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _19 = __errno_location ();
    version:19
    ptr-info 0x7f4f513b46a8>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: use location
  113 |         free(base);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: Use after free error!: free location 
# .MEM_53 = VDEF <.MEM_52>
*_19 = saved_errno_37;
./benchmarks/tmux/leak_4/tmux_leak_4.c:114:15: warning: use location
  114 |         errno = saved_errno;
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/tmux/leak_4/tmux_leak_4.c:92:17: warning: use location
   92 |                 goto fail;
      |                 ^
	relate logic:= 1
succs:= 7
if (_6 != 17)
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:39: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |                                       ^
	relate logic:= 1
succs:= 6
if (_4 != 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:12: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 10
// predicted unlikely by goto predictor.
./benchmarks/tmux/leak_4/tmux_leak_4.c:95:17: warning: use location
   95 |                 goto fail;
      |                 ^
	relate logic:= 1
succs:= 9
if (_8 != 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:94:12: warning: use location
   94 |         if (lstat(base, &sb) != 0)
      |            ^
	relate logic:= 0
succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/tmux/leak_4/tmux_leak_4.c:92:17: warning: use location
   92 |                 goto fail;
      |                 ^
	relate logic:= 1
succs:= 7
if (_6 != 17)
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:39: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |                                       ^
	relate logic:= 1
succs:= 6
if (_4 != 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:12: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 12
// predicted unlikely by goto predictor.
./benchmarks/tmux/leak_4/tmux_leak_4.c:98:17: warning: use location
   98 |                 goto fail;
      |                 ^
	relate logic:= 1
succs:= 11
if (_10 != 16384)
./benchmarks/tmux/leak_4/tmux_leak_4.c:96:12: warning: use location
   96 |         if (!S_ISDIR(sb.st_mode)) {
      |            ^
	relate logic:= 0
succs:= 10
// predicted unlikely by goto predictor.
./benchmarks/tmux/leak_4/tmux_leak_4.c:95:17: warning: use location
   95 |                 goto fail;
      |                 ^
	relate logic:= 1
succs:= 9
if (_8 != 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:94:12: warning: use location
   94 |         if (lstat(base, &sb) != 0)
      |            ^
	relate logic:= 0
succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/tmux/leak_4/tmux_leak_4.c:92:17: warning: use location
   92 |                 goto fail;
      |                 ^
	relate logic:= 1
succs:= 7
if (_6 != 17)
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:39: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |                                       ^
	relate logic:= 1
succs:= 6
if (_4 != 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:12: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 14
// predicted unlikely by goto predictor.
./benchmarks/tmux/leak_4/tmux_leak_4.c:102:17: warning: use location
  102 |                 goto fail;
      |                 ^
	relate logic:= 1
succs:= 13
if (_12 != uid_26)
./benchmarks/tmux/leak_4/tmux_leak_4.c:100:12: warning: use location
  100 |         if (sb.st_uid != uid || (sb.st_mode & S_IRWXO) != 0) {
      |            ^
	relate logic:= 0
succs:= 12
// predicted unlikely by goto predictor.
./benchmarks/tmux/leak_4/tmux_leak_4.c:98:17: warning: use location
   98 |                 goto fail;
      |                 ^
	relate logic:= 1
succs:= 11
if (_10 != 16384)
./benchmarks/tmux/leak_4/tmux_leak_4.c:96:12: warning: use location
   96 |         if (!S_ISDIR(sb.st_mode)) {
      |            ^
	relate logic:= 0
succs:= 10
// predicted unlikely by goto predictor.
./benchmarks/tmux/leak_4/tmux_leak_4.c:95:17: warning: use location
   95 |                 goto fail;
      |                 ^
	relate logic:= 1
succs:= 9
if (_8 != 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:94:12: warning: use location
   94 |         if (lstat(base, &sb) != 0)
      |            ^
	relate logic:= 0
succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/tmux/leak_4/tmux_leak_4.c:92:17: warning: use location
   92 |                 goto fail;
      |                 ^
	relate logic:= 1
succs:= 7
if (_6 != 17)
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:39: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |                                       ^
	relate logic:= 1
succs:= 6
if (_4 != 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:12: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: Use after free error!: free location 
  113 |         free(base);
      |         ^
# .MEM_53 = VDEF <.MEM_52>
*_19 = saved_errno_37;
./benchmarks/tmux/leak_4/tmux_leak_4.c:114:15: warning: use location
  114 |         errno = saved_errno;
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/tmux/leak_4/tmux_leak_4.c:92:17: warning: use location
   92 |                 goto fail;
      |                 ^
	relate logic:= 1
succs:= 7
if (_6 != 17)
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:39: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |                                       ^
	relate logic:= 1
succs:= 6
if (_4 != 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:12: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 10
// predicted unlikely by goto predictor.
./benchmarks/tmux/leak_4/tmux_leak_4.c:95:17: warning: use location
   95 |                 goto fail;
      |                 ^
	relate logic:= 1
succs:= 9
if (_8 != 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:94:12: warning: use location
   94 |         if (lstat(base, &sb) != 0)
      |            ^
	relate logic:= 0
succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/tmux/leak_4/tmux_leak_4.c:92:17: warning: use location
   92 |                 goto fail;
      |                 ^
	relate logic:= 1
succs:= 7
if (_6 != 17)
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:39: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |                                       ^
	relate logic:= 1
succs:= 6
if (_4 != 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:12: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 12
// predicted unlikely by goto predictor.
./benchmarks/tmux/leak_4/tmux_leak_4.c:98:17: warning: use location
   98 |                 goto fail;
      |                 ^
	relate logic:= 1
succs:= 11
if (_10 != 16384)
./benchmarks/tmux/leak_4/tmux_leak_4.c:96:12: warning: use location
   96 |         if (!S_ISDIR(sb.st_mode)) {
      |            ^
	relate logic:= 0
succs:= 10
// predicted unlikely by goto predictor.
./benchmarks/tmux/leak_4/tmux_leak_4.c:95:17: warning: use location
   95 |                 goto fail;
      |                 ^
	relate logic:= 1
succs:= 9
if (_8 != 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:94:12: warning: use location
   94 |         if (lstat(base, &sb) != 0)
      |            ^
	relate logic:= 0
succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/tmux/leak_4/tmux_leak_4.c:92:17: warning: use location
   92 |                 goto fail;
      |                 ^
	relate logic:= 1
succs:= 7
if (_6 != 17)
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:39: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |                                       ^
	relate logic:= 1
succs:= 6
if (_4 != 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:12: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 14
// predicted unlikely by goto predictor.
./benchmarks/tmux/leak_4/tmux_leak_4.c:102:17: warning: use location
  102 |                 goto fail;
      |                 ^
	relate logic:= 1
succs:= 13
if (_12 != uid_26)
./benchmarks/tmux/leak_4/tmux_leak_4.c:100:12: warning: use location
  100 |         if (sb.st_uid != uid || (sb.st_mode & S_IRWXO) != 0) {
      |            ^
	relate logic:= 0
succs:= 12
// predicted unlikely by goto predictor.
./benchmarks/tmux/leak_4/tmux_leak_4.c:98:17: warning: use location
   98 |                 goto fail;
      |                 ^
	relate logic:= 1
succs:= 11
if (_10 != 16384)
./benchmarks/tmux/leak_4/tmux_leak_4.c:96:12: warning: use location
   96 |         if (!S_ISDIR(sb.st_mode)) {
      |            ^
	relate logic:= 0
succs:= 10
// predicted unlikely by goto predictor.
./benchmarks/tmux/leak_4/tmux_leak_4.c:95:17: warning: use location
   95 |                 goto fail;
      |                 ^
	relate logic:= 1
succs:= 9
if (_8 != 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:94:12: warning: use location
   94 |         if (lstat(base, &sb) != 0)
      |            ^
	relate logic:= 0
succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/tmux/leak_4/tmux_leak_4.c:92:17: warning: use location
   92 |                 goto fail;
      |                 ^
	relate logic:= 1
succs:= 7
if (_6 != 17)
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:39: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |                                       ^
	relate logic:= 1
succs:= 6
if (_4 != 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:12: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: Use after free error!: free location 
  113 |         free(base);
      |         ^
_19 = __errno_location ();
./benchmarks/tmux/leak_4/tmux_leak_4.c:114:9: warning: use location
  114 |         errno = saved_errno;
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/tmux/leak_4/tmux_leak_4.c:92:17: warning: use location
   92 |                 goto fail;
      |                 ^
	relate logic:= 1
succs:= 7
if (_6 != 17)
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:39: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |                                       ^
	relate logic:= 1
succs:= 6
if (_4 != 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:12: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 10
// predicted unlikely by goto predictor.
./benchmarks/tmux/leak_4/tmux_leak_4.c:95:17: warning: use location
   95 |                 goto fail;
      |                 ^
	relate logic:= 1
succs:= 9
if (_8 != 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:94:12: warning: use location
   94 |         if (lstat(base, &sb) != 0)
      |            ^
	relate logic:= 0
succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/tmux/leak_4/tmux_leak_4.c:92:17: warning: use location
   92 |                 goto fail;
      |                 ^
	relate logic:= 1
succs:= 7
if (_6 != 17)
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:39: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |                                       ^
	relate logic:= 1
succs:= 6
if (_4 != 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:12: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 12
// predicted unlikely by goto predictor.
./benchmarks/tmux/leak_4/tmux_leak_4.c:98:17: warning: use location
   98 |                 goto fail;
      |                 ^
	relate logic:= 1
succs:= 11
if (_10 != 16384)
./benchmarks/tmux/leak_4/tmux_leak_4.c:96:12: warning: use location
   96 |         if (!S_ISDIR(sb.st_mode)) {
      |            ^
	relate logic:= 0
succs:= 10
// predicted unlikely by goto predictor.
./benchmarks/tmux/leak_4/tmux_leak_4.c:95:17: warning: use location
   95 |                 goto fail;
      |                 ^
	relate logic:= 1
succs:= 9
if (_8 != 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:94:12: warning: use location
   94 |         if (lstat(base, &sb) != 0)
      |            ^
	relate logic:= 0
succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/tmux/leak_4/tmux_leak_4.c:92:17: warning: use location
   92 |                 goto fail;
      |                 ^
	relate logic:= 1
succs:= 7
if (_6 != 17)
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:39: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |                                       ^
	relate logic:= 1
succs:= 6
if (_4 != 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:12: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 14
// predicted unlikely by goto predictor.
./benchmarks/tmux/leak_4/tmux_leak_4.c:102:17: warning: use location
  102 |                 goto fail;
      |                 ^
	relate logic:= 1
succs:= 13
if (_12 != uid_26)
./benchmarks/tmux/leak_4/tmux_leak_4.c:100:12: warning: use location
  100 |         if (sb.st_uid != uid || (sb.st_mode & S_IRWXO) != 0) {
      |            ^
	relate logic:= 0
succs:= 12
// predicted unlikely by goto predictor.
./benchmarks/tmux/leak_4/tmux_leak_4.c:98:17: warning: use location
   98 |                 goto fail;
      |                 ^
	relate logic:= 1
succs:= 11
if (_10 != 16384)
./benchmarks/tmux/leak_4/tmux_leak_4.c:96:12: warning: use location
   96 |         if (!S_ISDIR(sb.st_mode)) {
      |            ^
	relate logic:= 0
succs:= 10
// predicted unlikely by goto predictor.
./benchmarks/tmux/leak_4/tmux_leak_4.c:95:17: warning: use location
   95 |                 goto fail;
      |                 ^
	relate logic:= 1
succs:= 9
if (_8 != 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:94:12: warning: use location
   94 |         if (lstat(base, &sb) != 0)
      |            ^
	relate logic:= 0
succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/tmux/leak_4/tmux_leak_4.c:92:17: warning: use location
   92 |                 goto fail;
      |                 ^
	relate logic:= 1
succs:= 7
if (_6 != 17)
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:39: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |                                       ^
	relate logic:= 1
succs:= 6
if (_4 != 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:12: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:make_label========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m

dot graph START

======================================================================
 <addr_expr 0x7f4f51a75b00
    type <pointer_type 0x7f4f513ad738
        type <array_type 0x7f4f513ad690 type <integer_type 0x7f4f513a2a80 char>
            BLK
            size <integer_cst 0x7f4f51399960 constant 48>
            unit-size <integer_cst 0x7f4f51399948 constant 6>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f4f513ad5e8>
            pointer_to_this <pointer_type 0x7f4f513ad738>>
        unsigned DI
        size <integer_cst 0x7f4f51879bb8 constant 64>
        unit-size <integer_cst 0x7f4f51879bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f4f51a75ae0 type <array_type 0x7f4f513ad690>
        readonly constant static "label\000">
    ./benchmarks/tmux/leak_4/tmux_leak_4.c:120:13 start: ./benchmarks/tmux/leak_4/tmux_leak_4.c:120:13 finish: ./benchmarks/tmux/leak_4/tmux_leak_4.c:120:13>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:main========= [0m
[40;44m =======node_fun:make_label========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path make_label  function_call count: 9 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:__errno_location========= [0m
[40;33m =======POP node_fun stack:__errno_location========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:strlcpy========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path strlcpy  function_call count: 0 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:strlcpy========= [0m
[40;42m =======start_check_funciton:strlcpy========= [0m
[40;33m =======POP node_fun stack:strlcpy========= [0m
[40;42m =======pre add _ fucntion:realpath========= [0m
[40;33m =======POP node_fun stack:realpath========= [0m
[40;42m =======pre add _ fucntion:lstat========= [0m
[40;33m =======POP node_fun stack:lstat========= [0m
[40;42m =======pre add _ fucntion:mkdir========= [0m
[40;33m =======POP node_fun stack:mkdir========= [0m
[40;42m =======pre add _ fucntion:xasprintf========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path xasprintf  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:xvasprintf========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path xvasprintf  function_call count: 5 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:strerror========= [0m
[40;33m =======POP node_fun stack:strerror========= [0m
[40;42m =======pre add _ fucntion:__errno_location========= [0m
[40;33m =======POP node_fun stack:__errno_location========= [0m
[40;42m =======pre add _ fucntion:vasprintf========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path vasprintf  function_call count: 2 level :3========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre_check_funciton:vasprintf========= [0m
[40;42m =======start_check_funciton:vasprintf========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f4f513c08b8
    type <pointer_type 0x7f4f51895000
        type <void_type 0x7f4f5188ef18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f4f51895000>>
        public unsigned DI
        size <integer_cst 0x7f4f51879bb8 constant 64>
        unit-size <integer_cst 0x7f4f51879bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f4f5189a9d8>>
   
    def_stmt _4 = malloc (_3);
    version:4
    ptr-info 0x7f4f513b47b0>
# .MEM_13 = VDEF <.MEM_12(D)>
_4 = malloc (_3);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
*ret_11(D) = _4;
bb index := 2
# VUSE <.MEM_14>
return _6;
In function â€˜vasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
*ret_11(D) = _4;
In function â€˜make_labelâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:14: warning: use location
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
*ret_11(D) = _4;
bb index := 2
# VUSE <.MEM_14>
return _6;
In function â€˜vasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
*ret_11(D) = _4;
In function â€˜make_labelâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:14: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12(D)>
_4 = malloc (_3);
bb index := 2
# VUSE <.MEM_14>
return _6;
In function â€˜vasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_4 = malloc (_3);
In function â€˜make_labelâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:16: warning: use location
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |                ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f4f513c08b8
    type <pointer_type 0x7f4f51895000
        type <void_type 0x7f4f5188ef18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f4f51895000>>
        public unsigned DI
        size <integer_cst 0x7f4f51879bb8 constant 64>
        unit-size <integer_cst 0x7f4f51879bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f4f5189a9d8>>
   
    def_stmt _4 = malloc (_3);
    version:4
    ptr-info 0x7f4f513b47b0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f4f513c0990
    type <pointer_type 0x7f4f513a2bd0
        type <integer_type 0x7f4f513a2b28 char readonly public QI
            size <integer_cst 0x7f4f51879ca8 constant 8>
            unit-size <integer_cst 0x7f4f51879cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4f5188e3f0 precision:8 min <integer_cst 0x7f4f51399720 -128> max <integer_cst 0x7f4f51399708 127> context <translation_unit_decl 0x7f4f51884168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f4f513a2bd0>>
        public unsigned DI
        size <integer_cst 0x7f4f51879bb8 constant 64>
        unit-size <integer_cst 0x7f4f51879bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f4f513bb800 fmt>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f4f513b47e0>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_12(D)>
_1 = strlen (fmt_8(D));
bb index := 2
# VUSE <.MEM_14>
return _6;
In function â€˜vasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_1 = strlen (fmt_8(D));
In function â€˜make_labelâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:23: warning: use location
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |                       ^
this stmt is child function---strlen-----

 ================== trace ================== 
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _1 + _2;
bb index := 2
# VUSE <.MEM_14>
return _6;
In function â€˜vasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_3 = _1 + _2;
In function â€˜make_labelâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:16: warning: use location
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12(D)>
_4 = malloc (_3);
bb index := 2
# VUSE <.MEM_14>
return _6;
In function â€˜vasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_4 = malloc (_3);
In function â€˜make_labelâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:16: warning: use location
this stmt is child function---malloc-----

 ================== trace ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
*ret_11(D) = _4;
bb index := 2
# VUSE <.MEM_14>
return _6;
In function â€˜vasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
*ret_11(D) = _4;
In function â€˜make_labelâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:14: warning: use location
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |              ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f4f513c0990
    type <pointer_type 0x7f4f513a2bd0
        type <integer_type 0x7f4f513a2b28 char readonly public QI
            size <integer_cst 0x7f4f51879ca8 constant 8>
            unit-size <integer_cst 0x7f4f51879cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4f5188e3f0 precision:8 min <integer_cst 0x7f4f51399720 -128> max <integer_cst 0x7f4f51399708 127> context <translation_unit_decl 0x7f4f51884168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f4f513a2bd0>>
        public unsigned DI
        size <integer_cst 0x7f4f51879bb8 constant 64>
        unit-size <integer_cst 0x7f4f51879bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f4f513bb800 fmt>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f4f513b47e0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f4f513c09d8
    type <pointer_type 0x7f4f513a2c78
        type <integer_type 0x7f4f513a2a80 char public QI
            size <integer_cst 0x7f4f51879ca8 constant 8>
            unit-size <integer_cst 0x7f4f51879cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4f5188e3f0 precision:8 min <integer_cst 0x7f4f51399720 -128> max <integer_cst 0x7f4f51399708 127> context <translation_unit_decl 0x7f4f51884168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f4f513a2c78>>
        public unsigned DI
        size <integer_cst 0x7f4f51879bb8 constant 64>
        unit-size <integer_cst 0x7f4f51879bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f4f51884168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
        pointer_to_this <pointer_type 0x7f4f513a2dc8>>
    var <parm_decl 0x7f4f513bb880 ap>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7f4f513b47f8>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_12(D)>
_2 = strlen (ap_9(D));
bb index := 2
# VUSE <.MEM_14>
return _6;
In function â€˜vasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_2 = strlen (ap_9(D));
In function â€˜make_labelâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:37: warning: use location
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |                                     ^
this stmt is child function---strlen-----

 ================== trace ================== 
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _1 + _2;
bb index := 2
# VUSE <.MEM_14>
return _6;
In function â€˜vasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_3 = _1 + _2;
In function â€˜make_labelâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:16: warning: use location
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12(D)>
_4 = malloc (_3);
bb index := 2
# VUSE <.MEM_14>
return _6;
In function â€˜vasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_4 = malloc (_3);
In function â€˜make_labelâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:16: warning: use location
this stmt is child function---malloc-----

 ================== trace ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
*ret_11(D) = _4;
bb index := 2
# VUSE <.MEM_14>
return _6;
In function â€˜vasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
*ret_11(D) = _4;
In function â€˜make_labelâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:14: warning: use location
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |              ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f4f513c09d8
    type <pointer_type 0x7f4f513a2c78
        type <integer_type 0x7f4f513a2a80 char public QI
            size <integer_cst 0x7f4f51879ca8 constant 8>
            unit-size <integer_cst 0x7f4f51879cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4f5188e3f0 precision:8 min <integer_cst 0x7f4f51399720 -128> max <integer_cst 0x7f4f51399708 127> context <translation_unit_decl 0x7f4f51884168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f4f513a2c78>>
        public unsigned DI
        size <integer_cst 0x7f4f51879bb8 constant 64>
        unit-size <integer_cst 0x7f4f51879bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f4f51884168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
        pointer_to_this <pointer_type 0x7f4f513a2dc8>>
    var <parm_decl 0x7f4f513bb880 ap>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7f4f513b47f8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f4f513c0870
    type <integer_type 0x7f4f5188e7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f4f51879bb8 constant 64>
        unit-size <integer_cst 0x7f4f51879bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4f5188e738 precision:64 min <integer_cst 0x7f4f51879e88 0> max <integer_cst 0x7f4f5187a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f4f5189a7e0>>
   
    def_stmt _3 = _1 + _2;
    version:3>
_3 = _1 + _2;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:vasprintf========= [0m
[40;42m =======pre_check_funciton:xvasprintf========= [0m
[40;42m =======start_check_funciton:xvasprintf========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f4f513c03a8
    type <pointer_type 0x7f4f513a2dc8
        type <pointer_type 0x7f4f513a2c78 type <integer_type 0x7f4f513a2a80 char>
            public unsigned DI
            size <integer_cst 0x7f4f51879bb8 constant 64>
            unit-size <integer_cst 0x7f4f51879bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f4f51884168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f4f513a2dc8>>
        public unsigned DI size <integer_cst 0x7f4f51879bb8 64> unit-size <integer_cst 0x7f4f51879bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f4f513bb400 ret>
    def_stmt GIMPLE_NOP
    version:6
    ptr-info 0x7f4f513b4720>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_12>
_1 = *ret_6(D);
bb index := 3
# VUSE <.MEM_12>
return i_10;
In function â€˜xvasprintfâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
   71 |         return i;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_12>
_1 = *ret_6(D);
bb index := 3
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_12>
_1 = *ret_6(D);
bb index := 3
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
_1 = *ret_6(D);
In function â€˜make_labelâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:68:22: warning: use location
   68 |         if (i < 0 || *ret == NULL)
      |                      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 3
# VUSE <.MEM_12>
return i_10;
In function â€˜xvasprintfâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
   71 |         return i;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 3
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 3
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
if (_1 == 0B)
In function â€˜make_labelâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:68:19: warning: use location
   68 |         if (i < 0 || *ret == NULL)
      |                   ^
if (_1 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_4/tmux_leak_4.c:68:19: warning: use location
Cond in fucntion xvasprintf basic block 3
 ================== possible direct basic block ================= 
from xvasprintf basic block 4
 ================== possible direct basic block ================= 
from xvasprintf basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11(D)>
i_10 = vasprintf (ret_6(D), fmt_7(D), ap_8(D));
bb index := 2
# VUSE <.MEM_12>
return i_10;
In function â€˜xvasprintfâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
   71 |         return i;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11(D)>
i_10 = vasprintf (ret_6(D), fmt_7(D), ap_8(D));
bb index := 2
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
i_10 = vasprintf (ret_6(D), fmt_7(D), ap_8(D));
In function â€˜make_labelâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:66:13: warning: use location
   66 |         i = vasprintf(ret, fmt, ap);
      |             ^
this stmt is child function---vasprintf-----

 ================== trace ================== 
trace fucntion name:vasprintf 
[40;44m =======trace_function_path vasprintf  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:vasprintf========= [0m
[40;36m ======= find relate stmt with ret ========= [0m
[40;36m ======= relate stmt argument:ret ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (i_10 < 0)
bb index := 2
# VUSE <.MEM_12>
return i_10;
In function â€˜xvasprintfâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
   71 |         return i;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (i_10 < 0)
bb index := 2
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
if (i_10 < 0)
In function â€˜make_labelâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:68:12: warning: use location
   68 |         if (i < 0 || *ret == NULL)
      |            ^
if (i_10 < 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_4/tmux_leak_4.c:68:12: warning: use location
Cond in fucntion xvasprintf basic block 2
 ================== possible direct basic block ================= 
from xvasprintf basic block 4
 ================== possible direct basic block ================= 
from xvasprintf basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f4f513c03a8
    type <pointer_type 0x7f4f513a2dc8
        type <pointer_type 0x7f4f513a2c78 type <integer_type 0x7f4f513a2a80 char>
            public unsigned DI
            size <integer_cst 0x7f4f51879bb8 constant 64>
            unit-size <integer_cst 0x7f4f51879bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f4f51884168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f4f513a2dc8>>
        public unsigned DI size <integer_cst 0x7f4f51879bb8 64> unit-size <integer_cst 0x7f4f51879bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f4f513bb400 ret>
    def_stmt GIMPLE_NOP
    version:6
    ptr-info 0x7f4f513b4720>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f4f513c02d0
    type <pointer_type 0x7f4f518959d8
        type <integer_type 0x7f4f5188e5e8 int public SI
            size <integer_cst 0x7f4f51879df8 constant 32>
            unit-size <integer_cst 0x7f4f51879e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4f5188e5e8 precision:32 min <integer_cst 0x7f4f51879db0 -2147483648> max <integer_cst 0x7f4f51879dc8 2147483647>
            pointer_to_this <pointer_type 0x7f4f518959d8>>
        public unsigned DI
        size <integer_cst 0x7f4f51879bb8 constant 64>
        unit-size <integer_cst 0x7f4f51879bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = __errno_location ();
    version:2
    ptr-info 0x7f4f513b4708>
_2 = __errno_location ();

 ================== trace ptable================== 
trace fucntion name:__errno_location 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---__errno_location-----
this other function ------__errno_location-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_12>
_3 = *_2;
bb index := 4
# VUSE <.MEM_12>
return i_10;
In function â€˜xvasprintfâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
   71 |         return i;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_12>
_3 = *_2;
bb index := 4
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
_3 = *_2;
In function â€˜make_labelâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:69:17: warning: use location
   69 |                 fatalx("xasprintf: %s", strerror(errno));
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
_4 = strerror (_3);
bb index := 4
# VUSE <.MEM_12>
return i_10;
In function â€˜xvasprintfâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
   71 |         return i;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
_4 = strerror (_3);
bb index := 4
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
_4 = strerror (_3);
In function â€˜make_labelâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:69:17: warning: use location
   69 |                 fatalx("xasprintf: %s", strerror(errno));
      |                 ^
this stmt is child function---strerror-----

 ================== trace ================== 
trace fucntion name:strerror 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
printf ("xasprintf: %s", _4);
bb index := 4
# VUSE <.MEM_12>
return i_10;
In function â€˜xvasprintfâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
   71 |         return i;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
printf ("xasprintf: %s", _4);
bb index := 4
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
printf ("xasprintf: %s", _4);
In function â€˜make_labelâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:69:17: warning: use location
   69 |                 fatalx("xasprintf: %s", strerror(errno));
      |                 ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = __errno_location ();
bb index := 4
# VUSE <.MEM_12>
return i_10;
In function â€˜xvasprintfâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
   71 |         return i;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = __errno_location ();
bb index := 4
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
_2 = __errno_location ();
In function â€˜make_labelâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:69:17: warning: use location
   69 |                 fatalx("xasprintf: %s", strerror(errno));
      |                 ^
this stmt is child function---__errno_location-----

 ================== trace ================== 
trace fucntion name:__errno_location 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f4f513c02d0
    type <pointer_type 0x7f4f518959d8
        type <integer_type 0x7f4f5188e5e8 int public SI
            size <integer_cst 0x7f4f51879df8 constant 32>
            unit-size <integer_cst 0x7f4f51879e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4f5188e5e8 precision:32 min <integer_cst 0x7f4f51879db0 -2147483648> max <integer_cst 0x7f4f51879dc8 2147483647>
            pointer_to_this <pointer_type 0x7f4f518959d8>>
        public unsigned DI
        size <integer_cst 0x7f4f51879bb8 constant 64>
        unit-size <integer_cst 0x7f4f51879bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = __errno_location ();
    version:2
    ptr-info 0x7f4f513b4708>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f4f513c0318
    type <integer_type 0x7f4f5188e5e8 int public SI
        size <integer_cst 0x7f4f51879df8 constant 32>
        unit-size <integer_cst 0x7f4f51879e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4f5188e5e8 precision:32 min <integer_cst 0x7f4f51879db0 -2147483648> max <integer_cst 0x7f4f51879dc8 2147483647>
        pointer_to_this <pointer_type 0x7f4f518959d8>>
   
    def_stmt _3 = *_2;
    version:3>
# VUSE <.MEM_12>
_3 = *_2;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
_4 = strerror (_3);
bb index := 4
# VUSE <.MEM_12>
return i_10;
In function â€˜xvasprintfâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
   71 |         return i;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
_4 = strerror (_3);
bb index := 4
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
_4 = strerror (_3);
In function â€˜make_labelâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:69:17: warning: use location
   69 |                 fatalx("xasprintf: %s", strerror(errno));
      |                 ^
this stmt is child function---strerror-----

 ================== trace ================== 
trace fucntion name:strerror 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
printf ("xasprintf: %s", _4);
bb index := 4
# VUSE <.MEM_12>
return i_10;
In function â€˜xvasprintfâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
   71 |         return i;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
printf ("xasprintf: %s", _4);
bb index := 4
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
printf ("xasprintf: %s", _4);
In function â€˜make_labelâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:69:17: warning: use location
   69 |                 fatalx("xasprintf: %s", strerror(errno));
      |                 ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f4f513c0318
    type <integer_type 0x7f4f5188e5e8 int public SI
        size <integer_cst 0x7f4f51879df8 constant 32>
        unit-size <integer_cst 0x7f4f51879e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4f5188e5e8 precision:32 min <integer_cst 0x7f4f51879db0 -2147483648> max <integer_cst 0x7f4f51879dc8 2147483647>
        pointer_to_this <pointer_type 0x7f4f518959d8>>
   
    def_stmt _3 = *_2;
    version:3>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f4f51a75f60
    type <pointer_type 0x7f4f513aabd0
        type <array_type 0x7f4f513aab28 type <integer_type 0x7f4f513a2a80 char>
            BLK
            size <integer_cst 0x7f4f51399780 constant 112>
            unit-size <integer_cst 0x7f4f51399768 constant 14>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f4f513aaa80>
            pointer_to_this <pointer_type 0x7f4f513aabd0>>
        unsigned DI
        size <integer_cst 0x7f4f51879bb8 constant 64>
        unit-size <integer_cst 0x7f4f51879bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f4f513c1190 type <array_type 0x7f4f513aab28>
        readonly constant static "xasprintf: %s\000">
    ./benchmarks/tmux/leak_4/tmux_leak_4.c:69:3 start: ./benchmarks/tmux/leak_4/tmux_leak_4.c:69:3 finish: ./benchmarks/tmux/leak_4/tmux_leak_4.c:69:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:xvasprintf========= [0m
[40;42m =======pre_check_funciton:xasprintf========= [0m
[40;42m =======start_check_funciton:xasprintf========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f4f513c0630
    type <pointer_type 0x7f4f513a2dc8
        type <pointer_type 0x7f4f513a2c78 type <integer_type 0x7f4f513a2a80 char>
            public unsigned DI
            size <integer_cst 0x7f4f51879bb8 constant 64>
            unit-size <integer_cst 0x7f4f51879bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f4f51884168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f4f513a2dc8>>
        public unsigned DI size <integer_cst 0x7f4f51879bb8 64> unit-size <integer_cst 0x7f4f51879bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f4f513bb600 ret>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f4f513b4768>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
i_6 = xvasprintf (ret_2(D), fmt_3(D), ap_4(D));
./benchmarks/tmux/leak_4/tmux_leak_4.c:56:13: warning: use location
   56 |         i = xvasprintf(ret, fmt, ap);
      |             ^
this stmt is child function---xvasprintf-----

 ================== trace ================== 
trace fucntion name:xvasprintf 
[40;44m =======trace_function_path xvasprintf  function_call count: 5 level :0========  [0m
[40;36m ======= node_fun:xvasprintf========= [0m
[40;36m ======= find relate stmt with ret ========= [0m
[40;36m ======= relate stmt argument:ret ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:strerror========= [0m
[40;46m =======add node_fun stack:strerror========= [0m
[40;42m =======pre add _ fucntion:__errno_location========= [0m
[40;46m =======add node_fun stack:__errno_location========= [0m
[40;42m =======pre add _ fucntion:vasprintf========= [0m
[40;46m =======add node_fun stack:vasprintf========= [0m
[40;44m =======trace_function_path vasprintf  function_call count: 2 level :1========  [0m
[40;36m ======= node_fun:vasprintf========= [0m
[40;36m ======= find relate stmt with ret ========= [0m
[40;36m ======= relate stmt argument:ret ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
i_6 = xvasprintf (ret_2(D), fmt_3(D), ap_4(D));
./benchmarks/tmux/leak_4/tmux_leak_4.c:56:13: warning: use location
this stmt is child function---xvasprintf-----

 ================== trace ================== 
trace fucntion name:xvasprintf 
[40;44m =======trace_function_path xvasprintf  function_call count: 5 level :0========  [0m
[40;36m ======= node_fun:xvasprintf========= [0m
[40;36m ======= find relate stmt with ret ========= [0m
[40;36m ======= relate stmt argument:ret ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:strerror========= [0m
[40;46m =======add node_fun stack:strerror========= [0m
[40;42m =======pre add _ fucntion:__errno_location========= [0m
[40;46m =======add node_fun stack:__errno_location========= [0m
[40;42m =======pre add _ fucntion:vasprintf========= [0m
[40;46m =======add node_fun stack:vasprintf========= [0m
[40;44m =======trace_function_path vasprintf  function_call count: 2 level :1========  [0m
[40;36m ======= node_fun:vasprintf========= [0m
[40;36m ======= find relate stmt with ret ========= [0m
[40;36m ======= relate stmt argument:ret ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f4f513c0630
    type <pointer_type 0x7f4f513a2dc8
        type <pointer_type 0x7f4f513a2c78 type <integer_type 0x7f4f513a2a80 char>
            public unsigned DI
            size <integer_cst 0x7f4f51879bb8 constant 64>
            unit-size <integer_cst 0x7f4f51879bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f4f51884168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f4f513a2dc8>>
        public unsigned DI size <integer_cst 0x7f4f51879bb8 64> unit-size <integer_cst 0x7f4f51879bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f4f513bb600 ret>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f4f513b4768>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:xasprintf========= [0m
[40;42m =======pre add _ fucntion:getenv========= [0m
[40;33m =======POP node_fun stack:getenv========= [0m
[40;42m =======pre add _ fucntion:getuid========= [0m
[40;33m =======POP node_fun stack:getuid========= [0m
[40;42m =======pre_check_funciton:make_label========= [0m
[40;42m =======start_check_funciton:make_label========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f4f51881678
    type <integer_type 0x7f4f5188e5e8 int public SI
        size <integer_cst 0x7f4f51879df8 constant 32>
        unit-size <integer_cst 0x7f4f51879e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4f5188e5e8 precision:32 min <integer_cst 0x7f4f51879db0 -2147483648> max <integer_cst 0x7f4f51879dc8 2147483647>
        pointer_to_this <pointer_type 0x7f4f518959d8>>
   
    def_stmt _1 = getuid ();
    version:1>
# .MEM_42 = VDEF <.MEM_41(D)>
_1 = getuid ();

 ================== trace ptable================== 
trace fucntion name:getuid 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---getuid-----
this other function ------getuid-----
 
 Start check Pointer Collect  

======================================================================
uid_26 = (uid_t) _1;
./benchmarks/tmux/leak_4/tmux_leak_4.c:84:13: warning: use location
   84 |         uid = getuid();
      |             ^
uid_26 = (uid_t) _1;
./benchmarks/tmux/leak_4/tmux_leak_4.c:84:13: warning: use location
_1 = getuid ();
./benchmarks/tmux/leak_4/tmux_leak_4.c:84:15: warning: use location
   84 |         uid = getuid();
      |               ^
this stmt is child function---getuid-----

 ================== trace ================== 
trace fucntion name:getuid 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f4f51881678
    type <integer_type 0x7f4f5188e5e8 int public SI
        size <integer_cst 0x7f4f51879df8 constant 32>
        unit-size <integer_cst 0x7f4f51879e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4f5188e5e8 precision:32 min <integer_cst 0x7f4f51879db0 -2147483648> max <integer_cst 0x7f4f51879dc8 2147483647>
        pointer_to_this <pointer_type 0x7f4f518959d8>>
   
    def_stmt _1 = getuid ();
    version:1>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: use location
  113 |         free(base);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f4f51a75ba0
    type <pointer_type 0x7f4f513abbd0
        type <array_type 0x7f4f513abb28 type <integer_type 0x7f4f513a2a80 char>
            BLK
            size <integer_cst 0x7f4f51399828 constant 96>
            unit-size <integer_cst 0x7f4f513998d0 constant 12>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f4f513aba80>
            pointer_to_this <pointer_type 0x7f4f513abbd0>>
        unsigned DI
        size <integer_cst 0x7f4f51879bb8 constant 64>
        unit-size <integer_cst 0x7f4f51879bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f4f513b5c58 type <array_type 0x7f4f513abb28>
        readonly constant static "TMUX_TMPDIR\000">
    ./benchmarks/tmux/leak_4/tmux_leak_4.c:86:18 start: ./benchmarks/tmux/leak_4/tmux_leak_4.c:86:18 finish: ./benchmarks/tmux/leak_4/tmux_leak_4.c:86:18>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f4f51a75be0
    type <pointer_type 0x7f4f513a2dc8
        type <pointer_type 0x7f4f513a2c78 type <integer_type 0x7f4f513a2a80 char>
            public unsigned DI
            size <integer_cst 0x7f4f51879bb8 constant 64>
            unit-size <integer_cst 0x7f4f51879bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f4f51884168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f4f513a2dc8>>
        public unsigned DI size <integer_cst 0x7f4f51879bb8 64> unit-size <integer_cst 0x7f4f51879bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    arg:0 <var_decl 0x7f4f513bc000 base type <pointer_type 0x7f4f513a2c78>
        addressable unsigned DI ./benchmarks/tmux/leak_4/tmux_leak_4.c:77:9 size <integer_cst 0x7f4f51879bb8 64> unit-size <integer_cst 0x7f4f51879bd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7f4f513a3e00 make_label>
        chain <var_decl 0x7f4f52121f30 resolved type <array_type 0x7f4f513ab930>
            addressable BLK ./benchmarks/tmux/leak_4/tmux_leak_4.c:77:15
            size <integer_cst 0x7f4f51399888 constant 32768>
            unit-size <integer_cst 0x7f4f51399870 constant 4096>
            align:8 warn_if_not_align:0 context <function_decl 0x7f4f513a3e00 make_label> chain <var_decl 0x7f4f52121ea0 s>>>
    ./benchmarks/tmux/leak_4/tmux_leak_4.c:87:3 start: ./benchmarks/tmux/leak_4/tmux_leak_4.c:87:3 finish: ./benchmarks/tmux/leak_4/tmux_leak_4.c:87:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f4f51a75c60
    type <pointer_type 0x7f4f513a2dc8
        type <pointer_type 0x7f4f513a2c78 type <integer_type 0x7f4f513a2a80 char>
            public unsigned DI
            size <integer_cst 0x7f4f51879bb8 constant 64>
            unit-size <integer_cst 0x7f4f51879bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f4f51884168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f4f513a2dc8>>
        public unsigned DI size <integer_cst 0x7f4f51879bb8 64> unit-size <integer_cst 0x7f4f51879bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    arg:0 <var_decl 0x7f4f513bc000 base type <pointer_type 0x7f4f513a2c78>
        addressable unsigned DI ./benchmarks/tmux/leak_4/tmux_leak_4.c:77:9 size <integer_cst 0x7f4f51879bb8 64> unit-size <integer_cst 0x7f4f51879bd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7f4f513a3e00 make_label>
        chain <var_decl 0x7f4f52121f30 resolved type <array_type 0x7f4f513ab930>
            addressable BLK ./benchmarks/tmux/leak_4/tmux_leak_4.c:77:15
            size <integer_cst 0x7f4f51399888 constant 32768>
            unit-size <integer_cst 0x7f4f51399870 constant 4096>
            align:8 warn_if_not_align:0 context <function_decl 0x7f4f513a3e00 make_label> chain <var_decl 0x7f4f52121ea0 s>>>
    ./benchmarks/tmux/leak_4/tmux_leak_4.c:89:3 start: ./benchmarks/tmux/leak_4/tmux_leak_4.c:89:3 finish: ./benchmarks/tmux/leak_4/tmux_leak_4.c:89:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f4f51881708
    type <pointer_type 0x7f4f513a2c78
        type <integer_type 0x7f4f513a2a80 char public QI
            size <integer_cst 0x7f4f51879ca8 constant 8>
            unit-size <integer_cst 0x7f4f51879cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4f5188e3f0 precision:8 min <integer_cst 0x7f4f51399720 -128> max <integer_cst 0x7f4f51399708 127> context <translation_unit_decl 0x7f4f51884168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f4f513a2c78>>
        public unsigned DI
        size <integer_cst 0x7f4f51879bb8 constant 64>
        unit-size <integer_cst 0x7f4f51879bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f4f51884168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
        pointer_to_this <pointer_type 0x7f4f513a2dc8>>
   
    def_stmt _3 = base;
    version:3
    ptr-info 0x7f4f513b45b8>
# VUSE <.MEM_38>
_3 = base;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_4 = mkdir (_3, 0);
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:13: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |             ^
this stmt is child function---mkdir-----

 ================== trace ================== 
trace fucntion name:mkdir 

 ================== trace ================== 
trace fucntion free:0 
if (_4 != 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:12: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |            ^
if (_4 != 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:12: warning: use location
Cond in fucntion make_label basic block 6
 ================== possible direct basic block ================= 
from make_label basic block 7
 ================== possible direct basic block ================= 
from make_label basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f4f51881708
    type <pointer_type 0x7f4f513a2c78
        type <integer_type 0x7f4f513a2a80 char public QI
            size <integer_cst 0x7f4f51879ca8 constant 8>
            unit-size <integer_cst 0x7f4f51879cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4f5188e3f0 precision:8 min <integer_cst 0x7f4f51399720 -128> max <integer_cst 0x7f4f51399708 127> context <translation_unit_decl 0x7f4f51884168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f4f513a2c78>>
        public unsigned DI
        size <integer_cst 0x7f4f51879bb8 constant 64>
        unit-size <integer_cst 0x7f4f51879bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f4f51884168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
        pointer_to_this <pointer_type 0x7f4f513a2dc8>>
   
    def_stmt _3 = base;
    version:3
    ptr-info 0x7f4f513b45b8>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: use location
  113 |         free(base);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f4f51881798
    type <pointer_type 0x7f4f518959d8
        type <integer_type 0x7f4f5188e5e8 int public SI
            size <integer_cst 0x7f4f51879df8 constant 32>
            unit-size <integer_cst 0x7f4f51879e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4f5188e5e8 precision:32 min <integer_cst 0x7f4f51879db0 -2147483648> max <integer_cst 0x7f4f51879dc8 2147483647>
            pointer_to_this <pointer_type 0x7f4f518959d8>>
        public unsigned DI
        size <integer_cst 0x7f4f51879bb8 constant 64>
        unit-size <integer_cst 0x7f4f51879bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = __errno_location ();
    version:5
    ptr-info 0x7f4f513b45d0>
_5 = __errno_location ();

 ================== trace ptable================== 
trace fucntion name:__errno_location 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---__errno_location-----
this other function ------__errno_location-----
 
 Start check Pointer Collect  

======================================================================
_6 = *_5;
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:42: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |                                          ^
if (_6 != 17)
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:39: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |                                       ^
if (_6 != 17)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:39: warning: use location
Cond in fucntion make_label basic block 7
 ================== possible direct basic block ================= 
from make_label basic block 8
 ================== possible direct basic block ================= 
from make_label basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_5 = __errno_location ();
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:42: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |                                          ^
this stmt is child function---__errno_location-----

 ================== trace ================== 
trace fucntion name:__errno_location 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f4f51881798
    type <pointer_type 0x7f4f518959d8
        type <integer_type 0x7f4f5188e5e8 int public SI
            size <integer_cst 0x7f4f51879df8 constant 32>
            unit-size <integer_cst 0x7f4f51879e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4f5188e5e8 precision:32 min <integer_cst 0x7f4f51879db0 -2147483648> max <integer_cst 0x7f4f51879dc8 2147483647>
            pointer_to_this <pointer_type 0x7f4f518959d8>>
        public unsigned DI
        size <integer_cst 0x7f4f51879bb8 constant 64>
        unit-size <integer_cst 0x7f4f51879bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = __errno_location ();
    version:5
    ptr-info 0x7f4f513b45d0>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: use location
  113 |         free(base);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f4f51881828
    type <pointer_type 0x7f4f513a2c78
        type <integer_type 0x7f4f513a2a80 char public QI
            size <integer_cst 0x7f4f51879ca8 constant 8>
            unit-size <integer_cst 0x7f4f51879cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4f5188e3f0 precision:8 min <integer_cst 0x7f4f51399720 -128> max <integer_cst 0x7f4f51399708 127> context <translation_unit_decl 0x7f4f51884168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f4f513a2c78>>
        public unsigned DI
        size <integer_cst 0x7f4f51879bb8 constant 64>
        unit-size <integer_cst 0x7f4f51879bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f4f51884168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
        pointer_to_this <pointer_type 0x7f4f513a2dc8>>
   
    def_stmt _7 = base;
    version:7
    ptr-info 0x7f4f513b45e8>
# VUSE <.MEM_46>
_7 = base;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_8 = lstat (_7, &sb);
./benchmarks/tmux/leak_4/tmux_leak_4.c:94:13: warning: use location
   94 |         if (lstat(base, &sb) != 0)
      |             ^
this stmt is child function---lstat-----

 ================== trace ================== 
trace fucntion name:lstat 

 ================== trace ================== 
trace fucntion free:0 
if (_8 != 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:94:12: warning: use location
   94 |         if (lstat(base, &sb) != 0)
      |            ^
if (_8 != 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_4/tmux_leak_4.c:94:12: warning: use location
Cond in fucntion make_label basic block 9
 ================== possible direct basic block ================= 
from make_label basic block 10
 ================== possible direct basic block ================= 
from make_label basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f4f51881828
    type <pointer_type 0x7f4f513a2c78
        type <integer_type 0x7f4f513a2a80 char public QI
            size <integer_cst 0x7f4f51879ca8 constant 8>
            unit-size <integer_cst 0x7f4f51879cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4f5188e3f0 precision:8 min <integer_cst 0x7f4f51399720 -128> max <integer_cst 0x7f4f51399708 127> context <translation_unit_decl 0x7f4f51884168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f4f513a2c78>>
        public unsigned DI
        size <integer_cst 0x7f4f51879bb8 constant 64>
        unit-size <integer_cst 0x7f4f51879bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f4f51884168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
        pointer_to_this <pointer_type 0x7f4f513a2dc8>>
   
    def_stmt _7 = base;
    version:7
    ptr-info 0x7f4f513b45e8>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: use location
  113 |         free(base);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f4f51881948
    type <pointer_type 0x7f4f518959d8
        type <integer_type 0x7f4f5188e5e8 int public SI
            size <integer_cst 0x7f4f51879df8 constant 32>
            unit-size <integer_cst 0x7f4f51879e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4f5188e5e8 precision:32 min <integer_cst 0x7f4f51879db0 -2147483648> max <integer_cst 0x7f4f51879dc8 2147483647>
            pointer_to_this <pointer_type 0x7f4f518959d8>>
        public unsigned DI
        size <integer_cst 0x7f4f51879bb8 constant 64>
        unit-size <integer_cst 0x7f4f51879bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _11 = __errno_location ();
    version:11
    ptr-info 0x7f4f513b4600>
_11 = __errno_location ();

 ================== trace ptable================== 
trace fucntion name:__errno_location 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---__errno_location-----
this other function ------__errno_location-----
 
 Start check Pointer Collect  

======================================================================
*_11 = 20;
./benchmarks/tmux/leak_4/tmux_leak_4.c:97:23: warning: use location
   97 |                 errno = ENOTDIR;
      |                       ^
*_11 = 20;
./benchmarks/tmux/leak_4/tmux_leak_4.c:97:23: warning: use location
_11 = __errno_location ();
./benchmarks/tmux/leak_4/tmux_leak_4.c:97:17: warning: use location
   97 |                 errno = ENOTDIR;
      |                 ^
this stmt is child function---__errno_location-----

 ================== trace ================== 
trace fucntion name:__errno_location 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f4f51881948
    type <pointer_type 0x7f4f518959d8
        type <integer_type 0x7f4f5188e5e8 int public SI
            size <integer_cst 0x7f4f51879df8 constant 32>
            unit-size <integer_cst 0x7f4f51879e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4f5188e5e8 precision:32 min <integer_cst 0x7f4f51879db0 -2147483648> max <integer_cst 0x7f4f51879dc8 2147483647>
            pointer_to_this <pointer_type 0x7f4f518959d8>>
        public unsigned DI
        size <integer_cst 0x7f4f51879bb8 constant 64>
        unit-size <integer_cst 0x7f4f51879bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _11 = __errno_location ();
    version:11
    ptr-info 0x7f4f513b4600>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: use location
  113 |         free(base);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f4f518819d8
    type <pointer_type 0x7f4f518959d8
        type <integer_type 0x7f4f5188e5e8 int public SI
            size <integer_cst 0x7f4f51879df8 constant 32>
            unit-size <integer_cst 0x7f4f51879e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4f5188e5e8 precision:32 min <integer_cst 0x7f4f51879db0 -2147483648> max <integer_cst 0x7f4f51879dc8 2147483647>
            pointer_to_this <pointer_type 0x7f4f518959d8>>
        public unsigned DI
        size <integer_cst 0x7f4f51879bb8 constant 64>
        unit-size <integer_cst 0x7f4f51879bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _13 = __errno_location ();
    version:13
    ptr-info 0x7f4f513b4618>
_13 = __errno_location ();

 ================== trace ptable================== 
trace fucntion name:__errno_location 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---__errno_location-----
this other function ------__errno_location-----
 
 Start check Pointer Collect  

======================================================================
*_13 = 13;
./benchmarks/tmux/leak_4/tmux_leak_4.c:101:23: warning: use location
  101 |                 errno = EACCES;
      |                       ^
*_13 = 13;
./benchmarks/tmux/leak_4/tmux_leak_4.c:101:23: warning: use location
_13 = __errno_location ();
./benchmarks/tmux/leak_4/tmux_leak_4.c:101:17: warning: use location
  101 |                 errno = EACCES;
      |                 ^
this stmt is child function---__errno_location-----

 ================== trace ================== 
trace fucntion name:__errno_location 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f4f518819d8
    type <pointer_type 0x7f4f518959d8
        type <integer_type 0x7f4f5188e5e8 int public SI
            size <integer_cst 0x7f4f51879df8 constant 32>
            unit-size <integer_cst 0x7f4f51879e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4f5188e5e8 precision:32 min <integer_cst 0x7f4f51879db0 -2147483648> max <integer_cst 0x7f4f51879dc8 2147483647>
            pointer_to_this <pointer_type 0x7f4f518959d8>>
        public unsigned DI
        size <integer_cst 0x7f4f51879bb8 constant 64>
        unit-size <integer_cst 0x7f4f51879bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _13 = __errno_location ();
    version:13
    ptr-info 0x7f4f513b4618>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: use location
  113 |         free(base);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f4f51881a20
    type <pointer_type 0x7f4f513a2c78
        type <integer_type 0x7f4f513a2a80 char public QI
            size <integer_cst 0x7f4f51879ca8 constant 8>
            unit-size <integer_cst 0x7f4f51879cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4f5188e3f0 precision:8 min <integer_cst 0x7f4f51399720 -128> max <integer_cst 0x7f4f51399708 127> context <translation_unit_decl 0x7f4f51884168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f4f513a2c78>>
        public unsigned DI
        size <integer_cst 0x7f4f51879bb8 constant 64>
        unit-size <integer_cst 0x7f4f51879bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f4f51884168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
        pointer_to_this <pointer_type 0x7f4f513a2dc8>>
   
    def_stmt _14 = base;
    version:14
    ptr-info 0x7f4f513b4630>
# VUSE <.MEM_47>
_14 = base;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_48 = VDEF <.MEM_47>
_15 = realpath (_14, &resolved);
bb index := 15
# VUSE <.MEM_56>
return 0B;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_56>
return 0B;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_48 = VDEF <.MEM_47>
_15 = realpath (_14, &resolved);
bb index := 15
# VUSE <.MEM_35>
return _30;
./benchmarks/tmux/leak_4/tmux_leak_4.c:41:24: warning: use location
   41 |         return(s - src - 1);        /* count does not include NUL */
      |                        ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_35>
return _30;
./benchmarks/tmux/leak_4/tmux_leak_4.c:41:24: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 11

======================================================================
_15 = realpath (_14, &resolved);
./benchmarks/tmux/leak_4/tmux_leak_4.c:105:13: warning: use location
  105 |         if (realpath(base, resolved) == NULL)
      |             ^
this stmt is child function---realpath-----

 ================== trace ================== 
trace fucntion name:realpath 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_15 == 0B)
bb index := 15
# VUSE <.MEM_56>
return 0B;
lto1: warning: use location
beacuse in succ := 18 have return or exit
# VUSE <.MEM_56>
return 0B;
lto1: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_15 == 0B)
bb index := 15
# VUSE <.MEM_35>
return _30;
./benchmarks/tmux/leak_4/tmux_leak_4.c:41:24: warning: use location
   41 |         return(s - src - 1);        /* count does not include NUL */
      |                        ^
beacuse in succ := 11 have return or exit
# VUSE <.MEM_35>
return _30;
./benchmarks/tmux/leak_4/tmux_leak_4.c:41:24: warning: use location
gimple stmt in succ := 15 ,possiable got to succ := 11

======================================================================
if (_15 == 0B)
./benchmarks/tmux/leak_4/tmux_leak_4.c:105:12: warning: use location
  105 |         if (realpath(base, resolved) == NULL)
      |            ^
if (_15 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_4/tmux_leak_4.c:105:12: warning: use location
Cond in fucntion make_label basic block 15
 ================== possible direct basic block ================= 
from make_label basic block 16
 ================== possible direct basic block ================= 
from make_label basic block 18
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f4f51881a20
    type <pointer_type 0x7f4f513a2c78
        type <integer_type 0x7f4f513a2a80 char public QI
            size <integer_cst 0x7f4f51879ca8 constant 8>
            unit-size <integer_cst 0x7f4f51879cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4f5188e3f0 precision:8 min <integer_cst 0x7f4f51399720 -128> max <integer_cst 0x7f4f51399708 127> context <translation_unit_decl 0x7f4f51884168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f4f513a2c78>>
        public unsigned DI
        size <integer_cst 0x7f4f51879bb8 constant 64>
        unit-size <integer_cst 0x7f4f51879bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f4f51884168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
        pointer_to_this <pointer_type 0x7f4f513a2dc8>>
   
    def_stmt _14 = base;
    version:14
    ptr-info 0x7f4f513b4630>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: use location
  113 |         free(base);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f4f51a75e20
    type <pointer_type 0x7f4f513ad348
        type <array_type 0x7f4f513ab930 type <integer_type 0x7f4f513a2a80 char>
            BLK
            size <integer_cst 0x7f4f51399888 constant 32768>
            unit-size <integer_cst 0x7f4f51399870 constant 4096>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f4f513ab888>
            pointer_to_this <pointer_type 0x7f4f513ad348>>
        unsigned DI
        size <integer_cst 0x7f4f51879bb8 constant 64>
        unit-size <integer_cst 0x7f4f51879bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    arg:0 <var_decl 0x7f4f52121f30 resolved type <array_type 0x7f4f513ab930>
        addressable BLK ./benchmarks/tmux/leak_4/tmux_leak_4.c:77:15 size <integer_cst 0x7f4f51399888 32768> unit-size <integer_cst 0x7f4f51399870 4096>
        align:8 warn_if_not_align:0 context <function_decl 0x7f4f513a3e00 make_label>
        chain <var_decl 0x7f4f52121ea0 s type <pointer_type 0x7f4f513a2c78>
            unsigned DI ./benchmarks/tmux/leak_4/tmux_leak_4.c:77:43 size <integer_cst 0x7f4f51879bb8 64> unit-size <integer_cst 0x7f4f51879bd0 8>
            align:64 warn_if_not_align:0 context <function_decl 0x7f4f513a3e00 make_label> chain <var_decl 0x7f4f52121e10 sb>>>
    ./benchmarks/tmux/leak_4/tmux_leak_4.c:106:11 start: ./benchmarks/tmux/leak_4/tmux_leak_4.c:106:11 finish: ./benchmarks/tmux/leak_4/tmux_leak_4.c:106:11>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f4f51881af8
    type <pointer_type 0x7f4f518959d8
        type <integer_type 0x7f4f5188e5e8 int public SI
            size <integer_cst 0x7f4f51879df8 constant 32>
            unit-size <integer_cst 0x7f4f51879e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4f5188e5e8 precision:32 min <integer_cst 0x7f4f51879db0 -2147483648> max <integer_cst 0x7f4f51879dc8 2147483647>
            pointer_to_this <pointer_type 0x7f4f518959d8>>
        public unsigned DI
        size <integer_cst 0x7f4f51879bb8 constant 64>
        unit-size <integer_cst 0x7f4f51879bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _17 = __errno_location ();
    version:17
    ptr-info 0x7f4f513b4678>
_17 = __errno_location ();

 ================== trace ptable================== 
trace fucntion name:__errno_location 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---__errno_location-----
this other function ------__errno_location-----
 
 Start check Pointer Collect  

======================================================================
saved_errno_37 = *_17;
./benchmarks/tmux/leak_4/tmux_leak_4.c:112:21: warning: use location
  112 |         saved_errno = errno;
      |                     ^
*_19 = saved_errno_37;
./benchmarks/tmux/leak_4/tmux_leak_4.c:114:15: warning: use location
  114 |         errno = saved_errno;
      |               ^
_17 = __errno_location ();
./benchmarks/tmux/leak_4/tmux_leak_4.c:112:23: warning: use location
  112 |         saved_errno = errno;
      |                       ^
this stmt is child function---__errno_location-----

 ================== trace ================== 
trace fucntion name:__errno_location 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f4f51881af8
    type <pointer_type 0x7f4f518959d8
        type <integer_type 0x7f4f5188e5e8 int public SI
            size <integer_cst 0x7f4f51879df8 constant 32>
            unit-size <integer_cst 0x7f4f51879e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4f5188e5e8 precision:32 min <integer_cst 0x7f4f51879db0 -2147483648> max <integer_cst 0x7f4f51879dc8 2147483647>
            pointer_to_this <pointer_type 0x7f4f518959d8>>
        public unsigned DI
        size <integer_cst 0x7f4f51879bb8 constant 64>
        unit-size <integer_cst 0x7f4f51879bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _17 = __errno_location ();
    version:17
    ptr-info 0x7f4f513b4678>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: use location
  113 |         free(base);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: Use after free error!: free location 
# .MEM_53 = VDEF <.MEM_52>
*_19 = saved_errno_37;
./benchmarks/tmux/leak_4/tmux_leak_4.c:114:15: warning: use location
  114 |         errno = saved_errno;
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/tmux/leak_4/tmux_leak_4.c:92:17: warning: use location
   92 |                 goto fail;
      |                 ^
	relate logic:= 1
succs:= 7
if (_6 != 17)
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:39: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |                                       ^
	relate logic:= 1
succs:= 6
if (_4 != 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:12: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 10
// predicted unlikely by goto predictor.
./benchmarks/tmux/leak_4/tmux_leak_4.c:95:17: warning: use location
   95 |                 goto fail;
      |                 ^
	relate logic:= 1
succs:= 9
if (_8 != 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:94:12: warning: use location
   94 |         if (lstat(base, &sb) != 0)
      |            ^
	relate logic:= 0
succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/tmux/leak_4/tmux_leak_4.c:92:17: warning: use location
   92 |                 goto fail;
      |                 ^
	relate logic:= 1
succs:= 7
if (_6 != 17)
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:39: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |                                       ^
	relate logic:= 1
succs:= 6
if (_4 != 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:12: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 12
// predicted unlikely by goto predictor.
./benchmarks/tmux/leak_4/tmux_leak_4.c:98:17: warning: use location
   98 |                 goto fail;
      |                 ^
	relate logic:= 1
succs:= 11
if (_10 != 16384)
./benchmarks/tmux/leak_4/tmux_leak_4.c:96:12: warning: use location
   96 |         if (!S_ISDIR(sb.st_mode)) {
      |            ^
	relate logic:= 0
succs:= 10
// predicted unlikely by goto predictor.
./benchmarks/tmux/leak_4/tmux_leak_4.c:95:17: warning: use location
   95 |                 goto fail;
      |                 ^
	relate logic:= 1
succs:= 9
if (_8 != 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:94:12: warning: use location
   94 |         if (lstat(base, &sb) != 0)
      |            ^
	relate logic:= 0
succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/tmux/leak_4/tmux_leak_4.c:92:17: warning: use location
   92 |                 goto fail;
      |                 ^
	relate logic:= 1
succs:= 7
if (_6 != 17)
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:39: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |                                       ^
	relate logic:= 1
succs:= 6
if (_4 != 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:12: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 14
// predicted unlikely by goto predictor.
./benchmarks/tmux/leak_4/tmux_leak_4.c:102:17: warning: use location
  102 |                 goto fail;
      |                 ^
	relate logic:= 1
succs:= 13
if (_12 != uid_26)
./benchmarks/tmux/leak_4/tmux_leak_4.c:100:12: warning: use location
  100 |         if (sb.st_uid != uid || (sb.st_mode & S_IRWXO) != 0) {
      |            ^
	relate logic:= 0
succs:= 12
// predicted unlikely by goto predictor.
./benchmarks/tmux/leak_4/tmux_leak_4.c:98:17: warning: use location
   98 |                 goto fail;
      |                 ^
	relate logic:= 1
succs:= 11
if (_10 != 16384)
./benchmarks/tmux/leak_4/tmux_leak_4.c:96:12: warning: use location
   96 |         if (!S_ISDIR(sb.st_mode)) {
      |            ^
	relate logic:= 0
succs:= 10
// predicted unlikely by goto predictor.
./benchmarks/tmux/leak_4/tmux_leak_4.c:95:17: warning: use location
   95 |                 goto fail;
      |                 ^
	relate logic:= 1
succs:= 9
if (_8 != 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:94:12: warning: use location
   94 |         if (lstat(base, &sb) != 0)
      |            ^
	relate logic:= 0
succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/tmux/leak_4/tmux_leak_4.c:92:17: warning: use location
   92 |                 goto fail;
      |                 ^
	relate logic:= 1
succs:= 7
if (_6 != 17)
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:39: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |                                       ^
	relate logic:= 1
succs:= 6
if (_4 != 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:12: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f4f51881b88
    type <pointer_type 0x7f4f518959d8
        type <integer_type 0x7f4f5188e5e8 int public SI
            size <integer_cst 0x7f4f51879df8 constant 32>
            unit-size <integer_cst 0x7f4f51879e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4f5188e5e8 precision:32 min <integer_cst 0x7f4f51879db0 -2147483648> max <integer_cst 0x7f4f51879dc8 2147483647>
            pointer_to_this <pointer_type 0x7f4f518959d8>>
        public unsigned DI
        size <integer_cst 0x7f4f51879bb8 constant 64>
        unit-size <integer_cst 0x7f4f51879bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _19 = __errno_location ();
    version:19
    ptr-info 0x7f4f513b46a8>
_19 = __errno_location ();

 ================== trace ptable================== 
trace fucntion name:__errno_location 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---__errno_location-----
this other function ------__errno_location-----
 
 Start check Pointer Collect  

======================================================================
*_19 = saved_errno_37;
./benchmarks/tmux/leak_4/tmux_leak_4.c:114:15: warning: use location
  114 |         errno = saved_errno;
      |               ^
*_19 = saved_errno_37;
./benchmarks/tmux/leak_4/tmux_leak_4.c:114:15: warning: use location
_19 = __errno_location ();
./benchmarks/tmux/leak_4/tmux_leak_4.c:114:9: warning: use location
  114 |         errno = saved_errno;
      |         ^
this stmt is child function---__errno_location-----

 ================== trace ================== 
trace fucntion name:__errno_location 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f4f51881b88
    type <pointer_type 0x7f4f518959d8
        type <integer_type 0x7f4f5188e5e8 int public SI
            size <integer_cst 0x7f4f51879df8 constant 32>
            unit-size <integer_cst 0x7f4f51879e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4f5188e5e8 precision:32 min <integer_cst 0x7f4f51879db0 -2147483648> max <integer_cst 0x7f4f51879dc8 2147483647>
            pointer_to_this <pointer_type 0x7f4f518959d8>>
        public unsigned DI
        size <integer_cst 0x7f4f51879bb8 constant 64>
        unit-size <integer_cst 0x7f4f51879bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _19 = __errno_location ();
    version:19
    ptr-info 0x7f4f513b46a8>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: use location
  113 |         free(base);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: Use after free error!: free location 
# .MEM_53 = VDEF <.MEM_52>
*_19 = saved_errno_37;
./benchmarks/tmux/leak_4/tmux_leak_4.c:114:15: warning: use location
  114 |         errno = saved_errno;
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/tmux/leak_4/tmux_leak_4.c:92:17: warning: use location
   92 |                 goto fail;
      |                 ^
	relate logic:= 1
succs:= 7
if (_6 != 17)
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:39: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |                                       ^
	relate logic:= 1
succs:= 6
if (_4 != 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:12: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 10
// predicted unlikely by goto predictor.
./benchmarks/tmux/leak_4/tmux_leak_4.c:95:17: warning: use location
   95 |                 goto fail;
      |                 ^
	relate logic:= 1
succs:= 9
if (_8 != 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:94:12: warning: use location
   94 |         if (lstat(base, &sb) != 0)
      |            ^
	relate logic:= 0
succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/tmux/leak_4/tmux_leak_4.c:92:17: warning: use location
   92 |                 goto fail;
      |                 ^
	relate logic:= 1
succs:= 7
if (_6 != 17)
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:39: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |                                       ^
	relate logic:= 1
succs:= 6
if (_4 != 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:12: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 12
// predicted unlikely by goto predictor.
./benchmarks/tmux/leak_4/tmux_leak_4.c:98:17: warning: use location
   98 |                 goto fail;
      |                 ^
	relate logic:= 1
succs:= 11
if (_10 != 16384)
./benchmarks/tmux/leak_4/tmux_leak_4.c:96:12: warning: use location
   96 |         if (!S_ISDIR(sb.st_mode)) {
      |            ^
	relate logic:= 0
succs:= 10
// predicted unlikely by goto predictor.
./benchmarks/tmux/leak_4/tmux_leak_4.c:95:17: warning: use location
   95 |                 goto fail;
      |                 ^
	relate logic:= 1
succs:= 9
if (_8 != 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:94:12: warning: use location
   94 |         if (lstat(base, &sb) != 0)
      |            ^
	relate logic:= 0
succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/tmux/leak_4/tmux_leak_4.c:92:17: warning: use location
   92 |                 goto fail;
      |                 ^
	relate logic:= 1
succs:= 7
if (_6 != 17)
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:39: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |                                       ^
	relate logic:= 1
succs:= 6
if (_4 != 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:12: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 14
// predicted unlikely by goto predictor.
./benchmarks/tmux/leak_4/tmux_leak_4.c:102:17: warning: use location
  102 |                 goto fail;
      |                 ^
	relate logic:= 1
succs:= 13
if (_12 != uid_26)
./benchmarks/tmux/leak_4/tmux_leak_4.c:100:12: warning: use location
  100 |         if (sb.st_uid != uid || (sb.st_mode & S_IRWXO) != 0) {
      |            ^
	relate logic:= 0
succs:= 12
// predicted unlikely by goto predictor.
./benchmarks/tmux/leak_4/tmux_leak_4.c:98:17: warning: use location
   98 |                 goto fail;
      |                 ^
	relate logic:= 1
succs:= 11
if (_10 != 16384)
./benchmarks/tmux/leak_4/tmux_leak_4.c:96:12: warning: use location
   96 |         if (!S_ISDIR(sb.st_mode)) {
      |            ^
	relate logic:= 0
succs:= 10
// predicted unlikely by goto predictor.
./benchmarks/tmux/leak_4/tmux_leak_4.c:95:17: warning: use location
   95 |                 goto fail;
      |                 ^
	relate logic:= 1
succs:= 9
if (_8 != 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:94:12: warning: use location
   94 |         if (lstat(base, &sb) != 0)
      |            ^
	relate logic:= 0
succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/tmux/leak_4/tmux_leak_4.c:92:17: warning: use location
   92 |                 goto fail;
      |                 ^
	relate logic:= 1
succs:= 7
if (_6 != 17)
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:39: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |                                       ^
	relate logic:= 1
succs:= 6
if (_4 != 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:12: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: Use after free error!: free location 
  113 |         free(base);
      |         ^
# .MEM_53 = VDEF <.MEM_52>
*_19 = saved_errno_37;
./benchmarks/tmux/leak_4/tmux_leak_4.c:114:15: warning: use location
  114 |         errno = saved_errno;
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/tmux/leak_4/tmux_leak_4.c:92:17: warning: use location
   92 |                 goto fail;
      |                 ^
	relate logic:= 1
succs:= 7
if (_6 != 17)
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:39: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |                                       ^
	relate logic:= 1
succs:= 6
if (_4 != 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:12: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 10
// predicted unlikely by goto predictor.
./benchmarks/tmux/leak_4/tmux_leak_4.c:95:17: warning: use location
   95 |                 goto fail;
      |                 ^
	relate logic:= 1
succs:= 9
if (_8 != 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:94:12: warning: use location
   94 |         if (lstat(base, &sb) != 0)
      |            ^
	relate logic:= 0
succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/tmux/leak_4/tmux_leak_4.c:92:17: warning: use location
   92 |                 goto fail;
      |                 ^
	relate logic:= 1
succs:= 7
if (_6 != 17)
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:39: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |                                       ^
	relate logic:= 1
succs:= 6
if (_4 != 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:12: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 12
// predicted unlikely by goto predictor.
./benchmarks/tmux/leak_4/tmux_leak_4.c:98:17: warning: use location
   98 |                 goto fail;
      |                 ^
	relate logic:= 1
succs:= 11
if (_10 != 16384)
./benchmarks/tmux/leak_4/tmux_leak_4.c:96:12: warning: use location
   96 |         if (!S_ISDIR(sb.st_mode)) {
      |            ^
	relate logic:= 0
succs:= 10
// predicted unlikely by goto predictor.
./benchmarks/tmux/leak_4/tmux_leak_4.c:95:17: warning: use location
   95 |                 goto fail;
      |                 ^
	relate logic:= 1
succs:= 9
if (_8 != 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:94:12: warning: use location
   94 |         if (lstat(base, &sb) != 0)
      |            ^
	relate logic:= 0
succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/tmux/leak_4/tmux_leak_4.c:92:17: warning: use location
   92 |                 goto fail;
      |                 ^
	relate logic:= 1
succs:= 7
if (_6 != 17)
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:39: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |                                       ^
	relate logic:= 1
succs:= 6
if (_4 != 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:12: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 14
// predicted unlikely by goto predictor.
./benchmarks/tmux/leak_4/tmux_leak_4.c:102:17: warning: use location
  102 |                 goto fail;
      |                 ^
	relate logic:= 1
succs:= 13
if (_12 != uid_26)
./benchmarks/tmux/leak_4/tmux_leak_4.c:100:12: warning: use location
  100 |         if (sb.st_uid != uid || (sb.st_mode & S_IRWXO) != 0) {
      |            ^
	relate logic:= 0
succs:= 12
// predicted unlikely by goto predictor.
./benchmarks/tmux/leak_4/tmux_leak_4.c:98:17: warning: use location
   98 |                 goto fail;
      |                 ^
	relate logic:= 1
succs:= 11
if (_10 != 16384)
./benchmarks/tmux/leak_4/tmux_leak_4.c:96:12: warning: use location
   96 |         if (!S_ISDIR(sb.st_mode)) {
      |            ^
	relate logic:= 0
succs:= 10
// predicted unlikely by goto predictor.
./benchmarks/tmux/leak_4/tmux_leak_4.c:95:17: warning: use location
   95 |                 goto fail;
      |                 ^
	relate logic:= 1
succs:= 9
if (_8 != 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:94:12: warning: use location
   94 |         if (lstat(base, &sb) != 0)
      |            ^
	relate logic:= 0
succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/tmux/leak_4/tmux_leak_4.c:92:17: warning: use location
   92 |                 goto fail;
      |                 ^
	relate logic:= 1
succs:= 7
if (_6 != 17)
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:39: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |                                       ^
	relate logic:= 1
succs:= 6
if (_4 != 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:12: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: Use after free error!: free location 
  113 |         free(base);
      |         ^
_19 = __errno_location ();
./benchmarks/tmux/leak_4/tmux_leak_4.c:114:9: warning: use location
  114 |         errno = saved_errno;
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/tmux/leak_4/tmux_leak_4.c:92:17: warning: use location
   92 |                 goto fail;
      |                 ^
	relate logic:= 1
succs:= 7
if (_6 != 17)
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:39: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |                                       ^
	relate logic:= 1
succs:= 6
if (_4 != 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:12: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 10
// predicted unlikely by goto predictor.
./benchmarks/tmux/leak_4/tmux_leak_4.c:95:17: warning: use location
   95 |                 goto fail;
      |                 ^
	relate logic:= 1
succs:= 9
if (_8 != 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:94:12: warning: use location
   94 |         if (lstat(base, &sb) != 0)
      |            ^
	relate logic:= 0
succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/tmux/leak_4/tmux_leak_4.c:92:17: warning: use location
   92 |                 goto fail;
      |                 ^
	relate logic:= 1
succs:= 7
if (_6 != 17)
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:39: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |                                       ^
	relate logic:= 1
succs:= 6
if (_4 != 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:12: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 12
// predicted unlikely by goto predictor.
./benchmarks/tmux/leak_4/tmux_leak_4.c:98:17: warning: use location
   98 |                 goto fail;
      |                 ^
	relate logic:= 1
succs:= 11
if (_10 != 16384)
./benchmarks/tmux/leak_4/tmux_leak_4.c:96:12: warning: use location
   96 |         if (!S_ISDIR(sb.st_mode)) {
      |            ^
	relate logic:= 0
succs:= 10
// predicted unlikely by goto predictor.
./benchmarks/tmux/leak_4/tmux_leak_4.c:95:17: warning: use location
   95 |                 goto fail;
      |                 ^
	relate logic:= 1
succs:= 9
if (_8 != 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:94:12: warning: use location
   94 |         if (lstat(base, &sb) != 0)
      |            ^
	relate logic:= 0
succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/tmux/leak_4/tmux_leak_4.c:92:17: warning: use location
   92 |                 goto fail;
      |                 ^
	relate logic:= 1
succs:= 7
if (_6 != 17)
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:39: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |                                       ^
	relate logic:= 1
succs:= 6
if (_4 != 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:12: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 14
// predicted unlikely by goto predictor.
./benchmarks/tmux/leak_4/tmux_leak_4.c:102:17: warning: use location
  102 |                 goto fail;
      |                 ^
	relate logic:= 1
succs:= 13
if (_12 != uid_26)
./benchmarks/tmux/leak_4/tmux_leak_4.c:100:12: warning: use location
  100 |         if (sb.st_uid != uid || (sb.st_mode & S_IRWXO) != 0) {
      |            ^
	relate logic:= 0
succs:= 12
// predicted unlikely by goto predictor.
./benchmarks/tmux/leak_4/tmux_leak_4.c:98:17: warning: use location
   98 |                 goto fail;
      |                 ^
	relate logic:= 1
succs:= 11
if (_10 != 16384)
./benchmarks/tmux/leak_4/tmux_leak_4.c:96:12: warning: use location
   96 |         if (!S_ISDIR(sb.st_mode)) {
      |            ^
	relate logic:= 0
succs:= 10
// predicted unlikely by goto predictor.
./benchmarks/tmux/leak_4/tmux_leak_4.c:95:17: warning: use location
   95 |                 goto fail;
      |                 ^
	relate logic:= 1
succs:= 9
if (_8 != 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:94:12: warning: use location
   94 |         if (lstat(base, &sb) != 0)
      |            ^
	relate logic:= 0
succs:= 8
// predicted unlikely by goto predictor.
./benchmarks/tmux/leak_4/tmux_leak_4.c:92:17: warning: use location
   92 |                 goto fail;
      |                 ^
	relate logic:= 1
succs:= 7
if (_6 != 17)
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:39: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |                                       ^
	relate logic:= 1
succs:= 6
if (_4 != 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:12: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:make_label========= [0m
[40;44m =======node_fun:xvasprintf========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path xvasprintf  function_call count: 5 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:strerror========= [0m
[40;33m =======POP node_fun stack:strerror========= [0m
[40;42m =======pre add _ fucntion:__errno_location========= [0m
[40;33m =======POP node_fun stack:__errno_location========= [0m
[40;42m =======pre add _ fucntion:vasprintf========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path vasprintf  function_call count: 2 level :1========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre_check_funciton:vasprintf========= [0m
[40;42m =======start_check_funciton:vasprintf========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f4f513c08b8
    type <pointer_type 0x7f4f51895000
        type <void_type 0x7f4f5188ef18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f4f51895000>>
        public unsigned DI
        size <integer_cst 0x7f4f51879bb8 constant 64>
        unit-size <integer_cst 0x7f4f51879bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f4f5189a9d8>>
   
    def_stmt _4 = malloc (_3);
    version:4
    ptr-info 0x7f4f513b47b0>
# .MEM_13 = VDEF <.MEM_12(D)>
_4 = malloc (_3);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
*ret_11(D) = _4;
bb index := 2
# VUSE <.MEM_14>
return _6;
In function â€˜vasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
*ret_11(D) = _4;
In function â€˜xvasprintfâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:14: warning: use location
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
*ret_11(D) = _4;
bb index := 2
# VUSE <.MEM_14>
return _6;
In function â€˜vasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
*ret_11(D) = _4;
In function â€˜xvasprintfâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:14: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12(D)>
_4 = malloc (_3);
bb index := 2
# VUSE <.MEM_14>
return _6;
In function â€˜vasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_4 = malloc (_3);
In function â€˜xvasprintfâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:16: warning: use location
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |                ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f4f513c08b8
    type <pointer_type 0x7f4f51895000
        type <void_type 0x7f4f5188ef18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f4f51895000>>
        public unsigned DI
        size <integer_cst 0x7f4f51879bb8 constant 64>
        unit-size <integer_cst 0x7f4f51879bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f4f5189a9d8>>
   
    def_stmt _4 = malloc (_3);
    version:4
    ptr-info 0x7f4f513b47b0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f4f513c0990
    type <pointer_type 0x7f4f513a2bd0
        type <integer_type 0x7f4f513a2b28 char readonly public QI
            size <integer_cst 0x7f4f51879ca8 constant 8>
            unit-size <integer_cst 0x7f4f51879cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4f5188e3f0 precision:8 min <integer_cst 0x7f4f51399720 -128> max <integer_cst 0x7f4f51399708 127> context <translation_unit_decl 0x7f4f51884168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f4f513a2bd0>>
        public unsigned DI
        size <integer_cst 0x7f4f51879bb8 constant 64>
        unit-size <integer_cst 0x7f4f51879bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f4f513bb800 fmt>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f4f513b47e0>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_12(D)>
_1 = strlen (fmt_8(D));
bb index := 2
# VUSE <.MEM_14>
return _6;
In function â€˜vasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_1 = strlen (fmt_8(D));
In function â€˜xvasprintfâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:23: warning: use location
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |                       ^
this stmt is child function---strlen-----

 ================== trace ================== 
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _1 + _2;
bb index := 2
# VUSE <.MEM_14>
return _6;
In function â€˜vasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_3 = _1 + _2;
In function â€˜xvasprintfâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:16: warning: use location
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12(D)>
_4 = malloc (_3);
bb index := 2
# VUSE <.MEM_14>
return _6;
In function â€˜vasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_4 = malloc (_3);
In function â€˜xvasprintfâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:16: warning: use location
this stmt is child function---malloc-----

 ================== trace ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
*ret_11(D) = _4;
bb index := 2
# VUSE <.MEM_14>
return _6;
In function â€˜vasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
*ret_11(D) = _4;
In function â€˜xvasprintfâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:14: warning: use location
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |              ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f4f513c0990
    type <pointer_type 0x7f4f513a2bd0
        type <integer_type 0x7f4f513a2b28 char readonly public QI
            size <integer_cst 0x7f4f51879ca8 constant 8>
            unit-size <integer_cst 0x7f4f51879cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4f5188e3f0 precision:8 min <integer_cst 0x7f4f51399720 -128> max <integer_cst 0x7f4f51399708 127> context <translation_unit_decl 0x7f4f51884168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f4f513a2bd0>>
        public unsigned DI
        size <integer_cst 0x7f4f51879bb8 constant 64>
        unit-size <integer_cst 0x7f4f51879bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f4f513bb800 fmt>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f4f513b47e0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f4f513c09d8
    type <pointer_type 0x7f4f513a2c78
        type <integer_type 0x7f4f513a2a80 char public QI
            size <integer_cst 0x7f4f51879ca8 constant 8>
            unit-size <integer_cst 0x7f4f51879cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4f5188e3f0 precision:8 min <integer_cst 0x7f4f51399720 -128> max <integer_cst 0x7f4f51399708 127> context <translation_unit_decl 0x7f4f51884168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f4f513a2c78>>
        public unsigned DI
        size <integer_cst 0x7f4f51879bb8 constant 64>
        unit-size <integer_cst 0x7f4f51879bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f4f51884168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
        pointer_to_this <pointer_type 0x7f4f513a2dc8>>
    var <parm_decl 0x7f4f513bb880 ap>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7f4f513b47f8>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_12(D)>
_2 = strlen (ap_9(D));
bb index := 2
# VUSE <.MEM_14>
return _6;
In function â€˜vasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_2 = strlen (ap_9(D));
In function â€˜xvasprintfâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:37: warning: use location
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |                                     ^
this stmt is child function---strlen-----

 ================== trace ================== 
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _1 + _2;
bb index := 2
# VUSE <.MEM_14>
return _6;
In function â€˜vasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_3 = _1 + _2;
In function â€˜xvasprintfâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:16: warning: use location
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12(D)>
_4 = malloc (_3);
bb index := 2
# VUSE <.MEM_14>
return _6;
In function â€˜vasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_4 = malloc (_3);
In function â€˜xvasprintfâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:16: warning: use location
this stmt is child function---malloc-----

 ================== trace ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
*ret_11(D) = _4;
bb index := 2
# VUSE <.MEM_14>
return _6;
In function â€˜vasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
*ret_11(D) = _4;
In function â€˜xvasprintfâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:14: warning: use location
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |              ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f4f513c09d8
    type <pointer_type 0x7f4f513a2c78
        type <integer_type 0x7f4f513a2a80 char public QI
            size <integer_cst 0x7f4f51879ca8 constant 8>
            unit-size <integer_cst 0x7f4f51879cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4f5188e3f0 precision:8 min <integer_cst 0x7f4f51399720 -128> max <integer_cst 0x7f4f51399708 127> context <translation_unit_decl 0x7f4f51884168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f4f513a2c78>>
        public unsigned DI
        size <integer_cst 0x7f4f51879bb8 constant 64>
        unit-size <integer_cst 0x7f4f51879bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f4f51884168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
        pointer_to_this <pointer_type 0x7f4f513a2dc8>>
    var <parm_decl 0x7f4f513bb880 ap>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7f4f513b47f8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f4f513c0870
    type <integer_type 0x7f4f5188e7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f4f51879bb8 constant 64>
        unit-size <integer_cst 0x7f4f51879bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4f5188e738 precision:64 min <integer_cst 0x7f4f51879e88 0> max <integer_cst 0x7f4f5187a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f4f5189a7e0>>
   
    def_stmt _3 = _1 + _2;
    version:3>
_3 = _1 + _2;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:vasprintf========= [0m
[40;42m =======pre_check_funciton:xvasprintf========= [0m
[40;42m =======start_check_funciton:xvasprintf========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f4f513c03a8
    type <pointer_type 0x7f4f513a2dc8
        type <pointer_type 0x7f4f513a2c78 type <integer_type 0x7f4f513a2a80 char>
            public unsigned DI
            size <integer_cst 0x7f4f51879bb8 constant 64>
            unit-size <integer_cst 0x7f4f51879bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f4f51884168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f4f513a2dc8>>
        public unsigned DI size <integer_cst 0x7f4f51879bb8 64> unit-size <integer_cst 0x7f4f51879bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f4f513bb400 ret>
    def_stmt GIMPLE_NOP
    version:6
    ptr-info 0x7f4f513b4720>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_12>
_1 = *ret_6(D);
bb index := 3
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
   71 |         return i;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_12>
_1 = *ret_6(D);
bb index := 3
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_12>
_1 = *ret_6(D);
bb index := 3
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
_1 = *ret_6(D);
./benchmarks/tmux/leak_4/tmux_leak_4.c:68:22: warning: use location
   68 |         if (i < 0 || *ret == NULL)
      |                      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 3
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
   71 |         return i;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 3
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 3
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
if (_1 == 0B)
./benchmarks/tmux/leak_4/tmux_leak_4.c:68:19: warning: use location
   68 |         if (i < 0 || *ret == NULL)
      |                   ^
if (_1 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_4/tmux_leak_4.c:68:19: warning: use location
Cond in fucntion xvasprintf basic block 3
 ================== possible direct basic block ================= 
from xvasprintf basic block 4
 ================== possible direct basic block ================= 
from xvasprintf basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11(D)>
i_10 = vasprintf (ret_6(D), fmt_7(D), ap_8(D));
bb index := 2
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
   71 |         return i;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11(D)>
i_10 = vasprintf (ret_6(D), fmt_7(D), ap_8(D));
bb index := 2
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
i_10 = vasprintf (ret_6(D), fmt_7(D), ap_8(D));
./benchmarks/tmux/leak_4/tmux_leak_4.c:66:13: warning: use location
   66 |         i = vasprintf(ret, fmt, ap);
      |             ^
this stmt is child function---vasprintf-----

 ================== trace ================== 
trace fucntion name:vasprintf 
[40;44m =======trace_function_path vasprintf  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:vasprintf========= [0m
[40;36m ======= find relate stmt with ret ========= [0m
[40;36m ======= relate stmt argument:ret ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (i_10 < 0)
bb index := 2
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
   71 |         return i;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (i_10 < 0)
bb index := 2
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
if (i_10 < 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:68:12: warning: use location
   68 |         if (i < 0 || *ret == NULL)
      |            ^
if (i_10 < 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_4/tmux_leak_4.c:68:12: warning: use location
Cond in fucntion xvasprintf basic block 2
 ================== possible direct basic block ================= 
from xvasprintf basic block 4
 ================== possible direct basic block ================= 
from xvasprintf basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f4f513c03a8
    type <pointer_type 0x7f4f513a2dc8
        type <pointer_type 0x7f4f513a2c78 type <integer_type 0x7f4f513a2a80 char>
            public unsigned DI
            size <integer_cst 0x7f4f51879bb8 constant 64>
            unit-size <integer_cst 0x7f4f51879bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f4f51884168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f4f513a2dc8>>
        public unsigned DI size <integer_cst 0x7f4f51879bb8 64> unit-size <integer_cst 0x7f4f51879bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f4f513bb400 ret>
    def_stmt GIMPLE_NOP
    version:6
    ptr-info 0x7f4f513b4720>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f4f513c02d0
    type <pointer_type 0x7f4f518959d8
        type <integer_type 0x7f4f5188e5e8 int public SI
            size <integer_cst 0x7f4f51879df8 constant 32>
            unit-size <integer_cst 0x7f4f51879e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4f5188e5e8 precision:32 min <integer_cst 0x7f4f51879db0 -2147483648> max <integer_cst 0x7f4f51879dc8 2147483647>
            pointer_to_this <pointer_type 0x7f4f518959d8>>
        public unsigned DI
        size <integer_cst 0x7f4f51879bb8 constant 64>
        unit-size <integer_cst 0x7f4f51879bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = __errno_location ();
    version:2
    ptr-info 0x7f4f513b4708>
_2 = __errno_location ();

 ================== trace ptable================== 
trace fucntion name:__errno_location 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---__errno_location-----
this other function ------__errno_location-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_12>
_3 = *_2;
bb index := 4
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
   71 |         return i;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_12>
_3 = *_2;
bb index := 4
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
_3 = *_2;
./benchmarks/tmux/leak_4/tmux_leak_4.c:69:17: warning: use location
   69 |                 fatalx("xasprintf: %s", strerror(errno));
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
_4 = strerror (_3);
bb index := 4
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
   71 |         return i;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
_4 = strerror (_3);
bb index := 4
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
_4 = strerror (_3);
./benchmarks/tmux/leak_4/tmux_leak_4.c:69:17: warning: use location
   69 |                 fatalx("xasprintf: %s", strerror(errno));
      |                 ^
this stmt is child function---strerror-----

 ================== trace ================== 
trace fucntion name:strerror 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
printf ("xasprintf: %s", _4);
bb index := 4
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
   71 |         return i;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
printf ("xasprintf: %s", _4);
bb index := 4
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
printf ("xasprintf: %s", _4);
./benchmarks/tmux/leak_4/tmux_leak_4.c:69:17: warning: use location
   69 |                 fatalx("xasprintf: %s", strerror(errno));
      |                 ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = __errno_location ();
bb index := 4
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
   71 |         return i;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = __errno_location ();
bb index := 4
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
_2 = __errno_location ();
./benchmarks/tmux/leak_4/tmux_leak_4.c:69:17: warning: use location
   69 |                 fatalx("xasprintf: %s", strerror(errno));
      |                 ^
this stmt is child function---__errno_location-----

 ================== trace ================== 
trace fucntion name:__errno_location 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f4f513c02d0
    type <pointer_type 0x7f4f518959d8
        type <integer_type 0x7f4f5188e5e8 int public SI
            size <integer_cst 0x7f4f51879df8 constant 32>
            unit-size <integer_cst 0x7f4f51879e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4f5188e5e8 precision:32 min <integer_cst 0x7f4f51879db0 -2147483648> max <integer_cst 0x7f4f51879dc8 2147483647>
            pointer_to_this <pointer_type 0x7f4f518959d8>>
        public unsigned DI
        size <integer_cst 0x7f4f51879bb8 constant 64>
        unit-size <integer_cst 0x7f4f51879bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = __errno_location ();
    version:2
    ptr-info 0x7f4f513b4708>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f4f513c0318
    type <integer_type 0x7f4f5188e5e8 int public SI
        size <integer_cst 0x7f4f51879df8 constant 32>
        unit-size <integer_cst 0x7f4f51879e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4f5188e5e8 precision:32 min <integer_cst 0x7f4f51879db0 -2147483648> max <integer_cst 0x7f4f51879dc8 2147483647>
        pointer_to_this <pointer_type 0x7f4f518959d8>>
   
    def_stmt _3 = *_2;
    version:3>
# VUSE <.MEM_12>
_3 = *_2;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
_4 = strerror (_3);
bb index := 4
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
   71 |         return i;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
_4 = strerror (_3);
bb index := 4
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
_4 = strerror (_3);
./benchmarks/tmux/leak_4/tmux_leak_4.c:69:17: warning: use location
   69 |                 fatalx("xasprintf: %s", strerror(errno));
      |                 ^
this stmt is child function---strerror-----

 ================== trace ================== 
trace fucntion name:strerror 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
printf ("xasprintf: %s", _4);
bb index := 4
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
   71 |         return i;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
printf ("xasprintf: %s", _4);
bb index := 4
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
printf ("xasprintf: %s", _4);
./benchmarks/tmux/leak_4/tmux_leak_4.c:69:17: warning: use location
   69 |                 fatalx("xasprintf: %s", strerror(errno));
      |                 ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f4f513c0318
    type <integer_type 0x7f4f5188e5e8 int public SI
        size <integer_cst 0x7f4f51879df8 constant 32>
        unit-size <integer_cst 0x7f4f51879e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4f5188e5e8 precision:32 min <integer_cst 0x7f4f51879db0 -2147483648> max <integer_cst 0x7f4f51879dc8 2147483647>
        pointer_to_this <pointer_type 0x7f4f518959d8>>
   
    def_stmt _3 = *_2;
    version:3>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f4f51a75f60
    type <pointer_type 0x7f4f513aabd0
        type <array_type 0x7f4f513aab28 type <integer_type 0x7f4f513a2a80 char>
            BLK
            size <integer_cst 0x7f4f51399780 constant 112>
            unit-size <integer_cst 0x7f4f51399768 constant 14>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f4f513aaa80>
            pointer_to_this <pointer_type 0x7f4f513aabd0>>
        unsigned DI
        size <integer_cst 0x7f4f51879bb8 constant 64>
        unit-size <integer_cst 0x7f4f51879bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f4f513c1190 type <array_type 0x7f4f513aab28>
        readonly constant static "xasprintf: %s\000">
    ./benchmarks/tmux/leak_4/tmux_leak_4.c:69:3 start: ./benchmarks/tmux/leak_4/tmux_leak_4.c:69:3 finish: ./benchmarks/tmux/leak_4/tmux_leak_4.c:69:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:xvasprintf========= [0m
[40;44m =======node_fun:xasprintf========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path xasprintf  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:xvasprintf========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path xvasprintf  function_call count: 5 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:strerror========= [0m
[40;33m =======POP node_fun stack:strerror========= [0m
[40;42m =======pre add _ fucntion:__errno_location========= [0m
[40;33m =======POP node_fun stack:__errno_location========= [0m
[40;42m =======pre add _ fucntion:vasprintf========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path vasprintf  function_call count: 2 level :2========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre_check_funciton:vasprintf========= [0m
[40;42m =======start_check_funciton:vasprintf========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f4f513c08b8
    type <pointer_type 0x7f4f51895000
        type <void_type 0x7f4f5188ef18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f4f51895000>>
        public unsigned DI
        size <integer_cst 0x7f4f51879bb8 constant 64>
        unit-size <integer_cst 0x7f4f51879bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f4f5189a9d8>>
   
    def_stmt _4 = malloc (_3);
    version:4
    ptr-info 0x7f4f513b47b0>
# .MEM_13 = VDEF <.MEM_12(D)>
_4 = malloc (_3);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
*ret_11(D) = _4;
bb index := 2
# VUSE <.MEM_14>
return _6;
In function â€˜vasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
*ret_11(D) = _4;
In function â€˜xasprintfâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:14: warning: use location
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
*ret_11(D) = _4;
bb index := 2
# VUSE <.MEM_14>
return _6;
In function â€˜vasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
*ret_11(D) = _4;
In function â€˜xasprintfâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:14: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12(D)>
_4 = malloc (_3);
bb index := 2
# VUSE <.MEM_14>
return _6;
In function â€˜vasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_4 = malloc (_3);
In function â€˜xasprintfâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:16: warning: use location
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |                ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f4f513c08b8
    type <pointer_type 0x7f4f51895000
        type <void_type 0x7f4f5188ef18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f4f51895000>>
        public unsigned DI
        size <integer_cst 0x7f4f51879bb8 constant 64>
        unit-size <integer_cst 0x7f4f51879bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f4f5189a9d8>>
   
    def_stmt _4 = malloc (_3);
    version:4
    ptr-info 0x7f4f513b47b0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f4f513c0990
    type <pointer_type 0x7f4f513a2bd0
        type <integer_type 0x7f4f513a2b28 char readonly public QI
            size <integer_cst 0x7f4f51879ca8 constant 8>
            unit-size <integer_cst 0x7f4f51879cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4f5188e3f0 precision:8 min <integer_cst 0x7f4f51399720 -128> max <integer_cst 0x7f4f51399708 127> context <translation_unit_decl 0x7f4f51884168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f4f513a2bd0>>
        public unsigned DI
        size <integer_cst 0x7f4f51879bb8 constant 64>
        unit-size <integer_cst 0x7f4f51879bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f4f513bb800 fmt>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f4f513b47e0>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_12(D)>
_1 = strlen (fmt_8(D));
bb index := 2
# VUSE <.MEM_14>
return _6;
In function â€˜vasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_1 = strlen (fmt_8(D));
In function â€˜xasprintfâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:23: warning: use location
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |                       ^
this stmt is child function---strlen-----

 ================== trace ================== 
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _1 + _2;
bb index := 2
# VUSE <.MEM_14>
return _6;
In function â€˜vasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_3 = _1 + _2;
In function â€˜xasprintfâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:16: warning: use location
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12(D)>
_4 = malloc (_3);
bb index := 2
# VUSE <.MEM_14>
return _6;
In function â€˜vasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_4 = malloc (_3);
In function â€˜xasprintfâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:16: warning: use location
this stmt is child function---malloc-----

 ================== trace ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
*ret_11(D) = _4;
bb index := 2
# VUSE <.MEM_14>
return _6;
In function â€˜vasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
*ret_11(D) = _4;
In function â€˜xasprintfâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:14: warning: use location
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |              ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f4f513c0990
    type <pointer_type 0x7f4f513a2bd0
        type <integer_type 0x7f4f513a2b28 char readonly public QI
            size <integer_cst 0x7f4f51879ca8 constant 8>
            unit-size <integer_cst 0x7f4f51879cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4f5188e3f0 precision:8 min <integer_cst 0x7f4f51399720 -128> max <integer_cst 0x7f4f51399708 127> context <translation_unit_decl 0x7f4f51884168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f4f513a2bd0>>
        public unsigned DI
        size <integer_cst 0x7f4f51879bb8 constant 64>
        unit-size <integer_cst 0x7f4f51879bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f4f513bb800 fmt>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f4f513b47e0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f4f513c09d8
    type <pointer_type 0x7f4f513a2c78
        type <integer_type 0x7f4f513a2a80 char public QI
            size <integer_cst 0x7f4f51879ca8 constant 8>
            unit-size <integer_cst 0x7f4f51879cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4f5188e3f0 precision:8 min <integer_cst 0x7f4f51399720 -128> max <integer_cst 0x7f4f51399708 127> context <translation_unit_decl 0x7f4f51884168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f4f513a2c78>>
        public unsigned DI
        size <integer_cst 0x7f4f51879bb8 constant 64>
        unit-size <integer_cst 0x7f4f51879bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f4f51884168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
        pointer_to_this <pointer_type 0x7f4f513a2dc8>>
    var <parm_decl 0x7f4f513bb880 ap>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7f4f513b47f8>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_12(D)>
_2 = strlen (ap_9(D));
bb index := 2
# VUSE <.MEM_14>
return _6;
In function â€˜vasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_2 = strlen (ap_9(D));
In function â€˜xasprintfâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:37: warning: use location
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |                                     ^
this stmt is child function---strlen-----

 ================== trace ================== 
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _1 + _2;
bb index := 2
# VUSE <.MEM_14>
return _6;
In function â€˜vasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_3 = _1 + _2;
In function â€˜xasprintfâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:16: warning: use location
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12(D)>
_4 = malloc (_3);
bb index := 2
# VUSE <.MEM_14>
return _6;
In function â€˜vasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_4 = malloc (_3);
In function â€˜xasprintfâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:16: warning: use location
this stmt is child function---malloc-----

 ================== trace ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
*ret_11(D) = _4;
bb index := 2
# VUSE <.MEM_14>
return _6;
In function â€˜vasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
*ret_11(D) = _4;
In function â€˜xasprintfâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:14: warning: use location
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |              ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f4f513c09d8
    type <pointer_type 0x7f4f513a2c78
        type <integer_type 0x7f4f513a2a80 char public QI
            size <integer_cst 0x7f4f51879ca8 constant 8>
            unit-size <integer_cst 0x7f4f51879cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4f5188e3f0 precision:8 min <integer_cst 0x7f4f51399720 -128> max <integer_cst 0x7f4f51399708 127> context <translation_unit_decl 0x7f4f51884168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f4f513a2c78>>
        public unsigned DI
        size <integer_cst 0x7f4f51879bb8 constant 64>
        unit-size <integer_cst 0x7f4f51879bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f4f51884168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
        pointer_to_this <pointer_type 0x7f4f513a2dc8>>
    var <parm_decl 0x7f4f513bb880 ap>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7f4f513b47f8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f4f513c0870
    type <integer_type 0x7f4f5188e7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f4f51879bb8 constant 64>
        unit-size <integer_cst 0x7f4f51879bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4f5188e738 precision:64 min <integer_cst 0x7f4f51879e88 0> max <integer_cst 0x7f4f5187a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f4f5189a7e0>>
   
    def_stmt _3 = _1 + _2;
    version:3>
_3 = _1 + _2;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:vasprintf========= [0m
[40;42m =======pre_check_funciton:xvasprintf========= [0m
[40;42m =======start_check_funciton:xvasprintf========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f4f513c03a8
    type <pointer_type 0x7f4f513a2dc8
        type <pointer_type 0x7f4f513a2c78 type <integer_type 0x7f4f513a2a80 char>
            public unsigned DI
            size <integer_cst 0x7f4f51879bb8 constant 64>
            unit-size <integer_cst 0x7f4f51879bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f4f51884168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f4f513a2dc8>>
        public unsigned DI size <integer_cst 0x7f4f51879bb8 64> unit-size <integer_cst 0x7f4f51879bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f4f513bb400 ret>
    def_stmt GIMPLE_NOP
    version:6
    ptr-info 0x7f4f513b4720>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_12>
_1 = *ret_6(D);
bb index := 3
# VUSE <.MEM_12>
return i_10;
In function â€˜xvasprintfâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
   71 |         return i;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_12>
_1 = *ret_6(D);
bb index := 3
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_12>
_1 = *ret_6(D);
bb index := 3
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
_1 = *ret_6(D);
In function â€˜xasprintfâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:68:22: warning: use location
   68 |         if (i < 0 || *ret == NULL)
      |                      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 3
# VUSE <.MEM_12>
return i_10;
In function â€˜xvasprintfâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
   71 |         return i;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 3
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 3
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================
if (_1 == 0B)
In function â€˜xasprintfâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:68:19: warning: use location
   68 |         if (i < 0 || *ret == NULL)
      |                   ^
if (_1 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_4/tmux_leak_4.c:68:19: warning: use location
Cond in fucntion xvasprintf basic block 3
 ================== possible direct basic block ================= 
from xvasprintf basic block 4
 ================== possible direct basic block ================= 
from xvasprintf basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11(D)>
i_10 = vasprintf (ret_6(D), fmt_7(D), ap_8(D));
bb index := 2
# VUSE <.MEM_12>
return i_10;
In function â€˜xvasprintfâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
   71 |         return i;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_12 = VDEF <.MEM_11(D)>
i_10 = vasprintf (ret_6(D), fmt_7(D), ap_8(D));
bb index := 2
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
i_10 = vasprintf (ret_6(D), fmt_7(D), ap_8(D));
In function â€˜xasprintfâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:66:13: warning: use location
   66 |         i = vasprintf(ret, fmt, ap);
      |             ^
this stmt is child function---vasprintf-----

 ================== trace ================== 
trace fucntion name:vasprintf 
[40;44m =======trace_function_path vasprintf  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:vasprintf========= [0m
[40;36m ======= find relate stmt with ret ========= [0m
[40;36m ======= relate stmt argument:ret ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (i_10 < 0)
bb index := 2
# VUSE <.MEM_12>
return i_10;
In function â€˜xvasprintfâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
   71 |         return i;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (i_10 < 0)
bb index := 2
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
if (i_10 < 0)
In function â€˜xasprintfâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:68:12: warning: use location
   68 |         if (i < 0 || *ret == NULL)
      |            ^
if (i_10 < 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_4/tmux_leak_4.c:68:12: warning: use location
Cond in fucntion xvasprintf basic block 2
 ================== possible direct basic block ================= 
from xvasprintf basic block 4
 ================== possible direct basic block ================= 
from xvasprintf basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f4f513c03a8
    type <pointer_type 0x7f4f513a2dc8
        type <pointer_type 0x7f4f513a2c78 type <integer_type 0x7f4f513a2a80 char>
            public unsigned DI
            size <integer_cst 0x7f4f51879bb8 constant 64>
            unit-size <integer_cst 0x7f4f51879bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f4f51884168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f4f513a2dc8>>
        public unsigned DI size <integer_cst 0x7f4f51879bb8 64> unit-size <integer_cst 0x7f4f51879bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f4f513bb400 ret>
    def_stmt GIMPLE_NOP
    version:6
    ptr-info 0x7f4f513b4720>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f4f513c02d0
    type <pointer_type 0x7f4f518959d8
        type <integer_type 0x7f4f5188e5e8 int public SI
            size <integer_cst 0x7f4f51879df8 constant 32>
            unit-size <integer_cst 0x7f4f51879e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4f5188e5e8 precision:32 min <integer_cst 0x7f4f51879db0 -2147483648> max <integer_cst 0x7f4f51879dc8 2147483647>
            pointer_to_this <pointer_type 0x7f4f518959d8>>
        public unsigned DI
        size <integer_cst 0x7f4f51879bb8 constant 64>
        unit-size <integer_cst 0x7f4f51879bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = __errno_location ();
    version:2
    ptr-info 0x7f4f513b4708>
_2 = __errno_location ();

 ================== trace ptable================== 
trace fucntion name:__errno_location 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---__errno_location-----
this other function ------__errno_location-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_12>
_3 = *_2;
bb index := 4
# VUSE <.MEM_12>
return i_10;
In function â€˜xvasprintfâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
   71 |         return i;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_12>
_3 = *_2;
bb index := 4
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
_3 = *_2;
In function â€˜xasprintfâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:69:17: warning: use location
   69 |                 fatalx("xasprintf: %s", strerror(errno));
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
_4 = strerror (_3);
bb index := 4
# VUSE <.MEM_12>
return i_10;
In function â€˜xvasprintfâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
   71 |         return i;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
_4 = strerror (_3);
bb index := 4
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
_4 = strerror (_3);
In function â€˜xasprintfâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:69:17: warning: use location
   69 |                 fatalx("xasprintf: %s", strerror(errno));
      |                 ^
this stmt is child function---strerror-----

 ================== trace ================== 
trace fucntion name:strerror 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
printf ("xasprintf: %s", _4);
bb index := 4
# VUSE <.MEM_12>
return i_10;
In function â€˜xvasprintfâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
   71 |         return i;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
printf ("xasprintf: %s", _4);
bb index := 4
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
printf ("xasprintf: %s", _4);
In function â€˜xasprintfâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:69:17: warning: use location
   69 |                 fatalx("xasprintf: %s", strerror(errno));
      |                 ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = __errno_location ();
bb index := 4
# VUSE <.MEM_12>
return i_10;
In function â€˜xvasprintfâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
   71 |         return i;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = __errno_location ();
bb index := 4
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
_2 = __errno_location ();
In function â€˜xasprintfâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:69:17: warning: use location
   69 |                 fatalx("xasprintf: %s", strerror(errno));
      |                 ^
this stmt is child function---__errno_location-----

 ================== trace ================== 
trace fucntion name:__errno_location 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f4f513c02d0
    type <pointer_type 0x7f4f518959d8
        type <integer_type 0x7f4f5188e5e8 int public SI
            size <integer_cst 0x7f4f51879df8 constant 32>
            unit-size <integer_cst 0x7f4f51879e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4f5188e5e8 precision:32 min <integer_cst 0x7f4f51879db0 -2147483648> max <integer_cst 0x7f4f51879dc8 2147483647>
            pointer_to_this <pointer_type 0x7f4f518959d8>>
        public unsigned DI
        size <integer_cst 0x7f4f51879bb8 constant 64>
        unit-size <integer_cst 0x7f4f51879bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = __errno_location ();
    version:2
    ptr-info 0x7f4f513b4708>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f4f513c0318
    type <integer_type 0x7f4f5188e5e8 int public SI
        size <integer_cst 0x7f4f51879df8 constant 32>
        unit-size <integer_cst 0x7f4f51879e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4f5188e5e8 precision:32 min <integer_cst 0x7f4f51879db0 -2147483648> max <integer_cst 0x7f4f51879dc8 2147483647>
        pointer_to_this <pointer_type 0x7f4f518959d8>>
   
    def_stmt _3 = *_2;
    version:3>
# VUSE <.MEM_12>
_3 = *_2;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
_4 = strerror (_3);
bb index := 4
# VUSE <.MEM_12>
return i_10;
In function â€˜xvasprintfâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
   71 |         return i;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12>
_4 = strerror (_3);
bb index := 4
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
_4 = strerror (_3);
In function â€˜xasprintfâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:69:17: warning: use location
   69 |                 fatalx("xasprintf: %s", strerror(errno));
      |                 ^
this stmt is child function---strerror-----

 ================== trace ================== 
trace fucntion name:strerror 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
printf ("xasprintf: %s", _4);
bb index := 4
# VUSE <.MEM_12>
return i_10;
In function â€˜xvasprintfâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
   71 |         return i;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
printf ("xasprintf: %s", _4);
bb index := 4
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_12>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:16: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
printf ("xasprintf: %s", _4);
In function â€˜xasprintfâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:69:17: warning: use location
   69 |                 fatalx("xasprintf: %s", strerror(errno));
      |                 ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f4f513c0318
    type <integer_type 0x7f4f5188e5e8 int public SI
        size <integer_cst 0x7f4f51879df8 constant 32>
        unit-size <integer_cst 0x7f4f51879e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4f5188e5e8 precision:32 min <integer_cst 0x7f4f51879db0 -2147483648> max <integer_cst 0x7f4f51879dc8 2147483647>
        pointer_to_this <pointer_type 0x7f4f518959d8>>
   
    def_stmt _3 = *_2;
    version:3>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f4f51a75f60
    type <pointer_type 0x7f4f513aabd0
        type <array_type 0x7f4f513aab28 type <integer_type 0x7f4f513a2a80 char>
            BLK
            size <integer_cst 0x7f4f51399780 constant 112>
            unit-size <integer_cst 0x7f4f51399768 constant 14>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f4f513aaa80>
            pointer_to_this <pointer_type 0x7f4f513aabd0>>
        unsigned DI
        size <integer_cst 0x7f4f51879bb8 constant 64>
        unit-size <integer_cst 0x7f4f51879bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f4f513c1190 type <array_type 0x7f4f513aab28>
        readonly constant static "xasprintf: %s\000">
    ./benchmarks/tmux/leak_4/tmux_leak_4.c:69:3 start: ./benchmarks/tmux/leak_4/tmux_leak_4.c:69:3 finish: ./benchmarks/tmux/leak_4/tmux_leak_4.c:69:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:xvasprintf========= [0m
[40;42m =======pre_check_funciton:xasprintf========= [0m
[40;42m =======start_check_funciton:xasprintf========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f4f513c0630
    type <pointer_type 0x7f4f513a2dc8
        type <pointer_type 0x7f4f513a2c78 type <integer_type 0x7f4f513a2a80 char>
            public unsigned DI
            size <integer_cst 0x7f4f51879bb8 constant 64>
            unit-size <integer_cst 0x7f4f51879bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f4f51884168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f4f513a2dc8>>
        public unsigned DI size <integer_cst 0x7f4f51879bb8 64> unit-size <integer_cst 0x7f4f51879bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f4f513bb600 ret>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f4f513b4768>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
i_6 = xvasprintf (ret_2(D), fmt_3(D), ap_4(D));
./benchmarks/tmux/leak_4/tmux_leak_4.c:56:13: warning: use location
   56 |         i = xvasprintf(ret, fmt, ap);
      |             ^
this stmt is child function---xvasprintf-----

 ================== trace ================== 
trace fucntion name:xvasprintf 
[40;44m =======trace_function_path xvasprintf  function_call count: 5 level :0========  [0m
[40;36m ======= node_fun:xvasprintf========= [0m
[40;36m ======= find relate stmt with ret ========= [0m
[40;36m ======= relate stmt argument:ret ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:strerror========= [0m
[40;46m =======add node_fun stack:strerror========= [0m
[40;42m =======pre add _ fucntion:__errno_location========= [0m
[40;46m =======add node_fun stack:__errno_location========= [0m
[40;42m =======pre add _ fucntion:vasprintf========= [0m
[40;46m =======add node_fun stack:vasprintf========= [0m
[40;44m =======trace_function_path vasprintf  function_call count: 2 level :1========  [0m
[40;36m ======= node_fun:vasprintf========= [0m
[40;36m ======= find relate stmt with ret ========= [0m
[40;36m ======= relate stmt argument:ret ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
i_6 = xvasprintf (ret_2(D), fmt_3(D), ap_4(D));
./benchmarks/tmux/leak_4/tmux_leak_4.c:56:13: warning: use location
this stmt is child function---xvasprintf-----

 ================== trace ================== 
trace fucntion name:xvasprintf 
[40;44m =======trace_function_path xvasprintf  function_call count: 5 level :0========  [0m
[40;36m ======= node_fun:xvasprintf========= [0m
[40;36m ======= find relate stmt with ret ========= [0m
[40;36m ======= relate stmt argument:ret ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:strerror========= [0m
[40;46m =======add node_fun stack:strerror========= [0m
[40;42m =======pre add _ fucntion:__errno_location========= [0m
[40;46m =======add node_fun stack:__errno_location========= [0m
[40;42m =======pre add _ fucntion:vasprintf========= [0m
[40;46m =======add node_fun stack:vasprintf========= [0m
[40;44m =======trace_function_path vasprintf  function_call count: 2 level :1========  [0m
[40;36m ======= node_fun:vasprintf========= [0m
[40;36m ======= find relate stmt with ret ========= [0m
[40;36m ======= relate stmt argument:ret ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f4f513c0630
    type <pointer_type 0x7f4f513a2dc8
        type <pointer_type 0x7f4f513a2c78 type <integer_type 0x7f4f513a2a80 char>
            public unsigned DI
            size <integer_cst 0x7f4f51879bb8 constant 64>
            unit-size <integer_cst 0x7f4f51879bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f4f51884168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f4f513a2dc8>>
        public unsigned DI size <integer_cst 0x7f4f51879bb8 64> unit-size <integer_cst 0x7f4f51879bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f4f513bb600 ret>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f4f513b4768>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:xasprintf========= [0m
[40;44m =======node_fun:vasprintf========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path vasprintf  function_call count: 2 level :0========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre_check_funciton:vasprintf========= [0m
[40;42m =======start_check_funciton:vasprintf========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f4f513c08b8
    type <pointer_type 0x7f4f51895000
        type <void_type 0x7f4f5188ef18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f4f51895000>>
        public unsigned DI
        size <integer_cst 0x7f4f51879bb8 constant 64>
        unit-size <integer_cst 0x7f4f51879bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f4f5189a9d8>>
   
    def_stmt _4 = malloc (_3);
    version:4
    ptr-info 0x7f4f513b47b0>
# .MEM_13 = VDEF <.MEM_12(D)>
_4 = malloc (_3);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
*ret_11(D) = _4;
bb index := 2
# VUSE <.MEM_14>
return _6;
In function â€˜vasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
*ret_11(D) = _4;
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:14: warning: use location
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
*ret_11(D) = _4;
bb index := 2
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
*ret_11(D) = _4;
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:14: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12(D)>
_4 = malloc (_3);
bb index := 2
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_4 = malloc (_3);
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:16: warning: use location
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |                ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f4f513c08b8
    type <pointer_type 0x7f4f51895000
        type <void_type 0x7f4f5188ef18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f4f51895000>>
        public unsigned DI
        size <integer_cst 0x7f4f51879bb8 constant 64>
        unit-size <integer_cst 0x7f4f51879bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f4f5189a9d8>>
   
    def_stmt _4 = malloc (_3);
    version:4
    ptr-info 0x7f4f513b47b0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f4f513c0990
    type <pointer_type 0x7f4f513a2bd0
        type <integer_type 0x7f4f513a2b28 char readonly public QI
            size <integer_cst 0x7f4f51879ca8 constant 8>
            unit-size <integer_cst 0x7f4f51879cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4f5188e3f0 precision:8 min <integer_cst 0x7f4f51399720 -128> max <integer_cst 0x7f4f51399708 127> context <translation_unit_decl 0x7f4f51884168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f4f513a2bd0>>
        public unsigned DI
        size <integer_cst 0x7f4f51879bb8 constant 64>
        unit-size <integer_cst 0x7f4f51879bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f4f513bb800 fmt>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f4f513b47e0>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_12(D)>
_1 = strlen (fmt_8(D));
bb index := 2
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_1 = strlen (fmt_8(D));
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:23: warning: use location
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |                       ^
this stmt is child function---strlen-----

 ================== trace ================== 
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _1 + _2;
bb index := 2
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_3 = _1 + _2;
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:16: warning: use location
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12(D)>
_4 = malloc (_3);
bb index := 2
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_4 = malloc (_3);
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:16: warning: use location
this stmt is child function---malloc-----

 ================== trace ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
*ret_11(D) = _4;
bb index := 2
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
*ret_11(D) = _4;
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:14: warning: use location
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |              ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f4f513c0990
    type <pointer_type 0x7f4f513a2bd0
        type <integer_type 0x7f4f513a2b28 char readonly public QI
            size <integer_cst 0x7f4f51879ca8 constant 8>
            unit-size <integer_cst 0x7f4f51879cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4f5188e3f0 precision:8 min <integer_cst 0x7f4f51399720 -128> max <integer_cst 0x7f4f51399708 127> context <translation_unit_decl 0x7f4f51884168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f4f513a2bd0>>
        public unsigned DI
        size <integer_cst 0x7f4f51879bb8 constant 64>
        unit-size <integer_cst 0x7f4f51879bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f4f513bb800 fmt>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f4f513b47e0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f4f513c09d8
    type <pointer_type 0x7f4f513a2c78
        type <integer_type 0x7f4f513a2a80 char public QI
            size <integer_cst 0x7f4f51879ca8 constant 8>
            unit-size <integer_cst 0x7f4f51879cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4f5188e3f0 precision:8 min <integer_cst 0x7f4f51399720 -128> max <integer_cst 0x7f4f51399708 127> context <translation_unit_decl 0x7f4f51884168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f4f513a2c78>>
        public unsigned DI
        size <integer_cst 0x7f4f51879bb8 constant 64>
        unit-size <integer_cst 0x7f4f51879bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f4f51884168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
        pointer_to_this <pointer_type 0x7f4f513a2dc8>>
    var <parm_decl 0x7f4f513bb880 ap>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7f4f513b47f8>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_12(D)>
_2 = strlen (ap_9(D));
bb index := 2
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_2 = strlen (ap_9(D));
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:37: warning: use location
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |                                     ^
this stmt is child function---strlen-----

 ================== trace ================== 
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _1 + _2;
bb index := 2
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_3 = _1 + _2;
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:16: warning: use location
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12(D)>
_4 = malloc (_3);
bb index := 2
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_4 = malloc (_3);
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:16: warning: use location
this stmt is child function---malloc-----

 ================== trace ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
*ret_11(D) = _4;
bb index := 2
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
*ret_11(D) = _4;
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:14: warning: use location
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |              ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f4f513c09d8
    type <pointer_type 0x7f4f513a2c78
        type <integer_type 0x7f4f513a2a80 char public QI
            size <integer_cst 0x7f4f51879ca8 constant 8>
            unit-size <integer_cst 0x7f4f51879cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4f5188e3f0 precision:8 min <integer_cst 0x7f4f51399720 -128> max <integer_cst 0x7f4f51399708 127> context <translation_unit_decl 0x7f4f51884168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f4f513a2c78>>
        public unsigned DI
        size <integer_cst 0x7f4f51879bb8 constant 64>
        unit-size <integer_cst 0x7f4f51879bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f4f51884168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
        pointer_to_this <pointer_type 0x7f4f513a2dc8>>
    var <parm_decl 0x7f4f513bb880 ap>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7f4f513b47f8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f4f513c0870
    type <integer_type 0x7f4f5188e7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f4f51879bb8 constant 64>
        unit-size <integer_cst 0x7f4f51879bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f4f5188e738 precision:64 min <integer_cst 0x7f4f51879e88 0> max <integer_cst 0x7f4f5187a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f4f5189a7e0>>
   
    def_stmt _3 = _1 + _2;
    version:3>
_3 = _1 + _2;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:vasprintf========= [0m
[40;44m =======node_fun:strlcpy========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path strlcpy  function_call count: 0 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:strlcpy========= [0m
[40;42m =======start_check_funciton:strlcpy========= [0m
[40;33m =======POP node_fun stack:strlcpy========= [0m
fucntion collect path finsh

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
make_label ("label");
return 0;

=======Mapping node_fun:make_label=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741821]:
_1 = getuid ();
uid_26 = (uid_t) _1;
s_28 = getenv ("TMUX_TMPDIR");
if (s_28 != 0B)
  goto <bb 3>; [82.57%]
else
  goto <bb 5>; [17.43%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 886588622]:
_2 = *s_28;
if (_2 != 0)
  goto <bb 4>; [33.00%]
else
  goto <bb 5>; [67.00%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 292574244]:
xasprintf (&base, "%s/tmux-", s_28);
goto <bb 6>; [100.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 781167578]:
xasprintf (&base, "%s/tmux-", "/tmp");

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 1073741823]:
_3 = base;
_4 = mkdir (_3, 0);
if (_4 != 0)
  goto <bb 7>; [67.00%]
else
  goto <bb 9>; [33.00%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 719407023]:
_5 = __errno_location ();
_6 = *_5;
if (_6 != 17)
  goto <bb 8>; [50.00%]
else
  goto <bb 9>; [50.00%]

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 359703511]:
// predicted unlikely by goto predictor.
goto <bb 17>; [100.00%]

=======is loop:0=========

 bb index 9 
<bb 9> [local count: 714038311]:
_7 = base;
_8 = lstat (_7, &sb);
if (_8 != 0)
  goto <bb 10>; [34.00%]
else
  goto <bb 11>; [66.00%]

=======is loop:0=========

 bb index 10 
<bb 10> [local count: 242773028]:
// predicted unlikely by goto predictor.
goto <bb 17>; [100.00%]

=======is loop:0=========

 bb index 11 
<bb 11> [local count: 471265282]:
_9 = sb.st_mode;
_10 = _9 & 61440;
if (_10 != 16384)
  goto <bb 12>; [50.00%]
else
  goto <bb 13>; [50.00%]

=======is loop:0=========

 bb index 12 
<bb 12> [local count: 235632641]:
_11 = __errno_location ();
*_11 = 20;
// predicted unlikely by goto predictor.
goto <bb 17>; [100.00%]

=======is loop:0=========

 bb index 13 
<bb 13> [local count: 235632641]:
_12 = sb.st_uid;
if (_12 != uid_26)
  goto <bb 14>; [67.00%]
else
  goto <bb 15>; [33.00%]

=======is loop:0=========

 bb index 14 
<bb 14> [local count: 157873870]:
_13 = __errno_location ();
*_13 = 13;
// predicted unlikely by goto predictor.
goto <bb 17>; [100.00%]

=======is loop:0=========

 bb index 15 
<bb 15> [local count: 77758771]:
_14 = base;
_15 = realpath (_14, &resolved);
if (_15 == 0B)
  goto <bb 16>; [17.43%]
else
  goto <bb 18>; [82.57%]

=======is loop:0=========

 bb index 16 
<bb 16> [local count: 13553354]:
_16 = base;
strlcpy (&resolved, _16, 4096);
goto <bb 18>; [100.00%]

=======is loop:0=========

 bb index 17 
<bb 17> [local count: 995983052]:
fail:
_17 = __errno_location ();
saved_errno_37 = *_17;
_18 = base;
free (_18);
_19 = __errno_location ();
*_19 = saved_errno_37;

=======is loop:0=========

 bb index 18 
<bb 18> [local count: 1073741824]:
base ={v} {CLOBBER};
resolved ={v} {CLOBBER};
sb ={v} {CLOBBER};
return 0B;

=======Mapping node_fun:xvasprintf=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
i_10 = vasprintf (ret_6(D), fmt_7(D), ap_8(D));
if (i_10 < 0)
  goto <bb 4>; [0.04%]
else
  goto <bb 3>; [99.96%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 1073312329]:
_1 = *ret_6(D);
if (_1 == 0B)
  goto <bb 4>; [0.04%]
else
  goto <bb 5>; [99.96%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 858820]:
_2 = __errno_location ();
_3 = *_2;
_4 = strerror (_3);
printf ("xasprintf: %s", _4);
exit (1);

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 1072883005]:
return i_10;

=======Mapping node_fun:xasprintf=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
i_6 = xvasprintf (ret_2(D), fmt_3(D), ap_4(D));
return i_6;

=======Mapping node_fun:vasprintf=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = strlen (fmt_8(D));
_2 = strlen (ap_9(D));
_3 = _1 + _2;
_4 = malloc (_3);
*ret_11(D) = _4;
_5 = *ret_11(D);
if (_5 == 0B)
  goto <bb 3>; [0.45%]
else
  goto <bb 4>; [99.55%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 4831840]:

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073741824]:
# _6 = PHI <0(2), -1(3)>
return _6;

=======Mapping node_fun:strlcpy=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 236223200]:
if (siz_21(D) != 0)
  goto <bb 3>; [50.00%]
else
  goto <bb 6>; [50.00%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 118111600]:
n_23 = siz_21(D) + 18446744073709551615;
if (n_23 != 0)
  goto <bb 13>; [50.00%]
else
  goto <bb 6>; [50.00%]

=======is loop:0=========

 bb index 13 
<bb 13> [local count: 59055800]:

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 552052357]:
# d_7 = PHI <dst_19(D)(13), d_25(15)>
# s_9 = PHI <src_20(D)(13), s_24(15)>
# n_13 = PHI <n_23(13), n_27(15)>
s_24 = s_9 + 1;
d_25 = d_7 + 1;
_2 = *s_9;
*d_7 = _2;
_3 = *d_7;
if (_3 == 0)
  goto <bb 6>; [5.50%]
else
  goto <bb 5>; [94.50%]

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 521689477]:
n_27 = n_13 + 18446744073709551615;
if (n_27 != 0)
  goto <bb 15>; [94.50%]
else
  goto <bb 6>; [5.50%]

=======is loop:1=========

 bb index 15 
<bb 15> [local count: 492996556]:
goto <bb 4>; [100.00%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 236223200]:
# d_8 = PHI <dst_19(D)(2), dst_19(D)(3), d_25(4), d_25(5)>
# s_10 = PHI <src_20(D)(2), src_20(D)(3), s_24(4), s_24(5)>
# n_14 = PHI <siz_21(D)(2), n_23(3), n_13(4), n_27(5)>
if (n_14 == 0)
  goto <bb 7>; [50.00%]
else
  goto <bb 11>; [50.00%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 118111600]:
if (siz_21(D) != 0)
  goto <bb 8>; [50.00%]
else
  goto <bb 10>; [50.00%]

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 59055800]:
*d_8 = 0;

=======is loop:0=========

 bb index 10 
<bb 10> [local count: 118111600]:
# s_31 = PHI <s_10(7), s_10(8)>

=======is loop:1=========

 bb index 12 
<bb 12> [local count: 1073741824]:
# s_11 = PHI <s_31(10), s_29(14)>
s_29 = s_11 + 1;
_4 = *s_11;
if (_4 != 0)
  goto <bb 14>; [89.00%]
else
  goto <bb 11>; [11.00%]

=======is loop:1=========

 bb index 14 
<bb 14> [local count: 955630226]:
goto <bb 12>; [100.00%]

=======is loop:0=========

 bb index 11 
<bb 11> [local count: 236223200]:
# s_12 = PHI <s_10(6), s_29(12)>
_5 = s_12 - src_20(D);
_6 = _5 + -1;
_30 = (long unsigned int) _6;
return _30;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    gimple malloc count : 1 [0m
[40;34m    gimple free   count : 1 [0m
[40;34m    find Entry point : 16 [0m
[40;34m    used_stmt array stack totalsize of : 0.000960 mb[0m
[40;34m    collect time: : 0.000127 s [0m
[40;34m    algorithm time: 0.200158 s [0m
[40;34m    gimple stmt count : : 89 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
Profile consistency report:

                                 |mismatch     |mismatch     |                     |
Pass name                        |IN    |IN    |OUT   |OUT   |overall              |
                                 |freq  |count |freq  |count |size      |time      |
cp                   ------------|      |      |      |      |          |          |
inline               ------------|      |      |      |      |          |          |
fixup_cfg            ------------|      |      |      |      |          |          |
adjust_alignment     ------------|      |      |      |      |          |          |
ccp                  ------------|      |      |      |      |          |          |
backprop             ------------|      |      |      |      |          |          |
phiprop              ------------|      |      |      |      |          |          |
forwprop             ------------|      |      |      |      |          |          |
objsz                ------------|      |      |      |      |          |          |
alias                ------------|      |      |      |      |          |          |
retslot              ------------|      |      |      |      |          |          |
mergephi             ------------|      |      |      |      |          |          |
dce                  ------------|      |      |      |      |          |          |
stdarg               ------------|      |      |      |      |          |          |
cdce                 ------------|      |      |      |      |          |          |
cselim               ------------|      |      |      |      |          |          |
copyprop             ------------|      |      |      |      |          |          |
ifcombine            ------------|      |      |      |      |          |          |
mergephi             ------------|      |      |      |      |          |          |
phiopt               ------------|      |      |      |      |          |          |
ch                   ------------|      |      |      |      |          |          |
cplxlower            ------------|      |      |      |      |          |          |
sra                  ------------|      |      |      |      |          |          |
dom                              |      |      |      |      |     -3.4%|     -3.1%|
copyprop                         |      |    +3|      |      |     -3.6%|     -3.2%|
reassoc              ------------|      |      |      |      |          |          |
dce                  ------------|      |      |      |      |          |          |
forwprop             ------------|      |      |      |      |          |          |
phiopt               ------------|      |      |      |      |          |          |
ccp                  ------------|      |      |      |      |          |          |
sincos               ------------|      |      |      |      |          |          |
laddress             ------------|      |      |      |      |          |          |
lim                  ------------|      |      |      |      |          |          |
walloca              ------------|      |      |      |      |          |          |
sink                 ------------|      |      |      |      |          |          |
dce                  ------------|      |      |      |      |          |          |
fix_loops            ------------|      |      |      |      |          |          |
loop                 ------------|      |      |      |      |          |          |
loopinit                         |      |      |      |      |    -82.2%|    -95.1%|
sccp                 ------------|      |      |      |      |          |          |
cddce                ------------|      |      |      |      |          |          |
ivcanon              ------------|      |      |      |      |          |          |
copyprop             ------------|      |      |      |      |          |          |
cunroll              ------------|      |      |      |      |          |          |
ivopts               ------------|      |      |      |      |          |          |
lim                  ------------|      |      |      |      |          |          |
loopdone             ------------|      |      |      |      |          |          |
no_loop                          |      |      |      |      |   +462.5%|  +1942.9%|
veclower2            ------------|      |      |      |      |          |          |
switchlower          ------------|      |      |      |      |          |          |
reassoc              ------------|      |      |      |      |          |          |
slsr                 ------------|      |      |      |      |          |          |
dom                  ------------|      |      |      |      |          |          |
strlen               ------------|      |      |      |      |          |          |
copyprop             ------------|      |      |      |      |          |          |
wrestrict            ------------|      |      |      |      |          |          |
cddce                ------------|      |      |      |      |          |          |
forwprop             ------------|      |      |      |      |          |          |
phiopt               ------------|      |      |      |      |          |          |
fab                  ------------|      |      |      |      |          |          |
dce                  ------------|      |      |      |      |          |          |
crited               ------------|      |      |      |      |          |          |
uncprop              ------------|      |      |      |      |          |          |
local-pure-const     ------------|      |      |      |      |          |          |
modref               ------------|      |      |      |      |          |          |
nrv                  ------------|      |      |      |      |          |          |
isel                 ------------|      |      |      |      |          |          |
optimized            ------------|      |      |      |      |          |          |
expand                           |      |      |      |      |----------|----------|
vregs                            |      |      |      |      |    +74.7%|    +45.6%|
into_cfglayout                   |      |      |      |      |     -1.7%|     -0.4%|
jump                             |      |      |      |      |     -2.0%|     -0.7%|
subreg1                          |      |      |      |      |     -0.2%|     -0.4%|
dfinit               ------------|      |      |      |      |          |          |
cse1                 ------------|      |      |      |      |          |          |
fwprop1                          |      |      |      |      |     -2.0%|     -3.0%|
ce1                              |      |      |      |      |     -2.0%|     -3.1%|
reginfo              ------------|      |      |      |      |          |          |
loop2                ------------|      |      |      |      |          |          |
loop2_init           ------------|      |      |      |      |          |          |
loop2_invariant      ------------|      |      |      |      |          |          |
loop2_done           ------------|      |      |      |      |          |          |
dse1                 ------------|      |      |      |      |          |          |
fwprop2              ------------|      |      |      |      |          |          |
init-regs            ------------|      |      |      |      |          |          |
combine                          |      |      |      |      |     +3.8%|     +5.7%|
ce2                              |      |      |      |      |     +3.7%|     +5.4%|
outof_cfglayout                  |      |      |      |      |     +1.7%|     +0.3%|
split1                           |      |      |      |      |     +1.7%|     +0.3%|
subreg3              ------------|      |      |      |      |          |          |
mode_sw              ------------|      |      |      |      |          |          |
asmcons              ------------|      |      |      |      |          |          |
ira                  ------------|      |      |      |      |          |          |
reload                           |      |      |      |      |    -12.1%|    -14.4%|
postreload                       |      |      |      |      |    -13.7%|    -16.8%|
split2               ------------|      |      |      |      |          |          |
cmpelim              ------------|      |      |      |      |          |          |
pro_and_epilogue                 |      |      |      |      |     +7.4%|    +12.9%|
dse2                             |      |      |      |      |     +6.9%|    +11.4%|
csa                  ------------|      |      |      |      |          |          |
jump2                ------------|      |      |      |      |          |          |
ce3                  ------------|      |      |      |      |          |          |
cprop_hardreg                    |      |      |      |      |     -0.2%|     -0.4%|
rtl_dce                          |      |      |      |      |     -0.2%|     -0.4%|
bbro                             |      |      |      |      |     -0.2%|     -0.1%|
split4                           |      |      |      |      |     -0.2%|     -0.1%|
stack                ------------|      |      |      |      |          |          |
zero_call_used_regs  ------------|      |      |      |      |          |          |
alignments           ------------|      |      |      |      |          |          |
