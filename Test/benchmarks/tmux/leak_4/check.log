../Compiler/newplugin.so 11.2.0 
./benchmarks/tmux/leak_4/tmux_leak_4.c:15: warning: "S_IRWXU" redefined
   15 | #define S_IRWXU 0
      | 
In file included from ./benchmarks/tmux/leak_4/tmux_leak_4.c:9:
/usr/include/x86_64-linux-gnu/sys/stat.h:172: note: this is the location of the previous definition
  172 | #define S_IRWXU (__S_IREAD|__S_IWRITE|__S_IEXEC)
      | 
./benchmarks/tmux/leak_4/tmux_leak_4.c:16: warning: "S_IRWXO" redefined
   16 | #define S_IRWXO 0
      | 
In file included from ./benchmarks/tmux/leak_4/tmux_leak_4.c:9:
/usr/include/x86_64-linux-gnu/sys/stat.h:190: note: this is the location of the previous definition
  190 | #define S_IRWXO (S_IRWXG >> 3)
      | 
./benchmarks/tmux/leak_4/tmux_leak_4.c: In function ‘vasprintf’:
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:23: warning: implicit declaration of function ‘strlen’ [-Wimplicit-function-declaration]
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |                       ^~~~~~
./benchmarks/tmux/leak_4/tmux_leak_4.c:13:1: note: include ‘<string.h>’ or provide a declaration of ‘strlen’
   12 | #include "../tmux.h"
  +++ |+#include <string.h>
   13 | 
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:23: warning: incompatible implicit declaration of built-in function ‘strlen’ [-Wbuiltin-declaration-mismatch]
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |                       ^~~~~~
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:23: note: include ‘<string.h>’ or provide a declaration of ‘strlen’
./benchmarks/tmux/leak_4/tmux_leak_4.c: In function ‘xasprintf’:
./benchmarks/tmux/leak_4/tmux_leak_4.c:56:13: warning: implicit declaration of function ‘xvasprintf’; did you mean ‘xasprintf’? [-Wimplicit-function-declaration]
   56 |         i = xvasprintf(ret, fmt, ap);
      |             ^~~~~~~~~~
      |             xasprintf
In file included from ./benchmarks/tmux/leak_4/tmux_leak_4.c:11:
./benchmarks/tmux/leak_4/tmux_leak_4.c: In function ‘xvasprintf’:
./benchmarks/tmux/leak_4/tmux_leak_4.c:69:41: warning: implicit declaration of function ‘strerror’; did you mean ‘perror’? [-Wimplicit-function-declaration]
   69 |                 fatalx("xasprintf: %s", strerror(errno));
      |                                         ^~~~~~~~
./benchmarks/tmux/leak_4/../stdio.h:135:33: note: in definition of macro ‘fatal’
  135 | #define fatal(a, b) { printf(a, b); exit(1); }
      |                                 ^
./benchmarks/tmux/leak_4/tmux_leak_4.c:69:17: note: in expansion of macro ‘fatalx’
   69 |                 fatalx("xasprintf: %s", strerror(errno));
      |                 ^~~~~~
./benchmarks/tmux/leak_4/tmux_leak_4.c: In function ‘make_label’:
./benchmarks/tmux/leak_4/tmux_leak_4.c:84:15: warning: implicit declaration of function ‘getuid’ [-Wimplicit-function-declaration]
   84 |         uid = getuid();
      |               ^~~~~~

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.00 (  0%)  1298k ( 40%)
 phase parsing                      :   0.03 ( 75%)   0.03 (100%)   0.06 ( 86%)  1801k ( 55%)
 phase opt and generate             :   0.01 ( 25%)   0.00 (  0%)   0.01 ( 14%)   142k (  4%)
 callgraph ipa passes               :   0.01 ( 25%)   0.00 (  0%)   0.01 ( 14%)    73k (  2%)
 preprocessing                      :   0.00 (  0%)   0.01 ( 33%)   0.03 ( 43%)   810k ( 25%)
 lexical analysis                   :   0.01 ( 25%)   0.02 ( 67%)   0.01 ( 14%)     0  (  0%)
 parser struct body                 :   0.02 ( 50%)   0.00 (  0%)   0.01 ( 14%)   154k (  5%)
 parser function body               :   0.00 (  0%)   0.00 (  0%)   0.01 ( 14%)    36k (  1%)
 dominance computation              :   0.01 ( 25%)   0.00 (  0%)   0.00 (  0%)     0  (  0%)
 branch prediction                  :   0.00 (  0%)   0.00 (  0%)   0.01 ( 14%)  2608  (  0%)
 TOTAL                              :   0.04          0.03          0.07         3252k
../Compiler/newplugin.so 11.2.0 

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.00 (  0%)  2157k ( 98%)
 phase stream out                   :   0.00 (  0%)   0.00 (  0%)   0.01 (100%)     0  (  0%)
 whopr wpa I/O                      :   0.00 (  0%)   0.00 (  0%)   0.01 (100%)     0  (  0%)
 TOTAL                              :   0.00          0.00          0.01         2212k
../Compiler/newplugin.so 11.2.0 
=======ipa_pta=========
=============== The first stage : Point of interest stmt collect =================
=======node_fun:main=========
=======node_fun:make_label=========
node:= 2 
 	next_branch :=3
	next_branch :=5
node:= 3 
 	next_branch :=4
	next_branch :=5
node:= 4 
 	next_branch :=6
node:= 5 
 	next_branch :=6
node:= 6 
 	next_branch :=7
	next_branch :=9
node:= 7 
 	next_branch :=8
	next_branch :=9
node:= 8 
 	next_branch :=23
node:= 9 
 	next_branch :=10
	next_branch :=11
node:= 10 
 	next_branch :=23
node:= 11 
 	next_branch :=12
	next_branch :=13
node:= 12 
 	next_branch :=23
node:= 13 
 	next_branch :=14
	next_branch :=15
node:= 14 
 	next_branch :=23
node:= 15 
 	next_branch :=16
	next_branch :=24
node:= 16 
 	next_branch :=17
	next_branch :=19
node:= 17 
 	next_branch :=19
	next_branch :=18
node:= 18 
 	next_branch :=17
	next_branch :=19
node:= 19 
 	next_branch :=20
	next_branch :=22
node:= 20 
 	next_branch :=21
node:= 21 
 	next_branch :=21
	next_branch :=22
node:= 22 
 	next_branch :=24
node:= 23 
 	next_branch :=24
=======node_fun:xvasprintf=========
node:= 2 
 	next_branch :=4
	next_branch :=3
node:= 3 
 	next_branch :=4
	next_branch :=5
node:= 4 
 =======node_fun:vasprintf=========
node:= 2 
 	next_branch :=3
	next_branch :=4
node:= 3 
 	next_branch :=4
=============== The first stage :  record fucntion =================
start PointerConstraint
ptable point 19 
===============The second stage : Mapping stmt=================
# .MEM_2 = VDEF <.MEM_1(D)>
make_label ("label");
# .MEM_42 = VDEF <.MEM_41(D)>
_1 = getuid ();
# .MEM_43 = VDEF <.MEM_42>
s_28 = getenv ("TMUX_TMPDIR");
# .MEM_82 = VDEF <.MEM_43>
i_57 = xvasprintf (&base, "%s/tmux-", s_28);
# .MEM_83 = VDEF <.MEM_43>
i_58 = xvasprintf (&base, "%s/tmux-", "/tmp");
# .MEM_46 = VDEF <.MEM_38>
_4 = mkdir (_3, 0);
_5 = __errno_location ();
# .MEM_47 = VDEF <.MEM_46>
_8 = lstat (_7, &sb);
_11 = __errno_location ();
_13 = __errno_location ();
# .MEM_48 = VDEF <.MEM_47>
_15 = realpath (_14, &resolved);
_17 = __errno_location ();
 <var_decl 0x7f2833e77000 base
    type <pointer_type 0x7f2833e5da80
        type <integer_type 0x7f2833e5d9d8 char public QI
            size <integer_cst 0x7f2834345ca8 constant 8>
            unit-size <integer_cst 0x7f2834345cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a3f0 precision:8 min <integer_cst 0x7f2833e54720 -128> max <integer_cst 0x7f2833e54708 127> context <translation_unit_decl 0x7f2834350168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f2833e5da80>>
        public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2834350168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
        pointer_to_this <pointer_type 0x7f2833e5dc78>>
    addressable unsigned DI ./benchmarks/tmux/leak_4/tmux_leak_4.c:77:9 size <integer_cst 0x7f2834345bb8 64> unit-size <integer_cst 0x7f2834345bd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2833e5ec00 make_label> chain <var_decl 0x7f2834bedf30 resolved>>
_19 = __errno_location ();
# .MEM_12 = VDEF <.MEM_11(D)>
i_10 = vasprintf (ret_6(D), fmt_7(D), ap_8(D));
_2 = __errno_location ();
# .MEM_13 = VDEF <.MEM_12>
_4 = strerror (_3);
# VUSE <.MEM_12(D)>
_1 = strlen (fmt_8(D));
# VUSE <.MEM_12(D)>
_2 = strlen (ap_9(D));
# .MEM_13 = VDEF <.MEM_12(D)>
_4 = malloc (_3);
===============The second stage : Program slicing=================
=============== *this point analyzable =================
_1 = getuid ();
=============== *this point analyzable =================
s_28 = getenv ("TMUX_TMPDIR");
=============== *this point analyzable =================
i_57 = xvasprintf (&base, "%s/tmux-", s_28);
=============== *this point analyzable =================
i_58 = xvasprintf (&base, "%s/tmux-", "/tmp");
=============== *this point analyzable =================
_4 = mkdir (_3, 0);
=============== *this point analyzable =================
_5 = __errno_location ();
=============== *this point analyzable =================
_8 = lstat (_7, &sb);
=============== *this point analyzable =================
_11 = __errno_location ();
=============== *this point analyzable =================
_13 = __errno_location ();
=============== *this point analyzable =================
_15 = realpath (_14, &resolved);
=============== *this point analyzable =================
_17 = __errno_location ();
=============== *this point analyzable =================
_19 = __errno_location ();
=============== *this point analyzable =================
i_10 = vasprintf (ret_6(D), fmt_7(D), ap_8(D));
=============== *this point analyzable =================
_2 = __errno_location ();
=============== *this point analyzable =================
_4 = strerror (_3);
=============== *this point analyzable =================
_1 = strlen (fmt_8(D));
=============== *this point analyzable =================
_2 = strlen (ap_9(D));
=============== *this point analyzable =================
_4 = malloc (_3);
=============== *this point analyzable =================
_4 = mkdir (_3, 0);
=============== *this point analyzable =================
_8 = lstat (_7, &sb);
=============== *this point analyzable =================
_15 = realpath (_14, &resolved);
=============== *this point analyzable =================
i_10 = vasprintf (ret_6(D), fmt_7(D), ap_8(D));
=============== *this point analyzable =================
i_10 = vasprintf (ret_6(D), fmt_7(D), ap_8(D));
=============== *this point analyzable =================
i_10 = vasprintf (ret_6(D), fmt_7(D), ap_8(D));
=============== *this point analyzable =================
_4 = strerror (_3);
=============== *this point analyzable =================
_1 = strlen (fmt_8(D));
=============== *this point analyzable =================
_2 = strlen (ap_9(D));
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m

=============== The third stage : Start detection  =================
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:make_label========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path make_label  function_call count: 8 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:__errno_location========= [0m
[40;33m =======POP node_fun stack:__errno_location========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:realpath========= [0m
[40;33m =======POP node_fun stack:realpath========= [0m
[40;42m =======pre add _ fucntion:lstat========= [0m
[40;33m =======POP node_fun stack:lstat========= [0m
[40;42m =======pre add _ fucntion:mkdir========= [0m
[40;33m =======POP node_fun stack:mkdir========= [0m
[40;42m =======pre add _ fucntion:xvasprintf========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path xvasprintf  function_call count: 5 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:strerror========= [0m
[40;33m =======POP node_fun stack:strerror========= [0m
[40;42m =======pre add _ fucntion:__errno_location========= [0m
[40;33m =======POP node_fun stack:__errno_location========= [0m
[40;42m =======pre add _ fucntion:vasprintf========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path vasprintf  function_call count: 2 level :3========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre_check_funciton:vasprintf========= [0m
[40;42m =======start_check_funciton:vasprintf========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f2833e85630
    type <integer_type 0x7f283435a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a738 precision:64 min <integer_cst 0x7f2834345e88 0> max <integer_cst 0x7f2834346500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f28343667e0>>
   
    def_stmt _1 = strlen (fmt_8(D));
    version:1>
# VUSE <.MEM_12(D)>
_1 = strlen (fmt_8(D));

 ================== pre trace ptable ================== 
trace fucntion name:strlen 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function strlen
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_12(D)>
_1 = strlen (fmt_8(D));
_1 = strlen (fmt_8(D));
In function ‘main’:
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:23: warning: use location
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |                       ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
_4 = malloc (_3);
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:16: warning: use location
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |                ^
this stmt call this function :malloc
*ret_11(D) = _4;
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:14: warning: use location
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |              ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2833e85630
    type <integer_type 0x7f283435a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a738 precision:64 min <integer_cst 0x7f2834345e88 0> max <integer_cst 0x7f2834346500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f28343667e0>>
   
    def_stmt _1 = strlen (fmt_8(D));
    version:1>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2833e85678
    type <integer_type 0x7f283435a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a738 precision:64 min <integer_cst 0x7f2834345e88 0> max <integer_cst 0x7f2834346500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f28343667e0>>
   
    def_stmt _2 = strlen (ap_9(D));
    version:2>
# VUSE <.MEM_12(D)>
_2 = strlen (ap_9(D));

 ================== pre trace ptable ================== 
trace fucntion name:strlen 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function strlen
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_12(D)>
_2 = strlen (ap_9(D));
_2 = strlen (ap_9(D));
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:37: warning: use location
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |                                     ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
_4 = malloc (_3);
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:16: warning: use location
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |                ^
this stmt call this function :malloc
*ret_11(D) = _4;
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:14: warning: use location
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |              ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2833e85678
    type <integer_type 0x7f283435a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a738 precision:64 min <integer_cst 0x7f2834345e88 0> max <integer_cst 0x7f2834346500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f28343667e0>>
   
    def_stmt _2 = strlen (ap_9(D));
    version:2>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2833e85708
    type <pointer_type 0x7f2834361000
        type <void_type 0x7f283435af18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2834361000>>
        public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f28343669d8>>
   
    def_stmt _4 = malloc (_3);
    version:4
    ptr-info 0x7f2833e6f8e8>
# .MEM_13 = VDEF <.MEM_12(D)>
_4 = malloc (_3);

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
*ret_11(D) = _4;
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:14: warning: use location
*ret_11(D) = _4;
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:14: warning: use location
# .MEM_13 = VDEF <.MEM_12(D)>
_4 = malloc (_3);
_4 = malloc (_3);
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:16: warning: use location
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |                ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2833e85708
    type <pointer_type 0x7f2834361000
        type <void_type 0x7f283435af18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2834361000>>
        public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f28343669d8>>
   
    def_stmt _4 = malloc (_3);
    version:4
    ptr-info 0x7f2833e6f8e8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2833e857e0
    type <pointer_type 0x7f2833e5dbd0
        type <integer_type 0x7f2833e5db28 char readonly public QI
            size <integer_cst 0x7f2834345ca8 constant 8>
            unit-size <integer_cst 0x7f2834345cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a3f0 precision:8 min <integer_cst 0x7f2833e54720 -128> max <integer_cst 0x7f2833e54708 127> context <translation_unit_decl 0x7f2834350168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f2833e5dbd0>>
        public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2833e76980 fmt>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f2833e6f918>
GIMPLE_NOP

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_12(D)>
_1 = strlen (fmt_8(D));
_1 = strlen (fmt_8(D));
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:23: warning: use location
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |                       ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
_4 = malloc (_3);
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:16: warning: use location
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |                ^
this stmt call this function :malloc
*ret_11(D) = _4;
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:14: warning: use location
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |              ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2833e857e0
    type <pointer_type 0x7f2833e5dbd0
        type <integer_type 0x7f2833e5db28 char readonly public QI
            size <integer_cst 0x7f2834345ca8 constant 8>
            unit-size <integer_cst 0x7f2834345cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a3f0 precision:8 min <integer_cst 0x7f2833e54720 -128> max <integer_cst 0x7f2833e54708 127> context <translation_unit_decl 0x7f2834350168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f2833e5dbd0>>
        public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2833e76980 fmt>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f2833e6f918>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2833e85828
    type <pointer_type 0x7f2833e5da80
        type <integer_type 0x7f2833e5d9d8 char public QI
            size <integer_cst 0x7f2834345ca8 constant 8>
            unit-size <integer_cst 0x7f2834345cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a3f0 precision:8 min <integer_cst 0x7f2833e54720 -128> max <integer_cst 0x7f2833e54708 127> context <translation_unit_decl 0x7f2834350168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f2833e5da80>>
        public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2834350168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
        pointer_to_this <pointer_type 0x7f2833e5dc78>>
    var <parm_decl 0x7f2833e76a00 ap>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7f2833e6f930>
GIMPLE_NOP

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_12(D)>
_2 = strlen (ap_9(D));
_2 = strlen (ap_9(D));
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:37: warning: use location
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |                                     ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
_4 = malloc (_3);
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:16: warning: use location
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |                ^
this stmt call this function :malloc
*ret_11(D) = _4;
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:14: warning: use location
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |              ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2833e85828
    type <pointer_type 0x7f2833e5da80
        type <integer_type 0x7f2833e5d9d8 char public QI
            size <integer_cst 0x7f2834345ca8 constant 8>
            unit-size <integer_cst 0x7f2834345cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a3f0 precision:8 min <integer_cst 0x7f2833e54720 -128> max <integer_cst 0x7f2833e54708 127> context <translation_unit_decl 0x7f2834350168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f2833e5da80>>
        public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2834350168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
        pointer_to_this <pointer_type 0x7f2833e5dc78>>
    var <parm_decl 0x7f2833e76a00 ap>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7f2833e6f930>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2833e856c0
    type <integer_type 0x7f283435a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a738 precision:64 min <integer_cst 0x7f2834345e88 0> max <integer_cst 0x7f2834346500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f28343667e0>>
   
    def_stmt _3 = _1 + _2;
    version:3>
_3 = _1 + _2;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:vasprintf========= [0m
[40;42m =======pre_check_funciton:xvasprintf========= [0m
[40;42m =======start_check_funciton:xvasprintf========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f2833e85480
    type <integer_type 0x7f283435a5e8 int public SI
        size <integer_cst 0x7f2834345df8 constant 32>
        unit-size <integer_cst 0x7f2834345e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a5e8 precision:32 min <integer_cst 0x7f2834345db0 -2147483648> max <integer_cst 0x7f2834345dc8 2147483647>
        pointer_to_this <pointer_type 0x7f28343619d8>>
    var <var_decl 0x7f2833e82120 i>
    def_stmt i_10 = vasprintf (ret_6(D), fmt_7(D), ap_8(D));
    version:10>
# .MEM_12 = VDEF <.MEM_11(D)>
i_10 = vasprintf (ret_6(D), fmt_7(D), ap_8(D));

 ================== pre trace ptable ================== 
trace fucntion name:vasprintf 
[40;44m =======trace_function_path vasprintf  function_call count: 2 level :888========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function vasprintf
 
 Start check Pointer Collect  

======================================================================
_1 = *ret_6(D);
./benchmarks/tmux/leak_4/tmux_leak_4.c:68:22: warning: use location
   68 |         if (i < 0 || *ret == NULL)
      |                      ^
if (_1 == 0B)
./benchmarks/tmux/leak_4/tmux_leak_4.c:68:19: warning: use location
   68 |         if (i < 0 || *ret == NULL)
      |                   ^
# .MEM_12 = VDEF <.MEM_11(D)>
i_10 = vasprintf (ret_6(D), fmt_7(D), ap_8(D));
i_10 = vasprintf (ret_6(D), fmt_7(D), ap_8(D));
./benchmarks/tmux/leak_4/tmux_leak_4.c:66:13: warning: use location
   66 |         i = vasprintf(ret, fmt, ap);
      |             ^
this stmt call this function :vasprintf
trace fucntion name:vasprintf 
[40;44m =======trace_function_path vasprintf  function_call count: 2 level :0========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (i_10 < 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:68:12: warning: use location
   68 |         if (i < 0 || *ret == NULL)
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2833e85480
    type <integer_type 0x7f283435a5e8 int public SI
        size <integer_cst 0x7f2834345df8 constant 32>
        unit-size <integer_cst 0x7f2834345e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a5e8 precision:32 min <integer_cst 0x7f2834345db0 -2147483648> max <integer_cst 0x7f2834345dc8 2147483647>
        pointer_to_this <pointer_type 0x7f28343619d8>>
    var <var_decl 0x7f2833e82120 i>
    def_stmt i_10 = vasprintf (ret_6(D), fmt_7(D), ap_8(D));
    version:10>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2833e852d0
    type <pointer_type 0x7f28343619d8
        type <integer_type 0x7f283435a5e8 int public SI
            size <integer_cst 0x7f2834345df8 constant 32>
            unit-size <integer_cst 0x7f2834345e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a5e8 precision:32 min <integer_cst 0x7f2834345db0 -2147483648> max <integer_cst 0x7f2834345dc8 2147483647>
            pointer_to_this <pointer_type 0x7f28343619d8>>
        public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = __errno_location ();
    version:2
    ptr-info 0x7f2833e6f888>
_2 = __errno_location ();

 ================== pre trace ptable ================== 
trace fucntion name:__errno_location 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function __errno_location
 
 Start check Pointer Collect  

======================================================================
_3 = *_2;
./benchmarks/tmux/leak_4/tmux_leak_4.c:69:17: warning: use location
   69 |                 fatalx("xasprintf: %s", strerror(errno));
      |                 ^
_4 = strerror (_3);
./benchmarks/tmux/leak_4/tmux_leak_4.c:69:17: warning: use location
this stmt call this function :strerror
trace fucntion name:strerror 

 ================== trace ================== 
trace fucntion free:0 
printf ("xasprintf: %s", _4);
./benchmarks/tmux/leak_4/tmux_leak_4.c:69:17: warning: use location
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
_2 = __errno_location ();
_2 = __errno_location ();
./benchmarks/tmux/leak_4/tmux_leak_4.c:69:17: warning: use location
this stmt call this function :__errno_location
trace fucntion name:__errno_location 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2833e852d0
    type <pointer_type 0x7f28343619d8
        type <integer_type 0x7f283435a5e8 int public SI
            size <integer_cst 0x7f2834345df8 constant 32>
            unit-size <integer_cst 0x7f2834345e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a5e8 precision:32 min <integer_cst 0x7f2834345db0 -2147483648> max <integer_cst 0x7f2834345dc8 2147483647>
            pointer_to_this <pointer_type 0x7f28343619d8>>
        public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = __errno_location ();
    version:2
    ptr-info 0x7f2833e6f888>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2833e85360
    type <integer_type 0x7f283435a5e8 int public SI
        size <integer_cst 0x7f2834345df8 constant 32>
        unit-size <integer_cst 0x7f2834345e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a5e8 precision:32 min <integer_cst 0x7f2834345db0 -2147483648> max <integer_cst 0x7f2834345dc8 2147483647>
        pointer_to_this <pointer_type 0x7f28343619d8>>
   
    def_stmt _4 = strerror (_3);
    version:4>
# .MEM_13 = VDEF <.MEM_12>
_4 = strerror (_3);

 ================== pre trace ptable ================== 
trace fucntion name:strerror 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function strerror
 
 Start check Pointer Collect  

======================================================================
# .MEM_13 = VDEF <.MEM_12>
_4 = strerror (_3);
_4 = strerror (_3);
./benchmarks/tmux/leak_4/tmux_leak_4.c:69:17: warning: use location
this stmt call this function :strerror
trace fucntion name:strerror 

 ================== trace ================== 
trace fucntion free:0 
printf ("xasprintf: %s", _4);
./benchmarks/tmux/leak_4/tmux_leak_4.c:69:17: warning: use location
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2833e85360
    type <integer_type 0x7f283435a5e8 int public SI
        size <integer_cst 0x7f2834345df8 constant 32>
        unit-size <integer_cst 0x7f2834345e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a5e8 precision:32 min <integer_cst 0x7f2834345db0 -2147483648> max <integer_cst 0x7f2834345dc8 2147483647>
        pointer_to_this <pointer_type 0x7f28343619d8>>
   
    def_stmt _4 = strerror (_3);
    version:4>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2833e853a8
    type <pointer_type 0x7f2833e5dc78
        type <pointer_type 0x7f2833e5da80 type <integer_type 0x7f2833e5d9d8 char>
            public unsigned DI
            size <integer_cst 0x7f2834345bb8 constant 64>
            unit-size <integer_cst 0x7f2834345bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2834350168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f2833e5dc78>>
        public unsigned DI size <integer_cst 0x7f2834345bb8 64> unit-size <integer_cst 0x7f2834345bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2833e76700 ret>
    def_stmt GIMPLE_NOP
    version:6
    ptr-info 0x7f2833e6f8a0>
GIMPLE_NOP

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
_1 = *ret_6(D);
./benchmarks/tmux/leak_4/tmux_leak_4.c:68:22: warning: use location
   68 |         if (i < 0 || *ret == NULL)
      |                      ^
if (_1 == 0B)
./benchmarks/tmux/leak_4/tmux_leak_4.c:68:19: warning: use location
   68 |         if (i < 0 || *ret == NULL)
      |                   ^
# .MEM_12 = VDEF <.MEM_11(D)>
i_10 = vasprintf (ret_6(D), fmt_7(D), ap_8(D));
i_10 = vasprintf (ret_6(D), fmt_7(D), ap_8(D));
./benchmarks/tmux/leak_4/tmux_leak_4.c:66:13: warning: use location
   66 |         i = vasprintf(ret, fmt, ap);
      |             ^
this stmt call this function :vasprintf
trace fucntion name:vasprintf 
[40;44m =======trace_function_path vasprintf  function_call count: 2 level :0========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (i_10 < 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:68:12: warning: use location
   68 |         if (i < 0 || *ret == NULL)
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2833e853a8
    type <pointer_type 0x7f2833e5dc78
        type <pointer_type 0x7f2833e5da80 type <integer_type 0x7f2833e5d9d8 char>
            public unsigned DI
            size <integer_cst 0x7f2834345bb8 constant 64>
            unit-size <integer_cst 0x7f2834345bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2834350168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f2833e5dc78>>
        public unsigned DI size <integer_cst 0x7f2834345bb8 64> unit-size <integer_cst 0x7f2834345bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2833e76700 ret>
    def_stmt GIMPLE_NOP
    version:6
    ptr-info 0x7f2833e6f8a0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2833e853f0
    type <pointer_type 0x7f2833e5dbd0
        type <integer_type 0x7f2833e5db28 char readonly public QI
            size <integer_cst 0x7f2834345ca8 constant 8>
            unit-size <integer_cst 0x7f2834345cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a3f0 precision:8 min <integer_cst 0x7f2833e54720 -128> max <integer_cst 0x7f2833e54708 127> context <translation_unit_decl 0x7f2834350168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f2833e5dbd0>>
        public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2833e76780 fmt>
    def_stmt GIMPLE_NOP
    version:7
    ptr-info 0x7f2833e6f8b8>
GIMPLE_NOP

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_12 = VDEF <.MEM_11(D)>
i_10 = vasprintf (ret_6(D), fmt_7(D), ap_8(D));
i_10 = vasprintf (ret_6(D), fmt_7(D), ap_8(D));
./benchmarks/tmux/leak_4/tmux_leak_4.c:66:13: warning: use location
   66 |         i = vasprintf(ret, fmt, ap);
      |             ^
this stmt call this function :vasprintf
trace fucntion name:vasprintf 
[40;44m =======trace_function_path vasprintf  function_call count: 2 level :0========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (i_10 < 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:68:12: warning: use location
   68 |         if (i < 0 || *ret == NULL)
      |            ^
_1 = *ret_6(D);
./benchmarks/tmux/leak_4/tmux_leak_4.c:68:22: warning: use location
   68 |         if (i < 0 || *ret == NULL)
      |                      ^
if (_1 == 0B)
./benchmarks/tmux/leak_4/tmux_leak_4.c:68:19: warning: use location
   68 |         if (i < 0 || *ret == NULL)
      |                   ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2833e853f0
    type <pointer_type 0x7f2833e5dbd0
        type <integer_type 0x7f2833e5db28 char readonly public QI
            size <integer_cst 0x7f2834345ca8 constant 8>
            unit-size <integer_cst 0x7f2834345cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a3f0 precision:8 min <integer_cst 0x7f2833e54720 -128> max <integer_cst 0x7f2833e54708 127> context <translation_unit_decl 0x7f2834350168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f2833e5dbd0>>
        public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2833e76780 fmt>
    def_stmt GIMPLE_NOP
    version:7
    ptr-info 0x7f2833e6f8b8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2833e85438
    type <pointer_type 0x7f2833e5da80
        type <integer_type 0x7f2833e5d9d8 char public QI
            size <integer_cst 0x7f2834345ca8 constant 8>
            unit-size <integer_cst 0x7f2834345cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a3f0 precision:8 min <integer_cst 0x7f2833e54720 -128> max <integer_cst 0x7f2833e54708 127> context <translation_unit_decl 0x7f2834350168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f2833e5da80>>
        public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2834350168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
        pointer_to_this <pointer_type 0x7f2833e5dc78>>
    var <parm_decl 0x7f2833e76800 ap>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f2833e6f8d0>
GIMPLE_NOP

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_12 = VDEF <.MEM_11(D)>
i_10 = vasprintf (ret_6(D), fmt_7(D), ap_8(D));
i_10 = vasprintf (ret_6(D), fmt_7(D), ap_8(D));
./benchmarks/tmux/leak_4/tmux_leak_4.c:66:13: warning: use location
   66 |         i = vasprintf(ret, fmt, ap);
      |             ^
this stmt call this function :vasprintf
trace fucntion name:vasprintf 
[40;44m =======trace_function_path vasprintf  function_call count: 2 level :0========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (i_10 < 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:68:12: warning: use location
   68 |         if (i < 0 || *ret == NULL)
      |            ^
_1 = *ret_6(D);
./benchmarks/tmux/leak_4/tmux_leak_4.c:68:22: warning: use location
   68 |         if (i < 0 || *ret == NULL)
      |                      ^
if (_1 == 0B)
./benchmarks/tmux/leak_4/tmux_leak_4.c:68:19: warning: use location
   68 |         if (i < 0 || *ret == NULL)
      |                   ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2833e85438
    type <pointer_type 0x7f2833e5da80
        type <integer_type 0x7f2833e5d9d8 char public QI
            size <integer_cst 0x7f2834345ca8 constant 8>
            unit-size <integer_cst 0x7f2834345cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a3f0 precision:8 min <integer_cst 0x7f2833e54720 -128> max <integer_cst 0x7f2833e54708 127> context <translation_unit_decl 0x7f2834350168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f2833e5da80>>
        public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2834350168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
        pointer_to_this <pointer_type 0x7f2833e5dc78>>
    var <parm_decl 0x7f2833e76800 ap>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f2833e6f8d0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2833e85318
    type <integer_type 0x7f283435a5e8 int public SI
        size <integer_cst 0x7f2834345df8 constant 32>
        unit-size <integer_cst 0x7f2834345e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a5e8 precision:32 min <integer_cst 0x7f2834345db0 -2147483648> max <integer_cst 0x7f2834345dc8 2147483647>
        pointer_to_this <pointer_type 0x7f28343619d8>>
   
    def_stmt _3 = *_2;
    version:3>
# VUSE <.MEM_12>
_3 = *_2;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_13 = VDEF <.MEM_12>
_4 = strerror (_3);
_4 = strerror (_3);
./benchmarks/tmux/leak_4/tmux_leak_4.c:69:17: warning: use location
   69 |                 fatalx("xasprintf: %s", strerror(errno));
      |                 ^
this stmt call this function :strerror
trace fucntion name:strerror 

 ================== trace ================== 
trace fucntion free:0 
printf ("xasprintf: %s", _4);
./benchmarks/tmux/leak_4/tmux_leak_4.c:69:17: warning: use location
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2833e85318
    type <integer_type 0x7f283435a5e8 int public SI
        size <integer_cst 0x7f2834345df8 constant 32>
        unit-size <integer_cst 0x7f2834345e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a5e8 precision:32 min <integer_cst 0x7f2834345db0 -2147483648> max <integer_cst 0x7f2834345dc8 2147483647>
        pointer_to_this <pointer_type 0x7f28343619d8>>
   
    def_stmt _3 = *_2;
    version:3>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:xvasprintf========= [0m
[40;42m =======pre add _ fucntion:getenv========= [0m
[40;33m =======POP node_fun stack:getenv========= [0m
[40;42m =======pre add _ fucntion:getuid========= [0m
[40;33m =======POP node_fun stack:getuid========= [0m
[40;42m =======pre_check_funciton:make_label========= [0m
[40;42m =======start_check_funciton:make_label========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f283434d678
    type <integer_type 0x7f283435a5e8 int public SI
        size <integer_cst 0x7f2834345df8 constant 32>
        unit-size <integer_cst 0x7f2834345e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a5e8 precision:32 min <integer_cst 0x7f2834345db0 -2147483648> max <integer_cst 0x7f2834345dc8 2147483647>
        pointer_to_this <pointer_type 0x7f28343619d8>>
   
    def_stmt _1 = getuid ();
    version:1>
# .MEM_42 = VDEF <.MEM_41(D)>
_1 = getuid ();

 ================== pre trace ptable ================== 
trace fucntion name:getuid 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function getuid
 
 Start check Pointer Collect  

======================================================================
uid_26 = (uid_t) _1;
./benchmarks/tmux/leak_4/tmux_leak_4.c:84:13: warning: use location
   84 |         uid = getuid();
      |             ^
uid_26 = (uid_t) _1;
./benchmarks/tmux/leak_4/tmux_leak_4.c:84:13: warning: use location
# .MEM_42 = VDEF <.MEM_41(D)>
_1 = getuid ();
_1 = getuid ();
./benchmarks/tmux/leak_4/tmux_leak_4.c:84:15: warning: use location
   84 |         uid = getuid();
      |               ^
this stmt call this function :getuid
trace fucntion name:getuid 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f283434d678
    type <integer_type 0x7f283435a5e8 int public SI
        size <integer_cst 0x7f2834345df8 constant 32>
        unit-size <integer_cst 0x7f2834345e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a5e8 precision:32 min <integer_cst 0x7f2834345db0 -2147483648> max <integer_cst 0x7f2834345dc8 2147483647>
        pointer_to_this <pointer_type 0x7f28343619d8>>
   
    def_stmt _1 = getuid ();
    version:1>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: use location
  113 |         free(base);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f283434dc60
    type <pointer_type 0x7f2833e5da80
        type <integer_type 0x7f2833e5d9d8 char public QI
            size <integer_cst 0x7f2834345ca8 constant 8>
            unit-size <integer_cst 0x7f2834345cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a3f0 precision:8 min <integer_cst 0x7f2833e54720 -128> max <integer_cst 0x7f2833e54708 127> context <translation_unit_decl 0x7f2834350168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f2833e5da80>>
        public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2834350168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
        pointer_to_this <pointer_type 0x7f2833e5dc78>>
    var <var_decl 0x7f2834bedea0 s>
    def_stmt s_28 = getenv ("TMUX_TMPDIR");
    version:28
    ptr-info 0x7f2833e6f780>
# .MEM_43 = VDEF <.MEM_42>
s_28 = getenv ("TMUX_TMPDIR");

 ================== pre trace ptable ================== 
trace fucntion name:getenv 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function getenv
 
 Start check Pointer Collect  

======================================================================
# .MEM_43 = VDEF <.MEM_42>
s_28 = getenv ("TMUX_TMPDIR");
s_28 = getenv ("TMUX_TMPDIR");
./benchmarks/tmux/leak_4/tmux_leak_4.c:86:18: warning: use location
   86 |         if ((s = getenv("TMUX_TMPDIR")) != NULL && *s != '\0')
      |                  ^
this stmt call this function :getenv
trace fucntion name:getenv 

 ================== trace ================== 
trace fucntion free:0 
i_57 = xvasprintf (&base, "%s/tmux-", s_28);
./benchmarks/tmux/leak_4/tmux_leak_4.c:56:13: warning: use location
   56 |         i = xvasprintf(ret, fmt, ap);
      |             ^
this stmt call this function :xvasprintf
trace fucntion name:xvasprintf 
[40;44m =======trace_function_path xvasprintf  function_call count: 5 level :0========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:strerror========= [0m
[40;46m =======add node_fun stack:strerror========= [0m
[40;42m =======pre add _ fucntion:__errno_location========= [0m
[40;46m =======add node_fun stack:__errno_location========= [0m
[40;42m =======pre add _ fucntion:vasprintf========= [0m
[40;46m =======add node_fun stack:vasprintf========= [0m
[40;44m =======trace_function_path vasprintf  function_call count: 2 level :1========  [0m
[40;36m ======= node_fun:vasprintf========= [0m
[40;36m ======= find relate stmt with s ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
_2 = *s_28;
./benchmarks/tmux/leak_4/tmux_leak_4.c:86:52: warning: use location
   86 |         if ((s = getenv("TMUX_TMPDIR")) != NULL && *s != '\0')
      |                                                    ^
if (_2 != 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:86:49: warning: use location
   86 |         if ((s = getenv("TMUX_TMPDIR")) != NULL && *s != '\0')
      |                                                 ^
if (s_28 != 0B)
./benchmarks/tmux/leak_4/tmux_leak_4.c:86:12: warning: use location
   86 |         if ((s = getenv("TMUX_TMPDIR")) != NULL && *s != '\0')
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f283434dc60
    type <pointer_type 0x7f2833e5da80
        type <integer_type 0x7f2833e5d9d8 char public QI
            size <integer_cst 0x7f2834345ca8 constant 8>
            unit-size <integer_cst 0x7f2834345cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a3f0 precision:8 min <integer_cst 0x7f2833e54720 -128> max <integer_cst 0x7f2833e54708 127> context <translation_unit_decl 0x7f2834350168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f2833e5da80>>
        public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2834350168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
        pointer_to_this <pointer_type 0x7f2833e5dc78>>
    var <var_decl 0x7f2834bedea0 s>
    def_stmt s_28 = getenv ("TMUX_TMPDIR");
    version:28
    ptr-info 0x7f2833e6f780>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: use location
  113 |         free(base);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2833e7b3a8
    type <integer_type 0x7f283435a5e8 int public SI
        size <integer_cst 0x7f2834345df8 constant 32>
        unit-size <integer_cst 0x7f2834345e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a5e8 precision:32 min <integer_cst 0x7f2834345db0 -2147483648> max <integer_cst 0x7f2834345dc8 2147483647>
        pointer_to_this <pointer_type 0x7f28343619d8>>
    var <var_decl 0x7f2833e776c0 i>
    def_stmt i_57 = xvasprintf (&base, "%s/tmux-", s_28);
    version:57>
# .MEM_82 = VDEF <.MEM_43>
i_57 = xvasprintf (&base, "%s/tmux-", s_28);

 ================== pre trace ptable ================== 
trace fucntion name:xvasprintf 
[40;44m =======trace_function_path xvasprintf  function_call count: 5 level :888========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:strerror========= [0m
[40;46m =======add node_fun stack:strerror========= [0m
[40;42m =======pre add _ fucntion:__errno_location========= [0m
[40;46m =======add node_fun stack:__errno_location========= [0m
[40;42m =======pre add _ fucntion:vasprintf========= [0m
[40;46m =======add node_fun stack:vasprintf========= [0m
[40;44m =======trace_function_path vasprintf  function_call count: 2 level :889========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function xvasprintf
 
 Start check Pointer Collect  

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :xvasprintf
# .MEM_82 = VDEF <.MEM_43>
i_57 = xvasprintf (&base, "%s/tmux-", s_28);
./benchmarks/tmux/leak_4/tmux_leak_4.c:56:13: warning: use location
   56 |         i = xvasprintf(ret, fmt, ap);
      |             ^
# .MEM_83 = VDEF <.MEM_43>
i_58 = xvasprintf (&base, "%s/tmux-", "/tmp");
./benchmarks/tmux/leak_4/tmux_leak_4.c:56:13: warning: use location
   56 |         i = xvasprintf(ret, fmt, ap);
      |             ^
_3 = base;
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:13: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |             ^
_4 = mkdir (_3, 0);
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:13: warning: use location
this stmt call this function :mkdir
trace fucntion name:mkdir 

 ================== trace ================== 
trace fucntion free:0 
if (_4 != 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:12: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |            ^
_7 = base;
./benchmarks/tmux/leak_4/tmux_leak_4.c:94:13: warning: use location
   94 |         if (lstat(base, &sb) != 0)
      |             ^
_8 = lstat (_7, &sb);
./benchmarks/tmux/leak_4/tmux_leak_4.c:94:13: warning: use location
this stmt call this function :lstat
trace fucntion name:lstat 

 ================== trace ================== 
trace fucntion free:0 
_14 = base;
./benchmarks/tmux/leak_4/tmux_leak_4.c:105:13: warning: use location
  105 |         if (realpath(base, resolved) == NULL)
      |             ^
_15 = realpath (_14, &resolved);
./benchmarks/tmux/leak_4/tmux_leak_4.c:105:13: warning: use location
this stmt call this function :realpath
trace fucntion name:realpath 

 ================== trace ================== 
trace fucntion free:0 
if (_15 == 0B)
./benchmarks/tmux/leak_4/tmux_leak_4.c:105:12: warning: use location
  105 |         if (realpath(base, resolved) == NULL)
      |            ^
_16 = base;
./benchmarks/tmux/leak_4/tmux_leak_4.c:106:17: warning: use location
  106 |                 strlcpy(resolved, base, sizeof resolved);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
s_60 = PHI <_16(16), s_61(18)>
lto1: warning: use location
this stmt have mutiple branch ---realpath-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = *s_60;
./benchmarks/tmux/leak_4/tmux_leak_4.c:28:37: warning: use location
   28 |                         if ((*d++ = *s++) == 0)
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_62 = _64;
./benchmarks/tmux/leak_4/tmux_leak_4.c:28:35: warning: use location
   28 |                         if ((*d++ = *s++) == 0)
      |                                   ^
s_77 = PHI <s_61(18), _16(16), s_61(17)>
lto1: warning: use location
this stmt have mutiple branch ---realpath-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
s_70 = PHI <s_77(20), s_71(21)>
lto1: warning: use location
this stmt have mutiple branch ---realpath-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_72 = *s_70;
./benchmarks/tmux/leak_4/tmux_leak_4.c:37:24: warning: use location
   37 |                 while (*s++)
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_72 != 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:37:24: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
s_71 = s_70 + 1;
./benchmarks/tmux/leak_4/tmux_leak_4.c:37:26: warning: use location
   37 |                 while (*s++)
      |                          ^
s_73 = PHI <s_77(19), s_71(21)>
lto1: warning: use location
this stmt have mutiple branch ---realpath-----
_74 = s_73 - _16;
./benchmarks/tmux/leak_4/tmux_leak_4.c:41:18: warning: use location
   41 |         return(s - src - 1);        /* count does not include NUL */
      |                  ^
_75 = _74 + -1;
./benchmarks/tmux/leak_4/tmux_leak_4.c:41:24: warning: use location
   41 |         return(s - src - 1);        /* count does not include NUL */
      |                        ^
_76 = (long unsigned int) _75;
./benchmarks/tmux/leak_4/tmux_leak_4.c:41:24: warning: use location
_18 = base;
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: use location
  113 |         free(base);
      |         ^
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: use location
this stmt call this function :free

 ================== find free stmt ================== 
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
# .MEM_82 = VDEF <.MEM_43>
i_57 = xvasprintf (&base, "%s/tmux-", s_28);
i_57 = xvasprintf (&base, "%s/tmux-", s_28);
./benchmarks/tmux/leak_4/tmux_leak_4.c:56:13: warning: use location
   56 |         i = xvasprintf(ret, fmt, ap);
      |             ^
this stmt call this function :xvasprintf
trace fucntion name:xvasprintf 
[40;44m =======trace_function_path xvasprintf  function_call count: 5 level :0========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:strerror========= [0m
[40;46m =======add node_fun stack:strerror========= [0m
[40;42m =======pre add _ fucntion:__errno_location========= [0m
[40;46m =======add node_fun stack:__errno_location========= [0m
[40;42m =======pre add _ fucntion:vasprintf========= [0m
[40;46m =======add node_fun stack:vasprintf========= [0m
[40;44m =======trace_function_path vasprintf  function_call count: 2 level :1========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:1 
# .MEM_82 = VDEF <.MEM_43>
i_57 = xvasprintf (&base, "%s/tmux-", s_28);
i_57 = xvasprintf (&base, "%s/tmux-", s_28);
./benchmarks/tmux/leak_4/tmux_leak_4.c:56:13: warning: use location
this stmt call this function :xvasprintf
trace fucntion name:xvasprintf 
[40;44m =======trace_function_path xvasprintf  function_call count: 5 level :0========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:strerror========= [0m
[40;46m =======add node_fun stack:strerror========= [0m
[40;42m =======pre add _ fucntion:__errno_location========= [0m
[40;46m =======add node_fun stack:__errno_location========= [0m
[40;42m =======pre add _ fucntion:vasprintf========= [0m
[40;46m =======add node_fun stack:vasprintf========= [0m
[40;44m =======trace_function_path vasprintf  function_call count: 2 level :1========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2833e7b3a8
    type <integer_type 0x7f283435a5e8 int public SI
        size <integer_cst 0x7f2834345df8 constant 32>
        unit-size <integer_cst 0x7f2834345e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a5e8 precision:32 min <integer_cst 0x7f2834345db0 -2147483648> max <integer_cst 0x7f2834345dc8 2147483647>
        pointer_to_this <pointer_type 0x7f28343619d8>>
    var <var_decl 0x7f2833e776c0 i>
    def_stmt i_57 = xvasprintf (&base, "%s/tmux-", s_28);
    version:57>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: use location
  113 |         free(base);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: free in this location
[40;35m target gimple type: ssa_name [0m
s_60 = PHI <_16(16), s_61(18)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: free in this location
[40;35m target gimple type: ssa_name [0m
s_60 = PHI <_16(16), s_61(18)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: free in this location
[40;35m target gimple type: ssa_name [0m
s_77 = PHI <s_61(18), _16(16), s_61(17)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: free in this location
[40;35m target gimple type: ssa_name [0m
s_77 = PHI <s_61(18), _16(16), s_61(17)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: free in this location
[40;35m target gimple type: ssa_name [0m
s_70 = PHI <s_77(20), s_71(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: free in this location
[40;35m target gimple type: ssa_name [0m
s_70 = PHI <s_77(20), s_71(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: free in this location
[40;35m target gimple type: ssa_name [0m
s_73 = PHI <s_77(19), s_71(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: free in this location
[40;35m target gimple type: ssa_name [0m
s_73 = PHI <s_77(19), s_71(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2833e7b3f0
    type <integer_type 0x7f283435a5e8 int public SI
        size <integer_cst 0x7f2834345df8 constant 32>
        unit-size <integer_cst 0x7f2834345e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a5e8 precision:32 min <integer_cst 0x7f2834345db0 -2147483648> max <integer_cst 0x7f2834345dc8 2147483647>
        pointer_to_this <pointer_type 0x7f28343619d8>>
    var <var_decl 0x7f2833e77990 i>
    def_stmt i_58 = xvasprintf (&base, "%s/tmux-", "/tmp");
    version:58>
# .MEM_83 = VDEF <.MEM_43>
i_58 = xvasprintf (&base, "%s/tmux-", "/tmp");

 ================== pre trace ptable ================== 
trace fucntion name:xvasprintf 
[40;44m =======trace_function_path xvasprintf  function_call count: 5 level :888========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:strerror========= [0m
[40;46m =======add node_fun stack:strerror========= [0m
[40;42m =======pre add _ fucntion:__errno_location========= [0m
[40;46m =======add node_fun stack:__errno_location========= [0m
[40;42m =======pre add _ fucntion:vasprintf========= [0m
[40;46m =======add node_fun stack:vasprintf========= [0m
[40;44m =======trace_function_path vasprintf  function_call count: 2 level :889========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function xvasprintf
 
 Start check Pointer Collect  

======================================================================
# .MEM_83 = VDEF <.MEM_43>
i_58 = xvasprintf (&base, "%s/tmux-", "/tmp");
i_58 = xvasprintf (&base, "%s/tmux-", "/tmp");
./benchmarks/tmux/leak_4/tmux_leak_4.c:56:13: warning: use location
   56 |         i = xvasprintf(ret, fmt, ap);
      |             ^
this stmt call this function :xvasprintf
trace fucntion name:xvasprintf 
[40;44m =======trace_function_path xvasprintf  function_call count: 5 level :0========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:strerror========= [0m
[40;46m =======add node_fun stack:strerror========= [0m
[40;42m =======pre add _ fucntion:__errno_location========= [0m
[40;46m =======add node_fun stack:__errno_location========= [0m
[40;42m =======pre add _ fucntion:vasprintf========= [0m
[40;46m =======add node_fun stack:vasprintf========= [0m
[40;44m =======trace_function_path vasprintf  function_call count: 2 level :1========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
_3 = base;
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:13: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |             ^
_4 = mkdir (_3, 0);
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:13: warning: use location
this stmt call this function :mkdir
trace fucntion name:mkdir 

 ================== trace ================== 
trace fucntion free:0 
if (_4 != 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:12: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |            ^
_7 = base;
./benchmarks/tmux/leak_4/tmux_leak_4.c:94:13: warning: use location
   94 |         if (lstat(base, &sb) != 0)
      |             ^
_8 = lstat (_7, &sb);
./benchmarks/tmux/leak_4/tmux_leak_4.c:94:13: warning: use location
this stmt call this function :lstat
trace fucntion name:lstat 

 ================== trace ================== 
trace fucntion free:0 
_14 = base;
./benchmarks/tmux/leak_4/tmux_leak_4.c:105:13: warning: use location
  105 |         if (realpath(base, resolved) == NULL)
      |             ^
_15 = realpath (_14, &resolved);
./benchmarks/tmux/leak_4/tmux_leak_4.c:105:13: warning: use location
this stmt call this function :realpath
trace fucntion name:realpath 

 ================== trace ================== 
trace fucntion free:0 
if (_15 == 0B)
./benchmarks/tmux/leak_4/tmux_leak_4.c:105:12: warning: use location
  105 |         if (realpath(base, resolved) == NULL)
      |            ^
_16 = base;
./benchmarks/tmux/leak_4/tmux_leak_4.c:106:17: warning: use location
  106 |                 strlcpy(resolved, base, sizeof resolved);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
s_60 = PHI <_16(16), s_61(18)>
lto1: warning: use location
this stmt have mutiple branch ---realpath-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = *s_60;
./benchmarks/tmux/leak_4/tmux_leak_4.c:28:37: warning: use location
   28 |                         if ((*d++ = *s++) == 0)
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_62 = _64;
./benchmarks/tmux/leak_4/tmux_leak_4.c:28:35: warning: use location
   28 |                         if ((*d++ = *s++) == 0)
      |                                   ^
s_77 = PHI <s_61(18), _16(16), s_61(17)>
lto1: warning: use location
this stmt have mutiple branch ---realpath-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
s_70 = PHI <s_77(20), s_71(21)>
lto1: warning: use location
this stmt have mutiple branch ---realpath-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_72 = *s_70;
./benchmarks/tmux/leak_4/tmux_leak_4.c:37:24: warning: use location
   37 |                 while (*s++)
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_72 != 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:37:24: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
s_71 = s_70 + 1;
./benchmarks/tmux/leak_4/tmux_leak_4.c:37:26: warning: use location
   37 |                 while (*s++)
      |                          ^
s_73 = PHI <s_77(19), s_71(21)>
lto1: warning: use location
this stmt have mutiple branch ---realpath-----
_74 = s_73 - _16;
./benchmarks/tmux/leak_4/tmux_leak_4.c:41:18: warning: use location
   41 |         return(s - src - 1);        /* count does not include NUL */
      |                  ^
_75 = _74 + -1;
./benchmarks/tmux/leak_4/tmux_leak_4.c:41:24: warning: use location
   41 |         return(s - src - 1);        /* count does not include NUL */
      |                        ^
_76 = (long unsigned int) _75;
./benchmarks/tmux/leak_4/tmux_leak_4.c:41:24: warning: use location
_18 = base;
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: use location
  113 |         free(base);
      |         ^
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: use location
this stmt call this function :free

 ================== find free stmt ================== 
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2833e7b3f0
    type <integer_type 0x7f283435a5e8 int public SI
        size <integer_cst 0x7f2834345df8 constant 32>
        unit-size <integer_cst 0x7f2834345e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a5e8 precision:32 min <integer_cst 0x7f2834345db0 -2147483648> max <integer_cst 0x7f2834345dc8 2147483647>
        pointer_to_this <pointer_type 0x7f28343619d8>>
    var <var_decl 0x7f2833e77990 i>
    def_stmt i_58 = xvasprintf (&base, "%s/tmux-", "/tmp");
    version:58>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: use location

 ================== Start Use after free Check ================== 

============================================================
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: free in this location
[40;35m target gimple type: ssa_name [0m
s_60 = PHI <_16(16), s_61(18)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: free in this location
[40;35m target gimple type: ssa_name [0m
s_60 = PHI <_16(16), s_61(18)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: free in this location
[40;35m target gimple type: ssa_name [0m
s_77 = PHI <s_61(18), _16(16), s_61(17)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: free in this location
[40;35m target gimple type: ssa_name [0m
s_77 = PHI <s_61(18), _16(16), s_61(17)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: free in this location
[40;35m target gimple type: ssa_name [0m
s_70 = PHI <s_77(20), s_71(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: free in this location
[40;35m target gimple type: ssa_name [0m
s_70 = PHI <s_77(20), s_71(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: free in this location
[40;35m target gimple type: ssa_name [0m
s_73 = PHI <s_77(19), s_71(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: free in this location
[40;35m target gimple type: ssa_name [0m
s_73 = PHI <s_77(19), s_71(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f283434d750
    type <integer_type 0x7f283435a5e8 int public SI
        size <integer_cst 0x7f2834345df8 constant 32>
        unit-size <integer_cst 0x7f2834345e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a5e8 precision:32 min <integer_cst 0x7f2834345db0 -2147483648> max <integer_cst 0x7f2834345dc8 2147483647>
        pointer_to_this <pointer_type 0x7f28343619d8>>
   
    def_stmt _4 = mkdir (_3, 0);
    version:4>
# .MEM_46 = VDEF <.MEM_38>
_4 = mkdir (_3, 0);

 ================== pre trace ptable ================== 
trace fucntion name:mkdir 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function mkdir
 
 Start check Pointer Collect  

======================================================================
# .MEM_46 = VDEF <.MEM_38>
_4 = mkdir (_3, 0);
_4 = mkdir (_3, 0);
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:13: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |             ^
this stmt call this function :mkdir
trace fucntion name:mkdir 

 ================== trace ================== 
trace fucntion free:0 
if (_4 != 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:12: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f283434d750
    type <integer_type 0x7f283435a5e8 int public SI
        size <integer_cst 0x7f2834345df8 constant 32>
        unit-size <integer_cst 0x7f2834345e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a5e8 precision:32 min <integer_cst 0x7f2834345db0 -2147483648> max <integer_cst 0x7f2834345dc8 2147483647>
        pointer_to_this <pointer_type 0x7f28343619d8>>
   
    def_stmt _4 = mkdir (_3, 0);
    version:4>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: use location
  113 |         free(base);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f283434d798
    type <pointer_type 0x7f28343619d8
        type <integer_type 0x7f283435a5e8 int public SI
            size <integer_cst 0x7f2834345df8 constant 32>
            unit-size <integer_cst 0x7f2834345e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a5e8 precision:32 min <integer_cst 0x7f2834345db0 -2147483648> max <integer_cst 0x7f2834345dc8 2147483647>
            pointer_to_this <pointer_type 0x7f28343619d8>>
        public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = __errno_location ();
    version:5
    ptr-info 0x7f2833e6f678>
_5 = __errno_location ();

 ================== pre trace ptable ================== 
trace fucntion name:__errno_location 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function __errno_location
 
 Start check Pointer Collect  

======================================================================
_6 = *_5;
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:42: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |                                          ^
if (_6 != 17)
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:39: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |                                       ^
_5 = __errno_location ();
_5 = __errno_location ();
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:42: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |                                          ^
this stmt call this function :__errno_location
trace fucntion name:__errno_location 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f283434d798
    type <pointer_type 0x7f28343619d8
        type <integer_type 0x7f283435a5e8 int public SI
            size <integer_cst 0x7f2834345df8 constant 32>
            unit-size <integer_cst 0x7f2834345e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a5e8 precision:32 min <integer_cst 0x7f2834345db0 -2147483648> max <integer_cst 0x7f2834345dc8 2147483647>
            pointer_to_this <pointer_type 0x7f28343619d8>>
        public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = __errno_location ();
    version:5
    ptr-info 0x7f2833e6f678>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: use location
  113 |         free(base);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f283434d870
    type <integer_type 0x7f283435a5e8 int public SI
        size <integer_cst 0x7f2834345df8 constant 32>
        unit-size <integer_cst 0x7f2834345e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a5e8 precision:32 min <integer_cst 0x7f2834345db0 -2147483648> max <integer_cst 0x7f2834345dc8 2147483647>
        pointer_to_this <pointer_type 0x7f28343619d8>>
   
    def_stmt _8 = lstat (_7, &sb);
    version:8>
# .MEM_47 = VDEF <.MEM_46>
_8 = lstat (_7, &sb);

 ================== pre trace ptable ================== 
trace fucntion name:lstat 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function lstat
 
 Start check Pointer Collect  

======================================================================
# .MEM_47 = VDEF <.MEM_46>
_8 = lstat (_7, &sb);
_8 = lstat (_7, &sb);
./benchmarks/tmux/leak_4/tmux_leak_4.c:94:13: warning: use location
   94 |         if (lstat(base, &sb) != 0)
      |             ^
this stmt call this function :lstat
trace fucntion name:lstat 

 ================== trace ================== 
trace fucntion free:0 
if (_8 != 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:94:12: warning: use location
   94 |         if (lstat(base, &sb) != 0)
      |            ^
_9 = sb.st_mode;
./benchmarks/tmux/leak_4/tmux_leak_4.c:96:14: warning: use location
   96 |         if (!S_ISDIR(sb.st_mode)) {
      |              ^
_10 = _9 & 61440;
./benchmarks/tmux/leak_4/tmux_leak_4.c:96:14: warning: use location
if (_10 != 16384)
./benchmarks/tmux/leak_4/tmux_leak_4.c:96:12: warning: use location
   96 |         if (!S_ISDIR(sb.st_mode)) {
      |            ^
_12 = sb.st_uid;
./benchmarks/tmux/leak_4/tmux_leak_4.c:100:15: warning: use location
  100 |         if (sb.st_uid != uid || (sb.st_mode & S_IRWXO) != 0) {
      |               ^
if (_12 != uid_26)
./benchmarks/tmux/leak_4/tmux_leak_4.c:100:12: warning: use location
  100 |         if (sb.st_uid != uid || (sb.st_mode & S_IRWXO) != 0) {
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f283434d870
    type <integer_type 0x7f283435a5e8 int public SI
        size <integer_cst 0x7f2834345df8 constant 32>
        unit-size <integer_cst 0x7f2834345e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a5e8 precision:32 min <integer_cst 0x7f2834345db0 -2147483648> max <integer_cst 0x7f2834345dc8 2147483647>
        pointer_to_this <pointer_type 0x7f28343619d8>>
   
    def_stmt _8 = lstat (_7, &sb);
    version:8>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: use location
  113 |         free(base);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f283434d948
    type <pointer_type 0x7f28343619d8
        type <integer_type 0x7f283435a5e8 int public SI
            size <integer_cst 0x7f2834345df8 constant 32>
            unit-size <integer_cst 0x7f2834345e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a5e8 precision:32 min <integer_cst 0x7f2834345db0 -2147483648> max <integer_cst 0x7f2834345dc8 2147483647>
            pointer_to_this <pointer_type 0x7f28343619d8>>
        public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _11 = __errno_location ();
    version:11
    ptr-info 0x7f2833e6f6a8>
_11 = __errno_location ();

 ================== pre trace ptable ================== 
trace fucntion name:__errno_location 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function __errno_location
 
 Start check Pointer Collect  

======================================================================
*_11 = 20;
./benchmarks/tmux/leak_4/tmux_leak_4.c:97:23: warning: use location
   97 |                 errno = ENOTDIR;
      |                       ^
*_11 = 20;
./benchmarks/tmux/leak_4/tmux_leak_4.c:97:23: warning: use location
_11 = __errno_location ();
_11 = __errno_location ();
./benchmarks/tmux/leak_4/tmux_leak_4.c:97:17: warning: use location
   97 |                 errno = ENOTDIR;
      |                 ^
this stmt call this function :__errno_location
trace fucntion name:__errno_location 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f283434d948
    type <pointer_type 0x7f28343619d8
        type <integer_type 0x7f283435a5e8 int public SI
            size <integer_cst 0x7f2834345df8 constant 32>
            unit-size <integer_cst 0x7f2834345e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a5e8 precision:32 min <integer_cst 0x7f2834345db0 -2147483648> max <integer_cst 0x7f2834345dc8 2147483647>
            pointer_to_this <pointer_type 0x7f28343619d8>>
        public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _11 = __errno_location ();
    version:11
    ptr-info 0x7f2833e6f6a8>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: use location
  113 |         free(base);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f283434d9d8
    type <pointer_type 0x7f28343619d8
        type <integer_type 0x7f283435a5e8 int public SI
            size <integer_cst 0x7f2834345df8 constant 32>
            unit-size <integer_cst 0x7f2834345e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a5e8 precision:32 min <integer_cst 0x7f2834345db0 -2147483648> max <integer_cst 0x7f2834345dc8 2147483647>
            pointer_to_this <pointer_type 0x7f28343619d8>>
        public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _13 = __errno_location ();
    version:13
    ptr-info 0x7f2833e6f6c0>
_13 = __errno_location ();

 ================== pre trace ptable ================== 
trace fucntion name:__errno_location 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function __errno_location
 
 Start check Pointer Collect  

======================================================================
*_13 = 13;
./benchmarks/tmux/leak_4/tmux_leak_4.c:101:23: warning: use location
  101 |                 errno = EACCES;
      |                       ^
*_13 = 13;
./benchmarks/tmux/leak_4/tmux_leak_4.c:101:23: warning: use location
_13 = __errno_location ();
_13 = __errno_location ();
./benchmarks/tmux/leak_4/tmux_leak_4.c:101:17: warning: use location
  101 |                 errno = EACCES;
      |                 ^
this stmt call this function :__errno_location
trace fucntion name:__errno_location 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f283434d9d8
    type <pointer_type 0x7f28343619d8
        type <integer_type 0x7f283435a5e8 int public SI
            size <integer_cst 0x7f2834345df8 constant 32>
            unit-size <integer_cst 0x7f2834345e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a5e8 precision:32 min <integer_cst 0x7f2834345db0 -2147483648> max <integer_cst 0x7f2834345dc8 2147483647>
            pointer_to_this <pointer_type 0x7f28343619d8>>
        public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _13 = __errno_location ();
    version:13
    ptr-info 0x7f2833e6f6c0>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: use location
  113 |         free(base);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f283434da68
    type <pointer_type 0x7f2833e5da80
        type <integer_type 0x7f2833e5d9d8 char public QI
            size <integer_cst 0x7f2834345ca8 constant 8>
            unit-size <integer_cst 0x7f2834345cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a3f0 precision:8 min <integer_cst 0x7f2833e54720 -128> max <integer_cst 0x7f2833e54708 127> context <translation_unit_decl 0x7f2834350168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f2833e5da80>>
        public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2834350168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
        pointer_to_this <pointer_type 0x7f2833e5dc78>>
   
    def_stmt _15 = realpath (_14, &resolved);
    version:15
    ptr-info 0x7f2833e6f6f0>
# .MEM_48 = VDEF <.MEM_47>
_15 = realpath (_14, &resolved);

 ================== pre trace ptable ================== 
trace fucntion name:realpath 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function realpath
 
 Start check Pointer Collect  

======================================================================
# .MEM_48 = VDEF <.MEM_47>
_15 = realpath (_14, &resolved);
_15 = realpath (_14, &resolved);
./benchmarks/tmux/leak_4/tmux_leak_4.c:105:13: warning: use location
  105 |         if (realpath(base, resolved) == NULL)
      |             ^
this stmt call this function :realpath
trace fucntion name:realpath 

 ================== trace ================== 
trace fucntion free:0 
if (_15 == 0B)
./benchmarks/tmux/leak_4/tmux_leak_4.c:105:12: warning: use location
  105 |         if (realpath(base, resolved) == NULL)
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f283434da68
    type <pointer_type 0x7f2833e5da80
        type <integer_type 0x7f2833e5d9d8 char public QI
            size <integer_cst 0x7f2834345ca8 constant 8>
            unit-size <integer_cst 0x7f2834345cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a3f0 precision:8 min <integer_cst 0x7f2833e54720 -128> max <integer_cst 0x7f2833e54708 127> context <translation_unit_decl 0x7f2834350168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f2833e5da80>>
        public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2834350168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
        pointer_to_this <pointer_type 0x7f2833e5dc78>>
   
    def_stmt _15 = realpath (_14, &resolved);
    version:15
    ptr-info 0x7f2833e6f6f0>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: use location
  113 |         free(base);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f283434daf8
    type <pointer_type 0x7f28343619d8
        type <integer_type 0x7f283435a5e8 int public SI
            size <integer_cst 0x7f2834345df8 constant 32>
            unit-size <integer_cst 0x7f2834345e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a5e8 precision:32 min <integer_cst 0x7f2834345db0 -2147483648> max <integer_cst 0x7f2834345dc8 2147483647>
            pointer_to_this <pointer_type 0x7f28343619d8>>
        public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _17 = __errno_location ();
    version:17
    ptr-info 0x7f2833e6f720>
_17 = __errno_location ();

 ================== pre trace ptable ================== 
trace fucntion name:__errno_location 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function __errno_location
 
 Start check Pointer Collect  

======================================================================
saved_errno_37 = *_17;
./benchmarks/tmux/leak_4/tmux_leak_4.c:112:21: warning: use location
  112 |         saved_errno = errno;
      |                     ^
*_19 = saved_errno_37;
./benchmarks/tmux/leak_4/tmux_leak_4.c:114:15: warning: use location
  114 |         errno = saved_errno;
      |               ^
_17 = __errno_location ();
_17 = __errno_location ();
./benchmarks/tmux/leak_4/tmux_leak_4.c:112:23: warning: use location
  112 |         saved_errno = errno;
      |                       ^
this stmt call this function :__errno_location
trace fucntion name:__errno_location 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f283434daf8
    type <pointer_type 0x7f28343619d8
        type <integer_type 0x7f283435a5e8 int public SI
            size <integer_cst 0x7f2834345df8 constant 32>
            unit-size <integer_cst 0x7f2834345e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a5e8 precision:32 min <integer_cst 0x7f2834345db0 -2147483648> max <integer_cst 0x7f2834345dc8 2147483647>
            pointer_to_this <pointer_type 0x7f28343619d8>>
        public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _17 = __errno_location ();
    version:17
    ptr-info 0x7f2833e6f720>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: use location
  113 |         free(base);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: free in this location
[40;35m target gimple type: mem_ref [0m
# .MEM_53 = VDEF <.MEM_52>
*_19 = saved_errno_37;
./benchmarks/tmux/leak_4/tmux_leak_4.c:114:15: warning: use location
  114 |         errno = saved_errno;
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f283434db88
    type <pointer_type 0x7f28343619d8
        type <integer_type 0x7f283435a5e8 int public SI
            size <integer_cst 0x7f2834345df8 constant 32>
            unit-size <integer_cst 0x7f2834345e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a5e8 precision:32 min <integer_cst 0x7f2834345db0 -2147483648> max <integer_cst 0x7f2834345dc8 2147483647>
            pointer_to_this <pointer_type 0x7f28343619d8>>
        public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _19 = __errno_location ();
    version:19
    ptr-info 0x7f2833e6f750>
_19 = __errno_location ();

 ================== pre trace ptable ================== 
trace fucntion name:__errno_location 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function __errno_location
 
 Start check Pointer Collect  

======================================================================
*_19 = saved_errno_37;
./benchmarks/tmux/leak_4/tmux_leak_4.c:114:15: warning: use location
*_19 = saved_errno_37;
./benchmarks/tmux/leak_4/tmux_leak_4.c:114:15: warning: use location
_19 = __errno_location ();
_19 = __errno_location ();
./benchmarks/tmux/leak_4/tmux_leak_4.c:114:9: warning: use location
  114 |         errno = saved_errno;
      |         ^
this stmt call this function :__errno_location
trace fucntion name:__errno_location 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f283434db88
    type <pointer_type 0x7f28343619d8
        type <integer_type 0x7f283435a5e8 int public SI
            size <integer_cst 0x7f2834345df8 constant 32>
            unit-size <integer_cst 0x7f2834345e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a5e8 precision:32 min <integer_cst 0x7f2834345db0 -2147483648> max <integer_cst 0x7f2834345dc8 2147483647>
            pointer_to_this <pointer_type 0x7f28343619d8>>
        public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _19 = __errno_location ();
    version:19
    ptr-info 0x7f2833e6f750>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: use location
  113 |         free(base);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: free in this location
[40;35m target gimple type: ssa_name [0m
# .MEM_53 = VDEF <.MEM_52>
*_19 = saved_errno_37;
./benchmarks/tmux/leak_4/tmux_leak_4.c:114:15: warning: use location
  114 |         errno = saved_errno;
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: free in this location
  113 |         free(base);
      |         ^
[40;35m target gimple type: mem_ref [0m
# .MEM_53 = VDEF <.MEM_52>
*_19 = saved_errno_37;
./benchmarks/tmux/leak_4/tmux_leak_4.c:114:15: warning: use location
  114 |         errno = saved_errno;
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: free in this location
  113 |         free(base);
      |         ^
[40;35m target gimple type: ssa_name [0m
_19 = __errno_location ();
./benchmarks/tmux/leak_4/tmux_leak_4.c:114:9: warning: use location
  114 |         errno = saved_errno;
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f283434d708
    type <pointer_type 0x7f2833e5da80
        type <integer_type 0x7f2833e5d9d8 char public QI
            size <integer_cst 0x7f2834345ca8 constant 8>
            unit-size <integer_cst 0x7f2834345cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a3f0 precision:8 min <integer_cst 0x7f2833e54720 -128> max <integer_cst 0x7f2833e54708 127> context <translation_unit_decl 0x7f2834350168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f2833e5da80>>
        public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2834350168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
        pointer_to_this <pointer_type 0x7f2833e5dc78>>
   
    def_stmt _3 = base;
    version:3
    ptr-info 0x7f2833e6f660>
# VUSE <.MEM_38>
_3 = base;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_46 = VDEF <.MEM_38>
_4 = mkdir (_3, 0);
_4 = mkdir (_3, 0);
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:13: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |             ^
this stmt call this function :mkdir
trace fucntion name:mkdir 

 ================== trace ================== 
trace fucntion free:0 
if (_4 != 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:12: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f283434d708
    type <pointer_type 0x7f2833e5da80
        type <integer_type 0x7f2833e5d9d8 char public QI
            size <integer_cst 0x7f2834345ca8 constant 8>
            unit-size <integer_cst 0x7f2834345cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a3f0 precision:8 min <integer_cst 0x7f2833e54720 -128> max <integer_cst 0x7f2833e54708 127> context <translation_unit_decl 0x7f2834350168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f2833e5da80>>
        public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2834350168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
        pointer_to_this <pointer_type 0x7f2833e5dc78>>
   
    def_stmt _3 = base;
    version:3
    ptr-info 0x7f2833e6f660>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: use location
  113 |         free(base);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f283434d828
    type <pointer_type 0x7f2833e5da80
        type <integer_type 0x7f2833e5d9d8 char public QI
            size <integer_cst 0x7f2834345ca8 constant 8>
            unit-size <integer_cst 0x7f2834345cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a3f0 precision:8 min <integer_cst 0x7f2833e54720 -128> max <integer_cst 0x7f2833e54708 127> context <translation_unit_decl 0x7f2834350168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f2833e5da80>>
        public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2834350168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
        pointer_to_this <pointer_type 0x7f2833e5dc78>>
   
    def_stmt _7 = base;
    version:7
    ptr-info 0x7f2833e6f690>
# VUSE <.MEM_46>
_7 = base;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_47 = VDEF <.MEM_46>
_8 = lstat (_7, &sb);
_8 = lstat (_7, &sb);
./benchmarks/tmux/leak_4/tmux_leak_4.c:94:13: warning: use location
   94 |         if (lstat(base, &sb) != 0)
      |             ^
this stmt call this function :lstat
trace fucntion name:lstat 

 ================== trace ================== 
trace fucntion free:0 
if (_8 != 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:94:12: warning: use location
   94 |         if (lstat(base, &sb) != 0)
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f283434d828
    type <pointer_type 0x7f2833e5da80
        type <integer_type 0x7f2833e5d9d8 char public QI
            size <integer_cst 0x7f2834345ca8 constant 8>
            unit-size <integer_cst 0x7f2834345cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a3f0 precision:8 min <integer_cst 0x7f2833e54720 -128> max <integer_cst 0x7f2833e54708 127> context <translation_unit_decl 0x7f2834350168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f2833e5da80>>
        public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2834350168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
        pointer_to_this <pointer_type 0x7f2833e5dc78>>
   
    def_stmt _7 = base;
    version:7
    ptr-info 0x7f2833e6f690>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: use location
  113 |         free(base);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f283434da20
    type <pointer_type 0x7f2833e5da80
        type <integer_type 0x7f2833e5d9d8 char public QI
            size <integer_cst 0x7f2834345ca8 constant 8>
            unit-size <integer_cst 0x7f2834345cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a3f0 precision:8 min <integer_cst 0x7f2833e54720 -128> max <integer_cst 0x7f2833e54708 127> context <translation_unit_decl 0x7f2834350168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f2833e5da80>>
        public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2834350168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
        pointer_to_this <pointer_type 0x7f2833e5dc78>>
   
    def_stmt _14 = base;
    version:14
    ptr-info 0x7f2833e6f6d8>
# VUSE <.MEM_47>
_14 = base;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_48 = VDEF <.MEM_47>
_15 = realpath (_14, &resolved);
_15 = realpath (_14, &resolved);
./benchmarks/tmux/leak_4/tmux_leak_4.c:105:13: warning: use location
  105 |         if (realpath(base, resolved) == NULL)
      |             ^
this stmt call this function :realpath
trace fucntion name:realpath 

 ================== trace ================== 
trace fucntion free:0 
if (_15 == 0B)
./benchmarks/tmux/leak_4/tmux_leak_4.c:105:12: warning: use location
  105 |         if (realpath(base, resolved) == NULL)
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f283434da20
    type <pointer_type 0x7f2833e5da80
        type <integer_type 0x7f2833e5d9d8 char public QI
            size <integer_cst 0x7f2834345ca8 constant 8>
            unit-size <integer_cst 0x7f2834345cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a3f0 precision:8 min <integer_cst 0x7f2833e54720 -128> max <integer_cst 0x7f2833e54708 127> context <translation_unit_decl 0x7f2834350168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f2833e5da80>>
        public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2834350168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
        pointer_to_this <pointer_type 0x7f2833e5dc78>>
   
    def_stmt _14 = base;
    version:14
    ptr-info 0x7f2833e6f6d8>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: use location
  113 |         free(base);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:make_label========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m
[40;33m =======POP node_fun stack:main========= [0m
[40;44m =======node_fun:make_label========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path make_label  function_call count: 8 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:__errno_location========= [0m
[40;33m =======POP node_fun stack:__errno_location========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:realpath========= [0m
[40;33m =======POP node_fun stack:realpath========= [0m
[40;42m =======pre add _ fucntion:lstat========= [0m
[40;33m =======POP node_fun stack:lstat========= [0m
[40;42m =======pre add _ fucntion:mkdir========= [0m
[40;33m =======POP node_fun stack:mkdir========= [0m
[40;42m =======pre add _ fucntion:xvasprintf========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path xvasprintf  function_call count: 5 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:strerror========= [0m
[40;33m =======POP node_fun stack:strerror========= [0m
[40;42m =======pre add _ fucntion:__errno_location========= [0m
[40;33m =======POP node_fun stack:__errno_location========= [0m
[40;42m =======pre add _ fucntion:vasprintf========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path vasprintf  function_call count: 2 level :2========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre_check_funciton:vasprintf========= [0m
[40;42m =======start_check_funciton:vasprintf========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f2833e85630
    type <integer_type 0x7f283435a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a738 precision:64 min <integer_cst 0x7f2834345e88 0> max <integer_cst 0x7f2834346500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f28343667e0>>
   
    def_stmt _1 = strlen (fmt_8(D));
    version:1>
# VUSE <.MEM_12(D)>
_1 = strlen (fmt_8(D));

 ================== pre trace ptable ================== 
trace fucntion name:strlen 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function strlen
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_12(D)>
_1 = strlen (fmt_8(D));
_1 = strlen (fmt_8(D));
In function ‘make_label’:
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:23: warning: use location
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |                       ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
_4 = malloc (_3);
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:16: warning: use location
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |                ^
this stmt call this function :malloc
*ret_11(D) = _4;
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:14: warning: use location
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |              ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2833e85630
    type <integer_type 0x7f283435a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a738 precision:64 min <integer_cst 0x7f2834345e88 0> max <integer_cst 0x7f2834346500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f28343667e0>>
   
    def_stmt _1 = strlen (fmt_8(D));
    version:1>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2833e85678
    type <integer_type 0x7f283435a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a738 precision:64 min <integer_cst 0x7f2834345e88 0> max <integer_cst 0x7f2834346500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f28343667e0>>
   
    def_stmt _2 = strlen (ap_9(D));
    version:2>
# VUSE <.MEM_12(D)>
_2 = strlen (ap_9(D));

 ================== pre trace ptable ================== 
trace fucntion name:strlen 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function strlen
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_12(D)>
_2 = strlen (ap_9(D));
_2 = strlen (ap_9(D));
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:37: warning: use location
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |                                     ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
_4 = malloc (_3);
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:16: warning: use location
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |                ^
this stmt call this function :malloc
*ret_11(D) = _4;
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:14: warning: use location
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |              ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2833e85678
    type <integer_type 0x7f283435a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a738 precision:64 min <integer_cst 0x7f2834345e88 0> max <integer_cst 0x7f2834346500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f28343667e0>>
   
    def_stmt _2 = strlen (ap_9(D));
    version:2>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2833e85708
    type <pointer_type 0x7f2834361000
        type <void_type 0x7f283435af18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2834361000>>
        public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f28343669d8>>
   
    def_stmt _4 = malloc (_3);
    version:4
    ptr-info 0x7f2833e6f8e8>
# .MEM_13 = VDEF <.MEM_12(D)>
_4 = malloc (_3);

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
*ret_11(D) = _4;
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:14: warning: use location
*ret_11(D) = _4;
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:14: warning: use location
# .MEM_13 = VDEF <.MEM_12(D)>
_4 = malloc (_3);
_4 = malloc (_3);
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:16: warning: use location
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |                ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2833e85708
    type <pointer_type 0x7f2834361000
        type <void_type 0x7f283435af18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2834361000>>
        public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f28343669d8>>
   
    def_stmt _4 = malloc (_3);
    version:4
    ptr-info 0x7f2833e6f8e8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2833e857e0
    type <pointer_type 0x7f2833e5dbd0
        type <integer_type 0x7f2833e5db28 char readonly public QI
            size <integer_cst 0x7f2834345ca8 constant 8>
            unit-size <integer_cst 0x7f2834345cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a3f0 precision:8 min <integer_cst 0x7f2833e54720 -128> max <integer_cst 0x7f2833e54708 127> context <translation_unit_decl 0x7f2834350168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f2833e5dbd0>>
        public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2833e76980 fmt>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f2833e6f918>
GIMPLE_NOP

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_12(D)>
_1 = strlen (fmt_8(D));
_1 = strlen (fmt_8(D));
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:23: warning: use location
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |                       ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
_4 = malloc (_3);
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:16: warning: use location
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |                ^
this stmt call this function :malloc
*ret_11(D) = _4;
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:14: warning: use location
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |              ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2833e857e0
    type <pointer_type 0x7f2833e5dbd0
        type <integer_type 0x7f2833e5db28 char readonly public QI
            size <integer_cst 0x7f2834345ca8 constant 8>
            unit-size <integer_cst 0x7f2834345cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a3f0 precision:8 min <integer_cst 0x7f2833e54720 -128> max <integer_cst 0x7f2833e54708 127> context <translation_unit_decl 0x7f2834350168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f2833e5dbd0>>
        public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2833e76980 fmt>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f2833e6f918>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2833e85828
    type <pointer_type 0x7f2833e5da80
        type <integer_type 0x7f2833e5d9d8 char public QI
            size <integer_cst 0x7f2834345ca8 constant 8>
            unit-size <integer_cst 0x7f2834345cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a3f0 precision:8 min <integer_cst 0x7f2833e54720 -128> max <integer_cst 0x7f2833e54708 127> context <translation_unit_decl 0x7f2834350168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f2833e5da80>>
        public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2834350168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
        pointer_to_this <pointer_type 0x7f2833e5dc78>>
    var <parm_decl 0x7f2833e76a00 ap>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7f2833e6f930>
GIMPLE_NOP

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_12(D)>
_2 = strlen (ap_9(D));
_2 = strlen (ap_9(D));
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:37: warning: use location
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |                                     ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
_4 = malloc (_3);
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:16: warning: use location
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |                ^
this stmt call this function :malloc
*ret_11(D) = _4;
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:14: warning: use location
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |              ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2833e85828
    type <pointer_type 0x7f2833e5da80
        type <integer_type 0x7f2833e5d9d8 char public QI
            size <integer_cst 0x7f2834345ca8 constant 8>
            unit-size <integer_cst 0x7f2834345cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a3f0 precision:8 min <integer_cst 0x7f2833e54720 -128> max <integer_cst 0x7f2833e54708 127> context <translation_unit_decl 0x7f2834350168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f2833e5da80>>
        public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2834350168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
        pointer_to_this <pointer_type 0x7f2833e5dc78>>
    var <parm_decl 0x7f2833e76a00 ap>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7f2833e6f930>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2833e856c0
    type <integer_type 0x7f283435a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a738 precision:64 min <integer_cst 0x7f2834345e88 0> max <integer_cst 0x7f2834346500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f28343667e0>>
   
    def_stmt _3 = _1 + _2;
    version:3>
_3 = _1 + _2;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:vasprintf========= [0m
[40;42m =======pre_check_funciton:xvasprintf========= [0m
[40;42m =======start_check_funciton:xvasprintf========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f2833e85480
    type <integer_type 0x7f283435a5e8 int public SI
        size <integer_cst 0x7f2834345df8 constant 32>
        unit-size <integer_cst 0x7f2834345e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a5e8 precision:32 min <integer_cst 0x7f2834345db0 -2147483648> max <integer_cst 0x7f2834345dc8 2147483647>
        pointer_to_this <pointer_type 0x7f28343619d8>>
    var <var_decl 0x7f2833e82120 i>
    def_stmt i_10 = vasprintf (ret_6(D), fmt_7(D), ap_8(D));
    version:10>
# .MEM_12 = VDEF <.MEM_11(D)>
i_10 = vasprintf (ret_6(D), fmt_7(D), ap_8(D));

 ================== pre trace ptable ================== 
trace fucntion name:vasprintf 
[40;44m =======trace_function_path vasprintf  function_call count: 2 level :888========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function vasprintf
 
 Start check Pointer Collect  

======================================================================
_1 = *ret_6(D);
./benchmarks/tmux/leak_4/tmux_leak_4.c:68:22: warning: use location
   68 |         if (i < 0 || *ret == NULL)
      |                      ^
if (_1 == 0B)
./benchmarks/tmux/leak_4/tmux_leak_4.c:68:19: warning: use location
   68 |         if (i < 0 || *ret == NULL)
      |                   ^
# .MEM_12 = VDEF <.MEM_11(D)>
i_10 = vasprintf (ret_6(D), fmt_7(D), ap_8(D));
i_10 = vasprintf (ret_6(D), fmt_7(D), ap_8(D));
./benchmarks/tmux/leak_4/tmux_leak_4.c:66:13: warning: use location
   66 |         i = vasprintf(ret, fmt, ap);
      |             ^
this stmt call this function :vasprintf
trace fucntion name:vasprintf 
[40;44m =======trace_function_path vasprintf  function_call count: 2 level :0========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (i_10 < 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:68:12: warning: use location
   68 |         if (i < 0 || *ret == NULL)
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2833e85480
    type <integer_type 0x7f283435a5e8 int public SI
        size <integer_cst 0x7f2834345df8 constant 32>
        unit-size <integer_cst 0x7f2834345e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a5e8 precision:32 min <integer_cst 0x7f2834345db0 -2147483648> max <integer_cst 0x7f2834345dc8 2147483647>
        pointer_to_this <pointer_type 0x7f28343619d8>>
    var <var_decl 0x7f2833e82120 i>
    def_stmt i_10 = vasprintf (ret_6(D), fmt_7(D), ap_8(D));
    version:10>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2833e852d0
    type <pointer_type 0x7f28343619d8
        type <integer_type 0x7f283435a5e8 int public SI
            size <integer_cst 0x7f2834345df8 constant 32>
            unit-size <integer_cst 0x7f2834345e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a5e8 precision:32 min <integer_cst 0x7f2834345db0 -2147483648> max <integer_cst 0x7f2834345dc8 2147483647>
            pointer_to_this <pointer_type 0x7f28343619d8>>
        public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = __errno_location ();
    version:2
    ptr-info 0x7f2833e6f888>
_2 = __errno_location ();

 ================== pre trace ptable ================== 
trace fucntion name:__errno_location 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function __errno_location
 
 Start check Pointer Collect  

======================================================================
_3 = *_2;
./benchmarks/tmux/leak_4/tmux_leak_4.c:69:17: warning: use location
   69 |                 fatalx("xasprintf: %s", strerror(errno));
      |                 ^
_4 = strerror (_3);
./benchmarks/tmux/leak_4/tmux_leak_4.c:69:17: warning: use location
this stmt call this function :strerror
trace fucntion name:strerror 

 ================== trace ================== 
trace fucntion free:0 
printf ("xasprintf: %s", _4);
./benchmarks/tmux/leak_4/tmux_leak_4.c:69:17: warning: use location
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
_2 = __errno_location ();
_2 = __errno_location ();
./benchmarks/tmux/leak_4/tmux_leak_4.c:69:17: warning: use location
this stmt call this function :__errno_location
trace fucntion name:__errno_location 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2833e852d0
    type <pointer_type 0x7f28343619d8
        type <integer_type 0x7f283435a5e8 int public SI
            size <integer_cst 0x7f2834345df8 constant 32>
            unit-size <integer_cst 0x7f2834345e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a5e8 precision:32 min <integer_cst 0x7f2834345db0 -2147483648> max <integer_cst 0x7f2834345dc8 2147483647>
            pointer_to_this <pointer_type 0x7f28343619d8>>
        public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = __errno_location ();
    version:2
    ptr-info 0x7f2833e6f888>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2833e85360
    type <integer_type 0x7f283435a5e8 int public SI
        size <integer_cst 0x7f2834345df8 constant 32>
        unit-size <integer_cst 0x7f2834345e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a5e8 precision:32 min <integer_cst 0x7f2834345db0 -2147483648> max <integer_cst 0x7f2834345dc8 2147483647>
        pointer_to_this <pointer_type 0x7f28343619d8>>
   
    def_stmt _4 = strerror (_3);
    version:4>
# .MEM_13 = VDEF <.MEM_12>
_4 = strerror (_3);

 ================== pre trace ptable ================== 
trace fucntion name:strerror 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function strerror
 
 Start check Pointer Collect  

======================================================================
# .MEM_13 = VDEF <.MEM_12>
_4 = strerror (_3);
_4 = strerror (_3);
./benchmarks/tmux/leak_4/tmux_leak_4.c:69:17: warning: use location
this stmt call this function :strerror
trace fucntion name:strerror 

 ================== trace ================== 
trace fucntion free:0 
printf ("xasprintf: %s", _4);
./benchmarks/tmux/leak_4/tmux_leak_4.c:69:17: warning: use location
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2833e85360
    type <integer_type 0x7f283435a5e8 int public SI
        size <integer_cst 0x7f2834345df8 constant 32>
        unit-size <integer_cst 0x7f2834345e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a5e8 precision:32 min <integer_cst 0x7f2834345db0 -2147483648> max <integer_cst 0x7f2834345dc8 2147483647>
        pointer_to_this <pointer_type 0x7f28343619d8>>
   
    def_stmt _4 = strerror (_3);
    version:4>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2833e853a8
    type <pointer_type 0x7f2833e5dc78
        type <pointer_type 0x7f2833e5da80 type <integer_type 0x7f2833e5d9d8 char>
            public unsigned DI
            size <integer_cst 0x7f2834345bb8 constant 64>
            unit-size <integer_cst 0x7f2834345bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2834350168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f2833e5dc78>>
        public unsigned DI size <integer_cst 0x7f2834345bb8 64> unit-size <integer_cst 0x7f2834345bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2833e76700 ret>
    def_stmt GIMPLE_NOP
    version:6
    ptr-info 0x7f2833e6f8a0>
GIMPLE_NOP

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
_1 = *ret_6(D);
./benchmarks/tmux/leak_4/tmux_leak_4.c:68:22: warning: use location
   68 |         if (i < 0 || *ret == NULL)
      |                      ^
if (_1 == 0B)
./benchmarks/tmux/leak_4/tmux_leak_4.c:68:19: warning: use location
   68 |         if (i < 0 || *ret == NULL)
      |                   ^
# .MEM_12 = VDEF <.MEM_11(D)>
i_10 = vasprintf (ret_6(D), fmt_7(D), ap_8(D));
i_10 = vasprintf (ret_6(D), fmt_7(D), ap_8(D));
./benchmarks/tmux/leak_4/tmux_leak_4.c:66:13: warning: use location
   66 |         i = vasprintf(ret, fmt, ap);
      |             ^
this stmt call this function :vasprintf
trace fucntion name:vasprintf 
[40;44m =======trace_function_path vasprintf  function_call count: 2 level :0========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (i_10 < 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:68:12: warning: use location
   68 |         if (i < 0 || *ret == NULL)
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2833e853a8
    type <pointer_type 0x7f2833e5dc78
        type <pointer_type 0x7f2833e5da80 type <integer_type 0x7f2833e5d9d8 char>
            public unsigned DI
            size <integer_cst 0x7f2834345bb8 constant 64>
            unit-size <integer_cst 0x7f2834345bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2834350168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f2833e5dc78>>
        public unsigned DI size <integer_cst 0x7f2834345bb8 64> unit-size <integer_cst 0x7f2834345bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2833e76700 ret>
    def_stmt GIMPLE_NOP
    version:6
    ptr-info 0x7f2833e6f8a0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2833e853f0
    type <pointer_type 0x7f2833e5dbd0
        type <integer_type 0x7f2833e5db28 char readonly public QI
            size <integer_cst 0x7f2834345ca8 constant 8>
            unit-size <integer_cst 0x7f2834345cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a3f0 precision:8 min <integer_cst 0x7f2833e54720 -128> max <integer_cst 0x7f2833e54708 127> context <translation_unit_decl 0x7f2834350168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f2833e5dbd0>>
        public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2833e76780 fmt>
    def_stmt GIMPLE_NOP
    version:7
    ptr-info 0x7f2833e6f8b8>
GIMPLE_NOP

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_12 = VDEF <.MEM_11(D)>
i_10 = vasprintf (ret_6(D), fmt_7(D), ap_8(D));
i_10 = vasprintf (ret_6(D), fmt_7(D), ap_8(D));
./benchmarks/tmux/leak_4/tmux_leak_4.c:66:13: warning: use location
   66 |         i = vasprintf(ret, fmt, ap);
      |             ^
this stmt call this function :vasprintf
trace fucntion name:vasprintf 
[40;44m =======trace_function_path vasprintf  function_call count: 2 level :0========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (i_10 < 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:68:12: warning: use location
   68 |         if (i < 0 || *ret == NULL)
      |            ^
_1 = *ret_6(D);
./benchmarks/tmux/leak_4/tmux_leak_4.c:68:22: warning: use location
   68 |         if (i < 0 || *ret == NULL)
      |                      ^
if (_1 == 0B)
./benchmarks/tmux/leak_4/tmux_leak_4.c:68:19: warning: use location
   68 |         if (i < 0 || *ret == NULL)
      |                   ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2833e853f0
    type <pointer_type 0x7f2833e5dbd0
        type <integer_type 0x7f2833e5db28 char readonly public QI
            size <integer_cst 0x7f2834345ca8 constant 8>
            unit-size <integer_cst 0x7f2834345cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a3f0 precision:8 min <integer_cst 0x7f2833e54720 -128> max <integer_cst 0x7f2833e54708 127> context <translation_unit_decl 0x7f2834350168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f2833e5dbd0>>
        public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2833e76780 fmt>
    def_stmt GIMPLE_NOP
    version:7
    ptr-info 0x7f2833e6f8b8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2833e85438
    type <pointer_type 0x7f2833e5da80
        type <integer_type 0x7f2833e5d9d8 char public QI
            size <integer_cst 0x7f2834345ca8 constant 8>
            unit-size <integer_cst 0x7f2834345cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a3f0 precision:8 min <integer_cst 0x7f2833e54720 -128> max <integer_cst 0x7f2833e54708 127> context <translation_unit_decl 0x7f2834350168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f2833e5da80>>
        public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2834350168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
        pointer_to_this <pointer_type 0x7f2833e5dc78>>
    var <parm_decl 0x7f2833e76800 ap>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f2833e6f8d0>
GIMPLE_NOP

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_12 = VDEF <.MEM_11(D)>
i_10 = vasprintf (ret_6(D), fmt_7(D), ap_8(D));
i_10 = vasprintf (ret_6(D), fmt_7(D), ap_8(D));
./benchmarks/tmux/leak_4/tmux_leak_4.c:66:13: warning: use location
   66 |         i = vasprintf(ret, fmt, ap);
      |             ^
this stmt call this function :vasprintf
trace fucntion name:vasprintf 
[40;44m =======trace_function_path vasprintf  function_call count: 2 level :0========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (i_10 < 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:68:12: warning: use location
   68 |         if (i < 0 || *ret == NULL)
      |            ^
_1 = *ret_6(D);
./benchmarks/tmux/leak_4/tmux_leak_4.c:68:22: warning: use location
   68 |         if (i < 0 || *ret == NULL)
      |                      ^
if (_1 == 0B)
./benchmarks/tmux/leak_4/tmux_leak_4.c:68:19: warning: use location
   68 |         if (i < 0 || *ret == NULL)
      |                   ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2833e85438
    type <pointer_type 0x7f2833e5da80
        type <integer_type 0x7f2833e5d9d8 char public QI
            size <integer_cst 0x7f2834345ca8 constant 8>
            unit-size <integer_cst 0x7f2834345cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a3f0 precision:8 min <integer_cst 0x7f2833e54720 -128> max <integer_cst 0x7f2833e54708 127> context <translation_unit_decl 0x7f2834350168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f2833e5da80>>
        public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2834350168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
        pointer_to_this <pointer_type 0x7f2833e5dc78>>
    var <parm_decl 0x7f2833e76800 ap>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f2833e6f8d0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2833e85318
    type <integer_type 0x7f283435a5e8 int public SI
        size <integer_cst 0x7f2834345df8 constant 32>
        unit-size <integer_cst 0x7f2834345e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a5e8 precision:32 min <integer_cst 0x7f2834345db0 -2147483648> max <integer_cst 0x7f2834345dc8 2147483647>
        pointer_to_this <pointer_type 0x7f28343619d8>>
   
    def_stmt _3 = *_2;
    version:3>
# VUSE <.MEM_12>
_3 = *_2;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_13 = VDEF <.MEM_12>
_4 = strerror (_3);
_4 = strerror (_3);
./benchmarks/tmux/leak_4/tmux_leak_4.c:69:17: warning: use location
   69 |                 fatalx("xasprintf: %s", strerror(errno));
      |                 ^
this stmt call this function :strerror
trace fucntion name:strerror 

 ================== trace ================== 
trace fucntion free:0 
printf ("xasprintf: %s", _4);
./benchmarks/tmux/leak_4/tmux_leak_4.c:69:17: warning: use location
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2833e85318
    type <integer_type 0x7f283435a5e8 int public SI
        size <integer_cst 0x7f2834345df8 constant 32>
        unit-size <integer_cst 0x7f2834345e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a5e8 precision:32 min <integer_cst 0x7f2834345db0 -2147483648> max <integer_cst 0x7f2834345dc8 2147483647>
        pointer_to_this <pointer_type 0x7f28343619d8>>
   
    def_stmt _3 = *_2;
    version:3>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:xvasprintf========= [0m
[40;42m =======pre add _ fucntion:getenv========= [0m
[40;33m =======POP node_fun stack:getenv========= [0m
[40;42m =======pre add _ fucntion:getuid========= [0m
[40;33m =======POP node_fun stack:getuid========= [0m
[40;42m =======pre_check_funciton:make_label========= [0m
[40;42m =======start_check_funciton:make_label========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f283434d678
    type <integer_type 0x7f283435a5e8 int public SI
        size <integer_cst 0x7f2834345df8 constant 32>
        unit-size <integer_cst 0x7f2834345e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a5e8 precision:32 min <integer_cst 0x7f2834345db0 -2147483648> max <integer_cst 0x7f2834345dc8 2147483647>
        pointer_to_this <pointer_type 0x7f28343619d8>>
   
    def_stmt _1 = getuid ();
    version:1>
# .MEM_42 = VDEF <.MEM_41(D)>
_1 = getuid ();

 ================== pre trace ptable ================== 
trace fucntion name:getuid 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function getuid
 
 Start check Pointer Collect  

======================================================================
uid_26 = (uid_t) _1;
./benchmarks/tmux/leak_4/tmux_leak_4.c:84:13: warning: use location
   84 |         uid = getuid();
      |             ^
uid_26 = (uid_t) _1;
./benchmarks/tmux/leak_4/tmux_leak_4.c:84:13: warning: use location
# .MEM_42 = VDEF <.MEM_41(D)>
_1 = getuid ();
_1 = getuid ();
./benchmarks/tmux/leak_4/tmux_leak_4.c:84:15: warning: use location
   84 |         uid = getuid();
      |               ^
this stmt call this function :getuid
trace fucntion name:getuid 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f283434d678
    type <integer_type 0x7f283435a5e8 int public SI
        size <integer_cst 0x7f2834345df8 constant 32>
        unit-size <integer_cst 0x7f2834345e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a5e8 precision:32 min <integer_cst 0x7f2834345db0 -2147483648> max <integer_cst 0x7f2834345dc8 2147483647>
        pointer_to_this <pointer_type 0x7f28343619d8>>
   
    def_stmt _1 = getuid ();
    version:1>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: use location
  113 |         free(base);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f283434dc60
    type <pointer_type 0x7f2833e5da80
        type <integer_type 0x7f2833e5d9d8 char public QI
            size <integer_cst 0x7f2834345ca8 constant 8>
            unit-size <integer_cst 0x7f2834345cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a3f0 precision:8 min <integer_cst 0x7f2833e54720 -128> max <integer_cst 0x7f2833e54708 127> context <translation_unit_decl 0x7f2834350168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f2833e5da80>>
        public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2834350168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
        pointer_to_this <pointer_type 0x7f2833e5dc78>>
    var <var_decl 0x7f2834bedea0 s>
    def_stmt s_28 = getenv ("TMUX_TMPDIR");
    version:28
    ptr-info 0x7f2833e6f780>
# .MEM_43 = VDEF <.MEM_42>
s_28 = getenv ("TMUX_TMPDIR");

 ================== pre trace ptable ================== 
trace fucntion name:getenv 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function getenv
 
 Start check Pointer Collect  

======================================================================
# .MEM_43 = VDEF <.MEM_42>
s_28 = getenv ("TMUX_TMPDIR");
s_28 = getenv ("TMUX_TMPDIR");
./benchmarks/tmux/leak_4/tmux_leak_4.c:86:18: warning: use location
   86 |         if ((s = getenv("TMUX_TMPDIR")) != NULL && *s != '\0')
      |                  ^
this stmt call this function :getenv
trace fucntion name:getenv 

 ================== trace ================== 
trace fucntion free:0 
i_57 = xvasprintf (&base, "%s/tmux-", s_28);
./benchmarks/tmux/leak_4/tmux_leak_4.c:56:13: warning: use location
   56 |         i = xvasprintf(ret, fmt, ap);
      |             ^
this stmt call this function :xvasprintf
trace fucntion name:xvasprintf 
[40;44m =======trace_function_path xvasprintf  function_call count: 5 level :0========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:strerror========= [0m
[40;46m =======add node_fun stack:strerror========= [0m
[40;42m =======pre add _ fucntion:__errno_location========= [0m
[40;46m =======add node_fun stack:__errno_location========= [0m
[40;42m =======pre add _ fucntion:vasprintf========= [0m
[40;46m =======add node_fun stack:vasprintf========= [0m
[40;44m =======trace_function_path vasprintf  function_call count: 2 level :1========  [0m
[40;36m ======= node_fun:vasprintf========= [0m
[40;36m ======= find relate stmt with s ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
_2 = *s_28;
./benchmarks/tmux/leak_4/tmux_leak_4.c:86:52: warning: use location
   86 |         if ((s = getenv("TMUX_TMPDIR")) != NULL && *s != '\0')
      |                                                    ^
if (_2 != 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:86:49: warning: use location
   86 |         if ((s = getenv("TMUX_TMPDIR")) != NULL && *s != '\0')
      |                                                 ^
if (s_28 != 0B)
./benchmarks/tmux/leak_4/tmux_leak_4.c:86:12: warning: use location
   86 |         if ((s = getenv("TMUX_TMPDIR")) != NULL && *s != '\0')
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f283434dc60
    type <pointer_type 0x7f2833e5da80
        type <integer_type 0x7f2833e5d9d8 char public QI
            size <integer_cst 0x7f2834345ca8 constant 8>
            unit-size <integer_cst 0x7f2834345cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a3f0 precision:8 min <integer_cst 0x7f2833e54720 -128> max <integer_cst 0x7f2833e54708 127> context <translation_unit_decl 0x7f2834350168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f2833e5da80>>
        public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2834350168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
        pointer_to_this <pointer_type 0x7f2833e5dc78>>
    var <var_decl 0x7f2834bedea0 s>
    def_stmt s_28 = getenv ("TMUX_TMPDIR");
    version:28
    ptr-info 0x7f2833e6f780>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: use location
  113 |         free(base);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2833e7b3a8
    type <integer_type 0x7f283435a5e8 int public SI
        size <integer_cst 0x7f2834345df8 constant 32>
        unit-size <integer_cst 0x7f2834345e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a5e8 precision:32 min <integer_cst 0x7f2834345db0 -2147483648> max <integer_cst 0x7f2834345dc8 2147483647>
        pointer_to_this <pointer_type 0x7f28343619d8>>
    var <var_decl 0x7f2833e776c0 i>
    def_stmt i_57 = xvasprintf (&base, "%s/tmux-", s_28);
    version:57>
# .MEM_82 = VDEF <.MEM_43>
i_57 = xvasprintf (&base, "%s/tmux-", s_28);

 ================== pre trace ptable ================== 
trace fucntion name:xvasprintf 
[40;44m =======trace_function_path xvasprintf  function_call count: 5 level :888========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:strerror========= [0m
[40;46m =======add node_fun stack:strerror========= [0m
[40;42m =======pre add _ fucntion:__errno_location========= [0m
[40;46m =======add node_fun stack:__errno_location========= [0m
[40;42m =======pre add _ fucntion:vasprintf========= [0m
[40;46m =======add node_fun stack:vasprintf========= [0m
[40;44m =======trace_function_path vasprintf  function_call count: 2 level :889========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function xvasprintf
 
 Start check Pointer Collect  

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :xvasprintf
# .MEM_82 = VDEF <.MEM_43>
i_57 = xvasprintf (&base, "%s/tmux-", s_28);
./benchmarks/tmux/leak_4/tmux_leak_4.c:56:13: warning: use location
   56 |         i = xvasprintf(ret, fmt, ap);
      |             ^
# .MEM_83 = VDEF <.MEM_43>
i_58 = xvasprintf (&base, "%s/tmux-", "/tmp");
./benchmarks/tmux/leak_4/tmux_leak_4.c:56:13: warning: use location
   56 |         i = xvasprintf(ret, fmt, ap);
      |             ^
_3 = base;
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:13: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |             ^
_4 = mkdir (_3, 0);
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:13: warning: use location
this stmt call this function :mkdir
trace fucntion name:mkdir 

 ================== trace ================== 
trace fucntion free:0 
if (_4 != 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:12: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |            ^
_7 = base;
./benchmarks/tmux/leak_4/tmux_leak_4.c:94:13: warning: use location
   94 |         if (lstat(base, &sb) != 0)
      |             ^
_8 = lstat (_7, &sb);
./benchmarks/tmux/leak_4/tmux_leak_4.c:94:13: warning: use location
this stmt call this function :lstat
trace fucntion name:lstat 

 ================== trace ================== 
trace fucntion free:0 
_14 = base;
./benchmarks/tmux/leak_4/tmux_leak_4.c:105:13: warning: use location
  105 |         if (realpath(base, resolved) == NULL)
      |             ^
_15 = realpath (_14, &resolved);
./benchmarks/tmux/leak_4/tmux_leak_4.c:105:13: warning: use location
this stmt call this function :realpath
trace fucntion name:realpath 

 ================== trace ================== 
trace fucntion free:0 
if (_15 == 0B)
./benchmarks/tmux/leak_4/tmux_leak_4.c:105:12: warning: use location
  105 |         if (realpath(base, resolved) == NULL)
      |            ^
_16 = base;
./benchmarks/tmux/leak_4/tmux_leak_4.c:106:17: warning: use location
  106 |                 strlcpy(resolved, base, sizeof resolved);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
s_60 = PHI <_16(16), s_61(18)>
lto1: warning: use location
this stmt have mutiple branch ---realpath-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = *s_60;
./benchmarks/tmux/leak_4/tmux_leak_4.c:28:37: warning: use location
   28 |                         if ((*d++ = *s++) == 0)
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_62 = _64;
./benchmarks/tmux/leak_4/tmux_leak_4.c:28:35: warning: use location
   28 |                         if ((*d++ = *s++) == 0)
      |                                   ^
s_77 = PHI <s_61(18), _16(16), s_61(17)>
lto1: warning: use location
this stmt have mutiple branch ---realpath-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
s_70 = PHI <s_77(20), s_71(21)>
lto1: warning: use location
this stmt have mutiple branch ---realpath-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_72 = *s_70;
./benchmarks/tmux/leak_4/tmux_leak_4.c:37:24: warning: use location
   37 |                 while (*s++)
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_72 != 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:37:24: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
s_71 = s_70 + 1;
./benchmarks/tmux/leak_4/tmux_leak_4.c:37:26: warning: use location
   37 |                 while (*s++)
      |                          ^
s_73 = PHI <s_77(19), s_71(21)>
lto1: warning: use location
this stmt have mutiple branch ---realpath-----
_74 = s_73 - _16;
./benchmarks/tmux/leak_4/tmux_leak_4.c:41:18: warning: use location
   41 |         return(s - src - 1);        /* count does not include NUL */
      |                  ^
_75 = _74 + -1;
./benchmarks/tmux/leak_4/tmux_leak_4.c:41:24: warning: use location
   41 |         return(s - src - 1);        /* count does not include NUL */
      |                        ^
_76 = (long unsigned int) _75;
./benchmarks/tmux/leak_4/tmux_leak_4.c:41:24: warning: use location
_18 = base;
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: use location
  113 |         free(base);
      |         ^
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: use location
this stmt call this function :free

 ================== find free stmt ================== 
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
# .MEM_82 = VDEF <.MEM_43>
i_57 = xvasprintf (&base, "%s/tmux-", s_28);
i_57 = xvasprintf (&base, "%s/tmux-", s_28);
./benchmarks/tmux/leak_4/tmux_leak_4.c:56:13: warning: use location
   56 |         i = xvasprintf(ret, fmt, ap);
      |             ^
this stmt call this function :xvasprintf
trace fucntion name:xvasprintf 
[40;44m =======trace_function_path xvasprintf  function_call count: 5 level :0========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:strerror========= [0m
[40;46m =======add node_fun stack:strerror========= [0m
[40;42m =======pre add _ fucntion:__errno_location========= [0m
[40;46m =======add node_fun stack:__errno_location========= [0m
[40;42m =======pre add _ fucntion:vasprintf========= [0m
[40;46m =======add node_fun stack:vasprintf========= [0m
[40;44m =======trace_function_path vasprintf  function_call count: 2 level :1========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:1 
# .MEM_82 = VDEF <.MEM_43>
i_57 = xvasprintf (&base, "%s/tmux-", s_28);
i_57 = xvasprintf (&base, "%s/tmux-", s_28);
./benchmarks/tmux/leak_4/tmux_leak_4.c:56:13: warning: use location
this stmt call this function :xvasprintf
trace fucntion name:xvasprintf 
[40;44m =======trace_function_path xvasprintf  function_call count: 5 level :0========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:strerror========= [0m
[40;46m =======add node_fun stack:strerror========= [0m
[40;42m =======pre add _ fucntion:__errno_location========= [0m
[40;46m =======add node_fun stack:__errno_location========= [0m
[40;42m =======pre add _ fucntion:vasprintf========= [0m
[40;46m =======add node_fun stack:vasprintf========= [0m
[40;44m =======trace_function_path vasprintf  function_call count: 2 level :1========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2833e7b3a8
    type <integer_type 0x7f283435a5e8 int public SI
        size <integer_cst 0x7f2834345df8 constant 32>
        unit-size <integer_cst 0x7f2834345e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a5e8 precision:32 min <integer_cst 0x7f2834345db0 -2147483648> max <integer_cst 0x7f2834345dc8 2147483647>
        pointer_to_this <pointer_type 0x7f28343619d8>>
    var <var_decl 0x7f2833e776c0 i>
    def_stmt i_57 = xvasprintf (&base, "%s/tmux-", s_28);
    version:57>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: use location
  113 |         free(base);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: free in this location
[40;35m target gimple type: ssa_name [0m
s_60 = PHI <_16(16), s_61(18)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: free in this location
[40;35m target gimple type: ssa_name [0m
s_60 = PHI <_16(16), s_61(18)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: free in this location
[40;35m target gimple type: ssa_name [0m
s_77 = PHI <s_61(18), _16(16), s_61(17)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: free in this location
[40;35m target gimple type: ssa_name [0m
s_77 = PHI <s_61(18), _16(16), s_61(17)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: free in this location
[40;35m target gimple type: ssa_name [0m
s_70 = PHI <s_77(20), s_71(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: free in this location
[40;35m target gimple type: ssa_name [0m
s_70 = PHI <s_77(20), s_71(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: free in this location
[40;35m target gimple type: ssa_name [0m
s_73 = PHI <s_77(19), s_71(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: free in this location
[40;35m target gimple type: ssa_name [0m
s_73 = PHI <s_77(19), s_71(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2833e7b3f0
    type <integer_type 0x7f283435a5e8 int public SI
        size <integer_cst 0x7f2834345df8 constant 32>
        unit-size <integer_cst 0x7f2834345e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a5e8 precision:32 min <integer_cst 0x7f2834345db0 -2147483648> max <integer_cst 0x7f2834345dc8 2147483647>
        pointer_to_this <pointer_type 0x7f28343619d8>>
    var <var_decl 0x7f2833e77990 i>
    def_stmt i_58 = xvasprintf (&base, "%s/tmux-", "/tmp");
    version:58>
# .MEM_83 = VDEF <.MEM_43>
i_58 = xvasprintf (&base, "%s/tmux-", "/tmp");

 ================== pre trace ptable ================== 
trace fucntion name:xvasprintf 
[40;44m =======trace_function_path xvasprintf  function_call count: 5 level :888========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:strerror========= [0m
[40;46m =======add node_fun stack:strerror========= [0m
[40;42m =======pre add _ fucntion:__errno_location========= [0m
[40;46m =======add node_fun stack:__errno_location========= [0m
[40;42m =======pre add _ fucntion:vasprintf========= [0m
[40;46m =======add node_fun stack:vasprintf========= [0m
[40;44m =======trace_function_path vasprintf  function_call count: 2 level :889========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function xvasprintf
 
 Start check Pointer Collect  

======================================================================
# .MEM_83 = VDEF <.MEM_43>
i_58 = xvasprintf (&base, "%s/tmux-", "/tmp");
i_58 = xvasprintf (&base, "%s/tmux-", "/tmp");
./benchmarks/tmux/leak_4/tmux_leak_4.c:56:13: warning: use location
   56 |         i = xvasprintf(ret, fmt, ap);
      |             ^
this stmt call this function :xvasprintf
trace fucntion name:xvasprintf 
[40;44m =======trace_function_path xvasprintf  function_call count: 5 level :0========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:strerror========= [0m
[40;46m =======add node_fun stack:strerror========= [0m
[40;42m =======pre add _ fucntion:__errno_location========= [0m
[40;46m =======add node_fun stack:__errno_location========= [0m
[40;42m =======pre add _ fucntion:vasprintf========= [0m
[40;46m =======add node_fun stack:vasprintf========= [0m
[40;44m =======trace_function_path vasprintf  function_call count: 2 level :1========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
_3 = base;
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:13: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |             ^
_4 = mkdir (_3, 0);
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:13: warning: use location
this stmt call this function :mkdir
trace fucntion name:mkdir 

 ================== trace ================== 
trace fucntion free:0 
if (_4 != 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:12: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |            ^
_7 = base;
./benchmarks/tmux/leak_4/tmux_leak_4.c:94:13: warning: use location
   94 |         if (lstat(base, &sb) != 0)
      |             ^
_8 = lstat (_7, &sb);
./benchmarks/tmux/leak_4/tmux_leak_4.c:94:13: warning: use location
this stmt call this function :lstat
trace fucntion name:lstat 

 ================== trace ================== 
trace fucntion free:0 
_14 = base;
./benchmarks/tmux/leak_4/tmux_leak_4.c:105:13: warning: use location
  105 |         if (realpath(base, resolved) == NULL)
      |             ^
_15 = realpath (_14, &resolved);
./benchmarks/tmux/leak_4/tmux_leak_4.c:105:13: warning: use location
this stmt call this function :realpath
trace fucntion name:realpath 

 ================== trace ================== 
trace fucntion free:0 
if (_15 == 0B)
./benchmarks/tmux/leak_4/tmux_leak_4.c:105:12: warning: use location
  105 |         if (realpath(base, resolved) == NULL)
      |            ^
_16 = base;
./benchmarks/tmux/leak_4/tmux_leak_4.c:106:17: warning: use location
  106 |                 strlcpy(resolved, base, sizeof resolved);
      |                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
s_60 = PHI <_16(16), s_61(18)>
lto1: warning: use location
this stmt have mutiple branch ---realpath-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = *s_60;
./benchmarks/tmux/leak_4/tmux_leak_4.c:28:37: warning: use location
   28 |                         if ((*d++ = *s++) == 0)
      |                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*d_62 = _64;
./benchmarks/tmux/leak_4/tmux_leak_4.c:28:35: warning: use location
   28 |                         if ((*d++ = *s++) == 0)
      |                                   ^
s_77 = PHI <s_61(18), _16(16), s_61(17)>
lto1: warning: use location
this stmt have mutiple branch ---realpath-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
s_70 = PHI <s_77(20), s_71(21)>
lto1: warning: use location
this stmt have mutiple branch ---realpath-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_72 = *s_70;
./benchmarks/tmux/leak_4/tmux_leak_4.c:37:24: warning: use location
   37 |                 while (*s++)
      |                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_72 != 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:37:24: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
s_71 = s_70 + 1;
./benchmarks/tmux/leak_4/tmux_leak_4.c:37:26: warning: use location
   37 |                 while (*s++)
      |                          ^
s_73 = PHI <s_77(19), s_71(21)>
lto1: warning: use location
this stmt have mutiple branch ---realpath-----
_74 = s_73 - _16;
./benchmarks/tmux/leak_4/tmux_leak_4.c:41:18: warning: use location
   41 |         return(s - src - 1);        /* count does not include NUL */
      |                  ^
_75 = _74 + -1;
./benchmarks/tmux/leak_4/tmux_leak_4.c:41:24: warning: use location
   41 |         return(s - src - 1);        /* count does not include NUL */
      |                        ^
_76 = (long unsigned int) _75;
./benchmarks/tmux/leak_4/tmux_leak_4.c:41:24: warning: use location
_18 = base;
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: use location
  113 |         free(base);
      |         ^
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: use location
this stmt call this function :free

 ================== find free stmt ================== 
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2833e7b3f0
    type <integer_type 0x7f283435a5e8 int public SI
        size <integer_cst 0x7f2834345df8 constant 32>
        unit-size <integer_cst 0x7f2834345e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a5e8 precision:32 min <integer_cst 0x7f2834345db0 -2147483648> max <integer_cst 0x7f2834345dc8 2147483647>
        pointer_to_this <pointer_type 0x7f28343619d8>>
    var <var_decl 0x7f2833e77990 i>
    def_stmt i_58 = xvasprintf (&base, "%s/tmux-", "/tmp");
    version:58>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: use location

 ================== Start Use after free Check ================== 

============================================================
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: free in this location
[40;35m target gimple type: ssa_name [0m
s_60 = PHI <_16(16), s_61(18)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: free in this location
[40;35m target gimple type: ssa_name [0m
s_60 = PHI <_16(16), s_61(18)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: free in this location
[40;35m target gimple type: ssa_name [0m
s_77 = PHI <s_61(18), _16(16), s_61(17)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: free in this location
[40;35m target gimple type: ssa_name [0m
s_77 = PHI <s_61(18), _16(16), s_61(17)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: free in this location
[40;35m target gimple type: ssa_name [0m
s_70 = PHI <s_77(20), s_71(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: free in this location
[40;35m target gimple type: ssa_name [0m
s_70 = PHI <s_77(20), s_71(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: free in this location
[40;35m target gimple type: ssa_name [0m
s_73 = PHI <s_77(19), s_71(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: free in this location
[40;35m target gimple type: ssa_name [0m
s_73 = PHI <s_77(19), s_71(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f283434d750
    type <integer_type 0x7f283435a5e8 int public SI
        size <integer_cst 0x7f2834345df8 constant 32>
        unit-size <integer_cst 0x7f2834345e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a5e8 precision:32 min <integer_cst 0x7f2834345db0 -2147483648> max <integer_cst 0x7f2834345dc8 2147483647>
        pointer_to_this <pointer_type 0x7f28343619d8>>
   
    def_stmt _4 = mkdir (_3, 0);
    version:4>
# .MEM_46 = VDEF <.MEM_38>
_4 = mkdir (_3, 0);

 ================== pre trace ptable ================== 
trace fucntion name:mkdir 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function mkdir
 
 Start check Pointer Collect  

======================================================================
# .MEM_46 = VDEF <.MEM_38>
_4 = mkdir (_3, 0);
_4 = mkdir (_3, 0);
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:13: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |             ^
this stmt call this function :mkdir
trace fucntion name:mkdir 

 ================== trace ================== 
trace fucntion free:0 
if (_4 != 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:12: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f283434d750
    type <integer_type 0x7f283435a5e8 int public SI
        size <integer_cst 0x7f2834345df8 constant 32>
        unit-size <integer_cst 0x7f2834345e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a5e8 precision:32 min <integer_cst 0x7f2834345db0 -2147483648> max <integer_cst 0x7f2834345dc8 2147483647>
        pointer_to_this <pointer_type 0x7f28343619d8>>
   
    def_stmt _4 = mkdir (_3, 0);
    version:4>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: use location
  113 |         free(base);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f283434d798
    type <pointer_type 0x7f28343619d8
        type <integer_type 0x7f283435a5e8 int public SI
            size <integer_cst 0x7f2834345df8 constant 32>
            unit-size <integer_cst 0x7f2834345e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a5e8 precision:32 min <integer_cst 0x7f2834345db0 -2147483648> max <integer_cst 0x7f2834345dc8 2147483647>
            pointer_to_this <pointer_type 0x7f28343619d8>>
        public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = __errno_location ();
    version:5
    ptr-info 0x7f2833e6f678>
_5 = __errno_location ();

 ================== pre trace ptable ================== 
trace fucntion name:__errno_location 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function __errno_location
 
 Start check Pointer Collect  

======================================================================
_6 = *_5;
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:42: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |                                          ^
if (_6 != 17)
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:39: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |                                       ^
_5 = __errno_location ();
_5 = __errno_location ();
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:42: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |                                          ^
this stmt call this function :__errno_location
trace fucntion name:__errno_location 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f283434d798
    type <pointer_type 0x7f28343619d8
        type <integer_type 0x7f283435a5e8 int public SI
            size <integer_cst 0x7f2834345df8 constant 32>
            unit-size <integer_cst 0x7f2834345e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a5e8 precision:32 min <integer_cst 0x7f2834345db0 -2147483648> max <integer_cst 0x7f2834345dc8 2147483647>
            pointer_to_this <pointer_type 0x7f28343619d8>>
        public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = __errno_location ();
    version:5
    ptr-info 0x7f2833e6f678>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: use location
  113 |         free(base);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f283434d870
    type <integer_type 0x7f283435a5e8 int public SI
        size <integer_cst 0x7f2834345df8 constant 32>
        unit-size <integer_cst 0x7f2834345e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a5e8 precision:32 min <integer_cst 0x7f2834345db0 -2147483648> max <integer_cst 0x7f2834345dc8 2147483647>
        pointer_to_this <pointer_type 0x7f28343619d8>>
   
    def_stmt _8 = lstat (_7, &sb);
    version:8>
# .MEM_47 = VDEF <.MEM_46>
_8 = lstat (_7, &sb);

 ================== pre trace ptable ================== 
trace fucntion name:lstat 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function lstat
 
 Start check Pointer Collect  

======================================================================
# .MEM_47 = VDEF <.MEM_46>
_8 = lstat (_7, &sb);
_8 = lstat (_7, &sb);
./benchmarks/tmux/leak_4/tmux_leak_4.c:94:13: warning: use location
   94 |         if (lstat(base, &sb) != 0)
      |             ^
this stmt call this function :lstat
trace fucntion name:lstat 

 ================== trace ================== 
trace fucntion free:0 
if (_8 != 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:94:12: warning: use location
   94 |         if (lstat(base, &sb) != 0)
      |            ^
_9 = sb.st_mode;
./benchmarks/tmux/leak_4/tmux_leak_4.c:96:14: warning: use location
   96 |         if (!S_ISDIR(sb.st_mode)) {
      |              ^
_10 = _9 & 61440;
./benchmarks/tmux/leak_4/tmux_leak_4.c:96:14: warning: use location
if (_10 != 16384)
./benchmarks/tmux/leak_4/tmux_leak_4.c:96:12: warning: use location
   96 |         if (!S_ISDIR(sb.st_mode)) {
      |            ^
_12 = sb.st_uid;
./benchmarks/tmux/leak_4/tmux_leak_4.c:100:15: warning: use location
  100 |         if (sb.st_uid != uid || (sb.st_mode & S_IRWXO) != 0) {
      |               ^
if (_12 != uid_26)
./benchmarks/tmux/leak_4/tmux_leak_4.c:100:12: warning: use location
  100 |         if (sb.st_uid != uid || (sb.st_mode & S_IRWXO) != 0) {
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f283434d870
    type <integer_type 0x7f283435a5e8 int public SI
        size <integer_cst 0x7f2834345df8 constant 32>
        unit-size <integer_cst 0x7f2834345e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a5e8 precision:32 min <integer_cst 0x7f2834345db0 -2147483648> max <integer_cst 0x7f2834345dc8 2147483647>
        pointer_to_this <pointer_type 0x7f28343619d8>>
   
    def_stmt _8 = lstat (_7, &sb);
    version:8>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: use location
  113 |         free(base);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f283434d948
    type <pointer_type 0x7f28343619d8
        type <integer_type 0x7f283435a5e8 int public SI
            size <integer_cst 0x7f2834345df8 constant 32>
            unit-size <integer_cst 0x7f2834345e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a5e8 precision:32 min <integer_cst 0x7f2834345db0 -2147483648> max <integer_cst 0x7f2834345dc8 2147483647>
            pointer_to_this <pointer_type 0x7f28343619d8>>
        public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _11 = __errno_location ();
    version:11
    ptr-info 0x7f2833e6f6a8>
_11 = __errno_location ();

 ================== pre trace ptable ================== 
trace fucntion name:__errno_location 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function __errno_location
 
 Start check Pointer Collect  

======================================================================
*_11 = 20;
./benchmarks/tmux/leak_4/tmux_leak_4.c:97:23: warning: use location
   97 |                 errno = ENOTDIR;
      |                       ^
*_11 = 20;
./benchmarks/tmux/leak_4/tmux_leak_4.c:97:23: warning: use location
_11 = __errno_location ();
_11 = __errno_location ();
./benchmarks/tmux/leak_4/tmux_leak_4.c:97:17: warning: use location
   97 |                 errno = ENOTDIR;
      |                 ^
this stmt call this function :__errno_location
trace fucntion name:__errno_location 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f283434d948
    type <pointer_type 0x7f28343619d8
        type <integer_type 0x7f283435a5e8 int public SI
            size <integer_cst 0x7f2834345df8 constant 32>
            unit-size <integer_cst 0x7f2834345e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a5e8 precision:32 min <integer_cst 0x7f2834345db0 -2147483648> max <integer_cst 0x7f2834345dc8 2147483647>
            pointer_to_this <pointer_type 0x7f28343619d8>>
        public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _11 = __errno_location ();
    version:11
    ptr-info 0x7f2833e6f6a8>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: use location
  113 |         free(base);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f283434d9d8
    type <pointer_type 0x7f28343619d8
        type <integer_type 0x7f283435a5e8 int public SI
            size <integer_cst 0x7f2834345df8 constant 32>
            unit-size <integer_cst 0x7f2834345e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a5e8 precision:32 min <integer_cst 0x7f2834345db0 -2147483648> max <integer_cst 0x7f2834345dc8 2147483647>
            pointer_to_this <pointer_type 0x7f28343619d8>>
        public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _13 = __errno_location ();
    version:13
    ptr-info 0x7f2833e6f6c0>
_13 = __errno_location ();

 ================== pre trace ptable ================== 
trace fucntion name:__errno_location 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function __errno_location
 
 Start check Pointer Collect  

======================================================================
*_13 = 13;
./benchmarks/tmux/leak_4/tmux_leak_4.c:101:23: warning: use location
  101 |                 errno = EACCES;
      |                       ^
*_13 = 13;
./benchmarks/tmux/leak_4/tmux_leak_4.c:101:23: warning: use location
_13 = __errno_location ();
_13 = __errno_location ();
./benchmarks/tmux/leak_4/tmux_leak_4.c:101:17: warning: use location
  101 |                 errno = EACCES;
      |                 ^
this stmt call this function :__errno_location
trace fucntion name:__errno_location 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f283434d9d8
    type <pointer_type 0x7f28343619d8
        type <integer_type 0x7f283435a5e8 int public SI
            size <integer_cst 0x7f2834345df8 constant 32>
            unit-size <integer_cst 0x7f2834345e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a5e8 precision:32 min <integer_cst 0x7f2834345db0 -2147483648> max <integer_cst 0x7f2834345dc8 2147483647>
            pointer_to_this <pointer_type 0x7f28343619d8>>
        public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _13 = __errno_location ();
    version:13
    ptr-info 0x7f2833e6f6c0>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: use location
  113 |         free(base);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f283434da68
    type <pointer_type 0x7f2833e5da80
        type <integer_type 0x7f2833e5d9d8 char public QI
            size <integer_cst 0x7f2834345ca8 constant 8>
            unit-size <integer_cst 0x7f2834345cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a3f0 precision:8 min <integer_cst 0x7f2833e54720 -128> max <integer_cst 0x7f2833e54708 127> context <translation_unit_decl 0x7f2834350168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f2833e5da80>>
        public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2834350168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
        pointer_to_this <pointer_type 0x7f2833e5dc78>>
   
    def_stmt _15 = realpath (_14, &resolved);
    version:15
    ptr-info 0x7f2833e6f6f0>
# .MEM_48 = VDEF <.MEM_47>
_15 = realpath (_14, &resolved);

 ================== pre trace ptable ================== 
trace fucntion name:realpath 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function realpath
 
 Start check Pointer Collect  

======================================================================
# .MEM_48 = VDEF <.MEM_47>
_15 = realpath (_14, &resolved);
_15 = realpath (_14, &resolved);
./benchmarks/tmux/leak_4/tmux_leak_4.c:105:13: warning: use location
  105 |         if (realpath(base, resolved) == NULL)
      |             ^
this stmt call this function :realpath
trace fucntion name:realpath 

 ================== trace ================== 
trace fucntion free:0 
if (_15 == 0B)
./benchmarks/tmux/leak_4/tmux_leak_4.c:105:12: warning: use location
  105 |         if (realpath(base, resolved) == NULL)
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f283434da68
    type <pointer_type 0x7f2833e5da80
        type <integer_type 0x7f2833e5d9d8 char public QI
            size <integer_cst 0x7f2834345ca8 constant 8>
            unit-size <integer_cst 0x7f2834345cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a3f0 precision:8 min <integer_cst 0x7f2833e54720 -128> max <integer_cst 0x7f2833e54708 127> context <translation_unit_decl 0x7f2834350168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f2833e5da80>>
        public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2834350168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
        pointer_to_this <pointer_type 0x7f2833e5dc78>>
   
    def_stmt _15 = realpath (_14, &resolved);
    version:15
    ptr-info 0x7f2833e6f6f0>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: use location
  113 |         free(base);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f283434daf8
    type <pointer_type 0x7f28343619d8
        type <integer_type 0x7f283435a5e8 int public SI
            size <integer_cst 0x7f2834345df8 constant 32>
            unit-size <integer_cst 0x7f2834345e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a5e8 precision:32 min <integer_cst 0x7f2834345db0 -2147483648> max <integer_cst 0x7f2834345dc8 2147483647>
            pointer_to_this <pointer_type 0x7f28343619d8>>
        public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _17 = __errno_location ();
    version:17
    ptr-info 0x7f2833e6f720>
_17 = __errno_location ();

 ================== pre trace ptable ================== 
trace fucntion name:__errno_location 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function __errno_location
 
 Start check Pointer Collect  

======================================================================
saved_errno_37 = *_17;
./benchmarks/tmux/leak_4/tmux_leak_4.c:112:21: warning: use location
  112 |         saved_errno = errno;
      |                     ^
*_19 = saved_errno_37;
./benchmarks/tmux/leak_4/tmux_leak_4.c:114:15: warning: use location
  114 |         errno = saved_errno;
      |               ^
_17 = __errno_location ();
_17 = __errno_location ();
./benchmarks/tmux/leak_4/tmux_leak_4.c:112:23: warning: use location
  112 |         saved_errno = errno;
      |                       ^
this stmt call this function :__errno_location
trace fucntion name:__errno_location 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f283434daf8
    type <pointer_type 0x7f28343619d8
        type <integer_type 0x7f283435a5e8 int public SI
            size <integer_cst 0x7f2834345df8 constant 32>
            unit-size <integer_cst 0x7f2834345e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a5e8 precision:32 min <integer_cst 0x7f2834345db0 -2147483648> max <integer_cst 0x7f2834345dc8 2147483647>
            pointer_to_this <pointer_type 0x7f28343619d8>>
        public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _17 = __errno_location ();
    version:17
    ptr-info 0x7f2833e6f720>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: use location
  113 |         free(base);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: free in this location
[40;35m target gimple type: mem_ref [0m
# .MEM_53 = VDEF <.MEM_52>
*_19 = saved_errno_37;
./benchmarks/tmux/leak_4/tmux_leak_4.c:114:15: warning: use location
  114 |         errno = saved_errno;
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f283434db88
    type <pointer_type 0x7f28343619d8
        type <integer_type 0x7f283435a5e8 int public SI
            size <integer_cst 0x7f2834345df8 constant 32>
            unit-size <integer_cst 0x7f2834345e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a5e8 precision:32 min <integer_cst 0x7f2834345db0 -2147483648> max <integer_cst 0x7f2834345dc8 2147483647>
            pointer_to_this <pointer_type 0x7f28343619d8>>
        public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _19 = __errno_location ();
    version:19
    ptr-info 0x7f2833e6f750>
_19 = __errno_location ();

 ================== pre trace ptable ================== 
trace fucntion name:__errno_location 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function __errno_location
 
 Start check Pointer Collect  

======================================================================
*_19 = saved_errno_37;
./benchmarks/tmux/leak_4/tmux_leak_4.c:114:15: warning: use location
*_19 = saved_errno_37;
./benchmarks/tmux/leak_4/tmux_leak_4.c:114:15: warning: use location
_19 = __errno_location ();
_19 = __errno_location ();
./benchmarks/tmux/leak_4/tmux_leak_4.c:114:9: warning: use location
  114 |         errno = saved_errno;
      |         ^
this stmt call this function :__errno_location
trace fucntion name:__errno_location 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f283434db88
    type <pointer_type 0x7f28343619d8
        type <integer_type 0x7f283435a5e8 int public SI
            size <integer_cst 0x7f2834345df8 constant 32>
            unit-size <integer_cst 0x7f2834345e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a5e8 precision:32 min <integer_cst 0x7f2834345db0 -2147483648> max <integer_cst 0x7f2834345dc8 2147483647>
            pointer_to_this <pointer_type 0x7f28343619d8>>
        public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _19 = __errno_location ();
    version:19
    ptr-info 0x7f2833e6f750>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: use location
  113 |         free(base);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: free in this location
[40;35m target gimple type: ssa_name [0m
# .MEM_53 = VDEF <.MEM_52>
*_19 = saved_errno_37;
./benchmarks/tmux/leak_4/tmux_leak_4.c:114:15: warning: use location
  114 |         errno = saved_errno;
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: free in this location
  113 |         free(base);
      |         ^
[40;35m target gimple type: mem_ref [0m
# .MEM_53 = VDEF <.MEM_52>
*_19 = saved_errno_37;
./benchmarks/tmux/leak_4/tmux_leak_4.c:114:15: warning: use location
  114 |         errno = saved_errno;
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: free in this location
  113 |         free(base);
      |         ^
[40;35m target gimple type: ssa_name [0m
_19 = __errno_location ();
./benchmarks/tmux/leak_4/tmux_leak_4.c:114:9: warning: use location
  114 |         errno = saved_errno;
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f283434d708
    type <pointer_type 0x7f2833e5da80
        type <integer_type 0x7f2833e5d9d8 char public QI
            size <integer_cst 0x7f2834345ca8 constant 8>
            unit-size <integer_cst 0x7f2834345cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a3f0 precision:8 min <integer_cst 0x7f2833e54720 -128> max <integer_cst 0x7f2833e54708 127> context <translation_unit_decl 0x7f2834350168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f2833e5da80>>
        public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2834350168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
        pointer_to_this <pointer_type 0x7f2833e5dc78>>
   
    def_stmt _3 = base;
    version:3
    ptr-info 0x7f2833e6f660>
# VUSE <.MEM_38>
_3 = base;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_46 = VDEF <.MEM_38>
_4 = mkdir (_3, 0);
_4 = mkdir (_3, 0);
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:13: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |             ^
this stmt call this function :mkdir
trace fucntion name:mkdir 

 ================== trace ================== 
trace fucntion free:0 
if (_4 != 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:12: warning: use location
   91 |         if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f283434d708
    type <pointer_type 0x7f2833e5da80
        type <integer_type 0x7f2833e5d9d8 char public QI
            size <integer_cst 0x7f2834345ca8 constant 8>
            unit-size <integer_cst 0x7f2834345cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a3f0 precision:8 min <integer_cst 0x7f2833e54720 -128> max <integer_cst 0x7f2833e54708 127> context <translation_unit_decl 0x7f2834350168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f2833e5da80>>
        public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2834350168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
        pointer_to_this <pointer_type 0x7f2833e5dc78>>
   
    def_stmt _3 = base;
    version:3
    ptr-info 0x7f2833e6f660>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: use location
  113 |         free(base);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f283434d828
    type <pointer_type 0x7f2833e5da80
        type <integer_type 0x7f2833e5d9d8 char public QI
            size <integer_cst 0x7f2834345ca8 constant 8>
            unit-size <integer_cst 0x7f2834345cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a3f0 precision:8 min <integer_cst 0x7f2833e54720 -128> max <integer_cst 0x7f2833e54708 127> context <translation_unit_decl 0x7f2834350168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f2833e5da80>>
        public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2834350168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
        pointer_to_this <pointer_type 0x7f2833e5dc78>>
   
    def_stmt _7 = base;
    version:7
    ptr-info 0x7f2833e6f690>
# VUSE <.MEM_46>
_7 = base;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_47 = VDEF <.MEM_46>
_8 = lstat (_7, &sb);
_8 = lstat (_7, &sb);
./benchmarks/tmux/leak_4/tmux_leak_4.c:94:13: warning: use location
   94 |         if (lstat(base, &sb) != 0)
      |             ^
this stmt call this function :lstat
trace fucntion name:lstat 

 ================== trace ================== 
trace fucntion free:0 
if (_8 != 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:94:12: warning: use location
   94 |         if (lstat(base, &sb) != 0)
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f283434d828
    type <pointer_type 0x7f2833e5da80
        type <integer_type 0x7f2833e5d9d8 char public QI
            size <integer_cst 0x7f2834345ca8 constant 8>
            unit-size <integer_cst 0x7f2834345cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a3f0 precision:8 min <integer_cst 0x7f2833e54720 -128> max <integer_cst 0x7f2833e54708 127> context <translation_unit_decl 0x7f2834350168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f2833e5da80>>
        public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2834350168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
        pointer_to_this <pointer_type 0x7f2833e5dc78>>
   
    def_stmt _7 = base;
    version:7
    ptr-info 0x7f2833e6f690>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: use location
  113 |         free(base);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f283434da20
    type <pointer_type 0x7f2833e5da80
        type <integer_type 0x7f2833e5d9d8 char public QI
            size <integer_cst 0x7f2834345ca8 constant 8>
            unit-size <integer_cst 0x7f2834345cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a3f0 precision:8 min <integer_cst 0x7f2833e54720 -128> max <integer_cst 0x7f2833e54708 127> context <translation_unit_decl 0x7f2834350168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f2833e5da80>>
        public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2834350168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
        pointer_to_this <pointer_type 0x7f2833e5dc78>>
   
    def_stmt _14 = base;
    version:14
    ptr-info 0x7f2833e6f6d8>
# VUSE <.MEM_47>
_14 = base;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_48 = VDEF <.MEM_47>
_15 = realpath (_14, &resolved);
_15 = realpath (_14, &resolved);
./benchmarks/tmux/leak_4/tmux_leak_4.c:105:13: warning: use location
  105 |         if (realpath(base, resolved) == NULL)
      |             ^
this stmt call this function :realpath
trace fucntion name:realpath 

 ================== trace ================== 
trace fucntion free:0 
if (_15 == 0B)
./benchmarks/tmux/leak_4/tmux_leak_4.c:105:12: warning: use location
  105 |         if (realpath(base, resolved) == NULL)
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f283434da20
    type <pointer_type 0x7f2833e5da80
        type <integer_type 0x7f2833e5d9d8 char public QI
            size <integer_cst 0x7f2834345ca8 constant 8>
            unit-size <integer_cst 0x7f2834345cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a3f0 precision:8 min <integer_cst 0x7f2833e54720 -128> max <integer_cst 0x7f2833e54708 127> context <translation_unit_decl 0x7f2834350168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f2833e5da80>>
        public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2834350168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
        pointer_to_this <pointer_type 0x7f2833e5dc78>>
   
    def_stmt _14 = base;
    version:14
    ptr-info 0x7f2833e6f6d8>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_39>
free (_18);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:9: warning: use location
  113 |         free(base);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:make_label========= [0m
[40;44m =======node_fun:xvasprintf========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path xvasprintf  function_call count: 5 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:strerror========= [0m
[40;33m =======POP node_fun stack:strerror========= [0m
[40;42m =======pre add _ fucntion:__errno_location========= [0m
[40;33m =======POP node_fun stack:__errno_location========= [0m
[40;42m =======pre add _ fucntion:vasprintf========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path vasprintf  function_call count: 2 level :1========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre_check_funciton:vasprintf========= [0m
[40;42m =======start_check_funciton:vasprintf========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f2833e85630
    type <integer_type 0x7f283435a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a738 precision:64 min <integer_cst 0x7f2834345e88 0> max <integer_cst 0x7f2834346500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f28343667e0>>
   
    def_stmt _1 = strlen (fmt_8(D));
    version:1>
# VUSE <.MEM_12(D)>
_1 = strlen (fmt_8(D));

 ================== pre trace ptable ================== 
trace fucntion name:strlen 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function strlen
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_12(D)>
_1 = strlen (fmt_8(D));
_1 = strlen (fmt_8(D));
In function ‘xvasprintf’:
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:23: warning: use location
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |                       ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
_4 = malloc (_3);
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:16: warning: use location
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |                ^
this stmt call this function :malloc
*ret_11(D) = _4;
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:14: warning: use location
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |              ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2833e85630
    type <integer_type 0x7f283435a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a738 precision:64 min <integer_cst 0x7f2834345e88 0> max <integer_cst 0x7f2834346500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f28343667e0>>
   
    def_stmt _1 = strlen (fmt_8(D));
    version:1>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2833e85678
    type <integer_type 0x7f283435a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a738 precision:64 min <integer_cst 0x7f2834345e88 0> max <integer_cst 0x7f2834346500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f28343667e0>>
   
    def_stmt _2 = strlen (ap_9(D));
    version:2>
# VUSE <.MEM_12(D)>
_2 = strlen (ap_9(D));

 ================== pre trace ptable ================== 
trace fucntion name:strlen 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function strlen
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_12(D)>
_2 = strlen (ap_9(D));
_2 = strlen (ap_9(D));
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:37: warning: use location
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |                                     ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
_4 = malloc (_3);
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:16: warning: use location
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |                ^
this stmt call this function :malloc
*ret_11(D) = _4;
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:14: warning: use location
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |              ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2833e85678
    type <integer_type 0x7f283435a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a738 precision:64 min <integer_cst 0x7f2834345e88 0> max <integer_cst 0x7f2834346500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f28343667e0>>
   
    def_stmt _2 = strlen (ap_9(D));
    version:2>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2833e85708
    type <pointer_type 0x7f2834361000
        type <void_type 0x7f283435af18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2834361000>>
        public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f28343669d8>>
   
    def_stmt _4 = malloc (_3);
    version:4
    ptr-info 0x7f2833e6f8e8>
# .MEM_13 = VDEF <.MEM_12(D)>
_4 = malloc (_3);

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
*ret_11(D) = _4;
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:14: warning: use location
*ret_11(D) = _4;
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:14: warning: use location
# .MEM_13 = VDEF <.MEM_12(D)>
_4 = malloc (_3);
_4 = malloc (_3);
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:16: warning: use location
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |                ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2833e85708
    type <pointer_type 0x7f2834361000
        type <void_type 0x7f283435af18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2834361000>>
        public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f28343669d8>>
   
    def_stmt _4 = malloc (_3);
    version:4
    ptr-info 0x7f2833e6f8e8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2833e857e0
    type <pointer_type 0x7f2833e5dbd0
        type <integer_type 0x7f2833e5db28 char readonly public QI
            size <integer_cst 0x7f2834345ca8 constant 8>
            unit-size <integer_cst 0x7f2834345cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a3f0 precision:8 min <integer_cst 0x7f2833e54720 -128> max <integer_cst 0x7f2833e54708 127> context <translation_unit_decl 0x7f2834350168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f2833e5dbd0>>
        public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2833e76980 fmt>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f2833e6f918>
GIMPLE_NOP

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_12(D)>
_1 = strlen (fmt_8(D));
_1 = strlen (fmt_8(D));
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:23: warning: use location
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |                       ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
_4 = malloc (_3);
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:16: warning: use location
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |                ^
this stmt call this function :malloc
*ret_11(D) = _4;
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:14: warning: use location
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |              ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2833e857e0
    type <pointer_type 0x7f2833e5dbd0
        type <integer_type 0x7f2833e5db28 char readonly public QI
            size <integer_cst 0x7f2834345ca8 constant 8>
            unit-size <integer_cst 0x7f2834345cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a3f0 precision:8 min <integer_cst 0x7f2833e54720 -128> max <integer_cst 0x7f2833e54708 127> context <translation_unit_decl 0x7f2834350168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f2833e5dbd0>>
        public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2833e76980 fmt>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f2833e6f918>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2833e85828
    type <pointer_type 0x7f2833e5da80
        type <integer_type 0x7f2833e5d9d8 char public QI
            size <integer_cst 0x7f2834345ca8 constant 8>
            unit-size <integer_cst 0x7f2834345cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a3f0 precision:8 min <integer_cst 0x7f2833e54720 -128> max <integer_cst 0x7f2833e54708 127> context <translation_unit_decl 0x7f2834350168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f2833e5da80>>
        public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2834350168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
        pointer_to_this <pointer_type 0x7f2833e5dc78>>
    var <parm_decl 0x7f2833e76a00 ap>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7f2833e6f930>
GIMPLE_NOP

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_12(D)>
_2 = strlen (ap_9(D));
_2 = strlen (ap_9(D));
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:37: warning: use location
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |                                     ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
_4 = malloc (_3);
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:16: warning: use location
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |                ^
this stmt call this function :malloc
*ret_11(D) = _4;
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:14: warning: use location
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |              ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2833e85828
    type <pointer_type 0x7f2833e5da80
        type <integer_type 0x7f2833e5d9d8 char public QI
            size <integer_cst 0x7f2834345ca8 constant 8>
            unit-size <integer_cst 0x7f2834345cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a3f0 precision:8 min <integer_cst 0x7f2833e54720 -128> max <integer_cst 0x7f2833e54708 127> context <translation_unit_decl 0x7f2834350168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f2833e5da80>>
        public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2834350168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
        pointer_to_this <pointer_type 0x7f2833e5dc78>>
    var <parm_decl 0x7f2833e76a00 ap>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7f2833e6f930>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2833e856c0
    type <integer_type 0x7f283435a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a738 precision:64 min <integer_cst 0x7f2834345e88 0> max <integer_cst 0x7f2834346500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f28343667e0>>
   
    def_stmt _3 = _1 + _2;
    version:3>
_3 = _1 + _2;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:vasprintf========= [0m
[40;42m =======pre_check_funciton:xvasprintf========= [0m
[40;42m =======start_check_funciton:xvasprintf========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f2833e85480
    type <integer_type 0x7f283435a5e8 int public SI
        size <integer_cst 0x7f2834345df8 constant 32>
        unit-size <integer_cst 0x7f2834345e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a5e8 precision:32 min <integer_cst 0x7f2834345db0 -2147483648> max <integer_cst 0x7f2834345dc8 2147483647>
        pointer_to_this <pointer_type 0x7f28343619d8>>
    var <var_decl 0x7f2833e82120 i>
    def_stmt i_10 = vasprintf (ret_6(D), fmt_7(D), ap_8(D));
    version:10>
# .MEM_12 = VDEF <.MEM_11(D)>
i_10 = vasprintf (ret_6(D), fmt_7(D), ap_8(D));

 ================== pre trace ptable ================== 
trace fucntion name:vasprintf 
[40;44m =======trace_function_path vasprintf  function_call count: 2 level :888========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function vasprintf
 
 Start check Pointer Collect  

======================================================================
_1 = *ret_6(D);
./benchmarks/tmux/leak_4/tmux_leak_4.c:68:22: warning: use location
   68 |         if (i < 0 || *ret == NULL)
      |                      ^
if (_1 == 0B)
./benchmarks/tmux/leak_4/tmux_leak_4.c:68:19: warning: use location
   68 |         if (i < 0 || *ret == NULL)
      |                   ^
# .MEM_12 = VDEF <.MEM_11(D)>
i_10 = vasprintf (ret_6(D), fmt_7(D), ap_8(D));
i_10 = vasprintf (ret_6(D), fmt_7(D), ap_8(D));
./benchmarks/tmux/leak_4/tmux_leak_4.c:66:13: warning: use location
   66 |         i = vasprintf(ret, fmt, ap);
      |             ^
this stmt call this function :vasprintf
trace fucntion name:vasprintf 
[40;44m =======trace_function_path vasprintf  function_call count: 2 level :0========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (i_10 < 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:68:12: warning: use location
   68 |         if (i < 0 || *ret == NULL)
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2833e85480
    type <integer_type 0x7f283435a5e8 int public SI
        size <integer_cst 0x7f2834345df8 constant 32>
        unit-size <integer_cst 0x7f2834345e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a5e8 precision:32 min <integer_cst 0x7f2834345db0 -2147483648> max <integer_cst 0x7f2834345dc8 2147483647>
        pointer_to_this <pointer_type 0x7f28343619d8>>
    var <var_decl 0x7f2833e82120 i>
    def_stmt i_10 = vasprintf (ret_6(D), fmt_7(D), ap_8(D));
    version:10>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2833e852d0
    type <pointer_type 0x7f28343619d8
        type <integer_type 0x7f283435a5e8 int public SI
            size <integer_cst 0x7f2834345df8 constant 32>
            unit-size <integer_cst 0x7f2834345e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a5e8 precision:32 min <integer_cst 0x7f2834345db0 -2147483648> max <integer_cst 0x7f2834345dc8 2147483647>
            pointer_to_this <pointer_type 0x7f28343619d8>>
        public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = __errno_location ();
    version:2
    ptr-info 0x7f2833e6f888>
_2 = __errno_location ();

 ================== pre trace ptable ================== 
trace fucntion name:__errno_location 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function __errno_location
 
 Start check Pointer Collect  

======================================================================
_3 = *_2;
./benchmarks/tmux/leak_4/tmux_leak_4.c:69:17: warning: use location
   69 |                 fatalx("xasprintf: %s", strerror(errno));
      |                 ^
_4 = strerror (_3);
./benchmarks/tmux/leak_4/tmux_leak_4.c:69:17: warning: use location
this stmt call this function :strerror
trace fucntion name:strerror 

 ================== trace ================== 
trace fucntion free:0 
printf ("xasprintf: %s", _4);
./benchmarks/tmux/leak_4/tmux_leak_4.c:69:17: warning: use location
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
_2 = __errno_location ();
_2 = __errno_location ();
./benchmarks/tmux/leak_4/tmux_leak_4.c:69:17: warning: use location
this stmt call this function :__errno_location
trace fucntion name:__errno_location 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2833e852d0
    type <pointer_type 0x7f28343619d8
        type <integer_type 0x7f283435a5e8 int public SI
            size <integer_cst 0x7f2834345df8 constant 32>
            unit-size <integer_cst 0x7f2834345e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a5e8 precision:32 min <integer_cst 0x7f2834345db0 -2147483648> max <integer_cst 0x7f2834345dc8 2147483647>
            pointer_to_this <pointer_type 0x7f28343619d8>>
        public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _2 = __errno_location ();
    version:2
    ptr-info 0x7f2833e6f888>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2833e85360
    type <integer_type 0x7f283435a5e8 int public SI
        size <integer_cst 0x7f2834345df8 constant 32>
        unit-size <integer_cst 0x7f2834345e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a5e8 precision:32 min <integer_cst 0x7f2834345db0 -2147483648> max <integer_cst 0x7f2834345dc8 2147483647>
        pointer_to_this <pointer_type 0x7f28343619d8>>
   
    def_stmt _4 = strerror (_3);
    version:4>
# .MEM_13 = VDEF <.MEM_12>
_4 = strerror (_3);

 ================== pre trace ptable ================== 
trace fucntion name:strerror 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function strerror
 
 Start check Pointer Collect  

======================================================================
# .MEM_13 = VDEF <.MEM_12>
_4 = strerror (_3);
_4 = strerror (_3);
./benchmarks/tmux/leak_4/tmux_leak_4.c:69:17: warning: use location
this stmt call this function :strerror
trace fucntion name:strerror 

 ================== trace ================== 
trace fucntion free:0 
printf ("xasprintf: %s", _4);
./benchmarks/tmux/leak_4/tmux_leak_4.c:69:17: warning: use location
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2833e85360
    type <integer_type 0x7f283435a5e8 int public SI
        size <integer_cst 0x7f2834345df8 constant 32>
        unit-size <integer_cst 0x7f2834345e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a5e8 precision:32 min <integer_cst 0x7f2834345db0 -2147483648> max <integer_cst 0x7f2834345dc8 2147483647>
        pointer_to_this <pointer_type 0x7f28343619d8>>
   
    def_stmt _4 = strerror (_3);
    version:4>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2833e853a8
    type <pointer_type 0x7f2833e5dc78
        type <pointer_type 0x7f2833e5da80 type <integer_type 0x7f2833e5d9d8 char>
            public unsigned DI
            size <integer_cst 0x7f2834345bb8 constant 64>
            unit-size <integer_cst 0x7f2834345bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2834350168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f2833e5dc78>>
        public unsigned DI size <integer_cst 0x7f2834345bb8 64> unit-size <integer_cst 0x7f2834345bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2833e76700 ret>
    def_stmt GIMPLE_NOP
    version:6
    ptr-info 0x7f2833e6f8a0>
GIMPLE_NOP

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
_1 = *ret_6(D);
./benchmarks/tmux/leak_4/tmux_leak_4.c:68:22: warning: use location
   68 |         if (i < 0 || *ret == NULL)
      |                      ^
if (_1 == 0B)
./benchmarks/tmux/leak_4/tmux_leak_4.c:68:19: warning: use location
   68 |         if (i < 0 || *ret == NULL)
      |                   ^
# .MEM_12 = VDEF <.MEM_11(D)>
i_10 = vasprintf (ret_6(D), fmt_7(D), ap_8(D));
i_10 = vasprintf (ret_6(D), fmt_7(D), ap_8(D));
./benchmarks/tmux/leak_4/tmux_leak_4.c:66:13: warning: use location
   66 |         i = vasprintf(ret, fmt, ap);
      |             ^
this stmt call this function :vasprintf
trace fucntion name:vasprintf 
[40;44m =======trace_function_path vasprintf  function_call count: 2 level :0========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (i_10 < 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:68:12: warning: use location
   68 |         if (i < 0 || *ret == NULL)
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2833e853a8
    type <pointer_type 0x7f2833e5dc78
        type <pointer_type 0x7f2833e5da80 type <integer_type 0x7f2833e5d9d8 char>
            public unsigned DI
            size <integer_cst 0x7f2834345bb8 constant 64>
            unit-size <integer_cst 0x7f2834345bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2834350168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f2833e5dc78>>
        public unsigned DI size <integer_cst 0x7f2834345bb8 64> unit-size <integer_cst 0x7f2834345bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2833e76700 ret>
    def_stmt GIMPLE_NOP
    version:6
    ptr-info 0x7f2833e6f8a0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2833e853f0
    type <pointer_type 0x7f2833e5dbd0
        type <integer_type 0x7f2833e5db28 char readonly public QI
            size <integer_cst 0x7f2834345ca8 constant 8>
            unit-size <integer_cst 0x7f2834345cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a3f0 precision:8 min <integer_cst 0x7f2833e54720 -128> max <integer_cst 0x7f2833e54708 127> context <translation_unit_decl 0x7f2834350168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f2833e5dbd0>>
        public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2833e76780 fmt>
    def_stmt GIMPLE_NOP
    version:7
    ptr-info 0x7f2833e6f8b8>
GIMPLE_NOP

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_12 = VDEF <.MEM_11(D)>
i_10 = vasprintf (ret_6(D), fmt_7(D), ap_8(D));
i_10 = vasprintf (ret_6(D), fmt_7(D), ap_8(D));
./benchmarks/tmux/leak_4/tmux_leak_4.c:66:13: warning: use location
   66 |         i = vasprintf(ret, fmt, ap);
      |             ^
this stmt call this function :vasprintf
trace fucntion name:vasprintf 
[40;44m =======trace_function_path vasprintf  function_call count: 2 level :0========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (i_10 < 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:68:12: warning: use location
   68 |         if (i < 0 || *ret == NULL)
      |            ^
_1 = *ret_6(D);
./benchmarks/tmux/leak_4/tmux_leak_4.c:68:22: warning: use location
   68 |         if (i < 0 || *ret == NULL)
      |                      ^
if (_1 == 0B)
./benchmarks/tmux/leak_4/tmux_leak_4.c:68:19: warning: use location
   68 |         if (i < 0 || *ret == NULL)
      |                   ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2833e853f0
    type <pointer_type 0x7f2833e5dbd0
        type <integer_type 0x7f2833e5db28 char readonly public QI
            size <integer_cst 0x7f2834345ca8 constant 8>
            unit-size <integer_cst 0x7f2834345cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a3f0 precision:8 min <integer_cst 0x7f2833e54720 -128> max <integer_cst 0x7f2833e54708 127> context <translation_unit_decl 0x7f2834350168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f2833e5dbd0>>
        public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2833e76780 fmt>
    def_stmt GIMPLE_NOP
    version:7
    ptr-info 0x7f2833e6f8b8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2833e85438
    type <pointer_type 0x7f2833e5da80
        type <integer_type 0x7f2833e5d9d8 char public QI
            size <integer_cst 0x7f2834345ca8 constant 8>
            unit-size <integer_cst 0x7f2834345cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a3f0 precision:8 min <integer_cst 0x7f2833e54720 -128> max <integer_cst 0x7f2833e54708 127> context <translation_unit_decl 0x7f2834350168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f2833e5da80>>
        public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2834350168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
        pointer_to_this <pointer_type 0x7f2833e5dc78>>
    var <parm_decl 0x7f2833e76800 ap>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f2833e6f8d0>
GIMPLE_NOP

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_12 = VDEF <.MEM_11(D)>
i_10 = vasprintf (ret_6(D), fmt_7(D), ap_8(D));
i_10 = vasprintf (ret_6(D), fmt_7(D), ap_8(D));
./benchmarks/tmux/leak_4/tmux_leak_4.c:66:13: warning: use location
   66 |         i = vasprintf(ret, fmt, ap);
      |             ^
this stmt call this function :vasprintf
trace fucntion name:vasprintf 
[40;44m =======trace_function_path vasprintf  function_call count: 2 level :0========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (i_10 < 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:68:12: warning: use location
   68 |         if (i < 0 || *ret == NULL)
      |            ^
_1 = *ret_6(D);
./benchmarks/tmux/leak_4/tmux_leak_4.c:68:22: warning: use location
   68 |         if (i < 0 || *ret == NULL)
      |                      ^
if (_1 == 0B)
./benchmarks/tmux/leak_4/tmux_leak_4.c:68:19: warning: use location
   68 |         if (i < 0 || *ret == NULL)
      |                   ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2833e85438
    type <pointer_type 0x7f2833e5da80
        type <integer_type 0x7f2833e5d9d8 char public QI
            size <integer_cst 0x7f2834345ca8 constant 8>
            unit-size <integer_cst 0x7f2834345cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a3f0 precision:8 min <integer_cst 0x7f2833e54720 -128> max <integer_cst 0x7f2833e54708 127> context <translation_unit_decl 0x7f2834350168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f2833e5da80>>
        public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2834350168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
        pointer_to_this <pointer_type 0x7f2833e5dc78>>
    var <parm_decl 0x7f2833e76800 ap>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f2833e6f8d0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2833e85318
    type <integer_type 0x7f283435a5e8 int public SI
        size <integer_cst 0x7f2834345df8 constant 32>
        unit-size <integer_cst 0x7f2834345e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a5e8 precision:32 min <integer_cst 0x7f2834345db0 -2147483648> max <integer_cst 0x7f2834345dc8 2147483647>
        pointer_to_this <pointer_type 0x7f28343619d8>>
   
    def_stmt _3 = *_2;
    version:3>
# VUSE <.MEM_12>
_3 = *_2;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_13 = VDEF <.MEM_12>
_4 = strerror (_3);
_4 = strerror (_3);
./benchmarks/tmux/leak_4/tmux_leak_4.c:69:17: warning: use location
   69 |                 fatalx("xasprintf: %s", strerror(errno));
      |                 ^
this stmt call this function :strerror
trace fucntion name:strerror 

 ================== trace ================== 
trace fucntion free:0 
printf ("xasprintf: %s", _4);
./benchmarks/tmux/leak_4/tmux_leak_4.c:69:17: warning: use location
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2833e85318
    type <integer_type 0x7f283435a5e8 int public SI
        size <integer_cst 0x7f2834345df8 constant 32>
        unit-size <integer_cst 0x7f2834345e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a5e8 precision:32 min <integer_cst 0x7f2834345db0 -2147483648> max <integer_cst 0x7f2834345dc8 2147483647>
        pointer_to_this <pointer_type 0x7f28343619d8>>
   
    def_stmt _3 = *_2;
    version:3>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:xvasprintf========= [0m
[40;44m =======node_fun:vasprintf========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path vasprintf  function_call count: 2 level :0========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre_check_funciton:vasprintf========= [0m
[40;42m =======start_check_funciton:vasprintf========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f2833e85630
    type <integer_type 0x7f283435a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a738 precision:64 min <integer_cst 0x7f2834345e88 0> max <integer_cst 0x7f2834346500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f28343667e0>>
   
    def_stmt _1 = strlen (fmt_8(D));
    version:1>
# VUSE <.MEM_12(D)>
_1 = strlen (fmt_8(D));

 ================== pre trace ptable ================== 
trace fucntion name:strlen 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function strlen
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_12(D)>
_1 = strlen (fmt_8(D));
_1 = strlen (fmt_8(D));
In function ‘vasprintf’:
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:23: warning: use location
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |                       ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
_4 = malloc (_3);
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:16: warning: use location
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |                ^
this stmt call this function :malloc
*ret_11(D) = _4;
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:14: warning: use location
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |              ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2833e85630
    type <integer_type 0x7f283435a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a738 precision:64 min <integer_cst 0x7f2834345e88 0> max <integer_cst 0x7f2834346500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f28343667e0>>
   
    def_stmt _1 = strlen (fmt_8(D));
    version:1>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2833e85678
    type <integer_type 0x7f283435a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a738 precision:64 min <integer_cst 0x7f2834345e88 0> max <integer_cst 0x7f2834346500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f28343667e0>>
   
    def_stmt _2 = strlen (ap_9(D));
    version:2>
# VUSE <.MEM_12(D)>
_2 = strlen (ap_9(D));

 ================== pre trace ptable ================== 
trace fucntion name:strlen 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function strlen
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_12(D)>
_2 = strlen (ap_9(D));
_2 = strlen (ap_9(D));
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:37: warning: use location
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |                                     ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
_4 = malloc (_3);
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:16: warning: use location
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |                ^
this stmt call this function :malloc
*ret_11(D) = _4;
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:14: warning: use location
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |              ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2833e85678
    type <integer_type 0x7f283435a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a738 precision:64 min <integer_cst 0x7f2834345e88 0> max <integer_cst 0x7f2834346500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f28343667e0>>
   
    def_stmt _2 = strlen (ap_9(D));
    version:2>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2833e85708
    type <pointer_type 0x7f2834361000
        type <void_type 0x7f283435af18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2834361000>>
        public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f28343669d8>>
   
    def_stmt _4 = malloc (_3);
    version:4
    ptr-info 0x7f2833e6f8e8>
# .MEM_13 = VDEF <.MEM_12(D)>
_4 = malloc (_3);

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
*ret_11(D) = _4;
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:14: warning: use location
*ret_11(D) = _4;
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:14: warning: use location
# .MEM_13 = VDEF <.MEM_12(D)>
_4 = malloc (_3);
_4 = malloc (_3);
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:16: warning: use location
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |                ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2833e85708
    type <pointer_type 0x7f2834361000
        type <void_type 0x7f283435af18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2834361000>>
        public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f28343669d8>>
   
    def_stmt _4 = malloc (_3);
    version:4
    ptr-info 0x7f2833e6f8e8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2833e857e0
    type <pointer_type 0x7f2833e5dbd0
        type <integer_type 0x7f2833e5db28 char readonly public QI
            size <integer_cst 0x7f2834345ca8 constant 8>
            unit-size <integer_cst 0x7f2834345cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a3f0 precision:8 min <integer_cst 0x7f2833e54720 -128> max <integer_cst 0x7f2833e54708 127> context <translation_unit_decl 0x7f2834350168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f2833e5dbd0>>
        public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2833e76980 fmt>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f2833e6f918>
GIMPLE_NOP

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_12(D)>
_1 = strlen (fmt_8(D));
_1 = strlen (fmt_8(D));
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:23: warning: use location
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |                       ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
_4 = malloc (_3);
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:16: warning: use location
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |                ^
this stmt call this function :malloc
*ret_11(D) = _4;
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:14: warning: use location
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |              ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2833e857e0
    type <pointer_type 0x7f2833e5dbd0
        type <integer_type 0x7f2833e5db28 char readonly public QI
            size <integer_cst 0x7f2834345ca8 constant 8>
            unit-size <integer_cst 0x7f2834345cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a3f0 precision:8 min <integer_cst 0x7f2833e54720 -128> max <integer_cst 0x7f2833e54708 127> context <translation_unit_decl 0x7f2834350168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f2833e5dbd0>>
        public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2833e76980 fmt>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f2833e6f918>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2833e85828
    type <pointer_type 0x7f2833e5da80
        type <integer_type 0x7f2833e5d9d8 char public QI
            size <integer_cst 0x7f2834345ca8 constant 8>
            unit-size <integer_cst 0x7f2834345cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a3f0 precision:8 min <integer_cst 0x7f2833e54720 -128> max <integer_cst 0x7f2833e54708 127> context <translation_unit_decl 0x7f2834350168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f2833e5da80>>
        public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2834350168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
        pointer_to_this <pointer_type 0x7f2833e5dc78>>
    var <parm_decl 0x7f2833e76a00 ap>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7f2833e6f930>
GIMPLE_NOP

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_12(D)>
_2 = strlen (ap_9(D));
_2 = strlen (ap_9(D));
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:37: warning: use location
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |                                     ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
_4 = malloc (_3);
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:16: warning: use location
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |                ^
this stmt call this function :malloc
*ret_11(D) = _4;
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:14: warning: use location
   46 |         *ret = malloc(strlen(fmt) + strlen(ap));                /* allocation site */
      |              ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2833e85828
    type <pointer_type 0x7f2833e5da80
        type <integer_type 0x7f2833e5d9d8 char public QI
            size <integer_cst 0x7f2834345ca8 constant 8>
            unit-size <integer_cst 0x7f2834345cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a3f0 precision:8 min <integer_cst 0x7f2833e54720 -128> max <integer_cst 0x7f2833e54708 127> context <translation_unit_decl 0x7f2834350168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7f2833e5da80>>
        public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2834350168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
        pointer_to_this <pointer_type 0x7f2833e5dc78>>
    var <parm_decl 0x7f2833e76a00 ap>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7f2833e6f930>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2833e856c0
    type <integer_type 0x7f283435a7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f2834345bb8 constant 64>
        unit-size <integer_cst 0x7f2834345bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f283435a738 precision:64 min <integer_cst 0x7f2834345e88 0> max <integer_cst 0x7f2834346500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f28343667e0>>
   
    def_stmt _3 = _1 + _2;
    version:3>
_3 = _1 + _2;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:vasprintf========= [0m
fucntion collect path finsh

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
make_label ("label");
return 0;

=======Mapping node_fun:make_label=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741821]:
_1 = getuid ();
uid_26 = (uid_t) _1;
s_28 = getenv ("TMUX_TMPDIR");
if (s_28 != 0B)
  goto <bb 3>; [82.57%]
else
  goto <bb 5>; [17.43%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 886588622]:
_2 = *s_28;
if (_2 != 0)
  goto <bb 4>; [33.00%]
else
  goto <bb 5>; [67.00%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 292574244]:
i_57 = xvasprintf (&base, "%s/tmux-", s_28);
goto <bb 6>; [100.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 781167578]:
i_58 = xvasprintf (&base, "%s/tmux-", "/tmp");

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 1073741823]:
_3 = base;
_4 = mkdir (_3, 0);
if (_4 != 0)
  goto <bb 7>; [67.00%]
else
  goto <bb 9>; [33.00%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 719407023]:
_5 = __errno_location ();
_6 = *_5;
if (_6 != 17)
  goto <bb 8>; [50.00%]
else
  goto <bb 9>; [50.00%]

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 359703511]:
// predicted unlikely by goto predictor.
goto <bb 23>; [100.00%]

=======is loop:0=========

 bb index 9 
<bb 9> [local count: 714038311]:
_7 = base;
_8 = lstat (_7, &sb);
if (_8 != 0)
  goto <bb 10>; [34.00%]
else
  goto <bb 11>; [66.00%]

=======is loop:0=========

 bb index 10 
<bb 10> [local count: 242773028]:
// predicted unlikely by goto predictor.
goto <bb 23>; [100.00%]

=======is loop:0=========

 bb index 11 
<bb 11> [local count: 471265282]:
_9 = sb.st_mode;
_10 = _9 & 61440;
if (_10 != 16384)
  goto <bb 12>; [50.00%]
else
  goto <bb 13>; [50.00%]

=======is loop:0=========

 bb index 12 
<bb 12> [local count: 235632641]:
_11 = __errno_location ();
*_11 = 20;
// predicted unlikely by goto predictor.
goto <bb 23>; [100.00%]

=======is loop:0=========

 bb index 13 
<bb 13> [local count: 235632641]:
_12 = sb.st_uid;
if (_12 != uid_26)
  goto <bb 14>; [67.00%]
else
  goto <bb 15>; [33.00%]

=======is loop:0=========

 bb index 14 
<bb 14> [local count: 157873870]:
_13 = __errno_location ();
*_13 = 13;
// predicted unlikely by goto predictor.
goto <bb 23>; [100.00%]

=======is loop:0=========

 bb index 15 
<bb 15> [local count: 77758771]:
_14 = base;
_15 = realpath (_14, &resolved);
if (_15 == 0B)
  goto <bb 16>; [17.43%]
else
  goto <bb 24>; [82.57%]

=======is loop:0=========

 bb index 16 
<bb 16> [local count: 13553354]:
_16 = base;
n_59 = 4095;
if (n_59 != 0)
  goto <bb 17>; [50.00%]
else
  goto <bb 19>; [50.00%]

=======is loop:1=========

 bb index 17 
<bb 17> [local count: 63348231]:
# d_62 = PHI <&resolved(16), d_63(18)>
# s_60 = PHI <_16(16), s_61(18)>
# n_66 = PHI <n_59(16), n_67(18)>
s_61 = s_60 + 1;
d_63 = d_62 + 1;
_64 = *s_60;
*d_62 = _64;
_65 = *d_62;
if (_65 == 0)
  goto <bb 19>; [5.50%]
else
  goto <bb 18>; [94.50%]

=======is loop:1=========

 bb index 18 
<bb 18> [local count: 59864078]:
n_67 = n_66 + 18446744073709551615;
if (n_67 != 0)
  goto <bb 17>; [94.50%]
else
  goto <bb 19>; [5.50%]

=======is loop:0=========

 bb index 19 
<bb 19> [local count: 13553354]:
# d_69 = PHI <d_63(18), &resolved(16), d_63(17)>
# s_77 = PHI <s_61(18), _16(16), s_61(17)>
# n_68 = PHI <n_67(18), n_59(16), n_66(17)>
if (n_68 == 0)
  goto <bb 20>; [50.00%]
else
  goto <bb 22>; [50.00%]

=======is loop:0=========

 bb index 20 
<bb 20> [local count: 6776677]:
*d_69 = 0;

=======is loop:1=========

 bb index 21 
<bb 21> [local count: 61606154]:
# s_70 = PHI <s_77(20), s_71(21)>
s_71 = s_70 + 1;
_72 = *s_70;
if (_72 != 0)
  goto <bb 21>; [89.00%]
else
  goto <bb 22>; [11.00%]

=======is loop:0=========

 bb index 22 
<bb 22> [local count: 13553354]:
# s_73 = PHI <s_77(19), s_71(21)>
_74 = s_73 - _16;
_75 = _74 + -1;
_76 = (long unsigned int) _75;
goto <bb 24>; [100.00%]

=======is loop:0=========

 bb index 23 
<bb 23> [local count: 995983052]:
fail:
_17 = __errno_location ();
saved_errno_37 = *_17;
_18 = base;
free (_18);
_19 = __errno_location ();
*_19 = saved_errno_37;

=======is loop:0=========

 bb index 24 
<bb 24> [local count: 1073741824]:
base ={v} {CLOBBER};
resolved ={v} {CLOBBER};
sb ={v} {CLOBBER};
return 0B;

=======Mapping node_fun:xvasprintf=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
i_10 = vasprintf (ret_6(D), fmt_7(D), ap_8(D));
if (i_10 < 0)
  goto <bb 4>; [0.04%]
else
  goto <bb 3>; [99.96%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 1073312329]:
_1 = *ret_6(D);
if (_1 == 0B)
  goto <bb 4>; [0.04%]
else
  goto <bb 5>; [99.96%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 858820]:
_2 = __errno_location ();
_3 = *_2;
_4 = strerror (_3);
printf ("xasprintf: %s", _4);
exit (1);

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 1072883005]:
return i_10;

=======Mapping node_fun:vasprintf=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = strlen (fmt_8(D));
_2 = strlen (ap_9(D));
_3 = _1 + _2;
_4 = malloc (_3);
*ret_11(D) = _4;
_5 = *ret_11(D);
if (_5 == 0B)
  goto <bb 3>; [0.45%]
else
  goto <bb 4>; [99.55%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 4831840]:

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073741824]:
# _6 = PHI <0(2), -1(3)>
return _6;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    gimple malloc count : 1 [0m
[40;34m    gimple free   count : 1 [0m
[40;34m    all ptable point : 29 [0m
[40;34m    analyzable ptable point : 27 [0m
[40;34m    used_stmt array stack totalsize of : 0.002192 mb[0m
[40;34m    collect time: : 0.003105 s [0m
[40;34m    algorithm time: 0.154284 s [0m
[40;34m    gimple stmt count : : 83 [0m
[40;34m    this report analysis in Fri Feb 18 06:37:04 2022
 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.01 ( 14%)   0.00 (  0%)   0.01 (  5%)  2157k ( 82%)
 phase opt and generate             :   0.06 ( 86%)   0.12 (100%)   0.18 ( 95%)   414k ( 16%)
 callgraph functions expansion      :   0.01 ( 14%)   0.01 (  8%)   0.02 ( 11%)   298k ( 11%)
 tree iv optimization               :   0.00 (  0%)   0.00 (  0%)   0.01 (  5%)    18k (  1%)
 plugin execution                   :   0.06 ( 86%)   0.11 ( 92%)   0.16 ( 84%)  1480  (  0%)
 initialize rtl                     :   0.00 (  0%)   0.00 (  0%)   0.01 (  5%)    12k (  0%)
 rest of compilation                :   0.00 (  0%)   0.01 (  8%)   0.00 (  0%)    11k (  0%)
 TOTAL                              :   0.07          0.12          0.19         2623k
