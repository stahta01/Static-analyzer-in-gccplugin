./benchmarks/tmux/leak_4/tmux_leak_4.c:15:0: warning: "S_IRWXU" redefined
 #define S_IRWXU 0
 
In file included from ./benchmarks/tmux/leak_4/tmux_leak_4.c:9:0:
/usr/include/x86_64-linux-gnu/sys/stat.h:172:0: note: this is the location of the previous definition
 #define S_IRWXU (__S_IREAD|__S_IWRITE|__S_IEXEC)
 
./benchmarks/tmux/leak_4/tmux_leak_4.c:16:0: warning: "S_IRWXO" redefined
 #define S_IRWXO 0
 
In file included from ./benchmarks/tmux/leak_4/tmux_leak_4.c:9:0:
/usr/include/x86_64-linux-gnu/sys/stat.h:190:0: note: this is the location of the previous definition
 #define S_IRWXO (S_IRWXG >> 3)
 
./benchmarks/tmux/leak_4/tmux_leak_4.c: In function â€˜vasprintfâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:16: warning: implicit declaration of function â€˜strlenâ€™ [-Wimplicit-function-declaration]
  *ret = malloc(strlen(fmt) + strlen(ap));  /* allocation site */
                ^~~~~~
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:16: warning: incompatible implicit declaration of built-in function â€˜strlenâ€™
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:16: note: include â€˜<string.h>â€™ or provide a declaration of â€˜strlenâ€™
./benchmarks/tmux/leak_4/tmux_leak_4.c: In function â€˜xasprintfâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:56:6: warning: implicit declaration of function â€˜xvasprintfâ€™; did you mean â€˜xasprintfâ€™? [-Wimplicit-function-declaration]
  i = xvasprintf(ret, fmt, ap);
      ^~~~~~~~~~
      xasprintf
In file included from ./benchmarks/tmux/leak_4/tmux_leak_4.c:11:0:
./benchmarks/tmux/leak_4/tmux_leak_4.c: In function â€˜xvasprintfâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:69:27: warning: implicit declaration of function â€˜strerrorâ€™; did you mean â€˜perrorâ€™? [-Wimplicit-function-declaration]
   fatalx("xasprintf: %s", strerror(errno));
                           ^
./benchmarks/tmux/leak_4/../stdio.h:135:33: note: in definition of macro â€˜fatalâ€™
 #define fatal(a, b) { printf(a, b); exit(1); }
                                 ^
./benchmarks/tmux/leak_4/tmux_leak_4.c:69:3: note: in expansion of macro â€˜fatalxâ€™
   fatalx("xasprintf: %s", strerror(errno));
   ^~~~~~
./benchmarks/tmux/leak_4/tmux_leak_4.c:69:10: warning: format â€˜%sâ€™ expects argument of type â€˜char *â€™, but argument 2 has type â€˜intâ€™ [-Wformat=]
   fatalx("xasprintf: %s", strerror(errno));
          ^                ~~~~~~~~~~~~~~~
./benchmarks/tmux/leak_4/../stdio.h:135:30: note: in definition of macro â€˜fatalâ€™
 #define fatal(a, b) { printf(a, b); exit(1); }
                              ^
./benchmarks/tmux/leak_4/tmux_leak_4.c:69:3: note: in expansion of macro â€˜fatalxâ€™
   fatalx("xasprintf: %s", strerror(errno));
   ^~~~~~
./benchmarks/tmux/leak_4/tmux_leak_4.c: In function â€˜make_labelâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:84:8: warning: implicit declaration of function â€˜getuidâ€™; did you mean â€˜getenvâ€™? [-Wimplicit-function-declaration]
  uid = getuid();
        ^~~~~~
        getenv
=======ipa_pta=========
===============The first stage : Point of interest stmt collect=================
--------GIMPLE Cond -------
succs:= 2
--------GIMPLE Cond -------
succs:= 2
--------GIMPLE Cond -------
succs:= 2
succs:= 3
succs:= 3
--------GIMPLE Cond -------
succs:= 2
--------GIMPLE Cond -------
succs:= 3
succs:= 2
succs:= 3
--------GIMPLE Cond -------
succs:= 6
--------GIMPLE Cond -------
succs:= 6
succs:= 7
--------GIMPLE Cond -------
succs:= 8
--------GIMPLE Cond -------
succs:= 9
succs:= 9
--------GIMPLE Cond -------
succs:= 11
succs:= 11
--------GIMPLE Cond -------
succs:= 13
--------GIMPLE Cond -------
succs:= 14
--------GIMPLE Cond -------
succs:= 15
--------GIMPLE Cond -------
succs:= 16
--------GIMPLE Cond -------
succs:= 14
succs:= 15
succs:= 16
succs:= 17
--------GIMPLE Cond -------
succs:= 19
succs:= 17
succs:= 19
succs:= 13
succs:= 7
succs:= 8
===============The first stage : Point of interest stmt collect=================
start PointerConstraint
pointer ftable is 1 
pointer ptable is 1 
===============The second stage : Mapping stmt=================
# VUSE <.MEM_12(D)>
_1 = strlen (fmt_8(D));
# VUSE <.MEM_12(D)>
_2 = strlen (ap_9(D));
# .MEM_13 = VDEF <.MEM_12(D)>
_4 = malloc (_3);
# .MEM_15 = VDEF <.MEM_14(D)>
i_10 = vasprintf (ret_6(D), fmt_7(D), ap_8(D));
_2 = __errno_location ();
# .MEM_16 = VDEF <.MEM_15>
_4 = strerror (_3);
# .MEM_17 = VDEF <.MEM_16>
_13 = __printf_chk (1, "xasprintf: %s", _4);
# .MEM_50 = VDEF <.MEM_49(D)>
_1 = getuid ();
# .MEM_51 = VDEF <.MEM_50>
s_28 = getenv ("TMUX_TMPDIR");
# .MEM_95 = VDEF <.MEM_51>
i_65 = xvasprintf (&base, "%s/tmux-", s_28);
# .MEM_97 = VDEF <.MEM_51>
i_66 = xvasprintf (&base, "%s/tmux-", "/tmp");
# .MEM_54 = VDEF <.MEM_45>
_4 = mkdir (_3, 0);
_5 = __errno_location ();
# .MEM_55 = VDEF <.MEM_54>
_8 = lstat (_7, &sb);
_11 = __errno_location ();
_13 = __errno_location ();
# .MEM_56 = VDEF <.MEM_55>
_44 = __realpath_chk (_14, &resolved, 4096);
_16 = __errno_location ();
 <var_decl 0x7fe47bd7f2d0 base
    type <pointer_type 0x7fe47bd62a80
        type <integer_type 0x7fe47bd62888 char public string-flag QI
            size <integer_cst 0x7fe47c238cd8 constant 8>
            unit size <integer_cst 0x7fe47c238cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fe47c24c3f0 precision 8 min <integer_cst 0x7fe47bd65180 -128> max <integer_cst 0x7fe47bd65168 127> context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7fe47bd62a80>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
        pointer_to_this <pointer_type 0x7fe47bd62d20>>
    addressable unsigned DI file ./benchmarks/tmux/leak_4/tmux_leak_4.c line 77 col 9 size <integer_cst 0x7fe47c238be8 64> unit size <integer_cst 0x7fe47c238c00 8>
    align 64 context <function_decl 0x7fe47bd63c00 make_label> chain <var_decl 0x7fe47bd7f240 resolved>>
_18 = __errno_location ();
# .MEM_2 = VDEF <.MEM_1(D)>
make_label ("label");
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
===============The second stage : record fucntion =================

=============== The third stage : Start detection  =================
[40;44m =======node_fun:vasprintf========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path vasprintf  function_call count: 2 level :0========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre_check_funciton:vasprintf========= [0m
[40;42m =======start_check_funciton:vasprintf========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fe47c240990
    type <pointer_type 0x7fe47c2530a8
        type <void_type 0x7fe47c24cf18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fe47c2530a8>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fe47c258bd0>>
   
    def_stmt _4 = malloc (_3);
    version 4
    ptr-info 0x7fe47bd65fc0>
# .MEM_13 = VDEF <.MEM_12(D)>
_4 = malloc (_3);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
*ret_11(D) = _4;
bb index := 2
# VUSE <.MEM_14>
return _6;
In function â€˜vasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
*ret_11(D) = _4;
bb index := 2
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
*ret_11(D) = _4;
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:7: warning: use location
  *ret = malloc(strlen(fmt) + strlen(ap));  /* allocation site */
       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
*ret_11(D) = _4;
bb index := 2
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
*ret_11(D) = _4;
bb index := 2
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
*ret_11(D) = _4;
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:7: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12(D)>
_4 = malloc (_3);
bb index := 2
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12(D)>
_4 = malloc (_3);
bb index := 2
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_4 = malloc (_3);
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:9: warning: use location
  *ret = malloc(strlen(fmt) + strlen(ap));  /* allocation site */
         ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7fe47c240990
    type <pointer_type 0x7fe47c2530a8
        type <void_type 0x7fe47c24cf18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fe47c2530a8>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fe47c258bd0>>
   
    def_stmt _4 = malloc (_3);
    version 4
    ptr-info 0x7fe47bd65fc0>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe47c240990
    type <pointer_type 0x7fe47c2530a8
        type <void_type 0x7fe47c24cf18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fe47c2530a8>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fe47c258bd0>>
   
    def_stmt _4 = malloc (_3);
    version 4
    ptr-info 0x7fe47bd65fc0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe47c240a68
    type <pointer_type 0x7fe47bd629d8
        type <integer_type 0x7fe47bd62930 char readonly public string-flag QI
            size <integer_cst 0x7fe47c238cd8 constant 8>
            unit size <integer_cst 0x7fe47c238cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fe47c24c3f0 precision 8 min <integer_cst 0x7fe47bd65180 -128> max <integer_cst 0x7fe47bd65168 127> context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7fe47bd629d8>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fe47bd6e100 fmt>
    def_stmt GIMPLE_NOP
    version 8
    ptr-info 0x7fe47bd91000>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_12(D)>
_1 = strlen (fmt_8(D));
bb index := 2
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_12(D)>
_1 = strlen (fmt_8(D));
bb index := 2
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_1 = strlen (fmt_8(D));
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:16: warning: use location
  *ret = malloc(strlen(fmt) + strlen(ap));  /* allocation site */
                ^
this stmt is child function---strlen-----

 ================== trace ================== 
 <ssa_name 0x7fe47c240a68
    type <pointer_type 0x7fe47bd629d8
        type <integer_type 0x7fe47bd62930 char readonly public string-flag QI
            size <integer_cst 0x7fe47c238cd8 constant 8>
            unit size <integer_cst 0x7fe47c238cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fe47c24c3f0 precision 8 min <integer_cst 0x7fe47bd65180 -128> max <integer_cst 0x7fe47bd65168 127> context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7fe47bd629d8>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fe47bd6e100 fmt>
    def_stmt GIMPLE_NOP
    version 8
    ptr-info 0x7fe47bd91000>
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _1 + _2;
bb index := 2
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _1 + _2;
bb index := 2
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_3 = _1 + _2;
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:9: warning: use location
  *ret = malloc(strlen(fmt) + strlen(ap));  /* allocation site */
         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12(D)>
_4 = malloc (_3);
bb index := 2
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12(D)>
_4 = malloc (_3);
bb index := 2
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_4 = malloc (_3);
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:9: warning: use location
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7fe47c240a68
    type <pointer_type 0x7fe47bd629d8
        type <integer_type 0x7fe47bd62930 char readonly public string-flag QI
            size <integer_cst 0x7fe47c238cd8 constant 8>
            unit size <integer_cst 0x7fe47c238cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fe47c24c3f0 precision 8 min <integer_cst 0x7fe47bd65180 -128> max <integer_cst 0x7fe47bd65168 127> context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7fe47bd629d8>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fe47bd6e100 fmt>
    def_stmt GIMPLE_NOP
    version 8
    ptr-info 0x7fe47bd91000>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
*ret_11(D) = _4;
bb index := 2
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
*ret_11(D) = _4;
bb index := 2
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
*ret_11(D) = _4;
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:7: warning: use location
  *ret = malloc(strlen(fmt) + strlen(ap));  /* allocation site */
       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe47c240a68
    type <pointer_type 0x7fe47bd629d8
        type <integer_type 0x7fe47bd62930 char readonly public string-flag QI
            size <integer_cst 0x7fe47c238cd8 constant 8>
            unit size <integer_cst 0x7fe47c238cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fe47c24c3f0 precision 8 min <integer_cst 0x7fe47bd65180 -128> max <integer_cst 0x7fe47bd65168 127> context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7fe47bd629d8>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fe47bd6e100 fmt>
    def_stmt GIMPLE_NOP
    version 8
    ptr-info 0x7fe47bd91000>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe47c240ab0
    type <pointer_type 0x7fe47bd62a80
        type <integer_type 0x7fe47bd62888 char public string-flag QI
            size <integer_cst 0x7fe47c238cd8 constant 8>
            unit size <integer_cst 0x7fe47c238cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fe47c24c3f0 precision 8 min <integer_cst 0x7fe47bd65180 -128> max <integer_cst 0x7fe47bd65168 127> context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7fe47bd62a80>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
        pointer_to_this <pointer_type 0x7fe47bd62d20>>
    var <parm_decl 0x7fe47bd6e180 ap>
    def_stmt GIMPLE_NOP
    version 9
    ptr-info 0x7fe47bd91018>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_12(D)>
_2 = strlen (ap_9(D));
bb index := 2
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_12(D)>
_2 = strlen (ap_9(D));
bb index := 2
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_2 = strlen (ap_9(D));
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:30: warning: use location
  *ret = malloc(strlen(fmt) + strlen(ap));  /* allocation site */
                              ^
this stmt is child function---strlen-----

 ================== trace ================== 
 <ssa_name 0x7fe47c240ab0
    type <pointer_type 0x7fe47bd62a80
        type <integer_type 0x7fe47bd62888 char public string-flag QI
            size <integer_cst 0x7fe47c238cd8 constant 8>
            unit size <integer_cst 0x7fe47c238cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fe47c24c3f0 precision 8 min <integer_cst 0x7fe47bd65180 -128> max <integer_cst 0x7fe47bd65168 127> context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7fe47bd62a80>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
        pointer_to_this <pointer_type 0x7fe47bd62d20>>
    var <parm_decl 0x7fe47bd6e180 ap>
    def_stmt GIMPLE_NOP
    version 9
    ptr-info 0x7fe47bd91018>
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _1 + _2;
bb index := 2
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _1 + _2;
bb index := 2
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_3 = _1 + _2;
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:9: warning: use location
  *ret = malloc(strlen(fmt) + strlen(ap));  /* allocation site */
         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12(D)>
_4 = malloc (_3);
bb index := 2
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12(D)>
_4 = malloc (_3);
bb index := 2
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_4 = malloc (_3);
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:9: warning: use location
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7fe47c240ab0
    type <pointer_type 0x7fe47bd62a80
        type <integer_type 0x7fe47bd62888 char public string-flag QI
            size <integer_cst 0x7fe47c238cd8 constant 8>
            unit size <integer_cst 0x7fe47c238cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fe47c24c3f0 precision 8 min <integer_cst 0x7fe47bd65180 -128> max <integer_cst 0x7fe47bd65168 127> context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7fe47bd62a80>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
        pointer_to_this <pointer_type 0x7fe47bd62d20>>
    var <parm_decl 0x7fe47bd6e180 ap>
    def_stmt GIMPLE_NOP
    version 9
    ptr-info 0x7fe47bd91018>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
*ret_11(D) = _4;
bb index := 2
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
*ret_11(D) = _4;
bb index := 2
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
*ret_11(D) = _4;
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:7: warning: use location
  *ret = malloc(strlen(fmt) + strlen(ap));  /* allocation site */
       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe47c240ab0
    type <pointer_type 0x7fe47bd62a80
        type <integer_type 0x7fe47bd62888 char public string-flag QI
            size <integer_cst 0x7fe47c238cd8 constant 8>
            unit size <integer_cst 0x7fe47c238cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fe47c24c3f0 precision 8 min <integer_cst 0x7fe47bd65180 -128> max <integer_cst 0x7fe47bd65168 127> context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7fe47bd62a80>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
        pointer_to_this <pointer_type 0x7fe47bd62d20>>
    var <parm_decl 0x7fe47bd6e180 ap>
    def_stmt GIMPLE_NOP
    version 9
    ptr-info 0x7fe47bd91018>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe47c240948
    type <integer_type 0x7fe47c24c7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fe47c24c738 precision 64 min <integer_cst 0x7fe47c238eb8 0> max <integer_cst 0x7fe47c23a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fe47c2589d8>>
   
    def_stmt _3 = _1 + _2;
    version 3>
_3 = _1 + _2;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12(D)>
_4 = malloc (_3);
bb index := 2
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12(D)>
_4 = malloc (_3);
bb index := 2
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_4 = malloc (_3);
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:9: warning: use location
  *ret = malloc(strlen(fmt) + strlen(ap));  /* allocation site */
         ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7fe47c240948
    type <integer_type 0x7fe47c24c7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fe47c24c738 precision 64 min <integer_cst 0x7fe47c238eb8 0> max <integer_cst 0x7fe47c23a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fe47c2589d8>>
   
    def_stmt _3 = _1 + _2;
    version 3>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
*ret_11(D) = _4;
bb index := 2
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
*ret_11(D) = _4;
bb index := 2
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
*ret_11(D) = _4;
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:7: warning: use location
  *ret = malloc(strlen(fmt) + strlen(ap));  /* allocation site */
       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe47c240948
    type <integer_type 0x7fe47c24c7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fe47c24c738 precision 64 min <integer_cst 0x7fe47c238eb8 0> max <integer_cst 0x7fe47c23a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fe47c2589d8>>
   
    def_stmt _3 = _1 + _2;
    version 3>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:vasprintf========= [0m
[40;44m =======node_fun:xvasprintf========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path xvasprintf  function_call count: 5 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:strerror========= [0m
[40;33m =======POP node_fun stack:strerror========= [0m
[40;42m =======pre add _ fucntion:__errno_location========= [0m
[40;33m =======POP node_fun stack:__errno_location========= [0m
[40;42m =======pre add _ fucntion:vasprintf========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path vasprintf  function_call count: 2 level :1========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre_check_funciton:vasprintf========= [0m
[40;42m =======start_check_funciton:vasprintf========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fe47c240990
    type <pointer_type 0x7fe47c2530a8
        type <void_type 0x7fe47c24cf18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fe47c2530a8>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fe47c258bd0>>
   
    def_stmt _4 = malloc (_3);
    version 4
    ptr-info 0x7fe47bd65fc0>
# .MEM_13 = VDEF <.MEM_12(D)>
_4 = malloc (_3);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
*ret_11(D) = _4;
bb index := 2
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
*ret_11(D) = _4;
bb index := 2
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
*ret_11(D) = _4;
In function â€˜xvasprintfâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:7: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
*ret_11(D) = _4;
bb index := 2
# VUSE <.MEM_14>
return _6;
In function â€˜vasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
*ret_11(D) = _4;
bb index := 2
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
*ret_11(D) = _4;
In function â€˜xvasprintfâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:7: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12(D)>
_4 = malloc (_3);
bb index := 2
# VUSE <.MEM_14>
return _6;
In function â€˜vasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12(D)>
_4 = malloc (_3);
bb index := 2
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_4 = malloc (_3);
In function â€˜xvasprintfâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:9: warning: use location
  *ret = malloc(strlen(fmt) + strlen(ap));  /* allocation site */
         ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7fe47c240990
    type <pointer_type 0x7fe47c2530a8
        type <void_type 0x7fe47c24cf18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fe47c2530a8>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fe47c258bd0>>
   
    def_stmt _4 = malloc (_3);
    version 4
    ptr-info 0x7fe47bd65fc0>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe47c240990
    type <pointer_type 0x7fe47c2530a8
        type <void_type 0x7fe47c24cf18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fe47c2530a8>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fe47c258bd0>>
   
    def_stmt _4 = malloc (_3);
    version 4
    ptr-info 0x7fe47bd65fc0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe47c240a68
    type <pointer_type 0x7fe47bd629d8
        type <integer_type 0x7fe47bd62930 char readonly public string-flag QI
            size <integer_cst 0x7fe47c238cd8 constant 8>
            unit size <integer_cst 0x7fe47c238cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fe47c24c3f0 precision 8 min <integer_cst 0x7fe47bd65180 -128> max <integer_cst 0x7fe47bd65168 127> context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7fe47bd629d8>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fe47bd6e100 fmt>
    def_stmt GIMPLE_NOP
    version 8
    ptr-info 0x7fe47bd91000>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_12(D)>
_1 = strlen (fmt_8(D));
bb index := 2
# VUSE <.MEM_14>
return _6;
In function â€˜vasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_12(D)>
_1 = strlen (fmt_8(D));
bb index := 2
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_1 = strlen (fmt_8(D));
In function â€˜xvasprintfâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:16: warning: use location
  *ret = malloc(strlen(fmt) + strlen(ap));  /* allocation site */
                ^
this stmt is child function---strlen-----

 ================== trace ================== 
 <ssa_name 0x7fe47c240a68
    type <pointer_type 0x7fe47bd629d8
        type <integer_type 0x7fe47bd62930 char readonly public string-flag QI
            size <integer_cst 0x7fe47c238cd8 constant 8>
            unit size <integer_cst 0x7fe47c238cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fe47c24c3f0 precision 8 min <integer_cst 0x7fe47bd65180 -128> max <integer_cst 0x7fe47bd65168 127> context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7fe47bd629d8>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fe47bd6e100 fmt>
    def_stmt GIMPLE_NOP
    version 8
    ptr-info 0x7fe47bd91000>
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _1 + _2;
bb index := 2
# VUSE <.MEM_14>
return _6;
In function â€˜vasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _1 + _2;
bb index := 2
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_3 = _1 + _2;
In function â€˜xvasprintfâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:9: warning: use location
  *ret = malloc(strlen(fmt) + strlen(ap));  /* allocation site */
         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12(D)>
_4 = malloc (_3);
bb index := 2
# VUSE <.MEM_14>
return _6;
In function â€˜vasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12(D)>
_4 = malloc (_3);
bb index := 2
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_4 = malloc (_3);
In function â€˜xvasprintfâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:9: warning: use location
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7fe47c240a68
    type <pointer_type 0x7fe47bd629d8
        type <integer_type 0x7fe47bd62930 char readonly public string-flag QI
            size <integer_cst 0x7fe47c238cd8 constant 8>
            unit size <integer_cst 0x7fe47c238cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fe47c24c3f0 precision 8 min <integer_cst 0x7fe47bd65180 -128> max <integer_cst 0x7fe47bd65168 127> context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7fe47bd629d8>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fe47bd6e100 fmt>
    def_stmt GIMPLE_NOP
    version 8
    ptr-info 0x7fe47bd91000>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
*ret_11(D) = _4;
bb index := 2
# VUSE <.MEM_14>
return _6;
In function â€˜vasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
*ret_11(D) = _4;
bb index := 2
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
*ret_11(D) = _4;
In function â€˜xvasprintfâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:7: warning: use location
  *ret = malloc(strlen(fmt) + strlen(ap));  /* allocation site */
       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe47c240a68
    type <pointer_type 0x7fe47bd629d8
        type <integer_type 0x7fe47bd62930 char readonly public string-flag QI
            size <integer_cst 0x7fe47c238cd8 constant 8>
            unit size <integer_cst 0x7fe47c238cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fe47c24c3f0 precision 8 min <integer_cst 0x7fe47bd65180 -128> max <integer_cst 0x7fe47bd65168 127> context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7fe47bd629d8>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fe47bd6e100 fmt>
    def_stmt GIMPLE_NOP
    version 8
    ptr-info 0x7fe47bd91000>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe47c240ab0
    type <pointer_type 0x7fe47bd62a80
        type <integer_type 0x7fe47bd62888 char public string-flag QI
            size <integer_cst 0x7fe47c238cd8 constant 8>
            unit size <integer_cst 0x7fe47c238cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fe47c24c3f0 precision 8 min <integer_cst 0x7fe47bd65180 -128> max <integer_cst 0x7fe47bd65168 127> context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7fe47bd62a80>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
        pointer_to_this <pointer_type 0x7fe47bd62d20>>
    var <parm_decl 0x7fe47bd6e180 ap>
    def_stmt GIMPLE_NOP
    version 9
    ptr-info 0x7fe47bd91018>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_12(D)>
_2 = strlen (ap_9(D));
bb index := 2
# VUSE <.MEM_14>
return _6;
In function â€˜vasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_12(D)>
_2 = strlen (ap_9(D));
bb index := 2
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_2 = strlen (ap_9(D));
In function â€˜xvasprintfâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:30: warning: use location
  *ret = malloc(strlen(fmt) + strlen(ap));  /* allocation site */
                              ^
this stmt is child function---strlen-----

 ================== trace ================== 
 <ssa_name 0x7fe47c240ab0
    type <pointer_type 0x7fe47bd62a80
        type <integer_type 0x7fe47bd62888 char public string-flag QI
            size <integer_cst 0x7fe47c238cd8 constant 8>
            unit size <integer_cst 0x7fe47c238cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fe47c24c3f0 precision 8 min <integer_cst 0x7fe47bd65180 -128> max <integer_cst 0x7fe47bd65168 127> context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7fe47bd62a80>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
        pointer_to_this <pointer_type 0x7fe47bd62d20>>
    var <parm_decl 0x7fe47bd6e180 ap>
    def_stmt GIMPLE_NOP
    version 9
    ptr-info 0x7fe47bd91018>
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _1 + _2;
bb index := 2
# VUSE <.MEM_14>
return _6;
In function â€˜vasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _1 + _2;
bb index := 2
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_3 = _1 + _2;
In function â€˜xvasprintfâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:9: warning: use location
  *ret = malloc(strlen(fmt) + strlen(ap));  /* allocation site */
         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12(D)>
_4 = malloc (_3);
bb index := 2
# VUSE <.MEM_14>
return _6;
In function â€˜vasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12(D)>
_4 = malloc (_3);
bb index := 2
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_4 = malloc (_3);
In function â€˜xvasprintfâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:9: warning: use location
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7fe47c240ab0
    type <pointer_type 0x7fe47bd62a80
        type <integer_type 0x7fe47bd62888 char public string-flag QI
            size <integer_cst 0x7fe47c238cd8 constant 8>
            unit size <integer_cst 0x7fe47c238cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fe47c24c3f0 precision 8 min <integer_cst 0x7fe47bd65180 -128> max <integer_cst 0x7fe47bd65168 127> context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7fe47bd62a80>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
        pointer_to_this <pointer_type 0x7fe47bd62d20>>
    var <parm_decl 0x7fe47bd6e180 ap>
    def_stmt GIMPLE_NOP
    version 9
    ptr-info 0x7fe47bd91018>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
*ret_11(D) = _4;
bb index := 2
# VUSE <.MEM_14>
return _6;
In function â€˜vasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
*ret_11(D) = _4;
bb index := 2
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
*ret_11(D) = _4;
In function â€˜xvasprintfâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:7: warning: use location
  *ret = malloc(strlen(fmt) + strlen(ap));  /* allocation site */
       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe47c240ab0
    type <pointer_type 0x7fe47bd62a80
        type <integer_type 0x7fe47bd62888 char public string-flag QI
            size <integer_cst 0x7fe47c238cd8 constant 8>
            unit size <integer_cst 0x7fe47c238cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fe47c24c3f0 precision 8 min <integer_cst 0x7fe47bd65180 -128> max <integer_cst 0x7fe47bd65168 127> context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7fe47bd62a80>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
        pointer_to_this <pointer_type 0x7fe47bd62d20>>
    var <parm_decl 0x7fe47bd6e180 ap>
    def_stmt GIMPLE_NOP
    version 9
    ptr-info 0x7fe47bd91018>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe47c240948
    type <integer_type 0x7fe47c24c7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fe47c24c738 precision 64 min <integer_cst 0x7fe47c238eb8 0> max <integer_cst 0x7fe47c23a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fe47c2589d8>>
   
    def_stmt _3 = _1 + _2;
    version 3>
_3 = _1 + _2;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12(D)>
_4 = malloc (_3);
bb index := 2
# VUSE <.MEM_14>
return _6;
In function â€˜vasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12(D)>
_4 = malloc (_3);
bb index := 2
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_4 = malloc (_3);
In function â€˜xvasprintfâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:9: warning: use location
  *ret = malloc(strlen(fmt) + strlen(ap));  /* allocation site */
         ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7fe47c240948
    type <integer_type 0x7fe47c24c7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fe47c24c738 precision 64 min <integer_cst 0x7fe47c238eb8 0> max <integer_cst 0x7fe47c23a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fe47c2589d8>>
   
    def_stmt _3 = _1 + _2;
    version 3>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
*ret_11(D) = _4;
bb index := 2
# VUSE <.MEM_14>
return _6;
In function â€˜vasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
*ret_11(D) = _4;
bb index := 2
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
*ret_11(D) = _4;
In function â€˜xvasprintfâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:7: warning: use location
  *ret = malloc(strlen(fmt) + strlen(ap));  /* allocation site */
       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe47c240948
    type <integer_type 0x7fe47c24c7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fe47c24c738 precision 64 min <integer_cst 0x7fe47c238eb8 0> max <integer_cst 0x7fe47c23a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fe47c2589d8>>
   
    def_stmt _3 = _1 + _2;
    version 3>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:vasprintf========= [0m
[40;42m =======pre_check_funciton:xvasprintf========= [0m
[40;42m =======start_check_funciton:xvasprintf========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fe47c240d80
    type <pointer_type 0x7fe47bd62d20
        type <pointer_type 0x7fe47bd62a80 type <integer_type 0x7fe47bd62888 char>
            public unsigned DI
            size <integer_cst 0x7fe47c238be8 constant 64>
            unit size <integer_cst 0x7fe47c238c00 constant 8>
            align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7fe47bd62d20>>
        public unsigned DI size <integer_cst 0x7fe47c238be8 64> unit size <integer_cst 0x7fe47c238c00 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fe47bd6e280 ret>
    def_stmt GIMPLE_NOP
    version 6
    ptr-info 0x7fe47bd91078>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_15>
_1 = *ret_6(D);
bb index := 3
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_15>
_1 = *ret_6(D);
bb index := 3
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_15>
_1 = *ret_6(D);
bb index := 3
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_15>
_1 = *ret_6(D);
bb index := 3
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
  return i;
         ^
beacuse in succ := 5 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_15>
_1 = *ret_6(D);
bb index := 3
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_15>
_1 = *ret_6(D);
bb index := 3
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================
_1 = *ret_6(D);
./benchmarks/tmux/leak_4/tmux_leak_4.c:68:15: warning: use location
  if (i < 0 || *ret == NULL)
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 3
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 3
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 3
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 3
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
  return i;
         ^
beacuse in succ := 5 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 3
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 3
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================
if (_1 == 0B)
./benchmarks/tmux/leak_4/tmux_leak_4.c:68:12: warning: use location
  if (i < 0 || *ret == NULL)
            ^
if (_1 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_4/tmux_leak_4.c:68:12: warning: use location
Cond in fucntion xvasprintf basic block 3
 ================== possible direct basic block ================= 
from xvasprintf basic block 4
 ================== possible direct basic block ================= 
from xvasprintf basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14(D)>
i_10 = vasprintf (ret_6(D), fmt_7(D), ap_8(D));
bb index := 2
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14(D)>
i_10 = vasprintf (ret_6(D), fmt_7(D), ap_8(D));
bb index := 2
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14(D)>
i_10 = vasprintf (ret_6(D), fmt_7(D), ap_8(D));
bb index := 2
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
  return i;
         ^
beacuse in succ := 5 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14(D)>
i_10 = vasprintf (ret_6(D), fmt_7(D), ap_8(D));
bb index := 2
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
i_10 = vasprintf (ret_6(D), fmt_7(D), ap_8(D));
./benchmarks/tmux/leak_4/tmux_leak_4.c:66:4: warning: use location
  i = vasprintf(ret, fmt, ap);
    ^
this stmt is child function---vasprintf-----

 ================== trace ================== 
 <ssa_name 0x7fe47c240d80
    type <pointer_type 0x7fe47bd62d20
        type <pointer_type 0x7fe47bd62a80 type <integer_type 0x7fe47bd62888 char>
            public unsigned DI
            size <integer_cst 0x7fe47c238be8 constant 64>
            unit size <integer_cst 0x7fe47c238c00 constant 8>
            align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7fe47bd62d20>>
        public unsigned DI size <integer_cst 0x7fe47c238be8 64> unit size <integer_cst 0x7fe47c238c00 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fe47bd6e280 ret>
    def_stmt GIMPLE_NOP
    version 6
    ptr-info 0x7fe47bd91078>
trace fucntion name:vasprintf 
[40;44m =======trace_function_path vasprintf  function_call count: 2 level :0========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (i_10 < 0)
bb index := 2
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (i_10 < 0)
bb index := 2
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (i_10 < 0)
bb index := 2
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
  return i;
         ^
beacuse in succ := 5 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (i_10 < 0)
bb index := 2
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
if (i_10 < 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:68:5: warning: use location
  if (i < 0 || *ret == NULL)
     ^
if (i_10 < 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_4/tmux_leak_4.c:68:5: warning: use location
Cond in fucntion xvasprintf basic block 2
 ================== possible direct basic block ================= 
from xvasprintf basic block 4
 ================== possible direct basic block ================= 
from xvasprintf basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe47c240d80
    type <pointer_type 0x7fe47bd62d20
        type <pointer_type 0x7fe47bd62a80 type <integer_type 0x7fe47bd62888 char>
            public unsigned DI
            size <integer_cst 0x7fe47c238be8 constant 64>
            unit size <integer_cst 0x7fe47c238c00 constant 8>
            align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7fe47bd62d20>>
        public unsigned DI size <integer_cst 0x7fe47c238be8 64> unit size <integer_cst 0x7fe47c238c00 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fe47bd6e280 ret>
    def_stmt GIMPLE_NOP
    version 6
    ptr-info 0x7fe47bd91078>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe47c240ca8
    type <pointer_type 0x7fe47c253a80
        type <integer_type 0x7fe47c24c5e8 int public SI
            size <integer_cst 0x7fe47c238e28 constant 32>
            unit size <integer_cst 0x7fe47c238e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7fe47c24c5e8 precision 32 min <integer_cst 0x7fe47c238de0 -2147483648> max <integer_cst 0x7fe47c238df8 2147483647>
            pointer_to_this <pointer_type 0x7fe47c253a80>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _2 = __errno_location ();
    version 2
    ptr-info 0x7fe47bd91060>
_2 = __errno_location ();

 ================== trace ptable================== 
trace fucntion name:__errno_location 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---__errno_location-----
this other function ------__errno_location-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_15>
_3 = *_2;
bb index := 4
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_15>
_3 = *_2;
bb index := 4
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_15>
_3 = *_2;
bb index := 4
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
  return i;
         ^
beacuse in succ := 5 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_15>
_3 = *_2;
bb index := 4
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
_3 = *_2;
./benchmarks/tmux/leak_4/tmux_leak_4.c:69:3: warning: use location
   fatalx("xasprintf: %s", strerror(errno));
   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
_4 = strerror (_3);
bb index := 4
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
_4 = strerror (_3);
bb index := 4
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
_4 = strerror (_3);
bb index := 4
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
  return i;
         ^
beacuse in succ := 5 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
_4 = strerror (_3);
bb index := 4
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
_4 = strerror (_3);
./benchmarks/tmux/leak_4/tmux_leak_4.c:69:3: warning: use location
   fatalx("xasprintf: %s", strerror(errno));
   ^
this stmt is child function---strerror-----

 ================== trace ================== 
 <ssa_name 0x7fe47c240ca8
    type <pointer_type 0x7fe47c253a80
        type <integer_type 0x7fe47c24c5e8 int public SI
            size <integer_cst 0x7fe47c238e28 constant 32>
            unit size <integer_cst 0x7fe47c238e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7fe47c24c5e8 precision 32 min <integer_cst 0x7fe47c238de0 -2147483648> max <integer_cst 0x7fe47c238df8 2147483647>
            pointer_to_this <pointer_type 0x7fe47c253a80>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _2 = __errno_location ();
    version 2
    ptr-info 0x7fe47bd91060>
trace fucntion name:strerror 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
_13 = __printf_chk (1, "xasprintf: %s", _4);
bb index := 4
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
_13 = __printf_chk (1, "xasprintf: %s", _4);
bb index := 4
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
_13 = __printf_chk (1, "xasprintf: %s", _4);
bb index := 4
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
  return i;
         ^
beacuse in succ := 5 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
_13 = __printf_chk (1, "xasprintf: %s", _4);
bb index := 4
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
_13 = __printf_chk (1, "xasprintf: %s", _4);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7fe47c240ca8
    type <pointer_type 0x7fe47c253a80
        type <integer_type 0x7fe47c24c5e8 int public SI
            size <integer_cst 0x7fe47c238e28 constant 32>
            unit size <integer_cst 0x7fe47c238e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7fe47c24c5e8 precision 32 min <integer_cst 0x7fe47c238de0 -2147483648> max <integer_cst 0x7fe47c238df8 2147483647>
            pointer_to_this <pointer_type 0x7fe47c253a80>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _2 = __errno_location ();
    version 2
    ptr-info 0x7fe47bd91060>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = __errno_location ();
bb index := 4
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = __errno_location ();
bb index := 4
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = __errno_location ();
bb index := 4
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = __errno_location ();
bb index := 4
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
_2 = __errno_location ();
./benchmarks/tmux/leak_4/tmux_leak_4.c:69:3: warning: use location
   fatalx("xasprintf: %s", strerror(errno));
   ^
this stmt is child function---__errno_location-----

 ================== trace ================== 
 <ssa_name 0x7fe47c240ca8
    type <pointer_type 0x7fe47c253a80
        type <integer_type 0x7fe47c24c5e8 int public SI
            size <integer_cst 0x7fe47c238e28 constant 32>
            unit size <integer_cst 0x7fe47c238e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7fe47c24c5e8 precision 32 min <integer_cst 0x7fe47c238de0 -2147483648> max <integer_cst 0x7fe47c238df8 2147483647>
            pointer_to_this <pointer_type 0x7fe47c253a80>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _2 = __errno_location ();
    version 2
    ptr-info 0x7fe47bd91060>
trace fucntion name:__errno_location 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe47c240ca8
    type <pointer_type 0x7fe47c253a80
        type <integer_type 0x7fe47c24c5e8 int public SI
            size <integer_cst 0x7fe47c238e28 constant 32>
            unit size <integer_cst 0x7fe47c238e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7fe47c24c5e8 precision 32 min <integer_cst 0x7fe47c238de0 -2147483648> max <integer_cst 0x7fe47c238df8 2147483647>
            pointer_to_this <pointer_type 0x7fe47c253a80>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _2 = __errno_location ();
    version 2
    ptr-info 0x7fe47bd91060>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe47c240cf0
    type <integer_type 0x7fe47c24c5e8 int public SI
        size <integer_cst 0x7fe47c238e28 constant 32>
        unit size <integer_cst 0x7fe47c238e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fe47c24c5e8 precision 32 min <integer_cst 0x7fe47c238de0 -2147483648> max <integer_cst 0x7fe47c238df8 2147483647>
        pointer_to_this <pointer_type 0x7fe47c253a80>>
   
    def_stmt _3 = *_2;
    version 3>
# VUSE <.MEM_15>
_3 = *_2;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
_4 = strerror (_3);
bb index := 4
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
_4 = strerror (_3);
bb index := 4
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
_4 = strerror (_3);
bb index := 4
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
  return i;
         ^
beacuse in succ := 5 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
_4 = strerror (_3);
bb index := 4
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
_4 = strerror (_3);
./benchmarks/tmux/leak_4/tmux_leak_4.c:69:3: warning: use location
   fatalx("xasprintf: %s", strerror(errno));
   ^
this stmt is child function---strerror-----

 ================== trace ================== 
 <ssa_name 0x7fe47c240cf0
    type <integer_type 0x7fe47c24c5e8 int public SI
        size <integer_cst 0x7fe47c238e28 constant 32>
        unit size <integer_cst 0x7fe47c238e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fe47c24c5e8 precision 32 min <integer_cst 0x7fe47c238de0 -2147483648> max <integer_cst 0x7fe47c238df8 2147483647>
        pointer_to_this <pointer_type 0x7fe47c253a80>>
   
    def_stmt _3 = *_2;
    version 3>
trace fucntion name:strerror 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
_13 = __printf_chk (1, "xasprintf: %s", _4);
bb index := 4
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
_13 = __printf_chk (1, "xasprintf: %s", _4);
bb index := 4
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
_13 = __printf_chk (1, "xasprintf: %s", _4);
bb index := 4
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
  return i;
         ^
beacuse in succ := 5 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
_13 = __printf_chk (1, "xasprintf: %s", _4);
bb index := 4
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
_13 = __printf_chk (1, "xasprintf: %s", _4);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7fe47c240cf0
    type <integer_type 0x7fe47c24c5e8 int public SI
        size <integer_cst 0x7fe47c238e28 constant 32>
        unit size <integer_cst 0x7fe47c238e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fe47c24c5e8 precision 32 min <integer_cst 0x7fe47c238de0 -2147483648> max <integer_cst 0x7fe47c238df8 2147483647>
        pointer_to_this <pointer_type 0x7fe47c253a80>>
   
    def_stmt _3 = *_2;
    version 3>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe47c240cf0
    type <integer_type 0x7fe47c24c5e8 int public SI
        size <integer_cst 0x7fe47c238e28 constant 32>
        unit size <integer_cst 0x7fe47c238e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fe47c24c5e8 precision 32 min <integer_cst 0x7fe47c238de0 -2147483648> max <integer_cst 0x7fe47c238df8 2147483647>
        pointer_to_this <pointer_type 0x7fe47c253a80>>
   
    def_stmt _3 = *_2;
    version 3>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fe47c238f90 type <integer_type 0x7fe47c24c5e8 int> constant 1>
[40;33m =======POP node_fun stack:xvasprintf========= [0m
[40;44m =======node_fun:make_label========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path make_label  function_call count: 8 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:__errno_location========= [0m
[40;33m =======POP node_fun stack:__errno_location========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:__realpath_chk========= [0m
[40;33m =======POP node_fun stack:__realpath_chk========= [0m
[40;42m =======pre add _ fucntion:lstat========= [0m
[40;33m =======POP node_fun stack:lstat========= [0m
[40;42m =======pre add _ fucntion:mkdir========= [0m
[40;33m =======POP node_fun stack:mkdir========= [0m
[40;42m =======pre add _ fucntion:xvasprintf========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path xvasprintf  function_call count: 5 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:strerror========= [0m
[40;33m =======POP node_fun stack:strerror========= [0m
[40;42m =======pre add _ fucntion:__errno_location========= [0m
[40;33m =======POP node_fun stack:__errno_location========= [0m
[40;42m =======pre add _ fucntion:vasprintf========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path vasprintf  function_call count: 2 level :2========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre_check_funciton:vasprintf========= [0m
[40;42m =======start_check_funciton:vasprintf========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fe47c240990
    type <pointer_type 0x7fe47c2530a8
        type <void_type 0x7fe47c24cf18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fe47c2530a8>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fe47c258bd0>>
   
    def_stmt _4 = malloc (_3);
    version 4
    ptr-info 0x7fe47bd65fc0>
# .MEM_13 = VDEF <.MEM_12(D)>
_4 = malloc (_3);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
*ret_11(D) = _4;
bb index := 2
# VUSE <.MEM_14>
return _6;
In function â€˜vasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
*ret_11(D) = _4;
bb index := 2
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
*ret_11(D) = _4;
In function â€˜make_labelâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:7: warning: use location
  *ret = malloc(strlen(fmt) + strlen(ap));  /* allocation site */
       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
*ret_11(D) = _4;
bb index := 2
# VUSE <.MEM_14>
return _6;
In function â€˜vasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
*ret_11(D) = _4;
bb index := 2
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
*ret_11(D) = _4;
In function â€˜make_labelâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:7: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12(D)>
_4 = malloc (_3);
bb index := 2
# VUSE <.MEM_14>
return _6;
In function â€˜vasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12(D)>
_4 = malloc (_3);
bb index := 2
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_4 = malloc (_3);
In function â€˜make_labelâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:9: warning: use location
  *ret = malloc(strlen(fmt) + strlen(ap));  /* allocation site */
         ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7fe47c240990
    type <pointer_type 0x7fe47c2530a8
        type <void_type 0x7fe47c24cf18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fe47c2530a8>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fe47c258bd0>>
   
    def_stmt _4 = malloc (_3);
    version 4
    ptr-info 0x7fe47bd65fc0>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe47c240990
    type <pointer_type 0x7fe47c2530a8
        type <void_type 0x7fe47c24cf18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fe47c2530a8>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fe47c258bd0>>
   
    def_stmt _4 = malloc (_3);
    version 4
    ptr-info 0x7fe47bd65fc0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe47c240a68
    type <pointer_type 0x7fe47bd629d8
        type <integer_type 0x7fe47bd62930 char readonly public string-flag QI
            size <integer_cst 0x7fe47c238cd8 constant 8>
            unit size <integer_cst 0x7fe47c238cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fe47c24c3f0 precision 8 min <integer_cst 0x7fe47bd65180 -128> max <integer_cst 0x7fe47bd65168 127> context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7fe47bd629d8>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fe47bd6e100 fmt>
    def_stmt GIMPLE_NOP
    version 8
    ptr-info 0x7fe47bd91000>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_12(D)>
_1 = strlen (fmt_8(D));
bb index := 2
# VUSE <.MEM_14>
return _6;
In function â€˜vasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_12(D)>
_1 = strlen (fmt_8(D));
bb index := 2
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_1 = strlen (fmt_8(D));
In function â€˜make_labelâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:16: warning: use location
  *ret = malloc(strlen(fmt) + strlen(ap));  /* allocation site */
                ^
this stmt is child function---strlen-----

 ================== trace ================== 
 <ssa_name 0x7fe47c240a68
    type <pointer_type 0x7fe47bd629d8
        type <integer_type 0x7fe47bd62930 char readonly public string-flag QI
            size <integer_cst 0x7fe47c238cd8 constant 8>
            unit size <integer_cst 0x7fe47c238cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fe47c24c3f0 precision 8 min <integer_cst 0x7fe47bd65180 -128> max <integer_cst 0x7fe47bd65168 127> context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7fe47bd629d8>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fe47bd6e100 fmt>
    def_stmt GIMPLE_NOP
    version 8
    ptr-info 0x7fe47bd91000>
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _1 + _2;
bb index := 2
# VUSE <.MEM_14>
return _6;
In function â€˜vasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _1 + _2;
bb index := 2
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_3 = _1 + _2;
In function â€˜make_labelâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:9: warning: use location
  *ret = malloc(strlen(fmt) + strlen(ap));  /* allocation site */
         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12(D)>
_4 = malloc (_3);
bb index := 2
# VUSE <.MEM_14>
return _6;
In function â€˜vasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12(D)>
_4 = malloc (_3);
bb index := 2
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_4 = malloc (_3);
In function â€˜make_labelâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:9: warning: use location
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7fe47c240a68
    type <pointer_type 0x7fe47bd629d8
        type <integer_type 0x7fe47bd62930 char readonly public string-flag QI
            size <integer_cst 0x7fe47c238cd8 constant 8>
            unit size <integer_cst 0x7fe47c238cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fe47c24c3f0 precision 8 min <integer_cst 0x7fe47bd65180 -128> max <integer_cst 0x7fe47bd65168 127> context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7fe47bd629d8>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fe47bd6e100 fmt>
    def_stmt GIMPLE_NOP
    version 8
    ptr-info 0x7fe47bd91000>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
*ret_11(D) = _4;
bb index := 2
# VUSE <.MEM_14>
return _6;
In function â€˜vasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
*ret_11(D) = _4;
bb index := 2
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
*ret_11(D) = _4;
In function â€˜make_labelâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:7: warning: use location
  *ret = malloc(strlen(fmt) + strlen(ap));  /* allocation site */
       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe47c240a68
    type <pointer_type 0x7fe47bd629d8
        type <integer_type 0x7fe47bd62930 char readonly public string-flag QI
            size <integer_cst 0x7fe47c238cd8 constant 8>
            unit size <integer_cst 0x7fe47c238cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fe47c24c3f0 precision 8 min <integer_cst 0x7fe47bd65180 -128> max <integer_cst 0x7fe47bd65168 127> context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7fe47bd629d8>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fe47bd6e100 fmt>
    def_stmt GIMPLE_NOP
    version 8
    ptr-info 0x7fe47bd91000>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe47c240ab0
    type <pointer_type 0x7fe47bd62a80
        type <integer_type 0x7fe47bd62888 char public string-flag QI
            size <integer_cst 0x7fe47c238cd8 constant 8>
            unit size <integer_cst 0x7fe47c238cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fe47c24c3f0 precision 8 min <integer_cst 0x7fe47bd65180 -128> max <integer_cst 0x7fe47bd65168 127> context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7fe47bd62a80>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
        pointer_to_this <pointer_type 0x7fe47bd62d20>>
    var <parm_decl 0x7fe47bd6e180 ap>
    def_stmt GIMPLE_NOP
    version 9
    ptr-info 0x7fe47bd91018>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_12(D)>
_2 = strlen (ap_9(D));
bb index := 2
# VUSE <.MEM_14>
return _6;
In function â€˜vasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_12(D)>
_2 = strlen (ap_9(D));
bb index := 2
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_2 = strlen (ap_9(D));
In function â€˜make_labelâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:30: warning: use location
  *ret = malloc(strlen(fmt) + strlen(ap));  /* allocation site */
                              ^
this stmt is child function---strlen-----

 ================== trace ================== 
 <ssa_name 0x7fe47c240ab0
    type <pointer_type 0x7fe47bd62a80
        type <integer_type 0x7fe47bd62888 char public string-flag QI
            size <integer_cst 0x7fe47c238cd8 constant 8>
            unit size <integer_cst 0x7fe47c238cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fe47c24c3f0 precision 8 min <integer_cst 0x7fe47bd65180 -128> max <integer_cst 0x7fe47bd65168 127> context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7fe47bd62a80>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
        pointer_to_this <pointer_type 0x7fe47bd62d20>>
    var <parm_decl 0x7fe47bd6e180 ap>
    def_stmt GIMPLE_NOP
    version 9
    ptr-info 0x7fe47bd91018>
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _1 + _2;
bb index := 2
# VUSE <.MEM_14>
return _6;
In function â€˜vasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _1 + _2;
bb index := 2
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_3 = _1 + _2;
In function â€˜make_labelâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:9: warning: use location
  *ret = malloc(strlen(fmt) + strlen(ap));  /* allocation site */
         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12(D)>
_4 = malloc (_3);
bb index := 2
# VUSE <.MEM_14>
return _6;
In function â€˜vasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12(D)>
_4 = malloc (_3);
bb index := 2
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_4 = malloc (_3);
In function â€˜make_labelâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:9: warning: use location
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7fe47c240ab0
    type <pointer_type 0x7fe47bd62a80
        type <integer_type 0x7fe47bd62888 char public string-flag QI
            size <integer_cst 0x7fe47c238cd8 constant 8>
            unit size <integer_cst 0x7fe47c238cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fe47c24c3f0 precision 8 min <integer_cst 0x7fe47bd65180 -128> max <integer_cst 0x7fe47bd65168 127> context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7fe47bd62a80>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
        pointer_to_this <pointer_type 0x7fe47bd62d20>>
    var <parm_decl 0x7fe47bd6e180 ap>
    def_stmt GIMPLE_NOP
    version 9
    ptr-info 0x7fe47bd91018>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
*ret_11(D) = _4;
bb index := 2
# VUSE <.MEM_14>
return _6;
In function â€˜vasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
*ret_11(D) = _4;
bb index := 2
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
*ret_11(D) = _4;
In function â€˜make_labelâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:7: warning: use location
  *ret = malloc(strlen(fmt) + strlen(ap));  /* allocation site */
       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe47c240ab0
    type <pointer_type 0x7fe47bd62a80
        type <integer_type 0x7fe47bd62888 char public string-flag QI
            size <integer_cst 0x7fe47c238cd8 constant 8>
            unit size <integer_cst 0x7fe47c238cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fe47c24c3f0 precision 8 min <integer_cst 0x7fe47bd65180 -128> max <integer_cst 0x7fe47bd65168 127> context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7fe47bd62a80>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
        pointer_to_this <pointer_type 0x7fe47bd62d20>>
    var <parm_decl 0x7fe47bd6e180 ap>
    def_stmt GIMPLE_NOP
    version 9
    ptr-info 0x7fe47bd91018>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe47c240948
    type <integer_type 0x7fe47c24c7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fe47c24c738 precision 64 min <integer_cst 0x7fe47c238eb8 0> max <integer_cst 0x7fe47c23a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fe47c2589d8>>
   
    def_stmt _3 = _1 + _2;
    version 3>
_3 = _1 + _2;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12(D)>
_4 = malloc (_3);
bb index := 2
# VUSE <.MEM_14>
return _6;
In function â€˜vasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12(D)>
_4 = malloc (_3);
bb index := 2
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_4 = malloc (_3);
In function â€˜make_labelâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:9: warning: use location
  *ret = malloc(strlen(fmt) + strlen(ap));  /* allocation site */
         ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7fe47c240948
    type <integer_type 0x7fe47c24c7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fe47c24c738 precision 64 min <integer_cst 0x7fe47c238eb8 0> max <integer_cst 0x7fe47c23a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fe47c2589d8>>
   
    def_stmt _3 = _1 + _2;
    version 3>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
*ret_11(D) = _4;
bb index := 2
# VUSE <.MEM_14>
return _6;
In function â€˜vasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
*ret_11(D) = _4;
bb index := 2
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
*ret_11(D) = _4;
In function â€˜make_labelâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:7: warning: use location
  *ret = malloc(strlen(fmt) + strlen(ap));  /* allocation site */
       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe47c240948
    type <integer_type 0x7fe47c24c7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fe47c24c738 precision 64 min <integer_cst 0x7fe47c238eb8 0> max <integer_cst 0x7fe47c23a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fe47c2589d8>>
   
    def_stmt _3 = _1 + _2;
    version 3>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:vasprintf========= [0m
[40;42m =======pre_check_funciton:xvasprintf========= [0m
[40;42m =======start_check_funciton:xvasprintf========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fe47c240d80
    type <pointer_type 0x7fe47bd62d20
        type <pointer_type 0x7fe47bd62a80 type <integer_type 0x7fe47bd62888 char>
            public unsigned DI
            size <integer_cst 0x7fe47c238be8 constant 64>
            unit size <integer_cst 0x7fe47c238c00 constant 8>
            align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7fe47bd62d20>>
        public unsigned DI size <integer_cst 0x7fe47c238be8 64> unit size <integer_cst 0x7fe47c238c00 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fe47bd6e280 ret>
    def_stmt GIMPLE_NOP
    version 6
    ptr-info 0x7fe47bd91078>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_15>
_1 = *ret_6(D);
bb index := 3
# VUSE <.MEM_14>
return _6;
In function â€˜xvasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_15>
_1 = *ret_6(D);
bb index := 3
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_15>
_1 = *ret_6(D);
bb index := 3
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_15>
_1 = *ret_6(D);
bb index := 3
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
  return i;
         ^
beacuse in succ := 5 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_15>
_1 = *ret_6(D);
bb index := 3
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_15>
_1 = *ret_6(D);
bb index := 3
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================
_1 = *ret_6(D);
In function â€˜make_labelâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:68:15: warning: use location
  if (i < 0 || *ret == NULL)
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 3
# VUSE <.MEM_14>
return _6;
In function â€˜xvasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 3
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 3
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 3
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
  return i;
         ^
beacuse in succ := 5 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 3
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 3
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================
if (_1 == 0B)
In function â€˜make_labelâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:68:12: warning: use location
  if (i < 0 || *ret == NULL)
            ^
if (_1 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_4/tmux_leak_4.c:68:12: warning: use location
Cond in fucntion xvasprintf basic block 3
 ================== possible direct basic block ================= 
from xvasprintf basic block 4
 ================== possible direct basic block ================= 
from xvasprintf basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14(D)>
i_10 = vasprintf (ret_6(D), fmt_7(D), ap_8(D));
bb index := 2
# VUSE <.MEM_14>
return _6;
In function â€˜xvasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14(D)>
i_10 = vasprintf (ret_6(D), fmt_7(D), ap_8(D));
bb index := 2
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14(D)>
i_10 = vasprintf (ret_6(D), fmt_7(D), ap_8(D));
bb index := 2
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
  return i;
         ^
beacuse in succ := 5 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14(D)>
i_10 = vasprintf (ret_6(D), fmt_7(D), ap_8(D));
bb index := 2
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
i_10 = vasprintf (ret_6(D), fmt_7(D), ap_8(D));
In function â€˜make_labelâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:66:4: warning: use location
  i = vasprintf(ret, fmt, ap);
    ^
this stmt is child function---vasprintf-----

 ================== trace ================== 
 <ssa_name 0x7fe47c240d80
    type <pointer_type 0x7fe47bd62d20
        type <pointer_type 0x7fe47bd62a80 type <integer_type 0x7fe47bd62888 char>
            public unsigned DI
            size <integer_cst 0x7fe47c238be8 constant 64>
            unit size <integer_cst 0x7fe47c238c00 constant 8>
            align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7fe47bd62d20>>
        public unsigned DI size <integer_cst 0x7fe47c238be8 64> unit size <integer_cst 0x7fe47c238c00 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fe47bd6e280 ret>
    def_stmt GIMPLE_NOP
    version 6
    ptr-info 0x7fe47bd91078>
trace fucntion name:vasprintf 
[40;44m =======trace_function_path vasprintf  function_call count: 2 level :0========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (i_10 < 0)
bb index := 2
# VUSE <.MEM_14>
return _6;
In function â€˜xvasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (i_10 < 0)
bb index := 2
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (i_10 < 0)
bb index := 2
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
  return i;
         ^
beacuse in succ := 5 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (i_10 < 0)
bb index := 2
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
if (i_10 < 0)
In function â€˜make_labelâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:68:5: warning: use location
  if (i < 0 || *ret == NULL)
     ^
if (i_10 < 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_4/tmux_leak_4.c:68:5: warning: use location
Cond in fucntion xvasprintf basic block 2
 ================== possible direct basic block ================= 
from xvasprintf basic block 4
 ================== possible direct basic block ================= 
from xvasprintf basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe47c240d80
    type <pointer_type 0x7fe47bd62d20
        type <pointer_type 0x7fe47bd62a80 type <integer_type 0x7fe47bd62888 char>
            public unsigned DI
            size <integer_cst 0x7fe47c238be8 constant 64>
            unit size <integer_cst 0x7fe47c238c00 constant 8>
            align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7fe47bd62d20>>
        public unsigned DI size <integer_cst 0x7fe47c238be8 64> unit size <integer_cst 0x7fe47c238c00 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fe47bd6e280 ret>
    def_stmt GIMPLE_NOP
    version 6
    ptr-info 0x7fe47bd91078>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe47c240ca8
    type <pointer_type 0x7fe47c253a80
        type <integer_type 0x7fe47c24c5e8 int public SI
            size <integer_cst 0x7fe47c238e28 constant 32>
            unit size <integer_cst 0x7fe47c238e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7fe47c24c5e8 precision 32 min <integer_cst 0x7fe47c238de0 -2147483648> max <integer_cst 0x7fe47c238df8 2147483647>
            pointer_to_this <pointer_type 0x7fe47c253a80>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _2 = __errno_location ();
    version 2
    ptr-info 0x7fe47bd91060>
_2 = __errno_location ();

 ================== trace ptable================== 
trace fucntion name:__errno_location 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---__errno_location-----
this other function ------__errno_location-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_15>
_3 = *_2;
bb index := 4
# VUSE <.MEM_14>
return _6;
In function â€˜xvasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_15>
_3 = *_2;
bb index := 4
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_15>
_3 = *_2;
bb index := 4
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
  return i;
         ^
beacuse in succ := 5 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_15>
_3 = *_2;
bb index := 4
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
_3 = *_2;
In function â€˜make_labelâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:69:3: warning: use location
   fatalx("xasprintf: %s", strerror(errno));
   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
_4 = strerror (_3);
bb index := 4
# VUSE <.MEM_14>
return _6;
In function â€˜xvasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
_4 = strerror (_3);
bb index := 4
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
_4 = strerror (_3);
bb index := 4
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
  return i;
         ^
beacuse in succ := 5 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
_4 = strerror (_3);
bb index := 4
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
_4 = strerror (_3);
In function â€˜make_labelâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:69:3: warning: use location
   fatalx("xasprintf: %s", strerror(errno));
   ^
this stmt is child function---strerror-----

 ================== trace ================== 
 <ssa_name 0x7fe47c240ca8
    type <pointer_type 0x7fe47c253a80
        type <integer_type 0x7fe47c24c5e8 int public SI
            size <integer_cst 0x7fe47c238e28 constant 32>
            unit size <integer_cst 0x7fe47c238e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7fe47c24c5e8 precision 32 min <integer_cst 0x7fe47c238de0 -2147483648> max <integer_cst 0x7fe47c238df8 2147483647>
            pointer_to_this <pointer_type 0x7fe47c253a80>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _2 = __errno_location ();
    version 2
    ptr-info 0x7fe47bd91060>
trace fucntion name:strerror 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
_13 = __printf_chk (1, "xasprintf: %s", _4);
bb index := 4
# VUSE <.MEM_14>
return _6;
In function â€˜xvasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
_13 = __printf_chk (1, "xasprintf: %s", _4);
bb index := 4
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
_13 = __printf_chk (1, "xasprintf: %s", _4);
bb index := 4
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
  return i;
         ^
beacuse in succ := 5 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
_13 = __printf_chk (1, "xasprintf: %s", _4);
bb index := 4
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
_13 = __printf_chk (1, "xasprintf: %s", _4);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7fe47c240ca8
    type <pointer_type 0x7fe47c253a80
        type <integer_type 0x7fe47c24c5e8 int public SI
            size <integer_cst 0x7fe47c238e28 constant 32>
            unit size <integer_cst 0x7fe47c238e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7fe47c24c5e8 precision 32 min <integer_cst 0x7fe47c238de0 -2147483648> max <integer_cst 0x7fe47c238df8 2147483647>
            pointer_to_this <pointer_type 0x7fe47c253a80>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _2 = __errno_location ();
    version 2
    ptr-info 0x7fe47bd91060>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = __errno_location ();
bb index := 4
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = __errno_location ();
bb index := 4
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = __errno_location ();
bb index := 4
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = __errno_location ();
bb index := 4
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
_2 = __errno_location ();
In function â€˜make_labelâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:69:3: warning: use location
   fatalx("xasprintf: %s", strerror(errno));
   ^
this stmt is child function---__errno_location-----

 ================== trace ================== 
 <ssa_name 0x7fe47c240ca8
    type <pointer_type 0x7fe47c253a80
        type <integer_type 0x7fe47c24c5e8 int public SI
            size <integer_cst 0x7fe47c238e28 constant 32>
            unit size <integer_cst 0x7fe47c238e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7fe47c24c5e8 precision 32 min <integer_cst 0x7fe47c238de0 -2147483648> max <integer_cst 0x7fe47c238df8 2147483647>
            pointer_to_this <pointer_type 0x7fe47c253a80>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _2 = __errno_location ();
    version 2
    ptr-info 0x7fe47bd91060>
trace fucntion name:__errno_location 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe47c240ca8
    type <pointer_type 0x7fe47c253a80
        type <integer_type 0x7fe47c24c5e8 int public SI
            size <integer_cst 0x7fe47c238e28 constant 32>
            unit size <integer_cst 0x7fe47c238e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7fe47c24c5e8 precision 32 min <integer_cst 0x7fe47c238de0 -2147483648> max <integer_cst 0x7fe47c238df8 2147483647>
            pointer_to_this <pointer_type 0x7fe47c253a80>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _2 = __errno_location ();
    version 2
    ptr-info 0x7fe47bd91060>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe47c240cf0
    type <integer_type 0x7fe47c24c5e8 int public SI
        size <integer_cst 0x7fe47c238e28 constant 32>
        unit size <integer_cst 0x7fe47c238e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fe47c24c5e8 precision 32 min <integer_cst 0x7fe47c238de0 -2147483648> max <integer_cst 0x7fe47c238df8 2147483647>
        pointer_to_this <pointer_type 0x7fe47c253a80>>
   
    def_stmt _3 = *_2;
    version 3>
# VUSE <.MEM_15>
_3 = *_2;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
_4 = strerror (_3);
bb index := 4
# VUSE <.MEM_14>
return _6;
In function â€˜xvasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
_4 = strerror (_3);
bb index := 4
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
_4 = strerror (_3);
bb index := 4
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
  return i;
         ^
beacuse in succ := 5 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
_4 = strerror (_3);
bb index := 4
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
_4 = strerror (_3);
In function â€˜make_labelâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:69:3: warning: use location
   fatalx("xasprintf: %s", strerror(errno));
   ^
this stmt is child function---strerror-----

 ================== trace ================== 
 <ssa_name 0x7fe47c240cf0
    type <integer_type 0x7fe47c24c5e8 int public SI
        size <integer_cst 0x7fe47c238e28 constant 32>
        unit size <integer_cst 0x7fe47c238e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fe47c24c5e8 precision 32 min <integer_cst 0x7fe47c238de0 -2147483648> max <integer_cst 0x7fe47c238df8 2147483647>
        pointer_to_this <pointer_type 0x7fe47c253a80>>
   
    def_stmt _3 = *_2;
    version 3>
trace fucntion name:strerror 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
_13 = __printf_chk (1, "xasprintf: %s", _4);
bb index := 4
# VUSE <.MEM_14>
return _6;
In function â€˜xvasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
_13 = __printf_chk (1, "xasprintf: %s", _4);
bb index := 4
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
_13 = __printf_chk (1, "xasprintf: %s", _4);
bb index := 4
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
  return i;
         ^
beacuse in succ := 5 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
_13 = __printf_chk (1, "xasprintf: %s", _4);
bb index := 4
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
_13 = __printf_chk (1, "xasprintf: %s", _4);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7fe47c240cf0
    type <integer_type 0x7fe47c24c5e8 int public SI
        size <integer_cst 0x7fe47c238e28 constant 32>
        unit size <integer_cst 0x7fe47c238e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fe47c24c5e8 precision 32 min <integer_cst 0x7fe47c238de0 -2147483648> max <integer_cst 0x7fe47c238df8 2147483647>
        pointer_to_this <pointer_type 0x7fe47c253a80>>
   
    def_stmt _3 = *_2;
    version 3>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe47c240cf0
    type <integer_type 0x7fe47c24c5e8 int public SI
        size <integer_cst 0x7fe47c238e28 constant 32>
        unit size <integer_cst 0x7fe47c238e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fe47c24c5e8 precision 32 min <integer_cst 0x7fe47c238de0 -2147483648> max <integer_cst 0x7fe47c238df8 2147483647>
        pointer_to_this <pointer_type 0x7fe47c253a80>>
   
    def_stmt _3 = *_2;
    version 3>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fe47c238f90 type <integer_type 0x7fe47c24c5e8 int> constant 1>
[40;33m =======POP node_fun stack:xvasprintf========= [0m
[40;42m =======pre add _ fucntion:getenv========= [0m
[40;33m =======POP node_fun stack:getenv========= [0m
[40;42m =======pre add _ fucntion:getuid========= [0m
[40;33m =======POP node_fun stack:getuid========= [0m
[40;42m =======pre_check_funciton:make_label========= [0m
[40;42m =======start_check_funciton:make_label========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fe47bd81000
    type <integer_type 0x7fe47c24c5e8 int public SI
        size <integer_cst 0x7fe47c238e28 constant 32>
        unit size <integer_cst 0x7fe47c238e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fe47c24c5e8 precision 32 min <integer_cst 0x7fe47c238de0 -2147483648> max <integer_cst 0x7fe47c238df8 2147483647>
        pointer_to_this <pointer_type 0x7fe47c253a80>>
   
    def_stmt _1 = getuid ();
    version 1>
# .MEM_50 = VDEF <.MEM_49(D)>
_1 = getuid ();

 ================== trace ptable================== 
trace fucntion name:getuid 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---getuid-----
this other function ------getuid-----
 
 Start check Pointer Collect  

======================================================================
uid_26 = (uid_t) _1;
In function â€˜make_labelâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:84:6: warning: use location
  uid = getuid();
      ^
_1 = getuid ();
./benchmarks/tmux/leak_4/tmux_leak_4.c:84:8: warning: use location
  uid = getuid();
        ^
this stmt is child function---getuid-----

 ================== trace ================== 
 <ssa_name 0x7fe47bd81000
    type <integer_type 0x7fe47c24c5e8 int public SI
        size <integer_cst 0x7fe47c238e28 constant 32>
        unit size <integer_cst 0x7fe47c238e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fe47c24c5e8 precision 32 min <integer_cst 0x7fe47c238de0 -2147483648> max <integer_cst 0x7fe47c238df8 2147483647>
        pointer_to_this <pointer_type 0x7fe47c253a80>>
   
    def_stmt _1 = getuid ();
    version 1>
trace fucntion name:getuid 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe47bd81000
    type <integer_type 0x7fe47c24c5e8 int public SI
        size <integer_cst 0x7fe47c238e28 constant 32>
        unit size <integer_cst 0x7fe47c238e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fe47c24c5e8 precision 32 min <integer_cst 0x7fe47c238de0 -2147483648> max <integer_cst 0x7fe47c238df8 2147483647>
        pointer_to_this <pointer_type 0x7fe47c253a80>>
   
    def_stmt _1 = getuid ();
    version 1>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_47>
free (_17);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:2: warning: use location
  free(base);
  ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fe47bd56b80
    type <pointer_type 0x7fe47bd6d348
        type <array_type 0x7fe47bd6d2a0 type <integer_type 0x7fe47bd62888 char>
            BLK
            size <integer_cst 0x7fe47bd65258 constant 96>
            unit size <integer_cst 0x7fe47bd65348 constant 12>
            align 8 symtab 0 alias set -1 structural equality domain <integer_type 0x7fe47bd6d1f8>
            pointer_to_this <pointer_type 0x7fe47bd6d348>>
        unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    readonly constant
    arg 0 <string_cst 0x7fe47bd79b18 type <array_type 0x7fe47bd6d2a0>
        readonly constant static "TMUX_TMPDIR\000">
    ./benchmarks/tmux/leak_4/tmux_leak_4.c:86:18 start: ./benchmarks/tmux/leak_4/tmux_leak_4.c:86:18 finish: ./benchmarks/tmux/leak_4/tmux_leak_4.c:86:18>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fe47bd56f20
    type <pointer_type 0x7fe47bd62d20
        type <pointer_type 0x7fe47bd62a80 type <integer_type 0x7fe47bd62888 char>
            public unsigned DI
            size <integer_cst 0x7fe47c238be8 constant 64>
            unit size <integer_cst 0x7fe47c238c00 constant 8>
            align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7fe47bd62d20>>
        public unsigned DI size <integer_cst 0x7fe47c238be8 64> unit size <integer_cst 0x7fe47c238c00 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    arg 0 <var_decl 0x7fe47bd7f2d0 base type <pointer_type 0x7fe47bd62a80>
        addressable unsigned DI file ./benchmarks/tmux/leak_4/tmux_leak_4.c line 77 col 9 size <integer_cst 0x7fe47c238be8 64> unit size <integer_cst 0x7fe47c238c00 8>
        align 64 context <function_decl 0x7fe47bd63c00 make_label>
        chain <var_decl 0x7fe47bd7f240 resolved type <array_type 0x7fe47bd6d000>
            addressable BLK file ./benchmarks/tmux/leak_4/tmux_leak_4.c line 77 col 15
            size <integer_cst 0x7fe47bd65300 constant 32768>
            unit size <integer_cst 0x7fe47bd652e8 constant 4096>
            align 128 context <function_decl 0x7fe47bd63c00 make_label> chain <var_decl 0x7fe47bd7f1b0 path>>>
    ./benchmarks/tmux/leak_4/tmux_leak_4.c:87:3 start: ./benchmarks/tmux/leak_4/tmux_leak_4.c:87:3 finish: ./benchmarks/tmux/leak_4/tmux_leak_4.c:87:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fe47bd56fa0
    type <pointer_type 0x7fe47bd62d20
        type <pointer_type 0x7fe47bd62a80 type <integer_type 0x7fe47bd62888 char>
            public unsigned DI
            size <integer_cst 0x7fe47c238be8 constant 64>
            unit size <integer_cst 0x7fe47c238c00 constant 8>
            align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7fe47bd62d20>>
        public unsigned DI size <integer_cst 0x7fe47c238be8 64> unit size <integer_cst 0x7fe47c238c00 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    arg 0 <var_decl 0x7fe47bd7f2d0 base type <pointer_type 0x7fe47bd62a80>
        addressable unsigned DI file ./benchmarks/tmux/leak_4/tmux_leak_4.c line 77 col 9 size <integer_cst 0x7fe47c238be8 64> unit size <integer_cst 0x7fe47c238c00 8>
        align 64 context <function_decl 0x7fe47bd63c00 make_label>
        chain <var_decl 0x7fe47bd7f240 resolved type <array_type 0x7fe47bd6d000>
            addressable BLK file ./benchmarks/tmux/leak_4/tmux_leak_4.c line 77 col 15
            size <integer_cst 0x7fe47bd65300 constant 32768>
            unit size <integer_cst 0x7fe47bd652e8 constant 4096>
            align 128 context <function_decl 0x7fe47bd63c00 make_label> chain <var_decl 0x7fe47bd7f1b0 path>>>
    ./benchmarks/tmux/leak_4/tmux_leak_4.c:89:3 start: ./benchmarks/tmux/leak_4/tmux_leak_4.c:89:3 finish: ./benchmarks/tmux/leak_4/tmux_leak_4.c:89:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe47bd81090
    type <pointer_type 0x7fe47bd62a80
        type <integer_type 0x7fe47bd62888 char public string-flag QI
            size <integer_cst 0x7fe47c238cd8 constant 8>
            unit size <integer_cst 0x7fe47c238cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fe47c24c3f0 precision 8 min <integer_cst 0x7fe47bd65180 -128> max <integer_cst 0x7fe47bd65168 127> context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7fe47bd62a80>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
        pointer_to_this <pointer_type 0x7fe47bd62d20>>
   
    def_stmt _3 = base;
    version 3
    ptr-info 0x7fe47bd910c0>
# VUSE <.MEM_45>
_3 = base;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_54 = VDEF <.MEM_45>
_4 = mkdir (_3, 0);
bb index := 6
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_54 = VDEF <.MEM_45>
_4 = mkdir (_3, 0);
bb index := 6
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_54 = VDEF <.MEM_45>
_4 = mkdir (_3, 0);
bb index := 6
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
  return i;
         ^
beacuse in succ := 5 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_54 = VDEF <.MEM_45>
_4 = mkdir (_3, 0);
bb index := 6
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_54 = VDEF <.MEM_45>
_4 = mkdir (_3, 0);
bb index := 6
# VUSE <.MEM_64>
return 0B;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_54 = VDEF <.MEM_45>
_4 = mkdir (_3, 0);
bb index := 6
# VUSE <.MEM_64>
return 0B;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 23

======================================================================
_4 = mkdir (_3, 0);
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:6: warning: use location
  if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      ^
this stmt is child function---mkdir-----

 ================== trace ================== 
 <ssa_name 0x7fe47bd81090
    type <pointer_type 0x7fe47bd62a80
        type <integer_type 0x7fe47bd62888 char public string-flag QI
            size <integer_cst 0x7fe47c238cd8 constant 8>
            unit size <integer_cst 0x7fe47c238cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fe47c24c3f0 precision 8 min <integer_cst 0x7fe47bd65180 -128> max <integer_cst 0x7fe47bd65168 127> context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7fe47bd62a80>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
        pointer_to_this <pointer_type 0x7fe47bd62d20>>
   
    def_stmt _3 = base;
    version 3
    ptr-info 0x7fe47bd910c0>
trace fucntion name:mkdir 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_4 != 0)
bb index := 6
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_4 != 0)
bb index := 6
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_4 != 0)
bb index := 6
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
  return i;
         ^
beacuse in succ := 5 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_4 != 0)
bb index := 6
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_4 != 0)
bb index := 6
# VUSE <.MEM_64>
return 0B;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_4 != 0)
bb index := 6
# VUSE <.MEM_64>
return 0B;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 23

======================================================================
if (_4 != 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:5: warning: use location
  if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
     ^
if (_4 != 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:5: warning: use location
Cond in fucntion make_label basic block 6
 ================== possible direct basic block ================= 
from make_label basic block 7
 ================== possible direct basic block ================= 
from make_label basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe47bd81090
    type <pointer_type 0x7fe47bd62a80
        type <integer_type 0x7fe47bd62888 char public string-flag QI
            size <integer_cst 0x7fe47c238cd8 constant 8>
            unit size <integer_cst 0x7fe47c238cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fe47c24c3f0 precision 8 min <integer_cst 0x7fe47bd65180 -128> max <integer_cst 0x7fe47bd65168 127> context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7fe47bd62a80>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
        pointer_to_this <pointer_type 0x7fe47bd62d20>>
   
    def_stmt _3 = base;
    version 3
    ptr-info 0x7fe47bd910c0>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_47>
free (_17);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:2: warning: use location
  free(base);
  ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe47bd81120
    type <pointer_type 0x7fe47c253a80
        type <integer_type 0x7fe47c24c5e8 int public SI
            size <integer_cst 0x7fe47c238e28 constant 32>
            unit size <integer_cst 0x7fe47c238e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7fe47c24c5e8 precision 32 min <integer_cst 0x7fe47c238de0 -2147483648> max <integer_cst 0x7fe47c238df8 2147483647>
            pointer_to_this <pointer_type 0x7fe47c253a80>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _5 = __errno_location ();
    version 5
    ptr-info 0x7fe47bd910d8>
_5 = __errno_location ();

 ================== trace ptable================== 
trace fucntion name:__errno_location 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---__errno_location-----
this other function ------__errno_location-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_54>
_6 = *_5;
bb index := 7
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
  return i;
         ^
beacuse in succ := 5 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_54>
_6 = *_5;
bb index := 7
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================
_6 = *_5;
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:35: warning: use location
  if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
                                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 != 17)
bb index := 7
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
  return i;
         ^
beacuse in succ := 5 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 != 17)
bb index := 7
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================
if (_6 != 17)
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:32: warning: use location
  if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
                                ^
if (_6 != 17)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:32: warning: use location
Cond in fucntion make_label basic block 7
 ================== possible direct basic block ================= 
from make_label basic block 22
 ================== possible direct basic block ================= 
from make_label basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = __errno_location ();
bb index := 7
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
  return i;
         ^
beacuse in succ := 5 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = __errno_location ();
bb index := 7
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================
_5 = __errno_location ();
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:35: warning: use location
  if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
                                   ^
this stmt is child function---__errno_location-----

 ================== trace ================== 
 <ssa_name 0x7fe47bd81120
    type <pointer_type 0x7fe47c253a80
        type <integer_type 0x7fe47c24c5e8 int public SI
            size <integer_cst 0x7fe47c238e28 constant 32>
            unit size <integer_cst 0x7fe47c238e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7fe47c24c5e8 precision 32 min <integer_cst 0x7fe47c238de0 -2147483648> max <integer_cst 0x7fe47c238df8 2147483647>
            pointer_to_this <pointer_type 0x7fe47c253a80>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _5 = __errno_location ();
    version 5
    ptr-info 0x7fe47bd910d8>
trace fucntion name:__errno_location 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe47bd81120
    type <pointer_type 0x7fe47c253a80
        type <integer_type 0x7fe47c24c5e8 int public SI
            size <integer_cst 0x7fe47c238e28 constant 32>
            unit size <integer_cst 0x7fe47c238e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7fe47c24c5e8 precision 32 min <integer_cst 0x7fe47c238de0 -2147483648> max <integer_cst 0x7fe47c238df8 2147483647>
            pointer_to_this <pointer_type 0x7fe47c253a80>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _5 = __errno_location ();
    version 5
    ptr-info 0x7fe47bd910d8>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_47>
free (_17);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:2: warning: use location
  free(base);
  ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe47bd811b0
    type <pointer_type 0x7fe47bd62a80
        type <integer_type 0x7fe47bd62888 char public string-flag QI
            size <integer_cst 0x7fe47c238cd8 constant 8>
            unit size <integer_cst 0x7fe47c238cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fe47c24c3f0 precision 8 min <integer_cst 0x7fe47bd65180 -128> max <integer_cst 0x7fe47bd65168 127> context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7fe47bd62a80>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
        pointer_to_this <pointer_type 0x7fe47bd62d20>>
   
    def_stmt _7 = base;
    version 7
    ptr-info 0x7fe47bd910f0>
# VUSE <.MEM_54>
_7 = base;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_55 = VDEF <.MEM_54>
_8 = lstat (_7, &sb);
bb index := 8
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
  return i;
         ^
beacuse in succ := 5 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_55 = VDEF <.MEM_54>
_8 = lstat (_7, &sb);
bb index := 8
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_55 = VDEF <.MEM_54>
_8 = lstat (_7, &sb);
bb index := 8
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 5

======================================================================
_8 = lstat (_7, &sb);
./benchmarks/tmux/leak_4/tmux_leak_4.c:94:6: warning: use location
  if (lstat(base, &sb) != 0)
      ^
this stmt is child function---lstat-----

 ================== trace ================== 
 <ssa_name 0x7fe47bd811b0
    type <pointer_type 0x7fe47bd62a80
        type <integer_type 0x7fe47bd62888 char public string-flag QI
            size <integer_cst 0x7fe47c238cd8 constant 8>
            unit size <integer_cst 0x7fe47c238cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fe47c24c3f0 precision 8 min <integer_cst 0x7fe47bd65180 -128> max <integer_cst 0x7fe47bd65168 127> context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7fe47bd62a80>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
        pointer_to_this <pointer_type 0x7fe47bd62d20>>
   
    def_stmt _7 = base;
    version 7
    ptr-info 0x7fe47bd910f0>
trace fucntion name:lstat 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_8 != 0)
bb index := 8
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
  return i;
         ^
beacuse in succ := 5 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_8 != 0)
bb index := 8
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_8 != 0)
bb index := 8
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 5

======================================================================
if (_8 != 0)
./benchmarks/tmux/leak_4/tmux_leak_4.c:94:5: warning: use location
  if (lstat(base, &sb) != 0)
     ^
if (_8 != 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_4/tmux_leak_4.c:94:5: warning: use location
Cond in fucntion make_label basic block 8
 ================== possible direct basic block ================= 
from make_label basic block 22
 ================== possible direct basic block ================= 
from make_label basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe47bd811b0
    type <pointer_type 0x7fe47bd62a80
        type <integer_type 0x7fe47bd62888 char public string-flag QI
            size <integer_cst 0x7fe47c238cd8 constant 8>
            unit size <integer_cst 0x7fe47c238cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fe47c24c3f0 precision 8 min <integer_cst 0x7fe47bd65180 -128> max <integer_cst 0x7fe47bd65168 127> context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7fe47bd62a80>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
        pointer_to_this <pointer_type 0x7fe47bd62d20>>
   
    def_stmt _7 = base;
    version 7
    ptr-info 0x7fe47bd910f0>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_47>
free (_17);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:2: warning: use location
  free(base);
  ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe47bd812d0
    type <pointer_type 0x7fe47c253a80
        type <integer_type 0x7fe47c24c5e8 int public SI
            size <integer_cst 0x7fe47c238e28 constant 32>
            unit size <integer_cst 0x7fe47c238e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7fe47c24c5e8 precision 32 min <integer_cst 0x7fe47c238de0 -2147483648> max <integer_cst 0x7fe47c238df8 2147483647>
            pointer_to_this <pointer_type 0x7fe47c253a80>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _11 = __errno_location ();
    version 11
    ptr-info 0x7fe47bd91108>
_11 = __errno_location ();

 ================== trace ptable================== 
trace fucntion name:__errno_location 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---__errno_location-----
this other function ------__errno_location-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_55>
*_11 = 20;
bb index := 10
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
  return i;
         ^
beacuse in succ := 5 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 5

======================================================================
*_11 = 20;
./benchmarks/tmux/leak_4/tmux_leak_4.c:97:9: warning: use location
   errno = ENOTDIR;
         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_11 = __errno_location ();
bb index := 10
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
  return i;
         ^
beacuse in succ := 5 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 5

======================================================================
_11 = __errno_location ();
./benchmarks/tmux/leak_4/tmux_leak_4.c:97:3: warning: use location
   errno = ENOTDIR;
   ^
this stmt is child function---__errno_location-----

 ================== trace ================== 
 <ssa_name 0x7fe47bd812d0
    type <pointer_type 0x7fe47c253a80
        type <integer_type 0x7fe47c24c5e8 int public SI
            size <integer_cst 0x7fe47c238e28 constant 32>
            unit size <integer_cst 0x7fe47c238e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7fe47c24c5e8 precision 32 min <integer_cst 0x7fe47c238de0 -2147483648> max <integer_cst 0x7fe47c238df8 2147483647>
            pointer_to_this <pointer_type 0x7fe47c253a80>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _11 = __errno_location ();
    version 11
    ptr-info 0x7fe47bd91108>
trace fucntion name:__errno_location 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe47bd812d0
    type <pointer_type 0x7fe47c253a80
        type <integer_type 0x7fe47c24c5e8 int public SI
            size <integer_cst 0x7fe47c238e28 constant 32>
            unit size <integer_cst 0x7fe47c238e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7fe47c24c5e8 precision 32 min <integer_cst 0x7fe47c238de0 -2147483648> max <integer_cst 0x7fe47c238df8 2147483647>
            pointer_to_this <pointer_type 0x7fe47c253a80>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _11 = __errno_location ();
    version 11
    ptr-info 0x7fe47bd91108>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_47>
free (_17);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:2: warning: use location
  free(base);
  ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe47bd81360
    type <pointer_type 0x7fe47c253a80
        type <integer_type 0x7fe47c24c5e8 int public SI
            size <integer_cst 0x7fe47c238e28 constant 32>
            unit size <integer_cst 0x7fe47c238e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7fe47c24c5e8 precision 32 min <integer_cst 0x7fe47c238de0 -2147483648> max <integer_cst 0x7fe47c238df8 2147483647>
            pointer_to_this <pointer_type 0x7fe47c253a80>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _13 = __errno_location ();
    version 13
    ptr-info 0x7fe47bd91120>
_13 = __errno_location ();

 ================== trace ptable================== 
trace fucntion name:__errno_location 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---__errno_location-----
this other function ------__errno_location-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_58 = VDEF <.MEM_55>
*_13 = 13;
bb index := 12
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
  return i;
         ^
beacuse in succ := 5 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 5

======================================================================
*_13 = 13;
./benchmarks/tmux/leak_4/tmux_leak_4.c:101:9: warning: use location
   errno = EACCES;
         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = __errno_location ();
bb index := 12
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
  return i;
         ^
beacuse in succ := 5 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 5

======================================================================
_13 = __errno_location ();
./benchmarks/tmux/leak_4/tmux_leak_4.c:101:3: warning: use location
   errno = EACCES;
   ^
this stmt is child function---__errno_location-----

 ================== trace ================== 
 <ssa_name 0x7fe47bd81360
    type <pointer_type 0x7fe47c253a80
        type <integer_type 0x7fe47c24c5e8 int public SI
            size <integer_cst 0x7fe47c238e28 constant 32>
            unit size <integer_cst 0x7fe47c238e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7fe47c24c5e8 precision 32 min <integer_cst 0x7fe47c238de0 -2147483648> max <integer_cst 0x7fe47c238df8 2147483647>
            pointer_to_this <pointer_type 0x7fe47c253a80>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _13 = __errno_location ();
    version 13
    ptr-info 0x7fe47bd91120>
trace fucntion name:__errno_location 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe47bd81360
    type <pointer_type 0x7fe47c253a80
        type <integer_type 0x7fe47c24c5e8 int public SI
            size <integer_cst 0x7fe47c238e28 constant 32>
            unit size <integer_cst 0x7fe47c238e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7fe47c24c5e8 precision 32 min <integer_cst 0x7fe47c238de0 -2147483648> max <integer_cst 0x7fe47c238df8 2147483647>
            pointer_to_this <pointer_type 0x7fe47c253a80>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _13 = __errno_location ();
    version 13
    ptr-info 0x7fe47bd91120>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_47>
free (_17);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:2: warning: use location
  free(base);
  ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe47bd813a8
    type <pointer_type 0x7fe47bd62a80
        type <integer_type 0x7fe47bd62888 char public string-flag QI
            size <integer_cst 0x7fe47c238cd8 constant 8>
            unit size <integer_cst 0x7fe47c238cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fe47c24c3f0 precision 8 min <integer_cst 0x7fe47bd65180 -128> max <integer_cst 0x7fe47bd65168 127> context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7fe47bd62a80>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
        pointer_to_this <pointer_type 0x7fe47bd62d20>>
   
    def_stmt _14 = base;
    version 14
    ptr-info 0x7fe47bd91138>
# VUSE <.MEM_55>
_14 = base;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_44 = __realpath_chk (_14, &resolved, 4096);
this stmt is child function---__realpath_chk-----

 ================== trace ================== 
 <ssa_name 0x7fe47bd813a8
    type <pointer_type 0x7fe47bd62a80
        type <integer_type 0x7fe47bd62888 char public string-flag QI
            size <integer_cst 0x7fe47c238cd8 constant 8>
            unit size <integer_cst 0x7fe47c238cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fe47c24c3f0 precision 8 min <integer_cst 0x7fe47bd65180 -128> max <integer_cst 0x7fe47bd65168 127> context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7fe47bd62a80>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
        pointer_to_this <pointer_type 0x7fe47bd62d20>>
   
    def_stmt _14 = base;
    version 14
    ptr-info 0x7fe47bd91138>
trace fucntion name:__realpath_chk 

 ================== trace ================== 
trace fucntion free:0 
if (_44 == 0B)
./benchmarks/tmux/leak_4/tmux_leak_4.c:105:5: warning: use location
  if (realpath(base, resolved) == NULL)
     ^
if (_44 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_4/tmux_leak_4.c:105:5: warning: use location
Cond in fucntion make_label basic block 13
 ================== possible direct basic block ================= 
from make_label basic block 14
 ================== possible direct basic block ================= 
from make_label basic block 21
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe47bd813a8
    type <pointer_type 0x7fe47bd62a80
        type <integer_type 0x7fe47bd62888 char public string-flag QI
            size <integer_cst 0x7fe47c238cd8 constant 8>
            unit size <integer_cst 0x7fe47c238cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fe47c24c3f0 precision 8 min <integer_cst 0x7fe47bd65180 -128> max <integer_cst 0x7fe47bd65168 127> context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7fe47bd62a80>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
        pointer_to_this <pointer_type 0x7fe47bd62d20>>
   
    def_stmt _14 = base;
    version 14
    ptr-info 0x7fe47bd91138>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_47>
free (_17);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:2: warning: use location
  free(base);
  ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe47bd81438
    type <pointer_type 0x7fe47c253a80
        type <integer_type 0x7fe47c24c5e8 int public SI
            size <integer_cst 0x7fe47c238e28 constant 32>
            unit size <integer_cst 0x7fe47c238e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7fe47c24c5e8 precision 32 min <integer_cst 0x7fe47c238de0 -2147483648> max <integer_cst 0x7fe47c238df8 2147483647>
            pointer_to_this <pointer_type 0x7fe47c253a80>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _16 = __errno_location ();
    version 16
    ptr-info 0x7fe47bd91168>
_16 = __errno_location ();

 ================== trace ptable================== 
trace fucntion name:__errno_location 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---__errno_location-----
this other function ------__errno_location-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_47>
saved_errno_38 = *_16;
bb index := 22
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
  return i;
         ^
beacuse in succ := 5 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_47>
saved_errno_38 = *_16;
bb index := 22
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_47>
saved_errno_38 = *_16;
bb index := 22
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_47>
saved_errno_38 = *_16;
bb index := 22
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_47>
saved_errno_38 = *_16;
bb index := 22
# VUSE <.MEM_64>
return 0B;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 23

======================================================================
saved_errno_38 = *_16;
./benchmarks/tmux/leak_4/tmux_leak_4.c:112:14: warning: use location
  saved_errno = errno;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_61 = VDEF <.MEM_60>
*_18 = saved_errno_38;
bb index := 22
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
  return i;
         ^
beacuse in succ := 5 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_61 = VDEF <.MEM_60>
*_18 = saved_errno_38;
bb index := 22
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_61 = VDEF <.MEM_60>
*_18 = saved_errno_38;
bb index := 22
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_61 = VDEF <.MEM_60>
*_18 = saved_errno_38;
bb index := 22
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_61 = VDEF <.MEM_60>
*_18 = saved_errno_38;
bb index := 22
# VUSE <.MEM_64>
return 0B;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 23

======================================================================
*_18 = saved_errno_38;
./benchmarks/tmux/leak_4/tmux_leak_4.c:114:8: warning: use location
  errno = saved_errno;
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = __errno_location ();
bb index := 22
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
  return i;
         ^
beacuse in succ := 5 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = __errno_location ();
bb index := 22
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = __errno_location ();
bb index := 22
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = __errno_location ();
bb index := 22
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = __errno_location ();
bb index := 22
# VUSE <.MEM_64>
return 0B;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 23

======================================================================
_16 = __errno_location ();
./benchmarks/tmux/leak_4/tmux_leak_4.c:112:16: warning: use location
  saved_errno = errno;
                ^
this stmt is child function---__errno_location-----

 ================== trace ================== 
 <ssa_name 0x7fe47bd81438
    type <pointer_type 0x7fe47c253a80
        type <integer_type 0x7fe47c24c5e8 int public SI
            size <integer_cst 0x7fe47c238e28 constant 32>
            unit size <integer_cst 0x7fe47c238e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7fe47c24c5e8 precision 32 min <integer_cst 0x7fe47c238de0 -2147483648> max <integer_cst 0x7fe47c238df8 2147483647>
            pointer_to_this <pointer_type 0x7fe47c253a80>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _16 = __errno_location ();
    version 16
    ptr-info 0x7fe47bd91168>
trace fucntion name:__errno_location 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe47bd81438
    type <pointer_type 0x7fe47c253a80
        type <integer_type 0x7fe47c24c5e8 int public SI
            size <integer_cst 0x7fe47c238e28 constant 32>
            unit size <integer_cst 0x7fe47c238e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7fe47c24c5e8 precision 32 min <integer_cst 0x7fe47c238de0 -2147483648> max <integer_cst 0x7fe47c238df8 2147483647>
            pointer_to_this <pointer_type 0x7fe47c253a80>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _16 = __errno_location ();
    version 16
    ptr-info 0x7fe47bd91168>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_47>
free (_17);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:2: warning: use location
  free(base);
  ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_47>
free (_17);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:2: warning: Use after free error!: free location 
# .MEM_61 = VDEF <.MEM_60>
*_18 = saved_errno_38;
./benchmarks/tmux/leak_4/tmux_leak_4.c:114:8: warning: use location
  errno = saved_errno;
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe47bd814c8
    type <pointer_type 0x7fe47c253a80
        type <integer_type 0x7fe47c24c5e8 int public SI
            size <integer_cst 0x7fe47c238e28 constant 32>
            unit size <integer_cst 0x7fe47c238e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7fe47c24c5e8 precision 32 min <integer_cst 0x7fe47c238de0 -2147483648> max <integer_cst 0x7fe47c238df8 2147483647>
            pointer_to_this <pointer_type 0x7fe47c253a80>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _18 = __errno_location ();
    version 18
    ptr-info 0x7fe47bd91198>
_18 = __errno_location ();

 ================== trace ptable================== 
trace fucntion name:__errno_location 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---__errno_location-----
this other function ------__errno_location-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_61 = VDEF <.MEM_60>
*_18 = saved_errno_38;
bb index := 22
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
  return i;
         ^
beacuse in succ := 5 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_61 = VDEF <.MEM_60>
*_18 = saved_errno_38;
bb index := 22
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_61 = VDEF <.MEM_60>
*_18 = saved_errno_38;
bb index := 22
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_61 = VDEF <.MEM_60>
*_18 = saved_errno_38;
bb index := 22
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_61 = VDEF <.MEM_60>
*_18 = saved_errno_38;
bb index := 22
# VUSE <.MEM_64>
return 0B;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 23

======================================================================
*_18 = saved_errno_38;
./benchmarks/tmux/leak_4/tmux_leak_4.c:114:8: warning: use location
  errno = saved_errno;
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_61 = VDEF <.MEM_60>
*_18 = saved_errno_38;
bb index := 22
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
  return i;
         ^
beacuse in succ := 5 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_61 = VDEF <.MEM_60>
*_18 = saved_errno_38;
bb index := 22
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_61 = VDEF <.MEM_60>
*_18 = saved_errno_38;
bb index := 22
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_61 = VDEF <.MEM_60>
*_18 = saved_errno_38;
bb index := 22
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_61 = VDEF <.MEM_60>
*_18 = saved_errno_38;
bb index := 22
# VUSE <.MEM_64>
return 0B;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 23

======================================================================
*_18 = saved_errno_38;
./benchmarks/tmux/leak_4/tmux_leak_4.c:114:8: warning: use location
  errno = saved_errno;
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = __errno_location ();
bb index := 22
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
  return i;
         ^
beacuse in succ := 5 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = __errno_location ();
bb index := 22
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = __errno_location ();
bb index := 22
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = __errno_location ();
bb index := 22
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = __errno_location ();
bb index := 22
# VUSE <.MEM_64>
return 0B;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 23

======================================================================
_18 = __errno_location ();
./benchmarks/tmux/leak_4/tmux_leak_4.c:114:2: warning: use location
  errno = saved_errno;
  ^
this stmt is child function---__errno_location-----

 ================== trace ================== 
 <ssa_name 0x7fe47bd814c8
    type <pointer_type 0x7fe47c253a80
        type <integer_type 0x7fe47c24c5e8 int public SI
            size <integer_cst 0x7fe47c238e28 constant 32>
            unit size <integer_cst 0x7fe47c238e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7fe47c24c5e8 precision 32 min <integer_cst 0x7fe47c238de0 -2147483648> max <integer_cst 0x7fe47c238df8 2147483647>
            pointer_to_this <pointer_type 0x7fe47c253a80>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _18 = __errno_location ();
    version 18
    ptr-info 0x7fe47bd91198>
trace fucntion name:__errno_location 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe47bd814c8
    type <pointer_type 0x7fe47c253a80
        type <integer_type 0x7fe47c24c5e8 int public SI
            size <integer_cst 0x7fe47c238e28 constant 32>
            unit size <integer_cst 0x7fe47c238e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7fe47c24c5e8 precision 32 min <integer_cst 0x7fe47c238de0 -2147483648> max <integer_cst 0x7fe47c238df8 2147483647>
            pointer_to_this <pointer_type 0x7fe47c253a80>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _18 = __errno_location ();
    version 18
    ptr-info 0x7fe47bd91198>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_47>
free (_17);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:2: warning: use location
  free(base);
  ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_47>
free (_17);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:2: warning: Use after free error!: free location 
# .MEM_61 = VDEF <.MEM_60>
*_18 = saved_errno_38;
./benchmarks/tmux/leak_4/tmux_leak_4.c:114:8: warning: use location
  errno = saved_errno;
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_47>
free (_17);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:2: warning: Use after free error!: free location 
  free(base);
  ^
# .MEM_61 = VDEF <.MEM_60>
*_18 = saved_errno_38;
./benchmarks/tmux/leak_4/tmux_leak_4.c:114:8: warning: use location
  errno = saved_errno;
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_47>
free (_17);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:2: warning: Use after free error!: free location 
  free(base);
  ^
_18 = __errno_location ();
./benchmarks/tmux/leak_4/tmux_leak_4.c:114:2: warning: use location
  errno = saved_errno;
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:make_label========= [0m
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:make_label========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path make_label  function_call count: 8 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:__errno_location========= [0m
[40;33m =======POP node_fun stack:__errno_location========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:__realpath_chk========= [0m
[40;33m =======POP node_fun stack:__realpath_chk========= [0m
[40;42m =======pre add _ fucntion:lstat========= [0m
[40;33m =======POP node_fun stack:lstat========= [0m
[40;42m =======pre add _ fucntion:mkdir========= [0m
[40;33m =======POP node_fun stack:mkdir========= [0m
[40;42m =======pre add _ fucntion:xvasprintf========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path xvasprintf  function_call count: 5 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:strerror========= [0m
[40;33m =======POP node_fun stack:strerror========= [0m
[40;42m =======pre add _ fucntion:__errno_location========= [0m
[40;33m =======POP node_fun stack:__errno_location========= [0m
[40;42m =======pre add _ fucntion:vasprintf========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path vasprintf  function_call count: 2 level :3========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre_check_funciton:vasprintf========= [0m
[40;42m =======start_check_funciton:vasprintf========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fe47c240990
    type <pointer_type 0x7fe47c2530a8
        type <void_type 0x7fe47c24cf18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fe47c2530a8>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fe47c258bd0>>
   
    def_stmt _4 = malloc (_3);
    version 4
    ptr-info 0x7fe47bd65fc0>
# .MEM_13 = VDEF <.MEM_12(D)>
_4 = malloc (_3);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
*ret_11(D) = _4;
bb index := 2
# VUSE <.MEM_14>
return _6;
In function â€˜vasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
*ret_11(D) = _4;
bb index := 2
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
*ret_11(D) = _4;
In function â€˜mainâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:7: warning: use location
  *ret = malloc(strlen(fmt) + strlen(ap));  /* allocation site */
       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
*ret_11(D) = _4;
bb index := 2
# VUSE <.MEM_14>
return _6;
In function â€˜vasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
*ret_11(D) = _4;
bb index := 2
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
*ret_11(D) = _4;
In function â€˜mainâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:7: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12(D)>
_4 = malloc (_3);
bb index := 2
# VUSE <.MEM_14>
return _6;
In function â€˜vasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12(D)>
_4 = malloc (_3);
bb index := 2
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_4 = malloc (_3);
In function â€˜mainâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:9: warning: use location
  *ret = malloc(strlen(fmt) + strlen(ap));  /* allocation site */
         ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7fe47c240990
    type <pointer_type 0x7fe47c2530a8
        type <void_type 0x7fe47c24cf18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fe47c2530a8>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fe47c258bd0>>
   
    def_stmt _4 = malloc (_3);
    version 4
    ptr-info 0x7fe47bd65fc0>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe47c240990
    type <pointer_type 0x7fe47c2530a8
        type <void_type 0x7fe47c24cf18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fe47c2530a8>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fe47c258bd0>>
   
    def_stmt _4 = malloc (_3);
    version 4
    ptr-info 0x7fe47bd65fc0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe47c240a68
    type <pointer_type 0x7fe47bd629d8
        type <integer_type 0x7fe47bd62930 char readonly public string-flag QI
            size <integer_cst 0x7fe47c238cd8 constant 8>
            unit size <integer_cst 0x7fe47c238cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fe47c24c3f0 precision 8 min <integer_cst 0x7fe47bd65180 -128> max <integer_cst 0x7fe47bd65168 127> context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7fe47bd629d8>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fe47bd6e100 fmt>
    def_stmt GIMPLE_NOP
    version 8
    ptr-info 0x7fe47bd91000>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_12(D)>
_1 = strlen (fmt_8(D));
bb index := 2
# VUSE <.MEM_14>
return _6;
In function â€˜vasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_12(D)>
_1 = strlen (fmt_8(D));
bb index := 2
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_1 = strlen (fmt_8(D));
In function â€˜mainâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:16: warning: use location
  *ret = malloc(strlen(fmt) + strlen(ap));  /* allocation site */
                ^
this stmt is child function---strlen-----

 ================== trace ================== 
 <ssa_name 0x7fe47c240a68
    type <pointer_type 0x7fe47bd629d8
        type <integer_type 0x7fe47bd62930 char readonly public string-flag QI
            size <integer_cst 0x7fe47c238cd8 constant 8>
            unit size <integer_cst 0x7fe47c238cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fe47c24c3f0 precision 8 min <integer_cst 0x7fe47bd65180 -128> max <integer_cst 0x7fe47bd65168 127> context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7fe47bd629d8>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fe47bd6e100 fmt>
    def_stmt GIMPLE_NOP
    version 8
    ptr-info 0x7fe47bd91000>
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _1 + _2;
bb index := 2
# VUSE <.MEM_14>
return _6;
In function â€˜vasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _1 + _2;
bb index := 2
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_3 = _1 + _2;
In function â€˜mainâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:9: warning: use location
  *ret = malloc(strlen(fmt) + strlen(ap));  /* allocation site */
         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12(D)>
_4 = malloc (_3);
bb index := 2
# VUSE <.MEM_14>
return _6;
In function â€˜vasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12(D)>
_4 = malloc (_3);
bb index := 2
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_4 = malloc (_3);
In function â€˜mainâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:9: warning: use location
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7fe47c240a68
    type <pointer_type 0x7fe47bd629d8
        type <integer_type 0x7fe47bd62930 char readonly public string-flag QI
            size <integer_cst 0x7fe47c238cd8 constant 8>
            unit size <integer_cst 0x7fe47c238cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fe47c24c3f0 precision 8 min <integer_cst 0x7fe47bd65180 -128> max <integer_cst 0x7fe47bd65168 127> context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7fe47bd629d8>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fe47bd6e100 fmt>
    def_stmt GIMPLE_NOP
    version 8
    ptr-info 0x7fe47bd91000>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
*ret_11(D) = _4;
bb index := 2
# VUSE <.MEM_14>
return _6;
In function â€˜vasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
*ret_11(D) = _4;
bb index := 2
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
*ret_11(D) = _4;
In function â€˜mainâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:7: warning: use location
  *ret = malloc(strlen(fmt) + strlen(ap));  /* allocation site */
       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe47c240a68
    type <pointer_type 0x7fe47bd629d8
        type <integer_type 0x7fe47bd62930 char readonly public string-flag QI
            size <integer_cst 0x7fe47c238cd8 constant 8>
            unit size <integer_cst 0x7fe47c238cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fe47c24c3f0 precision 8 min <integer_cst 0x7fe47bd65180 -128> max <integer_cst 0x7fe47bd65168 127> context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7fe47bd629d8>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fe47bd6e100 fmt>
    def_stmt GIMPLE_NOP
    version 8
    ptr-info 0x7fe47bd91000>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe47c240ab0
    type <pointer_type 0x7fe47bd62a80
        type <integer_type 0x7fe47bd62888 char public string-flag QI
            size <integer_cst 0x7fe47c238cd8 constant 8>
            unit size <integer_cst 0x7fe47c238cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fe47c24c3f0 precision 8 min <integer_cst 0x7fe47bd65180 -128> max <integer_cst 0x7fe47bd65168 127> context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7fe47bd62a80>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
        pointer_to_this <pointer_type 0x7fe47bd62d20>>
    var <parm_decl 0x7fe47bd6e180 ap>
    def_stmt GIMPLE_NOP
    version 9
    ptr-info 0x7fe47bd91018>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_12(D)>
_2 = strlen (ap_9(D));
bb index := 2
# VUSE <.MEM_14>
return _6;
In function â€˜vasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_12(D)>
_2 = strlen (ap_9(D));
bb index := 2
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_2 = strlen (ap_9(D));
In function â€˜mainâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:30: warning: use location
  *ret = malloc(strlen(fmt) + strlen(ap));  /* allocation site */
                              ^
this stmt is child function---strlen-----

 ================== trace ================== 
 <ssa_name 0x7fe47c240ab0
    type <pointer_type 0x7fe47bd62a80
        type <integer_type 0x7fe47bd62888 char public string-flag QI
            size <integer_cst 0x7fe47c238cd8 constant 8>
            unit size <integer_cst 0x7fe47c238cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fe47c24c3f0 precision 8 min <integer_cst 0x7fe47bd65180 -128> max <integer_cst 0x7fe47bd65168 127> context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7fe47bd62a80>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
        pointer_to_this <pointer_type 0x7fe47bd62d20>>
    var <parm_decl 0x7fe47bd6e180 ap>
    def_stmt GIMPLE_NOP
    version 9
    ptr-info 0x7fe47bd91018>
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _1 + _2;
bb index := 2
# VUSE <.MEM_14>
return _6;
In function â€˜vasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _1 + _2;
bb index := 2
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_3 = _1 + _2;
In function â€˜mainâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:9: warning: use location
  *ret = malloc(strlen(fmt) + strlen(ap));  /* allocation site */
         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12(D)>
_4 = malloc (_3);
bb index := 2
# VUSE <.MEM_14>
return _6;
In function â€˜vasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12(D)>
_4 = malloc (_3);
bb index := 2
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_4 = malloc (_3);
In function â€˜mainâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:9: warning: use location
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7fe47c240ab0
    type <pointer_type 0x7fe47bd62a80
        type <integer_type 0x7fe47bd62888 char public string-flag QI
            size <integer_cst 0x7fe47c238cd8 constant 8>
            unit size <integer_cst 0x7fe47c238cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fe47c24c3f0 precision 8 min <integer_cst 0x7fe47bd65180 -128> max <integer_cst 0x7fe47bd65168 127> context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7fe47bd62a80>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
        pointer_to_this <pointer_type 0x7fe47bd62d20>>
    var <parm_decl 0x7fe47bd6e180 ap>
    def_stmt GIMPLE_NOP
    version 9
    ptr-info 0x7fe47bd91018>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
*ret_11(D) = _4;
bb index := 2
# VUSE <.MEM_14>
return _6;
In function â€˜vasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
*ret_11(D) = _4;
bb index := 2
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
*ret_11(D) = _4;
In function â€˜mainâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:7: warning: use location
  *ret = malloc(strlen(fmt) + strlen(ap));  /* allocation site */
       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe47c240ab0
    type <pointer_type 0x7fe47bd62a80
        type <integer_type 0x7fe47bd62888 char public string-flag QI
            size <integer_cst 0x7fe47c238cd8 constant 8>
            unit size <integer_cst 0x7fe47c238cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fe47c24c3f0 precision 8 min <integer_cst 0x7fe47bd65180 -128> max <integer_cst 0x7fe47bd65168 127> context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7fe47bd62a80>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
        pointer_to_this <pointer_type 0x7fe47bd62d20>>
    var <parm_decl 0x7fe47bd6e180 ap>
    def_stmt GIMPLE_NOP
    version 9
    ptr-info 0x7fe47bd91018>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe47c240948
    type <integer_type 0x7fe47c24c7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fe47c24c738 precision 64 min <integer_cst 0x7fe47c238eb8 0> max <integer_cst 0x7fe47c23a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fe47c2589d8>>
   
    def_stmt _3 = _1 + _2;
    version 3>
_3 = _1 + _2;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12(D)>
_4 = malloc (_3);
bb index := 2
# VUSE <.MEM_14>
return _6;
In function â€˜vasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_13 = VDEF <.MEM_12(D)>
_4 = malloc (_3);
bb index := 2
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
_4 = malloc (_3);
In function â€˜mainâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:9: warning: use location
  *ret = malloc(strlen(fmt) + strlen(ap));  /* allocation site */
         ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7fe47c240948
    type <integer_type 0x7fe47c24c7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fe47c24c738 precision 64 min <integer_cst 0x7fe47c238eb8 0> max <integer_cst 0x7fe47c23a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fe47c2589d8>>
   
    def_stmt _3 = _1 + _2;
    version 3>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
*ret_11(D) = _4;
bb index := 2
# VUSE <.MEM_14>
return _6;
In function â€˜vasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13>
*ret_11(D) = _4;
bb index := 2
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
*ret_11(D) = _4;
In function â€˜mainâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:46:7: warning: use location
  *ret = malloc(strlen(fmt) + strlen(ap));  /* allocation site */
       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe47c240948
    type <integer_type 0x7fe47c24c7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fe47c24c738 precision 64 min <integer_cst 0x7fe47c238eb8 0> max <integer_cst 0x7fe47c23a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fe47c2589d8>>
   
    def_stmt _3 = _1 + _2;
    version 3>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:vasprintf========= [0m
[40;42m =======pre_check_funciton:xvasprintf========= [0m
[40;42m =======start_check_funciton:xvasprintf========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fe47c240d80
    type <pointer_type 0x7fe47bd62d20
        type <pointer_type 0x7fe47bd62a80 type <integer_type 0x7fe47bd62888 char>
            public unsigned DI
            size <integer_cst 0x7fe47c238be8 constant 64>
            unit size <integer_cst 0x7fe47c238c00 constant 8>
            align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7fe47bd62d20>>
        public unsigned DI size <integer_cst 0x7fe47c238be8 64> unit size <integer_cst 0x7fe47c238c00 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fe47bd6e280 ret>
    def_stmt GIMPLE_NOP
    version 6
    ptr-info 0x7fe47bd91078>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_15>
_1 = *ret_6(D);
bb index := 3
# VUSE <.MEM_14>
return _6;
In function â€˜xvasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_15>
_1 = *ret_6(D);
bb index := 3
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_15>
_1 = *ret_6(D);
bb index := 3
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_15>
_1 = *ret_6(D);
bb index := 3
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
  return i;
         ^
beacuse in succ := 5 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_15>
_1 = *ret_6(D);
bb index := 3
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_15>
_1 = *ret_6(D);
bb index := 3
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================
_1 = *ret_6(D);
In function â€˜mainâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:68:15: warning: use location
  if (i < 0 || *ret == NULL)
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 3
# VUSE <.MEM_14>
return _6;
In function â€˜xvasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 3
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 3
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 3
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
  return i;
         ^
beacuse in succ := 5 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 3
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 3
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================
if (_1 == 0B)
In function â€˜mainâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:68:12: warning: use location
  if (i < 0 || *ret == NULL)
            ^
if (_1 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_4/tmux_leak_4.c:68:12: warning: use location
Cond in fucntion xvasprintf basic block 3
 ================== possible direct basic block ================= 
from xvasprintf basic block 4
 ================== possible direct basic block ================= 
from xvasprintf basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14(D)>
i_10 = vasprintf (ret_6(D), fmt_7(D), ap_8(D));
bb index := 2
# VUSE <.MEM_14>
return _6;
In function â€˜xvasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14(D)>
i_10 = vasprintf (ret_6(D), fmt_7(D), ap_8(D));
bb index := 2
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14(D)>
i_10 = vasprintf (ret_6(D), fmt_7(D), ap_8(D));
bb index := 2
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
  return i;
         ^
beacuse in succ := 5 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14(D)>
i_10 = vasprintf (ret_6(D), fmt_7(D), ap_8(D));
bb index := 2
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
i_10 = vasprintf (ret_6(D), fmt_7(D), ap_8(D));
In function â€˜mainâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:66:4: warning: use location
  i = vasprintf(ret, fmt, ap);
    ^
this stmt is child function---vasprintf-----

 ================== trace ================== 
 <ssa_name 0x7fe47c240d80
    type <pointer_type 0x7fe47bd62d20
        type <pointer_type 0x7fe47bd62a80 type <integer_type 0x7fe47bd62888 char>
            public unsigned DI
            size <integer_cst 0x7fe47c238be8 constant 64>
            unit size <integer_cst 0x7fe47c238c00 constant 8>
            align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7fe47bd62d20>>
        public unsigned DI size <integer_cst 0x7fe47c238be8 64> unit size <integer_cst 0x7fe47c238c00 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fe47bd6e280 ret>
    def_stmt GIMPLE_NOP
    version 6
    ptr-info 0x7fe47bd91078>
trace fucntion name:vasprintf 
[40;44m =======trace_function_path vasprintf  function_call count: 2 level :0========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (i_10 < 0)
bb index := 2
# VUSE <.MEM_14>
return _6;
In function â€˜xvasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (i_10 < 0)
bb index := 2
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (i_10 < 0)
bb index := 2
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
  return i;
         ^
beacuse in succ := 5 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (i_10 < 0)
bb index := 2
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
if (i_10 < 0)
In function â€˜mainâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:68:5: warning: use location
  if (i < 0 || *ret == NULL)
     ^
if (i_10 < 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_4/tmux_leak_4.c:68:5: warning: use location
Cond in fucntion xvasprintf basic block 2
 ================== possible direct basic block ================= 
from xvasprintf basic block 4
 ================== possible direct basic block ================= 
from xvasprintf basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe47c240d80
    type <pointer_type 0x7fe47bd62d20
        type <pointer_type 0x7fe47bd62a80 type <integer_type 0x7fe47bd62888 char>
            public unsigned DI
            size <integer_cst 0x7fe47c238be8 constant 64>
            unit size <integer_cst 0x7fe47c238c00 constant 8>
            align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7fe47bd62d20>>
        public unsigned DI size <integer_cst 0x7fe47c238be8 64> unit size <integer_cst 0x7fe47c238c00 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fe47bd6e280 ret>
    def_stmt GIMPLE_NOP
    version 6
    ptr-info 0x7fe47bd91078>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe47c240ca8
    type <pointer_type 0x7fe47c253a80
        type <integer_type 0x7fe47c24c5e8 int public SI
            size <integer_cst 0x7fe47c238e28 constant 32>
            unit size <integer_cst 0x7fe47c238e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7fe47c24c5e8 precision 32 min <integer_cst 0x7fe47c238de0 -2147483648> max <integer_cst 0x7fe47c238df8 2147483647>
            pointer_to_this <pointer_type 0x7fe47c253a80>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _2 = __errno_location ();
    version 2
    ptr-info 0x7fe47bd91060>
_2 = __errno_location ();

 ================== trace ptable================== 
trace fucntion name:__errno_location 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---__errno_location-----
this other function ------__errno_location-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_15>
_3 = *_2;
bb index := 4
# VUSE <.MEM_14>
return _6;
In function â€˜xvasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_15>
_3 = *_2;
bb index := 4
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_15>
_3 = *_2;
bb index := 4
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
  return i;
         ^
beacuse in succ := 5 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_15>
_3 = *_2;
bb index := 4
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
_3 = *_2;
In function â€˜mainâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:69:3: warning: use location
   fatalx("xasprintf: %s", strerror(errno));
   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
_4 = strerror (_3);
bb index := 4
# VUSE <.MEM_14>
return _6;
In function â€˜xvasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
_4 = strerror (_3);
bb index := 4
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
_4 = strerror (_3);
bb index := 4
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
  return i;
         ^
beacuse in succ := 5 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
_4 = strerror (_3);
bb index := 4
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
_4 = strerror (_3);
In function â€˜mainâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:69:3: warning: use location
   fatalx("xasprintf: %s", strerror(errno));
   ^
this stmt is child function---strerror-----

 ================== trace ================== 
 <ssa_name 0x7fe47c240ca8
    type <pointer_type 0x7fe47c253a80
        type <integer_type 0x7fe47c24c5e8 int public SI
            size <integer_cst 0x7fe47c238e28 constant 32>
            unit size <integer_cst 0x7fe47c238e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7fe47c24c5e8 precision 32 min <integer_cst 0x7fe47c238de0 -2147483648> max <integer_cst 0x7fe47c238df8 2147483647>
            pointer_to_this <pointer_type 0x7fe47c253a80>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _2 = __errno_location ();
    version 2
    ptr-info 0x7fe47bd91060>
trace fucntion name:strerror 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
_13 = __printf_chk (1, "xasprintf: %s", _4);
bb index := 4
# VUSE <.MEM_14>
return _6;
In function â€˜xvasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
_13 = __printf_chk (1, "xasprintf: %s", _4);
bb index := 4
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
_13 = __printf_chk (1, "xasprintf: %s", _4);
bb index := 4
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
  return i;
         ^
beacuse in succ := 5 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
_13 = __printf_chk (1, "xasprintf: %s", _4);
bb index := 4
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
_13 = __printf_chk (1, "xasprintf: %s", _4);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7fe47c240ca8
    type <pointer_type 0x7fe47c253a80
        type <integer_type 0x7fe47c24c5e8 int public SI
            size <integer_cst 0x7fe47c238e28 constant 32>
            unit size <integer_cst 0x7fe47c238e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7fe47c24c5e8 precision 32 min <integer_cst 0x7fe47c238de0 -2147483648> max <integer_cst 0x7fe47c238df8 2147483647>
            pointer_to_this <pointer_type 0x7fe47c253a80>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _2 = __errno_location ();
    version 2
    ptr-info 0x7fe47bd91060>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = __errno_location ();
bb index := 4
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = __errno_location ();
bb index := 4
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = __errno_location ();
bb index := 4
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = __errno_location ();
bb index := 4
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
_2 = __errno_location ();
In function â€˜mainâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:69:3: warning: use location
   fatalx("xasprintf: %s", strerror(errno));
   ^
this stmt is child function---__errno_location-----

 ================== trace ================== 
 <ssa_name 0x7fe47c240ca8
    type <pointer_type 0x7fe47c253a80
        type <integer_type 0x7fe47c24c5e8 int public SI
            size <integer_cst 0x7fe47c238e28 constant 32>
            unit size <integer_cst 0x7fe47c238e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7fe47c24c5e8 precision 32 min <integer_cst 0x7fe47c238de0 -2147483648> max <integer_cst 0x7fe47c238df8 2147483647>
            pointer_to_this <pointer_type 0x7fe47c253a80>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _2 = __errno_location ();
    version 2
    ptr-info 0x7fe47bd91060>
trace fucntion name:__errno_location 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe47c240ca8
    type <pointer_type 0x7fe47c253a80
        type <integer_type 0x7fe47c24c5e8 int public SI
            size <integer_cst 0x7fe47c238e28 constant 32>
            unit size <integer_cst 0x7fe47c238e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7fe47c24c5e8 precision 32 min <integer_cst 0x7fe47c238de0 -2147483648> max <integer_cst 0x7fe47c238df8 2147483647>
            pointer_to_this <pointer_type 0x7fe47c253a80>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _2 = __errno_location ();
    version 2
    ptr-info 0x7fe47bd91060>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe47c240cf0
    type <integer_type 0x7fe47c24c5e8 int public SI
        size <integer_cst 0x7fe47c238e28 constant 32>
        unit size <integer_cst 0x7fe47c238e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fe47c24c5e8 precision 32 min <integer_cst 0x7fe47c238de0 -2147483648> max <integer_cst 0x7fe47c238df8 2147483647>
        pointer_to_this <pointer_type 0x7fe47c253a80>>
   
    def_stmt _3 = *_2;
    version 3>
# VUSE <.MEM_15>
_3 = *_2;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
_4 = strerror (_3);
bb index := 4
# VUSE <.MEM_14>
return _6;
In function â€˜xvasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
_4 = strerror (_3);
bb index := 4
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
_4 = strerror (_3);
bb index := 4
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
  return i;
         ^
beacuse in succ := 5 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
_4 = strerror (_3);
bb index := 4
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
_4 = strerror (_3);
In function â€˜mainâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:69:3: warning: use location
   fatalx("xasprintf: %s", strerror(errno));
   ^
this stmt is child function---strerror-----

 ================== trace ================== 
 <ssa_name 0x7fe47c240cf0
    type <integer_type 0x7fe47c24c5e8 int public SI
        size <integer_cst 0x7fe47c238e28 constant 32>
        unit size <integer_cst 0x7fe47c238e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fe47c24c5e8 precision 32 min <integer_cst 0x7fe47c238de0 -2147483648> max <integer_cst 0x7fe47c238df8 2147483647>
        pointer_to_this <pointer_type 0x7fe47c253a80>>
   
    def_stmt _3 = *_2;
    version 3>
trace fucntion name:strerror 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
_13 = __printf_chk (1, "xasprintf: %s", _4);
bb index := 4
# VUSE <.MEM_14>
return _6;
In function â€˜xvasprintfâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
_13 = __printf_chk (1, "xasprintf: %s", _4);
bb index := 4
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
_13 = __printf_chk (1, "xasprintf: %s", _4);
bb index := 4
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
  return i;
         ^
beacuse in succ := 5 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
_13 = __printf_chk (1, "xasprintf: %s", _4);
bb index := 4
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================
_13 = __printf_chk (1, "xasprintf: %s", _4);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7fe47c240cf0
    type <integer_type 0x7fe47c24c5e8 int public SI
        size <integer_cst 0x7fe47c238e28 constant 32>
        unit size <integer_cst 0x7fe47c238e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fe47c24c5e8 precision 32 min <integer_cst 0x7fe47c238de0 -2147483648> max <integer_cst 0x7fe47c238df8 2147483647>
        pointer_to_this <pointer_type 0x7fe47c253a80>>
   
    def_stmt _3 = *_2;
    version 3>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe47c240cf0
    type <integer_type 0x7fe47c24c5e8 int public SI
        size <integer_cst 0x7fe47c238e28 constant 32>
        unit size <integer_cst 0x7fe47c238e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fe47c24c5e8 precision 32 min <integer_cst 0x7fe47c238de0 -2147483648> max <integer_cst 0x7fe47c238df8 2147483647>
        pointer_to_this <pointer_type 0x7fe47c253a80>>
   
    def_stmt _3 = *_2;
    version 3>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fe47c238f90 type <integer_type 0x7fe47c24c5e8 int> constant 1>
[40;33m =======POP node_fun stack:xvasprintf========= [0m
[40;42m =======pre add _ fucntion:getenv========= [0m
[40;33m =======POP node_fun stack:getenv========= [0m
[40;42m =======pre add _ fucntion:getuid========= [0m
[40;33m =======POP node_fun stack:getuid========= [0m
[40;42m =======pre_check_funciton:make_label========= [0m
[40;42m =======start_check_funciton:make_label========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fe47bd81000
    type <integer_type 0x7fe47c24c5e8 int public SI
        size <integer_cst 0x7fe47c238e28 constant 32>
        unit size <integer_cst 0x7fe47c238e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fe47c24c5e8 precision 32 min <integer_cst 0x7fe47c238de0 -2147483648> max <integer_cst 0x7fe47c238df8 2147483647>
        pointer_to_this <pointer_type 0x7fe47c253a80>>
   
    def_stmt _1 = getuid ();
    version 1>
# .MEM_50 = VDEF <.MEM_49(D)>
_1 = getuid ();

 ================== trace ptable================== 
trace fucntion name:getuid 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---getuid-----
this other function ------getuid-----
 
 Start check Pointer Collect  

======================================================================
uid_26 = (uid_t) _1;
In function â€˜mainâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:84:6: warning: use location
  uid = getuid();
      ^
_1 = getuid ();
./benchmarks/tmux/leak_4/tmux_leak_4.c:84:8: warning: use location
  uid = getuid();
        ^
this stmt is child function---getuid-----

 ================== trace ================== 
 <ssa_name 0x7fe47bd81000
    type <integer_type 0x7fe47c24c5e8 int public SI
        size <integer_cst 0x7fe47c238e28 constant 32>
        unit size <integer_cst 0x7fe47c238e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fe47c24c5e8 precision 32 min <integer_cst 0x7fe47c238de0 -2147483648> max <integer_cst 0x7fe47c238df8 2147483647>
        pointer_to_this <pointer_type 0x7fe47c253a80>>
   
    def_stmt _1 = getuid ();
    version 1>
trace fucntion name:getuid 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe47bd81000
    type <integer_type 0x7fe47c24c5e8 int public SI
        size <integer_cst 0x7fe47c238e28 constant 32>
        unit size <integer_cst 0x7fe47c238e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fe47c24c5e8 precision 32 min <integer_cst 0x7fe47c238de0 -2147483648> max <integer_cst 0x7fe47c238df8 2147483647>
        pointer_to_this <pointer_type 0x7fe47c253a80>>
   
    def_stmt _1 = getuid ();
    version 1>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_47>
free (_17);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:2: warning: use location
  free(base);
  ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fe47bd56b80
    type <pointer_type 0x7fe47bd6d348
        type <array_type 0x7fe47bd6d2a0 type <integer_type 0x7fe47bd62888 char>
            BLK
            size <integer_cst 0x7fe47bd65258 constant 96>
            unit size <integer_cst 0x7fe47bd65348 constant 12>
            align 8 symtab 0 alias set -1 structural equality domain <integer_type 0x7fe47bd6d1f8>
            pointer_to_this <pointer_type 0x7fe47bd6d348>>
        unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    readonly constant
    arg 0 <string_cst 0x7fe47bd79b18 type <array_type 0x7fe47bd6d2a0>
        readonly constant static "TMUX_TMPDIR\000">
    ./benchmarks/tmux/leak_4/tmux_leak_4.c:86:18 start: ./benchmarks/tmux/leak_4/tmux_leak_4.c:86:18 finish: ./benchmarks/tmux/leak_4/tmux_leak_4.c:86:18>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fe47bd56f20
    type <pointer_type 0x7fe47bd62d20
        type <pointer_type 0x7fe47bd62a80 type <integer_type 0x7fe47bd62888 char>
            public unsigned DI
            size <integer_cst 0x7fe47c238be8 constant 64>
            unit size <integer_cst 0x7fe47c238c00 constant 8>
            align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7fe47bd62d20>>
        public unsigned DI size <integer_cst 0x7fe47c238be8 64> unit size <integer_cst 0x7fe47c238c00 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    arg 0 <var_decl 0x7fe47bd7f2d0 base type <pointer_type 0x7fe47bd62a80>
        addressable unsigned DI file ./benchmarks/tmux/leak_4/tmux_leak_4.c line 77 col 9 size <integer_cst 0x7fe47c238be8 64> unit size <integer_cst 0x7fe47c238c00 8>
        align 64 context <function_decl 0x7fe47bd63c00 make_label>
        chain <var_decl 0x7fe47bd7f240 resolved type <array_type 0x7fe47bd6d000>
            addressable BLK file ./benchmarks/tmux/leak_4/tmux_leak_4.c line 77 col 15
            size <integer_cst 0x7fe47bd65300 constant 32768>
            unit size <integer_cst 0x7fe47bd652e8 constant 4096>
            align 128 context <function_decl 0x7fe47bd63c00 make_label> chain <var_decl 0x7fe47bd7f1b0 path>>>
    ./benchmarks/tmux/leak_4/tmux_leak_4.c:87:3 start: ./benchmarks/tmux/leak_4/tmux_leak_4.c:87:3 finish: ./benchmarks/tmux/leak_4/tmux_leak_4.c:87:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fe47bd56fa0
    type <pointer_type 0x7fe47bd62d20
        type <pointer_type 0x7fe47bd62a80 type <integer_type 0x7fe47bd62888 char>
            public unsigned DI
            size <integer_cst 0x7fe47c238be8 constant 64>
            unit size <integer_cst 0x7fe47c238c00 constant 8>
            align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7fe47bd62d20>>
        public unsigned DI size <integer_cst 0x7fe47c238be8 64> unit size <integer_cst 0x7fe47c238c00 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    arg 0 <var_decl 0x7fe47bd7f2d0 base type <pointer_type 0x7fe47bd62a80>
        addressable unsigned DI file ./benchmarks/tmux/leak_4/tmux_leak_4.c line 77 col 9 size <integer_cst 0x7fe47c238be8 64> unit size <integer_cst 0x7fe47c238c00 8>
        align 64 context <function_decl 0x7fe47bd63c00 make_label>
        chain <var_decl 0x7fe47bd7f240 resolved type <array_type 0x7fe47bd6d000>
            addressable BLK file ./benchmarks/tmux/leak_4/tmux_leak_4.c line 77 col 15
            size <integer_cst 0x7fe47bd65300 constant 32768>
            unit size <integer_cst 0x7fe47bd652e8 constant 4096>
            align 128 context <function_decl 0x7fe47bd63c00 make_label> chain <var_decl 0x7fe47bd7f1b0 path>>>
    ./benchmarks/tmux/leak_4/tmux_leak_4.c:89:3 start: ./benchmarks/tmux/leak_4/tmux_leak_4.c:89:3 finish: ./benchmarks/tmux/leak_4/tmux_leak_4.c:89:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe47bd81090
    type <pointer_type 0x7fe47bd62a80
        type <integer_type 0x7fe47bd62888 char public string-flag QI
            size <integer_cst 0x7fe47c238cd8 constant 8>
            unit size <integer_cst 0x7fe47c238cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fe47c24c3f0 precision 8 min <integer_cst 0x7fe47bd65180 -128> max <integer_cst 0x7fe47bd65168 127> context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7fe47bd62a80>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
        pointer_to_this <pointer_type 0x7fe47bd62d20>>
   
    def_stmt _3 = base;
    version 3
    ptr-info 0x7fe47bd910c0>
# VUSE <.MEM_45>
_3 = base;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_54 = VDEF <.MEM_45>
_4 = mkdir (_3, 0);
bb index := 6
# VUSE <.MEM_14>
return _6;
In function â€˜make_labelâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_54 = VDEF <.MEM_45>
_4 = mkdir (_3, 0);
bb index := 6
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_54 = VDEF <.MEM_45>
_4 = mkdir (_3, 0);
bb index := 6
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
  return i;
         ^
beacuse in succ := 5 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_54 = VDEF <.MEM_45>
_4 = mkdir (_3, 0);
bb index := 6
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_54 = VDEF <.MEM_45>
_4 = mkdir (_3, 0);
bb index := 6
# VUSE <.MEM_64>
return 0B;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_54 = VDEF <.MEM_45>
_4 = mkdir (_3, 0);
bb index := 6
# VUSE <.MEM_64>
return 0B;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 23

======================================================================
_4 = mkdir (_3, 0);
In function â€˜mainâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:6: warning: use location
  if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
      ^
this stmt is child function---mkdir-----

 ================== trace ================== 
 <ssa_name 0x7fe47bd81090
    type <pointer_type 0x7fe47bd62a80
        type <integer_type 0x7fe47bd62888 char public string-flag QI
            size <integer_cst 0x7fe47c238cd8 constant 8>
            unit size <integer_cst 0x7fe47c238cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fe47c24c3f0 precision 8 min <integer_cst 0x7fe47bd65180 -128> max <integer_cst 0x7fe47bd65168 127> context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7fe47bd62a80>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
        pointer_to_this <pointer_type 0x7fe47bd62d20>>
   
    def_stmt _3 = base;
    version 3
    ptr-info 0x7fe47bd910c0>
trace fucntion name:mkdir 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_4 != 0)
bb index := 6
# VUSE <.MEM_14>
return _6;
In function â€˜make_labelâ€™:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_4 != 0)
bb index := 6
# VUSE <.MEM_14>
return _6;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_4 != 0)
bb index := 6
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
  return i;
         ^
beacuse in succ := 5 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_4 != 0)
bb index := 6
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_4 != 0)
bb index := 6
# VUSE <.MEM_64>
return 0B;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_4 != 0)
bb index := 6
# VUSE <.MEM_64>
return 0B;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 23

======================================================================
if (_4 != 0)
In function â€˜mainâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:5: warning: use location
  if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
     ^
if (_4 != 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:5: warning: use location
Cond in fucntion make_label basic block 6
 ================== possible direct basic block ================= 
from make_label basic block 7
 ================== possible direct basic block ================= 
from make_label basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe47bd81090
    type <pointer_type 0x7fe47bd62a80
        type <integer_type 0x7fe47bd62888 char public string-flag QI
            size <integer_cst 0x7fe47c238cd8 constant 8>
            unit size <integer_cst 0x7fe47c238cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fe47c24c3f0 precision 8 min <integer_cst 0x7fe47bd65180 -128> max <integer_cst 0x7fe47bd65168 127> context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7fe47bd62a80>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
        pointer_to_this <pointer_type 0x7fe47bd62d20>>
   
    def_stmt _3 = base;
    version 3
    ptr-info 0x7fe47bd910c0>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_47>
free (_17);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:2: warning: use location
  free(base);
  ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe47bd81120
    type <pointer_type 0x7fe47c253a80
        type <integer_type 0x7fe47c24c5e8 int public SI
            size <integer_cst 0x7fe47c238e28 constant 32>
            unit size <integer_cst 0x7fe47c238e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7fe47c24c5e8 precision 32 min <integer_cst 0x7fe47c238de0 -2147483648> max <integer_cst 0x7fe47c238df8 2147483647>
            pointer_to_this <pointer_type 0x7fe47c253a80>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _5 = __errno_location ();
    version 5
    ptr-info 0x7fe47bd910d8>
_5 = __errno_location ();

 ================== trace ptable================== 
trace fucntion name:__errno_location 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---__errno_location-----
this other function ------__errno_location-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_54>
_6 = *_5;
bb index := 7
# VUSE <.MEM_15>
return i_10;
In function â€˜make_labelâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
  return i;
         ^
beacuse in succ := 5 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_54>
_6 = *_5;
bb index := 7
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================
_6 = *_5;
In function â€˜mainâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:35: warning: use location
  if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
                                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 != 17)
bb index := 7
# VUSE <.MEM_15>
return i_10;
In function â€˜make_labelâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
  return i;
         ^
beacuse in succ := 5 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 != 17)
bb index := 7
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================
if (_6 != 17)
In function â€˜mainâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:32: warning: use location
  if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
                                ^
if (_6 != 17)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:32: warning: use location
Cond in fucntion make_label basic block 7
 ================== possible direct basic block ================= 
from make_label basic block 22
 ================== possible direct basic block ================= 
from make_label basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = __errno_location ();
bb index := 7
# VUSE <.MEM_15>
return i_10;
In function â€˜make_labelâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
  return i;
         ^
beacuse in succ := 5 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = __errno_location ();
bb index := 7
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================
_5 = __errno_location ();
In function â€˜mainâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:91:35: warning: use location
  if (mkdir(base, S_IRWXU) != 0 && errno != EEXIST)
                                   ^
this stmt is child function---__errno_location-----

 ================== trace ================== 
 <ssa_name 0x7fe47bd81120
    type <pointer_type 0x7fe47c253a80
        type <integer_type 0x7fe47c24c5e8 int public SI
            size <integer_cst 0x7fe47c238e28 constant 32>
            unit size <integer_cst 0x7fe47c238e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7fe47c24c5e8 precision 32 min <integer_cst 0x7fe47c238de0 -2147483648> max <integer_cst 0x7fe47c238df8 2147483647>
            pointer_to_this <pointer_type 0x7fe47c253a80>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _5 = __errno_location ();
    version 5
    ptr-info 0x7fe47bd910d8>
trace fucntion name:__errno_location 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe47bd81120
    type <pointer_type 0x7fe47c253a80
        type <integer_type 0x7fe47c24c5e8 int public SI
            size <integer_cst 0x7fe47c238e28 constant 32>
            unit size <integer_cst 0x7fe47c238e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7fe47c24c5e8 precision 32 min <integer_cst 0x7fe47c238de0 -2147483648> max <integer_cst 0x7fe47c238df8 2147483647>
            pointer_to_this <pointer_type 0x7fe47c253a80>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _5 = __errno_location ();
    version 5
    ptr-info 0x7fe47bd910d8>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_47>
free (_17);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:2: warning: use location
  free(base);
  ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe47bd811b0
    type <pointer_type 0x7fe47bd62a80
        type <integer_type 0x7fe47bd62888 char public string-flag QI
            size <integer_cst 0x7fe47c238cd8 constant 8>
            unit size <integer_cst 0x7fe47c238cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fe47c24c3f0 precision 8 min <integer_cst 0x7fe47bd65180 -128> max <integer_cst 0x7fe47bd65168 127> context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7fe47bd62a80>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
        pointer_to_this <pointer_type 0x7fe47bd62d20>>
   
    def_stmt _7 = base;
    version 7
    ptr-info 0x7fe47bd910f0>
# VUSE <.MEM_54>
_7 = base;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_55 = VDEF <.MEM_54>
_8 = lstat (_7, &sb);
bb index := 8
# VUSE <.MEM_15>
return i_10;
In function â€˜make_labelâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
  return i;
         ^
beacuse in succ := 5 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_55 = VDEF <.MEM_54>
_8 = lstat (_7, &sb);
bb index := 8
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_55 = VDEF <.MEM_54>
_8 = lstat (_7, &sb);
bb index := 8
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 5

======================================================================
_8 = lstat (_7, &sb);
In function â€˜mainâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:94:6: warning: use location
  if (lstat(base, &sb) != 0)
      ^
this stmt is child function---lstat-----

 ================== trace ================== 
 <ssa_name 0x7fe47bd811b0
    type <pointer_type 0x7fe47bd62a80
        type <integer_type 0x7fe47bd62888 char public string-flag QI
            size <integer_cst 0x7fe47c238cd8 constant 8>
            unit size <integer_cst 0x7fe47c238cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fe47c24c3f0 precision 8 min <integer_cst 0x7fe47bd65180 -128> max <integer_cst 0x7fe47bd65168 127> context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7fe47bd62a80>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
        pointer_to_this <pointer_type 0x7fe47bd62d20>>
   
    def_stmt _7 = base;
    version 7
    ptr-info 0x7fe47bd910f0>
trace fucntion name:lstat 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_8 != 0)
bb index := 8
# VUSE <.MEM_15>
return i_10;
In function â€˜make_labelâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
  return i;
         ^
beacuse in succ := 5 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_8 != 0)
bb index := 8
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_8 != 0)
bb index := 8
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 5

======================================================================
if (_8 != 0)
In function â€˜mainâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:94:5: warning: use location
  if (lstat(base, &sb) != 0)
     ^
if (_8 != 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_4/tmux_leak_4.c:94:5: warning: use location
Cond in fucntion make_label basic block 8
 ================== possible direct basic block ================= 
from make_label basic block 22
 ================== possible direct basic block ================= 
from make_label basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe47bd811b0
    type <pointer_type 0x7fe47bd62a80
        type <integer_type 0x7fe47bd62888 char public string-flag QI
            size <integer_cst 0x7fe47c238cd8 constant 8>
            unit size <integer_cst 0x7fe47c238cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fe47c24c3f0 precision 8 min <integer_cst 0x7fe47bd65180 -128> max <integer_cst 0x7fe47bd65168 127> context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7fe47bd62a80>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
        pointer_to_this <pointer_type 0x7fe47bd62d20>>
   
    def_stmt _7 = base;
    version 7
    ptr-info 0x7fe47bd910f0>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_47>
free (_17);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:2: warning: use location
  free(base);
  ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe47bd812d0
    type <pointer_type 0x7fe47c253a80
        type <integer_type 0x7fe47c24c5e8 int public SI
            size <integer_cst 0x7fe47c238e28 constant 32>
            unit size <integer_cst 0x7fe47c238e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7fe47c24c5e8 precision 32 min <integer_cst 0x7fe47c238de0 -2147483648> max <integer_cst 0x7fe47c238df8 2147483647>
            pointer_to_this <pointer_type 0x7fe47c253a80>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _11 = __errno_location ();
    version 11
    ptr-info 0x7fe47bd91108>
_11 = __errno_location ();

 ================== trace ptable================== 
trace fucntion name:__errno_location 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---__errno_location-----
this other function ------__errno_location-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_55>
*_11 = 20;
bb index := 10
# VUSE <.MEM_15>
return i_10;
In function â€˜make_labelâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
  return i;
         ^
beacuse in succ := 5 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 5

======================================================================
*_11 = 20;
In function â€˜mainâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:97:9: warning: use location
   errno = ENOTDIR;
         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_11 = __errno_location ();
bb index := 10
# VUSE <.MEM_15>
return i_10;
In function â€˜make_labelâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
  return i;
         ^
beacuse in succ := 5 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 5

======================================================================
_11 = __errno_location ();
In function â€˜mainâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:97:3: warning: use location
   errno = ENOTDIR;
   ^
this stmt is child function---__errno_location-----

 ================== trace ================== 
 <ssa_name 0x7fe47bd812d0
    type <pointer_type 0x7fe47c253a80
        type <integer_type 0x7fe47c24c5e8 int public SI
            size <integer_cst 0x7fe47c238e28 constant 32>
            unit size <integer_cst 0x7fe47c238e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7fe47c24c5e8 precision 32 min <integer_cst 0x7fe47c238de0 -2147483648> max <integer_cst 0x7fe47c238df8 2147483647>
            pointer_to_this <pointer_type 0x7fe47c253a80>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _11 = __errno_location ();
    version 11
    ptr-info 0x7fe47bd91108>
trace fucntion name:__errno_location 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe47bd812d0
    type <pointer_type 0x7fe47c253a80
        type <integer_type 0x7fe47c24c5e8 int public SI
            size <integer_cst 0x7fe47c238e28 constant 32>
            unit size <integer_cst 0x7fe47c238e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7fe47c24c5e8 precision 32 min <integer_cst 0x7fe47c238de0 -2147483648> max <integer_cst 0x7fe47c238df8 2147483647>
            pointer_to_this <pointer_type 0x7fe47c253a80>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _11 = __errno_location ();
    version 11
    ptr-info 0x7fe47bd91108>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_47>
free (_17);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:2: warning: use location
  free(base);
  ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe47bd81360
    type <pointer_type 0x7fe47c253a80
        type <integer_type 0x7fe47c24c5e8 int public SI
            size <integer_cst 0x7fe47c238e28 constant 32>
            unit size <integer_cst 0x7fe47c238e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7fe47c24c5e8 precision 32 min <integer_cst 0x7fe47c238de0 -2147483648> max <integer_cst 0x7fe47c238df8 2147483647>
            pointer_to_this <pointer_type 0x7fe47c253a80>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _13 = __errno_location ();
    version 13
    ptr-info 0x7fe47bd91120>
_13 = __errno_location ();

 ================== trace ptable================== 
trace fucntion name:__errno_location 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---__errno_location-----
this other function ------__errno_location-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_58 = VDEF <.MEM_55>
*_13 = 13;
bb index := 12
# VUSE <.MEM_15>
return i_10;
In function â€˜make_labelâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
  return i;
         ^
beacuse in succ := 5 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 5

======================================================================
*_13 = 13;
In function â€˜mainâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:101:9: warning: use location
   errno = EACCES;
         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = __errno_location ();
bb index := 12
# VUSE <.MEM_15>
return i_10;
In function â€˜make_labelâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
  return i;
         ^
beacuse in succ := 5 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 5

======================================================================
_13 = __errno_location ();
In function â€˜mainâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:101:3: warning: use location
   errno = EACCES;
   ^
this stmt is child function---__errno_location-----

 ================== trace ================== 
 <ssa_name 0x7fe47bd81360
    type <pointer_type 0x7fe47c253a80
        type <integer_type 0x7fe47c24c5e8 int public SI
            size <integer_cst 0x7fe47c238e28 constant 32>
            unit size <integer_cst 0x7fe47c238e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7fe47c24c5e8 precision 32 min <integer_cst 0x7fe47c238de0 -2147483648> max <integer_cst 0x7fe47c238df8 2147483647>
            pointer_to_this <pointer_type 0x7fe47c253a80>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _13 = __errno_location ();
    version 13
    ptr-info 0x7fe47bd91120>
trace fucntion name:__errno_location 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe47bd81360
    type <pointer_type 0x7fe47c253a80
        type <integer_type 0x7fe47c24c5e8 int public SI
            size <integer_cst 0x7fe47c238e28 constant 32>
            unit size <integer_cst 0x7fe47c238e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7fe47c24c5e8 precision 32 min <integer_cst 0x7fe47c238de0 -2147483648> max <integer_cst 0x7fe47c238df8 2147483647>
            pointer_to_this <pointer_type 0x7fe47c253a80>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _13 = __errno_location ();
    version 13
    ptr-info 0x7fe47bd91120>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_47>
free (_17);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:2: warning: use location
  free(base);
  ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe47bd813a8
    type <pointer_type 0x7fe47bd62a80
        type <integer_type 0x7fe47bd62888 char public string-flag QI
            size <integer_cst 0x7fe47c238cd8 constant 8>
            unit size <integer_cst 0x7fe47c238cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fe47c24c3f0 precision 8 min <integer_cst 0x7fe47bd65180 -128> max <integer_cst 0x7fe47bd65168 127> context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7fe47bd62a80>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
        pointer_to_this <pointer_type 0x7fe47bd62d20>>
   
    def_stmt _14 = base;
    version 14
    ptr-info 0x7fe47bd91138>
# VUSE <.MEM_55>
_14 = base;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_44 = __realpath_chk (_14, &resolved, 4096);
this stmt is child function---__realpath_chk-----

 ================== trace ================== 
 <ssa_name 0x7fe47bd813a8
    type <pointer_type 0x7fe47bd62a80
        type <integer_type 0x7fe47bd62888 char public string-flag QI
            size <integer_cst 0x7fe47c238cd8 constant 8>
            unit size <integer_cst 0x7fe47c238cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fe47c24c3f0 precision 8 min <integer_cst 0x7fe47bd65180 -128> max <integer_cst 0x7fe47bd65168 127> context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7fe47bd62a80>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
        pointer_to_this <pointer_type 0x7fe47bd62d20>>
   
    def_stmt _14 = base;
    version 14
    ptr-info 0x7fe47bd91138>
trace fucntion name:__realpath_chk 

 ================== trace ================== 
trace fucntion free:0 
if (_44 == 0B)
./benchmarks/tmux/leak_4/tmux_leak_4.c:105:5: warning: use location
  if (realpath(base, resolved) == NULL)
     ^
if (_44 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_4/tmux_leak_4.c:105:5: warning: use location
Cond in fucntion make_label basic block 13
 ================== possible direct basic block ================= 
from make_label basic block 14
 ================== possible direct basic block ================= 
from make_label basic block 21
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe47bd813a8
    type <pointer_type 0x7fe47bd62a80
        type <integer_type 0x7fe47bd62888 char public string-flag QI
            size <integer_cst 0x7fe47c238cd8 constant 8>
            unit size <integer_cst 0x7fe47c238cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fe47c24c3f0 precision 8 min <integer_cst 0x7fe47bd65180 -128> max <integer_cst 0x7fe47bd65168 127> context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
            pointer_to_this <pointer_type 0x7fe47bd62a80>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fe47c243168 ./benchmarks/tmux/leak_4/tmux_leak_4.c>
        pointer_to_this <pointer_type 0x7fe47bd62d20>>
   
    def_stmt _14 = base;
    version 14
    ptr-info 0x7fe47bd91138>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_47>
free (_17);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:2: warning: use location
  free(base);
  ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe47bd81438
    type <pointer_type 0x7fe47c253a80
        type <integer_type 0x7fe47c24c5e8 int public SI
            size <integer_cst 0x7fe47c238e28 constant 32>
            unit size <integer_cst 0x7fe47c238e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7fe47c24c5e8 precision 32 min <integer_cst 0x7fe47c238de0 -2147483648> max <integer_cst 0x7fe47c238df8 2147483647>
            pointer_to_this <pointer_type 0x7fe47c253a80>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _16 = __errno_location ();
    version 16
    ptr-info 0x7fe47bd91168>
_16 = __errno_location ();

 ================== trace ptable================== 
trace fucntion name:__errno_location 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---__errno_location-----
this other function ------__errno_location-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_47>
saved_errno_38 = *_16;
bb index := 22
# VUSE <.MEM_15>
return i_10;
In function â€˜make_labelâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
  return i;
         ^
beacuse in succ := 5 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_47>
saved_errno_38 = *_16;
bb index := 22
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_47>
saved_errno_38 = *_16;
bb index := 22
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_47>
saved_errno_38 = *_16;
bb index := 22
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_47>
saved_errno_38 = *_16;
bb index := 22
# VUSE <.MEM_64>
return 0B;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 23

======================================================================
saved_errno_38 = *_16;
In function â€˜mainâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:112:14: warning: use location
  saved_errno = errno;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_61 = VDEF <.MEM_60>
*_18 = saved_errno_38;
bb index := 22
# VUSE <.MEM_15>
return i_10;
In function â€˜make_labelâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
  return i;
         ^
beacuse in succ := 5 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_61 = VDEF <.MEM_60>
*_18 = saved_errno_38;
bb index := 22
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_61 = VDEF <.MEM_60>
*_18 = saved_errno_38;
bb index := 22
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_61 = VDEF <.MEM_60>
*_18 = saved_errno_38;
bb index := 22
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_61 = VDEF <.MEM_60>
*_18 = saved_errno_38;
bb index := 22
# VUSE <.MEM_64>
return 0B;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 23

======================================================================
*_18 = saved_errno_38;
In function â€˜mainâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:114:8: warning: use location
  errno = saved_errno;
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = __errno_location ();
bb index := 22
# VUSE <.MEM_15>
return i_10;
In function â€˜make_labelâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
  return i;
         ^
beacuse in succ := 5 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = __errno_location ();
bb index := 22
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = __errno_location ();
bb index := 22
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = __errno_location ();
bb index := 22
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = __errno_location ();
bb index := 22
# VUSE <.MEM_64>
return 0B;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 23

======================================================================
_16 = __errno_location ();
In function â€˜mainâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:112:16: warning: use location
  saved_errno = errno;
                ^
this stmt is child function---__errno_location-----

 ================== trace ================== 
 <ssa_name 0x7fe47bd81438
    type <pointer_type 0x7fe47c253a80
        type <integer_type 0x7fe47c24c5e8 int public SI
            size <integer_cst 0x7fe47c238e28 constant 32>
            unit size <integer_cst 0x7fe47c238e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7fe47c24c5e8 precision 32 min <integer_cst 0x7fe47c238de0 -2147483648> max <integer_cst 0x7fe47c238df8 2147483647>
            pointer_to_this <pointer_type 0x7fe47c253a80>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _16 = __errno_location ();
    version 16
    ptr-info 0x7fe47bd91168>
trace fucntion name:__errno_location 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe47bd81438
    type <pointer_type 0x7fe47c253a80
        type <integer_type 0x7fe47c24c5e8 int public SI
            size <integer_cst 0x7fe47c238e28 constant 32>
            unit size <integer_cst 0x7fe47c238e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7fe47c24c5e8 precision 32 min <integer_cst 0x7fe47c238de0 -2147483648> max <integer_cst 0x7fe47c238df8 2147483647>
            pointer_to_this <pointer_type 0x7fe47c253a80>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _16 = __errno_location ();
    version 16
    ptr-info 0x7fe47bd91168>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_47>
free (_17);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:2: warning: use location
  free(base);
  ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_47>
free (_17);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:2: warning: Use after free error!: free location 
# .MEM_61 = VDEF <.MEM_60>
*_18 = saved_errno_38;
./benchmarks/tmux/leak_4/tmux_leak_4.c:114:8: warning: use location
  errno = saved_errno;
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fe47bd814c8
    type <pointer_type 0x7fe47c253a80
        type <integer_type 0x7fe47c24c5e8 int public SI
            size <integer_cst 0x7fe47c238e28 constant 32>
            unit size <integer_cst 0x7fe47c238e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7fe47c24c5e8 precision 32 min <integer_cst 0x7fe47c238de0 -2147483648> max <integer_cst 0x7fe47c238df8 2147483647>
            pointer_to_this <pointer_type 0x7fe47c253a80>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _18 = __errno_location ();
    version 18
    ptr-info 0x7fe47bd91198>
_18 = __errno_location ();

 ================== trace ptable================== 
trace fucntion name:__errno_location 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---__errno_location-----
this other function ------__errno_location-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_61 = VDEF <.MEM_60>
*_18 = saved_errno_38;
bb index := 22
# VUSE <.MEM_15>
return i_10;
In function â€˜make_labelâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
  return i;
         ^
beacuse in succ := 5 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_61 = VDEF <.MEM_60>
*_18 = saved_errno_38;
bb index := 22
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_61 = VDEF <.MEM_60>
*_18 = saved_errno_38;
bb index := 22
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_61 = VDEF <.MEM_60>
*_18 = saved_errno_38;
bb index := 22
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_61 = VDEF <.MEM_60>
*_18 = saved_errno_38;
bb index := 22
# VUSE <.MEM_64>
return 0B;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 23

======================================================================
*_18 = saved_errno_38;
In function â€˜mainâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:114:8: warning: use location
  errno = saved_errno;
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_61 = VDEF <.MEM_60>
*_18 = saved_errno_38;
bb index := 22
# VUSE <.MEM_15>
return i_10;
In function â€˜make_labelâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
  return i;
         ^
beacuse in succ := 5 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_61 = VDEF <.MEM_60>
*_18 = saved_errno_38;
bb index := 22
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_61 = VDEF <.MEM_60>
*_18 = saved_errno_38;
bb index := 22
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_61 = VDEF <.MEM_60>
*_18 = saved_errno_38;
bb index := 22
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_61 = VDEF <.MEM_60>
*_18 = saved_errno_38;
bb index := 22
# VUSE <.MEM_64>
return 0B;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 23

======================================================================
*_18 = saved_errno_38;
In function â€˜mainâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:114:8: warning: use location
  errno = saved_errno;
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = __errno_location ();
bb index := 22
# VUSE <.MEM_15>
return i_10;
In function â€˜make_labelâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
  return i;
         ^
beacuse in succ := 5 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = __errno_location ();
bb index := 22
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = __errno_location ();
bb index := 22
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = __errno_location ();
bb index := 22
# VUSE <.MEM_15>
return i_10;
./benchmarks/tmux/leak_4/tmux_leak_4.c:71:9: warning: use location
beacuse in succ := 5 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = __errno_location ();
bb index := 22
# VUSE <.MEM_64>
return 0B;
lto1: warning: use location
beacuse in succ := 23 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 23

======================================================================
_18 = __errno_location ();
In function â€˜mainâ€™:
./benchmarks/tmux/leak_4/tmux_leak_4.c:114:2: warning: use location
  errno = saved_errno;
  ^
this stmt is child function---__errno_location-----

 ================== trace ================== 
 <ssa_name 0x7fe47bd814c8
    type <pointer_type 0x7fe47c253a80
        type <integer_type 0x7fe47c24c5e8 int public SI
            size <integer_cst 0x7fe47c238e28 constant 32>
            unit size <integer_cst 0x7fe47c238e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7fe47c24c5e8 precision 32 min <integer_cst 0x7fe47c238de0 -2147483648> max <integer_cst 0x7fe47c238df8 2147483647>
            pointer_to_this <pointer_type 0x7fe47c253a80>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _18 = __errno_location ();
    version 18
    ptr-info 0x7fe47bd91198>
trace fucntion name:__errno_location 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fe47bd814c8
    type <pointer_type 0x7fe47c253a80
        type <integer_type 0x7fe47c24c5e8 int public SI
            size <integer_cst 0x7fe47c238e28 constant 32>
            unit size <integer_cst 0x7fe47c238e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7fe47c24c5e8 precision 32 min <integer_cst 0x7fe47c238de0 -2147483648> max <integer_cst 0x7fe47c238df8 2147483647>
            pointer_to_this <pointer_type 0x7fe47c253a80>>
        public unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _18 = __errno_location ();
    version 18
    ptr-info 0x7fe47bd91198>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_47>
free (_17);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:2: warning: use location
  free(base);
  ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_47>
free (_17);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:2: warning: Use after free error!: free location 
# .MEM_61 = VDEF <.MEM_60>
*_18 = saved_errno_38;
./benchmarks/tmux/leak_4/tmux_leak_4.c:114:8: warning: use location
  errno = saved_errno;
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_47>
free (_17);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:2: warning: Use after free error!: free location 
  free(base);
  ^
# .MEM_61 = VDEF <.MEM_60>
*_18 = saved_errno_38;
./benchmarks/tmux/leak_4/tmux_leak_4.c:114:8: warning: use location
  errno = saved_errno;
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_60 = VDEF <.MEM_47>
free (_17);
./benchmarks/tmux/leak_4/tmux_leak_4.c:113:2: warning: Use after free error!: free location 
  free(base);
  ^
_18 = __errno_location ();
./benchmarks/tmux/leak_4/tmux_leak_4.c:114:2: warning: use location
  errno = saved_errno;
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:make_label========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m

dot graph START

======================================================================
 <addr_expr 0x7fe47bd871e0
    type <pointer_type 0x7fe47bd6bdc8
        type <array_type 0x7fe47bd6bd20 type <integer_type 0x7fe47bd62888 char>
            BLK
            size <integer_cst 0x7fe47bd652d0 constant 48>
            unit size <integer_cst 0x7fe47bd652b8 constant 6>
            align 8 symtab 0 alias set -1 structural equality domain <integer_type 0x7fe47bd6bc78>
            pointer_to_this <pointer_type 0x7fe47bd6bdc8>>
        unsigned DI
        size <integer_cst 0x7fe47c238be8 constant 64>
        unit size <integer_cst 0x7fe47c238c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    readonly constant
    arg 0 <string_cst 0x7fe47bd871c0 type <array_type 0x7fe47bd6bd20>
        readonly constant static "label\000">
    ./benchmarks/tmux/leak_4/tmux_leak_4.c:120:13 start: ./benchmarks/tmux/leak_4/tmux_leak_4.c:120:13 finish: ./benchmarks/tmux/leak_4/tmux_leak_4.c:120:13>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:main========= [0m
fucntion collect path finsh

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:vasprintf=========
=======is loop:0=========

 bb index 2 
<bb 2> [100.00%]:
_1 = strlen (fmt_8(D));
_2 = strlen (ap_9(D));
_3 = _1 + _2;
_4 = malloc (_3);
*ret_11(D) = _4;
_5 = *ret_11(D);
if (_5 == 0B)
  goto <bb 4>; [0.87%]
else
  goto <bb 3>; [99.13%]

=======is loop:0=========

 bb index 3 
<bb 3> [99.13%]:

=======is loop:0=========

 bb index 4 
<bb 4> [100.00%]:
# _6 = PHI <-1(2), 0(3)>
return _6;

=======Mapping node_fun:xvasprintf=========
=======is loop:0=========

 bb index 2 
<bb 2> [100.00%]:
i_10 = vasprintf (ret_6(D), fmt_7(D), ap_8(D));
if (i_10 < 0)
  goto <bb 4>; [0.04%]
else
  goto <bb 3>; [99.96%]

=======is loop:0=========

 bb index 3 
<bb 3> [99.96%]:
_1 = *ret_6(D);
if (_1 == 0B)
  goto <bb 4>; [0.04%]
else
  goto <bb 5>; [99.96%]

=======is loop:0=========

 bb index 4 
<bb 4> [0.08%]:
_2 = __errno_location ();
_3 = *_2;
_4 = strerror (_3);
_13 = __printf_chk (1, "xasprintf: %s", _4);
exit (1);

=======is loop:0=========

 bb index 5 
<bb 5> [99.92%]:
return i_10;

=======Mapping node_fun:make_label=========
=======is loop:0=========

 bb index 2 
<bb 2> [100.00%]:
_1 = getuid ();
uid_26 = (uid_t) _1;
s_28 = getenv ("TMUX_TMPDIR");
if (s_28 != 0B)
  goto <bb 3>; [82.57%]
else
  goto <bb 5>; [17.43%]

=======is loop:0=========

 bb index 3 
<bb 3> [82.57%]:
_2 = *s_28;
if (_2 != 0)
  goto <bb 4>; [33.00%]
else
  goto <bb 5>; [67.00%]

=======is loop:0=========

 bb index 4 
<bb 4> [27.25%]:
i_65 = xvasprintf (&base, "%s/tmux-", s_28);
_96 = i_65;
goto <bb 6>; [100.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [72.75%]:
i_66 = xvasprintf (&base, "%s/tmux-", "/tmp");
_98 = i_66;

=======is loop:0=========

 bb index 6 
<bb 6> [100.00%]:
_3 = base;
_4 = mkdir (_3, 0);
if (_4 != 0)
  goto <bb 7>; [67.00%]
else
  goto <bb 8>; [33.00%]

=======is loop:0=========

 bb index 7 
<bb 7> [67.00%]:
_5 = __errno_location ();
_6 = *_5;
if (_6 != 17)
  goto <bb 22> (fail); [66.00%]
else
  goto <bb 8>; [34.00%]

=======is loop:0=========

 bb index 8 
<bb 8> [55.78%]:
_7 = base;
_8 = lstat (_7, &sb);
if (_8 != 0)
  goto <bb 22> (fail); [50.00%]
else
  goto <bb 9>; [50.00%]

=======is loop:0=========

 bb index 9 
<bb 9> [27.89%]:
_9 = sb.st_mode;
_10 = _9 & 61440;
if (_10 != 16384)
  goto <bb 10>; [66.00%]
else
  goto <bb 11>; [34.00%]

=======is loop:0=========

 bb index 10 
<bb 10> [18.41%]:
_11 = __errno_location ();
*_11 = 20;
goto <bb 22> (fail); [100.00%]

=======is loop:0=========

 bb index 11 
<bb 11> [9.48%]:
_12 = sb.st_uid;
if (_12 != uid_26)
  goto <bb 12>; [79.76%]
else
  goto <bb 13>; [20.24%]

=======is loop:0=========

 bb index 12 
<bb 12> [7.56%]:
_13 = __errno_location ();
*_13 = 13;
goto <bb 22> (fail); [100.00%]

=======is loop:0=========

 bb index 13 
<bb 13> [1.92%]:
_14 = base;
_44 = __realpath_chk (_14, &resolved, 4096);
if (_44 == 0B)
  goto <bb 14>; [19.86%]
else
  goto <bb 21>; [80.14%]

=======is loop:0=========

 bb index 14 
<bb 14> [0.38%]:
_15 = base;
n_67 = 4095;
if (n_67 != 0)
  goto <bb 15>; [50.00%]
else
  goto <bb 17>; [50.00%]

=======is loop:1=========

 bb index 15 
<bb 15> [1.32%]:
# d_71 = PHI <&resolved(14), d_73(16)>
# s_68 = PHI <_15(14), s_70(16)>
# n_76 = PHI <n_67(14), n_77(16)>
_69 = s_68;
s_70 = s_68 + 1;
_72 = d_71;
d_73 = d_71 + 1;
_74 = *_69;
*_72 = _74;
_75 = *_72;
if (_75 == 0)
  goto <bb 17>; [7.50%]
else
  goto <bb 16>; [92.50%]

=======is loop:1=========

 bb index 16 
<bb 16> [1.22%]:
n_77 = n_76 + 18446744073709551615;
if (n_77 != 0)
  goto <bb 15>; [92.50%]
else
  goto <bb 17>; [7.50%]

=======is loop:0=========

 bb index 17 
<bb 17> [0.38%]:
# d_79 = PHI <d_73(16), &resolved(14), d_73(15)>
# s_90 = PHI <s_70(16), _15(14), s_70(15)>
# n_78 = PHI <n_77(16), n_67(14), n_76(15)>
if (n_78 == 0)
  goto <bb 18>; [54.00%]
else
  goto <bb 20>; [46.00%]

=======is loop:0=========

 bb index 18 
<bb 18> [0.21%]:
*d_79 = 0;

=======is loop:1=========

 bb index 19 
<bb 19> [1.37%]:
# s_80 = PHI <s_90(18), s_82(19)>
_81 = s_80;
s_82 = s_80 + 1;
_83 = *_81;
if (_83 != 0)
  goto <bb 19>; [85.00%]
else
  goto <bb 20>; [15.00%]

=======is loop:0=========

 bb index 20 
<bb 20> [0.38%]:
# s_84 = PHI <s_90(17), s_82(19)>
_85 = (long int) s_84;
_86 = (long int) _15;
_87 = _85 - _86;
_88 = _87 + -1;
_89 = (long unsigned int) _88;
_101 = _89;

=======is loop:0=========

 bb index 21 
<bb 21> [1.92%]:
_35 = path_34(D);
goto <bb 23>; [100.00%]

=======is loop:0=========

 bb index 22 
fail [98.08%]:
_16 = __errno_location ();
saved_errno_38 = *_16;
_17 = base;
free (_17);
_18 = __errno_location ();
*_18 = saved_errno_38;

=======is loop:0=========

 bb index 23 
<bb 23> [100.00%]:
base ={v} {CLOBBER};
resolved ={v} {CLOBBER};
sb ={v} {CLOBBER};
return 0B;

=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [100.00%]:
make_label ("label");
return 0;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    find Entry point : 16 [0m
[40;34m    used_stmt array stack totalsize of : 920 [0m
[40;34m    collect time: : 0.000096 s [0m
[40;34m    algorithm time: 0.054594 s [0m
[40;34m    gimple stmt count : : 88 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
