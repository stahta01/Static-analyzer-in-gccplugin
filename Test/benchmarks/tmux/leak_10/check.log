In file included from ./benchmarks/tmux/leak_10/tmux_leak_10.c:10:0:
./benchmarks/tmux/leak_10/tmux_leak_10.c: In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/../stdio.h:138:20: warning: implicit declaration of function ‘strdup’ [-Wimplicit-function-declaration]
 #define xstrdup(a) strdup(a)
                    ^
./benchmarks/tmux/leak_10/tmux_leak_10.c:138:11: note: in expansion of macro ‘xstrdup’
   return (xstrdup(""));
           ^~~~~~~
./benchmarks/tmux/leak_10/../stdio.h:138:20: warning: incompatible implicit declaration of built-in function ‘strdup’
 #define xstrdup(a) strdup(a)
                    ^
./benchmarks/tmux/leak_10/tmux_leak_10.c:138:11: note: in expansion of macro ‘xstrdup’
   return (xstrdup(""));
           ^~~~~~~
./benchmarks/tmux/leak_10/../stdio.h:138:20: warning: incompatible implicit declaration of built-in function ‘strdup’
 #define xstrdup(a) strdup(a)
                    ^
./benchmarks/tmux/leak_10/tmux_leak_10.c:139:10: note: in expansion of macro ‘xstrdup’
  return (xstrdup(envent->value));
          ^~~~~~~
./benchmarks/tmux/leak_10/tmux_leak_10.c: In function ‘cmd_string_expand_tilde’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:214:18: warning: implicit declaration of function ‘getpwuid’; did you mean ‘getdelim’? [-Wimplicit-function-declaration]
   else if ((pw = getpwuid(getuid())) != NULL)
                  ^~~~~~~~
                  getdelim
./benchmarks/tmux/leak_10/tmux_leak_10.c:214:27: warning: implicit declaration of function ‘getuid’; did you mean ‘getenv’? [-Wimplicit-function-declaration]
   else if ((pw = getpwuid(getuid())) != NULL)
                           ^~~~~~
                           getenv
./benchmarks/tmux/leak_10/tmux_leak_10.c:214:16: warning: assignment makes pointer from integer without a cast [-Wint-conversion]
   else if ((pw = getpwuid(getuid())) != NULL)
                ^
./benchmarks/tmux/leak_10/tmux_leak_10.c:220:13: warning: implicit declaration of function ‘getpwnam’; did you mean ‘tempnam’? [-Wimplicit-function-declaration]
   if ((pw = getpwnam(username)) != NULL)
             ^~~~~~~~
             tempnam
./benchmarks/tmux/leak_10/tmux_leak_10.c:220:11: warning: assignment makes pointer from integer without a cast [-Wint-conversion]
   if ((pw = getpwnam(username)) != NULL)
           ^
./benchmarks/tmux/leak_10/tmux_leak_10.c:227:10: warning: incompatible implicit declaration of built-in function ‘strdup’
  return (strdup(home));
          ^~~~~~
./benchmarks/tmux/leak_10/tmux_leak_10.c: In function ‘cmd_string_parse’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:292:14: warning: implicit declaration of function ‘strchr’ [-Wimplicit-function-declaration]
     equals = strchr(argv[0], '=');
              ^~~~~~
./benchmarks/tmux/leak_10/tmux_leak_10.c:292:14: warning: incompatible implicit declaration of built-in function ‘strchr’
./benchmarks/tmux/leak_10/tmux_leak_10.c:292:14: note: include ‘<string.h>’ or provide a declaration of ‘strchr’
./benchmarks/tmux/leak_10/tmux_leak_10.c:293:28: warning: implicit declaration of function ‘strcspn’ [-Wimplicit-function-declaration]
     whitespace = argv[0] + strcspn(argv[0], " \t");
                            ^~~~~~~
./benchmarks/tmux/leak_10/tmux_leak_10.c:293:28: warning: incompatible implicit declaration of built-in function ‘strcspn’
./benchmarks/tmux/leak_10/tmux_leak_10.c:293:28: note: include ‘<string.h>’ or provide a declaration of ‘strcspn’
./benchmarks/tmux/leak_10/tmux_leak_10.c:297:5: warning: implicit declaration of function ‘memmove’ [-Wimplicit-function-declaration]
     memmove(argv, argv + 1, argc * (sizeof *argv));
     ^~~~~~~
./benchmarks/tmux/leak_10/tmux_leak_10.c:297:5: warning: incompatible implicit declaration of built-in function ‘memmove’
./benchmarks/tmux/leak_10/tmux_leak_10.c:297:5: note: include ‘<string.h>’ or provide a declaration of ‘memmove’
./benchmarks/tmux/leak_10/tmux_leak_10.c: In function ‘load_cfg’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:371:13: warning: implicit declaration of function ‘strlen’ [-Wimplicit-function-declaration]
    oldlen = strlen(line);
             ^~~~~~
./benchmarks/tmux/leak_10/tmux_leak_10.c:371:13: warning: incompatible implicit declaration of built-in function ‘strlen’
./benchmarks/tmux/leak_10/tmux_leak_10.c:371:13: note: include ‘<string.h>’ or provide a declaration of ‘strlen’
./benchmarks/tmux/leak_10/tmux_leak_10.c:379:3: warning: implicit declaration of function ‘memcpy’ [-Wimplicit-function-declaration]
   memcpy(line + oldlen, buf, len);
   ^~~~~~
./benchmarks/tmux/leak_10/tmux_leak_10.c:379:3: warning: incompatible implicit declaration of built-in function ‘memcpy’
./benchmarks/tmux/leak_10/tmux_leak_10.c:379:3: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
./benchmarks/tmux/leak_10/tmux_leak_10.c:384:9: warning: incompatible implicit declaration of built-in function ‘strlen’
   len = strlen(line);
         ^~~~~~
./benchmarks/tmux/leak_10/tmux_leak_10.c:384:9: note: include ‘<string.h>’ or provide a declaration of ‘strlen’
./benchmarks/tmux/leak_10/tmux_leak_10.c:397:10: warning: implicit declaration of function ‘isspace’ [-Wimplicit-function-declaration]
   while (isspace((u_char)*buf))
          ^~~~~~~
=======ipa_pta=========
===============The first stage : Point of interest stmt collect=================
--------GIMPLE Cond -------
succs:= 2
succs:= 2
--------GIMPLE Cond -------
succs:= 4
succs:= 4
--------GIMPLE Cond -------
succs:= 6
succs:= 6
--------GIMPLE Cond -------
succs:= 2
succs:= 2
--------GIMPLE_SWITCH -------
--------GIMPLE Cond -------
succs:= 3
--------GIMPLE Cond -------
succs:= 3
succs:= 4
--------GIMPLE Cond -------
succs:= 5
--------GIMPLE Cond -------
succs:= 6
succs:= 5
succs:= 6
--------GIMPLE Cond -------
succs:= 9
--------GIMPLE Cond -------
succs:= 10
--------GIMPLE Cond -------
succs:= 11
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 10
succs:= 11
succs:= 12
succs:= 13
succs:= 9
succs:= 12
--------GIMPLE Cond -------
succs:= 15
--------GIMPLE Cond -------
succs:= 16
succs:= 16
--------GIMPLE Cond -------
succs:= 18
succs:= 18
succs:= 4
succs:= 13
succs:= 15
--------GIMPLE_SWITCH -------
--------GIMPLE Cond -------
succs:= 4
--------GIMPLE_SWITCH -------
--------GIMPLE Cond -------
succs:= 10
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 11
succs:= 12
succs:= 4
succs:= 10
--------GIMPLE Cond -------
succs:= 13
--------GIMPLE Cond -------
succs:= 19
succs:= 11
succs:= 13
succs:= 19
--------GIMPLE Cond -------
succs:= 2
--------GIMPLE Cond -------
succs:= 4
succs:= 4
--------GIMPLE Cond -------
succs:= 6
--------GIMPLE Cond -------
succs:= 7
--------GIMPLE Cond -------
succs:= 8
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 9
succs:= 6
succs:= 7
succs:= 8
succs:= 9
succs:= 10
--------GIMPLE Cond -------
succs:= 13
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 14
succs:= 14
succs:= 15
--------GIMPLE_SWITCH -------
--------GIMPLE Cond -------
--------GIMPLE Cond -------
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 23
succs:= 23
--------GIMPLE Cond -------
succs:= 24
--------GIMPLE Cond -------
succs:= 24
succs:= 26
--------GIMPLE Cond -------
succs:= 27
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 27
succs:= 29
succs:= 30
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 33
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 34
succs:= 35
--------GIMPLE Cond -------
succs:= 36
succs:= 35
succs:= 36
--------GIMPLE Cond -------
succs:= 38
succs:= 34
--------GIMPLE Cond -------
succs:= 40
--------GIMPLE Cond -------
succs:= 41
succs:= 41
--------GIMPLE Cond -------
succs:= 44
succs:= 38
succs:= 40
succs:= 44
--------GIMPLE Cond -------
succs:= 33
--------GIMPLE Cond -------
succs:= 47
succs:= 19
succs:= 20
succs:= 21
succs:= 30
succs:= 31
succs:= 46
succs:= 47
--------GIMPLE Cond -------
succs:= 49
--------GIMPLE Cond -------
succs:= 51
succs:= 49
--------GIMPLE Cond -------
succs:= 53
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 54
succs:= 54
succs:= 55
--------GIMPLE Cond -------
succs:= 56
succs:= 53
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 57
succs:= 57
succs:= 58
--------GIMPLE Cond -------
succs:= 61
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 62
succs:= 62
succs:= 63
succs:= 63
--------GIMPLE Cond -------
succs:= 65
succs:= 61
succs:= 65
--------GIMPLE Cond -------
succs:= 68
succs:= 2
===============The first stage : Point of interest stmt collect=================
start PointerConstraint
pointer ftable is 1 
pointer ptable is 1 
===============The second stage : Mapping stmt=================
# .MEM_25 = VDEF <.MEM_19(D)>
_16 = __printf_chk (1, "zero size%s", "");
# .MEM_23 = VDEF <.MEM_19(D)>
_17 = __printf_chk (1, "nmemb * size > SIZE_MAX%s", "");
# .MEM_21 = VDEF <.MEM_20>
_18 = __printf_chk (1, "xrealloc failed%s", "");
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
# .MEM_84 = VDEF <.MEM_83>
ch_55 = cmd_string_getc (s_50(D), p_51(D));
# .MEM_85 = VDEF <.MEM_77>
buf_59 = xrealloc (0B, 1, 1);
# .MEM_87 = VDEF <.MEM_78>
ch_62 = cmd_string_getc (s_50(D), p_51(D));
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
# .MEM_95 = VDEF <.MEM_93>
_76 = strdup ("");
# .MEM_94 = VDEF <.MEM_93>
_74 = strdup (_37);
# .MEM_45 = VDEF <.MEM_42>
ch_30 = cmd_string_getc (s_19(D), p_20(D));
# .MEM_46 = VDEF <.MEM_42>
t_32 = cmd_string_variable (s_19(D), p_20(D));
# .MEM_47 = VDEF <.MEM_36>
buf_34 = xrealloc (buf_9, 1, _1);
# .MEM_42 = VDEF <.MEM_40>
ch_22 = cmd_string_getc (s_19(D), p_20(D));
# .MEM_43 = VDEF <.MEM_42>
buf_25 = xrealloc (buf_9, 1, _6);
# .MEM_3 = VDEF <.MEM_2(D)>
_1 = malloc (1);
# .MEM_172 = VDEF <.MEM_7>
f_11 = fopen ("path", "rb");
# .MEM_179 = VDEF <.MEM_170>
_20 = __printf_chk (1, "%s: %s", "path", _16);
# .MEM_180 = VDEF <.MEM_179>
line_23 = malloc (_22);
# .MEM_181 = VDEF <.MEM_180>
memcpy (_24, _16, len_21);
# VUSE <.MEM_182>
len_29 = strlen (line_23);
# VUSE <.MEM_156>
_45 = isspace (_44);
# .MEM_187 = VDEF <.MEM_158>
ch_73 = cmd_string_getc (buf_40, &p);
# .MEM_197 = VDEF <.MEM_187>
t_74 = cmd_string_string (buf_40, &p, 39, 0);
# .MEM_200 = VDEF <.MEM_187>
t_75 = cmd_string_string (buf_40, &p, 34, 1);
# .MEM_198 = VDEF <.MEM_187>
t_76 = cmd_string_variable (buf_40, &p);
# .MEM_199 = VDEF <.MEM_159>
ch_77 = cmd_string_getc (buf_40, &p);
# .MEM_201 = VDEF <.MEM_160>
buf_81 = xrealloc (buf_78, 1, _80);
# .MEM_203 = VDEF <.MEM_202>
argv_87 = xrealloc (argv_86, _85, 8);
# VUSE <.MEM_162>
equals_96 = strchr (_95, 61);
# VUSE <.MEM_162>
_99 = strcspn (_98, " \t");
# .MEM_205 = VDEF <.MEM_162>
memmove (argv_94, _108, _107);
# .MEM_188 = VDEF <.MEM_187>
_135 = cmd_string_getc (buf_40, &p);
# .MEM_193 = VDEF <.MEM_188>
_140 = getuid ();
# .MEM_194 = VDEF <.MEM_193>
_141 = getpwuid (_140);
# .MEM_190 = VDEF <.MEM_189>
username_145 = cmd_string_string (buf_40, &p, 47, 0);
# .MEM_191 = VDEF <.MEM_190>
_146 = getpwnam (username_145);
# .MEM_195 = VDEF <.MEM_163>
_151 = strdup (home_150);
# .MEM_206 = VDEF <.MEM_187>
buf_112 = xrealloc (buf_78, 1, _111);
# VUSE <.MEM_169>
_56 = __builtin_object_size (buf_55, 1);
_57 = __builtin_constant_p (_54);
# VUSE <.MEM_169>
_58 = __builtin_object_size (buf_55, 1);
# .MEM_175 = VDEF <.MEM_169>
_59 = __fgets_chk (buf_55, _58, _54, f_11);
# VUSE <.MEM_169>
_61 = __builtin_object_size (buf_55, 1);
# VUSE <.MEM_169>
_62 = __builtin_object_size (buf_55, 1);
# .MEM_174 = VDEF <.MEM_169>
_63 = __fgets_chk_warn (buf_55, _62, _54, f_11);
# .MEM_176 = VDEF <.MEM_169>
_64 = __fgets_alias (buf_55, _54, f_11);
# .MEM_177 = VDEF <.MEM_170>
fclose (f_11);
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
===============The second stage : record fucntion =================

=============== The third stage : Start detection  =================
[40;44m =======node_fun:xrealloc========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path xrealloc  function_call count: 3 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;33m =======POP node_fun stack:realloc========= [0m
[40;42m =======pre_check_funciton:xrealloc========= [0m
[40;42m =======start_check_funciton:xrealloc========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fd7a466cb88
    type <pointer_type 0x7fd7a467f0a8
        type <void_type 0x7fd7a4678f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fd7a467f0a8>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fd7a4684bd0>>
    var <var_decl 0x7fd7a53f9cf0 newptr>
    def_stmt newptr_11 = realloc (oldptr_9(D), newsize_7);
    version 11
    ptr-info 0x7fd7a41cbf60>
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);

 ================== trace ptable================== 
trace fucntion name:realloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---realloc-----
this Reserved word function ------realloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
In function ‘xrealloc’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
bb index := 6
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 18

======================================================================
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
this stmt is child function---realloc-----

 ================== find ================== 
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
[40;32m    FIND realloc STMT count:1 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = newptr_11;
bb index := 8
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 8

======================================================================
_12 = newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newptr_11 == 0B)
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newptr_11 == 0B)
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newptr_11 == 0B)
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newptr_11 == 0B)
bb index := 6
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 18

======================================================================
if (newptr_11 == 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
if (newptr_11 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
Cond in fucntion xrealloc basic block 6
 ================== possible direct basic block ================= 
from xrealloc basic block 7
 ================== possible direct basic block ================= 
from xrealloc basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 70

======================================================================
if (newsize_7 == 0)
./benchmarks/tmux/leak_10/tmux_leak_10.c:53:5: warning: use location
  if (newsize == 0)
     ^
if (newsize_7 == 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:53:5: warning: use location
Cond in fucntion xrealloc basic block 2
 ================== possible direct basic block ================= 
from xrealloc basic block 3
 ================== possible direct basic block ================= 
from xrealloc basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7a466cb88
    type <pointer_type 0x7fd7a467f0a8
        type <void_type 0x7fd7a4678f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fd7a467f0a8>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fd7a4684bd0>>
    var <var_decl 0x7fd7a53f9cf0 newptr>
    def_stmt newptr_11 = realloc (oldptr_9(D), newsize_7);
    version 11
    ptr-info 0x7fd7a41cbf60>
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: Use after free error!: free location 
_12 = newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: Use after free error!: free location 
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
_12 = newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: Use after free error!: free location 
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
if (newptr_11 == 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: Use after free error!: free location 
if (newptr_11 == 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;32m   Maybe you don't have memory leak.... need more checks  [0m

======================================================================


dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fd7a4664f90 type <integer_type 0x7fd7a46785e8 int> constant 1>

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fd7a4664f90 type <integer_type 0x7fd7a46785e8 int> constant 1>
[40;33m =======POP node_fun stack:xrealloc========= [0m
[40;44m =======node_fun:cmd_string_getc========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path cmd_string_getc  function_call count: 0 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:cmd_string_getc========= [0m
[40;42m =======start_check_funciton:cmd_string_getc========= [0m
[40;33m =======POP node_fun stack:cmd_string_getc========= [0m
[40;44m =======node_fun:cmd_string_variable========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path cmd_string_variable  function_call count: 4 level :0========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;33m =======POP node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path xrealloc  function_call count: 3 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;33m =======POP node_fun stack:realloc========= [0m
[40;42m =======pre_check_funciton:xrealloc========= [0m
[40;42m =======start_check_funciton:xrealloc========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fd7a466cb88
    type <pointer_type 0x7fd7a467f0a8
        type <void_type 0x7fd7a4678f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fd7a467f0a8>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fd7a4684bd0>>
    var <var_decl 0x7fd7a53f9cf0 newptr>
    def_stmt newptr_11 = realloc (oldptr_9(D), newsize_7);
    version 11
    ptr-info 0x7fd7a41cbf60>
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);

 ================== trace ptable================== 
trace fucntion name:realloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---realloc-----
this Reserved word function ------realloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
bb index := 6
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 18

======================================================================
newptr_11 = realloc (oldptr_9(D), newsize_7);
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
this stmt is child function---realloc-----

 ================== find ================== 
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
[40;32m    FIND realloc STMT count:1 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = newptr_11;
bb index := 8
# VUSE <.MEM_20>
return newptr_11;
In function ‘xrealloc’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 8

======================================================================
_12 = newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newptr_11 == 0B)
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
In function ‘xrealloc’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newptr_11 == 0B)
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newptr_11 == 0B)
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newptr_11 == 0B)
bb index := 6
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 18

======================================================================
if (newptr_11 == 0B)
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
if (newptr_11 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
Cond in fucntion xrealloc basic block 6
 ================== possible direct basic block ================= 
from xrealloc basic block 7
 ================== possible direct basic block ================= 
from xrealloc basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
In function ‘xrealloc’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 70

======================================================================
if (newsize_7 == 0)
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:53:5: warning: use location
  if (newsize == 0)
     ^
if (newsize_7 == 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:53:5: warning: use location
Cond in fucntion xrealloc basic block 2
 ================== possible direct basic block ================= 
from xrealloc basic block 3
 ================== possible direct basic block ================= 
from xrealloc basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7a466cb88
    type <pointer_type 0x7fd7a467f0a8
        type <void_type 0x7fd7a4678f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fd7a467f0a8>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fd7a4684bd0>>
    var <var_decl 0x7fd7a53f9cf0 newptr>
    def_stmt newptr_11 = realloc (oldptr_9(D), newsize_7);
    version 11
    ptr-info 0x7fd7a41cbf60>
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: Use after free error!: free location 
_12 = newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: Use after free error!: free location 
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
_12 = newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: Use after free error!: free location 
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
if (newptr_11 == 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: Use after free error!: free location 
if (newptr_11 == 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;32m   Maybe you don't have memory leak.... need more checks  [0m

======================================================================


dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fd7a4664f90 type <integer_type 0x7fd7a46785e8 int> constant 1>

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fd7a4664f90 type <integer_type 0x7fd7a46785e8 int> constant 1>
[40;33m =======POP node_fun stack:xrealloc========= [0m
[40;42m =======pre add _ fucntion:cmd_string_getc========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path cmd_string_getc  function_call count: 0 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:cmd_string_getc========= [0m
[40;42m =======start_check_funciton:cmd_string_getc========= [0m
[40;33m =======POP node_fun stack:cmd_string_getc========= [0m
[40;42m =======pre_check_funciton:cmd_string_variable========= [0m
[40;42m =======start_check_funciton:cmd_string_variable========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fd7a41d6318
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
   
    def_stmt _76 = strdup ("");
    version 76
    ptr-info 0x7fd7a4216150>
# .MEM_95 = VDEF <.MEM_93>
_76 = strdup ("");

 ================== trace ptable================== 
trace fucntion name:strdup 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---strdup-----
this Reserved word function ------strdup-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_95 = VDEF <.MEM_93>
_76 = strdup ("");
bb index := 19
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_95 = VDEF <.MEM_93>
_76 = strdup ("");
bb index := 19
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_95 = VDEF <.MEM_93>
_76 = strdup ("");
bb index := 19
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 70

======================================================================
_76 = strdup ("");
./benchmarks/tmux/leak_10/tmux_leak_10.c:138:11: warning: use location
   return (xstrdup(""));
           ^
this stmt is child function---strdup-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41d6318
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
   
    def_stmt _76 = strdup ("");
    version 76
    ptr-info 0x7fd7a4216150>
trace fucntion name:strdup 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
lto1: warning: use location
this stmt have mutiple branch --------

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7a41d6318
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
   
    def_stmt _76 = strdup ("");
    version 76
    ptr-info 0x7fd7a4216150>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd7a41d62d0
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
   
    def_stmt _74 = strdup (_37);
    version 74
    ptr-info 0x7fd7a4216138>
# .MEM_94 = VDEF <.MEM_93>
_74 = strdup (_37);

 ================== trace ptable================== 
trace fucntion name:strdup 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---strdup-----
this Reserved word function ------strdup-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_94 = VDEF <.MEM_93>
_74 = strdup (_37);
bb index := 20
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_94 = VDEF <.MEM_93>
_74 = strdup (_37);
bb index := 20
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_94 = VDEF <.MEM_93>
_74 = strdup (_37);
bb index := 20
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 70

======================================================================
_74 = strdup (_37);
./benchmarks/tmux/leak_10/tmux_leak_10.c:139:10: warning: use location
  return (xstrdup(envent->value));
          ^
this stmt is child function---strdup-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41d62d0
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
   
    def_stmt _74 = strdup (_37);
    version 74
    ptr-info 0x7fd7a4216138>
trace fucntion name:strdup 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
lto1: warning: use location
this stmt have mutiple branch --------

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7a41d62d0
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
   
    def_stmt _74 = strdup (_37);
    version 74
    ptr-info 0x7fd7a4216138>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd7a41d4f78
    type <pointer_type 0x7fd7a418edc8
        type <integer_type 0x7fd7a418ed20 char readonly string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418edc8>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fd7a41bef00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fd7a4216078>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ch_62 = cmd_string_getc (s_50(D), p_51(D));
./benchmarks/tmux/leak_10/tmux_leak_10.c:116:7: warning: use location
    ch = cmd_string_getc(s, p);
       ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41d4f78
    type <pointer_type 0x7fd7a418edc8
        type <integer_type 0x7fd7a418ed20 char readonly string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418edc8>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fd7a41bef00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fd7a4216078>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_32 = ch_62 != -1;
bb index := 16
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 8

======================================================================
_32 = ch_62 != -1;
./benchmarks/tmux/leak_10/tmux_leak_10.c:130:9: warning: use location
  if (ch != EOF && fch != '{')
         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_34 = _32 & _33;
bb index := 16
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 8

======================================================================
_34 = _32 & _33;
./benchmarks/tmux/leak_10/tmux_leak_10.c:130:16: warning: use location
  if (ch != EOF && fch != '{')
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_34 != 0)
bb index := 16
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 8

======================================================================
if (_34 != 0)
./benchmarks/tmux/leak_10/tmux_leak_10.c:130:5: warning: use location
  if (ch != EOF && fch != '{')
     ^
if (_34 != 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:130:5: warning: use location
Cond in fucntion cmd_string_variable basic block 16
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 17
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 18
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_30 = ch_62 != 125;
bb index := 15
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_30 = ch_62 != 125;
bb index := 15
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 8

======================================================================
_30 = ch_62 != 125;
./benchmarks/tmux/leak_10/tmux_leak_10.c:128:23: warning: use location
  if (fch == '{' && ch != '}')
                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_31 = _29 & _30;
bb index := 15
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_31 = _29 & _30;
bb index := 15
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 8

======================================================================
_31 = _29 & _30;
./benchmarks/tmux/leak_10/tmux_leak_10.c:128:17: warning: use location
  if (fch == '{' && ch != '}')
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_28 = (char) ch_62;
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_28 = (char) ch_62;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_89 = VDEF <.MEM_88>
*_27 = _28;
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_27 = _28;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = (unsigned int) ch_62;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location
    if (ch == EOF || !cmd_string_other(ch))
                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_24 = _23 + 4294967248;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_24 > 9)
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:21: warning: use location
    if (ch == EOF || !cmd_string_other(ch))
                     ^
if (_24 > 9)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:21: warning: use location
Cond in fucntion cmd_string_variable basic block 12
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 15
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = (unsigned int) ch_62;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location
    if (ch == EOF || !cmd_string_other(ch))
                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = _21 + 4294967231;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_22 > 25)
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location
if (_22 > 25)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location
Cond in fucntion cmd_string_variable basic block 11
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 12
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = (unsigned int) ch_62;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = ch_62 != 95;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = _16 & _19;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (ch_62 == -1)
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:7: warning: use location
    if (ch == EOF || !cmd_string_other(ch))
       ^
if (ch_62 == -1)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:7: warning: use location
Cond in fucntion cmd_string_variable basic block 9
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 15
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
*p_51(D) = _98;
./benchmarks/tmux/leak_10/tmux_leak_10.c:76:6: warning: use location
  (*p)--;
      ^
*p_51(D) = _98;
./benchmarks/tmux/leak_10/tmux_leak_10.c:76:6: warning: use location
_97 = *p_51(D);
./benchmarks/tmux/leak_10/tmux_leak_10.c:76:3: warning: use location
  (*p)--;
   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_84 = VDEF <.MEM_83>
ch_55 = cmd_string_getc (s_50(D), p_51(D));
bb index := 3
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================
ch_55 = cmd_string_getc (s_50(D), p_51(D));
./benchmarks/tmux/leak_10/tmux_leak_10.c:103:6: warning: use location
   ch = cmd_string_getc(s, p);
      ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41d4f78
    type <pointer_type 0x7fd7a418edc8
        type <integer_type 0x7fd7a418ed20 char readonly string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418edc8>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fd7a41bef00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fd7a4216078>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
ch_38 = PHI <ch_53(2), ch_55(3), ch_55(4)>
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ch_38 = PHI <ch_53(2), ch_55(3), ch_55(4)>
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================
ch_38 = PHI <ch_53(2), ch_55(3), ch_55(4)>
lto1: warning: use location
this stmt have mutiple branch --------
_15 = (char) ch_38;
./benchmarks/tmux/leak_10/tmux_leak_10.c:113:14: warning: use location
   buf[len++] = ch;
              ^
*buf_59 = _15;
./benchmarks/tmux/leak_10/tmux_leak_10.c:113:14: warning: use location
_13 = (unsigned int) ch_38;
./benchmarks/tmux/leak_10/tmux_leak_10.c:108:8: warning: use location
   if (!cmd_string_first(ch)) {
        ^
_14 = _13 + 4294967231;
./benchmarks/tmux/leak_10/tmux_leak_10.c:108:8: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (unsigned int) ch_38;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (unsigned int) ch_38;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================
_9 = (unsigned int) ch_38;
./benchmarks/tmux/leak_10/tmux_leak_10.c:108:8: warning: use location
   if (!cmd_string_first(ch)) {
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = ch_38 != 95;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = ch_38 != 95;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================
_8 = ch_38 != 95;
./benchmarks/tmux/leak_10/tmux_leak_10.c:108:8: warning: use location
   if (!cmd_string_first(ch)) {
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = _8 & _11;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = _8 & _11;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================
_12 = _8 & _11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:108:8: warning: use location
   if (!cmd_string_first(ch)) {
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = (unsigned int) ch_55;
bb index := 4
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = (unsigned int) ch_55;
bb index := 4
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
_6 = (unsigned int) ch_55;
./benchmarks/tmux/leak_10/tmux_leak_10.c:104:8: warning: use location
   if (!cmd_string_first(ch))
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = _6 + 4294967231;
bb index := 4
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = _6 + 4294967231;
bb index := 4
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
_7 = _6 + 4294967231;
./benchmarks/tmux/leak_10/tmux_leak_10.c:104:8: warning: use location
   if (!cmd_string_first(ch))
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (unsigned int) ch_55;
bb index := 3
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================
_2 = (unsigned int) ch_55;
./benchmarks/tmux/leak_10/tmux_leak_10.c:104:8: warning: use location
   if (!cmd_string_first(ch))
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = ch_55 != 95;
bb index := 3
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================
_1 = ch_55 != 95;
./benchmarks/tmux/leak_10/tmux_leak_10.c:104:8: warning: use location
   if (!cmd_string_first(ch))
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _1 & _4;
bb index := 3
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================
_5 = _1 & _4;
./benchmarks/tmux/leak_10/tmux_leak_10.c:104:8: warning: use location
   if (!cmd_string_first(ch))
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================
ch_53 = cmd_string_getc (s_50(D), p_51(D));
./benchmarks/tmux/leak_10/tmux_leak_10.c:97:2: warning: use location
  switch (ch = cmd_string_getc(s, p)) {
  ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41d4f78
    type <pointer_type 0x7fd7a418edc8
        type <integer_type 0x7fd7a418ed20 char readonly string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418edc8>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fd7a41bef00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fd7a4216078>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================
ch_53 = cmd_string_getc (s_50(D), p_51(D));
./benchmarks/tmux/leak_10/tmux_leak_10.c:97:2: warning: use location
  switch (ch = cmd_string_getc(s, p)) {
  ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41d4f78
    type <pointer_type 0x7fd7a418edc8
        type <integer_type 0x7fd7a418ed20 char readonly string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418edc8>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fd7a41bef00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fd7a4216078>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7a41d4f78
    type <pointer_type 0x7fd7a418edc8
        type <integer_type 0x7fd7a418ed20 char readonly string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418edc8>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fd7a41bef00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fd7a4216078>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd7a41d4f78
    type <pointer_type 0x7fd7a418edc8
        type <integer_type 0x7fd7a418ed20 char readonly string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418edc8>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fd7a41bef00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fd7a4216078>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ch_62 = cmd_string_getc (s_50(D), p_51(D));
./benchmarks/tmux/leak_10/tmux_leak_10.c:116:7: warning: use location
    ch = cmd_string_getc(s, p);
       ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41d4f78
    type <pointer_type 0x7fd7a418edc8
        type <integer_type 0x7fd7a418ed20 char readonly string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418edc8>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fd7a41bef00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fd7a4216078>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_32 = ch_62 != -1;
bb index := 16
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 8

======================================================================
_32 = ch_62 != -1;
./benchmarks/tmux/leak_10/tmux_leak_10.c:130:9: warning: use location
  if (ch != EOF && fch != '{')
         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_34 = _32 & _33;
bb index := 16
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 8

======================================================================
_34 = _32 & _33;
./benchmarks/tmux/leak_10/tmux_leak_10.c:130:16: warning: use location
  if (ch != EOF && fch != '{')
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_34 != 0)
bb index := 16
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 8

======================================================================
if (_34 != 0)
./benchmarks/tmux/leak_10/tmux_leak_10.c:130:5: warning: use location
  if (ch != EOF && fch != '{')
     ^
if (_34 != 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:130:5: warning: use location
Cond in fucntion cmd_string_variable basic block 16
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 17
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 18
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_30 = ch_62 != 125;
bb index := 15
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_30 = ch_62 != 125;
bb index := 15
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 8

======================================================================
_30 = ch_62 != 125;
./benchmarks/tmux/leak_10/tmux_leak_10.c:128:23: warning: use location
  if (fch == '{' && ch != '}')
                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_31 = _29 & _30;
bb index := 15
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_31 = _29 & _30;
bb index := 15
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 8

======================================================================
_31 = _29 & _30;
./benchmarks/tmux/leak_10/tmux_leak_10.c:128:17: warning: use location
  if (fch == '{' && ch != '}')
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_28 = (char) ch_62;
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_28 = (char) ch_62;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_89 = VDEF <.MEM_88>
*_27 = _28;
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_27 = _28;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = (unsigned int) ch_62;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location
    if (ch == EOF || !cmd_string_other(ch))
                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_24 = _23 + 4294967248;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_24 > 9)
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:21: warning: use location
    if (ch == EOF || !cmd_string_other(ch))
                     ^
if (_24 > 9)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:21: warning: use location
Cond in fucntion cmd_string_variable basic block 12
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 15
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = (unsigned int) ch_62;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location
    if (ch == EOF || !cmd_string_other(ch))
                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = _21 + 4294967231;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_22 > 25)
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location
if (_22 > 25)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location
Cond in fucntion cmd_string_variable basic block 11
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 12
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = (unsigned int) ch_62;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = ch_62 != 95;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = _16 & _19;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (ch_62 == -1)
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:7: warning: use location
    if (ch == EOF || !cmd_string_other(ch))
       ^
if (ch_62 == -1)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:7: warning: use location
Cond in fucntion cmd_string_variable basic block 9
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 15
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
*p_51(D) = _98;
./benchmarks/tmux/leak_10/tmux_leak_10.c:76:6: warning: use location
  (*p)--;
      ^
*p_51(D) = _98;
./benchmarks/tmux/leak_10/tmux_leak_10.c:76:6: warning: use location
_97 = *p_51(D);
./benchmarks/tmux/leak_10/tmux_leak_10.c:76:3: warning: use location
  (*p)--;
   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_84 = VDEF <.MEM_83>
ch_55 = cmd_string_getc (s_50(D), p_51(D));
bb index := 3
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================
ch_55 = cmd_string_getc (s_50(D), p_51(D));
./benchmarks/tmux/leak_10/tmux_leak_10.c:103:6: warning: use location
   ch = cmd_string_getc(s, p);
      ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41d4f78
    type <pointer_type 0x7fd7a418edc8
        type <integer_type 0x7fd7a418ed20 char readonly string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418edc8>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fd7a41bef00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fd7a4216078>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
ch_38 = PHI <ch_53(2), ch_55(3), ch_55(4)>
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ch_38 = PHI <ch_53(2), ch_55(3), ch_55(4)>
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================
ch_38 = PHI <ch_53(2), ch_55(3), ch_55(4)>
lto1: warning: use location
this stmt have mutiple branch --------
_15 = (char) ch_38;
./benchmarks/tmux/leak_10/tmux_leak_10.c:113:14: warning: use location
   buf[len++] = ch;
              ^
*buf_59 = _15;
./benchmarks/tmux/leak_10/tmux_leak_10.c:113:14: warning: use location
_13 = (unsigned int) ch_38;
./benchmarks/tmux/leak_10/tmux_leak_10.c:108:8: warning: use location
   if (!cmd_string_first(ch)) {
        ^
_14 = _13 + 4294967231;
./benchmarks/tmux/leak_10/tmux_leak_10.c:108:8: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (unsigned int) ch_38;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (unsigned int) ch_38;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================
_9 = (unsigned int) ch_38;
./benchmarks/tmux/leak_10/tmux_leak_10.c:108:8: warning: use location
   if (!cmd_string_first(ch)) {
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = ch_38 != 95;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = ch_38 != 95;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================
_8 = ch_38 != 95;
./benchmarks/tmux/leak_10/tmux_leak_10.c:108:8: warning: use location
   if (!cmd_string_first(ch)) {
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = _8 & _11;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = _8 & _11;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================
_12 = _8 & _11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:108:8: warning: use location
   if (!cmd_string_first(ch)) {
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = (unsigned int) ch_55;
bb index := 4
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = (unsigned int) ch_55;
bb index := 4
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
_6 = (unsigned int) ch_55;
./benchmarks/tmux/leak_10/tmux_leak_10.c:104:8: warning: use location
   if (!cmd_string_first(ch))
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = _6 + 4294967231;
bb index := 4
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = _6 + 4294967231;
bb index := 4
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
_7 = _6 + 4294967231;
./benchmarks/tmux/leak_10/tmux_leak_10.c:104:8: warning: use location
   if (!cmd_string_first(ch))
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (unsigned int) ch_55;
bb index := 3
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================
_2 = (unsigned int) ch_55;
./benchmarks/tmux/leak_10/tmux_leak_10.c:104:8: warning: use location
   if (!cmd_string_first(ch))
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = ch_55 != 95;
bb index := 3
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================
_1 = ch_55 != 95;
./benchmarks/tmux/leak_10/tmux_leak_10.c:104:8: warning: use location
   if (!cmd_string_first(ch))
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _1 & _4;
bb index := 3
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================
_5 = _1 & _4;
./benchmarks/tmux/leak_10/tmux_leak_10.c:104:8: warning: use location
   if (!cmd_string_first(ch))
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================
ch_53 = cmd_string_getc (s_50(D), p_51(D));
./benchmarks/tmux/leak_10/tmux_leak_10.c:97:2: warning: use location
  switch (ch = cmd_string_getc(s, p)) {
  ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41d4f78
    type <pointer_type 0x7fd7a418edc8
        type <integer_type 0x7fd7a418ed20 char readonly string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418edc8>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fd7a41bef00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fd7a4216078>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================
ch_53 = cmd_string_getc (s_50(D), p_51(D));
./benchmarks/tmux/leak_10/tmux_leak_10.c:97:2: warning: use location
  switch (ch = cmd_string_getc(s, p)) {
  ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41d4f78
    type <pointer_type 0x7fd7a418edc8
        type <integer_type 0x7fd7a418ed20 char readonly string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418edc8>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fd7a41bef00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fd7a4216078>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7a41d4f78
    type <pointer_type 0x7fd7a418edc8
        type <integer_type 0x7fd7a418ed20 char readonly string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418edc8>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fd7a41bef00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fd7a4216078>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fd7a41cb720 type <pointer_type 0x7fd7a418ea80> constant 0>

dot graph START

======================================================================
 <ssa_name 0x7fd7a41d4e58
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41d2360 buf>
    def_stmt buf_40 = PHI <buf_59(8), buf_64(14)>
    version 40
    ptr-info 0x7fd7a4216030>
buf_40 = PHI <buf_59(8), buf_64(14)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 70

======================================================================
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 70

======================================================================
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: use location
  free(buf);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: use location
  buf = xrealloc(buf, 1, len + 1);
      ^
this stmt is child function---xrealloc-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41d4e58
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41d2360 buf>
    def_stmt buf_40 = PHI <buf_59(8), buf_64(14)>
    version 40
    ptr-info 0x7fd7a4216030>
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :0========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;31m  find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:2 
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: use location
  free(buf);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find ================== 
_36 = buf_69 + len_42;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:5: warning: use location
  buf[len] = '\0';
     ^
*_36 = 0;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:11: warning: use location
  buf[len] = '\0';
           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: use location
     buf = xrealloc(buf, 1, len + 1);
         ^
this stmt is child function---xrealloc-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41d4e58
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41d2360 buf>
    def_stmt buf_40 = PHI <buf_59(8), buf_64(14)>
    version 40
    ptr-info 0x7fd7a4216030>
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :0========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;31m  find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:4 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_27 = buf_64 + len_42;
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_27 = buf_64 + len_42;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:8: warning: use location
     buf[len++] = ch;
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_89 = VDEF <.MEM_88>
*_27 = _28;
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_27 = _28;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_89 = VDEF <.MEM_88>
*_27 = _28;
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_27 = _28;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location
this stmt have mutiple branch --------

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7a41d4e58
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41d2360 buf>
    def_stmt buf_40 = PHI <buf_59(8), buf_64(14)>
    version 40
    ptr-info 0x7fd7a4216030>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: use location
  free(buf);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: use location
  free(buf);
  ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: Use after free error!: free location 
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: use location
  free(buf);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: use location
  free(buf);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: use location
  free(buf);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: use location
  free(buf);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
_36 = buf_69 + len_42;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:5: warning: use location
  buf[len] = '\0';
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
_36 = buf_69 + len_42;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:5: warning: use location
  buf[len] = '\0';
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
# .MEM_92 = VDEF <.MEM_91>
*_36 = 0;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:11: warning: use location
  buf[len] = '\0';
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
# .MEM_92 = VDEF <.MEM_91>
*_36 = 0;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:11: warning: use location
  buf[len] = '\0';
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
_27 = buf_64 + len_42;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:8: warning: use location
     buf[len++] = ch;
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
# .MEM_89 = VDEF <.MEM_88>
*_27 = _28;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
# .MEM_89 = VDEF <.MEM_88>
*_27 = _28;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd7a41d4e58
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41d2360 buf>
    def_stmt buf_40 = PHI <buf_59(8), buf_64(14)>
    version 40
    ptr-info 0x7fd7a4216030>
buf_40 = PHI <buf_59(8), buf_64(14)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 70

======================================================================
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 70

======================================================================
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: use location
  free(buf);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: use location
  buf = xrealloc(buf, 1, len + 1);
      ^
this stmt is child function---xrealloc-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41d4e58
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41d2360 buf>
    def_stmt buf_40 = PHI <buf_59(8), buf_64(14)>
    version 40
    ptr-info 0x7fd7a4216030>
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :0========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;31m  find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:2 
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: use location
  free(buf);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find ================== 
_36 = buf_69 + len_42;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:5: warning: use location
  buf[len] = '\0';
     ^
*_36 = 0;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:11: warning: use location
  buf[len] = '\0';
           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: use location
     buf = xrealloc(buf, 1, len + 1);
         ^
this stmt is child function---xrealloc-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41d4e58
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41d2360 buf>
    def_stmt buf_40 = PHI <buf_59(8), buf_64(14)>
    version 40
    ptr-info 0x7fd7a4216030>
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :0========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;31m  find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:4 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_27 = buf_64 + len_42;
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_27 = buf_64 + len_42;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:8: warning: use location
     buf[len++] = ch;
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_89 = VDEF <.MEM_88>
*_27 = _28;
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_27 = _28;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_89 = VDEF <.MEM_88>
*_27 = _28;
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_27 = _28;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location
this stmt have mutiple branch --------

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7a41d4e58
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41d2360 buf>
    def_stmt buf_40 = PHI <buf_59(8), buf_64(14)>
    version 40
    ptr-info 0x7fd7a4216030>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: use location
  free(buf);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: use location
  free(buf);
  ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: Use after free error!: free location 
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: use location
  free(buf);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: use location
  free(buf);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: use location
  free(buf);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: use location
  free(buf);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
_36 = buf_69 + len_42;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:5: warning: use location
  buf[len] = '\0';
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
_36 = buf_69 + len_42;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:5: warning: use location
  buf[len] = '\0';
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
# .MEM_92 = VDEF <.MEM_91>
*_36 = 0;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:11: warning: use location
  buf[len] = '\0';
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
# .MEM_92 = VDEF <.MEM_91>
*_36 = 0;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:11: warning: use location
  buf[len] = '\0';
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
_27 = buf_64 + len_42;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:8: warning: use location
     buf[len++] = ch;
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
# .MEM_89 = VDEF <.MEM_88>
*_27 = _28;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
# .MEM_89 = VDEF <.MEM_88>
*_27 = _28;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fd7a4182d40
    type <pointer_type 0x7fd7a41bd690
        type <array_type 0x7fd7a41b4348 type <integer_type 0x7fd7a418e9d8 char>
            QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 structural equality domain <integer_type 0x7fd7a41b42a0>
            pointer_to_this <pointer_type 0x7fd7a41bd690>>
        unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    readonly constant
    arg 0 <string_cst 0x7fd7a41cb7c8 type <array_type 0x7fd7a41b4348>
        readonly constant static "\000">
    ./benchmarks/tmux/leak_10/tmux_leak_10.c:138:11 start: ./benchmarks/tmux/leak_10/tmux_leak_10.c:138:11 finish: ./benchmarks/tmux/leak_10/tmux_leak_10.c:138:11>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd7a41d4d80
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
   
    def_stmt _37 = envent_72(D)->value;
    version 37
    ptr-info 0x7fd7a4216018>
# VUSE <.MEM_93>
_37 = envent_72(D)->value;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_94 = VDEF <.MEM_93>
_74 = strdup (_37);
bb index := 20
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_94 = VDEF <.MEM_93>
_74 = strdup (_37);
bb index := 20
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_94 = VDEF <.MEM_93>
_74 = strdup (_37);
bb index := 20
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 70

======================================================================
_74 = strdup (_37);
./benchmarks/tmux/leak_10/tmux_leak_10.c:139:10: warning: use location
  return (xstrdup(envent->value));
          ^
this stmt is child function---strdup-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41d4d80
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
   
    def_stmt _37 = envent_72(D)->value;
    version 37
    ptr-info 0x7fd7a4216018>
trace fucntion name:strdup 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
lto1: warning: use location
this stmt have mutiple branch --------

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7a41d4d80
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
   
    def_stmt _37 = envent_72(D)->value;
    version 37
    ptr-info 0x7fd7a4216018>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:cmd_string_variable========= [0m
[40;44m =======node_fun:cmd_string_string========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path cmd_string_string  function_call count: 4 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path xrealloc  function_call count: 3 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;33m =======POP node_fun stack:realloc========= [0m
[40;42m =======pre_check_funciton:xrealloc========= [0m
[40;42m =======start_check_funciton:xrealloc========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fd7a466cb88
    type <pointer_type 0x7fd7a467f0a8
        type <void_type 0x7fd7a4678f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fd7a467f0a8>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fd7a4684bd0>>
    var <var_decl 0x7fd7a53f9cf0 newptr>
    def_stmt newptr_11 = realloc (oldptr_9(D), newsize_7);
    version 11
    ptr-info 0x7fd7a41cbf60>
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);

 ================== trace ptable================== 
trace fucntion name:realloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---realloc-----
this Reserved word function ------realloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
In function ‘xrealloc’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
bb index := 6
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 18

======================================================================
newptr_11 = realloc (oldptr_9(D), newsize_7);
In function ‘cmd_string_string’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
this stmt is child function---realloc-----

 ================== find ================== 
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
[40;32m    FIND realloc STMT count:1 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = newptr_11;
bb index := 8
# VUSE <.MEM_20>
return newptr_11;
In function ‘xrealloc’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 8

======================================================================
_12 = newptr_11;
In function ‘cmd_string_string’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newptr_11 == 0B)
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
In function ‘xrealloc’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newptr_11 == 0B)
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newptr_11 == 0B)
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newptr_11 == 0B)
bb index := 6
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 18

======================================================================
if (newptr_11 == 0B)
In function ‘cmd_string_string’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
if (newptr_11 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
Cond in fucntion xrealloc basic block 6
 ================== possible direct basic block ================= 
from xrealloc basic block 7
 ================== possible direct basic block ================= 
from xrealloc basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
In function ‘xrealloc’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 70

======================================================================
if (newsize_7 == 0)
In function ‘cmd_string_string’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:53:5: warning: use location
  if (newsize == 0)
     ^
if (newsize_7 == 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:53:5: warning: use location
Cond in fucntion xrealloc basic block 2
 ================== possible direct basic block ================= 
from xrealloc basic block 3
 ================== possible direct basic block ================= 
from xrealloc basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7a466cb88
    type <pointer_type 0x7fd7a467f0a8
        type <void_type 0x7fd7a4678f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fd7a467f0a8>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fd7a4684bd0>>
    var <var_decl 0x7fd7a53f9cf0 newptr>
    def_stmt newptr_11 = realloc (oldptr_9(D), newsize_7);
    version 11
    ptr-info 0x7fd7a41cbf60>
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: Use after free error!: free location 
_12 = newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: Use after free error!: free location 
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
_12 = newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: Use after free error!: free location 
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
if (newptr_11 == 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: Use after free error!: free location 
if (newptr_11 == 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;32m   Maybe you don't have memory leak.... need more checks  [0m

======================================================================


dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fd7a4664f90 type <integer_type 0x7fd7a46785e8 int> constant 1>

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fd7a4664f90 type <integer_type 0x7fd7a46785e8 int> constant 1>
[40;33m =======POP node_fun stack:xrealloc========= [0m
[40;42m =======pre add _ fucntion:cmd_string_getc========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path cmd_string_getc  function_call count: 0 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:cmd_string_getc========= [0m
[40;42m =======start_check_funciton:cmd_string_getc========= [0m
[40;33m =======POP node_fun stack:cmd_string_getc========= [0m
[40;42m =======pre add _ fucntion:cmd_string_variable========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path cmd_string_variable  function_call count: 4 level :1========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;33m =======POP node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path xrealloc  function_call count: 3 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;33m =======POP node_fun stack:realloc========= [0m
[40;42m =======pre_check_funciton:xrealloc========= [0m
[40;42m =======start_check_funciton:xrealloc========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fd7a466cb88
    type <pointer_type 0x7fd7a467f0a8
        type <void_type 0x7fd7a4678f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fd7a467f0a8>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fd7a4684bd0>>
    var <var_decl 0x7fd7a53f9cf0 newptr>
    def_stmt newptr_11 = realloc (oldptr_9(D), newsize_7);
    version 11
    ptr-info 0x7fd7a41cbf60>
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);

 ================== trace ptable================== 
trace fucntion name:realloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---realloc-----
this Reserved word function ------realloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
In function ‘xrealloc’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
bb index := 6
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 18

======================================================================
newptr_11 = realloc (oldptr_9(D), newsize_7);
In function ‘cmd_string_string’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
this stmt is child function---realloc-----

 ================== find ================== 
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
[40;32m    FIND realloc STMT count:1 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = newptr_11;
bb index := 8
# VUSE <.MEM_20>
return newptr_11;
In function ‘xrealloc’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 8

======================================================================
_12 = newptr_11;
In function ‘cmd_string_string’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newptr_11 == 0B)
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
In function ‘xrealloc’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newptr_11 == 0B)
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newptr_11 == 0B)
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newptr_11 == 0B)
bb index := 6
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 18

======================================================================
if (newptr_11 == 0B)
In function ‘cmd_string_string’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
if (newptr_11 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
Cond in fucntion xrealloc basic block 6
 ================== possible direct basic block ================= 
from xrealloc basic block 7
 ================== possible direct basic block ================= 
from xrealloc basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
In function ‘xrealloc’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 70

======================================================================
if (newsize_7 == 0)
In function ‘cmd_string_string’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:53:5: warning: use location
  if (newsize == 0)
     ^
if (newsize_7 == 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:53:5: warning: use location
Cond in fucntion xrealloc basic block 2
 ================== possible direct basic block ================= 
from xrealloc basic block 3
 ================== possible direct basic block ================= 
from xrealloc basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7a466cb88
    type <pointer_type 0x7fd7a467f0a8
        type <void_type 0x7fd7a4678f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fd7a467f0a8>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fd7a4684bd0>>
    var <var_decl 0x7fd7a53f9cf0 newptr>
    def_stmt newptr_11 = realloc (oldptr_9(D), newsize_7);
    version 11
    ptr-info 0x7fd7a41cbf60>
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: Use after free error!: free location 
_12 = newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: Use after free error!: free location 
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
_12 = newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: Use after free error!: free location 
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
if (newptr_11 == 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: Use after free error!: free location 
if (newptr_11 == 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;32m   Maybe you don't have memory leak.... need more checks  [0m

======================================================================


dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fd7a4664f90 type <integer_type 0x7fd7a46785e8 int> constant 1>

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fd7a4664f90 type <integer_type 0x7fd7a46785e8 int> constant 1>
[40;33m =======POP node_fun stack:xrealloc========= [0m
[40;42m =======pre add _ fucntion:cmd_string_getc========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path cmd_string_getc  function_call count: 0 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:cmd_string_getc========= [0m
[40;42m =======start_check_funciton:cmd_string_getc========= [0m
[40;33m =======POP node_fun stack:cmd_string_getc========= [0m
[40;42m =======pre_check_funciton:cmd_string_variable========= [0m
[40;42m =======start_check_funciton:cmd_string_variable========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fd7a41d6318
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
   
    def_stmt _76 = strdup ("");
    version 76
    ptr-info 0x7fd7a4216150>
# .MEM_95 = VDEF <.MEM_93>
_76 = strdup ("");

 ================== trace ptable================== 
trace fucntion name:strdup 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---strdup-----
this Reserved word function ------strdup-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_95 = VDEF <.MEM_93>
_76 = strdup ("");
bb index := 19
# VUSE <.MEM_15>
return _8;
In function ‘cmd_string_variable’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_95 = VDEF <.MEM_93>
_76 = strdup ("");
bb index := 19
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_95 = VDEF <.MEM_93>
_76 = strdup ("");
bb index := 19
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 70

======================================================================
_76 = strdup ("");
In function ‘cmd_string_string’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:138:11: warning: use location
   return (xstrdup(""));
           ^
this stmt is child function---strdup-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41d6318
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
   
    def_stmt _76 = strdup ("");
    version 76
    ptr-info 0x7fd7a4216150>
trace fucntion name:strdup 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
In function ‘cmd_string_variable’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
In function ‘cmd_string_string’:
lto1: warning: use location
this stmt have mutiple branch --------

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7a41d6318
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
   
    def_stmt _76 = strdup ("");
    version 76
    ptr-info 0x7fd7a4216150>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd7a41d62d0
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
   
    def_stmt _74 = strdup (_37);
    version 74
    ptr-info 0x7fd7a4216138>
# .MEM_94 = VDEF <.MEM_93>
_74 = strdup (_37);

 ================== trace ptable================== 
trace fucntion name:strdup 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---strdup-----
this Reserved word function ------strdup-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_94 = VDEF <.MEM_93>
_74 = strdup (_37);
bb index := 20
# VUSE <.MEM_15>
return _8;
In function ‘cmd_string_variable’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_94 = VDEF <.MEM_93>
_74 = strdup (_37);
bb index := 20
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_94 = VDEF <.MEM_93>
_74 = strdup (_37);
bb index := 20
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 70

======================================================================
_74 = strdup (_37);
In function ‘cmd_string_string’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:139:10: warning: use location
  return (xstrdup(envent->value));
          ^
this stmt is child function---strdup-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41d62d0
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
   
    def_stmt _74 = strdup (_37);
    version 74
    ptr-info 0x7fd7a4216138>
trace fucntion name:strdup 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
In function ‘cmd_string_variable’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
In function ‘cmd_string_string’:
lto1: warning: use location
this stmt have mutiple branch --------

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7a41d62d0
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
   
    def_stmt _74 = strdup (_37);
    version 74
    ptr-info 0x7fd7a4216138>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd7a41d4f78
    type <pointer_type 0x7fd7a418edc8
        type <integer_type 0x7fd7a418ed20 char readonly string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418edc8>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fd7a41bef00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fd7a4216078>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ch_62 = cmd_string_getc (s_50(D), p_51(D));
./benchmarks/tmux/leak_10/tmux_leak_10.c:116:7: warning: use location
    ch = cmd_string_getc(s, p);
       ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41d4f78
    type <pointer_type 0x7fd7a418edc8
        type <integer_type 0x7fd7a418ed20 char readonly string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418edc8>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fd7a41bef00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fd7a4216078>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_32 = ch_62 != -1;
bb index := 16
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 8

======================================================================
_32 = ch_62 != -1;
In function ‘cmd_string_string’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:130:9: warning: use location
  if (ch != EOF && fch != '{')
         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_34 = _32 & _33;
bb index := 16
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 8

======================================================================
_34 = _32 & _33;
In function ‘cmd_string_string’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:130:16: warning: use location
  if (ch != EOF && fch != '{')
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_34 != 0)
bb index := 16
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 8

======================================================================
if (_34 != 0)
In function ‘cmd_string_string’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:130:5: warning: use location
  if (ch != EOF && fch != '{')
     ^
if (_34 != 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:130:5: warning: use location
Cond in fucntion cmd_string_variable basic block 16
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 17
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 18
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_30 = ch_62 != 125;
bb index := 15
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_30 = ch_62 != 125;
bb index := 15
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 8

======================================================================
_30 = ch_62 != 125;
In function ‘cmd_string_string’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:128:23: warning: use location
  if (fch == '{' && ch != '}')
                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_31 = _29 & _30;
bb index := 15
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_31 = _29 & _30;
bb index := 15
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 8

======================================================================
_31 = _29 & _30;
In function ‘cmd_string_string’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:128:17: warning: use location
  if (fch == '{' && ch != '}')
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_28 = (char) ch_62;
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_28 = (char) ch_62;
In function ‘cmd_string_string’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_89 = VDEF <.MEM_88>
*_27 = _28;
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_27 = _28;
In function ‘cmd_string_string’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = (unsigned int) ch_62;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location
    if (ch == EOF || !cmd_string_other(ch))
                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_24 = _23 + 4294967248;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_24 > 9)
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:21: warning: use location
    if (ch == EOF || !cmd_string_other(ch))
                     ^
if (_24 > 9)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:21: warning: use location
Cond in fucntion cmd_string_variable basic block 12
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 15
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = (unsigned int) ch_62;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location
    if (ch == EOF || !cmd_string_other(ch))
                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = _21 + 4294967231;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_22 > 25)
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location
if (_22 > 25)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location
Cond in fucntion cmd_string_variable basic block 11
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 12
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = (unsigned int) ch_62;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = ch_62 != 95;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = _16 & _19;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (ch_62 == -1)
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:7: warning: use location
    if (ch == EOF || !cmd_string_other(ch))
       ^
if (ch_62 == -1)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:7: warning: use location
Cond in fucntion cmd_string_variable basic block 9
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 15
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
*p_51(D) = _98;
./benchmarks/tmux/leak_10/tmux_leak_10.c:76:6: warning: use location
  (*p)--;
      ^
*p_51(D) = _98;
./benchmarks/tmux/leak_10/tmux_leak_10.c:76:6: warning: use location
_97 = *p_51(D);
./benchmarks/tmux/leak_10/tmux_leak_10.c:76:3: warning: use location
  (*p)--;
   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_84 = VDEF <.MEM_83>
ch_55 = cmd_string_getc (s_50(D), p_51(D));
bb index := 3
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================
ch_55 = cmd_string_getc (s_50(D), p_51(D));
In function ‘cmd_string_string’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:103:6: warning: use location
   ch = cmd_string_getc(s, p);
      ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41d4f78
    type <pointer_type 0x7fd7a418edc8
        type <integer_type 0x7fd7a418ed20 char readonly string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418edc8>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fd7a41bef00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fd7a4216078>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
ch_38 = PHI <ch_53(2), ch_55(3), ch_55(4)>
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ch_38 = PHI <ch_53(2), ch_55(3), ch_55(4)>
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================
ch_38 = PHI <ch_53(2), ch_55(3), ch_55(4)>
In function ‘cmd_string_string’:
lto1: warning: use location
this stmt have mutiple branch --------
_15 = (char) ch_38;
./benchmarks/tmux/leak_10/tmux_leak_10.c:113:14: warning: use location
   buf[len++] = ch;
              ^
*buf_59 = _15;
./benchmarks/tmux/leak_10/tmux_leak_10.c:113:14: warning: use location
_13 = (unsigned int) ch_38;
./benchmarks/tmux/leak_10/tmux_leak_10.c:108:8: warning: use location
   if (!cmd_string_first(ch)) {
        ^
_14 = _13 + 4294967231;
./benchmarks/tmux/leak_10/tmux_leak_10.c:108:8: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (unsigned int) ch_38;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (unsigned int) ch_38;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================
_9 = (unsigned int) ch_38;
In function ‘cmd_string_string’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:108:8: warning: use location
   if (!cmd_string_first(ch)) {
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = ch_38 != 95;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = ch_38 != 95;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================
_8 = ch_38 != 95;
In function ‘cmd_string_string’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:108:8: warning: use location
   if (!cmd_string_first(ch)) {
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = _8 & _11;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = _8 & _11;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================
_12 = _8 & _11;
In function ‘cmd_string_string’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:108:8: warning: use location
   if (!cmd_string_first(ch)) {
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = (unsigned int) ch_55;
bb index := 4
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = (unsigned int) ch_55;
bb index := 4
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
_6 = (unsigned int) ch_55;
In function ‘cmd_string_string’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:104:8: warning: use location
   if (!cmd_string_first(ch))
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = _6 + 4294967231;
bb index := 4
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = _6 + 4294967231;
bb index := 4
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
_7 = _6 + 4294967231;
In function ‘cmd_string_string’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:104:8: warning: use location
   if (!cmd_string_first(ch))
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (unsigned int) ch_55;
bb index := 3
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================
_2 = (unsigned int) ch_55;
In function ‘cmd_string_string’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:104:8: warning: use location
   if (!cmd_string_first(ch))
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = ch_55 != 95;
bb index := 3
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================
_1 = ch_55 != 95;
In function ‘cmd_string_string’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:104:8: warning: use location
   if (!cmd_string_first(ch))
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _1 & _4;
bb index := 3
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================
_5 = _1 & _4;
In function ‘cmd_string_string’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:104:8: warning: use location
   if (!cmd_string_first(ch))
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================
ch_53 = cmd_string_getc (s_50(D), p_51(D));
In function ‘cmd_string_string’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:97:2: warning: use location
  switch (ch = cmd_string_getc(s, p)) {
  ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41d4f78
    type <pointer_type 0x7fd7a418edc8
        type <integer_type 0x7fd7a418ed20 char readonly string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418edc8>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fd7a41bef00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fd7a4216078>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================
ch_53 = cmd_string_getc (s_50(D), p_51(D));
In function ‘cmd_string_string’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:97:2: warning: use location
  switch (ch = cmd_string_getc(s, p)) {
  ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41d4f78
    type <pointer_type 0x7fd7a418edc8
        type <integer_type 0x7fd7a418ed20 char readonly string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418edc8>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fd7a41bef00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fd7a4216078>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7a41d4f78
    type <pointer_type 0x7fd7a418edc8
        type <integer_type 0x7fd7a418ed20 char readonly string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418edc8>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fd7a41bef00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fd7a4216078>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd7a41d4f78
    type <pointer_type 0x7fd7a418edc8
        type <integer_type 0x7fd7a418ed20 char readonly string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418edc8>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fd7a41bef00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fd7a4216078>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ch_62 = cmd_string_getc (s_50(D), p_51(D));
./benchmarks/tmux/leak_10/tmux_leak_10.c:116:7: warning: use location
    ch = cmd_string_getc(s, p);
       ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41d4f78
    type <pointer_type 0x7fd7a418edc8
        type <integer_type 0x7fd7a418ed20 char readonly string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418edc8>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fd7a41bef00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fd7a4216078>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_32 = ch_62 != -1;
bb index := 16
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 8

======================================================================
_32 = ch_62 != -1;
In function ‘cmd_string_string’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:130:9: warning: use location
  if (ch != EOF && fch != '{')
         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_34 = _32 & _33;
bb index := 16
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 8

======================================================================
_34 = _32 & _33;
In function ‘cmd_string_string’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:130:16: warning: use location
  if (ch != EOF && fch != '{')
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_34 != 0)
bb index := 16
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 8

======================================================================
if (_34 != 0)
In function ‘cmd_string_string’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:130:5: warning: use location
  if (ch != EOF && fch != '{')
     ^
if (_34 != 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:130:5: warning: use location
Cond in fucntion cmd_string_variable basic block 16
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 17
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 18
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_30 = ch_62 != 125;
bb index := 15
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_30 = ch_62 != 125;
bb index := 15
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 8

======================================================================
_30 = ch_62 != 125;
In function ‘cmd_string_string’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:128:23: warning: use location
  if (fch == '{' && ch != '}')
                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_31 = _29 & _30;
bb index := 15
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_31 = _29 & _30;
bb index := 15
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 8

======================================================================
_31 = _29 & _30;
In function ‘cmd_string_string’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:128:17: warning: use location
  if (fch == '{' && ch != '}')
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_28 = (char) ch_62;
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_28 = (char) ch_62;
In function ‘cmd_string_string’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_89 = VDEF <.MEM_88>
*_27 = _28;
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_27 = _28;
In function ‘cmd_string_string’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = (unsigned int) ch_62;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location
    if (ch == EOF || !cmd_string_other(ch))
                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_24 = _23 + 4294967248;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_24 > 9)
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:21: warning: use location
    if (ch == EOF || !cmd_string_other(ch))
                     ^
if (_24 > 9)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:21: warning: use location
Cond in fucntion cmd_string_variable basic block 12
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 15
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = (unsigned int) ch_62;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location
    if (ch == EOF || !cmd_string_other(ch))
                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = _21 + 4294967231;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_22 > 25)
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location
if (_22 > 25)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location
Cond in fucntion cmd_string_variable basic block 11
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 12
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = (unsigned int) ch_62;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = ch_62 != 95;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = _16 & _19;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (ch_62 == -1)
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:7: warning: use location
    if (ch == EOF || !cmd_string_other(ch))
       ^
if (ch_62 == -1)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:7: warning: use location
Cond in fucntion cmd_string_variable basic block 9
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 15
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
*p_51(D) = _98;
./benchmarks/tmux/leak_10/tmux_leak_10.c:76:6: warning: use location
  (*p)--;
      ^
*p_51(D) = _98;
./benchmarks/tmux/leak_10/tmux_leak_10.c:76:6: warning: use location
_97 = *p_51(D);
./benchmarks/tmux/leak_10/tmux_leak_10.c:76:3: warning: use location
  (*p)--;
   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_84 = VDEF <.MEM_83>
ch_55 = cmd_string_getc (s_50(D), p_51(D));
bb index := 3
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================
ch_55 = cmd_string_getc (s_50(D), p_51(D));
In function ‘cmd_string_string’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:103:6: warning: use location
   ch = cmd_string_getc(s, p);
      ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41d4f78
    type <pointer_type 0x7fd7a418edc8
        type <integer_type 0x7fd7a418ed20 char readonly string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418edc8>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fd7a41bef00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fd7a4216078>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
ch_38 = PHI <ch_53(2), ch_55(3), ch_55(4)>
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ch_38 = PHI <ch_53(2), ch_55(3), ch_55(4)>
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================
ch_38 = PHI <ch_53(2), ch_55(3), ch_55(4)>
In function ‘cmd_string_string’:
lto1: warning: use location
this stmt have mutiple branch --------
_15 = (char) ch_38;
./benchmarks/tmux/leak_10/tmux_leak_10.c:113:14: warning: use location
   buf[len++] = ch;
              ^
*buf_59 = _15;
./benchmarks/tmux/leak_10/tmux_leak_10.c:113:14: warning: use location
_13 = (unsigned int) ch_38;
./benchmarks/tmux/leak_10/tmux_leak_10.c:108:8: warning: use location
   if (!cmd_string_first(ch)) {
        ^
_14 = _13 + 4294967231;
./benchmarks/tmux/leak_10/tmux_leak_10.c:108:8: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (unsigned int) ch_38;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (unsigned int) ch_38;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================
_9 = (unsigned int) ch_38;
In function ‘cmd_string_string’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:108:8: warning: use location
   if (!cmd_string_first(ch)) {
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = ch_38 != 95;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = ch_38 != 95;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================
_8 = ch_38 != 95;
In function ‘cmd_string_string’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:108:8: warning: use location
   if (!cmd_string_first(ch)) {
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = _8 & _11;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = _8 & _11;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================
_12 = _8 & _11;
In function ‘cmd_string_string’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:108:8: warning: use location
   if (!cmd_string_first(ch)) {
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = (unsigned int) ch_55;
bb index := 4
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = (unsigned int) ch_55;
bb index := 4
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
_6 = (unsigned int) ch_55;
In function ‘cmd_string_string’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:104:8: warning: use location
   if (!cmd_string_first(ch))
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = _6 + 4294967231;
bb index := 4
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = _6 + 4294967231;
bb index := 4
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
_7 = _6 + 4294967231;
In function ‘cmd_string_string’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:104:8: warning: use location
   if (!cmd_string_first(ch))
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (unsigned int) ch_55;
bb index := 3
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================
_2 = (unsigned int) ch_55;
In function ‘cmd_string_string’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:104:8: warning: use location
   if (!cmd_string_first(ch))
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = ch_55 != 95;
bb index := 3
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================
_1 = ch_55 != 95;
In function ‘cmd_string_string’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:104:8: warning: use location
   if (!cmd_string_first(ch))
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _1 & _4;
bb index := 3
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================
_5 = _1 & _4;
In function ‘cmd_string_string’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:104:8: warning: use location
   if (!cmd_string_first(ch))
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================
ch_53 = cmd_string_getc (s_50(D), p_51(D));
In function ‘cmd_string_string’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:97:2: warning: use location
  switch (ch = cmd_string_getc(s, p)) {
  ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41d4f78
    type <pointer_type 0x7fd7a418edc8
        type <integer_type 0x7fd7a418ed20 char readonly string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418edc8>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fd7a41bef00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fd7a4216078>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================
ch_53 = cmd_string_getc (s_50(D), p_51(D));
In function ‘cmd_string_string’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:97:2: warning: use location
  switch (ch = cmd_string_getc(s, p)) {
  ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41d4f78
    type <pointer_type 0x7fd7a418edc8
        type <integer_type 0x7fd7a418ed20 char readonly string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418edc8>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fd7a41bef00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fd7a4216078>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7a41d4f78
    type <pointer_type 0x7fd7a418edc8
        type <integer_type 0x7fd7a418ed20 char readonly string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418edc8>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fd7a41bef00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fd7a4216078>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fd7a41cb720 type <pointer_type 0x7fd7a418ea80> constant 0>

dot graph START

======================================================================
 <ssa_name 0x7fd7a41d4e58
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41d2360 buf>
    def_stmt buf_40 = PHI <buf_59(8), buf_64(14)>
    version 40
    ptr-info 0x7fd7a4216030>
buf_40 = PHI <buf_59(8), buf_64(14)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 70

======================================================================
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
In function ‘cmd_string_string’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 70

======================================================================
free (buf_41);
In function ‘cmd_string_string’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: use location
  free(buf);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: use location
  buf = xrealloc(buf, 1, len + 1);
      ^
this stmt is child function---xrealloc-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41d4e58
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41d2360 buf>
    def_stmt buf_40 = PHI <buf_59(8), buf_64(14)>
    version 40
    ptr-info 0x7fd7a4216030>
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :0========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;31m  find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:2 
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: use location
  free(buf);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find ================== 
_36 = buf_69 + len_42;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:5: warning: use location
  buf[len] = '\0';
     ^
*_36 = 0;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:11: warning: use location
  buf[len] = '\0';
           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_64 = xrealloc (buf_40, 1, _25);
In function ‘cmd_string_string’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: use location
     buf = xrealloc(buf, 1, len + 1);
         ^
this stmt is child function---xrealloc-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41d4e58
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41d2360 buf>
    def_stmt buf_40 = PHI <buf_59(8), buf_64(14)>
    version 40
    ptr-info 0x7fd7a4216030>
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :0========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;31m  find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:4 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_27 = buf_64 + len_42;
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_27 = buf_64 + len_42;
In function ‘cmd_string_string’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:8: warning: use location
     buf[len++] = ch;
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_89 = VDEF <.MEM_88>
*_27 = _28;
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_27 = _28;
In function ‘cmd_string_string’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_89 = VDEF <.MEM_88>
*_27 = _28;
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_27 = _28;
In function ‘cmd_string_string’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location
this stmt have mutiple branch --------

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7a41d4e58
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41d2360 buf>
    def_stmt buf_40 = PHI <buf_59(8), buf_64(14)>
    version 40
    ptr-info 0x7fd7a4216030>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: use location
  free(buf);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: use location
  free(buf);
  ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: Use after free error!: free location 
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: use location
  free(buf);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: use location
  free(buf);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: use location
  free(buf);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: use location
  free(buf);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
_36 = buf_69 + len_42;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:5: warning: use location
  buf[len] = '\0';
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
_36 = buf_69 + len_42;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:5: warning: use location
  buf[len] = '\0';
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
# .MEM_92 = VDEF <.MEM_91>
*_36 = 0;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:11: warning: use location
  buf[len] = '\0';
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
# .MEM_92 = VDEF <.MEM_91>
*_36 = 0;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:11: warning: use location
  buf[len] = '\0';
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
_27 = buf_64 + len_42;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:8: warning: use location
     buf[len++] = ch;
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
# .MEM_89 = VDEF <.MEM_88>
*_27 = _28;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
# .MEM_89 = VDEF <.MEM_88>
*_27 = _28;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd7a41d4e58
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41d2360 buf>
    def_stmt buf_40 = PHI <buf_59(8), buf_64(14)>
    version 40
    ptr-info 0x7fd7a4216030>
buf_40 = PHI <buf_59(8), buf_64(14)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 70

======================================================================
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
In function ‘cmd_string_string’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 70

======================================================================
free (buf_41);
In function ‘cmd_string_string’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: use location
  free(buf);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: use location
  buf = xrealloc(buf, 1, len + 1);
      ^
this stmt is child function---xrealloc-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41d4e58
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41d2360 buf>
    def_stmt buf_40 = PHI <buf_59(8), buf_64(14)>
    version 40
    ptr-info 0x7fd7a4216030>
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :0========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;31m  find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:2 
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: use location
  free(buf);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find ================== 
_36 = buf_69 + len_42;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:5: warning: use location
  buf[len] = '\0';
     ^
*_36 = 0;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:11: warning: use location
  buf[len] = '\0';
           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_64 = xrealloc (buf_40, 1, _25);
In function ‘cmd_string_string’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: use location
     buf = xrealloc(buf, 1, len + 1);
         ^
this stmt is child function---xrealloc-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41d4e58
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41d2360 buf>
    def_stmt buf_40 = PHI <buf_59(8), buf_64(14)>
    version 40
    ptr-info 0x7fd7a4216030>
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :0========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;31m  find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:4 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_27 = buf_64 + len_42;
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_27 = buf_64 + len_42;
In function ‘cmd_string_string’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:8: warning: use location
     buf[len++] = ch;
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_89 = VDEF <.MEM_88>
*_27 = _28;
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_27 = _28;
In function ‘cmd_string_string’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_89 = VDEF <.MEM_88>
*_27 = _28;
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_27 = _28;
In function ‘cmd_string_string’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location
this stmt have mutiple branch --------

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7a41d4e58
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41d2360 buf>
    def_stmt buf_40 = PHI <buf_59(8), buf_64(14)>
    version 40
    ptr-info 0x7fd7a4216030>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: use location
  free(buf);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: use location
  free(buf);
  ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: Use after free error!: free location 
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: use location
  free(buf);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: use location
  free(buf);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: use location
  free(buf);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: use location
  free(buf);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
_36 = buf_69 + len_42;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:5: warning: use location
  buf[len] = '\0';
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
_36 = buf_69 + len_42;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:5: warning: use location
  buf[len] = '\0';
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
# .MEM_92 = VDEF <.MEM_91>
*_36 = 0;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:11: warning: use location
  buf[len] = '\0';
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
# .MEM_92 = VDEF <.MEM_91>
*_36 = 0;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:11: warning: use location
  buf[len] = '\0';
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
_27 = buf_64 + len_42;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:8: warning: use location
     buf[len++] = ch;
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
# .MEM_89 = VDEF <.MEM_88>
*_27 = _28;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
# .MEM_89 = VDEF <.MEM_88>
*_27 = _28;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fd7a4182d40
    type <pointer_type 0x7fd7a41bd690
        type <array_type 0x7fd7a41b4348 type <integer_type 0x7fd7a418e9d8 char>
            QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 structural equality domain <integer_type 0x7fd7a41b42a0>
            pointer_to_this <pointer_type 0x7fd7a41bd690>>
        unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    readonly constant
    arg 0 <string_cst 0x7fd7a41cb7c8 type <array_type 0x7fd7a41b4348>
        readonly constant static "\000">
    ./benchmarks/tmux/leak_10/tmux_leak_10.c:138:11 start: ./benchmarks/tmux/leak_10/tmux_leak_10.c:138:11 finish: ./benchmarks/tmux/leak_10/tmux_leak_10.c:138:11>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd7a41d4d80
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
   
    def_stmt _37 = envent_72(D)->value;
    version 37
    ptr-info 0x7fd7a4216018>
# VUSE <.MEM_93>
_37 = envent_72(D)->value;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_94 = VDEF <.MEM_93>
_74 = strdup (_37);
bb index := 20
# VUSE <.MEM_15>
return _8;
In function ‘cmd_string_variable’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_94 = VDEF <.MEM_93>
_74 = strdup (_37);
bb index := 20
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_94 = VDEF <.MEM_93>
_74 = strdup (_37);
bb index := 20
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 70

======================================================================
_74 = strdup (_37);
In function ‘cmd_string_string’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:139:10: warning: use location
  return (xstrdup(envent->value));
          ^
this stmt is child function---strdup-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41d4d80
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
   
    def_stmt _37 = envent_72(D)->value;
    version 37
    ptr-info 0x7fd7a4216018>
trace fucntion name:strdup 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
In function ‘cmd_string_variable’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
In function ‘cmd_string_string’:
lto1: warning: use location
this stmt have mutiple branch --------

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7a41d4d80
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
   
    def_stmt _37 = envent_72(D)->value;
    version 37
    ptr-info 0x7fd7a4216018>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:cmd_string_variable========= [0m
[40;42m =======pre_check_funciton:cmd_string_string========= [0m
[40;42m =======start_check_funciton:cmd_string_string========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fd7a466c750
    type <pointer_type 0x7fd7a418edc8
        type <integer_type 0x7fd7a418ed20 char readonly string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418edc8>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fd7a41da000 s>
    def_stmt GIMPLE_NOP
    version 19
    ptr-info 0x7fd7a42161e0>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_40>
ch_22 = cmd_string_getc (s_19(D), p_20(D));
bb index := 19
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_40>
ch_22 = cmd_string_getc (s_19(D), p_20(D));
bb index := 19
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_40>
ch_22 = cmd_string_getc (s_19(D), p_20(D));
bb index := 19
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_40>
ch_22 = cmd_string_getc (s_19(D), p_20(D));
bb index := 19
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_40>
ch_22 = cmd_string_getc (s_19(D), p_20(D));
bb index := 19
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_40>
ch_22 = cmd_string_getc (s_19(D), p_20(D));
bb index := 19
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_40>
ch_22 = cmd_string_getc (s_19(D), p_20(D));
bb index := 19
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_40>
ch_22 = cmd_string_getc (s_19(D), p_20(D));
bb index := 19
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_40>
ch_22 = cmd_string_getc (s_19(D), p_20(D));
bb index := 19
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_40>
ch_22 = cmd_string_getc (s_19(D), p_20(D));
bb index := 19
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ch_22 = cmd_string_getc (s_19(D), p_20(D));
./benchmarks/tmux/leak_10/tmux_leak_10.c:156:8: warning: use location
  while ((ch = cmd_string_getc(s, p)) != endch) {
        ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fd7a466c750
    type <pointer_type 0x7fd7a418edc8
        type <integer_type 0x7fd7a418ed20 char readonly string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418edc8>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fd7a41da000 s>
    def_stmt GIMPLE_NOP
    version 19
    ptr-info 0x7fd7a42161e0>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ch_8 = PHI <ch_22(3), ch_22(4), ch_30(5), 27(6), 13(7), 10(8), 9(9), ch_22(10)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = (char) ch_8;
./benchmarks/tmux/leak_10/tmux_leak_10.c:191:14: warning: use location
   buf[len++] = ch;
              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_3 = _4;
./benchmarks/tmux/leak_10/tmux_leak_10.c:191:14: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
t_32 = cmd_string_variable (s_19(D), p_20(D));
./benchmarks/tmux/leak_10/tmux_leak_10.c:183:7: warning: use location
    if ((t = cmd_string_variable(s, p)) == NULL)
       ^
this stmt is child function---cmd_string_variable-----

 ================== trace ================== 
 <ssa_name 0x7fd7a466c750
    type <pointer_type 0x7fd7a418edc8
        type <integer_type 0x7fd7a418ed20 char readonly string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418edc8>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fd7a41da000 s>
    def_stmt GIMPLE_NOP
    version 19
    ptr-info 0x7fd7a42161e0>
trace fucntion name:cmd_string_variable 
[40;44m =======trace_function_path cmd_string_variable  function_call count: 4 level :0========  [0m
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :1========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:cmd_string_getc========= [0m
[40;46m =======add node_fun stack:cmd_string_getc========= [0m
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :1========  [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (t_32 == 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:183:7: warning: use location
if (t_32 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:183:7: warning: use location
Cond in fucntion cmd_string_string basic block 11
 ================== possible direct basic block ================= 
from cmd_string_string basic block 17
 ================== possible direct basic block ================= 
from cmd_string_string basic block 12
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ch_30 = cmd_string_getc (s_19(D), p_20(D));
./benchmarks/tmux/leak_10/tmux_leak_10.c:163:4: warning: use location
    switch (ch = cmd_string_getc(s, p)) {
    ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fd7a466c750
    type <pointer_type 0x7fd7a418edc8
        type <integer_type 0x7fd7a418ed20 char readonly string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418edc8>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fd7a41da000 s>
    def_stmt GIMPLE_NOP
    version 19
    ptr-info 0x7fd7a42161e0>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ch_30 = cmd_string_getc (s_19(D), p_20(D));
./benchmarks/tmux/leak_10/tmux_leak_10.c:163:4: warning: use location
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fd7a466c750
    type <pointer_type 0x7fd7a418edc8
        type <integer_type 0x7fd7a418ed20 char readonly string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418edc8>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fd7a41da000 s>
    def_stmt GIMPLE_NOP
    version 19
    ptr-info 0x7fd7a42161e0>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7a466c750
    type <pointer_type 0x7fd7a418edc8
        type <integer_type 0x7fd7a418ed20 char readonly string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418edc8>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fd7a41da000 s>
    def_stmt GIMPLE_NOP
    version 19
    ptr-info 0x7fd7a42161e0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd7a466c750
    type <pointer_type 0x7fd7a418edc8
        type <integer_type 0x7fd7a418ed20 char readonly string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418edc8>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fd7a41da000 s>
    def_stmt GIMPLE_NOP
    version 19
    ptr-info 0x7fd7a42161e0>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_40>
ch_22 = cmd_string_getc (s_19(D), p_20(D));
bb index := 19
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_40>
ch_22 = cmd_string_getc (s_19(D), p_20(D));
bb index := 19
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_40>
ch_22 = cmd_string_getc (s_19(D), p_20(D));
bb index := 19
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_40>
ch_22 = cmd_string_getc (s_19(D), p_20(D));
bb index := 19
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_40>
ch_22 = cmd_string_getc (s_19(D), p_20(D));
bb index := 19
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_40>
ch_22 = cmd_string_getc (s_19(D), p_20(D));
bb index := 19
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_40>
ch_22 = cmd_string_getc (s_19(D), p_20(D));
bb index := 19
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_40>
ch_22 = cmd_string_getc (s_19(D), p_20(D));
bb index := 19
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_40>
ch_22 = cmd_string_getc (s_19(D), p_20(D));
bb index := 19
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_40>
ch_22 = cmd_string_getc (s_19(D), p_20(D));
bb index := 19
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ch_22 = cmd_string_getc (s_19(D), p_20(D));
./benchmarks/tmux/leak_10/tmux_leak_10.c:156:8: warning: use location
  while ((ch = cmd_string_getc(s, p)) != endch) {
        ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fd7a466c750
    type <pointer_type 0x7fd7a418edc8
        type <integer_type 0x7fd7a418ed20 char readonly string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418edc8>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fd7a41da000 s>
    def_stmt GIMPLE_NOP
    version 19
    ptr-info 0x7fd7a42161e0>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ch_8 = PHI <ch_22(3), ch_22(4), ch_30(5), 27(6), 13(7), 10(8), 9(9), ch_22(10)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = (char) ch_8;
./benchmarks/tmux/leak_10/tmux_leak_10.c:191:14: warning: use location
   buf[len++] = ch;
              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_3 = _4;
./benchmarks/tmux/leak_10/tmux_leak_10.c:191:14: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
t_32 = cmd_string_variable (s_19(D), p_20(D));
./benchmarks/tmux/leak_10/tmux_leak_10.c:183:7: warning: use location
    if ((t = cmd_string_variable(s, p)) == NULL)
       ^
this stmt is child function---cmd_string_variable-----

 ================== trace ================== 
 <ssa_name 0x7fd7a466c750
    type <pointer_type 0x7fd7a418edc8
        type <integer_type 0x7fd7a418ed20 char readonly string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418edc8>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fd7a41da000 s>
    def_stmt GIMPLE_NOP
    version 19
    ptr-info 0x7fd7a42161e0>
trace fucntion name:cmd_string_variable 
[40;44m =======trace_function_path cmd_string_variable  function_call count: 4 level :0========  [0m
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :1========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:cmd_string_getc========= [0m
[40;46m =======add node_fun stack:cmd_string_getc========= [0m
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :1========  [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (t_32 == 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:183:7: warning: use location
if (t_32 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:183:7: warning: use location
Cond in fucntion cmd_string_string basic block 11
 ================== possible direct basic block ================= 
from cmd_string_string basic block 17
 ================== possible direct basic block ================= 
from cmd_string_string basic block 12
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ch_30 = cmd_string_getc (s_19(D), p_20(D));
./benchmarks/tmux/leak_10/tmux_leak_10.c:163:4: warning: use location
    switch (ch = cmd_string_getc(s, p)) {
    ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fd7a466c750
    type <pointer_type 0x7fd7a418edc8
        type <integer_type 0x7fd7a418ed20 char readonly string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418edc8>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fd7a41da000 s>
    def_stmt GIMPLE_NOP
    version 19
    ptr-info 0x7fd7a42161e0>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ch_30 = cmd_string_getc (s_19(D), p_20(D));
./benchmarks/tmux/leak_10/tmux_leak_10.c:163:4: warning: use location
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fd7a466c750
    type <pointer_type 0x7fd7a418edc8
        type <integer_type 0x7fd7a418ed20 char readonly string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418edc8>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fd7a41da000 s>
    def_stmt GIMPLE_NOP
    version 19
    ptr-info 0x7fd7a42161e0>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7a466c750
    type <pointer_type 0x7fd7a418edc8
        type <integer_type 0x7fd7a418ed20 char readonly string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418edc8>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fd7a41da000 s>
    def_stmt GIMPLE_NOP
    version 19
    ptr-info 0x7fd7a42161e0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd7a41d6ea0
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41d2c60 buf>
    def_stmt buf_9 = PHI <0B(2), buf_16(15)>
    version 9
    ptr-info 0x7fd7a4216198>
buf_9 = PHI <0B(2), buf_16(15)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
bb index := 17
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 18

======================================================================
free (buf_9);
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: use location
  free(buf);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (buf_9);
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_43 = VDEF <.MEM_42>
buf_25 = xrealloc (buf_9, 1, _6);
bb index := 16
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 18

======================================================================
buf_25 = xrealloc (buf_9, 1, _6);
./benchmarks/tmux/leak_10/tmux_leak_10.c:194:6: warning: use location
  buf = xrealloc(buf, 1, len + 1);
      ^
this stmt is child function---xrealloc-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41d6ea0
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41d2c60 buf>
    def_stmt buf_9 = PHI <0B(2), buf_16(15)>
    version 9
    ptr-info 0x7fd7a4216198>
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :0========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;31m  find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_11 = PHI <buf_25(16), 0B(17)>
bb index := 18
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_11 = PHI <buf_25(16), 0B(17)>
bb index := 18
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 18

======================================================================
_11 = PHI <buf_25(16), 0B(17)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_16 = PHI <buf_9(12), buf_34(14)>
bb index := 15
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_16 = PHI <buf_9(12), buf_34(14)>
bb index := 15
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_16 = PHI <buf_9(12), buf_34(14)>
bb index := 15
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_16 = PHI <buf_9(12), buf_34(14)>
bb index := 15
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_16 = PHI <buf_9(12), buf_34(14)>
bb index := 15
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_16 = PHI <buf_9(12), buf_34(14)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_9 = PHI <0B(2), buf_16(15)>
bb index := 19
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_9 = PHI <0B(2), buf_16(15)>
bb index := 19
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_9 = PHI <0B(2), buf_16(15)>
bb index := 19
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_9 = PHI <0B(2), buf_16(15)>
bb index := 19
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_9 = PHI <0B(2), buf_16(15)>
bb index := 19
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_9 = PHI <0B(2), buf_16(15)>
bb index := 19
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_9 = PHI <0B(2), buf_16(15)>
bb index := 19
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_9 = PHI <0B(2), buf_16(15)>
bb index := 19
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_9 = PHI <0B(2), buf_16(15)>
bb index := 19
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_9 = PHI <0B(2), buf_16(15)>
bb index := 19
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_9 = PHI <0B(2), buf_16(15)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_34 = xrealloc (buf_9, 1, _1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:190:7: warning: use location
   buf = xrealloc(buf, 1, len + 1);
       ^
this stmt is child function---xrealloc-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41d6ea0
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41d2c60 buf>
    def_stmt buf_9 = PHI <0B(2), buf_16(15)>
    version 9
    ptr-info 0x7fd7a4216198>
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :0========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;31m  find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_3 = buf_34 + len_10;
./benchmarks/tmux/leak_10/tmux_leak_10.c:191:6: warning: use location
   buf[len++] = ch;
      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_3 = _4;
./benchmarks/tmux/leak_10/tmux_leak_10.c:191:14: warning: use location
   buf[len++] = ch;
              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_3 = _4;
./benchmarks/tmux/leak_10/tmux_leak_10.c:191:14: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7a41d6ea0
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41d2c60 buf>
    def_stmt buf_9 = PHI <0B(2), buf_16(15)>
    version 9
    ptr-info 0x7fd7a4216198>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: use location
  free(buf);
  ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
buf_25 = xrealloc (buf_9, 1, _6);
./benchmarks/tmux/leak_10/tmux_leak_10.c:194:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: use location
  free(buf);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_36>
buf_34 = xrealloc (buf_9, 1, _1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:190:7: warning: Use after free error!: free location 
   buf = xrealloc(buf, 1, len + 1);
       ^
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: use location
  free(buf);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: Use after free error!: free location 
_11 = PHI <buf_25(16), 0B(17)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
buf_25 = xrealloc (buf_9, 1, _6);
./benchmarks/tmux/leak_10/tmux_leak_10.c:194:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
_11 = PHI <buf_25(16), 0B(17)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_36>
buf_34 = xrealloc (buf_9, 1, _1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:190:7: warning: Use after free error!: free location 
   buf = xrealloc(buf, 1, len + 1);
       ^
_11 = PHI <buf_25(16), 0B(17)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: Use after free error!: free location 
  free(buf);
  ^
_11 = PHI <buf_25(16), 0B(17)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: Use after free error!: free location 
buf_16 = PHI <buf_9(12), buf_34(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
buf_25 = xrealloc (buf_9, 1, _6);
./benchmarks/tmux/leak_10/tmux_leak_10.c:194:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
buf_16 = PHI <buf_9(12), buf_34(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_36>
buf_34 = xrealloc (buf_9, 1, _1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:190:7: warning: Use after free error!: free location 
   buf = xrealloc(buf, 1, len + 1);
       ^
buf_16 = PHI <buf_9(12), buf_34(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_16 = PHI <buf_9(12), buf_34(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: Use after free error!: free location 
buf_9 = PHI <0B(2), buf_16(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
buf_25 = xrealloc (buf_9, 1, _6);
./benchmarks/tmux/leak_10/tmux_leak_10.c:194:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
buf_9 = PHI <0B(2), buf_16(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_36>
buf_34 = xrealloc (buf_9, 1, _1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:190:7: warning: Use after free error!: free location 
   buf = xrealloc(buf, 1, len + 1);
       ^
buf_9 = PHI <0B(2), buf_16(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_9 = PHI <0B(2), buf_16(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_36>
buf_34 = xrealloc (buf_9, 1, _1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:190:7: warning: Use after free error!: free location 
   buf = xrealloc(buf, 1, len + 1);
       ^
_3 = buf_34 + len_10;
./benchmarks/tmux/leak_10/tmux_leak_10.c:191:6: warning: use location
   buf[len++] = ch;
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_36>
buf_34 = xrealloc (buf_9, 1, _1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:190:7: warning: Use after free error!: free location 
   buf = xrealloc(buf, 1, len + 1);
       ^
# .MEM_48 = VDEF <.MEM_47>
*_3 = _4;
./benchmarks/tmux/leak_10/tmux_leak_10.c:191:14: warning: use location
   buf[len++] = ch;
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_36>
buf_34 = xrealloc (buf_9, 1, _1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:190:7: warning: Use after free error!: free location 
   buf = xrealloc(buf, 1, len + 1);
       ^
# .MEM_48 = VDEF <.MEM_47>
*_3 = _4;
./benchmarks/tmux/leak_10/tmux_leak_10.c:191:14: warning: use location
   buf[len++] = ch;
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd7a41d6ea0
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41d2c60 buf>
    def_stmt buf_9 = PHI <0B(2), buf_16(15)>
    version 9
    ptr-info 0x7fd7a4216198>
buf_9 = PHI <0B(2), buf_16(15)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
bb index := 17
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 18

======================================================================
free (buf_9);
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: use location
  free(buf);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (buf_9);
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_43 = VDEF <.MEM_42>
buf_25 = xrealloc (buf_9, 1, _6);
bb index := 16
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 18

======================================================================
buf_25 = xrealloc (buf_9, 1, _6);
./benchmarks/tmux/leak_10/tmux_leak_10.c:194:6: warning: use location
  buf = xrealloc(buf, 1, len + 1);
      ^
this stmt is child function---xrealloc-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41d6ea0
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41d2c60 buf>
    def_stmt buf_9 = PHI <0B(2), buf_16(15)>
    version 9
    ptr-info 0x7fd7a4216198>
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :0========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;31m  find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_11 = PHI <buf_25(16), 0B(17)>
bb index := 18
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_11 = PHI <buf_25(16), 0B(17)>
bb index := 18
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 18

======================================================================
_11 = PHI <buf_25(16), 0B(17)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_16 = PHI <buf_9(12), buf_34(14)>
bb index := 15
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_16 = PHI <buf_9(12), buf_34(14)>
bb index := 15
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_16 = PHI <buf_9(12), buf_34(14)>
bb index := 15
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_16 = PHI <buf_9(12), buf_34(14)>
bb index := 15
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_16 = PHI <buf_9(12), buf_34(14)>
bb index := 15
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_16 = PHI <buf_9(12), buf_34(14)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_9 = PHI <0B(2), buf_16(15)>
bb index := 19
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_9 = PHI <0B(2), buf_16(15)>
bb index := 19
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_9 = PHI <0B(2), buf_16(15)>
bb index := 19
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_9 = PHI <0B(2), buf_16(15)>
bb index := 19
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_9 = PHI <0B(2), buf_16(15)>
bb index := 19
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_9 = PHI <0B(2), buf_16(15)>
bb index := 19
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_9 = PHI <0B(2), buf_16(15)>
bb index := 19
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_9 = PHI <0B(2), buf_16(15)>
bb index := 19
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_9 = PHI <0B(2), buf_16(15)>
bb index := 19
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_9 = PHI <0B(2), buf_16(15)>
bb index := 19
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_9 = PHI <0B(2), buf_16(15)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_34 = xrealloc (buf_9, 1, _1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:190:7: warning: use location
   buf = xrealloc(buf, 1, len + 1);
       ^
this stmt is child function---xrealloc-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41d6ea0
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41d2c60 buf>
    def_stmt buf_9 = PHI <0B(2), buf_16(15)>
    version 9
    ptr-info 0x7fd7a4216198>
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :0========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;31m  find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_3 = buf_34 + len_10;
./benchmarks/tmux/leak_10/tmux_leak_10.c:191:6: warning: use location
   buf[len++] = ch;
      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_3 = _4;
./benchmarks/tmux/leak_10/tmux_leak_10.c:191:14: warning: use location
   buf[len++] = ch;
              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_3 = _4;
./benchmarks/tmux/leak_10/tmux_leak_10.c:191:14: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7a41d6ea0
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41d2c60 buf>
    def_stmt buf_9 = PHI <0B(2), buf_16(15)>
    version 9
    ptr-info 0x7fd7a4216198>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: use location
  free(buf);
  ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
buf_25 = xrealloc (buf_9, 1, _6);
./benchmarks/tmux/leak_10/tmux_leak_10.c:194:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: use location
  free(buf);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_36>
buf_34 = xrealloc (buf_9, 1, _1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:190:7: warning: Use after free error!: free location 
   buf = xrealloc(buf, 1, len + 1);
       ^
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: use location
  free(buf);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: Use after free error!: free location 
_11 = PHI <buf_25(16), 0B(17)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
buf_25 = xrealloc (buf_9, 1, _6);
./benchmarks/tmux/leak_10/tmux_leak_10.c:194:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
_11 = PHI <buf_25(16), 0B(17)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_36>
buf_34 = xrealloc (buf_9, 1, _1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:190:7: warning: Use after free error!: free location 
   buf = xrealloc(buf, 1, len + 1);
       ^
_11 = PHI <buf_25(16), 0B(17)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: Use after free error!: free location 
  free(buf);
  ^
_11 = PHI <buf_25(16), 0B(17)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: Use after free error!: free location 
buf_16 = PHI <buf_9(12), buf_34(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
buf_25 = xrealloc (buf_9, 1, _6);
./benchmarks/tmux/leak_10/tmux_leak_10.c:194:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
buf_16 = PHI <buf_9(12), buf_34(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_36>
buf_34 = xrealloc (buf_9, 1, _1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:190:7: warning: Use after free error!: free location 
   buf = xrealloc(buf, 1, len + 1);
       ^
buf_16 = PHI <buf_9(12), buf_34(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_16 = PHI <buf_9(12), buf_34(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: Use after free error!: free location 
buf_9 = PHI <0B(2), buf_16(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
buf_25 = xrealloc (buf_9, 1, _6);
./benchmarks/tmux/leak_10/tmux_leak_10.c:194:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
buf_9 = PHI <0B(2), buf_16(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_36>
buf_34 = xrealloc (buf_9, 1, _1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:190:7: warning: Use after free error!: free location 
   buf = xrealloc(buf, 1, len + 1);
       ^
buf_9 = PHI <0B(2), buf_16(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_9 = PHI <0B(2), buf_16(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_36>
buf_34 = xrealloc (buf_9, 1, _1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:190:7: warning: Use after free error!: free location 
   buf = xrealloc(buf, 1, len + 1);
       ^
_3 = buf_34 + len_10;
./benchmarks/tmux/leak_10/tmux_leak_10.c:191:6: warning: use location
   buf[len++] = ch;
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_36>
buf_34 = xrealloc (buf_9, 1, _1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:190:7: warning: Use after free error!: free location 
   buf = xrealloc(buf, 1, len + 1);
       ^
# .MEM_48 = VDEF <.MEM_47>
*_3 = _4;
./benchmarks/tmux/leak_10/tmux_leak_10.c:191:14: warning: use location
   buf[len++] = ch;
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_36>
buf_34 = xrealloc (buf_9, 1, _1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:190:7: warning: Use after free error!: free location 
   buf = xrealloc(buf, 1, len + 1);
       ^
# .MEM_48 = VDEF <.MEM_47>
*_3 = _4;
./benchmarks/tmux/leak_10/tmux_leak_10.c:191:14: warning: use location
   buf[len++] = ch;
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:cmd_string_string========= [0m
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 23 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:fclose========= [0m
[40;33m =======POP node_fun stack:fclose========= [0m
[40;42m =======pre add _ fucntion:__fgets_alias========= [0m
[40;33m =======POP node_fun stack:__fgets_alias========= [0m
[40;42m =======pre add _ fucntion:__fgets_chk_warn========= [0m
[40;33m =======POP node_fun stack:__fgets_chk_warn========= [0m
[40;42m =======pre add _ fucntion:__builtin_object_size========= [0m
[40;33m =======POP node_fun stack:__builtin_object_size========= [0m
[40;42m =======pre add _ fucntion:__builtin_constant_p========= [0m
[40;33m =======POP node_fun stack:__builtin_constant_p========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path xrealloc  function_call count: 3 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;33m =======POP node_fun stack:realloc========= [0m
[40;42m =======pre_check_funciton:xrealloc========= [0m
[40;42m =======start_check_funciton:xrealloc========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fd7a466cb88
    type <pointer_type 0x7fd7a467f0a8
        type <void_type 0x7fd7a4678f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fd7a467f0a8>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fd7a4684bd0>>
    var <var_decl 0x7fd7a53f9cf0 newptr>
    def_stmt newptr_11 = realloc (oldptr_9(D), newsize_7);
    version 11
    ptr-info 0x7fd7a41cbf60>
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);

 ================== trace ptable================== 
trace fucntion name:realloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---realloc-----
this Reserved word function ------realloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
In function ‘xrealloc’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
bb index := 6
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 18

======================================================================
newptr_11 = realloc (oldptr_9(D), newsize_7);
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
this stmt is child function---realloc-----

 ================== find ================== 
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
[40;32m    FIND realloc STMT count:1 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = newptr_11;
bb index := 8
# VUSE <.MEM_20>
return newptr_11;
In function ‘xrealloc’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 8

======================================================================
_12 = newptr_11;
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newptr_11 == 0B)
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
In function ‘xrealloc’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newptr_11 == 0B)
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newptr_11 == 0B)
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newptr_11 == 0B)
bb index := 6
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 18

======================================================================
if (newptr_11 == 0B)
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
if (newptr_11 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
Cond in fucntion xrealloc basic block 6
 ================== possible direct basic block ================= 
from xrealloc basic block 7
 ================== possible direct basic block ================= 
from xrealloc basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
In function ‘xrealloc’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 70

======================================================================
if (newsize_7 == 0)
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:53:5: warning: use location
  if (newsize == 0)
     ^
if (newsize_7 == 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:53:5: warning: use location
Cond in fucntion xrealloc basic block 2
 ================== possible direct basic block ================= 
from xrealloc basic block 3
 ================== possible direct basic block ================= 
from xrealloc basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7a466cb88
    type <pointer_type 0x7fd7a467f0a8
        type <void_type 0x7fd7a4678f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fd7a467f0a8>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fd7a4684bd0>>
    var <var_decl 0x7fd7a53f9cf0 newptr>
    def_stmt newptr_11 = realloc (oldptr_9(D), newsize_7);
    version 11
    ptr-info 0x7fd7a41cbf60>
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: Use after free error!: free location 
_12 = newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: Use after free error!: free location 
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
_12 = newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: Use after free error!: free location 
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
if (newptr_11 == 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: Use after free error!: free location 
if (newptr_11 == 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;32m   Maybe you don't have memory leak.... need more checks  [0m

======================================================================


dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fd7a4664f90 type <integer_type 0x7fd7a46785e8 int> constant 1>

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fd7a4664f90 type <integer_type 0x7fd7a46785e8 int> constant 1>
[40;33m =======POP node_fun stack:xrealloc========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;33m =======POP node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:getpwnam========= [0m
[40;33m =======POP node_fun stack:getpwnam========= [0m
[40;42m =======pre add _ fucntion:cmd_string_string========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path cmd_string_string  function_call count: 4 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path xrealloc  function_call count: 3 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;33m =======POP node_fun stack:realloc========= [0m
[40;42m =======pre_check_funciton:xrealloc========= [0m
[40;42m =======start_check_funciton:xrealloc========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fd7a466cb88
    type <pointer_type 0x7fd7a467f0a8
        type <void_type 0x7fd7a4678f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fd7a467f0a8>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fd7a4684bd0>>
    var <var_decl 0x7fd7a53f9cf0 newptr>
    def_stmt newptr_11 = realloc (oldptr_9(D), newsize_7);
    version 11
    ptr-info 0x7fd7a41cbf60>
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);

 ================== trace ptable================== 
trace fucntion name:realloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---realloc-----
this Reserved word function ------realloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
In function ‘xrealloc’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
bb index := 6
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 18

======================================================================
newptr_11 = realloc (oldptr_9(D), newsize_7);
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
this stmt is child function---realloc-----

 ================== find ================== 
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
[40;32m    FIND realloc STMT count:1 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = newptr_11;
bb index := 8
# VUSE <.MEM_20>
return newptr_11;
In function ‘xrealloc’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 8

======================================================================
_12 = newptr_11;
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newptr_11 == 0B)
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
In function ‘xrealloc’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newptr_11 == 0B)
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newptr_11 == 0B)
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newptr_11 == 0B)
bb index := 6
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 18

======================================================================
if (newptr_11 == 0B)
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
if (newptr_11 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
Cond in fucntion xrealloc basic block 6
 ================== possible direct basic block ================= 
from xrealloc basic block 7
 ================== possible direct basic block ================= 
from xrealloc basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
In function ‘xrealloc’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 70

======================================================================
if (newsize_7 == 0)
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:53:5: warning: use location
  if (newsize == 0)
     ^
if (newsize_7 == 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:53:5: warning: use location
Cond in fucntion xrealloc basic block 2
 ================== possible direct basic block ================= 
from xrealloc basic block 3
 ================== possible direct basic block ================= 
from xrealloc basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7a466cb88
    type <pointer_type 0x7fd7a467f0a8
        type <void_type 0x7fd7a4678f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fd7a467f0a8>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fd7a4684bd0>>
    var <var_decl 0x7fd7a53f9cf0 newptr>
    def_stmt newptr_11 = realloc (oldptr_9(D), newsize_7);
    version 11
    ptr-info 0x7fd7a41cbf60>
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: Use after free error!: free location 
_12 = newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: Use after free error!: free location 
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
_12 = newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: Use after free error!: free location 
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
if (newptr_11 == 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: Use after free error!: free location 
if (newptr_11 == 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;32m   Maybe you don't have memory leak.... need more checks  [0m

======================================================================


dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fd7a4664f90 type <integer_type 0x7fd7a46785e8 int> constant 1>

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fd7a4664f90 type <integer_type 0x7fd7a46785e8 int> constant 1>
[40;33m =======POP node_fun stack:xrealloc========= [0m
[40;42m =======pre add _ fucntion:cmd_string_getc========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path cmd_string_getc  function_call count: 0 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:cmd_string_getc========= [0m
[40;42m =======start_check_funciton:cmd_string_getc========= [0m
[40;33m =======POP node_fun stack:cmd_string_getc========= [0m
[40;42m =======pre add _ fucntion:cmd_string_variable========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path cmd_string_variable  function_call count: 4 level :2========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;33m =======POP node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path xrealloc  function_call count: 3 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;33m =======POP node_fun stack:realloc========= [0m
[40;42m =======pre_check_funciton:xrealloc========= [0m
[40;42m =======start_check_funciton:xrealloc========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fd7a466cb88
    type <pointer_type 0x7fd7a467f0a8
        type <void_type 0x7fd7a4678f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fd7a467f0a8>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fd7a4684bd0>>
    var <var_decl 0x7fd7a53f9cf0 newptr>
    def_stmt newptr_11 = realloc (oldptr_9(D), newsize_7);
    version 11
    ptr-info 0x7fd7a41cbf60>
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);

 ================== trace ptable================== 
trace fucntion name:realloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---realloc-----
this Reserved word function ------realloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
In function ‘xrealloc’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
bb index := 6
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 18

======================================================================
newptr_11 = realloc (oldptr_9(D), newsize_7);
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
this stmt is child function---realloc-----

 ================== find ================== 
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
[40;32m    FIND realloc STMT count:1 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = newptr_11;
bb index := 8
# VUSE <.MEM_20>
return newptr_11;
In function ‘xrealloc’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 8

======================================================================
_12 = newptr_11;
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newptr_11 == 0B)
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
In function ‘xrealloc’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newptr_11 == 0B)
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newptr_11 == 0B)
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newptr_11 == 0B)
bb index := 6
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 18

======================================================================
if (newptr_11 == 0B)
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
if (newptr_11 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
Cond in fucntion xrealloc basic block 6
 ================== possible direct basic block ================= 
from xrealloc basic block 7
 ================== possible direct basic block ================= 
from xrealloc basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
In function ‘xrealloc’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 70

======================================================================
if (newsize_7 == 0)
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:53:5: warning: use location
  if (newsize == 0)
     ^
if (newsize_7 == 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:53:5: warning: use location
Cond in fucntion xrealloc basic block 2
 ================== possible direct basic block ================= 
from xrealloc basic block 3
 ================== possible direct basic block ================= 
from xrealloc basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7a466cb88
    type <pointer_type 0x7fd7a467f0a8
        type <void_type 0x7fd7a4678f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fd7a467f0a8>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fd7a4684bd0>>
    var <var_decl 0x7fd7a53f9cf0 newptr>
    def_stmt newptr_11 = realloc (oldptr_9(D), newsize_7);
    version 11
    ptr-info 0x7fd7a41cbf60>
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: Use after free error!: free location 
_12 = newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: Use after free error!: free location 
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
_12 = newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: Use after free error!: free location 
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
if (newptr_11 == 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: Use after free error!: free location 
if (newptr_11 == 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;32m   Maybe you don't have memory leak.... need more checks  [0m

======================================================================


dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fd7a4664f90 type <integer_type 0x7fd7a46785e8 int> constant 1>

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fd7a4664f90 type <integer_type 0x7fd7a46785e8 int> constant 1>
[40;33m =======POP node_fun stack:xrealloc========= [0m
[40;42m =======pre add _ fucntion:cmd_string_getc========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path cmd_string_getc  function_call count: 0 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:cmd_string_getc========= [0m
[40;42m =======start_check_funciton:cmd_string_getc========= [0m
[40;33m =======POP node_fun stack:cmd_string_getc========= [0m
[40;42m =======pre_check_funciton:cmd_string_variable========= [0m
[40;42m =======start_check_funciton:cmd_string_variable========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fd7a41d6318
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
   
    def_stmt _76 = strdup ("");
    version 76
    ptr-info 0x7fd7a4216150>
# .MEM_95 = VDEF <.MEM_93>
_76 = strdup ("");

 ================== trace ptable================== 
trace fucntion name:strdup 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---strdup-----
this Reserved word function ------strdup-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_95 = VDEF <.MEM_93>
_76 = strdup ("");
bb index := 19
# VUSE <.MEM_15>
return _8;
In function ‘cmd_string_variable’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_95 = VDEF <.MEM_93>
_76 = strdup ("");
bb index := 19
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_95 = VDEF <.MEM_93>
_76 = strdup ("");
bb index := 19
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 70

======================================================================
_76 = strdup ("");
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:138:11: warning: use location
   return (xstrdup(""));
           ^
this stmt is child function---strdup-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41d6318
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
   
    def_stmt _76 = strdup ("");
    version 76
    ptr-info 0x7fd7a4216150>
trace fucntion name:strdup 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
In function ‘cmd_string_variable’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch --------

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7a41d6318
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
   
    def_stmt _76 = strdup ("");
    version 76
    ptr-info 0x7fd7a4216150>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd7a41d62d0
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
   
    def_stmt _74 = strdup (_37);
    version 74
    ptr-info 0x7fd7a4216138>
# .MEM_94 = VDEF <.MEM_93>
_74 = strdup (_37);

 ================== trace ptable================== 
trace fucntion name:strdup 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---strdup-----
this Reserved word function ------strdup-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_94 = VDEF <.MEM_93>
_74 = strdup (_37);
bb index := 20
# VUSE <.MEM_15>
return _8;
In function ‘cmd_string_variable’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_94 = VDEF <.MEM_93>
_74 = strdup (_37);
bb index := 20
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_94 = VDEF <.MEM_93>
_74 = strdup (_37);
bb index := 20
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 70

======================================================================
_74 = strdup (_37);
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:139:10: warning: use location
  return (xstrdup(envent->value));
          ^
this stmt is child function---strdup-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41d62d0
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
   
    def_stmt _74 = strdup (_37);
    version 74
    ptr-info 0x7fd7a4216138>
trace fucntion name:strdup 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
In function ‘cmd_string_variable’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch --------

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7a41d62d0
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
   
    def_stmt _74 = strdup (_37);
    version 74
    ptr-info 0x7fd7a4216138>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd7a41d4f78
    type <pointer_type 0x7fd7a418edc8
        type <integer_type 0x7fd7a418ed20 char readonly string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418edc8>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fd7a41bef00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fd7a4216078>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ch_62 = cmd_string_getc (s_50(D), p_51(D));
./benchmarks/tmux/leak_10/tmux_leak_10.c:116:7: warning: use location
    ch = cmd_string_getc(s, p);
       ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41d4f78
    type <pointer_type 0x7fd7a418edc8
        type <integer_type 0x7fd7a418ed20 char readonly string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418edc8>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fd7a41bef00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fd7a4216078>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_32 = ch_62 != -1;
bb index := 16
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 8

======================================================================
_32 = ch_62 != -1;
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:130:9: warning: use location
  if (ch != EOF && fch != '{')
         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_34 = _32 & _33;
bb index := 16
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 8

======================================================================
_34 = _32 & _33;
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:130:16: warning: use location
  if (ch != EOF && fch != '{')
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_34 != 0)
bb index := 16
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 8

======================================================================
if (_34 != 0)
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:130:5: warning: use location
  if (ch != EOF && fch != '{')
     ^
if (_34 != 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:130:5: warning: use location
Cond in fucntion cmd_string_variable basic block 16
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 17
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 18
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_30 = ch_62 != 125;
bb index := 15
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_30 = ch_62 != 125;
bb index := 15
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 8

======================================================================
_30 = ch_62 != 125;
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:128:23: warning: use location
  if (fch == '{' && ch != '}')
                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_31 = _29 & _30;
bb index := 15
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_31 = _29 & _30;
bb index := 15
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 8

======================================================================
_31 = _29 & _30;
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:128:17: warning: use location
  if (fch == '{' && ch != '}')
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_28 = (char) ch_62;
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_28 = (char) ch_62;
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_89 = VDEF <.MEM_88>
*_27 = _28;
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_27 = _28;
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = (unsigned int) ch_62;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location
    if (ch == EOF || !cmd_string_other(ch))
                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_24 = _23 + 4294967248;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_24 > 9)
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:21: warning: use location
    if (ch == EOF || !cmd_string_other(ch))
                     ^
if (_24 > 9)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:21: warning: use location
Cond in fucntion cmd_string_variable basic block 12
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 15
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = (unsigned int) ch_62;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location
    if (ch == EOF || !cmd_string_other(ch))
                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = _21 + 4294967231;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_22 > 25)
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location
if (_22 > 25)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location
Cond in fucntion cmd_string_variable basic block 11
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 12
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = (unsigned int) ch_62;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = ch_62 != 95;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = _16 & _19;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (ch_62 == -1)
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:7: warning: use location
    if (ch == EOF || !cmd_string_other(ch))
       ^
if (ch_62 == -1)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:7: warning: use location
Cond in fucntion cmd_string_variable basic block 9
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 15
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
*p_51(D) = _98;
./benchmarks/tmux/leak_10/tmux_leak_10.c:76:6: warning: use location
  (*p)--;
      ^
*p_51(D) = _98;
./benchmarks/tmux/leak_10/tmux_leak_10.c:76:6: warning: use location
_97 = *p_51(D);
./benchmarks/tmux/leak_10/tmux_leak_10.c:76:3: warning: use location
  (*p)--;
   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_84 = VDEF <.MEM_83>
ch_55 = cmd_string_getc (s_50(D), p_51(D));
bb index := 3
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================
ch_55 = cmd_string_getc (s_50(D), p_51(D));
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:103:6: warning: use location
   ch = cmd_string_getc(s, p);
      ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41d4f78
    type <pointer_type 0x7fd7a418edc8
        type <integer_type 0x7fd7a418ed20 char readonly string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418edc8>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fd7a41bef00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fd7a4216078>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
ch_38 = PHI <ch_53(2), ch_55(3), ch_55(4)>
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ch_38 = PHI <ch_53(2), ch_55(3), ch_55(4)>
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================
ch_38 = PHI <ch_53(2), ch_55(3), ch_55(4)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch --------
_15 = (char) ch_38;
./benchmarks/tmux/leak_10/tmux_leak_10.c:113:14: warning: use location
   buf[len++] = ch;
              ^
*buf_59 = _15;
./benchmarks/tmux/leak_10/tmux_leak_10.c:113:14: warning: use location
_13 = (unsigned int) ch_38;
./benchmarks/tmux/leak_10/tmux_leak_10.c:108:8: warning: use location
   if (!cmd_string_first(ch)) {
        ^
_14 = _13 + 4294967231;
./benchmarks/tmux/leak_10/tmux_leak_10.c:108:8: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (unsigned int) ch_38;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (unsigned int) ch_38;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================
_9 = (unsigned int) ch_38;
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:108:8: warning: use location
   if (!cmd_string_first(ch)) {
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = ch_38 != 95;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = ch_38 != 95;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================
_8 = ch_38 != 95;
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:108:8: warning: use location
   if (!cmd_string_first(ch)) {
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = _8 & _11;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = _8 & _11;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================
_12 = _8 & _11;
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:108:8: warning: use location
   if (!cmd_string_first(ch)) {
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = (unsigned int) ch_55;
bb index := 4
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = (unsigned int) ch_55;
bb index := 4
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
_6 = (unsigned int) ch_55;
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:104:8: warning: use location
   if (!cmd_string_first(ch))
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = _6 + 4294967231;
bb index := 4
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = _6 + 4294967231;
bb index := 4
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
_7 = _6 + 4294967231;
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:104:8: warning: use location
   if (!cmd_string_first(ch))
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (unsigned int) ch_55;
bb index := 3
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================
_2 = (unsigned int) ch_55;
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:104:8: warning: use location
   if (!cmd_string_first(ch))
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = ch_55 != 95;
bb index := 3
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================
_1 = ch_55 != 95;
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:104:8: warning: use location
   if (!cmd_string_first(ch))
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _1 & _4;
bb index := 3
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================
_5 = _1 & _4;
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:104:8: warning: use location
   if (!cmd_string_first(ch))
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================
ch_53 = cmd_string_getc (s_50(D), p_51(D));
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:97:2: warning: use location
  switch (ch = cmd_string_getc(s, p)) {
  ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41d4f78
    type <pointer_type 0x7fd7a418edc8
        type <integer_type 0x7fd7a418ed20 char readonly string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418edc8>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fd7a41bef00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fd7a4216078>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================
ch_53 = cmd_string_getc (s_50(D), p_51(D));
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:97:2: warning: use location
  switch (ch = cmd_string_getc(s, p)) {
  ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41d4f78
    type <pointer_type 0x7fd7a418edc8
        type <integer_type 0x7fd7a418ed20 char readonly string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418edc8>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fd7a41bef00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fd7a4216078>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7a41d4f78
    type <pointer_type 0x7fd7a418edc8
        type <integer_type 0x7fd7a418ed20 char readonly string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418edc8>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fd7a41bef00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fd7a4216078>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd7a41d4f78
    type <pointer_type 0x7fd7a418edc8
        type <integer_type 0x7fd7a418ed20 char readonly string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418edc8>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fd7a41bef00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fd7a4216078>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ch_62 = cmd_string_getc (s_50(D), p_51(D));
./benchmarks/tmux/leak_10/tmux_leak_10.c:116:7: warning: use location
    ch = cmd_string_getc(s, p);
       ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41d4f78
    type <pointer_type 0x7fd7a418edc8
        type <integer_type 0x7fd7a418ed20 char readonly string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418edc8>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fd7a41bef00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fd7a4216078>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_32 = ch_62 != -1;
bb index := 16
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 8

======================================================================
_32 = ch_62 != -1;
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:130:9: warning: use location
  if (ch != EOF && fch != '{')
         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_34 = _32 & _33;
bb index := 16
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 8

======================================================================
_34 = _32 & _33;
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:130:16: warning: use location
  if (ch != EOF && fch != '{')
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_34 != 0)
bb index := 16
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 8

======================================================================
if (_34 != 0)
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:130:5: warning: use location
  if (ch != EOF && fch != '{')
     ^
if (_34 != 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:130:5: warning: use location
Cond in fucntion cmd_string_variable basic block 16
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 17
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 18
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_30 = ch_62 != 125;
bb index := 15
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_30 = ch_62 != 125;
bb index := 15
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 8

======================================================================
_30 = ch_62 != 125;
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:128:23: warning: use location
  if (fch == '{' && ch != '}')
                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_31 = _29 & _30;
bb index := 15
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_31 = _29 & _30;
bb index := 15
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 8

======================================================================
_31 = _29 & _30;
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:128:17: warning: use location
  if (fch == '{' && ch != '}')
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_28 = (char) ch_62;
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_28 = (char) ch_62;
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_89 = VDEF <.MEM_88>
*_27 = _28;
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_27 = _28;
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = (unsigned int) ch_62;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location
    if (ch == EOF || !cmd_string_other(ch))
                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_24 = _23 + 4294967248;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_24 > 9)
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:21: warning: use location
    if (ch == EOF || !cmd_string_other(ch))
                     ^
if (_24 > 9)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:21: warning: use location
Cond in fucntion cmd_string_variable basic block 12
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 15
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = (unsigned int) ch_62;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location
    if (ch == EOF || !cmd_string_other(ch))
                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = _21 + 4294967231;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_22 > 25)
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location
if (_22 > 25)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location
Cond in fucntion cmd_string_variable basic block 11
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 12
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = (unsigned int) ch_62;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = ch_62 != 95;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = _16 & _19;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (ch_62 == -1)
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:7: warning: use location
    if (ch == EOF || !cmd_string_other(ch))
       ^
if (ch_62 == -1)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:7: warning: use location
Cond in fucntion cmd_string_variable basic block 9
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 15
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
*p_51(D) = _98;
./benchmarks/tmux/leak_10/tmux_leak_10.c:76:6: warning: use location
  (*p)--;
      ^
*p_51(D) = _98;
./benchmarks/tmux/leak_10/tmux_leak_10.c:76:6: warning: use location
_97 = *p_51(D);
./benchmarks/tmux/leak_10/tmux_leak_10.c:76:3: warning: use location
  (*p)--;
   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_84 = VDEF <.MEM_83>
ch_55 = cmd_string_getc (s_50(D), p_51(D));
bb index := 3
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================
ch_55 = cmd_string_getc (s_50(D), p_51(D));
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:103:6: warning: use location
   ch = cmd_string_getc(s, p);
      ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41d4f78
    type <pointer_type 0x7fd7a418edc8
        type <integer_type 0x7fd7a418ed20 char readonly string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418edc8>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fd7a41bef00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fd7a4216078>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
ch_38 = PHI <ch_53(2), ch_55(3), ch_55(4)>
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ch_38 = PHI <ch_53(2), ch_55(3), ch_55(4)>
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================
ch_38 = PHI <ch_53(2), ch_55(3), ch_55(4)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch --------
_15 = (char) ch_38;
./benchmarks/tmux/leak_10/tmux_leak_10.c:113:14: warning: use location
   buf[len++] = ch;
              ^
*buf_59 = _15;
./benchmarks/tmux/leak_10/tmux_leak_10.c:113:14: warning: use location
_13 = (unsigned int) ch_38;
./benchmarks/tmux/leak_10/tmux_leak_10.c:108:8: warning: use location
   if (!cmd_string_first(ch)) {
        ^
_14 = _13 + 4294967231;
./benchmarks/tmux/leak_10/tmux_leak_10.c:108:8: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (unsigned int) ch_38;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (unsigned int) ch_38;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================
_9 = (unsigned int) ch_38;
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:108:8: warning: use location
   if (!cmd_string_first(ch)) {
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = ch_38 != 95;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = ch_38 != 95;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================
_8 = ch_38 != 95;
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:108:8: warning: use location
   if (!cmd_string_first(ch)) {
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = _8 & _11;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = _8 & _11;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================
_12 = _8 & _11;
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:108:8: warning: use location
   if (!cmd_string_first(ch)) {
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = (unsigned int) ch_55;
bb index := 4
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = (unsigned int) ch_55;
bb index := 4
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
_6 = (unsigned int) ch_55;
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:104:8: warning: use location
   if (!cmd_string_first(ch))
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = _6 + 4294967231;
bb index := 4
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = _6 + 4294967231;
bb index := 4
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
_7 = _6 + 4294967231;
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:104:8: warning: use location
   if (!cmd_string_first(ch))
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (unsigned int) ch_55;
bb index := 3
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================
_2 = (unsigned int) ch_55;
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:104:8: warning: use location
   if (!cmd_string_first(ch))
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = ch_55 != 95;
bb index := 3
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================
_1 = ch_55 != 95;
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:104:8: warning: use location
   if (!cmd_string_first(ch))
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _1 & _4;
bb index := 3
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================
_5 = _1 & _4;
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:104:8: warning: use location
   if (!cmd_string_first(ch))
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================
ch_53 = cmd_string_getc (s_50(D), p_51(D));
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:97:2: warning: use location
  switch (ch = cmd_string_getc(s, p)) {
  ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41d4f78
    type <pointer_type 0x7fd7a418edc8
        type <integer_type 0x7fd7a418ed20 char readonly string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418edc8>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fd7a41bef00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fd7a4216078>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================
ch_53 = cmd_string_getc (s_50(D), p_51(D));
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:97:2: warning: use location
  switch (ch = cmd_string_getc(s, p)) {
  ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41d4f78
    type <pointer_type 0x7fd7a418edc8
        type <integer_type 0x7fd7a418ed20 char readonly string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418edc8>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fd7a41bef00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fd7a4216078>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7a41d4f78
    type <pointer_type 0x7fd7a418edc8
        type <integer_type 0x7fd7a418ed20 char readonly string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418edc8>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fd7a41bef00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fd7a4216078>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fd7a41cb720 type <pointer_type 0x7fd7a418ea80> constant 0>

dot graph START

======================================================================
 <ssa_name 0x7fd7a41d4e58
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41d2360 buf>
    def_stmt buf_40 = PHI <buf_59(8), buf_64(14)>
    version 40
    ptr-info 0x7fd7a4216030>
buf_40 = PHI <buf_59(8), buf_64(14)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 70

======================================================================
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 70

======================================================================
free (buf_41);
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: use location
  free(buf);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: use location
  buf = xrealloc(buf, 1, len + 1);
      ^
this stmt is child function---xrealloc-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41d4e58
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41d2360 buf>
    def_stmt buf_40 = PHI <buf_59(8), buf_64(14)>
    version 40
    ptr-info 0x7fd7a4216030>
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :0========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;31m  find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:2 
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: use location
  free(buf);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find ================== 
_36 = buf_69 + len_42;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:5: warning: use location
  buf[len] = '\0';
     ^
*_36 = 0;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:11: warning: use location
  buf[len] = '\0';
           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_64 = xrealloc (buf_40, 1, _25);
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: use location
     buf = xrealloc(buf, 1, len + 1);
         ^
this stmt is child function---xrealloc-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41d4e58
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41d2360 buf>
    def_stmt buf_40 = PHI <buf_59(8), buf_64(14)>
    version 40
    ptr-info 0x7fd7a4216030>
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :0========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;31m  find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:4 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_27 = buf_64 + len_42;
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_27 = buf_64 + len_42;
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:8: warning: use location
     buf[len++] = ch;
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_89 = VDEF <.MEM_88>
*_27 = _28;
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_27 = _28;
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_89 = VDEF <.MEM_88>
*_27 = _28;
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_27 = _28;
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location
this stmt have mutiple branch --------

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7a41d4e58
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41d2360 buf>
    def_stmt buf_40 = PHI <buf_59(8), buf_64(14)>
    version 40
    ptr-info 0x7fd7a4216030>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: use location
  free(buf);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: use location
  free(buf);
  ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: Use after free error!: free location 
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: use location
  free(buf);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: use location
  free(buf);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: use location
  free(buf);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: use location
  free(buf);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
_36 = buf_69 + len_42;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:5: warning: use location
  buf[len] = '\0';
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
_36 = buf_69 + len_42;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:5: warning: use location
  buf[len] = '\0';
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
# .MEM_92 = VDEF <.MEM_91>
*_36 = 0;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:11: warning: use location
  buf[len] = '\0';
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
# .MEM_92 = VDEF <.MEM_91>
*_36 = 0;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:11: warning: use location
  buf[len] = '\0';
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
_27 = buf_64 + len_42;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:8: warning: use location
     buf[len++] = ch;
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
# .MEM_89 = VDEF <.MEM_88>
*_27 = _28;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
# .MEM_89 = VDEF <.MEM_88>
*_27 = _28;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd7a41d4e58
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41d2360 buf>
    def_stmt buf_40 = PHI <buf_59(8), buf_64(14)>
    version 40
    ptr-info 0x7fd7a4216030>
buf_40 = PHI <buf_59(8), buf_64(14)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 70

======================================================================
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 70

======================================================================
free (buf_41);
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: use location
  free(buf);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: use location
  buf = xrealloc(buf, 1, len + 1);
      ^
this stmt is child function---xrealloc-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41d4e58
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41d2360 buf>
    def_stmt buf_40 = PHI <buf_59(8), buf_64(14)>
    version 40
    ptr-info 0x7fd7a4216030>
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :0========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;31m  find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:2 
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: use location
  free(buf);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find ================== 
_36 = buf_69 + len_42;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:5: warning: use location
  buf[len] = '\0';
     ^
*_36 = 0;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:11: warning: use location
  buf[len] = '\0';
           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_64 = xrealloc (buf_40, 1, _25);
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: use location
     buf = xrealloc(buf, 1, len + 1);
         ^
this stmt is child function---xrealloc-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41d4e58
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41d2360 buf>
    def_stmt buf_40 = PHI <buf_59(8), buf_64(14)>
    version 40
    ptr-info 0x7fd7a4216030>
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :0========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;31m  find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:4 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_27 = buf_64 + len_42;
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_27 = buf_64 + len_42;
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:8: warning: use location
     buf[len++] = ch;
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_89 = VDEF <.MEM_88>
*_27 = _28;
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_27 = _28;
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_89 = VDEF <.MEM_88>
*_27 = _28;
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_27 = _28;
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location
this stmt have mutiple branch --------

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7a41d4e58
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41d2360 buf>
    def_stmt buf_40 = PHI <buf_59(8), buf_64(14)>
    version 40
    ptr-info 0x7fd7a4216030>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: use location
  free(buf);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: use location
  free(buf);
  ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: Use after free error!: free location 
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: use location
  free(buf);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: use location
  free(buf);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: use location
  free(buf);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: use location
  free(buf);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
_36 = buf_69 + len_42;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:5: warning: use location
  buf[len] = '\0';
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
_36 = buf_69 + len_42;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:5: warning: use location
  buf[len] = '\0';
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
# .MEM_92 = VDEF <.MEM_91>
*_36 = 0;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:11: warning: use location
  buf[len] = '\0';
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
# .MEM_92 = VDEF <.MEM_91>
*_36 = 0;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:11: warning: use location
  buf[len] = '\0';
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
_27 = buf_64 + len_42;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:8: warning: use location
     buf[len++] = ch;
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
# .MEM_89 = VDEF <.MEM_88>
*_27 = _28;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
# .MEM_89 = VDEF <.MEM_88>
*_27 = _28;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fd7a4182d40
    type <pointer_type 0x7fd7a41bd690
        type <array_type 0x7fd7a41b4348 type <integer_type 0x7fd7a418e9d8 char>
            QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 structural equality domain <integer_type 0x7fd7a41b42a0>
            pointer_to_this <pointer_type 0x7fd7a41bd690>>
        unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    readonly constant
    arg 0 <string_cst 0x7fd7a41cb7c8 type <array_type 0x7fd7a41b4348>
        readonly constant static "\000">
    ./benchmarks/tmux/leak_10/tmux_leak_10.c:138:11 start: ./benchmarks/tmux/leak_10/tmux_leak_10.c:138:11 finish: ./benchmarks/tmux/leak_10/tmux_leak_10.c:138:11>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd7a41d4d80
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
   
    def_stmt _37 = envent_72(D)->value;
    version 37
    ptr-info 0x7fd7a4216018>
# VUSE <.MEM_93>
_37 = envent_72(D)->value;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_94 = VDEF <.MEM_93>
_74 = strdup (_37);
bb index := 20
# VUSE <.MEM_15>
return _8;
In function ‘cmd_string_variable’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_94 = VDEF <.MEM_93>
_74 = strdup (_37);
bb index := 20
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_94 = VDEF <.MEM_93>
_74 = strdup (_37);
bb index := 20
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 70

======================================================================
_74 = strdup (_37);
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:139:10: warning: use location
  return (xstrdup(envent->value));
          ^
this stmt is child function---strdup-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41d4d80
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
   
    def_stmt _37 = envent_72(D)->value;
    version 37
    ptr-info 0x7fd7a4216018>
trace fucntion name:strdup 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
In function ‘cmd_string_variable’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch --------

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7a41d4d80
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
   
    def_stmt _37 = envent_72(D)->value;
    version 37
    ptr-info 0x7fd7a4216018>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:cmd_string_variable========= [0m
[40;42m =======pre_check_funciton:cmd_string_string========= [0m
[40;42m =======start_check_funciton:cmd_string_string========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fd7a466c750
    type <pointer_type 0x7fd7a418edc8
        type <integer_type 0x7fd7a418ed20 char readonly string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418edc8>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fd7a41da000 s>
    def_stmt GIMPLE_NOP
    version 19
    ptr-info 0x7fd7a42161e0>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_40>
ch_22 = cmd_string_getc (s_19(D), p_20(D));
bb index := 19
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_string’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_40>
ch_22 = cmd_string_getc (s_19(D), p_20(D));
bb index := 19
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_40>
ch_22 = cmd_string_getc (s_19(D), p_20(D));
bb index := 19
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_40>
ch_22 = cmd_string_getc (s_19(D), p_20(D));
bb index := 19
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_40>
ch_22 = cmd_string_getc (s_19(D), p_20(D));
bb index := 19
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_40>
ch_22 = cmd_string_getc (s_19(D), p_20(D));
bb index := 19
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_40>
ch_22 = cmd_string_getc (s_19(D), p_20(D));
bb index := 19
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_40>
ch_22 = cmd_string_getc (s_19(D), p_20(D));
bb index := 19
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_40>
ch_22 = cmd_string_getc (s_19(D), p_20(D));
bb index := 19
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_40>
ch_22 = cmd_string_getc (s_19(D), p_20(D));
bb index := 19
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ch_22 = cmd_string_getc (s_19(D), p_20(D));
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:156:8: warning: use location
  while ((ch = cmd_string_getc(s, p)) != endch) {
        ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fd7a466c750
    type <pointer_type 0x7fd7a418edc8
        type <integer_type 0x7fd7a418ed20 char readonly string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418edc8>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fd7a41da000 s>
    def_stmt GIMPLE_NOP
    version 19
    ptr-info 0x7fd7a42161e0>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ch_8 = PHI <ch_22(3), ch_22(4), ch_30(5), 27(6), 13(7), 10(8), 9(9), ch_22(10)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = (char) ch_8;
./benchmarks/tmux/leak_10/tmux_leak_10.c:191:14: warning: use location
   buf[len++] = ch;
              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_3 = _4;
./benchmarks/tmux/leak_10/tmux_leak_10.c:191:14: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
t_32 = cmd_string_variable (s_19(D), p_20(D));
./benchmarks/tmux/leak_10/tmux_leak_10.c:183:7: warning: use location
    if ((t = cmd_string_variable(s, p)) == NULL)
       ^
this stmt is child function---cmd_string_variable-----

 ================== trace ================== 
 <ssa_name 0x7fd7a466c750
    type <pointer_type 0x7fd7a418edc8
        type <integer_type 0x7fd7a418ed20 char readonly string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418edc8>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fd7a41da000 s>
    def_stmt GIMPLE_NOP
    version 19
    ptr-info 0x7fd7a42161e0>
trace fucntion name:cmd_string_variable 
[40;44m =======trace_function_path cmd_string_variable  function_call count: 4 level :0========  [0m
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :1========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:cmd_string_getc========= [0m
[40;46m =======add node_fun stack:cmd_string_getc========= [0m
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :1========  [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (t_32 == 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:183:7: warning: use location
if (t_32 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:183:7: warning: use location
Cond in fucntion cmd_string_string basic block 11
 ================== possible direct basic block ================= 
from cmd_string_string basic block 17
 ================== possible direct basic block ================= 
from cmd_string_string basic block 12
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ch_30 = cmd_string_getc (s_19(D), p_20(D));
./benchmarks/tmux/leak_10/tmux_leak_10.c:163:4: warning: use location
    switch (ch = cmd_string_getc(s, p)) {
    ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fd7a466c750
    type <pointer_type 0x7fd7a418edc8
        type <integer_type 0x7fd7a418ed20 char readonly string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418edc8>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fd7a41da000 s>
    def_stmt GIMPLE_NOP
    version 19
    ptr-info 0x7fd7a42161e0>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ch_30 = cmd_string_getc (s_19(D), p_20(D));
./benchmarks/tmux/leak_10/tmux_leak_10.c:163:4: warning: use location
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fd7a466c750
    type <pointer_type 0x7fd7a418edc8
        type <integer_type 0x7fd7a418ed20 char readonly string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418edc8>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fd7a41da000 s>
    def_stmt GIMPLE_NOP
    version 19
    ptr-info 0x7fd7a42161e0>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7a466c750
    type <pointer_type 0x7fd7a418edc8
        type <integer_type 0x7fd7a418ed20 char readonly string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418edc8>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fd7a41da000 s>
    def_stmt GIMPLE_NOP
    version 19
    ptr-info 0x7fd7a42161e0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd7a466c750
    type <pointer_type 0x7fd7a418edc8
        type <integer_type 0x7fd7a418ed20 char readonly string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418edc8>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fd7a41da000 s>
    def_stmt GIMPLE_NOP
    version 19
    ptr-info 0x7fd7a42161e0>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_40>
ch_22 = cmd_string_getc (s_19(D), p_20(D));
bb index := 19
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_string’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_40>
ch_22 = cmd_string_getc (s_19(D), p_20(D));
bb index := 19
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_40>
ch_22 = cmd_string_getc (s_19(D), p_20(D));
bb index := 19
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_40>
ch_22 = cmd_string_getc (s_19(D), p_20(D));
bb index := 19
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_40>
ch_22 = cmd_string_getc (s_19(D), p_20(D));
bb index := 19
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_40>
ch_22 = cmd_string_getc (s_19(D), p_20(D));
bb index := 19
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_40>
ch_22 = cmd_string_getc (s_19(D), p_20(D));
bb index := 19
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_40>
ch_22 = cmd_string_getc (s_19(D), p_20(D));
bb index := 19
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_40>
ch_22 = cmd_string_getc (s_19(D), p_20(D));
bb index := 19
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_40>
ch_22 = cmd_string_getc (s_19(D), p_20(D));
bb index := 19
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ch_22 = cmd_string_getc (s_19(D), p_20(D));
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:156:8: warning: use location
  while ((ch = cmd_string_getc(s, p)) != endch) {
        ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fd7a466c750
    type <pointer_type 0x7fd7a418edc8
        type <integer_type 0x7fd7a418ed20 char readonly string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418edc8>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fd7a41da000 s>
    def_stmt GIMPLE_NOP
    version 19
    ptr-info 0x7fd7a42161e0>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ch_8 = PHI <ch_22(3), ch_22(4), ch_30(5), 27(6), 13(7), 10(8), 9(9), ch_22(10)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = (char) ch_8;
./benchmarks/tmux/leak_10/tmux_leak_10.c:191:14: warning: use location
   buf[len++] = ch;
              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_3 = _4;
./benchmarks/tmux/leak_10/tmux_leak_10.c:191:14: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
t_32 = cmd_string_variable (s_19(D), p_20(D));
./benchmarks/tmux/leak_10/tmux_leak_10.c:183:7: warning: use location
    if ((t = cmd_string_variable(s, p)) == NULL)
       ^
this stmt is child function---cmd_string_variable-----

 ================== trace ================== 
 <ssa_name 0x7fd7a466c750
    type <pointer_type 0x7fd7a418edc8
        type <integer_type 0x7fd7a418ed20 char readonly string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418edc8>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fd7a41da000 s>
    def_stmt GIMPLE_NOP
    version 19
    ptr-info 0x7fd7a42161e0>
trace fucntion name:cmd_string_variable 
[40;44m =======trace_function_path cmd_string_variable  function_call count: 4 level :0========  [0m
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :1========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:cmd_string_getc========= [0m
[40;46m =======add node_fun stack:cmd_string_getc========= [0m
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :1========  [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (t_32 == 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:183:7: warning: use location
if (t_32 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:183:7: warning: use location
Cond in fucntion cmd_string_string basic block 11
 ================== possible direct basic block ================= 
from cmd_string_string basic block 17
 ================== possible direct basic block ================= 
from cmd_string_string basic block 12
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ch_30 = cmd_string_getc (s_19(D), p_20(D));
./benchmarks/tmux/leak_10/tmux_leak_10.c:163:4: warning: use location
    switch (ch = cmd_string_getc(s, p)) {
    ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fd7a466c750
    type <pointer_type 0x7fd7a418edc8
        type <integer_type 0x7fd7a418ed20 char readonly string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418edc8>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fd7a41da000 s>
    def_stmt GIMPLE_NOP
    version 19
    ptr-info 0x7fd7a42161e0>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ch_30 = cmd_string_getc (s_19(D), p_20(D));
./benchmarks/tmux/leak_10/tmux_leak_10.c:163:4: warning: use location
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fd7a466c750
    type <pointer_type 0x7fd7a418edc8
        type <integer_type 0x7fd7a418ed20 char readonly string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418edc8>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fd7a41da000 s>
    def_stmt GIMPLE_NOP
    version 19
    ptr-info 0x7fd7a42161e0>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7a466c750
    type <pointer_type 0x7fd7a418edc8
        type <integer_type 0x7fd7a418ed20 char readonly string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418edc8>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fd7a41da000 s>
    def_stmt GIMPLE_NOP
    version 19
    ptr-info 0x7fd7a42161e0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd7a41d6ea0
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41d2c60 buf>
    def_stmt buf_9 = PHI <0B(2), buf_16(15)>
    version 9
    ptr-info 0x7fd7a4216198>
buf_9 = PHI <0B(2), buf_16(15)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
bb index := 17
# VUSE <.MEM_39>
return _11;
In function ‘cmd_string_string’:
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 18

======================================================================
free (buf_9);
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: use location
  free(buf);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (buf_9);
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_43 = VDEF <.MEM_42>
buf_25 = xrealloc (buf_9, 1, _6);
bb index := 16
# VUSE <.MEM_39>
return _11;
In function ‘cmd_string_string’:
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 18

======================================================================
buf_25 = xrealloc (buf_9, 1, _6);
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:194:6: warning: use location
  buf = xrealloc(buf, 1, len + 1);
      ^
this stmt is child function---xrealloc-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41d6ea0
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41d2c60 buf>
    def_stmt buf_9 = PHI <0B(2), buf_16(15)>
    version 9
    ptr-info 0x7fd7a4216198>
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :0========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;31m  find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_11 = PHI <buf_25(16), 0B(17)>
bb index := 18
# VUSE <.MEM_39>
return _11;
In function ‘cmd_string_string’:
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_11 = PHI <buf_25(16), 0B(17)>
bb index := 18
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 18

======================================================================
_11 = PHI <buf_25(16), 0B(17)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_16 = PHI <buf_9(12), buf_34(14)>
bb index := 15
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_string’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_16 = PHI <buf_9(12), buf_34(14)>
bb index := 15
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_16 = PHI <buf_9(12), buf_34(14)>
bb index := 15
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_16 = PHI <buf_9(12), buf_34(14)>
bb index := 15
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_16 = PHI <buf_9(12), buf_34(14)>
bb index := 15
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_16 = PHI <buf_9(12), buf_34(14)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_9 = PHI <0B(2), buf_16(15)>
bb index := 19
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_string’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_9 = PHI <0B(2), buf_16(15)>
bb index := 19
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_9 = PHI <0B(2), buf_16(15)>
bb index := 19
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_9 = PHI <0B(2), buf_16(15)>
bb index := 19
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_9 = PHI <0B(2), buf_16(15)>
bb index := 19
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_9 = PHI <0B(2), buf_16(15)>
bb index := 19
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_9 = PHI <0B(2), buf_16(15)>
bb index := 19
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_9 = PHI <0B(2), buf_16(15)>
bb index := 19
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_9 = PHI <0B(2), buf_16(15)>
bb index := 19
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_9 = PHI <0B(2), buf_16(15)>
bb index := 19
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_9 = PHI <0B(2), buf_16(15)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_34 = xrealloc (buf_9, 1, _1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:190:7: warning: use location
   buf = xrealloc(buf, 1, len + 1);
       ^
this stmt is child function---xrealloc-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41d6ea0
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41d2c60 buf>
    def_stmt buf_9 = PHI <0B(2), buf_16(15)>
    version 9
    ptr-info 0x7fd7a4216198>
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :0========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;31m  find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_3 = buf_34 + len_10;
./benchmarks/tmux/leak_10/tmux_leak_10.c:191:6: warning: use location
   buf[len++] = ch;
      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_3 = _4;
./benchmarks/tmux/leak_10/tmux_leak_10.c:191:14: warning: use location
   buf[len++] = ch;
              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_3 = _4;
./benchmarks/tmux/leak_10/tmux_leak_10.c:191:14: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7a41d6ea0
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41d2c60 buf>
    def_stmt buf_9 = PHI <0B(2), buf_16(15)>
    version 9
    ptr-info 0x7fd7a4216198>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: use location
  free(buf);
  ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
buf_25 = xrealloc (buf_9, 1, _6);
./benchmarks/tmux/leak_10/tmux_leak_10.c:194:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: use location
  free(buf);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_36>
buf_34 = xrealloc (buf_9, 1, _1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:190:7: warning: Use after free error!: free location 
   buf = xrealloc(buf, 1, len + 1);
       ^
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: use location
  free(buf);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: Use after free error!: free location 
_11 = PHI <buf_25(16), 0B(17)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
buf_25 = xrealloc (buf_9, 1, _6);
./benchmarks/tmux/leak_10/tmux_leak_10.c:194:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
_11 = PHI <buf_25(16), 0B(17)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_36>
buf_34 = xrealloc (buf_9, 1, _1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:190:7: warning: Use after free error!: free location 
   buf = xrealloc(buf, 1, len + 1);
       ^
_11 = PHI <buf_25(16), 0B(17)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: Use after free error!: free location 
  free(buf);
  ^
_11 = PHI <buf_25(16), 0B(17)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: Use after free error!: free location 
buf_16 = PHI <buf_9(12), buf_34(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
buf_25 = xrealloc (buf_9, 1, _6);
./benchmarks/tmux/leak_10/tmux_leak_10.c:194:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
buf_16 = PHI <buf_9(12), buf_34(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_36>
buf_34 = xrealloc (buf_9, 1, _1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:190:7: warning: Use after free error!: free location 
   buf = xrealloc(buf, 1, len + 1);
       ^
buf_16 = PHI <buf_9(12), buf_34(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_16 = PHI <buf_9(12), buf_34(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: Use after free error!: free location 
buf_9 = PHI <0B(2), buf_16(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
buf_25 = xrealloc (buf_9, 1, _6);
./benchmarks/tmux/leak_10/tmux_leak_10.c:194:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
buf_9 = PHI <0B(2), buf_16(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_36>
buf_34 = xrealloc (buf_9, 1, _1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:190:7: warning: Use after free error!: free location 
   buf = xrealloc(buf, 1, len + 1);
       ^
buf_9 = PHI <0B(2), buf_16(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_9 = PHI <0B(2), buf_16(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_36>
buf_34 = xrealloc (buf_9, 1, _1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:190:7: warning: Use after free error!: free location 
   buf = xrealloc(buf, 1, len + 1);
       ^
_3 = buf_34 + len_10;
./benchmarks/tmux/leak_10/tmux_leak_10.c:191:6: warning: use location
   buf[len++] = ch;
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_36>
buf_34 = xrealloc (buf_9, 1, _1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:190:7: warning: Use after free error!: free location 
   buf = xrealloc(buf, 1, len + 1);
       ^
# .MEM_48 = VDEF <.MEM_47>
*_3 = _4;
./benchmarks/tmux/leak_10/tmux_leak_10.c:191:14: warning: use location
   buf[len++] = ch;
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_36>
buf_34 = xrealloc (buf_9, 1, _1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:190:7: warning: Use after free error!: free location 
   buf = xrealloc(buf, 1, len + 1);
       ^
# .MEM_48 = VDEF <.MEM_47>
*_3 = _4;
./benchmarks/tmux/leak_10/tmux_leak_10.c:191:14: warning: use location
   buf[len++] = ch;
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd7a41d6ea0
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41d2c60 buf>
    def_stmt buf_9 = PHI <0B(2), buf_16(15)>
    version 9
    ptr-info 0x7fd7a4216198>
buf_9 = PHI <0B(2), buf_16(15)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
bb index := 17
# VUSE <.MEM_39>
return _11;
In function ‘cmd_string_string’:
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 18

======================================================================
free (buf_9);
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: use location
  free(buf);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (buf_9);
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_43 = VDEF <.MEM_42>
buf_25 = xrealloc (buf_9, 1, _6);
bb index := 16
# VUSE <.MEM_39>
return _11;
In function ‘cmd_string_string’:
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 18

======================================================================
buf_25 = xrealloc (buf_9, 1, _6);
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:194:6: warning: use location
  buf = xrealloc(buf, 1, len + 1);
      ^
this stmt is child function---xrealloc-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41d6ea0
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41d2c60 buf>
    def_stmt buf_9 = PHI <0B(2), buf_16(15)>
    version 9
    ptr-info 0x7fd7a4216198>
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :0========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;31m  find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_11 = PHI <buf_25(16), 0B(17)>
bb index := 18
# VUSE <.MEM_39>
return _11;
In function ‘cmd_string_string’:
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_11 = PHI <buf_25(16), 0B(17)>
bb index := 18
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 18

======================================================================
_11 = PHI <buf_25(16), 0B(17)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_16 = PHI <buf_9(12), buf_34(14)>
bb index := 15
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_string’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_16 = PHI <buf_9(12), buf_34(14)>
bb index := 15
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_16 = PHI <buf_9(12), buf_34(14)>
bb index := 15
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_16 = PHI <buf_9(12), buf_34(14)>
bb index := 15
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_16 = PHI <buf_9(12), buf_34(14)>
bb index := 15
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_16 = PHI <buf_9(12), buf_34(14)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_9 = PHI <0B(2), buf_16(15)>
bb index := 19
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_string’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_9 = PHI <0B(2), buf_16(15)>
bb index := 19
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_9 = PHI <0B(2), buf_16(15)>
bb index := 19
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_9 = PHI <0B(2), buf_16(15)>
bb index := 19
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_9 = PHI <0B(2), buf_16(15)>
bb index := 19
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_9 = PHI <0B(2), buf_16(15)>
bb index := 19
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_9 = PHI <0B(2), buf_16(15)>
bb index := 19
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_9 = PHI <0B(2), buf_16(15)>
bb index := 19
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_9 = PHI <0B(2), buf_16(15)>
bb index := 19
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_9 = PHI <0B(2), buf_16(15)>
bb index := 19
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_9 = PHI <0B(2), buf_16(15)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_34 = xrealloc (buf_9, 1, _1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:190:7: warning: use location
   buf = xrealloc(buf, 1, len + 1);
       ^
this stmt is child function---xrealloc-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41d6ea0
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41d2c60 buf>
    def_stmt buf_9 = PHI <0B(2), buf_16(15)>
    version 9
    ptr-info 0x7fd7a4216198>
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :0========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;31m  find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_3 = buf_34 + len_10;
./benchmarks/tmux/leak_10/tmux_leak_10.c:191:6: warning: use location
   buf[len++] = ch;
      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_3 = _4;
./benchmarks/tmux/leak_10/tmux_leak_10.c:191:14: warning: use location
   buf[len++] = ch;
              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_3 = _4;
./benchmarks/tmux/leak_10/tmux_leak_10.c:191:14: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7a41d6ea0
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41d2c60 buf>
    def_stmt buf_9 = PHI <0B(2), buf_16(15)>
    version 9
    ptr-info 0x7fd7a4216198>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: use location
  free(buf);
  ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
buf_25 = xrealloc (buf_9, 1, _6);
./benchmarks/tmux/leak_10/tmux_leak_10.c:194:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: use location
  free(buf);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_36>
buf_34 = xrealloc (buf_9, 1, _1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:190:7: warning: Use after free error!: free location 
   buf = xrealloc(buf, 1, len + 1);
       ^
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: use location
  free(buf);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: Use after free error!: free location 
_11 = PHI <buf_25(16), 0B(17)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
buf_25 = xrealloc (buf_9, 1, _6);
./benchmarks/tmux/leak_10/tmux_leak_10.c:194:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
_11 = PHI <buf_25(16), 0B(17)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_36>
buf_34 = xrealloc (buf_9, 1, _1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:190:7: warning: Use after free error!: free location 
   buf = xrealloc(buf, 1, len + 1);
       ^
_11 = PHI <buf_25(16), 0B(17)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: Use after free error!: free location 
  free(buf);
  ^
_11 = PHI <buf_25(16), 0B(17)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: Use after free error!: free location 
buf_16 = PHI <buf_9(12), buf_34(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
buf_25 = xrealloc (buf_9, 1, _6);
./benchmarks/tmux/leak_10/tmux_leak_10.c:194:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
buf_16 = PHI <buf_9(12), buf_34(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_36>
buf_34 = xrealloc (buf_9, 1, _1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:190:7: warning: Use after free error!: free location 
   buf = xrealloc(buf, 1, len + 1);
       ^
buf_16 = PHI <buf_9(12), buf_34(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_16 = PHI <buf_9(12), buf_34(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: Use after free error!: free location 
buf_9 = PHI <0B(2), buf_16(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
buf_25 = xrealloc (buf_9, 1, _6);
./benchmarks/tmux/leak_10/tmux_leak_10.c:194:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
buf_9 = PHI <0B(2), buf_16(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_36>
buf_34 = xrealloc (buf_9, 1, _1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:190:7: warning: Use after free error!: free location 
   buf = xrealloc(buf, 1, len + 1);
       ^
buf_9 = PHI <0B(2), buf_16(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_9 = PHI <0B(2), buf_16(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_36>
buf_34 = xrealloc (buf_9, 1, _1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:190:7: warning: Use after free error!: free location 
   buf = xrealloc(buf, 1, len + 1);
       ^
_3 = buf_34 + len_10;
./benchmarks/tmux/leak_10/tmux_leak_10.c:191:6: warning: use location
   buf[len++] = ch;
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_36>
buf_34 = xrealloc (buf_9, 1, _1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:190:7: warning: Use after free error!: free location 
   buf = xrealloc(buf, 1, len + 1);
       ^
# .MEM_48 = VDEF <.MEM_47>
*_3 = _4;
./benchmarks/tmux/leak_10/tmux_leak_10.c:191:14: warning: use location
   buf[len++] = ch;
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_36>
buf_34 = xrealloc (buf_9, 1, _1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:190:7: warning: Use after free error!: free location 
   buf = xrealloc(buf, 1, len + 1);
       ^
# .MEM_48 = VDEF <.MEM_47>
*_3 = _4;
./benchmarks/tmux/leak_10/tmux_leak_10.c:191:14: warning: use location
   buf[len++] = ch;
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:cmd_string_string========= [0m
[40;42m =======pre add _ fucntion:getpwuid========= [0m
[40;33m =======POP node_fun stack:getpwuid========= [0m
[40;42m =======pre add _ fucntion:getuid========= [0m
[40;33m =======POP node_fun stack:getuid========= [0m
[40;42m =======pre add _ fucntion:cmd_string_getc========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path cmd_string_getc  function_call count: 0 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:cmd_string_getc========= [0m
[40;42m =======start_check_funciton:cmd_string_getc========= [0m
[40;33m =======POP node_fun stack:cmd_string_getc========= [0m
[40;42m =======pre add _ fucntion:memmove========= [0m
[40;33m =======POP node_fun stack:memmove========= [0m
[40;42m =======pre add _ fucntion:strcspn========= [0m
[40;33m =======POP node_fun stack:strcspn========= [0m
[40;42m =======pre add _ fucntion:strchr========= [0m
[40;33m =======POP node_fun stack:strchr========= [0m
[40;42m =======pre add _ fucntion:cmd_string_variable========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path cmd_string_variable  function_call count: 4 level :1========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;33m =======POP node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path xrealloc  function_call count: 3 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;33m =======POP node_fun stack:realloc========= [0m
[40;42m =======pre_check_funciton:xrealloc========= [0m
[40;42m =======start_check_funciton:xrealloc========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fd7a466cb88
    type <pointer_type 0x7fd7a467f0a8
        type <void_type 0x7fd7a4678f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fd7a467f0a8>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fd7a4684bd0>>
    var <var_decl 0x7fd7a53f9cf0 newptr>
    def_stmt newptr_11 = realloc (oldptr_9(D), newsize_7);
    version 11
    ptr-info 0x7fd7a41cbf60>
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);

 ================== trace ptable================== 
trace fucntion name:realloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---realloc-----
this Reserved word function ------realloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
In function ‘xrealloc’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
bb index := 6
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 18

======================================================================
newptr_11 = realloc (oldptr_9(D), newsize_7);
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
this stmt is child function---realloc-----

 ================== find ================== 
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
[40;32m    FIND realloc STMT count:1 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = newptr_11;
bb index := 8
# VUSE <.MEM_20>
return newptr_11;
In function ‘xrealloc’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 8

======================================================================
_12 = newptr_11;
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newptr_11 == 0B)
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
In function ‘xrealloc’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newptr_11 == 0B)
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newptr_11 == 0B)
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newptr_11 == 0B)
bb index := 6
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 18

======================================================================
if (newptr_11 == 0B)
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
if (newptr_11 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
Cond in fucntion xrealloc basic block 6
 ================== possible direct basic block ================= 
from xrealloc basic block 7
 ================== possible direct basic block ================= 
from xrealloc basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
In function ‘xrealloc’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 70

======================================================================
if (newsize_7 == 0)
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:53:5: warning: use location
  if (newsize == 0)
     ^
if (newsize_7 == 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:53:5: warning: use location
Cond in fucntion xrealloc basic block 2
 ================== possible direct basic block ================= 
from xrealloc basic block 3
 ================== possible direct basic block ================= 
from xrealloc basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7a466cb88
    type <pointer_type 0x7fd7a467f0a8
        type <void_type 0x7fd7a4678f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fd7a467f0a8>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fd7a4684bd0>>
    var <var_decl 0x7fd7a53f9cf0 newptr>
    def_stmt newptr_11 = realloc (oldptr_9(D), newsize_7);
    version 11
    ptr-info 0x7fd7a41cbf60>
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: Use after free error!: free location 
_12 = newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: Use after free error!: free location 
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
_12 = newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: Use after free error!: free location 
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
if (newptr_11 == 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: Use after free error!: free location 
if (newptr_11 == 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;32m   Maybe you don't have memory leak.... need more checks  [0m

======================================================================


dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fd7a4664f90 type <integer_type 0x7fd7a46785e8 int> constant 1>

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fd7a4664f90 type <integer_type 0x7fd7a46785e8 int> constant 1>
[40;33m =======POP node_fun stack:xrealloc========= [0m
[40;42m =======pre add _ fucntion:cmd_string_getc========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path cmd_string_getc  function_call count: 0 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:cmd_string_getc========= [0m
[40;42m =======start_check_funciton:cmd_string_getc========= [0m
[40;33m =======POP node_fun stack:cmd_string_getc========= [0m
[40;42m =======pre_check_funciton:cmd_string_variable========= [0m
[40;42m =======start_check_funciton:cmd_string_variable========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fd7a41d6318
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
   
    def_stmt _76 = strdup ("");
    version 76
    ptr-info 0x7fd7a4216150>
# .MEM_95 = VDEF <.MEM_93>
_76 = strdup ("");

 ================== trace ptable================== 
trace fucntion name:strdup 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---strdup-----
this Reserved word function ------strdup-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_95 = VDEF <.MEM_93>
_76 = strdup ("");
bb index := 19
# VUSE <.MEM_15>
return _8;
In function ‘cmd_string_variable’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_95 = VDEF <.MEM_93>
_76 = strdup ("");
bb index := 19
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_95 = VDEF <.MEM_93>
_76 = strdup ("");
bb index := 19
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 70

======================================================================
_76 = strdup ("");
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:138:11: warning: use location
   return (xstrdup(""));
           ^
this stmt is child function---strdup-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41d6318
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
   
    def_stmt _76 = strdup ("");
    version 76
    ptr-info 0x7fd7a4216150>
trace fucntion name:strdup 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
In function ‘cmd_string_variable’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch --------

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7a41d6318
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
   
    def_stmt _76 = strdup ("");
    version 76
    ptr-info 0x7fd7a4216150>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd7a41d62d0
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
   
    def_stmt _74 = strdup (_37);
    version 74
    ptr-info 0x7fd7a4216138>
# .MEM_94 = VDEF <.MEM_93>
_74 = strdup (_37);

 ================== trace ptable================== 
trace fucntion name:strdup 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---strdup-----
this Reserved word function ------strdup-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_94 = VDEF <.MEM_93>
_74 = strdup (_37);
bb index := 20
# VUSE <.MEM_15>
return _8;
In function ‘cmd_string_variable’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_94 = VDEF <.MEM_93>
_74 = strdup (_37);
bb index := 20
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_94 = VDEF <.MEM_93>
_74 = strdup (_37);
bb index := 20
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 70

======================================================================
_74 = strdup (_37);
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:139:10: warning: use location
  return (xstrdup(envent->value));
          ^
this stmt is child function---strdup-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41d62d0
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
   
    def_stmt _74 = strdup (_37);
    version 74
    ptr-info 0x7fd7a4216138>
trace fucntion name:strdup 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
In function ‘cmd_string_variable’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch --------

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7a41d62d0
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
   
    def_stmt _74 = strdup (_37);
    version 74
    ptr-info 0x7fd7a4216138>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd7a41d4f78
    type <pointer_type 0x7fd7a418edc8
        type <integer_type 0x7fd7a418ed20 char readonly string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418edc8>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fd7a41bef00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fd7a4216078>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ch_62 = cmd_string_getc (s_50(D), p_51(D));
./benchmarks/tmux/leak_10/tmux_leak_10.c:116:7: warning: use location
    ch = cmd_string_getc(s, p);
       ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41d4f78
    type <pointer_type 0x7fd7a418edc8
        type <integer_type 0x7fd7a418ed20 char readonly string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418edc8>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fd7a41bef00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fd7a4216078>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_32 = ch_62 != -1;
bb index := 16
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 8

======================================================================
_32 = ch_62 != -1;
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:130:9: warning: use location
  if (ch != EOF && fch != '{')
         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_34 = _32 & _33;
bb index := 16
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 8

======================================================================
_34 = _32 & _33;
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:130:16: warning: use location
  if (ch != EOF && fch != '{')
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_34 != 0)
bb index := 16
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 8

======================================================================
if (_34 != 0)
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:130:5: warning: use location
  if (ch != EOF && fch != '{')
     ^
if (_34 != 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:130:5: warning: use location
Cond in fucntion cmd_string_variable basic block 16
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 17
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 18
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_30 = ch_62 != 125;
bb index := 15
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_30 = ch_62 != 125;
bb index := 15
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 8

======================================================================
_30 = ch_62 != 125;
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:128:23: warning: use location
  if (fch == '{' && ch != '}')
                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_31 = _29 & _30;
bb index := 15
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_31 = _29 & _30;
bb index := 15
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 8

======================================================================
_31 = _29 & _30;
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:128:17: warning: use location
  if (fch == '{' && ch != '}')
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_28 = (char) ch_62;
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_28 = (char) ch_62;
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_89 = VDEF <.MEM_88>
*_27 = _28;
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_27 = _28;
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = (unsigned int) ch_62;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location
    if (ch == EOF || !cmd_string_other(ch))
                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_24 = _23 + 4294967248;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_24 > 9)
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:21: warning: use location
    if (ch == EOF || !cmd_string_other(ch))
                     ^
if (_24 > 9)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:21: warning: use location
Cond in fucntion cmd_string_variable basic block 12
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 15
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = (unsigned int) ch_62;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location
    if (ch == EOF || !cmd_string_other(ch))
                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = _21 + 4294967231;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_22 > 25)
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location
if (_22 > 25)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location
Cond in fucntion cmd_string_variable basic block 11
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 12
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = (unsigned int) ch_62;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = ch_62 != 95;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = _16 & _19;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (ch_62 == -1)
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:7: warning: use location
    if (ch == EOF || !cmd_string_other(ch))
       ^
if (ch_62 == -1)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:7: warning: use location
Cond in fucntion cmd_string_variable basic block 9
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 15
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
*p_51(D) = _98;
./benchmarks/tmux/leak_10/tmux_leak_10.c:76:6: warning: use location
  (*p)--;
      ^
*p_51(D) = _98;
./benchmarks/tmux/leak_10/tmux_leak_10.c:76:6: warning: use location
_97 = *p_51(D);
./benchmarks/tmux/leak_10/tmux_leak_10.c:76:3: warning: use location
  (*p)--;
   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_84 = VDEF <.MEM_83>
ch_55 = cmd_string_getc (s_50(D), p_51(D));
bb index := 3
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================
ch_55 = cmd_string_getc (s_50(D), p_51(D));
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:103:6: warning: use location
   ch = cmd_string_getc(s, p);
      ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41d4f78
    type <pointer_type 0x7fd7a418edc8
        type <integer_type 0x7fd7a418ed20 char readonly string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418edc8>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fd7a41bef00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fd7a4216078>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
ch_38 = PHI <ch_53(2), ch_55(3), ch_55(4)>
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ch_38 = PHI <ch_53(2), ch_55(3), ch_55(4)>
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================
ch_38 = PHI <ch_53(2), ch_55(3), ch_55(4)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch --------
_15 = (char) ch_38;
./benchmarks/tmux/leak_10/tmux_leak_10.c:113:14: warning: use location
   buf[len++] = ch;
              ^
*buf_59 = _15;
./benchmarks/tmux/leak_10/tmux_leak_10.c:113:14: warning: use location
_13 = (unsigned int) ch_38;
./benchmarks/tmux/leak_10/tmux_leak_10.c:108:8: warning: use location
   if (!cmd_string_first(ch)) {
        ^
_14 = _13 + 4294967231;
./benchmarks/tmux/leak_10/tmux_leak_10.c:108:8: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (unsigned int) ch_38;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (unsigned int) ch_38;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================
_9 = (unsigned int) ch_38;
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:108:8: warning: use location
   if (!cmd_string_first(ch)) {
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = ch_38 != 95;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = ch_38 != 95;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================
_8 = ch_38 != 95;
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:108:8: warning: use location
   if (!cmd_string_first(ch)) {
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = _8 & _11;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = _8 & _11;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================
_12 = _8 & _11;
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:108:8: warning: use location
   if (!cmd_string_first(ch)) {
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = (unsigned int) ch_55;
bb index := 4
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = (unsigned int) ch_55;
bb index := 4
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
_6 = (unsigned int) ch_55;
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:104:8: warning: use location
   if (!cmd_string_first(ch))
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = _6 + 4294967231;
bb index := 4
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = _6 + 4294967231;
bb index := 4
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
_7 = _6 + 4294967231;
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:104:8: warning: use location
   if (!cmd_string_first(ch))
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (unsigned int) ch_55;
bb index := 3
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================
_2 = (unsigned int) ch_55;
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:104:8: warning: use location
   if (!cmd_string_first(ch))
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = ch_55 != 95;
bb index := 3
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================
_1 = ch_55 != 95;
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:104:8: warning: use location
   if (!cmd_string_first(ch))
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _1 & _4;
bb index := 3
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================
_5 = _1 & _4;
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:104:8: warning: use location
   if (!cmd_string_first(ch))
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================
ch_53 = cmd_string_getc (s_50(D), p_51(D));
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:97:2: warning: use location
  switch (ch = cmd_string_getc(s, p)) {
  ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41d4f78
    type <pointer_type 0x7fd7a418edc8
        type <integer_type 0x7fd7a418ed20 char readonly string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418edc8>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fd7a41bef00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fd7a4216078>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================
ch_53 = cmd_string_getc (s_50(D), p_51(D));
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:97:2: warning: use location
  switch (ch = cmd_string_getc(s, p)) {
  ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41d4f78
    type <pointer_type 0x7fd7a418edc8
        type <integer_type 0x7fd7a418ed20 char readonly string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418edc8>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fd7a41bef00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fd7a4216078>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7a41d4f78
    type <pointer_type 0x7fd7a418edc8
        type <integer_type 0x7fd7a418ed20 char readonly string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418edc8>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fd7a41bef00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fd7a4216078>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd7a41d4f78
    type <pointer_type 0x7fd7a418edc8
        type <integer_type 0x7fd7a418ed20 char readonly string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418edc8>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fd7a41bef00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fd7a4216078>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ch_62 = cmd_string_getc (s_50(D), p_51(D));
./benchmarks/tmux/leak_10/tmux_leak_10.c:116:7: warning: use location
    ch = cmd_string_getc(s, p);
       ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41d4f78
    type <pointer_type 0x7fd7a418edc8
        type <integer_type 0x7fd7a418ed20 char readonly string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418edc8>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fd7a41bef00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fd7a4216078>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_32 = ch_62 != -1;
bb index := 16
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 8

======================================================================
_32 = ch_62 != -1;
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:130:9: warning: use location
  if (ch != EOF && fch != '{')
         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_34 = _32 & _33;
bb index := 16
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 8

======================================================================
_34 = _32 & _33;
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:130:16: warning: use location
  if (ch != EOF && fch != '{')
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_34 != 0)
bb index := 16
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 8

======================================================================
if (_34 != 0)
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:130:5: warning: use location
  if (ch != EOF && fch != '{')
     ^
if (_34 != 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:130:5: warning: use location
Cond in fucntion cmd_string_variable basic block 16
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 17
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 18
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_30 = ch_62 != 125;
bb index := 15
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_30 = ch_62 != 125;
bb index := 15
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 8

======================================================================
_30 = ch_62 != 125;
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:128:23: warning: use location
  if (fch == '{' && ch != '}')
                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_31 = _29 & _30;
bb index := 15
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_31 = _29 & _30;
bb index := 15
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 8

======================================================================
_31 = _29 & _30;
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:128:17: warning: use location
  if (fch == '{' && ch != '}')
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_28 = (char) ch_62;
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_28 = (char) ch_62;
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_89 = VDEF <.MEM_88>
*_27 = _28;
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_27 = _28;
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = (unsigned int) ch_62;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location
    if (ch == EOF || !cmd_string_other(ch))
                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_24 = _23 + 4294967248;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_24 > 9)
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:21: warning: use location
    if (ch == EOF || !cmd_string_other(ch))
                     ^
if (_24 > 9)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:21: warning: use location
Cond in fucntion cmd_string_variable basic block 12
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 15
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = (unsigned int) ch_62;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location
    if (ch == EOF || !cmd_string_other(ch))
                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = _21 + 4294967231;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_22 > 25)
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location
if (_22 > 25)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location
Cond in fucntion cmd_string_variable basic block 11
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 12
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = (unsigned int) ch_62;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = ch_62 != 95;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = _16 & _19;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (ch_62 == -1)
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:7: warning: use location
    if (ch == EOF || !cmd_string_other(ch))
       ^
if (ch_62 == -1)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:7: warning: use location
Cond in fucntion cmd_string_variable basic block 9
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 15
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
*p_51(D) = _98;
./benchmarks/tmux/leak_10/tmux_leak_10.c:76:6: warning: use location
  (*p)--;
      ^
*p_51(D) = _98;
./benchmarks/tmux/leak_10/tmux_leak_10.c:76:6: warning: use location
_97 = *p_51(D);
./benchmarks/tmux/leak_10/tmux_leak_10.c:76:3: warning: use location
  (*p)--;
   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_84 = VDEF <.MEM_83>
ch_55 = cmd_string_getc (s_50(D), p_51(D));
bb index := 3
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================
ch_55 = cmd_string_getc (s_50(D), p_51(D));
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:103:6: warning: use location
   ch = cmd_string_getc(s, p);
      ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41d4f78
    type <pointer_type 0x7fd7a418edc8
        type <integer_type 0x7fd7a418ed20 char readonly string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418edc8>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fd7a41bef00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fd7a4216078>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
ch_38 = PHI <ch_53(2), ch_55(3), ch_55(4)>
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ch_38 = PHI <ch_53(2), ch_55(3), ch_55(4)>
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================
ch_38 = PHI <ch_53(2), ch_55(3), ch_55(4)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch --------
_15 = (char) ch_38;
./benchmarks/tmux/leak_10/tmux_leak_10.c:113:14: warning: use location
   buf[len++] = ch;
              ^
*buf_59 = _15;
./benchmarks/tmux/leak_10/tmux_leak_10.c:113:14: warning: use location
_13 = (unsigned int) ch_38;
./benchmarks/tmux/leak_10/tmux_leak_10.c:108:8: warning: use location
   if (!cmd_string_first(ch)) {
        ^
_14 = _13 + 4294967231;
./benchmarks/tmux/leak_10/tmux_leak_10.c:108:8: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (unsigned int) ch_38;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (unsigned int) ch_38;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================
_9 = (unsigned int) ch_38;
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:108:8: warning: use location
   if (!cmd_string_first(ch)) {
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = ch_38 != 95;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = ch_38 != 95;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================
_8 = ch_38 != 95;
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:108:8: warning: use location
   if (!cmd_string_first(ch)) {
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = _8 & _11;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = _8 & _11;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================
_12 = _8 & _11;
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:108:8: warning: use location
   if (!cmd_string_first(ch)) {
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = (unsigned int) ch_55;
bb index := 4
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = (unsigned int) ch_55;
bb index := 4
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
_6 = (unsigned int) ch_55;
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:104:8: warning: use location
   if (!cmd_string_first(ch))
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = _6 + 4294967231;
bb index := 4
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = _6 + 4294967231;
bb index := 4
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
_7 = _6 + 4294967231;
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:104:8: warning: use location
   if (!cmd_string_first(ch))
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (unsigned int) ch_55;
bb index := 3
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================
_2 = (unsigned int) ch_55;
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:104:8: warning: use location
   if (!cmd_string_first(ch))
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = ch_55 != 95;
bb index := 3
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================
_1 = ch_55 != 95;
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:104:8: warning: use location
   if (!cmd_string_first(ch))
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _1 & _4;
bb index := 3
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================
_5 = _1 & _4;
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:104:8: warning: use location
   if (!cmd_string_first(ch))
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================
ch_53 = cmd_string_getc (s_50(D), p_51(D));
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:97:2: warning: use location
  switch (ch = cmd_string_getc(s, p)) {
  ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41d4f78
    type <pointer_type 0x7fd7a418edc8
        type <integer_type 0x7fd7a418ed20 char readonly string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418edc8>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fd7a41bef00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fd7a4216078>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================
ch_53 = cmd_string_getc (s_50(D), p_51(D));
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:97:2: warning: use location
  switch (ch = cmd_string_getc(s, p)) {
  ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41d4f78
    type <pointer_type 0x7fd7a418edc8
        type <integer_type 0x7fd7a418ed20 char readonly string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418edc8>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fd7a41bef00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fd7a4216078>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7a41d4f78
    type <pointer_type 0x7fd7a418edc8
        type <integer_type 0x7fd7a418ed20 char readonly string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418edc8>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fd7a41bef00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fd7a4216078>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fd7a41cb720 type <pointer_type 0x7fd7a418ea80> constant 0>

dot graph START

======================================================================
 <ssa_name 0x7fd7a41d4e58
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41d2360 buf>
    def_stmt buf_40 = PHI <buf_59(8), buf_64(14)>
    version 40
    ptr-info 0x7fd7a4216030>
buf_40 = PHI <buf_59(8), buf_64(14)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 70

======================================================================
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 70

======================================================================
free (buf_41);
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: use location
  free(buf);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: use location
  buf = xrealloc(buf, 1, len + 1);
      ^
this stmt is child function---xrealloc-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41d4e58
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41d2360 buf>
    def_stmt buf_40 = PHI <buf_59(8), buf_64(14)>
    version 40
    ptr-info 0x7fd7a4216030>
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :0========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;31m  find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:2 
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: use location
  free(buf);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find ================== 
_36 = buf_69 + len_42;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:5: warning: use location
  buf[len] = '\0';
     ^
*_36 = 0;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:11: warning: use location
  buf[len] = '\0';
           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_64 = xrealloc (buf_40, 1, _25);
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: use location
     buf = xrealloc(buf, 1, len + 1);
         ^
this stmt is child function---xrealloc-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41d4e58
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41d2360 buf>
    def_stmt buf_40 = PHI <buf_59(8), buf_64(14)>
    version 40
    ptr-info 0x7fd7a4216030>
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :0========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;31m  find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:4 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_27 = buf_64 + len_42;
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_27 = buf_64 + len_42;
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:8: warning: use location
     buf[len++] = ch;
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_89 = VDEF <.MEM_88>
*_27 = _28;
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_27 = _28;
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_89 = VDEF <.MEM_88>
*_27 = _28;
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_27 = _28;
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location
this stmt have mutiple branch --------

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7a41d4e58
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41d2360 buf>
    def_stmt buf_40 = PHI <buf_59(8), buf_64(14)>
    version 40
    ptr-info 0x7fd7a4216030>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: use location
  free(buf);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: use location
  free(buf);
  ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: Use after free error!: free location 
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: use location
  free(buf);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: use location
  free(buf);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: use location
  free(buf);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: use location
  free(buf);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
_36 = buf_69 + len_42;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:5: warning: use location
  buf[len] = '\0';
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
_36 = buf_69 + len_42;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:5: warning: use location
  buf[len] = '\0';
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
# .MEM_92 = VDEF <.MEM_91>
*_36 = 0;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:11: warning: use location
  buf[len] = '\0';
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
# .MEM_92 = VDEF <.MEM_91>
*_36 = 0;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:11: warning: use location
  buf[len] = '\0';
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
_27 = buf_64 + len_42;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:8: warning: use location
     buf[len++] = ch;
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
# .MEM_89 = VDEF <.MEM_88>
*_27 = _28;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
# .MEM_89 = VDEF <.MEM_88>
*_27 = _28;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd7a41d4e58
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41d2360 buf>
    def_stmt buf_40 = PHI <buf_59(8), buf_64(14)>
    version 40
    ptr-info 0x7fd7a4216030>
buf_40 = PHI <buf_59(8), buf_64(14)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 70

======================================================================
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 70

======================================================================
free (buf_41);
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: use location
  free(buf);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: use location
  buf = xrealloc(buf, 1, len + 1);
      ^
this stmt is child function---xrealloc-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41d4e58
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41d2360 buf>
    def_stmt buf_40 = PHI <buf_59(8), buf_64(14)>
    version 40
    ptr-info 0x7fd7a4216030>
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :0========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;31m  find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:2 
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: use location
  free(buf);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find ================== 
_36 = buf_69 + len_42;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:5: warning: use location
  buf[len] = '\0';
     ^
*_36 = 0;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:11: warning: use location
  buf[len] = '\0';
           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_64 = xrealloc (buf_40, 1, _25);
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: use location
     buf = xrealloc(buf, 1, len + 1);
         ^
this stmt is child function---xrealloc-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41d4e58
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41d2360 buf>
    def_stmt buf_40 = PHI <buf_59(8), buf_64(14)>
    version 40
    ptr-info 0x7fd7a4216030>
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :0========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;31m  find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:4 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_27 = buf_64 + len_42;
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_27 = buf_64 + len_42;
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:8: warning: use location
     buf[len++] = ch;
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_89 = VDEF <.MEM_88>
*_27 = _28;
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_27 = _28;
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_89 = VDEF <.MEM_88>
*_27 = _28;
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_27 = _28;
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location
this stmt have mutiple branch --------

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7a41d4e58
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41d2360 buf>
    def_stmt buf_40 = PHI <buf_59(8), buf_64(14)>
    version 40
    ptr-info 0x7fd7a4216030>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: use location
  free(buf);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: use location
  free(buf);
  ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: Use after free error!: free location 
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: use location
  free(buf);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: use location
  free(buf);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: use location
  free(buf);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: use location
  free(buf);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
_36 = buf_69 + len_42;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:5: warning: use location
  buf[len] = '\0';
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
_36 = buf_69 + len_42;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:5: warning: use location
  buf[len] = '\0';
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
# .MEM_92 = VDEF <.MEM_91>
*_36 = 0;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:11: warning: use location
  buf[len] = '\0';
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
# .MEM_92 = VDEF <.MEM_91>
*_36 = 0;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:11: warning: use location
  buf[len] = '\0';
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
_27 = buf_64 + len_42;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:8: warning: use location
     buf[len++] = ch;
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
# .MEM_89 = VDEF <.MEM_88>
*_27 = _28;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
# .MEM_89 = VDEF <.MEM_88>
*_27 = _28;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fd7a4182d40
    type <pointer_type 0x7fd7a41bd690
        type <array_type 0x7fd7a41b4348 type <integer_type 0x7fd7a418e9d8 char>
            QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 structural equality domain <integer_type 0x7fd7a41b42a0>
            pointer_to_this <pointer_type 0x7fd7a41bd690>>
        unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    readonly constant
    arg 0 <string_cst 0x7fd7a41cb7c8 type <array_type 0x7fd7a41b4348>
        readonly constant static "\000">
    ./benchmarks/tmux/leak_10/tmux_leak_10.c:138:11 start: ./benchmarks/tmux/leak_10/tmux_leak_10.c:138:11 finish: ./benchmarks/tmux/leak_10/tmux_leak_10.c:138:11>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd7a41d4d80
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
   
    def_stmt _37 = envent_72(D)->value;
    version 37
    ptr-info 0x7fd7a4216018>
# VUSE <.MEM_93>
_37 = envent_72(D)->value;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_94 = VDEF <.MEM_93>
_74 = strdup (_37);
bb index := 20
# VUSE <.MEM_15>
return _8;
In function ‘cmd_string_variable’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_94 = VDEF <.MEM_93>
_74 = strdup (_37);
bb index := 20
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_94 = VDEF <.MEM_93>
_74 = strdup (_37);
bb index := 20
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 70

======================================================================
_74 = strdup (_37);
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:139:10: warning: use location
  return (xstrdup(envent->value));
          ^
this stmt is child function---strdup-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41d4d80
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
   
    def_stmt _37 = envent_72(D)->value;
    version 37
    ptr-info 0x7fd7a4216018>
trace fucntion name:strdup 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
In function ‘cmd_string_variable’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch --------

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7a41d4d80
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
   
    def_stmt _37 = envent_72(D)->value;
    version 37
    ptr-info 0x7fd7a4216018>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:cmd_string_variable========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;33m =======POP node_fun stack:isspace========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:fopen========= [0m
[40;33m =======POP node_fun stack:fopen========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fd7a41de6c0
    type <pointer_type 0x7fd7a467f0a8
        type <void_type 0x7fd7a4678f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fd7a467f0a8>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fd7a4684bd0>>
   
    def_stmt _1 = malloc (1);
    version 1
    ptr-info 0x7fd7a4216258>
# .MEM_3 = VDEF <.MEM_2(D)>
_1 = malloc (1);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_4 = VDEF <.MEM_3>
causes.list = _1;
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_4 = VDEF <.MEM_3>
causes.list = _1;
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_4 = VDEF <.MEM_3>
causes.list = _1;
bb index := 2
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_4 = VDEF <.MEM_3>
causes.list = _1;
bb index := 2
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_4 = VDEF <.MEM_3>
causes.list = _1;
bb index := 2
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_4 = VDEF <.MEM_3>
causes.list = _1;
bb index := 2
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_4 = VDEF <.MEM_3>
causes.list = _1;
bb index := 2
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_4 = VDEF <.MEM_3>
causes.list = _1;
bb index := 2
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 70

======================================================================
causes.list = _1;
./benchmarks/tmux/leak_10/tmux_leak_10.c:441:14: warning: use location
  causes.list = malloc(1);
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_4 = VDEF <.MEM_3>
causes.list = _1;
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_4 = VDEF <.MEM_3>
causes.list = _1;
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_4 = VDEF <.MEM_3>
causes.list = _1;
bb index := 2
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_4 = VDEF <.MEM_3>
causes.list = _1;
bb index := 2
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_4 = VDEF <.MEM_3>
causes.list = _1;
bb index := 2
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_4 = VDEF <.MEM_3>
causes.list = _1;
bb index := 2
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_4 = VDEF <.MEM_3>
causes.list = _1;
bb index := 2
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_4 = VDEF <.MEM_3>
causes.list = _1;
bb index := 2
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 70

======================================================================
causes.list = _1;
./benchmarks/tmux/leak_10/tmux_leak_10.c:441:14: warning: use location
  causes.list = malloc(1);
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_3 = VDEF <.MEM_2(D)>
_1 = malloc (1);
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_3 = VDEF <.MEM_2(D)>
_1 = malloc (1);
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_3 = VDEF <.MEM_2(D)>
_1 = malloc (1);
bb index := 2
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_3 = VDEF <.MEM_2(D)>
_1 = malloc (1);
bb index := 2
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_3 = VDEF <.MEM_2(D)>
_1 = malloc (1);
bb index := 2
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_3 = VDEF <.MEM_2(D)>
_1 = malloc (1);
bb index := 2
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_3 = VDEF <.MEM_2(D)>
_1 = malloc (1);
bb index := 2
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_3 = VDEF <.MEM_2(D)>
_1 = malloc (1);
bb index := 2
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 70

======================================================================
_1 = malloc (1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:441:16: warning: use location
  causes.list = malloc(1);
                ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41de6c0
    type <pointer_type 0x7fd7a467f0a8
        type <void_type 0x7fd7a4678f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fd7a467f0a8>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fd7a4684bd0>>
   
    def_stmt _1 = malloc (1);
    version 1
    ptr-info 0x7fd7a4216258>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7a41de6c0
    type <pointer_type 0x7fd7a467f0a8
        type <void_type 0x7fd7a4678f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fd7a467f0a8>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fd7a4684bd0>>
   
    def_stmt _1 = malloc (1);
    version 1
    ptr-info 0x7fd7a4216258>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: use location
    free(argv[i]);
    ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd7a41f0828
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41f12d0 line>
    def_stmt line_23 = malloc (_22);
    version 23
    ptr-info 0x7fd7a42162b8>
# .MEM_180 = VDEF <.MEM_179>
line_23 = malloc (_22);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
len_29 = strlen (line_23);
At top level:
./benchmarks/tmux/leak_10/tmux_leak_10.c:384:7: warning: use location
   len = strlen(line);
       ^
this stmt is child function---strlen-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f0828
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41f12d0 line>
    def_stmt line_23 = malloc (_22);
    version 23
    ptr-info 0x7fd7a42162b8>
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
len_70 = PHI <len_29(10), len_29(15), len_29(55), len_29(56), len_29(58), len_29(59)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
len_14 = PHI <len_72(D)(3), len_70(60)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
len_21 = PHI <len_14(4), len_19(5)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
memcpy (_24, _16, len_21);
./benchmarks/tmux/leak_10/tmux_leak_10.c:379:3: warning: use location
   memcpy(line + oldlen, buf, len);
   ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f0828
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41f12d0 line>
    def_stmt line_23 = malloc (_22);
    version 23
    ptr-info 0x7fd7a42162b8>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_26 = line_23 + len_21;
./benchmarks/tmux/leak_10/tmux_leak_10.c:380:7: warning: use location
   line[oldlen + len] = '\0';
       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_26 = 0;
./benchmarks/tmux/leak_10/tmux_leak_10.c:380:22: warning: use location
   line[oldlen + len] = '\0';
                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_25 = len_21;
./benchmarks/tmux/leak_10/tmux_leak_10.c:380:15: warning: use location
   line[oldlen + len] = '\0';
               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = len_21 + 1;
./benchmarks/tmux/leak_10/tmux_leak_10.c:375:11: warning: use location
    line = xmalloc(len + 1);     /* allocation site */
           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
line_23 = malloc (_22);
./benchmarks/tmux/leak_10/tmux_leak_10.c:375:9: warning: use location
    line = xmalloc(len + 1);     /* allocation site */
         ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f0828
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41f12d0 line>
    def_stmt line_23 = malloc (_22);
    version 23
    ptr-info 0x7fd7a42162b8>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = (int) len_14;
./benchmarks/tmux/leak_10/tmux_leak_10.c:363:16: warning: use location
  while ((buf = fgets(buf, len, f))) {
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = __fgets_alias (buf_55, _54, f_11);
this stmt is child function---__fgets_alias-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f0828
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41f12d0 line>
    def_stmt line_23 = malloc (_22);
    version 23
    ptr-info 0x7fd7a42162b8>
trace fucntion name:__fgets_alias 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = PHI <_59(64), _63(66), _64(67)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = __printf_chk (1, "%s: %s", "path", _16);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f0828
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41f12d0 line>
    def_stmt line_23 = malloc (_22);
    version 23
    ptr-info 0x7fd7a42162b8>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_69 = PHI <_16(10), buf_40(15), buf_40(55), buf_40(56), buf_40(58), buf_40(59)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_55 = PHI <buf_71(D)(3), buf_69(60)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = __fgets_chk_warn (buf_55, _62, _54, f_11);
this stmt is child function---__fgets_chk_warn-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f0828
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41f12d0 line>
    def_stmt line_23 = malloc (_22);
    version 23
    ptr-info 0x7fd7a42162b8>
trace fucntion name:__fgets_chk_warn 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_177 = VDEF <.MEM_170>
fclose (f_11);
bb index := 69
# VUSE <.MEM_15>
return _8;
In function ‘main’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 69 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_177 = VDEF <.MEM_170>
fclose (f_11);
bb index := 69
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 69 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_177 = VDEF <.MEM_170>
fclose (f_11);
bb index := 69
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 69 ,possiable got to succ := 70

======================================================================
fclose (f_11);
At top level:
./benchmarks/tmux/leak_10/tmux_leak_10.c:430:2: warning: use location
  fclose(f);
  ^
this stmt is child function---fclose-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f0828
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41f12d0 line>
    def_stmt line_23 = malloc (_22);
    version 23
    ptr-info 0x7fd7a42162b8>
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = __fgets_chk (buf_55, _58, _54, f_11);
this stmt is child function---__fgets_chk-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f0828
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41f12d0 line>
    def_stmt line_23 = malloc (_22);
    version 23
    ptr-info 0x7fd7a42162b8>
trace fucntion name:__fgets_chk 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_11 == 0B)
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_11 == 0B)
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_11 == 0B)
bb index := 2
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_11 == 0B)
bb index := 2
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_11 == 0B)
bb index := 2
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_11 == 0B)
bb index := 2
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_11 == 0B)
bb index := 2
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_11 == 0B)
bb index := 2
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 70

======================================================================
if (f_11 == 0B)
At top level:
./benchmarks/tmux/leak_10/tmux_leak_10.c:354:5: warning: use location
  if ((f = fopen(path, "rb")) == NULL) {
     ^
if (f_11 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:354:5: warning: use location
Cond in fucntion main basic block 2
 ================== possible direct basic block ================= 
from main basic block 70
 ================== possible direct basic block ================= 
from main basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = __builtin_object_size (buf_55, 1);
this stmt is child function---__builtin_object_size-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f0828
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41f12d0 line>
    def_stmt line_23 = malloc (_22);
    version 23
    ptr-info 0x7fd7a42162b8>
trace fucntion name:__builtin_object_size 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_56 = __builtin_object_size (buf_55, 1);
this stmt is child function---__builtin_object_size-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f0828
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41f12d0 line>
    def_stmt line_23 = malloc (_22);
    version 23
    ptr-info 0x7fd7a42162b8>
trace fucntion name:__builtin_object_size 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_56 != 18446744073709551615)
if (_56 != 18446744073709551615)

 ================== find cond branch ================= 
Cond in fucntion main basic block 61
 ================== possible direct basic block ================= 
from main basic block 62
 ================== possible direct basic block ================= 
from main basic block 67
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_16 != 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:363:8: warning: use location
  while ((buf = fgets(buf, len, f))) {
        ^
if (_16 != 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:363:8: warning: use location
Cond in fucntion main basic block 68
 ================== possible direct basic block ================= 
from main basic block 4
 ================== possible direct basic block ================= 
from main basic block 69
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_57 = __builtin_constant_p (_54);
this stmt is child function---__builtin_constant_p-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f0828
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41f12d0 line>
    def_stmt line_23 = malloc (_22);
    version 23
    ptr-info 0x7fd7a42162b8>
trace fucntion name:__builtin_constant_p 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_57 == 0)
if (_57 == 0)

 ================== find cond branch ================= 
Cond in fucntion main basic block 62
 ================== possible direct basic block ================= 
from main basic block 64
 ================== possible direct basic block ================= 
from main basic block 63
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = (long unsigned int) _54;

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
len_19 = len_14 + 18446744073709551615;
./benchmarks/tmux/leak_10/tmux_leak_10.c:366:7: warning: use location
    len--;
       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = len_14 + 18446744073709551615;
./benchmarks/tmux/leak_10/tmux_leak_10.c:365:10: warning: use location
   if (buf[len - 1] == '\n')
          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_35 = len_29 + 18446744073709551614;
./benchmarks/tmux/leak_10/tmux_leak_10.c:389:23: warning: use location
    if (len > 1 && line[len - 2] != '\\')
                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (len_29 > 1)
./benchmarks/tmux/leak_10/tmux_leak_10.c:389:7: warning: use location
    if (len > 1 && line[len - 2] != '\\')
       ^
if (len_29 > 1)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:389:7: warning: use location
Cond in fucntion main basic block 8
 ================== possible direct basic block ================= 
from main basic block 9
 ================== possible direct basic block ================= 
from main basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = len_29 + 18446744073709551615;
./benchmarks/tmux/leak_10/tmux_leak_10.c:386:8: warning: use location
    line[len - 1] = '\0';
        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_34 = line_23 + _33;
./benchmarks/tmux/leak_10/tmux_leak_10.c:386:8: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_34 = 0;
./benchmarks/tmux/leak_10/tmux_leak_10.c:386:18: warning: use location
    line[len - 1] = '\0';
                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_30 = len_29 + 18446744073709551615;
./benchmarks/tmux/leak_10/tmux_leak_10.c:385:22: warning: use location
   if (len > 0 && line[len - 1] == '\\') {
                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_31 = line_23 + _30;
./benchmarks/tmux/leak_10/tmux_leak_10.c:385:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (len_29 != 0)
./benchmarks/tmux/leak_10/tmux_leak_10.c:385:6: warning: use location
   if (len > 0 && line[len - 1] == '\\') {
      ^
if (len_29 != 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:385:6: warning: use location
Cond in fucntion main basic block 6
 ================== possible direct basic block ================= 
from main basic block 7
 ================== possible direct basic block ================= 
from main basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_40 = PHI <line_23(11), buf_41(12)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
username_145 = cmd_string_string (buf_40, &p, 47, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:218:6: warning: use location
   if ((username = cmd_string_string(s, p, '/', 0)) == NULL)
      ^
this stmt is child function---cmd_string_string-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f0828
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41f12d0 line>
    def_stmt line_23 = malloc (_22);
    version 23
    ptr-info 0x7fd7a42162b8>
trace fucntion name:cmd_string_string 
[40;44m =======trace_function_path cmd_string_string  function_call count: 4 level :0========  [0m
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
[40;36m ======= node_fun:cmd_string_string========= [0m
[40;36m ======= find relate stmt with line ========= [0m
[40;36m ======= relate stmt argument:line ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :1========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with line ========= [0m
[40;36m ======= relate stmt argument:line ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:cmd_string_getc========= [0m
[40;46m =======add node_fun stack:cmd_string_getc========= [0m
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :1========  [0m
[40;36m ======= node_fun:cmd_string_getc========= [0m
[40;36m ======= find relate stmt with line ========= [0m
[40;36m ======= relate stmt argument:line ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:cmd_string_variable========= [0m
cmd_string_variable this fucntion return value is heap-object 
cmd_string_string this fucntion return value is heap-object cmd_string_variable
[40;46m =======add node_fun stack:cmd_string_variable========= [0m
[40;44m =======trace_function_path cmd_string_variable  function_call count: 4 level :1========  [0m
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
[40;36m ======= node_fun:cmd_string_variable========= [0m
[40;36m ======= find relate stmt with line ========= [0m
[40;36m ======= relate stmt argument:line ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :2========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with line ========= [0m
[40;36m ======= relate stmt argument:line ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:cmd_string_getc========= [0m
[40;46m =======add node_fun stack:cmd_string_getc========= [0m
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:cmd_string_getc========= [0m
[40;36m ======= find relate stmt with line ========= [0m
[40;36m ======= relate stmt argument:line ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: use location
   free(username);
   ^
this stmt is child function---free-----

 ================== find ================== 
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_146 = getpwnam (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:220:13: warning: use location
   if ((pw = getpwnam(username)) != NULL)
             ^
this stmt is child function---getpwnam-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f0828
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41f12d0 line>
    def_stmt line_23 = malloc (_22);
    version 23
    ptr-info 0x7fd7a42162b8>
trace fucntion name:getpwnam 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_147 = (long int) _146;
./benchmarks/tmux/leak_10/tmux_leak_10.c:220:13: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pw_148 = (struct passwd *) _147;
./benchmarks/tmux/leak_10/tmux_leak_10.c:220:11: warning: use location
   if ((pw = getpwnam(username)) != NULL)
           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
home_149 = pw_148->pw_dir;
./benchmarks/tmux/leak_10/tmux_leak_10.c:221:9: warning: use location
    home = pw->pw_dir;
         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
home_153 = PHI <0B(41), home_149(42)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
home_150 = PHI <home_139(37), home_144(39), home_153(43)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_151 = strdup (home_150);
./benchmarks/tmux/leak_10/tmux_leak_10.c:227:10: warning: use location
  return (strdup(home));
          ^
this stmt is child function---strdup-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f0828
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41f12d0 line>
    def_stmt line_23 = malloc (_22);
    version 23
    ptr-info 0x7fd7a42162b8>
trace fucntion name:strdup 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_152 = PHI <0B(38), 0B(40), 0B(44), _151(45)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_196 = _152;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
t_110 = _196;
./benchmarks/tmux/leak_10/tmux_leak_10.c:309:7: warning: use location
     t = cmd_string_expand_tilde(s, &p);
       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_135 = cmd_string_getc (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:211:6: warning: use location
  if (cmd_string_getc(s, p) == '/') {
      ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f0828
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41f12d0 line>
    def_stmt line_23 = malloc (_22);
    version 23
    ptr-info 0x7fd7a42162b8>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:cmd_string_getc========= [0m
[40;36m ======= find relate stmt with line ========= [0m
[40;36m ======= relate stmt argument:line ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_135 == 47)
./benchmarks/tmux/leak_10/tmux_leak_10.c:211:5: warning: use location
  if (cmd_string_getc(s, p) == '/') {
     ^
if (_135 == 47)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:211:5: warning: use location
Cond in fucntion main basic block 34
 ================== possible direct basic block ================= 
from main basic block 35
 ================== possible direct basic block ================= 
from main basic block 40
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ch_77 = cmd_string_getc (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:271:10: warning: use location
    while ((ch = cmd_string_getc(s, &p)) != EOF)
          ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f0828
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41f12d0 line>
    def_stmt line_23 = malloc (_22);
    version 23
    ptr-info 0x7fd7a42162b8>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:cmd_string_getc========= [0m
[40;36m ======= find relate stmt with line ========= [0m
[40;36m ======= relate stmt argument:line ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ch_93 = PHI <ch_73(18), ch_77(23)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (ch_93 != -1)
./benchmarks/tmux/leak_10/tmux_leak_10.c:288:7: warning: use location
    if (ch != EOF)
       ^
if (ch_93 != -1)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:288:7: warning: use location
Cond in fucntion main basic block 26
 ================== possible direct basic block ================= 
from main basic block 17
 ================== possible direct basic block ================= 
from main basic block 29
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
t_76 = cmd_string_variable (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:266:7: warning: use location
    if ((t = cmd_string_variable(s, &p)) == NULL)
       ^
this stmt is child function---cmd_string_variable-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f0828
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41f12d0 line>
    def_stmt line_23 = malloc (_22);
    version 23
    ptr-info 0x7fd7a42162b8>
trace fucntion name:cmd_string_variable 
[40;44m =======trace_function_path cmd_string_variable  function_call count: 4 level :0========  [0m
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
[40;36m ======= node_fun:cmd_string_variable========= [0m
[40;36m ======= find relate stmt with line ========= [0m
[40;36m ======= relate stmt argument:line ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :1========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with line ========= [0m
[40;36m ======= relate stmt argument:line ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:cmd_string_getc========= [0m
[40;46m =======add node_fun stack:cmd_string_getc========= [0m
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :1========  [0m
[40;36m ======= node_fun:cmd_string_getc========= [0m
[40;36m ======= find relate stmt with line ========= [0m
[40;36m ======= relate stmt argument:line ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
t_75 = cmd_string_string (buf_40, &p, 34, 1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:262:7: warning: use location
    if ((t = cmd_string_string(s, &p, '"', 1)) == NULL)
       ^
this stmt is child function---cmd_string_string-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f0828
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41f12d0 line>
    def_stmt line_23 = malloc (_22);
    version 23
    ptr-info 0x7fd7a42162b8>
trace fucntion name:cmd_string_string 
[40;44m =======trace_function_path cmd_string_string  function_call count: 4 level :0========  [0m
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
[40;36m ======= node_fun:cmd_string_string========= [0m
[40;36m ======= find relate stmt with line ========= [0m
[40;36m ======= relate stmt argument:line ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :1========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with line ========= [0m
[40;36m ======= relate stmt argument:line ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:cmd_string_getc========= [0m
[40;46m =======add node_fun stack:cmd_string_getc========= [0m
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :1========  [0m
[40;36m ======= node_fun:cmd_string_getc========= [0m
[40;36m ======= find relate stmt with line ========= [0m
[40;36m ======= relate stmt argument:line ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:cmd_string_variable========= [0m
cmd_string_variable this fucntion return value is heap-object 
cmd_string_string this fucntion return value is heap-object cmd_string_variable
[40;46m =======add node_fun stack:cmd_string_variable========= [0m
[40;44m =======trace_function_path cmd_string_variable  function_call count: 4 level :1========  [0m
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
[40;36m ======= node_fun:cmd_string_variable========= [0m
[40;36m ======= find relate stmt with line ========= [0m
[40;36m ======= relate stmt argument:line ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :2========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with line ========= [0m
[40;36m ======= relate stmt argument:line ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:cmd_string_getc========= [0m
[40;46m =======add node_fun stack:cmd_string_getc========= [0m
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:cmd_string_getc========= [0m
[40;36m ======= find relate stmt with line ========= [0m
[40;36m ======= relate stmt argument:line ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
t_74 = cmd_string_string (buf_40, &p, 39, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:258:7: warning: use location
    if ((t = cmd_string_string(s, &p, '\'', 0)) == NULL)
       ^
this stmt is child function---cmd_string_string-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f0828
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41f12d0 line>
    def_stmt line_23 = malloc (_22);
    version 23
    ptr-info 0x7fd7a42162b8>
trace fucntion name:cmd_string_string 
[40;44m =======trace_function_path cmd_string_string  function_call count: 4 level :0========  [0m
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
[40;36m ======= node_fun:cmd_string_string========= [0m
[40;36m ======= find relate stmt with line ========= [0m
[40;36m ======= relate stmt argument:line ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :1========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with line ========= [0m
[40;36m ======= relate stmt argument:line ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:cmd_string_getc========= [0m
[40;46m =======add node_fun stack:cmd_string_getc========= [0m
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :1========  [0m
[40;36m ======= node_fun:cmd_string_getc========= [0m
[40;36m ======= find relate stmt with line ========= [0m
[40;36m ======= relate stmt argument:line ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:cmd_string_variable========= [0m
cmd_string_variable this fucntion return value is heap-object 
cmd_string_string this fucntion return value is heap-object cmd_string_variable
[40;46m =======add node_fun stack:cmd_string_variable========= [0m
[40;44m =======trace_function_path cmd_string_variable  function_call count: 4 level :1========  [0m
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
[40;36m ======= node_fun:cmd_string_variable========= [0m
[40;36m ======= find relate stmt with line ========= [0m
[40;36m ======= relate stmt argument:line ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :2========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with line ========= [0m
[40;36m ======= relate stmt argument:line ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:cmd_string_getc========= [0m
[40;46m =======add node_fun stack:cmd_string_getc========= [0m
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:cmd_string_getc========= [0m
[40;36m ======= find relate stmt with line ========= [0m
[40;36m ======= relate stmt argument:line ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ch_73 = cmd_string_getc (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:255:6: warning: use location
   ch = cmd_string_getc(s, &p);
      ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f0828
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41f12d0 line>
    def_stmt line_23 = malloc (_22);
    version 23
    ptr-info 0x7fd7a42162b8>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:cmd_string_getc========= [0m
[40;36m ======= find relate stmt with line ========= [0m
[40;36m ======= relate stmt argument:line ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_116 = (char) ch_73;
./benchmarks/tmux/leak_10/tmux_leak_10.c:320:15: warning: use location
    buf[len++] = ch;
               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_115 = _116;
./benchmarks/tmux/leak_10/tmux_leak_10.c:320:15: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = *buf_40;
./benchmarks/tmux/leak_10/tmux_leak_10.c:399:7: warning: use location
   if (*buf == '\0') {
       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_46 == 0)
./benchmarks/tmux/leak_10/tmux_leak_10.c:399:6: warning: use location
   if (*buf == '\0') {
      ^
if (_46 == 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:399:6: warning: use location
Cond in fucntion main basic block 14
 ================== possible direct basic block ================= 
from main basic block 15
 ================== possible direct basic block ================= 
from main basic block 16
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *buf_40;
./benchmarks/tmux/leak_10/tmux_leak_10.c:397:26: warning: use location
   while (isspace((u_char)*buf))
                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = (unsigned char) _42;
./benchmarks/tmux/leak_10/tmux_leak_10.c:397:18: warning: use location
   while (isspace((u_char)*buf))
                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = (int) _43;
./benchmarks/tmux/leak_10/tmux_leak_10.c:397:10: warning: use location
   while (isspace((u_char)*buf))
          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = isspace (_44);
./benchmarks/tmux/leak_10/tmux_leak_10.c:397:10: warning: use location
this stmt is child function---isspace-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f0828
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41f12d0 line>
    def_stmt line_23 = malloc (_22);
    version 23
    ptr-info 0x7fd7a42162b8>
trace fucntion name:isspace 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_41 = buf_40 + 1;
./benchmarks/tmux/leak_10/tmux_leak_10.c:398:7: warning: use location
    buf++;
       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_39 = line_23;
./benchmarks/tmux/leak_10/tmux_leak_10.c:396:7: warning: use location
   buf = copy;
       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
copy_38 = line_23;
./benchmarks/tmux/leak_10/tmux_leak_10.c:392:8: warning: use location
   copy = line;
        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: use location
   free(copy);
   ^
this stmt is child function---free-----

 ================== find ================== 
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: use location
    free(copy);
    ^
this stmt is child function---free-----

 ================== find ================== 
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_24 = line_23;
./benchmarks/tmux/leak_10/tmux_leak_10.c:379:15: warning: use location
   memcpy(line + oldlen, buf, len);
               ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7a41f0828
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41f12d0 line>
    def_stmt line_23 = malloc (_22);
    version 23
    ptr-info 0x7fd7a42162b8>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: use location
    free(argv[i]);
    ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: use location
    free(copy);
    ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: use location
   free(copy);
   ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
len_70 = PHI <len_29(10), len_29(15), len_29(55), len_29(56), len_29(58), len_29(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
len_70 = PHI <len_29(10), len_29(15), len_29(55), len_29(56), len_29(58), len_29(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
len_70 = PHI <len_29(10), len_29(15), len_29(55), len_29(56), len_29(58), len_29(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
len_70 = PHI <len_29(10), len_29(15), len_29(55), len_29(56), len_29(58), len_29(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
len_70 = PHI <len_29(10), len_29(15), len_29(55), len_29(56), len_29(58), len_29(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
len_70 = PHI <len_29(10), len_29(15), len_29(55), len_29(56), len_29(58), len_29(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
len_14 = PHI <len_72(D)(3), len_70(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
len_14 = PHI <len_72(D)(3), len_70(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
len_14 = PHI <len_72(D)(3), len_70(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
len_14 = PHI <len_72(D)(3), len_70(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
len_14 = PHI <len_72(D)(3), len_70(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
len_14 = PHI <len_72(D)(3), len_70(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
len_21 = PHI <len_14(4), len_19(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
len_21 = PHI <len_14(4), len_19(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
len_21 = PHI <len_14(4), len_19(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
len_21 = PHI <len_14(4), len_19(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
len_21 = PHI <len_14(4), len_19(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
len_21 = PHI <len_14(4), len_19(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
_54 = (int) len_14;
./benchmarks/tmux/leak_10/tmux_leak_10.c:363:16: warning: use location
  while ((buf = fgets(buf, len, f))) {
                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
_54 = (int) len_14;
./benchmarks/tmux/leak_10/tmux_leak_10.c:363:16: warning: use location
  while ((buf = fgets(buf, len, f))) {
                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
_54 = (int) len_14;
./benchmarks/tmux/leak_10/tmux_leak_10.c:363:16: warning: use location
  while ((buf = fgets(buf, len, f))) {
                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
_54 = (int) len_14;
./benchmarks/tmux/leak_10/tmux_leak_10.c:363:16: warning: use location
  while ((buf = fgets(buf, len, f))) {
                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
_54 = (int) len_14;
./benchmarks/tmux/leak_10/tmux_leak_10.c:363:16: warning: use location
  while ((buf = fgets(buf, len, f))) {
                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
_54 = (int) len_14;
./benchmarks/tmux/leak_10/tmux_leak_10.c:363:16: warning: use location
  while ((buf = fgets(buf, len, f))) {
                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
# .MEM_176 = VDEF <.MEM_169>
_64 = __fgets_alias (buf_55, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
# .MEM_176 = VDEF <.MEM_169>
_64 = __fgets_alias (buf_55, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
# .MEM_176 = VDEF <.MEM_169>
_64 = __fgets_alias (buf_55, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
# .MEM_176 = VDEF <.MEM_169>
_64 = __fgets_alias (buf_55, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
# .MEM_176 = VDEF <.MEM_169>
_64 = __fgets_alias (buf_55, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
# .MEM_176 = VDEF <.MEM_169>
_64 = __fgets_alias (buf_55, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
_16 = PHI <_59(64), _63(66), _64(67)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
_16 = PHI <_59(64), _63(66), _64(67)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
_16 = PHI <_59(64), _63(66), _64(67)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
_16 = PHI <_59(64), _63(66), _64(67)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
_16 = PHI <_59(64), _63(66), _64(67)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
_16 = PHI <_59(64), _63(66), _64(67)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
buf_69 = PHI <_16(10), buf_40(15), buf_40(55), buf_40(56), buf_40(58), buf_40(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
buf_69 = PHI <_16(10), buf_40(15), buf_40(55), buf_40(56), buf_40(58), buf_40(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
buf_69 = PHI <_16(10), buf_40(15), buf_40(55), buf_40(56), buf_40(58), buf_40(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
buf_69 = PHI <_16(10), buf_40(15), buf_40(55), buf_40(56), buf_40(58), buf_40(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
buf_69 = PHI <_16(10), buf_40(15), buf_40(55), buf_40(56), buf_40(58), buf_40(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
buf_69 = PHI <_16(10), buf_40(15), buf_40(55), buf_40(56), buf_40(58), buf_40(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
buf_55 = PHI <buf_71(D)(3), buf_69(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
buf_55 = PHI <buf_71(D)(3), buf_69(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
buf_55 = PHI <buf_71(D)(3), buf_69(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
buf_55 = PHI <buf_71(D)(3), buf_69(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
buf_55 = PHI <buf_71(D)(3), buf_69(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
buf_55 = PHI <buf_71(D)(3), buf_69(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
# .MEM_174 = VDEF <.MEM_169>
_63 = __fgets_chk_warn (buf_55, _62, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
# .MEM_174 = VDEF <.MEM_169>
_63 = __fgets_chk_warn (buf_55, _62, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
# .MEM_174 = VDEF <.MEM_169>
_63 = __fgets_chk_warn (buf_55, _62, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
# .MEM_174 = VDEF <.MEM_169>
_63 = __fgets_chk_warn (buf_55, _62, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
# .MEM_174 = VDEF <.MEM_169>
_63 = __fgets_chk_warn (buf_55, _62, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
# .MEM_174 = VDEF <.MEM_169>
_63 = __fgets_chk_warn (buf_55, _62, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
# .MEM_177 = VDEF <.MEM_170>
fclose (f_11);
./benchmarks/tmux/leak_10/tmux_leak_10.c:430:2: warning: use location
  fclose(f);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
# .MEM_177 = VDEF <.MEM_170>
fclose (f_11);
./benchmarks/tmux/leak_10/tmux_leak_10.c:430:2: warning: use location
  fclose(f);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
# .MEM_177 = VDEF <.MEM_170>
fclose (f_11);
./benchmarks/tmux/leak_10/tmux_leak_10.c:430:2: warning: use location
  fclose(f);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
# .MEM_177 = VDEF <.MEM_170>
fclose (f_11);
./benchmarks/tmux/leak_10/tmux_leak_10.c:430:2: warning: use location
  fclose(f);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
# .MEM_177 = VDEF <.MEM_170>
fclose (f_11);
./benchmarks/tmux/leak_10/tmux_leak_10.c:430:2: warning: use location
  fclose(f);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
# .MEM_177 = VDEF <.MEM_170>
fclose (f_11);
./benchmarks/tmux/leak_10/tmux_leak_10.c:430:2: warning: use location
  fclose(f);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
# .MEM_175 = VDEF <.MEM_169>
_59 = __fgets_chk (buf_55, _58, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
# .MEM_175 = VDEF <.MEM_169>
_59 = __fgets_chk (buf_55, _58, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
# .MEM_175 = VDEF <.MEM_169>
_59 = __fgets_chk (buf_55, _58, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
# .MEM_175 = VDEF <.MEM_169>
_59 = __fgets_chk (buf_55, _58, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
# .MEM_175 = VDEF <.MEM_169>
_59 = __fgets_chk (buf_55, _58, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
# .MEM_175 = VDEF <.MEM_169>
_59 = __fgets_chk (buf_55, _58, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
# VUSE <.MEM_169>
_61 = __builtin_object_size (buf_55, 1);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
# VUSE <.MEM_169>
_61 = __builtin_object_size (buf_55, 1);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
# VUSE <.MEM_169>
_61 = __builtin_object_size (buf_55, 1);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
# VUSE <.MEM_169>
_61 = __builtin_object_size (buf_55, 1);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
# VUSE <.MEM_169>
_61 = __builtin_object_size (buf_55, 1);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
# VUSE <.MEM_169>
_61 = __builtin_object_size (buf_55, 1);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
# VUSE <.MEM_169>
_56 = __builtin_object_size (buf_55, 1);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
# VUSE <.MEM_169>
_56 = __builtin_object_size (buf_55, 1);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
# VUSE <.MEM_169>
_56 = __builtin_object_size (buf_55, 1);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
# VUSE <.MEM_169>
_56 = __builtin_object_size (buf_55, 1);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
# VUSE <.MEM_169>
_56 = __builtin_object_size (buf_55, 1);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
# VUSE <.MEM_169>
_56 = __builtin_object_size (buf_55, 1);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
if (_56 != 18446744073709551615)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
if (_56 != 18446744073709551615)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
if (_56 != 18446744073709551615)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
if (_56 != 18446744073709551615)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
if (_56 != 18446744073709551615)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
if (_56 != 18446744073709551615)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
if (_16 != 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:363:8: warning: use location
  while ((buf = fgets(buf, len, f))) {
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
if (_16 != 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:363:8: warning: use location
  while ((buf = fgets(buf, len, f))) {
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
if (_16 != 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:363:8: warning: use location
  while ((buf = fgets(buf, len, f))) {
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
if (_16 != 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:363:8: warning: use location
  while ((buf = fgets(buf, len, f))) {
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
if (_16 != 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:363:8: warning: use location
  while ((buf = fgets(buf, len, f))) {
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
if (_16 != 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:363:8: warning: use location
  while ((buf = fgets(buf, len, f))) {
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
_57 = __builtin_constant_p (_54);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
_57 = __builtin_constant_p (_54);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
_57 = __builtin_constant_p (_54);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
_57 = __builtin_constant_p (_54);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
_57 = __builtin_constant_p (_54);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
_57 = __builtin_constant_p (_54);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
if (_57 == 0)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
if (_57 == 0)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
if (_57 == 0)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
if (_57 == 0)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
if (_57 == 0)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
if (_57 == 0)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
_60 = (long unsigned int) _54;

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
_60 = (long unsigned int) _54;

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
_60 = (long unsigned int) _54;

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
_60 = (long unsigned int) _54;

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
_60 = (long unsigned int) _54;

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
_60 = (long unsigned int) _54;

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
buf_40 = PHI <line_23(11), buf_41(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
buf_40 = PHI <line_23(11), buf_41(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
buf_40 = PHI <line_23(11), buf_41(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
buf_40 = PHI <line_23(11), buf_41(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
buf_40 = PHI <line_23(11), buf_41(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
buf_40 = PHI <line_23(11), buf_41(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
home_153 = PHI <0B(41), home_149(42)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
home_153 = PHI <0B(41), home_149(42)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
home_153 = PHI <0B(41), home_149(42)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
home_153 = PHI <0B(41), home_149(42)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
home_153 = PHI <0B(41), home_149(42)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
home_153 = PHI <0B(41), home_149(42)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
home_150 = PHI <home_139(37), home_144(39), home_153(43)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
home_150 = PHI <home_139(37), home_144(39), home_153(43)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
home_150 = PHI <home_139(37), home_144(39), home_153(43)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
home_150 = PHI <home_139(37), home_144(39), home_153(43)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
home_150 = PHI <home_139(37), home_144(39), home_153(43)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
home_150 = PHI <home_139(37), home_144(39), home_153(43)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
# .MEM_195 = VDEF <.MEM_163>
_151 = strdup (home_150);
./benchmarks/tmux/leak_10/tmux_leak_10.c:227:10: warning: use location
  return (strdup(home));
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
_152 = PHI <0B(38), 0B(40), 0B(44), _151(45)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
_152 = PHI <0B(38), 0B(40), 0B(44), _151(45)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
_152 = PHI <0B(38), 0B(40), 0B(44), _151(45)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
_152 = PHI <0B(38), 0B(40), 0B(44), _151(45)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
_152 = PHI <0B(38), 0B(40), 0B(44), _151(45)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
_152 = PHI <0B(38), 0B(40), 0B(44), _151(45)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
_196 = _152;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
t_110 = _196;
./benchmarks/tmux/leak_10/tmux_leak_10.c:309:7: warning: use location
     t = cmd_string_expand_tilde(s, &p);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
ch_93 = PHI <ch_73(18), ch_77(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
ch_93 = PHI <ch_73(18), ch_77(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
ch_93 = PHI <ch_73(18), ch_77(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
ch_93 = PHI <ch_73(18), ch_77(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
ch_93 = PHI <ch_73(18), ch_77(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
ch_93 = PHI <ch_73(18), ch_77(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
_116 = (char) ch_73;
./benchmarks/tmux/leak_10/tmux_leak_10.c:320:15: warning: use location
    buf[len++] = ch;
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
# .MEM_207 = VDEF <.MEM_206>
*_115 = _116;
./benchmarks/tmux/leak_10/tmux_leak_10.c:320:15: warning: use location
    buf[len++] = ch;
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m

======================================================================

======================================================================
[40;31m  	possible double free :3 [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd7a4210360
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
   
    def_stmt _151 = strdup (home_150);
    version 151
    ptr-info 0x7fd7a4216828>
# .MEM_195 = VDEF <.MEM_163>
_151 = strdup (home_150);

 ================== trace ptable================== 
trace fucntion name:strdup 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---strdup-----
this Reserved word function ------strdup-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_151 = strdup (home_150);
./benchmarks/tmux/leak_10/tmux_leak_10.c:227:10: warning: use location
  return (strdup(home));
          ^
this stmt is child function---strdup-----

 ================== trace ================== 
 <ssa_name 0x7fd7a4210360
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
   
    def_stmt _151 = strdup (home_150);
    version 151
    ptr-info 0x7fd7a4216828>
trace fucntion name:strdup 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_152 = PHI <0B(38), 0B(40), 0B(44), _151(45)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_196 = _152;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
t_110 = _196;
./benchmarks/tmux/leak_10/tmux_leak_10.c:309:7: warning: use location
     t = cmd_string_expand_tilde(s, &p);
       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (t_110 == 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:310:8: warning: use location
     if (t == NULL)
        ^
if (t_110 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:310:8: warning: use location
Cond in fucntion main basic block 46
 ================== possible direct basic block ================= 
from main basic block 49
 ================== possible direct basic block ================= 
from main basic block 17
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7a4210360
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
   
    def_stmt _151 = strdup (home_150);
    version 151
    ptr-info 0x7fd7a4216828>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: use location
    free(argv[i]);
    ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
_152 = PHI <0B(38), 0B(40), 0B(44), _151(45)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fd7a41cb678 type <integer_type 0x7fd7a418e888 size_t> constant 1>

dot graph START

======================================================================
 <addr_expr 0x7fd7a41e5600
    type <pointer_type 0x7fd7a41b9f18
        type <array_type 0x7fd7a41b9e70 type <integer_type 0x7fd7a418e9d8 char>
            BLK
            size <integer_cst 0x7fd7a4191ab0 constant 40>
            unit size <integer_cst 0x7fd7a4191a98 constant 5>
            align 8 symtab 0 alias set -1 structural equality domain <integer_type 0x7fd7a41b9dc8>
            pointer_to_this <pointer_type 0x7fd7a41b9f18>>
        unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    readonly constant
    arg 0 <string_cst 0x7fd7a4182fc0 type <array_type 0x7fd7a41b9e70>
        readonly constant static "path\000">
    ./benchmarks/tmux/leak_10/tmux_leak_10.c:443:11 start: ./benchmarks/tmux/leak_10/tmux_leak_10.c:443:11 finish: ./benchmarks/tmux/leak_10/tmux_leak_10.c:443:11>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd7a41f07e0
    type <integer_type 0x7fd7a46787e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fd7a4678738 precision 64 min <integer_cst 0x7fd7a4664eb8 0> max <integer_cst 0x7fd7a4666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fd7a46849d8>>
   
    def_stmt _22 = len_21 + 1;
    version 22>
_22 = len_21 + 1;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
line_23 = malloc (_22);
./benchmarks/tmux/leak_10/tmux_leak_10.c:375:9: warning: use location
    line = xmalloc(len + 1);     /* allocation site */
         ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f07e0
    type <integer_type 0x7fd7a46787e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fd7a4678738 precision 64 min <integer_cst 0x7fd7a4664eb8 0> max <integer_cst 0x7fd7a4666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fd7a46849d8>>
   
    def_stmt _22 = len_21 + 1;
    version 22>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
len_29 = strlen (line_23);
./benchmarks/tmux/leak_10/tmux_leak_10.c:384:7: warning: use location
   len = strlen(line);
       ^
this stmt is child function---strlen-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f07e0
    type <integer_type 0x7fd7a46787e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fd7a4678738 precision 64 min <integer_cst 0x7fd7a4664eb8 0> max <integer_cst 0x7fd7a4666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fd7a46849d8>>
   
    def_stmt _22 = len_21 + 1;
    version 22>
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
len_70 = PHI <len_29(10), len_29(15), len_29(55), len_29(56), len_29(58), len_29(59)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
len_14 = PHI <len_72(D)(3), len_70(60)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
len_21 = PHI <len_14(4), len_19(5)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
memcpy (_24, _16, len_21);
./benchmarks/tmux/leak_10/tmux_leak_10.c:379:3: warning: use location
   memcpy(line + oldlen, buf, len);
   ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f07e0
    type <integer_type 0x7fd7a46787e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fd7a4678738 precision 64 min <integer_cst 0x7fd7a4664eb8 0> max <integer_cst 0x7fd7a4666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fd7a46849d8>>
   
    def_stmt _22 = len_21 + 1;
    version 22>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_26 = line_23 + len_21;
./benchmarks/tmux/leak_10/tmux_leak_10.c:380:7: warning: use location
   line[oldlen + len] = '\0';
       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_26 = 0;
./benchmarks/tmux/leak_10/tmux_leak_10.c:380:22: warning: use location
   line[oldlen + len] = '\0';
                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_25 = len_21;
./benchmarks/tmux/leak_10/tmux_leak_10.c:380:15: warning: use location
   line[oldlen + len] = '\0';
               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = len_21 + 1;
./benchmarks/tmux/leak_10/tmux_leak_10.c:375:11: warning: use location
    line = xmalloc(len + 1);     /* allocation site */
           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_54 = (int) len_14;
./benchmarks/tmux/leak_10/tmux_leak_10.c:363:16: warning: use location
  while ((buf = fgets(buf, len, f))) {
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = __fgets_alias (buf_55, _54, f_11);
this stmt is child function---__fgets_alias-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f07e0
    type <integer_type 0x7fd7a46787e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fd7a4678738 precision 64 min <integer_cst 0x7fd7a4664eb8 0> max <integer_cst 0x7fd7a4666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fd7a46849d8>>
   
    def_stmt _22 = len_21 + 1;
    version 22>
trace fucntion name:__fgets_alias 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = PHI <_59(64), _63(66), _64(67)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = __printf_chk (1, "%s: %s", "path", _16);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f07e0
    type <integer_type 0x7fd7a46787e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fd7a4678738 precision 64 min <integer_cst 0x7fd7a4664eb8 0> max <integer_cst 0x7fd7a4666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fd7a46849d8>>
   
    def_stmt _22 = len_21 + 1;
    version 22>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_69 = PHI <_16(10), buf_40(15), buf_40(55), buf_40(56), buf_40(58), buf_40(59)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_55 = PHI <buf_71(D)(3), buf_69(60)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = __fgets_chk_warn (buf_55, _62, _54, f_11);
this stmt is child function---__fgets_chk_warn-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f07e0
    type <integer_type 0x7fd7a46787e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fd7a4678738 precision 64 min <integer_cst 0x7fd7a4664eb8 0> max <integer_cst 0x7fd7a4666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fd7a46849d8>>
   
    def_stmt _22 = len_21 + 1;
    version 22>
trace fucntion name:__fgets_chk_warn 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_177 = VDEF <.MEM_170>
fclose (f_11);
bb index := 69
# VUSE <.MEM_15>
return _8;
In function ‘main’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 69 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_177 = VDEF <.MEM_170>
fclose (f_11);
bb index := 69
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 69 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_177 = VDEF <.MEM_170>
fclose (f_11);
bb index := 69
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 69 ,possiable got to succ := 70

======================================================================
fclose (f_11);
At top level:
./benchmarks/tmux/leak_10/tmux_leak_10.c:430:2: warning: use location
  fclose(f);
  ^
this stmt is child function---fclose-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f07e0
    type <integer_type 0x7fd7a46787e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fd7a4678738 precision 64 min <integer_cst 0x7fd7a4664eb8 0> max <integer_cst 0x7fd7a4666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fd7a46849d8>>
   
    def_stmt _22 = len_21 + 1;
    version 22>
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = __fgets_chk (buf_55, _58, _54, f_11);
this stmt is child function---__fgets_chk-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f07e0
    type <integer_type 0x7fd7a46787e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fd7a4678738 precision 64 min <integer_cst 0x7fd7a4664eb8 0> max <integer_cst 0x7fd7a4666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fd7a46849d8>>
   
    def_stmt _22 = len_21 + 1;
    version 22>
trace fucntion name:__fgets_chk 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_11 == 0B)
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_11 == 0B)
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_11 == 0B)
bb index := 2
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_11 == 0B)
bb index := 2
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_11 == 0B)
bb index := 2
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_11 == 0B)
bb index := 2
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_11 == 0B)
bb index := 2
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_11 == 0B)
bb index := 2
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 70

======================================================================
if (f_11 == 0B)
At top level:
./benchmarks/tmux/leak_10/tmux_leak_10.c:354:5: warning: use location
  if ((f = fopen(path, "rb")) == NULL) {
     ^
if (f_11 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:354:5: warning: use location
Cond in fucntion main basic block 2
 ================== possible direct basic block ================= 
from main basic block 70
 ================== possible direct basic block ================= 
from main basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = __builtin_object_size (buf_55, 1);
this stmt is child function---__builtin_object_size-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f07e0
    type <integer_type 0x7fd7a46787e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fd7a4678738 precision 64 min <integer_cst 0x7fd7a4664eb8 0> max <integer_cst 0x7fd7a4666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fd7a46849d8>>
   
    def_stmt _22 = len_21 + 1;
    version 22>
trace fucntion name:__builtin_object_size 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_56 = __builtin_object_size (buf_55, 1);
this stmt is child function---__builtin_object_size-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f07e0
    type <integer_type 0x7fd7a46787e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fd7a4678738 precision 64 min <integer_cst 0x7fd7a4664eb8 0> max <integer_cst 0x7fd7a4666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fd7a46849d8>>
   
    def_stmt _22 = len_21 + 1;
    version 22>
trace fucntion name:__builtin_object_size 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_56 != 18446744073709551615)
if (_56 != 18446744073709551615)

 ================== find cond branch ================= 
Cond in fucntion main basic block 61
 ================== possible direct basic block ================= 
from main basic block 62
 ================== possible direct basic block ================= 
from main basic block 67
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_16 != 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:363:8: warning: use location
  while ((buf = fgets(buf, len, f))) {
        ^
if (_16 != 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:363:8: warning: use location
Cond in fucntion main basic block 68
 ================== possible direct basic block ================= 
from main basic block 4
 ================== possible direct basic block ================= 
from main basic block 69
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_57 = __builtin_constant_p (_54);
this stmt is child function---__builtin_constant_p-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f07e0
    type <integer_type 0x7fd7a46787e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fd7a4678738 precision 64 min <integer_cst 0x7fd7a4664eb8 0> max <integer_cst 0x7fd7a4666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fd7a46849d8>>
   
    def_stmt _22 = len_21 + 1;
    version 22>
trace fucntion name:__builtin_constant_p 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_57 == 0)
if (_57 == 0)

 ================== find cond branch ================= 
Cond in fucntion main basic block 62
 ================== possible direct basic block ================= 
from main basic block 64
 ================== possible direct basic block ================= 
from main basic block 63
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = (long unsigned int) _54;

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
len_19 = len_14 + 18446744073709551615;
./benchmarks/tmux/leak_10/tmux_leak_10.c:366:7: warning: use location
    len--;
       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_15 = len_14 + 18446744073709551615;
./benchmarks/tmux/leak_10/tmux_leak_10.c:365:10: warning: use location
   if (buf[len - 1] == '\n')
          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_35 = len_29 + 18446744073709551614;
./benchmarks/tmux/leak_10/tmux_leak_10.c:389:23: warning: use location
    if (len > 1 && line[len - 2] != '\\')
                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (len_29 > 1)
./benchmarks/tmux/leak_10/tmux_leak_10.c:389:7: warning: use location
    if (len > 1 && line[len - 2] != '\\')
       ^
if (len_29 > 1)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:389:7: warning: use location
Cond in fucntion main basic block 8
 ================== possible direct basic block ================= 
from main basic block 9
 ================== possible direct basic block ================= 
from main basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = len_29 + 18446744073709551615;
./benchmarks/tmux/leak_10/tmux_leak_10.c:386:8: warning: use location
    line[len - 1] = '\0';
        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_34 = line_23 + _33;
./benchmarks/tmux/leak_10/tmux_leak_10.c:386:8: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_34 = 0;
./benchmarks/tmux/leak_10/tmux_leak_10.c:386:18: warning: use location
    line[len - 1] = '\0';
                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_30 = len_29 + 18446744073709551615;
./benchmarks/tmux/leak_10/tmux_leak_10.c:385:22: warning: use location
   if (len > 0 && line[len - 1] == '\\') {
                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_31 = line_23 + _30;
./benchmarks/tmux/leak_10/tmux_leak_10.c:385:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (len_29 != 0)
./benchmarks/tmux/leak_10/tmux_leak_10.c:385:6: warning: use location
   if (len > 0 && line[len - 1] == '\\') {
      ^
if (len_29 != 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:385:6: warning: use location
Cond in fucntion main basic block 6
 ================== possible direct basic block ================= 
from main basic block 7
 ================== possible direct basic block ================= 
from main basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_40 = PHI <line_23(11), buf_41(12)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
username_145 = cmd_string_string (buf_40, &p, 47, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:218:6: warning: use location
   if ((username = cmd_string_string(s, p, '/', 0)) == NULL)
      ^
this stmt is child function---cmd_string_string-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f07e0
    type <integer_type 0x7fd7a46787e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fd7a4678738 precision 64 min <integer_cst 0x7fd7a4664eb8 0> max <integer_cst 0x7fd7a4666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fd7a46849d8>>
   
    def_stmt _22 = len_21 + 1;
    version 22>
trace fucntion name:cmd_string_string 
[40;44m =======trace_function_path cmd_string_string  function_call count: 4 level :0========  [0m
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
[40;31m  find free stmt free same pointer [0m
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: use location
  free(buf);
  ^
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :1========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;31m  find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:cmd_string_getc========= [0m
[40;46m =======add node_fun stack:cmd_string_getc========= [0m
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :1========  [0m
[40;42m =======pre add _ fucntion:cmd_string_variable========= [0m
cmd_string_variable this fucntion return value is heap-object 
cmd_string_string this fucntion return value is heap-object cmd_string_variable
[40;46m =======add node_fun stack:cmd_string_variable========= [0m
[40;44m =======trace_function_path cmd_string_variable  function_call count: 4 level :1========  [0m
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
[40;31m  find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: use location
  free(buf);
  ^
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
[40;31m  find free stmt free same pointer [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: use location
  free(buf);
  ^
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :2========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;31m  find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:cmd_string_getc========= [0m
[40;46m =======add node_fun stack:cmd_string_getc========= [0m
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :2========  [0m

 ================== trace ================== 
trace fucntion free:5 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: use location
   free(username);
   ^
this stmt is child function---free-----

 ================== find ================== 
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: use location
[40;32m    HAS FREE STMT count:6 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_146 = getpwnam (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:220:13: warning: use location
   if ((pw = getpwnam(username)) != NULL)
             ^
this stmt is child function---getpwnam-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f07e0
    type <integer_type 0x7fd7a46787e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fd7a4678738 precision 64 min <integer_cst 0x7fd7a4664eb8 0> max <integer_cst 0x7fd7a4666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fd7a46849d8>>
   
    def_stmt _22 = len_21 + 1;
    version 22>
trace fucntion name:getpwnam 

 ================== trace ================== 
trace fucntion free:6 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_147 = (long int) _146;
./benchmarks/tmux/leak_10/tmux_leak_10.c:220:13: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pw_148 = (struct passwd *) _147;
./benchmarks/tmux/leak_10/tmux_leak_10.c:220:11: warning: use location
   if ((pw = getpwnam(username)) != NULL)
           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
home_149 = pw_148->pw_dir;
./benchmarks/tmux/leak_10/tmux_leak_10.c:221:9: warning: use location
    home = pw->pw_dir;
         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
home_153 = PHI <0B(41), home_149(42)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
home_150 = PHI <home_139(37), home_144(39), home_153(43)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_151 = strdup (home_150);
./benchmarks/tmux/leak_10/tmux_leak_10.c:227:10: warning: use location
  return (strdup(home));
          ^
this stmt is child function---strdup-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f07e0
    type <integer_type 0x7fd7a46787e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fd7a4678738 precision 64 min <integer_cst 0x7fd7a4664eb8 0> max <integer_cst 0x7fd7a4666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fd7a46849d8>>
   
    def_stmt _22 = len_21 + 1;
    version 22>
trace fucntion name:strdup 

 ================== trace ================== 
trace fucntion free:6 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_152 = PHI <0B(38), 0B(40), 0B(44), _151(45)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_196 = _152;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
t_110 = _196;
./benchmarks/tmux/leak_10/tmux_leak_10.c:309:7: warning: use location
     t = cmd_string_expand_tilde(s, &p);
       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_135 = cmd_string_getc (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:211:6: warning: use location
  if (cmd_string_getc(s, p) == '/') {
      ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f07e0
    type <integer_type 0x7fd7a46787e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fd7a4678738 precision 64 min <integer_cst 0x7fd7a4664eb8 0> max <integer_cst 0x7fd7a4666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fd7a46849d8>>
   
    def_stmt _22 = len_21 + 1;
    version 22>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:6 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_135 == 47)
./benchmarks/tmux/leak_10/tmux_leak_10.c:211:5: warning: use location
  if (cmd_string_getc(s, p) == '/') {
     ^
if (_135 == 47)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:211:5: warning: use location
Cond in fucntion main basic block 34
 ================== possible direct basic block ================= 
from main basic block 35
 ================== possible direct basic block ================= 
from main basic block 40
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ch_77 = cmd_string_getc (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:271:10: warning: use location
    while ((ch = cmd_string_getc(s, &p)) != EOF)
          ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f07e0
    type <integer_type 0x7fd7a46787e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fd7a4678738 precision 64 min <integer_cst 0x7fd7a4664eb8 0> max <integer_cst 0x7fd7a4666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fd7a46849d8>>
   
    def_stmt _22 = len_21 + 1;
    version 22>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:6 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ch_93 = PHI <ch_73(18), ch_77(23)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (ch_93 != -1)
./benchmarks/tmux/leak_10/tmux_leak_10.c:288:7: warning: use location
    if (ch != EOF)
       ^
if (ch_93 != -1)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:288:7: warning: use location
Cond in fucntion main basic block 26
 ================== possible direct basic block ================= 
from main basic block 17
 ================== possible direct basic block ================= 
from main basic block 29
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
t_76 = cmd_string_variable (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:266:7: warning: use location
    if ((t = cmd_string_variable(s, &p)) == NULL)
       ^
this stmt is child function---cmd_string_variable-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f07e0
    type <integer_type 0x7fd7a46787e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fd7a4678738 precision 64 min <integer_cst 0x7fd7a4664eb8 0> max <integer_cst 0x7fd7a4666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fd7a46849d8>>
   
    def_stmt _22 = len_21 + 1;
    version 22>
trace fucntion name:cmd_string_variable 
[40;44m =======trace_function_path cmd_string_variable  function_call count: 4 level :0========  [0m
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
[40;31m  find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: use location
  free(buf);
  ^
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
[40;31m  find free stmt free same pointer [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: use location
  free(buf);
  ^
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :1========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;31m  find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:cmd_string_getc========= [0m
[40;46m =======add node_fun stack:cmd_string_getc========= [0m
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :1========  [0m

 ================== trace ================== 
trace fucntion free:9 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
t_75 = cmd_string_string (buf_40, &p, 34, 1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:262:7: warning: use location
    if ((t = cmd_string_string(s, &p, '"', 1)) == NULL)
       ^
this stmt is child function---cmd_string_string-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f07e0
    type <integer_type 0x7fd7a46787e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fd7a4678738 precision 64 min <integer_cst 0x7fd7a4664eb8 0> max <integer_cst 0x7fd7a4666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fd7a46849d8>>
   
    def_stmt _22 = len_21 + 1;
    version 22>
trace fucntion name:cmd_string_string 
[40;44m =======trace_function_path cmd_string_string  function_call count: 4 level :0========  [0m
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
[40;31m  find free stmt free same pointer [0m
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: use location
  free(buf);
  ^
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :1========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;31m  find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:cmd_string_getc========= [0m
[40;46m =======add node_fun stack:cmd_string_getc========= [0m
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :1========  [0m
[40;42m =======pre add _ fucntion:cmd_string_variable========= [0m
cmd_string_variable this fucntion return value is heap-object 
cmd_string_string this fucntion return value is heap-object cmd_string_variable
[40;46m =======add node_fun stack:cmd_string_variable========= [0m
[40;44m =======trace_function_path cmd_string_variable  function_call count: 4 level :1========  [0m
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
[40;31m  find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: use location
  free(buf);
  ^
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
[40;31m  find free stmt free same pointer [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: use location
  free(buf);
  ^
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :2========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;31m  find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:cmd_string_getc========= [0m
[40;46m =======add node_fun stack:cmd_string_getc========= [0m
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :2========  [0m

 ================== trace ================== 
trace fucntion free:14 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
t_74 = cmd_string_string (buf_40, &p, 39, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:258:7: warning: use location
    if ((t = cmd_string_string(s, &p, '\'', 0)) == NULL)
       ^
this stmt is child function---cmd_string_string-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f07e0
    type <integer_type 0x7fd7a46787e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fd7a4678738 precision 64 min <integer_cst 0x7fd7a4664eb8 0> max <integer_cst 0x7fd7a4666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fd7a46849d8>>
   
    def_stmt _22 = len_21 + 1;
    version 22>
trace fucntion name:cmd_string_string 
[40;44m =======trace_function_path cmd_string_string  function_call count: 4 level :0========  [0m
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
[40;31m  find free stmt free same pointer [0m
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: use location
  free(buf);
  ^
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :1========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;31m  find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:cmd_string_getc========= [0m
[40;46m =======add node_fun stack:cmd_string_getc========= [0m
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :1========  [0m
[40;42m =======pre add _ fucntion:cmd_string_variable========= [0m
cmd_string_variable this fucntion return value is heap-object 
cmd_string_string this fucntion return value is heap-object cmd_string_variable
[40;46m =======add node_fun stack:cmd_string_variable========= [0m
[40;44m =======trace_function_path cmd_string_variable  function_call count: 4 level :1========  [0m
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
[40;31m  find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: use location
  free(buf);
  ^
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
[40;31m  find free stmt free same pointer [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: use location
  free(buf);
  ^
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :2========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;31m  find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:cmd_string_getc========= [0m
[40;46m =======add node_fun stack:cmd_string_getc========= [0m
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :2========  [0m

 ================== trace ================== 
trace fucntion free:19 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ch_73 = cmd_string_getc (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:255:6: warning: use location
   ch = cmd_string_getc(s, &p);
      ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f07e0
    type <integer_type 0x7fd7a46787e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fd7a4678738 precision 64 min <integer_cst 0x7fd7a4664eb8 0> max <integer_cst 0x7fd7a4666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fd7a46849d8>>
   
    def_stmt _22 = len_21 + 1;
    version 22>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:19 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_116 = (char) ch_73;
./benchmarks/tmux/leak_10/tmux_leak_10.c:320:15: warning: use location
    buf[len++] = ch;
               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_115 = _116;
./benchmarks/tmux/leak_10/tmux_leak_10.c:320:15: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = *buf_40;
./benchmarks/tmux/leak_10/tmux_leak_10.c:399:7: warning: use location
   if (*buf == '\0') {
       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_46 == 0)
./benchmarks/tmux/leak_10/tmux_leak_10.c:399:6: warning: use location
   if (*buf == '\0') {
      ^
if (_46 == 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:399:6: warning: use location
Cond in fucntion main basic block 14
 ================== possible direct basic block ================= 
from main basic block 15
 ================== possible direct basic block ================= 
from main basic block 16
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *buf_40;
./benchmarks/tmux/leak_10/tmux_leak_10.c:397:26: warning: use location
   while (isspace((u_char)*buf))
                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = (unsigned char) _42;
./benchmarks/tmux/leak_10/tmux_leak_10.c:397:18: warning: use location
   while (isspace((u_char)*buf))
                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = (int) _43;
./benchmarks/tmux/leak_10/tmux_leak_10.c:397:10: warning: use location
   while (isspace((u_char)*buf))
          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = isspace (_44);
./benchmarks/tmux/leak_10/tmux_leak_10.c:397:10: warning: use location
this stmt is child function---isspace-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f07e0
    type <integer_type 0x7fd7a46787e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fd7a4678738 precision 64 min <integer_cst 0x7fd7a4664eb8 0> max <integer_cst 0x7fd7a4666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fd7a46849d8>>
   
    def_stmt _22 = len_21 + 1;
    version 22>
trace fucntion name:isspace 

 ================== trace ================== 
trace fucntion free:19 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_41 = buf_40 + 1;
./benchmarks/tmux/leak_10/tmux_leak_10.c:398:7: warning: use location
    buf++;
       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_39 = line_23;
./benchmarks/tmux/leak_10/tmux_leak_10.c:396:7: warning: use location
   buf = copy;
       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
copy_38 = line_23;
./benchmarks/tmux/leak_10/tmux_leak_10.c:392:8: warning: use location
   copy = line;
        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: use location
   free(copy);
   ^
this stmt is child function---free-----

 ================== find ================== 
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: use location
[40;32m    HAS FREE STMT count:20 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: use location
    free(copy);
    ^
this stmt is child function---free-----

 ================== find ================== 
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: use location
[40;32m    HAS FREE STMT count:21 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_24 = line_23;
./benchmarks/tmux/leak_10/tmux_leak_10.c:379:15: warning: use location
   memcpy(line + oldlen, buf, len);
               ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7a41f07e0
    type <integer_type 0x7fd7a46787e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fd7a4678738 precision 64 min <integer_cst 0x7fd7a4664eb8 0> max <integer_cst 0x7fd7a4666500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fd7a46849d8>>
   
    def_stmt _22 = len_21 + 1;
    version 22>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: use location
   free(username);
   ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: use location
  free(buf);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: use location
    free(argv[i]);
    ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: use location
   free(argv);
   ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: use location
    free(copy);
    ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_218 = VDEF <.MEM_217>
free (_49);
./benchmarks/tmux/leak_10/tmux_leak_10.c:407:4: warning: use location
    free(cause);
    ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: use location
   free(copy);
   ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_190 = VDEF <.MEM_189>
username_145 = cmd_string_string (buf_40, &p, 47, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:218:6: warning: Use after free error!: free location 
   if ((username = cmd_string_string(s, p, '/', 0)) == NULL)
      ^
len_70 = PHI <len_29(10), len_29(15), len_29(55), len_29(56), len_29(58), len_29(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
len_70 = PHI <len_29(10), len_29(15), len_29(55), len_29(56), len_29(58), len_29(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_198 = VDEF <.MEM_187>
t_76 = cmd_string_variable (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:266:7: warning: Use after free error!: free location 
    if ((t = cmd_string_variable(s, &p)) == NULL)
       ^
len_70 = PHI <len_29(10), len_29(15), len_29(55), len_29(56), len_29(58), len_29(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_200 = VDEF <.MEM_187>
t_75 = cmd_string_string (buf_40, &p, 34, 1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:262:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '"', 1)) == NULL)
       ^
len_70 = PHI <len_29(10), len_29(15), len_29(55), len_29(56), len_29(58), len_29(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_197 = VDEF <.MEM_187>
t_74 = cmd_string_string (buf_40, &p, 39, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:258:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '\'', 0)) == NULL)
       ^
len_70 = PHI <len_29(10), len_29(15), len_29(55), len_29(56), len_29(58), len_29(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
len_70 = PHI <len_29(10), len_29(15), len_29(55), len_29(56), len_29(58), len_29(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
len_70 = PHI <len_29(10), len_29(15), len_29(55), len_29(56), len_29(58), len_29(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
len_70 = PHI <len_29(10), len_29(15), len_29(55), len_29(56), len_29(58), len_29(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: Use after free error!: free location 
  free(buf);
  ^
len_70 = PHI <len_29(10), len_29(15), len_29(55), len_29(56), len_29(58), len_29(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
len_70 = PHI <len_29(10), len_29(15), len_29(55), len_29(56), len_29(58), len_29(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: Use after free error!: free location 
   free(argv);
   ^
len_70 = PHI <len_29(10), len_29(15), len_29(55), len_29(56), len_29(58), len_29(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
len_70 = PHI <len_29(10), len_29(15), len_29(55), len_29(56), len_29(58), len_29(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_218 = VDEF <.MEM_217>
free (_49);
./benchmarks/tmux/leak_10/tmux_leak_10.c:407:4: warning: Use after free error!: free location 
    free(cause);
    ^
len_70 = PHI <len_29(10), len_29(15), len_29(55), len_29(56), len_29(58), len_29(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
len_70 = PHI <len_29(10), len_29(15), len_29(55), len_29(56), len_29(58), len_29(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_190 = VDEF <.MEM_189>
username_145 = cmd_string_string (buf_40, &p, 47, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:218:6: warning: Use after free error!: free location 
   if ((username = cmd_string_string(s, p, '/', 0)) == NULL)
      ^
len_14 = PHI <len_72(D)(3), len_70(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
len_14 = PHI <len_72(D)(3), len_70(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_198 = VDEF <.MEM_187>
t_76 = cmd_string_variable (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:266:7: warning: Use after free error!: free location 
    if ((t = cmd_string_variable(s, &p)) == NULL)
       ^
len_14 = PHI <len_72(D)(3), len_70(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_200 = VDEF <.MEM_187>
t_75 = cmd_string_string (buf_40, &p, 34, 1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:262:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '"', 1)) == NULL)
       ^
len_14 = PHI <len_72(D)(3), len_70(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_197 = VDEF <.MEM_187>
t_74 = cmd_string_string (buf_40, &p, 39, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:258:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '\'', 0)) == NULL)
       ^
len_14 = PHI <len_72(D)(3), len_70(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
len_14 = PHI <len_72(D)(3), len_70(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
len_14 = PHI <len_72(D)(3), len_70(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
len_14 = PHI <len_72(D)(3), len_70(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: Use after free error!: free location 
  free(buf);
  ^
len_14 = PHI <len_72(D)(3), len_70(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
len_14 = PHI <len_72(D)(3), len_70(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: Use after free error!: free location 
   free(argv);
   ^
len_14 = PHI <len_72(D)(3), len_70(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
len_14 = PHI <len_72(D)(3), len_70(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_218 = VDEF <.MEM_217>
free (_49);
./benchmarks/tmux/leak_10/tmux_leak_10.c:407:4: warning: Use after free error!: free location 
    free(cause);
    ^
len_14 = PHI <len_72(D)(3), len_70(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
len_14 = PHI <len_72(D)(3), len_70(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_190 = VDEF <.MEM_189>
username_145 = cmd_string_string (buf_40, &p, 47, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:218:6: warning: Use after free error!: free location 
   if ((username = cmd_string_string(s, p, '/', 0)) == NULL)
      ^
len_21 = PHI <len_14(4), len_19(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
len_21 = PHI <len_14(4), len_19(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_198 = VDEF <.MEM_187>
t_76 = cmd_string_variable (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:266:7: warning: Use after free error!: free location 
    if ((t = cmd_string_variable(s, &p)) == NULL)
       ^
len_21 = PHI <len_14(4), len_19(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_200 = VDEF <.MEM_187>
t_75 = cmd_string_string (buf_40, &p, 34, 1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:262:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '"', 1)) == NULL)
       ^
len_21 = PHI <len_14(4), len_19(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_197 = VDEF <.MEM_187>
t_74 = cmd_string_string (buf_40, &p, 39, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:258:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '\'', 0)) == NULL)
       ^
len_21 = PHI <len_14(4), len_19(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
len_21 = PHI <len_14(4), len_19(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
len_21 = PHI <len_14(4), len_19(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
len_21 = PHI <len_14(4), len_19(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: Use after free error!: free location 
  free(buf);
  ^
len_21 = PHI <len_14(4), len_19(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
len_21 = PHI <len_14(4), len_19(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: Use after free error!: free location 
   free(argv);
   ^
len_21 = PHI <len_14(4), len_19(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
len_21 = PHI <len_14(4), len_19(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_218 = VDEF <.MEM_217>
free (_49);
./benchmarks/tmux/leak_10/tmux_leak_10.c:407:4: warning: Use after free error!: free location 
    free(cause);
    ^
len_21 = PHI <len_14(4), len_19(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
len_21 = PHI <len_14(4), len_19(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_190 = VDEF <.MEM_189>
username_145 = cmd_string_string (buf_40, &p, 47, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:218:6: warning: Use after free error!: free location 
   if ((username = cmd_string_string(s, p, '/', 0)) == NULL)
      ^
_54 = (int) len_14;
./benchmarks/tmux/leak_10/tmux_leak_10.c:363:16: warning: use location
  while ((buf = fgets(buf, len, f))) {
                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
_54 = (int) len_14;
./benchmarks/tmux/leak_10/tmux_leak_10.c:363:16: warning: use location
  while ((buf = fgets(buf, len, f))) {
                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_198 = VDEF <.MEM_187>
t_76 = cmd_string_variable (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:266:7: warning: Use after free error!: free location 
    if ((t = cmd_string_variable(s, &p)) == NULL)
       ^
_54 = (int) len_14;
./benchmarks/tmux/leak_10/tmux_leak_10.c:363:16: warning: use location
  while ((buf = fgets(buf, len, f))) {
                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_200 = VDEF <.MEM_187>
t_75 = cmd_string_string (buf_40, &p, 34, 1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:262:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '"', 1)) == NULL)
       ^
_54 = (int) len_14;
./benchmarks/tmux/leak_10/tmux_leak_10.c:363:16: warning: use location
  while ((buf = fgets(buf, len, f))) {
                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_197 = VDEF <.MEM_187>
t_74 = cmd_string_string (buf_40, &p, 39, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:258:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '\'', 0)) == NULL)
       ^
_54 = (int) len_14;
./benchmarks/tmux/leak_10/tmux_leak_10.c:363:16: warning: use location
  while ((buf = fgets(buf, len, f))) {
                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
_54 = (int) len_14;
./benchmarks/tmux/leak_10/tmux_leak_10.c:363:16: warning: use location
  while ((buf = fgets(buf, len, f))) {
                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
_54 = (int) len_14;
./benchmarks/tmux/leak_10/tmux_leak_10.c:363:16: warning: use location
  while ((buf = fgets(buf, len, f))) {
                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
_54 = (int) len_14;
./benchmarks/tmux/leak_10/tmux_leak_10.c:363:16: warning: use location
  while ((buf = fgets(buf, len, f))) {
                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: Use after free error!: free location 
  free(buf);
  ^
_54 = (int) len_14;
./benchmarks/tmux/leak_10/tmux_leak_10.c:363:16: warning: use location
  while ((buf = fgets(buf, len, f))) {
                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
_54 = (int) len_14;
./benchmarks/tmux/leak_10/tmux_leak_10.c:363:16: warning: use location
  while ((buf = fgets(buf, len, f))) {
                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: Use after free error!: free location 
   free(argv);
   ^
_54 = (int) len_14;
./benchmarks/tmux/leak_10/tmux_leak_10.c:363:16: warning: use location
  while ((buf = fgets(buf, len, f))) {
                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
_54 = (int) len_14;
./benchmarks/tmux/leak_10/tmux_leak_10.c:363:16: warning: use location
  while ((buf = fgets(buf, len, f))) {
                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_218 = VDEF <.MEM_217>
free (_49);
./benchmarks/tmux/leak_10/tmux_leak_10.c:407:4: warning: Use after free error!: free location 
    free(cause);
    ^
_54 = (int) len_14;
./benchmarks/tmux/leak_10/tmux_leak_10.c:363:16: warning: use location
  while ((buf = fgets(buf, len, f))) {
                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
_54 = (int) len_14;
./benchmarks/tmux/leak_10/tmux_leak_10.c:363:16: warning: use location
  while ((buf = fgets(buf, len, f))) {
                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_190 = VDEF <.MEM_189>
username_145 = cmd_string_string (buf_40, &p, 47, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:218:6: warning: Use after free error!: free location 
   if ((username = cmd_string_string(s, p, '/', 0)) == NULL)
      ^
# .MEM_176 = VDEF <.MEM_169>
_64 = __fgets_alias (buf_55, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
# .MEM_176 = VDEF <.MEM_169>
_64 = __fgets_alias (buf_55, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_198 = VDEF <.MEM_187>
t_76 = cmd_string_variable (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:266:7: warning: Use after free error!: free location 
    if ((t = cmd_string_variable(s, &p)) == NULL)
       ^
# .MEM_176 = VDEF <.MEM_169>
_64 = __fgets_alias (buf_55, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_200 = VDEF <.MEM_187>
t_75 = cmd_string_string (buf_40, &p, 34, 1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:262:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '"', 1)) == NULL)
       ^
# .MEM_176 = VDEF <.MEM_169>
_64 = __fgets_alias (buf_55, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_197 = VDEF <.MEM_187>
t_74 = cmd_string_string (buf_40, &p, 39, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:258:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '\'', 0)) == NULL)
       ^
# .MEM_176 = VDEF <.MEM_169>
_64 = __fgets_alias (buf_55, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
# .MEM_176 = VDEF <.MEM_169>
_64 = __fgets_alias (buf_55, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
# .MEM_176 = VDEF <.MEM_169>
_64 = __fgets_alias (buf_55, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
# .MEM_176 = VDEF <.MEM_169>
_64 = __fgets_alias (buf_55, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: Use after free error!: free location 
  free(buf);
  ^
# .MEM_176 = VDEF <.MEM_169>
_64 = __fgets_alias (buf_55, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
# .MEM_176 = VDEF <.MEM_169>
_64 = __fgets_alias (buf_55, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: Use after free error!: free location 
   free(argv);
   ^
# .MEM_176 = VDEF <.MEM_169>
_64 = __fgets_alias (buf_55, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
# .MEM_176 = VDEF <.MEM_169>
_64 = __fgets_alias (buf_55, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_218 = VDEF <.MEM_217>
free (_49);
./benchmarks/tmux/leak_10/tmux_leak_10.c:407:4: warning: Use after free error!: free location 
    free(cause);
    ^
# .MEM_176 = VDEF <.MEM_169>
_64 = __fgets_alias (buf_55, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
# .MEM_176 = VDEF <.MEM_169>
_64 = __fgets_alias (buf_55, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_190 = VDEF <.MEM_189>
username_145 = cmd_string_string (buf_40, &p, 47, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:218:6: warning: Use after free error!: free location 
   if ((username = cmd_string_string(s, p, '/', 0)) == NULL)
      ^
_16 = PHI <_59(64), _63(66), _64(67)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
_16 = PHI <_59(64), _63(66), _64(67)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_198 = VDEF <.MEM_187>
t_76 = cmd_string_variable (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:266:7: warning: Use after free error!: free location 
    if ((t = cmd_string_variable(s, &p)) == NULL)
       ^
_16 = PHI <_59(64), _63(66), _64(67)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_200 = VDEF <.MEM_187>
t_75 = cmd_string_string (buf_40, &p, 34, 1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:262:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '"', 1)) == NULL)
       ^
_16 = PHI <_59(64), _63(66), _64(67)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_197 = VDEF <.MEM_187>
t_74 = cmd_string_string (buf_40, &p, 39, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:258:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '\'', 0)) == NULL)
       ^
_16 = PHI <_59(64), _63(66), _64(67)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
_16 = PHI <_59(64), _63(66), _64(67)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
_16 = PHI <_59(64), _63(66), _64(67)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
_16 = PHI <_59(64), _63(66), _64(67)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: Use after free error!: free location 
  free(buf);
  ^
_16 = PHI <_59(64), _63(66), _64(67)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
_16 = PHI <_59(64), _63(66), _64(67)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: Use after free error!: free location 
   free(argv);
   ^
_16 = PHI <_59(64), _63(66), _64(67)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
_16 = PHI <_59(64), _63(66), _64(67)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_218 = VDEF <.MEM_217>
free (_49);
./benchmarks/tmux/leak_10/tmux_leak_10.c:407:4: warning: Use after free error!: free location 
    free(cause);
    ^
_16 = PHI <_59(64), _63(66), _64(67)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
_16 = PHI <_59(64), _63(66), _64(67)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_190 = VDEF <.MEM_189>
username_145 = cmd_string_string (buf_40, &p, 47, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:218:6: warning: Use after free error!: free location 
   if ((username = cmd_string_string(s, p, '/', 0)) == NULL)
      ^
buf_69 = PHI <_16(10), buf_40(15), buf_40(55), buf_40(56), buf_40(58), buf_40(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
buf_69 = PHI <_16(10), buf_40(15), buf_40(55), buf_40(56), buf_40(58), buf_40(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_198 = VDEF <.MEM_187>
t_76 = cmd_string_variable (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:266:7: warning: Use after free error!: free location 
    if ((t = cmd_string_variable(s, &p)) == NULL)
       ^
buf_69 = PHI <_16(10), buf_40(15), buf_40(55), buf_40(56), buf_40(58), buf_40(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_200 = VDEF <.MEM_187>
t_75 = cmd_string_string (buf_40, &p, 34, 1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:262:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '"', 1)) == NULL)
       ^
buf_69 = PHI <_16(10), buf_40(15), buf_40(55), buf_40(56), buf_40(58), buf_40(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_197 = VDEF <.MEM_187>
t_74 = cmd_string_string (buf_40, &p, 39, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:258:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '\'', 0)) == NULL)
       ^
buf_69 = PHI <_16(10), buf_40(15), buf_40(55), buf_40(56), buf_40(58), buf_40(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
buf_69 = PHI <_16(10), buf_40(15), buf_40(55), buf_40(56), buf_40(58), buf_40(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
buf_69 = PHI <_16(10), buf_40(15), buf_40(55), buf_40(56), buf_40(58), buf_40(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
buf_69 = PHI <_16(10), buf_40(15), buf_40(55), buf_40(56), buf_40(58), buf_40(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_69 = PHI <_16(10), buf_40(15), buf_40(55), buf_40(56), buf_40(58), buf_40(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
buf_69 = PHI <_16(10), buf_40(15), buf_40(55), buf_40(56), buf_40(58), buf_40(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: Use after free error!: free location 
   free(argv);
   ^
buf_69 = PHI <_16(10), buf_40(15), buf_40(55), buf_40(56), buf_40(58), buf_40(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
buf_69 = PHI <_16(10), buf_40(15), buf_40(55), buf_40(56), buf_40(58), buf_40(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_218 = VDEF <.MEM_217>
free (_49);
./benchmarks/tmux/leak_10/tmux_leak_10.c:407:4: warning: Use after free error!: free location 
    free(cause);
    ^
buf_69 = PHI <_16(10), buf_40(15), buf_40(55), buf_40(56), buf_40(58), buf_40(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
buf_69 = PHI <_16(10), buf_40(15), buf_40(55), buf_40(56), buf_40(58), buf_40(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_190 = VDEF <.MEM_189>
username_145 = cmd_string_string (buf_40, &p, 47, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:218:6: warning: Use after free error!: free location 
   if ((username = cmd_string_string(s, p, '/', 0)) == NULL)
      ^
buf_55 = PHI <buf_71(D)(3), buf_69(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
buf_55 = PHI <buf_71(D)(3), buf_69(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_198 = VDEF <.MEM_187>
t_76 = cmd_string_variable (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:266:7: warning: Use after free error!: free location 
    if ((t = cmd_string_variable(s, &p)) == NULL)
       ^
buf_55 = PHI <buf_71(D)(3), buf_69(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_200 = VDEF <.MEM_187>
t_75 = cmd_string_string (buf_40, &p, 34, 1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:262:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '"', 1)) == NULL)
       ^
buf_55 = PHI <buf_71(D)(3), buf_69(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_197 = VDEF <.MEM_187>
t_74 = cmd_string_string (buf_40, &p, 39, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:258:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '\'', 0)) == NULL)
       ^
buf_55 = PHI <buf_71(D)(3), buf_69(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
buf_55 = PHI <buf_71(D)(3), buf_69(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
buf_55 = PHI <buf_71(D)(3), buf_69(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
buf_55 = PHI <buf_71(D)(3), buf_69(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_55 = PHI <buf_71(D)(3), buf_69(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
buf_55 = PHI <buf_71(D)(3), buf_69(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: Use after free error!: free location 
   free(argv);
   ^
buf_55 = PHI <buf_71(D)(3), buf_69(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
buf_55 = PHI <buf_71(D)(3), buf_69(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_218 = VDEF <.MEM_217>
free (_49);
./benchmarks/tmux/leak_10/tmux_leak_10.c:407:4: warning: Use after free error!: free location 
    free(cause);
    ^
buf_55 = PHI <buf_71(D)(3), buf_69(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
buf_55 = PHI <buf_71(D)(3), buf_69(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_190 = VDEF <.MEM_189>
username_145 = cmd_string_string (buf_40, &p, 47, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:218:6: warning: Use after free error!: free location 
   if ((username = cmd_string_string(s, p, '/', 0)) == NULL)
      ^
# .MEM_174 = VDEF <.MEM_169>
_63 = __fgets_chk_warn (buf_55, _62, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
# .MEM_174 = VDEF <.MEM_169>
_63 = __fgets_chk_warn (buf_55, _62, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_198 = VDEF <.MEM_187>
t_76 = cmd_string_variable (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:266:7: warning: Use after free error!: free location 
    if ((t = cmd_string_variable(s, &p)) == NULL)
       ^
# .MEM_174 = VDEF <.MEM_169>
_63 = __fgets_chk_warn (buf_55, _62, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_200 = VDEF <.MEM_187>
t_75 = cmd_string_string (buf_40, &p, 34, 1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:262:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '"', 1)) == NULL)
       ^
# .MEM_174 = VDEF <.MEM_169>
_63 = __fgets_chk_warn (buf_55, _62, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_197 = VDEF <.MEM_187>
t_74 = cmd_string_string (buf_40, &p, 39, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:258:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '\'', 0)) == NULL)
       ^
# .MEM_174 = VDEF <.MEM_169>
_63 = __fgets_chk_warn (buf_55, _62, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
# .MEM_174 = VDEF <.MEM_169>
_63 = __fgets_chk_warn (buf_55, _62, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
# .MEM_174 = VDEF <.MEM_169>
_63 = __fgets_chk_warn (buf_55, _62, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
# .MEM_174 = VDEF <.MEM_169>
_63 = __fgets_chk_warn (buf_55, _62, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: Use after free error!: free location 
  free(buf);
  ^
# .MEM_174 = VDEF <.MEM_169>
_63 = __fgets_chk_warn (buf_55, _62, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
# .MEM_174 = VDEF <.MEM_169>
_63 = __fgets_chk_warn (buf_55, _62, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: Use after free error!: free location 
   free(argv);
   ^
# .MEM_174 = VDEF <.MEM_169>
_63 = __fgets_chk_warn (buf_55, _62, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
# .MEM_174 = VDEF <.MEM_169>
_63 = __fgets_chk_warn (buf_55, _62, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_218 = VDEF <.MEM_217>
free (_49);
./benchmarks/tmux/leak_10/tmux_leak_10.c:407:4: warning: Use after free error!: free location 
    free(cause);
    ^
# .MEM_174 = VDEF <.MEM_169>
_63 = __fgets_chk_warn (buf_55, _62, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
# .MEM_174 = VDEF <.MEM_169>
_63 = __fgets_chk_warn (buf_55, _62, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_190 = VDEF <.MEM_189>
username_145 = cmd_string_string (buf_40, &p, 47, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:218:6: warning: Use after free error!: free location 
   if ((username = cmd_string_string(s, p, '/', 0)) == NULL)
      ^
# .MEM_177 = VDEF <.MEM_170>
fclose (f_11);
./benchmarks/tmux/leak_10/tmux_leak_10.c:430:2: warning: use location
  fclose(f);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
# .MEM_177 = VDEF <.MEM_170>
fclose (f_11);
./benchmarks/tmux/leak_10/tmux_leak_10.c:430:2: warning: use location
  fclose(f);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_198 = VDEF <.MEM_187>
t_76 = cmd_string_variable (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:266:7: warning: Use after free error!: free location 
    if ((t = cmd_string_variable(s, &p)) == NULL)
       ^
# .MEM_177 = VDEF <.MEM_170>
fclose (f_11);
./benchmarks/tmux/leak_10/tmux_leak_10.c:430:2: warning: use location
  fclose(f);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_200 = VDEF <.MEM_187>
t_75 = cmd_string_string (buf_40, &p, 34, 1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:262:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '"', 1)) == NULL)
       ^
# .MEM_177 = VDEF <.MEM_170>
fclose (f_11);
./benchmarks/tmux/leak_10/tmux_leak_10.c:430:2: warning: use location
  fclose(f);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_197 = VDEF <.MEM_187>
t_74 = cmd_string_string (buf_40, &p, 39, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:258:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '\'', 0)) == NULL)
       ^
# .MEM_177 = VDEF <.MEM_170>
fclose (f_11);
./benchmarks/tmux/leak_10/tmux_leak_10.c:430:2: warning: use location
  fclose(f);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
# .MEM_177 = VDEF <.MEM_170>
fclose (f_11);
./benchmarks/tmux/leak_10/tmux_leak_10.c:430:2: warning: use location
  fclose(f);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
# .MEM_177 = VDEF <.MEM_170>
fclose (f_11);
./benchmarks/tmux/leak_10/tmux_leak_10.c:430:2: warning: use location
  fclose(f);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
# .MEM_177 = VDEF <.MEM_170>
fclose (f_11);
./benchmarks/tmux/leak_10/tmux_leak_10.c:430:2: warning: use location
  fclose(f);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: Use after free error!: free location 
  free(buf);
  ^
# .MEM_177 = VDEF <.MEM_170>
fclose (f_11);
./benchmarks/tmux/leak_10/tmux_leak_10.c:430:2: warning: use location
  fclose(f);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
# .MEM_177 = VDEF <.MEM_170>
fclose (f_11);
./benchmarks/tmux/leak_10/tmux_leak_10.c:430:2: warning: use location
  fclose(f);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: Use after free error!: free location 
   free(argv);
   ^
# .MEM_177 = VDEF <.MEM_170>
fclose (f_11);
./benchmarks/tmux/leak_10/tmux_leak_10.c:430:2: warning: use location
  fclose(f);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
# .MEM_177 = VDEF <.MEM_170>
fclose (f_11);
./benchmarks/tmux/leak_10/tmux_leak_10.c:430:2: warning: use location
  fclose(f);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_218 = VDEF <.MEM_217>
free (_49);
./benchmarks/tmux/leak_10/tmux_leak_10.c:407:4: warning: Use after free error!: free location 
    free(cause);
    ^
# .MEM_177 = VDEF <.MEM_170>
fclose (f_11);
./benchmarks/tmux/leak_10/tmux_leak_10.c:430:2: warning: use location
  fclose(f);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
# .MEM_177 = VDEF <.MEM_170>
fclose (f_11);
./benchmarks/tmux/leak_10/tmux_leak_10.c:430:2: warning: use location
  fclose(f);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_190 = VDEF <.MEM_189>
username_145 = cmd_string_string (buf_40, &p, 47, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:218:6: warning: Use after free error!: free location 
   if ((username = cmd_string_string(s, p, '/', 0)) == NULL)
      ^
# .MEM_175 = VDEF <.MEM_169>
_59 = __fgets_chk (buf_55, _58, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
# .MEM_175 = VDEF <.MEM_169>
_59 = __fgets_chk (buf_55, _58, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_198 = VDEF <.MEM_187>
t_76 = cmd_string_variable (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:266:7: warning: Use after free error!: free location 
    if ((t = cmd_string_variable(s, &p)) == NULL)
       ^
# .MEM_175 = VDEF <.MEM_169>
_59 = __fgets_chk (buf_55, _58, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_200 = VDEF <.MEM_187>
t_75 = cmd_string_string (buf_40, &p, 34, 1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:262:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '"', 1)) == NULL)
       ^
# .MEM_175 = VDEF <.MEM_169>
_59 = __fgets_chk (buf_55, _58, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_197 = VDEF <.MEM_187>
t_74 = cmd_string_string (buf_40, &p, 39, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:258:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '\'', 0)) == NULL)
       ^
# .MEM_175 = VDEF <.MEM_169>
_59 = __fgets_chk (buf_55, _58, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
# .MEM_175 = VDEF <.MEM_169>
_59 = __fgets_chk (buf_55, _58, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
# .MEM_175 = VDEF <.MEM_169>
_59 = __fgets_chk (buf_55, _58, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
# .MEM_175 = VDEF <.MEM_169>
_59 = __fgets_chk (buf_55, _58, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: Use after free error!: free location 
  free(buf);
  ^
# .MEM_175 = VDEF <.MEM_169>
_59 = __fgets_chk (buf_55, _58, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
# .MEM_175 = VDEF <.MEM_169>
_59 = __fgets_chk (buf_55, _58, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: Use after free error!: free location 
   free(argv);
   ^
# .MEM_175 = VDEF <.MEM_169>
_59 = __fgets_chk (buf_55, _58, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
# .MEM_175 = VDEF <.MEM_169>
_59 = __fgets_chk (buf_55, _58, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_218 = VDEF <.MEM_217>
free (_49);
./benchmarks/tmux/leak_10/tmux_leak_10.c:407:4: warning: Use after free error!: free location 
    free(cause);
    ^
# .MEM_175 = VDEF <.MEM_169>
_59 = __fgets_chk (buf_55, _58, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
# .MEM_175 = VDEF <.MEM_169>
_59 = __fgets_chk (buf_55, _58, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_190 = VDEF <.MEM_189>
username_145 = cmd_string_string (buf_40, &p, 47, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:218:6: warning: Use after free error!: free location 
   if ((username = cmd_string_string(s, p, '/', 0)) == NULL)
      ^
# VUSE <.MEM_169>
_61 = __builtin_object_size (buf_55, 1);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
# VUSE <.MEM_169>
_61 = __builtin_object_size (buf_55, 1);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_198 = VDEF <.MEM_187>
t_76 = cmd_string_variable (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:266:7: warning: Use after free error!: free location 
    if ((t = cmd_string_variable(s, &p)) == NULL)
       ^
# VUSE <.MEM_169>
_61 = __builtin_object_size (buf_55, 1);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_200 = VDEF <.MEM_187>
t_75 = cmd_string_string (buf_40, &p, 34, 1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:262:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '"', 1)) == NULL)
       ^
# VUSE <.MEM_169>
_61 = __builtin_object_size (buf_55, 1);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_197 = VDEF <.MEM_187>
t_74 = cmd_string_string (buf_40, &p, 39, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:258:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '\'', 0)) == NULL)
       ^
# VUSE <.MEM_169>
_61 = __builtin_object_size (buf_55, 1);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
# VUSE <.MEM_169>
_61 = __builtin_object_size (buf_55, 1);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
# VUSE <.MEM_169>
_61 = __builtin_object_size (buf_55, 1);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
# VUSE <.MEM_169>
_61 = __builtin_object_size (buf_55, 1);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: Use after free error!: free location 
  free(buf);
  ^
# VUSE <.MEM_169>
_61 = __builtin_object_size (buf_55, 1);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
# VUSE <.MEM_169>
_61 = __builtin_object_size (buf_55, 1);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: Use after free error!: free location 
   free(argv);
   ^
# VUSE <.MEM_169>
_61 = __builtin_object_size (buf_55, 1);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
# VUSE <.MEM_169>
_61 = __builtin_object_size (buf_55, 1);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_218 = VDEF <.MEM_217>
free (_49);
./benchmarks/tmux/leak_10/tmux_leak_10.c:407:4: warning: Use after free error!: free location 
    free(cause);
    ^
# VUSE <.MEM_169>
_61 = __builtin_object_size (buf_55, 1);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
# VUSE <.MEM_169>
_61 = __builtin_object_size (buf_55, 1);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_190 = VDEF <.MEM_189>
username_145 = cmd_string_string (buf_40, &p, 47, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:218:6: warning: Use after free error!: free location 
   if ((username = cmd_string_string(s, p, '/', 0)) == NULL)
      ^
# VUSE <.MEM_169>
_56 = __builtin_object_size (buf_55, 1);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
# VUSE <.MEM_169>
_56 = __builtin_object_size (buf_55, 1);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_198 = VDEF <.MEM_187>
t_76 = cmd_string_variable (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:266:7: warning: Use after free error!: free location 
    if ((t = cmd_string_variable(s, &p)) == NULL)
       ^
# VUSE <.MEM_169>
_56 = __builtin_object_size (buf_55, 1);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_200 = VDEF <.MEM_187>
t_75 = cmd_string_string (buf_40, &p, 34, 1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:262:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '"', 1)) == NULL)
       ^
# VUSE <.MEM_169>
_56 = __builtin_object_size (buf_55, 1);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_197 = VDEF <.MEM_187>
t_74 = cmd_string_string (buf_40, &p, 39, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:258:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '\'', 0)) == NULL)
       ^
# VUSE <.MEM_169>
_56 = __builtin_object_size (buf_55, 1);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
# VUSE <.MEM_169>
_56 = __builtin_object_size (buf_55, 1);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
# VUSE <.MEM_169>
_56 = __builtin_object_size (buf_55, 1);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
# VUSE <.MEM_169>
_56 = __builtin_object_size (buf_55, 1);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: Use after free error!: free location 
  free(buf);
  ^
# VUSE <.MEM_169>
_56 = __builtin_object_size (buf_55, 1);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
# VUSE <.MEM_169>
_56 = __builtin_object_size (buf_55, 1);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: Use after free error!: free location 
   free(argv);
   ^
# VUSE <.MEM_169>
_56 = __builtin_object_size (buf_55, 1);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
# VUSE <.MEM_169>
_56 = __builtin_object_size (buf_55, 1);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_218 = VDEF <.MEM_217>
free (_49);
./benchmarks/tmux/leak_10/tmux_leak_10.c:407:4: warning: Use after free error!: free location 
    free(cause);
    ^
# VUSE <.MEM_169>
_56 = __builtin_object_size (buf_55, 1);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
# VUSE <.MEM_169>
_56 = __builtin_object_size (buf_55, 1);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_190 = VDEF <.MEM_189>
username_145 = cmd_string_string (buf_40, &p, 47, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:218:6: warning: Use after free error!: free location 
   if ((username = cmd_string_string(s, p, '/', 0)) == NULL)
      ^
if (_56 != 18446744073709551615)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
if (_56 != 18446744073709551615)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_198 = VDEF <.MEM_187>
t_76 = cmd_string_variable (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:266:7: warning: Use after free error!: free location 
    if ((t = cmd_string_variable(s, &p)) == NULL)
       ^
if (_56 != 18446744073709551615)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_200 = VDEF <.MEM_187>
t_75 = cmd_string_string (buf_40, &p, 34, 1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:262:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '"', 1)) == NULL)
       ^
if (_56 != 18446744073709551615)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_197 = VDEF <.MEM_187>
t_74 = cmd_string_string (buf_40, &p, 39, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:258:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '\'', 0)) == NULL)
       ^
if (_56 != 18446744073709551615)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
if (_56 != 18446744073709551615)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
if (_56 != 18446744073709551615)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
if (_56 != 18446744073709551615)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: Use after free error!: free location 
  free(buf);
  ^
if (_56 != 18446744073709551615)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
if (_56 != 18446744073709551615)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: Use after free error!: free location 
   free(argv);
   ^
if (_56 != 18446744073709551615)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
if (_56 != 18446744073709551615)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_218 = VDEF <.MEM_217>
free (_49);
./benchmarks/tmux/leak_10/tmux_leak_10.c:407:4: warning: Use after free error!: free location 
    free(cause);
    ^
if (_56 != 18446744073709551615)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
if (_56 != 18446744073709551615)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_190 = VDEF <.MEM_189>
username_145 = cmd_string_string (buf_40, &p, 47, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:218:6: warning: Use after free error!: free location 
   if ((username = cmd_string_string(s, p, '/', 0)) == NULL)
      ^
if (_16 != 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:363:8: warning: use location
  while ((buf = fgets(buf, len, f))) {
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
if (_16 != 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:363:8: warning: use location
  while ((buf = fgets(buf, len, f))) {
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_198 = VDEF <.MEM_187>
t_76 = cmd_string_variable (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:266:7: warning: Use after free error!: free location 
    if ((t = cmd_string_variable(s, &p)) == NULL)
       ^
if (_16 != 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:363:8: warning: use location
  while ((buf = fgets(buf, len, f))) {
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_200 = VDEF <.MEM_187>
t_75 = cmd_string_string (buf_40, &p, 34, 1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:262:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '"', 1)) == NULL)
       ^
if (_16 != 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:363:8: warning: use location
  while ((buf = fgets(buf, len, f))) {
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_197 = VDEF <.MEM_187>
t_74 = cmd_string_string (buf_40, &p, 39, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:258:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '\'', 0)) == NULL)
       ^
if (_16 != 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:363:8: warning: use location
  while ((buf = fgets(buf, len, f))) {
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
if (_16 != 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:363:8: warning: use location
  while ((buf = fgets(buf, len, f))) {
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
if (_16 != 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:363:8: warning: use location
  while ((buf = fgets(buf, len, f))) {
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
if (_16 != 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:363:8: warning: use location
  while ((buf = fgets(buf, len, f))) {
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: Use after free error!: free location 
  free(buf);
  ^
if (_16 != 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:363:8: warning: use location
  while ((buf = fgets(buf, len, f))) {
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
if (_16 != 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:363:8: warning: use location
  while ((buf = fgets(buf, len, f))) {
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: Use after free error!: free location 
   free(argv);
   ^
if (_16 != 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:363:8: warning: use location
  while ((buf = fgets(buf, len, f))) {
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
if (_16 != 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:363:8: warning: use location
  while ((buf = fgets(buf, len, f))) {
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_218 = VDEF <.MEM_217>
free (_49);
./benchmarks/tmux/leak_10/tmux_leak_10.c:407:4: warning: Use after free error!: free location 
    free(cause);
    ^
if (_16 != 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:363:8: warning: use location
  while ((buf = fgets(buf, len, f))) {
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
if (_16 != 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:363:8: warning: use location
  while ((buf = fgets(buf, len, f))) {
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_190 = VDEF <.MEM_189>
username_145 = cmd_string_string (buf_40, &p, 47, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:218:6: warning: Use after free error!: free location 
   if ((username = cmd_string_string(s, p, '/', 0)) == NULL)
      ^
_57 = __builtin_constant_p (_54);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
_57 = __builtin_constant_p (_54);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_198 = VDEF <.MEM_187>
t_76 = cmd_string_variable (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:266:7: warning: Use after free error!: free location 
    if ((t = cmd_string_variable(s, &p)) == NULL)
       ^
_57 = __builtin_constant_p (_54);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_200 = VDEF <.MEM_187>
t_75 = cmd_string_string (buf_40, &p, 34, 1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:262:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '"', 1)) == NULL)
       ^
_57 = __builtin_constant_p (_54);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_197 = VDEF <.MEM_187>
t_74 = cmd_string_string (buf_40, &p, 39, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:258:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '\'', 0)) == NULL)
       ^
_57 = __builtin_constant_p (_54);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
_57 = __builtin_constant_p (_54);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
_57 = __builtin_constant_p (_54);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
_57 = __builtin_constant_p (_54);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: Use after free error!: free location 
  free(buf);
  ^
_57 = __builtin_constant_p (_54);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
_57 = __builtin_constant_p (_54);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: Use after free error!: free location 
   free(argv);
   ^
_57 = __builtin_constant_p (_54);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
_57 = __builtin_constant_p (_54);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_218 = VDEF <.MEM_217>
free (_49);
./benchmarks/tmux/leak_10/tmux_leak_10.c:407:4: warning: Use after free error!: free location 
    free(cause);
    ^
_57 = __builtin_constant_p (_54);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
_57 = __builtin_constant_p (_54);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_190 = VDEF <.MEM_189>
username_145 = cmd_string_string (buf_40, &p, 47, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:218:6: warning: Use after free error!: free location 
   if ((username = cmd_string_string(s, p, '/', 0)) == NULL)
      ^
if (_57 == 0)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
if (_57 == 0)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_198 = VDEF <.MEM_187>
t_76 = cmd_string_variable (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:266:7: warning: Use after free error!: free location 
    if ((t = cmd_string_variable(s, &p)) == NULL)
       ^
if (_57 == 0)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_200 = VDEF <.MEM_187>
t_75 = cmd_string_string (buf_40, &p, 34, 1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:262:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '"', 1)) == NULL)
       ^
if (_57 == 0)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_197 = VDEF <.MEM_187>
t_74 = cmd_string_string (buf_40, &p, 39, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:258:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '\'', 0)) == NULL)
       ^
if (_57 == 0)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
if (_57 == 0)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
if (_57 == 0)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
if (_57 == 0)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: Use after free error!: free location 
  free(buf);
  ^
if (_57 == 0)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
if (_57 == 0)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: Use after free error!: free location 
   free(argv);
   ^
if (_57 == 0)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
if (_57 == 0)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_218 = VDEF <.MEM_217>
free (_49);
./benchmarks/tmux/leak_10/tmux_leak_10.c:407:4: warning: Use after free error!: free location 
    free(cause);
    ^
if (_57 == 0)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
if (_57 == 0)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_190 = VDEF <.MEM_189>
username_145 = cmd_string_string (buf_40, &p, 47, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:218:6: warning: Use after free error!: free location 
   if ((username = cmd_string_string(s, p, '/', 0)) == NULL)
      ^
_60 = (long unsigned int) _54;

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
_60 = (long unsigned int) _54;

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_198 = VDEF <.MEM_187>
t_76 = cmd_string_variable (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:266:7: warning: Use after free error!: free location 
    if ((t = cmd_string_variable(s, &p)) == NULL)
       ^
_60 = (long unsigned int) _54;

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_200 = VDEF <.MEM_187>
t_75 = cmd_string_string (buf_40, &p, 34, 1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:262:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '"', 1)) == NULL)
       ^
_60 = (long unsigned int) _54;

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_197 = VDEF <.MEM_187>
t_74 = cmd_string_string (buf_40, &p, 39, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:258:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '\'', 0)) == NULL)
       ^
_60 = (long unsigned int) _54;

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
_60 = (long unsigned int) _54;

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
_60 = (long unsigned int) _54;

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
_60 = (long unsigned int) _54;

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: Use after free error!: free location 
  free(buf);
  ^
_60 = (long unsigned int) _54;

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
_60 = (long unsigned int) _54;

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: Use after free error!: free location 
   free(argv);
   ^
_60 = (long unsigned int) _54;

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
_60 = (long unsigned int) _54;

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_218 = VDEF <.MEM_217>
free (_49);
./benchmarks/tmux/leak_10/tmux_leak_10.c:407:4: warning: Use after free error!: free location 
    free(cause);
    ^
_60 = (long unsigned int) _54;

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
_60 = (long unsigned int) _54;

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_190 = VDEF <.MEM_189>
username_145 = cmd_string_string (buf_40, &p, 47, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:218:6: warning: Use after free error!: free location 
   if ((username = cmd_string_string(s, p, '/', 0)) == NULL)
      ^
buf_40 = PHI <line_23(11), buf_41(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
buf_40 = PHI <line_23(11), buf_41(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_198 = VDEF <.MEM_187>
t_76 = cmd_string_variable (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:266:7: warning: Use after free error!: free location 
    if ((t = cmd_string_variable(s, &p)) == NULL)
       ^
buf_40 = PHI <line_23(11), buf_41(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_200 = VDEF <.MEM_187>
t_75 = cmd_string_string (buf_40, &p, 34, 1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:262:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '"', 1)) == NULL)
       ^
buf_40 = PHI <line_23(11), buf_41(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_197 = VDEF <.MEM_187>
t_74 = cmd_string_string (buf_40, &p, 39, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:258:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '\'', 0)) == NULL)
       ^
buf_40 = PHI <line_23(11), buf_41(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
buf_40 = PHI <line_23(11), buf_41(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
buf_40 = PHI <line_23(11), buf_41(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
buf_40 = PHI <line_23(11), buf_41(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_40 = PHI <line_23(11), buf_41(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
buf_40 = PHI <line_23(11), buf_41(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: Use after free error!: free location 
   free(argv);
   ^
buf_40 = PHI <line_23(11), buf_41(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
buf_40 = PHI <line_23(11), buf_41(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_218 = VDEF <.MEM_217>
free (_49);
./benchmarks/tmux/leak_10/tmux_leak_10.c:407:4: warning: Use after free error!: free location 
    free(cause);
    ^
buf_40 = PHI <line_23(11), buf_41(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
buf_40 = PHI <line_23(11), buf_41(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_198 = VDEF <.MEM_187>
t_76 = cmd_string_variable (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:266:7: warning: Use after free error!: free location 
    if ((t = cmd_string_variable(s, &p)) == NULL)
       ^
# .MEM_190 = VDEF <.MEM_189>
username_145 = cmd_string_string (buf_40, &p, 47, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:218:6: warning: use location
   if ((username = cmd_string_string(s, p, '/', 0)) == NULL)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_190 = VDEF <.MEM_189>
username_145 = cmd_string_string (buf_40, &p, 47, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:218:6: warning: Use after free error!: free location 
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: use location
   free(username);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_198 = VDEF <.MEM_187>
t_76 = cmd_string_variable (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:266:7: warning: Use after free error!: free location 
    if ((t = cmd_string_variable(s, &p)) == NULL)
       ^
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: use location
   free(username);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_200 = VDEF <.MEM_187>
t_75 = cmd_string_string (buf_40, &p, 34, 1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:262:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '"', 1)) == NULL)
       ^
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: use location
   free(username);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_197 = VDEF <.MEM_187>
t_74 = cmd_string_string (buf_40, &p, 39, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:258:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '\'', 0)) == NULL)
       ^
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: use location
   free(username);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_190 = VDEF <.MEM_189>
username_145 = cmd_string_string (buf_40, &p, 47, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:218:6: warning: Use after free error!: free location 
   if ((username = cmd_string_string(s, p, '/', 0)) == NULL)
      ^
# .MEM_191 = VDEF <.MEM_190>
_146 = getpwnam (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:220:13: warning: use location
   if ((pw = getpwnam(username)) != NULL)
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_198 = VDEF <.MEM_187>
t_76 = cmd_string_variable (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:266:7: warning: Use after free error!: free location 
    if ((t = cmd_string_variable(s, &p)) == NULL)
       ^
# .MEM_191 = VDEF <.MEM_190>
_146 = getpwnam (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:220:13: warning: use location
   if ((pw = getpwnam(username)) != NULL)
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_200 = VDEF <.MEM_187>
t_75 = cmd_string_string (buf_40, &p, 34, 1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:262:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '"', 1)) == NULL)
       ^
# .MEM_191 = VDEF <.MEM_190>
_146 = getpwnam (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:220:13: warning: use location
   if ((pw = getpwnam(username)) != NULL)
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_197 = VDEF <.MEM_187>
t_74 = cmd_string_string (buf_40, &p, 39, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:258:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '\'', 0)) == NULL)
       ^
# .MEM_191 = VDEF <.MEM_190>
_146 = getpwnam (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:220:13: warning: use location
   if ((pw = getpwnam(username)) != NULL)
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_190 = VDEF <.MEM_189>
username_145 = cmd_string_string (buf_40, &p, 47, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:218:6: warning: Use after free error!: free location 
   if ((username = cmd_string_string(s, p, '/', 0)) == NULL)
      ^
_147 = (long int) _146;
./benchmarks/tmux/leak_10/tmux_leak_10.c:220:13: warning: use location
   if ((pw = getpwnam(username)) != NULL)
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_198 = VDEF <.MEM_187>
t_76 = cmd_string_variable (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:266:7: warning: Use after free error!: free location 
    if ((t = cmd_string_variable(s, &p)) == NULL)
       ^
_147 = (long int) _146;
./benchmarks/tmux/leak_10/tmux_leak_10.c:220:13: warning: use location
   if ((pw = getpwnam(username)) != NULL)
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_200 = VDEF <.MEM_187>
t_75 = cmd_string_string (buf_40, &p, 34, 1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:262:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '"', 1)) == NULL)
       ^
_147 = (long int) _146;
./benchmarks/tmux/leak_10/tmux_leak_10.c:220:13: warning: use location
   if ((pw = getpwnam(username)) != NULL)
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_197 = VDEF <.MEM_187>
t_74 = cmd_string_string (buf_40, &p, 39, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:258:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '\'', 0)) == NULL)
       ^
_147 = (long int) _146;
./benchmarks/tmux/leak_10/tmux_leak_10.c:220:13: warning: use location
   if ((pw = getpwnam(username)) != NULL)
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_190 = VDEF <.MEM_189>
username_145 = cmd_string_string (buf_40, &p, 47, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:218:6: warning: Use after free error!: free location 
   if ((username = cmd_string_string(s, p, '/', 0)) == NULL)
      ^
pw_148 = (struct passwd *) _147;
./benchmarks/tmux/leak_10/tmux_leak_10.c:220:11: warning: use location
   if ((pw = getpwnam(username)) != NULL)
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_198 = VDEF <.MEM_187>
t_76 = cmd_string_variable (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:266:7: warning: Use after free error!: free location 
    if ((t = cmd_string_variable(s, &p)) == NULL)
       ^
pw_148 = (struct passwd *) _147;
./benchmarks/tmux/leak_10/tmux_leak_10.c:220:11: warning: use location
   if ((pw = getpwnam(username)) != NULL)
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_200 = VDEF <.MEM_187>
t_75 = cmd_string_string (buf_40, &p, 34, 1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:262:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '"', 1)) == NULL)
       ^
pw_148 = (struct passwd *) _147;
./benchmarks/tmux/leak_10/tmux_leak_10.c:220:11: warning: use location
   if ((pw = getpwnam(username)) != NULL)
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_197 = VDEF <.MEM_187>
t_74 = cmd_string_string (buf_40, &p, 39, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:258:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '\'', 0)) == NULL)
       ^
pw_148 = (struct passwd *) _147;
./benchmarks/tmux/leak_10/tmux_leak_10.c:220:11: warning: use location
   if ((pw = getpwnam(username)) != NULL)
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_190 = VDEF <.MEM_189>
username_145 = cmd_string_string (buf_40, &p, 47, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:218:6: warning: Use after free error!: free location 
   if ((username = cmd_string_string(s, p, '/', 0)) == NULL)
      ^
# VUSE <.MEM_191>
home_149 = pw_148->pw_dir;
./benchmarks/tmux/leak_10/tmux_leak_10.c:221:9: warning: use location
    home = pw->pw_dir;
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_198 = VDEF <.MEM_187>
t_76 = cmd_string_variable (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:266:7: warning: Use after free error!: free location 
    if ((t = cmd_string_variable(s, &p)) == NULL)
       ^
# VUSE <.MEM_191>
home_149 = pw_148->pw_dir;
./benchmarks/tmux/leak_10/tmux_leak_10.c:221:9: warning: use location
    home = pw->pw_dir;
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_200 = VDEF <.MEM_187>
t_75 = cmd_string_string (buf_40, &p, 34, 1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:262:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '"', 1)) == NULL)
       ^
# VUSE <.MEM_191>
home_149 = pw_148->pw_dir;
./benchmarks/tmux/leak_10/tmux_leak_10.c:221:9: warning: use location
    home = pw->pw_dir;
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_197 = VDEF <.MEM_187>
t_74 = cmd_string_string (buf_40, &p, 39, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:258:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '\'', 0)) == NULL)
       ^
# VUSE <.MEM_191>
home_149 = pw_148->pw_dir;
./benchmarks/tmux/leak_10/tmux_leak_10.c:221:9: warning: use location
    home = pw->pw_dir;
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_190 = VDEF <.MEM_189>
username_145 = cmd_string_string (buf_40, &p, 47, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:218:6: warning: Use after free error!: free location 
   if ((username = cmd_string_string(s, p, '/', 0)) == NULL)
      ^
home_153 = PHI <0B(41), home_149(42)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
home_153 = PHI <0B(41), home_149(42)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_198 = VDEF <.MEM_187>
t_76 = cmd_string_variable (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:266:7: warning: Use after free error!: free location 
    if ((t = cmd_string_variable(s, &p)) == NULL)
       ^
home_153 = PHI <0B(41), home_149(42)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_200 = VDEF <.MEM_187>
t_75 = cmd_string_string (buf_40, &p, 34, 1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:262:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '"', 1)) == NULL)
       ^
home_153 = PHI <0B(41), home_149(42)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_197 = VDEF <.MEM_187>
t_74 = cmd_string_string (buf_40, &p, 39, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:258:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '\'', 0)) == NULL)
       ^
home_153 = PHI <0B(41), home_149(42)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
home_153 = PHI <0B(41), home_149(42)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
home_153 = PHI <0B(41), home_149(42)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
home_153 = PHI <0B(41), home_149(42)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: Use after free error!: free location 
  free(buf);
  ^
home_153 = PHI <0B(41), home_149(42)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
home_153 = PHI <0B(41), home_149(42)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: Use after free error!: free location 
   free(argv);
   ^
home_153 = PHI <0B(41), home_149(42)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
home_153 = PHI <0B(41), home_149(42)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_218 = VDEF <.MEM_217>
free (_49);
./benchmarks/tmux/leak_10/tmux_leak_10.c:407:4: warning: Use after free error!: free location 
    free(cause);
    ^
home_153 = PHI <0B(41), home_149(42)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
home_153 = PHI <0B(41), home_149(42)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_190 = VDEF <.MEM_189>
username_145 = cmd_string_string (buf_40, &p, 47, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:218:6: warning: Use after free error!: free location 
   if ((username = cmd_string_string(s, p, '/', 0)) == NULL)
      ^
home_150 = PHI <home_139(37), home_144(39), home_153(43)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
home_150 = PHI <home_139(37), home_144(39), home_153(43)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_198 = VDEF <.MEM_187>
t_76 = cmd_string_variable (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:266:7: warning: Use after free error!: free location 
    if ((t = cmd_string_variable(s, &p)) == NULL)
       ^
home_150 = PHI <home_139(37), home_144(39), home_153(43)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_200 = VDEF <.MEM_187>
t_75 = cmd_string_string (buf_40, &p, 34, 1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:262:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '"', 1)) == NULL)
       ^
home_150 = PHI <home_139(37), home_144(39), home_153(43)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_197 = VDEF <.MEM_187>
t_74 = cmd_string_string (buf_40, &p, 39, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:258:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '\'', 0)) == NULL)
       ^
home_150 = PHI <home_139(37), home_144(39), home_153(43)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
home_150 = PHI <home_139(37), home_144(39), home_153(43)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
home_150 = PHI <home_139(37), home_144(39), home_153(43)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
home_150 = PHI <home_139(37), home_144(39), home_153(43)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: Use after free error!: free location 
  free(buf);
  ^
home_150 = PHI <home_139(37), home_144(39), home_153(43)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
home_150 = PHI <home_139(37), home_144(39), home_153(43)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: Use after free error!: free location 
   free(argv);
   ^
home_150 = PHI <home_139(37), home_144(39), home_153(43)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
home_150 = PHI <home_139(37), home_144(39), home_153(43)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_218 = VDEF <.MEM_217>
free (_49);
./benchmarks/tmux/leak_10/tmux_leak_10.c:407:4: warning: Use after free error!: free location 
    free(cause);
    ^
home_150 = PHI <home_139(37), home_144(39), home_153(43)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
home_150 = PHI <home_139(37), home_144(39), home_153(43)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_190 = VDEF <.MEM_189>
username_145 = cmd_string_string (buf_40, &p, 47, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:218:6: warning: Use after free error!: free location 
   if ((username = cmd_string_string(s, p, '/', 0)) == NULL)
      ^
# .MEM_195 = VDEF <.MEM_163>
_151 = strdup (home_150);
./benchmarks/tmux/leak_10/tmux_leak_10.c:227:10: warning: use location
  return (strdup(home));
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
# .MEM_195 = VDEF <.MEM_163>
_151 = strdup (home_150);
./benchmarks/tmux/leak_10/tmux_leak_10.c:227:10: warning: use location
  return (strdup(home));
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_198 = VDEF <.MEM_187>
t_76 = cmd_string_variable (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:266:7: warning: Use after free error!: free location 
    if ((t = cmd_string_variable(s, &p)) == NULL)
       ^
# .MEM_195 = VDEF <.MEM_163>
_151 = strdup (home_150);
./benchmarks/tmux/leak_10/tmux_leak_10.c:227:10: warning: use location
  return (strdup(home));
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_200 = VDEF <.MEM_187>
t_75 = cmd_string_string (buf_40, &p, 34, 1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:262:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '"', 1)) == NULL)
       ^
# .MEM_195 = VDEF <.MEM_163>
_151 = strdup (home_150);
./benchmarks/tmux/leak_10/tmux_leak_10.c:227:10: warning: use location
  return (strdup(home));
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_197 = VDEF <.MEM_187>
t_74 = cmd_string_string (buf_40, &p, 39, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:258:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '\'', 0)) == NULL)
       ^
# .MEM_195 = VDEF <.MEM_163>
_151 = strdup (home_150);
./benchmarks/tmux/leak_10/tmux_leak_10.c:227:10: warning: use location
  return (strdup(home));
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
# .MEM_195 = VDEF <.MEM_163>
_151 = strdup (home_150);
./benchmarks/tmux/leak_10/tmux_leak_10.c:227:10: warning: use location
  return (strdup(home));
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_190 = VDEF <.MEM_189>
username_145 = cmd_string_string (buf_40, &p, 47, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:218:6: warning: Use after free error!: free location 
   if ((username = cmd_string_string(s, p, '/', 0)) == NULL)
      ^
_152 = PHI <0B(38), 0B(40), 0B(44), _151(45)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
_152 = PHI <0B(38), 0B(40), 0B(44), _151(45)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_198 = VDEF <.MEM_187>
t_76 = cmd_string_variable (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:266:7: warning: Use after free error!: free location 
    if ((t = cmd_string_variable(s, &p)) == NULL)
       ^
_152 = PHI <0B(38), 0B(40), 0B(44), _151(45)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_200 = VDEF <.MEM_187>
t_75 = cmd_string_string (buf_40, &p, 34, 1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:262:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '"', 1)) == NULL)
       ^
_152 = PHI <0B(38), 0B(40), 0B(44), _151(45)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_197 = VDEF <.MEM_187>
t_74 = cmd_string_string (buf_40, &p, 39, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:258:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '\'', 0)) == NULL)
       ^
_152 = PHI <0B(38), 0B(40), 0B(44), _151(45)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
_152 = PHI <0B(38), 0B(40), 0B(44), _151(45)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
_152 = PHI <0B(38), 0B(40), 0B(44), _151(45)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
_152 = PHI <0B(38), 0B(40), 0B(44), _151(45)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: Use after free error!: free location 
  free(buf);
  ^
_152 = PHI <0B(38), 0B(40), 0B(44), _151(45)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
_152 = PHI <0B(38), 0B(40), 0B(44), _151(45)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: Use after free error!: free location 
   free(argv);
   ^
_152 = PHI <0B(38), 0B(40), 0B(44), _151(45)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
_152 = PHI <0B(38), 0B(40), 0B(44), _151(45)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_218 = VDEF <.MEM_217>
free (_49);
./benchmarks/tmux/leak_10/tmux_leak_10.c:407:4: warning: Use after free error!: free location 
    free(cause);
    ^
_152 = PHI <0B(38), 0B(40), 0B(44), _151(45)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
_152 = PHI <0B(38), 0B(40), 0B(44), _151(45)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_190 = VDEF <.MEM_189>
username_145 = cmd_string_string (buf_40, &p, 47, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:218:6: warning: Use after free error!: free location 
   if ((username = cmd_string_string(s, p, '/', 0)) == NULL)
      ^
_196 = _152;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
_196 = _152;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_198 = VDEF <.MEM_187>
t_76 = cmd_string_variable (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:266:7: warning: Use after free error!: free location 
    if ((t = cmd_string_variable(s, &p)) == NULL)
       ^
_196 = _152;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_200 = VDEF <.MEM_187>
t_75 = cmd_string_string (buf_40, &p, 34, 1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:262:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '"', 1)) == NULL)
       ^
_196 = _152;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_197 = VDEF <.MEM_187>
t_74 = cmd_string_string (buf_40, &p, 39, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:258:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '\'', 0)) == NULL)
       ^
_196 = _152;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
_196 = _152;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_190 = VDEF <.MEM_189>
username_145 = cmd_string_string (buf_40, &p, 47, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:218:6: warning: Use after free error!: free location 
   if ((username = cmd_string_string(s, p, '/', 0)) == NULL)
      ^
t_110 = _196;
./benchmarks/tmux/leak_10/tmux_leak_10.c:309:7: warning: use location
     t = cmd_string_expand_tilde(s, &p);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
t_110 = _196;
./benchmarks/tmux/leak_10/tmux_leak_10.c:309:7: warning: use location
     t = cmd_string_expand_tilde(s, &p);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_198 = VDEF <.MEM_187>
t_76 = cmd_string_variable (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:266:7: warning: Use after free error!: free location 
    if ((t = cmd_string_variable(s, &p)) == NULL)
       ^
t_110 = _196;
./benchmarks/tmux/leak_10/tmux_leak_10.c:309:7: warning: use location
     t = cmd_string_expand_tilde(s, &p);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_200 = VDEF <.MEM_187>
t_75 = cmd_string_string (buf_40, &p, 34, 1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:262:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '"', 1)) == NULL)
       ^
t_110 = _196;
./benchmarks/tmux/leak_10/tmux_leak_10.c:309:7: warning: use location
     t = cmd_string_expand_tilde(s, &p);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_197 = VDEF <.MEM_187>
t_74 = cmd_string_string (buf_40, &p, 39, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:258:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '\'', 0)) == NULL)
       ^
t_110 = _196;
./benchmarks/tmux/leak_10/tmux_leak_10.c:309:7: warning: use location
     t = cmd_string_expand_tilde(s, &p);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
t_110 = _196;
./benchmarks/tmux/leak_10/tmux_leak_10.c:309:7: warning: use location
     t = cmd_string_expand_tilde(s, &p);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_198 = VDEF <.MEM_187>
t_76 = cmd_string_variable (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:266:7: warning: Use after free error!: free location 
    if ((t = cmd_string_variable(s, &p)) == NULL)
       ^
# .MEM_188 = VDEF <.MEM_187>
_135 = cmd_string_getc (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:211:6: warning: use location
  if (cmd_string_getc(s, p) == '/') {
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_200 = VDEF <.MEM_187>
t_75 = cmd_string_string (buf_40, &p, 34, 1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:262:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '"', 1)) == NULL)
       ^
# .MEM_188 = VDEF <.MEM_187>
_135 = cmd_string_getc (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:211:6: warning: use location
  if (cmd_string_getc(s, p) == '/') {
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_197 = VDEF <.MEM_187>
t_74 = cmd_string_string (buf_40, &p, 39, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:258:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '\'', 0)) == NULL)
       ^
# .MEM_188 = VDEF <.MEM_187>
_135 = cmd_string_getc (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:211:6: warning: use location
  if (cmd_string_getc(s, p) == '/') {
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_198 = VDEF <.MEM_187>
t_76 = cmd_string_variable (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:266:7: warning: Use after free error!: free location 
    if ((t = cmd_string_variable(s, &p)) == NULL)
       ^
if (_135 == 47)
./benchmarks/tmux/leak_10/tmux_leak_10.c:211:5: warning: use location
  if (cmd_string_getc(s, p) == '/') {
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_200 = VDEF <.MEM_187>
t_75 = cmd_string_string (buf_40, &p, 34, 1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:262:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '"', 1)) == NULL)
       ^
if (_135 == 47)
./benchmarks/tmux/leak_10/tmux_leak_10.c:211:5: warning: use location
  if (cmd_string_getc(s, p) == '/') {
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_197 = VDEF <.MEM_187>
t_74 = cmd_string_string (buf_40, &p, 39, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:258:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '\'', 0)) == NULL)
       ^
if (_135 == 47)
./benchmarks/tmux/leak_10/tmux_leak_10.c:211:5: warning: use location
  if (cmd_string_getc(s, p) == '/') {
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_198 = VDEF <.MEM_187>
t_76 = cmd_string_variable (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:266:7: warning: Use after free error!: free location 
    if ((t = cmd_string_variable(s, &p)) == NULL)
       ^
# .MEM_199 = VDEF <.MEM_159>
ch_77 = cmd_string_getc (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:271:10: warning: use location
    while ((ch = cmd_string_getc(s, &p)) != EOF)
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_200 = VDEF <.MEM_187>
t_75 = cmd_string_string (buf_40, &p, 34, 1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:262:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '"', 1)) == NULL)
       ^
# .MEM_199 = VDEF <.MEM_159>
ch_77 = cmd_string_getc (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:271:10: warning: use location
    while ((ch = cmd_string_getc(s, &p)) != EOF)
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_197 = VDEF <.MEM_187>
t_74 = cmd_string_string (buf_40, &p, 39, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:258:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '\'', 0)) == NULL)
       ^
# .MEM_199 = VDEF <.MEM_159>
ch_77 = cmd_string_getc (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:271:10: warning: use location
    while ((ch = cmd_string_getc(s, &p)) != EOF)
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_190 = VDEF <.MEM_189>
username_145 = cmd_string_string (buf_40, &p, 47, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:218:6: warning: Use after free error!: free location 
   if ((username = cmd_string_string(s, p, '/', 0)) == NULL)
      ^
ch_93 = PHI <ch_73(18), ch_77(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
ch_93 = PHI <ch_73(18), ch_77(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_198 = VDEF <.MEM_187>
t_76 = cmd_string_variable (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:266:7: warning: Use after free error!: free location 
    if ((t = cmd_string_variable(s, &p)) == NULL)
       ^
ch_93 = PHI <ch_73(18), ch_77(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_200 = VDEF <.MEM_187>
t_75 = cmd_string_string (buf_40, &p, 34, 1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:262:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '"', 1)) == NULL)
       ^
ch_93 = PHI <ch_73(18), ch_77(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_197 = VDEF <.MEM_187>
t_74 = cmd_string_string (buf_40, &p, 39, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:258:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '\'', 0)) == NULL)
       ^
ch_93 = PHI <ch_73(18), ch_77(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
ch_93 = PHI <ch_73(18), ch_77(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
ch_93 = PHI <ch_73(18), ch_77(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
ch_93 = PHI <ch_73(18), ch_77(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: Use after free error!: free location 
  free(buf);
  ^
ch_93 = PHI <ch_73(18), ch_77(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
ch_93 = PHI <ch_73(18), ch_77(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: Use after free error!: free location 
   free(argv);
   ^
ch_93 = PHI <ch_73(18), ch_77(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
ch_93 = PHI <ch_73(18), ch_77(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_218 = VDEF <.MEM_217>
free (_49);
./benchmarks/tmux/leak_10/tmux_leak_10.c:407:4: warning: Use after free error!: free location 
    free(cause);
    ^
ch_93 = PHI <ch_73(18), ch_77(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
ch_93 = PHI <ch_73(18), ch_77(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_198 = VDEF <.MEM_187>
t_76 = cmd_string_variable (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:266:7: warning: Use after free error!: free location 
    if ((t = cmd_string_variable(s, &p)) == NULL)
       ^
if (ch_93 != -1)
./benchmarks/tmux/leak_10/tmux_leak_10.c:288:7: warning: use location
    if (ch != EOF)
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_200 = VDEF <.MEM_187>
t_75 = cmd_string_string (buf_40, &p, 34, 1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:262:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '"', 1)) == NULL)
       ^
if (ch_93 != -1)
./benchmarks/tmux/leak_10/tmux_leak_10.c:288:7: warning: use location
    if (ch != EOF)
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_197 = VDEF <.MEM_187>
t_74 = cmd_string_string (buf_40, &p, 39, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:258:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '\'', 0)) == NULL)
       ^
if (ch_93 != -1)
./benchmarks/tmux/leak_10/tmux_leak_10.c:288:7: warning: use location
    if (ch != EOF)
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_200 = VDEF <.MEM_187>
t_75 = cmd_string_string (buf_40, &p, 34, 1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:262:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '"', 1)) == NULL)
       ^
# .MEM_198 = VDEF <.MEM_187>
t_76 = cmd_string_variable (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:266:7: warning: use location
    if ((t = cmd_string_variable(s, &p)) == NULL)
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_197 = VDEF <.MEM_187>
t_74 = cmd_string_string (buf_40, &p, 39, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:258:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '\'', 0)) == NULL)
       ^
# .MEM_198 = VDEF <.MEM_187>
t_76 = cmd_string_variable (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:266:7: warning: use location
    if ((t = cmd_string_variable(s, &p)) == NULL)
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_190 = VDEF <.MEM_189>
username_145 = cmd_string_string (buf_40, &p, 47, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:218:6: warning: Use after free error!: free location 
   if ((username = cmd_string_string(s, p, '/', 0)) == NULL)
      ^
_116 = (char) ch_73;
./benchmarks/tmux/leak_10/tmux_leak_10.c:320:15: warning: use location
    buf[len++] = ch;
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
_116 = (char) ch_73;
./benchmarks/tmux/leak_10/tmux_leak_10.c:320:15: warning: use location
    buf[len++] = ch;
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_198 = VDEF <.MEM_187>
t_76 = cmd_string_variable (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:266:7: warning: Use after free error!: free location 
    if ((t = cmd_string_variable(s, &p)) == NULL)
       ^
_116 = (char) ch_73;
./benchmarks/tmux/leak_10/tmux_leak_10.c:320:15: warning: use location
    buf[len++] = ch;
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_200 = VDEF <.MEM_187>
t_75 = cmd_string_string (buf_40, &p, 34, 1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:262:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '"', 1)) == NULL)
       ^
_116 = (char) ch_73;
./benchmarks/tmux/leak_10/tmux_leak_10.c:320:15: warning: use location
    buf[len++] = ch;
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_197 = VDEF <.MEM_187>
t_74 = cmd_string_string (buf_40, &p, 39, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:258:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '\'', 0)) == NULL)
       ^
_116 = (char) ch_73;
./benchmarks/tmux/leak_10/tmux_leak_10.c:320:15: warning: use location
    buf[len++] = ch;
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
_116 = (char) ch_73;
./benchmarks/tmux/leak_10/tmux_leak_10.c:320:15: warning: use location
    buf[len++] = ch;
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_190 = VDEF <.MEM_189>
username_145 = cmd_string_string (buf_40, &p, 47, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:218:6: warning: Use after free error!: free location 
   if ((username = cmd_string_string(s, p, '/', 0)) == NULL)
      ^
# .MEM_207 = VDEF <.MEM_206>
*_115 = _116;
./benchmarks/tmux/leak_10/tmux_leak_10.c:320:15: warning: use location
    buf[len++] = ch;
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
# .MEM_207 = VDEF <.MEM_206>
*_115 = _116;
./benchmarks/tmux/leak_10/tmux_leak_10.c:320:15: warning: use location
    buf[len++] = ch;
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_198 = VDEF <.MEM_187>
t_76 = cmd_string_variable (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:266:7: warning: Use after free error!: free location 
    if ((t = cmd_string_variable(s, &p)) == NULL)
       ^
# .MEM_207 = VDEF <.MEM_206>
*_115 = _116;
./benchmarks/tmux/leak_10/tmux_leak_10.c:320:15: warning: use location
    buf[len++] = ch;
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_200 = VDEF <.MEM_187>
t_75 = cmd_string_string (buf_40, &p, 34, 1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:262:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '"', 1)) == NULL)
       ^
# .MEM_207 = VDEF <.MEM_206>
*_115 = _116;
./benchmarks/tmux/leak_10/tmux_leak_10.c:320:15: warning: use location
    buf[len++] = ch;
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_197 = VDEF <.MEM_187>
t_74 = cmd_string_string (buf_40, &p, 39, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:258:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '\'', 0)) == NULL)
       ^
# .MEM_207 = VDEF <.MEM_206>
*_115 = _116;
./benchmarks/tmux/leak_10/tmux_leak_10.c:320:15: warning: use location
    buf[len++] = ch;
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
# .MEM_207 = VDEF <.MEM_206>
*_115 = _116;
./benchmarks/tmux/leak_10/tmux_leak_10.c:320:15: warning: use location
    buf[len++] = ch;
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_190 = VDEF <.MEM_189>
username_145 = cmd_string_string (buf_40, &p, 47, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:218:6: warning: Use after free error!: free location 
   if ((username = cmd_string_string(s, p, '/', 0)) == NULL)
      ^
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: use location
   free(copy);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_198 = VDEF <.MEM_187>
t_76 = cmd_string_variable (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:266:7: warning: Use after free error!: free location 
    if ((t = cmd_string_variable(s, &p)) == NULL)
       ^
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: use location
   free(copy);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_200 = VDEF <.MEM_187>
t_75 = cmd_string_string (buf_40, &p, 34, 1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:262:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '"', 1)) == NULL)
       ^
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: use location
   free(copy);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_197 = VDEF <.MEM_187>
t_74 = cmd_string_string (buf_40, &p, 39, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:258:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '\'', 0)) == NULL)
       ^
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: use location
   free(copy);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_190 = VDEF <.MEM_189>
username_145 = cmd_string_string (buf_40, &p, 47, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:218:6: warning: Use after free error!: free location 
   if ((username = cmd_string_string(s, p, '/', 0)) == NULL)
      ^
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: use location
    free(copy);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_198 = VDEF <.MEM_187>
t_76 = cmd_string_variable (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:266:7: warning: Use after free error!: free location 
    if ((t = cmd_string_variable(s, &p)) == NULL)
       ^
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: use location
    free(copy);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_200 = VDEF <.MEM_187>
t_75 = cmd_string_string (buf_40, &p, 34, 1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:262:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '"', 1)) == NULL)
       ^
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: use location
    free(copy);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_197 = VDEF <.MEM_187>
t_74 = cmd_string_string (buf_40, &p, 39, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:258:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '\'', 0)) == NULL)
       ^
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: use location
    free(copy);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:7 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd7a41f0870
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
   
    def_stmt _24 = line_23;
    version 24
    ptr-info 0x7fd7a42162d0>
_24 = line_23;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_181 = VDEF <.MEM_180>
memcpy (_24, _16, len_21);
memcpy (_24, _16, len_21);
./benchmarks/tmux/leak_10/tmux_leak_10.c:379:3: warning: use location
   memcpy(line + oldlen, buf, len);
   ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f0870
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
   
    def_stmt _24 = line_23;
    version 24
    ptr-info 0x7fd7a42162d0>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_181 = VDEF <.MEM_180>
memcpy (_24, _16, len_21);
memcpy (_24, _16, len_21);
./benchmarks/tmux/leak_10/tmux_leak_10.c:379:3: warning: use location
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f0870
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
   
    def_stmt _24 = line_23;
    version 24
    ptr-info 0x7fd7a42162d0>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7a41f0870
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
   
    def_stmt _24 = line_23;
    version 24
    ptr-info 0x7fd7a42162d0>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: use location
    free(argv[i]);
    ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: use location
    free(copy);
    ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: use location
   free(copy);
   ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd7a41f0e10
    type <integer_type 0x7fd7a46785e8 int public SI
        size <integer_cst 0x7fd7a4664e28 constant 32>
        unit size <integer_cst 0x7fd7a4664e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fd7a46785e8 precision 32 min <integer_cst 0x7fd7a4664de0 -2147483648> max <integer_cst 0x7fd7a4664df8 2147483647>
        pointer_to_this <pointer_type 0x7fd7a467fa80>>
   
    def_stmt _44 = (int) _43;
    version 44>
_44 = (int) _43;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = isspace (_44);
./benchmarks/tmux/leak_10/tmux_leak_10.c:397:10: warning: use location
   while (isspace((u_char)*buf))
          ^
this stmt is child function---isspace-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f0e10
    type <integer_type 0x7fd7a46785e8 int public SI
        size <integer_cst 0x7fd7a4664e28 constant 32>
        unit size <integer_cst 0x7fd7a4664e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fd7a46785e8 precision 32 min <integer_cst 0x7fd7a4664de0 -2147483648> max <integer_cst 0x7fd7a4664df8 2147483647>
        pointer_to_this <pointer_type 0x7fd7a467fa80>>
   
    def_stmt _44 = (int) _43;
    version 44>
trace fucntion name:isspace 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_45 != 0)
./benchmarks/tmux/leak_10/tmux_leak_10.c:397:9: warning: use location
   while (isspace((u_char)*buf))
         ^
if (_45 != 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:397:9: warning: use location
Cond in fucntion main basic block 13
 ================== possible direct basic block ================= 
from main basic block 12
 ================== possible direct basic block ================= 
from main basic block 14
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7a41f0e10
    type <integer_type 0x7fd7a46785e8 int public SI
        size <integer_cst 0x7fd7a4664e28 constant 32>
        unit size <integer_cst 0x7fd7a4664e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fd7a46785e8 precision 32 min <integer_cst 0x7fd7a4664de0 -2147483648> max <integer_cst 0x7fd7a4664df8 2147483647>
        pointer_to_this <pointer_type 0x7fd7a467fa80>>
   
    def_stmt _44 = (int) _43;
    version 44>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: use location
   free(username);
   ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: use location
  free(buf);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: use location
    free(argv[i]);
    ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: use location
   free(argv);
   ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: use location
    free(copy);
    ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_218 = VDEF <.MEM_217>
free (_49);
./benchmarks/tmux/leak_10/tmux_leak_10.c:407:4: warning: use location
    free(cause);
    ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: use location
   free(copy);
   ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:7 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd7a41f0cf0
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41f11b0 buf>
    def_stmt buf_40 = PHI <line_23(11), buf_41(12)>
    version 40
    ptr-info 0x7fd7a4216378>
buf_40 = PHI <line_23(11), buf_41(12)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
username_145 = cmd_string_string (buf_40, &p, 47, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:218:6: warning: use location
   if ((username = cmd_string_string(s, p, '/', 0)) == NULL)
      ^
this stmt is child function---cmd_string_string-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f0cf0
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41f11b0 buf>
    def_stmt buf_40 = PHI <line_23(11), buf_41(12)>
    version 40
    ptr-info 0x7fd7a4216378>
trace fucntion name:cmd_string_string 
[40;44m =======trace_function_path cmd_string_string  function_call count: 4 level :0========  [0m
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
[40;36m ======= node_fun:cmd_string_string========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :1========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:cmd_string_getc========= [0m
[40;46m =======add node_fun stack:cmd_string_getc========= [0m
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :1========  [0m
[40;36m ======= node_fun:cmd_string_getc========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:cmd_string_variable========= [0m
cmd_string_variable this fucntion return value is heap-object 
cmd_string_string this fucntion return value is heap-object cmd_string_variable
[40;46m =======add node_fun stack:cmd_string_variable========= [0m
[40;44m =======trace_function_path cmd_string_variable  function_call count: 4 level :1========  [0m
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
[40;36m ======= node_fun:cmd_string_variable========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :2========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:cmd_string_getc========= [0m
[40;46m =======add node_fun stack:cmd_string_getc========= [0m
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:cmd_string_getc========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: use location
   free(username);
   ^
this stmt is child function---free-----

 ================== find ================== 
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_146 = getpwnam (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:220:13: warning: use location
   if ((pw = getpwnam(username)) != NULL)
             ^
this stmt is child function---getpwnam-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f0cf0
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41f11b0 buf>
    def_stmt buf_40 = PHI <line_23(11), buf_41(12)>
    version 40
    ptr-info 0x7fd7a4216378>
trace fucntion name:getpwnam 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_146 != 0)
./benchmarks/tmux/leak_10/tmux_leak_10.c:220:6: warning: use location
   if ((pw = getpwnam(username)) != NULL)
      ^
if (_146 != 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:220:6: warning: use location
Cond in fucntion main basic block 41
 ================== possible direct basic block ================= 
from main basic block 42
 ================== possible direct basic block ================= 
from main basic block 43
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_147 = (long int) _146;
./benchmarks/tmux/leak_10/tmux_leak_10.c:220:13: warning: use location
   if ((pw = getpwnam(username)) != NULL)
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pw_148 = (struct passwd *) _147;
./benchmarks/tmux/leak_10/tmux_leak_10.c:220:11: warning: use location
   if ((pw = getpwnam(username)) != NULL)
           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
home_149 = pw_148->pw_dir;
./benchmarks/tmux/leak_10/tmux_leak_10.c:221:9: warning: use location
    home = pw->pw_dir;
         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
home_153 = PHI <0B(41), home_149(42)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
home_150 = PHI <home_139(37), home_144(39), home_153(43)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_151 = strdup (home_150);
./benchmarks/tmux/leak_10/tmux_leak_10.c:227:10: warning: use location
  return (strdup(home));
          ^
this stmt is child function---strdup-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f0cf0
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41f11b0 buf>
    def_stmt buf_40 = PHI <line_23(11), buf_41(12)>
    version 40
    ptr-info 0x7fd7a4216378>
trace fucntion name:strdup 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_152 = PHI <0B(38), 0B(40), 0B(44), _151(45)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_196 = _152;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
t_110 = _196;
./benchmarks/tmux/leak_10/tmux_leak_10.c:309:7: warning: use location
     t = cmd_string_expand_tilde(s, &p);
       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (t_110 == 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:310:8: warning: use location
     if (t == NULL)
        ^
if (t_110 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:310:8: warning: use location
Cond in fucntion main basic block 46
 ================== possible direct basic block ================= 
from main basic block 49
 ================== possible direct basic block ================= 
from main basic block 17
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_135 = cmd_string_getc (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:211:6: warning: use location
  if (cmd_string_getc(s, p) == '/') {
      ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f0cf0
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41f11b0 buf>
    def_stmt buf_40 = PHI <line_23(11), buf_41(12)>
    version 40
    ptr-info 0x7fd7a4216378>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:cmd_string_getc========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_135 == 47)
./benchmarks/tmux/leak_10/tmux_leak_10.c:211:5: warning: use location
  if (cmd_string_getc(s, p) == '/') {
     ^
if (_135 == 47)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:211:5: warning: use location
Cond in fucntion main basic block 34
 ================== possible direct basic block ================= 
from main basic block 35
 ================== possible direct basic block ================= 
from main basic block 40
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ch_77 = cmd_string_getc (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:271:10: warning: use location
    while ((ch = cmd_string_getc(s, &p)) != EOF)
          ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f0cf0
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41f11b0 buf>
    def_stmt buf_40 = PHI <line_23(11), buf_41(12)>
    version 40
    ptr-info 0x7fd7a4216378>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:cmd_string_getc========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ch_93 = PHI <ch_73(18), ch_77(23)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (ch_93 != -1)
./benchmarks/tmux/leak_10/tmux_leak_10.c:288:7: warning: use location
    if (ch != EOF)
       ^
if (ch_93 != -1)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:288:7: warning: use location
Cond in fucntion main basic block 26
 ================== possible direct basic block ================= 
from main basic block 17
 ================== possible direct basic block ================= 
from main basic block 29
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
t_76 = cmd_string_variable (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:266:7: warning: use location
    if ((t = cmd_string_variable(s, &p)) == NULL)
       ^
this stmt is child function---cmd_string_variable-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f0cf0
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41f11b0 buf>
    def_stmt buf_40 = PHI <line_23(11), buf_41(12)>
    version 40
    ptr-info 0x7fd7a4216378>
trace fucntion name:cmd_string_variable 
[40;44m =======trace_function_path cmd_string_variable  function_call count: 4 level :0========  [0m
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
[40;36m ======= node_fun:cmd_string_variable========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :1========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:cmd_string_getc========= [0m
[40;46m =======add node_fun stack:cmd_string_getc========= [0m
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :1========  [0m
[40;36m ======= node_fun:cmd_string_getc========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
t_75 = cmd_string_string (buf_40, &p, 34, 1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:262:7: warning: use location
    if ((t = cmd_string_string(s, &p, '"', 1)) == NULL)
       ^
this stmt is child function---cmd_string_string-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f0cf0
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41f11b0 buf>
    def_stmt buf_40 = PHI <line_23(11), buf_41(12)>
    version 40
    ptr-info 0x7fd7a4216378>
trace fucntion name:cmd_string_string 
[40;44m =======trace_function_path cmd_string_string  function_call count: 4 level :0========  [0m
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
[40;36m ======= node_fun:cmd_string_string========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :1========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:cmd_string_getc========= [0m
[40;46m =======add node_fun stack:cmd_string_getc========= [0m
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :1========  [0m
[40;36m ======= node_fun:cmd_string_getc========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:cmd_string_variable========= [0m
cmd_string_variable this fucntion return value is heap-object 
cmd_string_string this fucntion return value is heap-object cmd_string_variable
[40;46m =======add node_fun stack:cmd_string_variable========= [0m
[40;44m =======trace_function_path cmd_string_variable  function_call count: 4 level :1========  [0m
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
[40;36m ======= node_fun:cmd_string_variable========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :2========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:cmd_string_getc========= [0m
[40;46m =======add node_fun stack:cmd_string_getc========= [0m
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:cmd_string_getc========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
t_74 = cmd_string_string (buf_40, &p, 39, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:258:7: warning: use location
    if ((t = cmd_string_string(s, &p, '\'', 0)) == NULL)
       ^
this stmt is child function---cmd_string_string-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f0cf0
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41f11b0 buf>
    def_stmt buf_40 = PHI <line_23(11), buf_41(12)>
    version 40
    ptr-info 0x7fd7a4216378>
trace fucntion name:cmd_string_string 
[40;44m =======trace_function_path cmd_string_string  function_call count: 4 level :0========  [0m
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
[40;36m ======= node_fun:cmd_string_string========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :1========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:cmd_string_getc========= [0m
[40;46m =======add node_fun stack:cmd_string_getc========= [0m
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :1========  [0m
[40;36m ======= node_fun:cmd_string_getc========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:cmd_string_variable========= [0m
cmd_string_variable this fucntion return value is heap-object 
cmd_string_string this fucntion return value is heap-object cmd_string_variable
[40;46m =======add node_fun stack:cmd_string_variable========= [0m
[40;44m =======trace_function_path cmd_string_variable  function_call count: 4 level :1========  [0m
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
[40;36m ======= node_fun:cmd_string_variable========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :2========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:cmd_string_getc========= [0m
[40;46m =======add node_fun stack:cmd_string_getc========= [0m
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:cmd_string_getc========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ch_73 = cmd_string_getc (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:255:6: warning: use location
   ch = cmd_string_getc(s, &p);
      ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f0cf0
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41f11b0 buf>
    def_stmt buf_40 = PHI <line_23(11), buf_41(12)>
    version 40
    ptr-info 0x7fd7a4216378>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:cmd_string_getc========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_116 = (char) ch_73;
./benchmarks/tmux/leak_10/tmux_leak_10.c:320:15: warning: use location
    buf[len++] = ch;
               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_115 = _116;
./benchmarks/tmux/leak_10/tmux_leak_10.c:320:15: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = *buf_40;
./benchmarks/tmux/leak_10/tmux_leak_10.c:399:7: warning: use location
   if (*buf == '\0') {
       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_46 == 0)
./benchmarks/tmux/leak_10/tmux_leak_10.c:399:6: warning: use location
   if (*buf == '\0') {
      ^
if (_46 == 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:399:6: warning: use location
Cond in fucntion main basic block 14
 ================== possible direct basic block ================= 
from main basic block 15
 ================== possible direct basic block ================= 
from main basic block 16
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *buf_40;
./benchmarks/tmux/leak_10/tmux_leak_10.c:397:26: warning: use location
   while (isspace((u_char)*buf))
                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = (unsigned char) _42;
./benchmarks/tmux/leak_10/tmux_leak_10.c:397:18: warning: use location
   while (isspace((u_char)*buf))
                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = (int) _43;
./benchmarks/tmux/leak_10/tmux_leak_10.c:397:10: warning: use location
   while (isspace((u_char)*buf))
          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = isspace (_44);
./benchmarks/tmux/leak_10/tmux_leak_10.c:397:10: warning: use location
this stmt is child function---isspace-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f0cf0
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41f11b0 buf>
    def_stmt buf_40 = PHI <line_23(11), buf_41(12)>
    version 40
    ptr-info 0x7fd7a4216378>
trace fucntion name:isspace 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_69 = PHI <_16(10), buf_40(15), buf_40(55), buf_40(56), buf_40(58), buf_40(59)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_55 = PHI <buf_71(D)(3), buf_69(60)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = __fgets_alias (buf_55, _54, f_11);
this stmt is child function---__fgets_alias-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f0cf0
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41f11b0 buf>
    def_stmt buf_40 = PHI <line_23(11), buf_41(12)>
    version 40
    ptr-info 0x7fd7a4216378>
trace fucntion name:__fgets_alias 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = PHI <_59(64), _63(66), _64(67)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
memcpy (_24, _16, len_21);
./benchmarks/tmux/leak_10/tmux_leak_10.c:379:3: warning: use location
   memcpy(line + oldlen, buf, len);
   ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f0cf0
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41f11b0 buf>
    def_stmt buf_40 = PHI <line_23(11), buf_41(12)>
    version 40
    ptr-info 0x7fd7a4216378>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = __printf_chk (1, "%s: %s", "path", _16);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f0cf0
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41f11b0 buf>
    def_stmt buf_40 = PHI <line_23(11), buf_41(12)>
    version 40
    ptr-info 0x7fd7a4216378>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = __fgets_chk_warn (buf_55, _62, _54, f_11);
this stmt is child function---__fgets_chk_warn-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f0cf0
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41f11b0 buf>
    def_stmt buf_40 = PHI <line_23(11), buf_41(12)>
    version 40
    ptr-info 0x7fd7a4216378>
trace fucntion name:__fgets_chk_warn 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_177 = VDEF <.MEM_170>
fclose (f_11);
bb index := 69
# VUSE <.MEM_15>
return _8;
In function ‘main’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 69 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_177 = VDEF <.MEM_170>
fclose (f_11);
bb index := 69
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 69 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_177 = VDEF <.MEM_170>
fclose (f_11);
bb index := 69
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 69 ,possiable got to succ := 70

======================================================================
fclose (f_11);
At top level:
./benchmarks/tmux/leak_10/tmux_leak_10.c:430:2: warning: use location
  fclose(f);
  ^
this stmt is child function---fclose-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f0cf0
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41f11b0 buf>
    def_stmt buf_40 = PHI <line_23(11), buf_41(12)>
    version 40
    ptr-info 0x7fd7a4216378>
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = __fgets_chk (buf_55, _58, _54, f_11);
this stmt is child function---__fgets_chk-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f0cf0
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41f11b0 buf>
    def_stmt buf_40 = PHI <line_23(11), buf_41(12)>
    version 40
    ptr-info 0x7fd7a4216378>
trace fucntion name:__fgets_chk 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_11 == 0B)
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_11 == 0B)
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_11 == 0B)
bb index := 2
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_11 == 0B)
bb index := 2
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_11 == 0B)
bb index := 2
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_11 == 0B)
bb index := 2
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_11 == 0B)
bb index := 2
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_11 == 0B)
bb index := 2
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 70

======================================================================
if (f_11 == 0B)
At top level:
./benchmarks/tmux/leak_10/tmux_leak_10.c:354:5: warning: use location
  if ((f = fopen(path, "rb")) == NULL) {
     ^
if (f_11 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:354:5: warning: use location
Cond in fucntion main basic block 2
 ================== possible direct basic block ================= 
from main basic block 70
 ================== possible direct basic block ================= 
from main basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_57 = __builtin_constant_p (_54);
this stmt is child function---__builtin_constant_p-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f0cf0
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41f11b0 buf>
    def_stmt buf_40 = PHI <line_23(11), buf_41(12)>
    version 40
    ptr-info 0x7fd7a4216378>
trace fucntion name:__builtin_constant_p 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = (long unsigned int) _54;

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_60 > _61)
if (_60 > _61)

 ================== find cond branch ================= 
Cond in fucntion main basic block 65
 ================== possible direct basic block ================= 
from main basic block 66
 ================== possible direct basic block ================= 
from main basic block 67
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_56 = __builtin_object_size (buf_55, 1);
this stmt is child function---__builtin_object_size-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f0cf0
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41f11b0 buf>
    def_stmt buf_40 = PHI <line_23(11), buf_41(12)>
    version 40
    ptr-info 0x7fd7a4216378>
trace fucntion name:__builtin_object_size 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_56 != 18446744073709551615)
if (_56 != 18446744073709551615)

 ================== find cond branch ================= 
Cond in fucntion main basic block 61
 ================== possible direct basic block ================= 
from main basic block 62
 ================== possible direct basic block ================= 
from main basic block 67
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_41 = buf_40 + 1;
./benchmarks/tmux/leak_10/tmux_leak_10.c:398:7: warning: use location
    buf++;
       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_40 = PHI <line_23(11), buf_41(12)>
lto1: warning: use location
this stmt have mutiple branch --------

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7a41f0cf0
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41f11b0 buf>
    def_stmt buf_40 = PHI <line_23(11), buf_41(12)>
    version 40
    ptr-info 0x7fd7a4216378>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: use location
    free(argv[i]);
    ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: use location
    free(copy);
    ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: use location
   free(copy);
   ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
home_153 = PHI <0B(41), home_149(42)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
home_153 = PHI <0B(41), home_149(42)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
home_153 = PHI <0B(41), home_149(42)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
home_153 = PHI <0B(41), home_149(42)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
home_150 = PHI <home_139(37), home_144(39), home_153(43)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
home_150 = PHI <home_139(37), home_144(39), home_153(43)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
home_150 = PHI <home_139(37), home_144(39), home_153(43)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
home_150 = PHI <home_139(37), home_144(39), home_153(43)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
# .MEM_195 = VDEF <.MEM_163>
_151 = strdup (home_150);
./benchmarks/tmux/leak_10/tmux_leak_10.c:227:10: warning: use location
  return (strdup(home));
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
_152 = PHI <0B(38), 0B(40), 0B(44), _151(45)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
_152 = PHI <0B(38), 0B(40), 0B(44), _151(45)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
_152 = PHI <0B(38), 0B(40), 0B(44), _151(45)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
_152 = PHI <0B(38), 0B(40), 0B(44), _151(45)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
_196 = _152;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
t_110 = _196;
./benchmarks/tmux/leak_10/tmux_leak_10.c:309:7: warning: use location
     t = cmd_string_expand_tilde(s, &p);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
if (t_110 == 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:310:8: warning: use location
     if (t == NULL)
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
ch_93 = PHI <ch_73(18), ch_77(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
ch_93 = PHI <ch_73(18), ch_77(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
ch_93 = PHI <ch_73(18), ch_77(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
ch_93 = PHI <ch_73(18), ch_77(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
_116 = (char) ch_73;
./benchmarks/tmux/leak_10/tmux_leak_10.c:320:15: warning: use location
    buf[len++] = ch;
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
# .MEM_207 = VDEF <.MEM_206>
*_115 = _116;
./benchmarks/tmux/leak_10/tmux_leak_10.c:320:15: warning: use location
    buf[len++] = ch;
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
buf_69 = PHI <_16(10), buf_40(15), buf_40(55), buf_40(56), buf_40(58), buf_40(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
buf_69 = PHI <_16(10), buf_40(15), buf_40(55), buf_40(56), buf_40(58), buf_40(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
buf_69 = PHI <_16(10), buf_40(15), buf_40(55), buf_40(56), buf_40(58), buf_40(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
buf_69 = PHI <_16(10), buf_40(15), buf_40(55), buf_40(56), buf_40(58), buf_40(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
buf_55 = PHI <buf_71(D)(3), buf_69(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
buf_55 = PHI <buf_71(D)(3), buf_69(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
buf_55 = PHI <buf_71(D)(3), buf_69(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
buf_55 = PHI <buf_71(D)(3), buf_69(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
# .MEM_176 = VDEF <.MEM_169>
_64 = __fgets_alias (buf_55, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
# .MEM_176 = VDEF <.MEM_169>
_64 = __fgets_alias (buf_55, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
# .MEM_176 = VDEF <.MEM_169>
_64 = __fgets_alias (buf_55, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
# .MEM_176 = VDEF <.MEM_169>
_64 = __fgets_alias (buf_55, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
_16 = PHI <_59(64), _63(66), _64(67)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
_16 = PHI <_59(64), _63(66), _64(67)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
_16 = PHI <_59(64), _63(66), _64(67)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
_16 = PHI <_59(64), _63(66), _64(67)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
# .MEM_174 = VDEF <.MEM_169>
_63 = __fgets_chk_warn (buf_55, _62, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
# .MEM_174 = VDEF <.MEM_169>
_63 = __fgets_chk_warn (buf_55, _62, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
# .MEM_174 = VDEF <.MEM_169>
_63 = __fgets_chk_warn (buf_55, _62, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
# .MEM_174 = VDEF <.MEM_169>
_63 = __fgets_chk_warn (buf_55, _62, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
# .MEM_177 = VDEF <.MEM_170>
fclose (f_11);
./benchmarks/tmux/leak_10/tmux_leak_10.c:430:2: warning: use location
  fclose(f);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
# .MEM_177 = VDEF <.MEM_170>
fclose (f_11);
./benchmarks/tmux/leak_10/tmux_leak_10.c:430:2: warning: use location
  fclose(f);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
# .MEM_177 = VDEF <.MEM_170>
fclose (f_11);
./benchmarks/tmux/leak_10/tmux_leak_10.c:430:2: warning: use location
  fclose(f);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
# .MEM_177 = VDEF <.MEM_170>
fclose (f_11);
./benchmarks/tmux/leak_10/tmux_leak_10.c:430:2: warning: use location
  fclose(f);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
# .MEM_175 = VDEF <.MEM_169>
_59 = __fgets_chk (buf_55, _58, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
# .MEM_175 = VDEF <.MEM_169>
_59 = __fgets_chk (buf_55, _58, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
# .MEM_175 = VDEF <.MEM_169>
_59 = __fgets_chk (buf_55, _58, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
# .MEM_175 = VDEF <.MEM_169>
_59 = __fgets_chk (buf_55, _58, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
_57 = __builtin_constant_p (_54);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
_57 = __builtin_constant_p (_54);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
_57 = __builtin_constant_p (_54);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
_57 = __builtin_constant_p (_54);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
_60 = (long unsigned int) _54;

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
_60 = (long unsigned int) _54;

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
_60 = (long unsigned int) _54;

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
_60 = (long unsigned int) _54;

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
if (_60 > _61)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
if (_60 > _61)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
if (_60 > _61)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
if (_60 > _61)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
# VUSE <.MEM_169>
_56 = __builtin_object_size (buf_55, 1);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
# VUSE <.MEM_169>
_56 = __builtin_object_size (buf_55, 1);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
# VUSE <.MEM_169>
_56 = __builtin_object_size (buf_55, 1);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
# VUSE <.MEM_169>
_56 = __builtin_object_size (buf_55, 1);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
if (_56 != 18446744073709551615)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
if (_56 != 18446744073709551615)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
if (_56 != 18446744073709551615)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
if (_56 != 18446744073709551615)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
buf_40 = PHI <line_23(11), buf_41(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
buf_40 = PHI <line_23(11), buf_41(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
buf_40 = PHI <line_23(11), buf_41(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
buf_40 = PHI <line_23(11), buf_41(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd7a41f0cf0
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41f11b0 buf>
    def_stmt buf_40 = PHI <line_23(11), buf_41(12)>
    version 40
    ptr-info 0x7fd7a4216378>
buf_40 = PHI <line_23(11), buf_41(12)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
username_145 = cmd_string_string (buf_40, &p, 47, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:218:6: warning: use location
   if ((username = cmd_string_string(s, p, '/', 0)) == NULL)
      ^
this stmt is child function---cmd_string_string-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f0cf0
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41f11b0 buf>
    def_stmt buf_40 = PHI <line_23(11), buf_41(12)>
    version 40
    ptr-info 0x7fd7a4216378>
trace fucntion name:cmd_string_string 
[40;44m =======trace_function_path cmd_string_string  function_call count: 4 level :0========  [0m
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
[40;36m ======= node_fun:cmd_string_string========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :1========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:cmd_string_getc========= [0m
[40;46m =======add node_fun stack:cmd_string_getc========= [0m
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :1========  [0m
[40;36m ======= node_fun:cmd_string_getc========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:cmd_string_variable========= [0m
cmd_string_variable this fucntion return value is heap-object 
cmd_string_string this fucntion return value is heap-object cmd_string_variable
[40;46m =======add node_fun stack:cmd_string_variable========= [0m
[40;44m =======trace_function_path cmd_string_variable  function_call count: 4 level :1========  [0m
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
[40;36m ======= node_fun:cmd_string_variable========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :2========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:cmd_string_getc========= [0m
[40;46m =======add node_fun stack:cmd_string_getc========= [0m
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:cmd_string_getc========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: use location
   free(username);
   ^
this stmt is child function---free-----

 ================== find ================== 
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_146 = getpwnam (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:220:13: warning: use location
   if ((pw = getpwnam(username)) != NULL)
             ^
this stmt is child function---getpwnam-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f0cf0
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41f11b0 buf>
    def_stmt buf_40 = PHI <line_23(11), buf_41(12)>
    version 40
    ptr-info 0x7fd7a4216378>
trace fucntion name:getpwnam 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_146 != 0)
./benchmarks/tmux/leak_10/tmux_leak_10.c:220:6: warning: use location
   if ((pw = getpwnam(username)) != NULL)
      ^
if (_146 != 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:220:6: warning: use location
Cond in fucntion main basic block 41
 ================== possible direct basic block ================= 
from main basic block 42
 ================== possible direct basic block ================= 
from main basic block 43
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_147 = (long int) _146;
./benchmarks/tmux/leak_10/tmux_leak_10.c:220:13: warning: use location
   if ((pw = getpwnam(username)) != NULL)
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pw_148 = (struct passwd *) _147;
./benchmarks/tmux/leak_10/tmux_leak_10.c:220:11: warning: use location
   if ((pw = getpwnam(username)) != NULL)
           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
home_149 = pw_148->pw_dir;
./benchmarks/tmux/leak_10/tmux_leak_10.c:221:9: warning: use location
    home = pw->pw_dir;
         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
home_153 = PHI <0B(41), home_149(42)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
home_150 = PHI <home_139(37), home_144(39), home_153(43)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_151 = strdup (home_150);
./benchmarks/tmux/leak_10/tmux_leak_10.c:227:10: warning: use location
  return (strdup(home));
          ^
this stmt is child function---strdup-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f0cf0
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41f11b0 buf>
    def_stmt buf_40 = PHI <line_23(11), buf_41(12)>
    version 40
    ptr-info 0x7fd7a4216378>
trace fucntion name:strdup 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_152 = PHI <0B(38), 0B(40), 0B(44), _151(45)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_196 = _152;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
t_110 = _196;
./benchmarks/tmux/leak_10/tmux_leak_10.c:309:7: warning: use location
     t = cmd_string_expand_tilde(s, &p);
       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (t_110 == 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:310:8: warning: use location
     if (t == NULL)
        ^
if (t_110 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:310:8: warning: use location
Cond in fucntion main basic block 46
 ================== possible direct basic block ================= 
from main basic block 49
 ================== possible direct basic block ================= 
from main basic block 17
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_135 = cmd_string_getc (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:211:6: warning: use location
  if (cmd_string_getc(s, p) == '/') {
      ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f0cf0
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41f11b0 buf>
    def_stmt buf_40 = PHI <line_23(11), buf_41(12)>
    version 40
    ptr-info 0x7fd7a4216378>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:cmd_string_getc========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_135 == 47)
./benchmarks/tmux/leak_10/tmux_leak_10.c:211:5: warning: use location
  if (cmd_string_getc(s, p) == '/') {
     ^
if (_135 == 47)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:211:5: warning: use location
Cond in fucntion main basic block 34
 ================== possible direct basic block ================= 
from main basic block 35
 ================== possible direct basic block ================= 
from main basic block 40
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ch_77 = cmd_string_getc (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:271:10: warning: use location
    while ((ch = cmd_string_getc(s, &p)) != EOF)
          ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f0cf0
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41f11b0 buf>
    def_stmt buf_40 = PHI <line_23(11), buf_41(12)>
    version 40
    ptr-info 0x7fd7a4216378>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:cmd_string_getc========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ch_93 = PHI <ch_73(18), ch_77(23)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (ch_93 != -1)
./benchmarks/tmux/leak_10/tmux_leak_10.c:288:7: warning: use location
    if (ch != EOF)
       ^
if (ch_93 != -1)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:288:7: warning: use location
Cond in fucntion main basic block 26
 ================== possible direct basic block ================= 
from main basic block 17
 ================== possible direct basic block ================= 
from main basic block 29
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
t_76 = cmd_string_variable (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:266:7: warning: use location
    if ((t = cmd_string_variable(s, &p)) == NULL)
       ^
this stmt is child function---cmd_string_variable-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f0cf0
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41f11b0 buf>
    def_stmt buf_40 = PHI <line_23(11), buf_41(12)>
    version 40
    ptr-info 0x7fd7a4216378>
trace fucntion name:cmd_string_variable 
[40;44m =======trace_function_path cmd_string_variable  function_call count: 4 level :0========  [0m
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
[40;36m ======= node_fun:cmd_string_variable========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :1========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:cmd_string_getc========= [0m
[40;46m =======add node_fun stack:cmd_string_getc========= [0m
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :1========  [0m
[40;36m ======= node_fun:cmd_string_getc========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
t_75 = cmd_string_string (buf_40, &p, 34, 1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:262:7: warning: use location
    if ((t = cmd_string_string(s, &p, '"', 1)) == NULL)
       ^
this stmt is child function---cmd_string_string-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f0cf0
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41f11b0 buf>
    def_stmt buf_40 = PHI <line_23(11), buf_41(12)>
    version 40
    ptr-info 0x7fd7a4216378>
trace fucntion name:cmd_string_string 
[40;44m =======trace_function_path cmd_string_string  function_call count: 4 level :0========  [0m
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
[40;36m ======= node_fun:cmd_string_string========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :1========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:cmd_string_getc========= [0m
[40;46m =======add node_fun stack:cmd_string_getc========= [0m
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :1========  [0m
[40;36m ======= node_fun:cmd_string_getc========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:cmd_string_variable========= [0m
cmd_string_variable this fucntion return value is heap-object 
cmd_string_string this fucntion return value is heap-object cmd_string_variable
[40;46m =======add node_fun stack:cmd_string_variable========= [0m
[40;44m =======trace_function_path cmd_string_variable  function_call count: 4 level :1========  [0m
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
[40;36m ======= node_fun:cmd_string_variable========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :2========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:cmd_string_getc========= [0m
[40;46m =======add node_fun stack:cmd_string_getc========= [0m
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:cmd_string_getc========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
t_74 = cmd_string_string (buf_40, &p, 39, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:258:7: warning: use location
    if ((t = cmd_string_string(s, &p, '\'', 0)) == NULL)
       ^
this stmt is child function---cmd_string_string-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f0cf0
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41f11b0 buf>
    def_stmt buf_40 = PHI <line_23(11), buf_41(12)>
    version 40
    ptr-info 0x7fd7a4216378>
trace fucntion name:cmd_string_string 
[40;44m =======trace_function_path cmd_string_string  function_call count: 4 level :0========  [0m
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
[40;36m ======= node_fun:cmd_string_string========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :1========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:cmd_string_getc========= [0m
[40;46m =======add node_fun stack:cmd_string_getc========= [0m
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :1========  [0m
[40;36m ======= node_fun:cmd_string_getc========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:cmd_string_variable========= [0m
cmd_string_variable this fucntion return value is heap-object 
cmd_string_string this fucntion return value is heap-object cmd_string_variable
[40;46m =======add node_fun stack:cmd_string_variable========= [0m
[40;44m =======trace_function_path cmd_string_variable  function_call count: 4 level :1========  [0m
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
[40;36m ======= node_fun:cmd_string_variable========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :2========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:cmd_string_getc========= [0m
[40;46m =======add node_fun stack:cmd_string_getc========= [0m
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:cmd_string_getc========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ch_73 = cmd_string_getc (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:255:6: warning: use location
   ch = cmd_string_getc(s, &p);
      ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f0cf0
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41f11b0 buf>
    def_stmt buf_40 = PHI <line_23(11), buf_41(12)>
    version 40
    ptr-info 0x7fd7a4216378>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:cmd_string_getc========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_116 = (char) ch_73;
./benchmarks/tmux/leak_10/tmux_leak_10.c:320:15: warning: use location
    buf[len++] = ch;
               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_115 = _116;
./benchmarks/tmux/leak_10/tmux_leak_10.c:320:15: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = *buf_40;
./benchmarks/tmux/leak_10/tmux_leak_10.c:399:7: warning: use location
   if (*buf == '\0') {
       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_46 == 0)
./benchmarks/tmux/leak_10/tmux_leak_10.c:399:6: warning: use location
   if (*buf == '\0') {
      ^
if (_46 == 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:399:6: warning: use location
Cond in fucntion main basic block 14
 ================== possible direct basic block ================= 
from main basic block 15
 ================== possible direct basic block ================= 
from main basic block 16
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *buf_40;
./benchmarks/tmux/leak_10/tmux_leak_10.c:397:26: warning: use location
   while (isspace((u_char)*buf))
                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = (unsigned char) _42;
./benchmarks/tmux/leak_10/tmux_leak_10.c:397:18: warning: use location
   while (isspace((u_char)*buf))
                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = (int) _43;
./benchmarks/tmux/leak_10/tmux_leak_10.c:397:10: warning: use location
   while (isspace((u_char)*buf))
          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = isspace (_44);
./benchmarks/tmux/leak_10/tmux_leak_10.c:397:10: warning: use location
this stmt is child function---isspace-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f0cf0
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41f11b0 buf>
    def_stmt buf_40 = PHI <line_23(11), buf_41(12)>
    version 40
    ptr-info 0x7fd7a4216378>
trace fucntion name:isspace 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_69 = PHI <_16(10), buf_40(15), buf_40(55), buf_40(56), buf_40(58), buf_40(59)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_55 = PHI <buf_71(D)(3), buf_69(60)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = __fgets_alias (buf_55, _54, f_11);
this stmt is child function---__fgets_alias-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f0cf0
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41f11b0 buf>
    def_stmt buf_40 = PHI <line_23(11), buf_41(12)>
    version 40
    ptr-info 0x7fd7a4216378>
trace fucntion name:__fgets_alias 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = PHI <_59(64), _63(66), _64(67)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
memcpy (_24, _16, len_21);
./benchmarks/tmux/leak_10/tmux_leak_10.c:379:3: warning: use location
   memcpy(line + oldlen, buf, len);
   ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f0cf0
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41f11b0 buf>
    def_stmt buf_40 = PHI <line_23(11), buf_41(12)>
    version 40
    ptr-info 0x7fd7a4216378>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = __printf_chk (1, "%s: %s", "path", _16);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f0cf0
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41f11b0 buf>
    def_stmt buf_40 = PHI <line_23(11), buf_41(12)>
    version 40
    ptr-info 0x7fd7a4216378>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = __fgets_chk_warn (buf_55, _62, _54, f_11);
this stmt is child function---__fgets_chk_warn-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f0cf0
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41f11b0 buf>
    def_stmt buf_40 = PHI <line_23(11), buf_41(12)>
    version 40
    ptr-info 0x7fd7a4216378>
trace fucntion name:__fgets_chk_warn 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_177 = VDEF <.MEM_170>
fclose (f_11);
bb index := 69
# VUSE <.MEM_15>
return _8;
In function ‘main’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 69 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_177 = VDEF <.MEM_170>
fclose (f_11);
bb index := 69
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 69 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_177 = VDEF <.MEM_170>
fclose (f_11);
bb index := 69
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 69 ,possiable got to succ := 70

======================================================================
fclose (f_11);
At top level:
./benchmarks/tmux/leak_10/tmux_leak_10.c:430:2: warning: use location
  fclose(f);
  ^
this stmt is child function---fclose-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f0cf0
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41f11b0 buf>
    def_stmt buf_40 = PHI <line_23(11), buf_41(12)>
    version 40
    ptr-info 0x7fd7a4216378>
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = __fgets_chk (buf_55, _58, _54, f_11);
this stmt is child function---__fgets_chk-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f0cf0
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41f11b0 buf>
    def_stmt buf_40 = PHI <line_23(11), buf_41(12)>
    version 40
    ptr-info 0x7fd7a4216378>
trace fucntion name:__fgets_chk 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_11 == 0B)
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_11 == 0B)
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_11 == 0B)
bb index := 2
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_11 == 0B)
bb index := 2
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_11 == 0B)
bb index := 2
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_11 == 0B)
bb index := 2
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_11 == 0B)
bb index := 2
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_11 == 0B)
bb index := 2
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 70

======================================================================
if (f_11 == 0B)
At top level:
./benchmarks/tmux/leak_10/tmux_leak_10.c:354:5: warning: use location
  if ((f = fopen(path, "rb")) == NULL) {
     ^
if (f_11 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:354:5: warning: use location
Cond in fucntion main basic block 2
 ================== possible direct basic block ================= 
from main basic block 70
 ================== possible direct basic block ================= 
from main basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_57 = __builtin_constant_p (_54);
this stmt is child function---__builtin_constant_p-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f0cf0
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41f11b0 buf>
    def_stmt buf_40 = PHI <line_23(11), buf_41(12)>
    version 40
    ptr-info 0x7fd7a4216378>
trace fucntion name:__builtin_constant_p 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = (long unsigned int) _54;

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_60 > _61)
if (_60 > _61)

 ================== find cond branch ================= 
Cond in fucntion main basic block 65
 ================== possible direct basic block ================= 
from main basic block 66
 ================== possible direct basic block ================= 
from main basic block 67
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_56 = __builtin_object_size (buf_55, 1);
this stmt is child function---__builtin_object_size-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f0cf0
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41f11b0 buf>
    def_stmt buf_40 = PHI <line_23(11), buf_41(12)>
    version 40
    ptr-info 0x7fd7a4216378>
trace fucntion name:__builtin_object_size 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_56 != 18446744073709551615)
if (_56 != 18446744073709551615)

 ================== find cond branch ================= 
Cond in fucntion main basic block 61
 ================== possible direct basic block ================= 
from main basic block 62
 ================== possible direct basic block ================= 
from main basic block 67
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_41 = buf_40 + 1;
./benchmarks/tmux/leak_10/tmux_leak_10.c:398:7: warning: use location
    buf++;
       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_40 = PHI <line_23(11), buf_41(12)>
lto1: warning: use location
this stmt have mutiple branch --------

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7a41f0cf0
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41f11b0 buf>
    def_stmt buf_40 = PHI <line_23(11), buf_41(12)>
    version 40
    ptr-info 0x7fd7a4216378>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: use location
    free(argv[i]);
    ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: use location
    free(copy);
    ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: use location
   free(copy);
   ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
home_153 = PHI <0B(41), home_149(42)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
home_153 = PHI <0B(41), home_149(42)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
home_153 = PHI <0B(41), home_149(42)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
home_153 = PHI <0B(41), home_149(42)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
home_150 = PHI <home_139(37), home_144(39), home_153(43)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
home_150 = PHI <home_139(37), home_144(39), home_153(43)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
home_150 = PHI <home_139(37), home_144(39), home_153(43)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
home_150 = PHI <home_139(37), home_144(39), home_153(43)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
# .MEM_195 = VDEF <.MEM_163>
_151 = strdup (home_150);
./benchmarks/tmux/leak_10/tmux_leak_10.c:227:10: warning: use location
  return (strdup(home));
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
_152 = PHI <0B(38), 0B(40), 0B(44), _151(45)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
_152 = PHI <0B(38), 0B(40), 0B(44), _151(45)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
_152 = PHI <0B(38), 0B(40), 0B(44), _151(45)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
_152 = PHI <0B(38), 0B(40), 0B(44), _151(45)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
_196 = _152;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
t_110 = _196;
./benchmarks/tmux/leak_10/tmux_leak_10.c:309:7: warning: use location
     t = cmd_string_expand_tilde(s, &p);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
if (t_110 == 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:310:8: warning: use location
     if (t == NULL)
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
ch_93 = PHI <ch_73(18), ch_77(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
ch_93 = PHI <ch_73(18), ch_77(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
ch_93 = PHI <ch_73(18), ch_77(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
ch_93 = PHI <ch_73(18), ch_77(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
_116 = (char) ch_73;
./benchmarks/tmux/leak_10/tmux_leak_10.c:320:15: warning: use location
    buf[len++] = ch;
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
# .MEM_207 = VDEF <.MEM_206>
*_115 = _116;
./benchmarks/tmux/leak_10/tmux_leak_10.c:320:15: warning: use location
    buf[len++] = ch;
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
buf_69 = PHI <_16(10), buf_40(15), buf_40(55), buf_40(56), buf_40(58), buf_40(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
buf_69 = PHI <_16(10), buf_40(15), buf_40(55), buf_40(56), buf_40(58), buf_40(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
buf_69 = PHI <_16(10), buf_40(15), buf_40(55), buf_40(56), buf_40(58), buf_40(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
buf_69 = PHI <_16(10), buf_40(15), buf_40(55), buf_40(56), buf_40(58), buf_40(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
buf_55 = PHI <buf_71(D)(3), buf_69(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
buf_55 = PHI <buf_71(D)(3), buf_69(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
buf_55 = PHI <buf_71(D)(3), buf_69(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
buf_55 = PHI <buf_71(D)(3), buf_69(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
# .MEM_176 = VDEF <.MEM_169>
_64 = __fgets_alias (buf_55, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
# .MEM_176 = VDEF <.MEM_169>
_64 = __fgets_alias (buf_55, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
# .MEM_176 = VDEF <.MEM_169>
_64 = __fgets_alias (buf_55, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
# .MEM_176 = VDEF <.MEM_169>
_64 = __fgets_alias (buf_55, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
_16 = PHI <_59(64), _63(66), _64(67)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
_16 = PHI <_59(64), _63(66), _64(67)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
_16 = PHI <_59(64), _63(66), _64(67)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
_16 = PHI <_59(64), _63(66), _64(67)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
# .MEM_174 = VDEF <.MEM_169>
_63 = __fgets_chk_warn (buf_55, _62, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
# .MEM_174 = VDEF <.MEM_169>
_63 = __fgets_chk_warn (buf_55, _62, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
# .MEM_174 = VDEF <.MEM_169>
_63 = __fgets_chk_warn (buf_55, _62, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
# .MEM_174 = VDEF <.MEM_169>
_63 = __fgets_chk_warn (buf_55, _62, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
# .MEM_177 = VDEF <.MEM_170>
fclose (f_11);
./benchmarks/tmux/leak_10/tmux_leak_10.c:430:2: warning: use location
  fclose(f);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
# .MEM_177 = VDEF <.MEM_170>
fclose (f_11);
./benchmarks/tmux/leak_10/tmux_leak_10.c:430:2: warning: use location
  fclose(f);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
# .MEM_177 = VDEF <.MEM_170>
fclose (f_11);
./benchmarks/tmux/leak_10/tmux_leak_10.c:430:2: warning: use location
  fclose(f);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
# .MEM_177 = VDEF <.MEM_170>
fclose (f_11);
./benchmarks/tmux/leak_10/tmux_leak_10.c:430:2: warning: use location
  fclose(f);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
# .MEM_175 = VDEF <.MEM_169>
_59 = __fgets_chk (buf_55, _58, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
# .MEM_175 = VDEF <.MEM_169>
_59 = __fgets_chk (buf_55, _58, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
# .MEM_175 = VDEF <.MEM_169>
_59 = __fgets_chk (buf_55, _58, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
# .MEM_175 = VDEF <.MEM_169>
_59 = __fgets_chk (buf_55, _58, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
_57 = __builtin_constant_p (_54);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
_57 = __builtin_constant_p (_54);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
_57 = __builtin_constant_p (_54);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
_57 = __builtin_constant_p (_54);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
_60 = (long unsigned int) _54;

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
_60 = (long unsigned int) _54;

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
_60 = (long unsigned int) _54;

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
_60 = (long unsigned int) _54;

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
if (_60 > _61)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
if (_60 > _61)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
if (_60 > _61)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
if (_60 > _61)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
# VUSE <.MEM_169>
_56 = __builtin_object_size (buf_55, 1);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
# VUSE <.MEM_169>
_56 = __builtin_object_size (buf_55, 1);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
# VUSE <.MEM_169>
_56 = __builtin_object_size (buf_55, 1);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
# VUSE <.MEM_169>
_56 = __builtin_object_size (buf_55, 1);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
if (_56 != 18446744073709551615)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
if (_56 != 18446744073709551615)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
if (_56 != 18446744073709551615)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
if (_56 != 18446744073709551615)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
buf_40 = PHI <line_23(11), buf_41(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
buf_40 = PHI <line_23(11), buf_41(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
buf_40 = PHI <line_23(11), buf_41(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
buf_40 = PHI <line_23(11), buf_41(12)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd7a4202438
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41f7f30 buf>
    def_stmt buf_78 = PHI <0B(16), buf_131(17)>
    version 78
    ptr-info 0x7fd7a4216510>
buf_78 = PHI <0B(16), buf_131(17)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_112 = xrealloc (buf_78, 1, _111);
./benchmarks/tmux/leak_10/tmux_leak_10.c:319:8: warning: use location
    buf = xrealloc(buf, 1, len + 1);
        ^
this stmt is child function---xrealloc-----

 ================== trace ================== 
 <ssa_name 0x7fd7a4202438
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41f7f30 buf>
    def_stmt buf_78 = PHI <0B(16), buf_131(17)>
    version 78
    ptr-info 0x7fd7a4216510>
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :0========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;31m  find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_131 = PHI <buf_78(19), buf_78(20), buf_78(21), buf_132(26), buf_78(46), buf_112(48)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_78 = PHI <0B(16), buf_131(17)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_115 = buf_112 + len_79;
./benchmarks/tmux/leak_10/tmux_leak_10.c:320:7: warning: use location
    buf[len++] = ch;
       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_115 = _116;
./benchmarks/tmux/leak_10/tmux_leak_10.c:320:15: warning: use location
    buf[len++] = ch;
               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_115 = _116;
./benchmarks/tmux/leak_10/tmux_leak_10.c:320:15: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_81 = xrealloc (buf_78, 1, _80);
./benchmarks/tmux/leak_10/tmux_leak_10.c:278:9: warning: use location
     buf = xrealloc(buf, 1, len + 1);
         ^
this stmt is child function---xrealloc-----

 ================== trace ================== 
 <ssa_name 0x7fd7a4202438
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41f7f30 buf>
    def_stmt buf_78 = PHI <0B(16), buf_131(17)>
    version 78
    ptr-info 0x7fd7a4216510>
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :0========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;31m  find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_92 = buf_81;
./benchmarks/tmux/leak_10/tmux_leak_10.c:282:18: warning: use location
     argv[argc++] = buf;
                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_82 = buf_81 + len_79;
./benchmarks/tmux/leak_10/tmux_leak_10.c:279:8: warning: use location
     buf[len] = '\0';
        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_82 = 0;
./benchmarks/tmux/leak_10/tmux_leak_10.c:279:14: warning: use location
     buf[len] = '\0';
              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_117 = PHI <buf_78(19), buf_78(20), buf_78(21), buf_132(30), buf_132(31), buf_132(32), buf_78(46), buf_78(47)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: use location
  free(buf);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_132 = PHI <buf_78(24), 0B(25)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (buf_78 == 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:308:7: warning: use location
    if (buf == NULL) {
       ^
if (buf_78 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:308:7: warning: use location
Cond in fucntion main basic block 33
 ================== possible direct basic block ================= 
from main basic block 34
 ================== possible direct basic block ================= 
from main basic block 47
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7a4202438
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41f7f30 buf>
    def_stmt buf_78 = PHI <0B(16), buf_131(17)>
    version 78
    ptr-info 0x7fd7a4216510>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: use location
   free(username);
   ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: use location
  free(buf);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: use location
    free(argv[i]);
    ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: use location
   free(argv);
   ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
# .MEM_206 = VDEF <.MEM_187>
buf_112 = xrealloc (buf_78, 1, _111);
./benchmarks/tmux/leak_10/tmux_leak_10.c:319:8: warning: use location
    buf = xrealloc(buf, 1, len + 1);
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_206 = VDEF <.MEM_187>
buf_112 = xrealloc (buf_78, 1, _111);
./benchmarks/tmux/leak_10/tmux_leak_10.c:319:8: warning: Use after free error!: free location 
buf_131 = PHI <buf_78(19), buf_78(20), buf_78(21), buf_132(26), buf_78(46), buf_112(48)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_201 = VDEF <.MEM_160>
buf_81 = xrealloc (buf_78, 1, _80);
./benchmarks/tmux/leak_10/tmux_leak_10.c:278:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
buf_131 = PHI <buf_78(19), buf_78(20), buf_78(21), buf_132(26), buf_78(46), buf_112(48)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_131 = PHI <buf_78(19), buf_78(20), buf_78(21), buf_132(26), buf_78(46), buf_112(48)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
buf_131 = PHI <buf_78(19), buf_78(20), buf_78(21), buf_132(26), buf_78(46), buf_112(48)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_131 = PHI <buf_78(19), buf_78(20), buf_78(21), buf_132(26), buf_78(46), buf_112(48)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
buf_131 = PHI <buf_78(19), buf_78(20), buf_78(21), buf_132(26), buf_78(46), buf_112(48)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: Use after free error!: free location 
   free(argv);
   ^
buf_131 = PHI <buf_78(19), buf_78(20), buf_78(21), buf_132(26), buf_78(46), buf_112(48)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_206 = VDEF <.MEM_187>
buf_112 = xrealloc (buf_78, 1, _111);
./benchmarks/tmux/leak_10/tmux_leak_10.c:319:8: warning: Use after free error!: free location 
    buf = xrealloc(buf, 1, len + 1);
        ^
buf_78 = PHI <0B(16), buf_131(17)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_201 = VDEF <.MEM_160>
buf_81 = xrealloc (buf_78, 1, _80);
./benchmarks/tmux/leak_10/tmux_leak_10.c:278:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
buf_78 = PHI <0B(16), buf_131(17)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_78 = PHI <0B(16), buf_131(17)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
buf_78 = PHI <0B(16), buf_131(17)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_78 = PHI <0B(16), buf_131(17)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
buf_78 = PHI <0B(16), buf_131(17)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: Use after free error!: free location 
   free(argv);
   ^
buf_78 = PHI <0B(16), buf_131(17)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_206 = VDEF <.MEM_187>
buf_112 = xrealloc (buf_78, 1, _111);
./benchmarks/tmux/leak_10/tmux_leak_10.c:319:8: warning: Use after free error!: free location 
    buf = xrealloc(buf, 1, len + 1);
        ^
_115 = buf_112 + len_79;
./benchmarks/tmux/leak_10/tmux_leak_10.c:320:7: warning: use location
    buf[len++] = ch;
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_201 = VDEF <.MEM_160>
buf_81 = xrealloc (buf_78, 1, _80);
./benchmarks/tmux/leak_10/tmux_leak_10.c:278:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
_115 = buf_112 + len_79;
./benchmarks/tmux/leak_10/tmux_leak_10.c:320:7: warning: use location
    buf[len++] = ch;
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
_115 = buf_112 + len_79;
./benchmarks/tmux/leak_10/tmux_leak_10.c:320:7: warning: use location
    buf[len++] = ch;
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_206 = VDEF <.MEM_187>
buf_112 = xrealloc (buf_78, 1, _111);
./benchmarks/tmux/leak_10/tmux_leak_10.c:319:8: warning: Use after free error!: free location 
    buf = xrealloc(buf, 1, len + 1);
        ^
# .MEM_207 = VDEF <.MEM_206>
*_115 = _116;
./benchmarks/tmux/leak_10/tmux_leak_10.c:320:15: warning: use location
    buf[len++] = ch;
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_201 = VDEF <.MEM_160>
buf_81 = xrealloc (buf_78, 1, _80);
./benchmarks/tmux/leak_10/tmux_leak_10.c:278:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
# .MEM_207 = VDEF <.MEM_206>
*_115 = _116;
./benchmarks/tmux/leak_10/tmux_leak_10.c:320:15: warning: use location
    buf[len++] = ch;
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
# .MEM_207 = VDEF <.MEM_206>
*_115 = _116;
./benchmarks/tmux/leak_10/tmux_leak_10.c:320:15: warning: use location
    buf[len++] = ch;
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_206 = VDEF <.MEM_187>
buf_112 = xrealloc (buf_78, 1, _111);
./benchmarks/tmux/leak_10/tmux_leak_10.c:319:8: warning: Use after free error!: free location 
    buf = xrealloc(buf, 1, len + 1);
        ^
# .MEM_207 = VDEF <.MEM_206>
*_115 = _116;
./benchmarks/tmux/leak_10/tmux_leak_10.c:320:15: warning: use location
    buf[len++] = ch;
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_201 = VDEF <.MEM_160>
buf_81 = xrealloc (buf_78, 1, _80);
./benchmarks/tmux/leak_10/tmux_leak_10.c:278:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
# .MEM_207 = VDEF <.MEM_206>
*_115 = _116;
./benchmarks/tmux/leak_10/tmux_leak_10.c:320:15: warning: use location
    buf[len++] = ch;
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
# .MEM_207 = VDEF <.MEM_206>
*_115 = _116;
./benchmarks/tmux/leak_10/tmux_leak_10.c:320:15: warning: use location
    buf[len++] = ch;
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_201 = VDEF <.MEM_160>
buf_81 = xrealloc (buf_78, 1, _80);
./benchmarks/tmux/leak_10/tmux_leak_10.c:278:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
# .MEM_204 = VDEF <.MEM_203>
*_92 = buf_81;
./benchmarks/tmux/leak_10/tmux_leak_10.c:282:18: warning: use location
     argv[argc++] = buf;
                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_201 = VDEF <.MEM_160>
buf_81 = xrealloc (buf_78, 1, _80);
./benchmarks/tmux/leak_10/tmux_leak_10.c:278:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
_82 = buf_81 + len_79;
./benchmarks/tmux/leak_10/tmux_leak_10.c:279:8: warning: use location
     buf[len] = '\0';
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_201 = VDEF <.MEM_160>
buf_81 = xrealloc (buf_78, 1, _80);
./benchmarks/tmux/leak_10/tmux_leak_10.c:278:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
# .MEM_202 = VDEF <.MEM_201>
*_82 = 0;
./benchmarks/tmux/leak_10/tmux_leak_10.c:279:14: warning: use location
     buf[len] = '\0';
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_206 = VDEF <.MEM_187>
buf_112 = xrealloc (buf_78, 1, _111);
./benchmarks/tmux/leak_10/tmux_leak_10.c:319:8: warning: Use after free error!: free location 
    buf = xrealloc(buf, 1, len + 1);
        ^
buf_117 = PHI <buf_78(19), buf_78(20), buf_78(21), buf_132(30), buf_132(31), buf_132(32), buf_78(46), buf_78(47)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_201 = VDEF <.MEM_160>
buf_81 = xrealloc (buf_78, 1, _80);
./benchmarks/tmux/leak_10/tmux_leak_10.c:278:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
buf_117 = PHI <buf_78(19), buf_78(20), buf_78(21), buf_132(30), buf_132(31), buf_132(32), buf_78(46), buf_78(47)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_117 = PHI <buf_78(19), buf_78(20), buf_78(21), buf_132(30), buf_132(31), buf_132(32), buf_78(46), buf_78(47)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
buf_117 = PHI <buf_78(19), buf_78(20), buf_78(21), buf_132(30), buf_132(31), buf_132(32), buf_78(46), buf_78(47)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_117 = PHI <buf_78(19), buf_78(20), buf_78(21), buf_132(30), buf_132(31), buf_132(32), buf_78(46), buf_78(47)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
buf_117 = PHI <buf_78(19), buf_78(20), buf_78(21), buf_132(30), buf_132(31), buf_132(32), buf_78(46), buf_78(47)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: Use after free error!: free location 
   free(argv);
   ^
buf_117 = PHI <buf_78(19), buf_78(20), buf_78(21), buf_132(30), buf_132(31), buf_132(32), buf_78(46), buf_78(47)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_206 = VDEF <.MEM_187>
buf_112 = xrealloc (buf_78, 1, _111);
./benchmarks/tmux/leak_10/tmux_leak_10.c:319:8: warning: Use after free error!: free location 
    buf = xrealloc(buf, 1, len + 1);
        ^
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: use location
  free(buf);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_201 = VDEF <.MEM_160>
buf_81 = xrealloc (buf_78, 1, _80);
./benchmarks/tmux/leak_10/tmux_leak_10.c:278:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: use location
  free(buf);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_206 = VDEF <.MEM_187>
buf_112 = xrealloc (buf_78, 1, _111);
./benchmarks/tmux/leak_10/tmux_leak_10.c:319:8: warning: Use after free error!: free location 
    buf = xrealloc(buf, 1, len + 1);
        ^
buf_132 = PHI <buf_78(24), 0B(25)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_201 = VDEF <.MEM_160>
buf_81 = xrealloc (buf_78, 1, _80);
./benchmarks/tmux/leak_10/tmux_leak_10.c:278:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
buf_132 = PHI <buf_78(24), 0B(25)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_132 = PHI <buf_78(24), 0B(25)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
buf_132 = PHI <buf_78(24), 0B(25)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_132 = PHI <buf_78(24), 0B(25)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
buf_132 = PHI <buf_78(24), 0B(25)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: Use after free error!: free location 
   free(argv);
   ^
buf_132 = PHI <buf_78(24), 0B(25)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_201 = VDEF <.MEM_160>
buf_81 = xrealloc (buf_78, 1, _80);
./benchmarks/tmux/leak_10/tmux_leak_10.c:278:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
if (buf_78 == 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:308:7: warning: use location
    if (buf == NULL) {
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:4 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd7a4202678
    type <pointer_type 0x7fd7a418eb28
        type <pointer_type 0x7fd7a418ea80 type <integer_type 0x7fd7a418e9d8 char>
            public unsigned DI
            size <integer_cst 0x7fd7a4664be8 constant 64>
            unit size <integer_cst 0x7fd7a4664c00 constant 8>
            align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418eb28>>
        public unsigned DI size <integer_cst 0x7fd7a4664be8 64> unit size <integer_cst 0x7fd7a4664c00 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fd7a41f7ea0 argv>
    def_stmt argv_86 = PHI <0B(16), argv_130(17)>
    version 86
    ptr-info 0x7fd7a4216558>
argv_86 = PHI <0B(16), argv_130(17)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
argv_87 = xrealloc (argv_86, _85, 8);
./benchmarks/tmux/leak_10/tmux_leak_10.c:281:10: warning: use location
     argv = xrealloc(argv, argc + 1, sizeof *argv);
          ^
this stmt is child function---xrealloc-----

 ================== trace ================== 
 <ssa_name 0x7fd7a4202678
    type <pointer_type 0x7fd7a418eb28
        type <pointer_type 0x7fd7a418ea80 type <integer_type 0x7fd7a418e9d8 char>
            public unsigned DI
            size <integer_cst 0x7fd7a4664be8 constant 64>
            unit size <integer_cst 0x7fd7a4664c00 constant 8>
            align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418eb28>>
        public unsigned DI size <integer_cst 0x7fd7a4664be8 64> unit size <integer_cst 0x7fd7a4664c00 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fd7a41f7ea0 argv>
    def_stmt argv_86 = PHI <0B(16), argv_130(17)>
    version 86
    ptr-info 0x7fd7a4216558>
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :0========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;31m  find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with argv ========= [0m
[40;36m ======= relate stmt argument:argv ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
argv_94 = PHI <argv_86(24), argv_87(25)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
memmove (argv_94, _108, _107);
./benchmarks/tmux/leak_10/tmux_leak_10.c:297:5: warning: use location
     memmove(argv, argv + 1, argc * (sizeof *argv));
     ^
this stmt is child function---memmove-----

 ================== trace ================== 
 <ssa_name 0x7fd7a4202678
    type <pointer_type 0x7fd7a418eb28
        type <pointer_type 0x7fd7a418ea80 type <integer_type 0x7fd7a418e9d8 char>
            public unsigned DI
            size <integer_cst 0x7fd7a4664be8 constant 64>
            unit size <integer_cst 0x7fd7a4664c00 constant 8>
            align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418eb28>>
        public unsigned DI size <integer_cst 0x7fd7a4664be8 64> unit size <integer_cst 0x7fd7a4664c00 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fd7a41f7ea0 argv>
    def_stmt argv_86 = PHI <0B(16), argv_130(17)>
    version 86
    ptr-info 0x7fd7a4216558>
trace fucntion name:memmove 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_98 = *argv_94;
./benchmarks/tmux/leak_10/tmux_leak_10.c:293:28: warning: use location
     whitespace = argv[0] + strcspn(argv[0], " \t");
                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_99 = strcspn (_98, " \t");
./benchmarks/tmux/leak_10/tmux_leak_10.c:293:28: warning: use location
this stmt is child function---strcspn-----

 ================== trace ================== 
 <ssa_name 0x7fd7a4202678
    type <pointer_type 0x7fd7a418eb28
        type <pointer_type 0x7fd7a418ea80 type <integer_type 0x7fd7a418e9d8 char>
            public unsigned DI
            size <integer_cst 0x7fd7a4664be8 constant 64>
            unit size <integer_cst 0x7fd7a4664c00 constant 8>
            align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418eb28>>
        public unsigned DI size <integer_cst 0x7fd7a4664be8 64> unit size <integer_cst 0x7fd7a4664c00 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fd7a41f7ea0 argv>
    def_stmt argv_86 = PHI <0B(16), argv_130(17)>
    version 86
    ptr-info 0x7fd7a4216558>
trace fucntion name:strcspn 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
whitespace_100 = _97 + _99;
./benchmarks/tmux/leak_10/tmux_leak_10.c:293:16: warning: use location
     whitespace = argv[0] + strcspn(argv[0], " \t");
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_102 = equals_96 > whitespace_100;
./benchmarks/tmux/leak_10/tmux_leak_10.c:294:34: warning: use location
     if (equals == NULL || equals > whitespace)
                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_103 = _101 | _102;
./benchmarks/tmux/leak_10/tmux_leak_10.c:294:24: warning: use location
     if (equals == NULL || equals > whitespace)
                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_103 != 0)
./benchmarks/tmux/leak_10/tmux_leak_10.c:294:8: warning: use location
     if (equals == NULL || equals > whitespace)
        ^
if (_103 != 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:294:8: warning: use location
Cond in fucntion main basic block 27
 ================== possible direct basic block ================= 
from main basic block 30
 ================== possible direct basic block ================= 
from main basic block 28
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_97 = *argv_94;
./benchmarks/tmux/leak_10/tmux_leak_10.c:293:22: warning: use location
     whitespace = argv[0] + strcspn(argv[0], " \t");
                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_95 = *argv_94;
./benchmarks/tmux/leak_10/tmux_leak_10.c:292:14: warning: use location
     equals = strchr(argv[0], '=');
              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
equals_96 = strchr (_95, 61);
./benchmarks/tmux/leak_10/tmux_leak_10.c:292:12: warning: use location
     equals = strchr(argv[0], '=');
            ^
this stmt is child function---strchr-----

 ================== trace ================== 
 <ssa_name 0x7fd7a4202678
    type <pointer_type 0x7fd7a418eb28
        type <pointer_type 0x7fd7a418ea80 type <integer_type 0x7fd7a418e9d8 char>
            public unsigned DI
            size <integer_cst 0x7fd7a4664be8 constant 64>
            unit size <integer_cst 0x7fd7a4664c00 constant 8>
            align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418eb28>>
        public unsigned DI size <integer_cst 0x7fd7a4664be8 64> unit size <integer_cst 0x7fd7a4664c00 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fd7a41f7ea0 argv>
    def_stmt argv_86 = PHI <0B(16), argv_130(17)>
    version 86
    ptr-info 0x7fd7a4216558>
trace fucntion name:strchr 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
argv_118 = PHI <argv_86(19), argv_86(20), argv_86(21), argv_94(30), argv_94(31), argv_94(32), argv_86(46), argv_86(47)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: use location
   free(argv);
   ^
this stmt is child function---free-----

 ================== find ================== 
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (argv_118 != 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:329:5: warning: use location
  if (argv != NULL) {
     ^
if (argv_118 != 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:329:5: warning: use location
Cond in fucntion main basic block 49
 ================== possible direct basic block ================= 
from main basic block 51
 ================== possible direct basic block ================= 
from main basic block 53
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
argv_130 = PHI <argv_86(19), argv_86(20), argv_86(21), argv_94(26), argv_86(46), argv_86(48)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
argv_86 = PHI <0B(16), argv_130(17)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_108 = argv_94 + 8;
./benchmarks/tmux/leak_10/tmux_leak_10.c:297:24: warning: use location
     memmove(argv, argv + 1, argc * (sizeof *argv));
                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = argv_87 + _91;
./benchmarks/tmux/leak_10/tmux_leak_10.c:282:9: warning: use location
     argv[argc++] = buf;
         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_92 = buf_81;
./benchmarks/tmux/leak_10/tmux_leak_10.c:282:18: warning: use location
     argv[argc++] = buf;
                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_92 = buf_81;
./benchmarks/tmux/leak_10/tmux_leak_10.c:282:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_82 = buf_81 + len_79;
./benchmarks/tmux/leak_10/tmux_leak_10.c:279:8: warning: use location
     buf[len] = '\0';
        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_82 = 0;
./benchmarks/tmux/leak_10/tmux_leak_10.c:279:14: warning: use location
     buf[len] = '\0';
              ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7a4202678
    type <pointer_type 0x7fd7a418eb28
        type <pointer_type 0x7fd7a418ea80 type <integer_type 0x7fd7a418e9d8 char>
            public unsigned DI
            size <integer_cst 0x7fd7a4664be8 constant 64>
            unit size <integer_cst 0x7fd7a4664c00 constant 8>
            align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418eb28>>
        public unsigned DI size <integer_cst 0x7fd7a4664be8 64> unit size <integer_cst 0x7fd7a4664c00 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fd7a41f7ea0 argv>
    def_stmt argv_86 = PHI <0B(16), argv_130(17)>
    version 86
    ptr-info 0x7fd7a4216558>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: use location
   free(username);
   ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: use location
  free(buf);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: use location
    free(argv[i]);
    ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: use location
   free(argv);
   ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_203 = VDEF <.MEM_202>
argv_87 = xrealloc (argv_86, _85, 8);
./benchmarks/tmux/leak_10/tmux_leak_10.c:281:10: warning: Use after free error!: free location 
     argv = xrealloc(argv, argc + 1, sizeof *argv);
          ^
argv_94 = PHI <argv_86(24), argv_87(25)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: Use after free error!: free location 
   free(argv);
   ^
argv_94 = PHI <argv_86(24), argv_87(25)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
argv_94 = PHI <argv_86(24), argv_87(25)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: Use after free error!: free location 
  free(buf);
  ^
argv_94 = PHI <argv_86(24), argv_87(25)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
argv_94 = PHI <argv_86(24), argv_87(25)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: Use after free error!: free location 
   free(argv);
   ^
argv_94 = PHI <argv_86(24), argv_87(25)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_203 = VDEF <.MEM_202>
argv_87 = xrealloc (argv_86, _85, 8);
./benchmarks/tmux/leak_10/tmux_leak_10.c:281:10: warning: Use after free error!: free location 
     argv = xrealloc(argv, argc + 1, sizeof *argv);
          ^
# .MEM_205 = VDEF <.MEM_162>
memmove (argv_94, _108, _107);
./benchmarks/tmux/leak_10/tmux_leak_10.c:297:5: warning: use location
     memmove(argv, argv + 1, argc * (sizeof *argv));
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_203 = VDEF <.MEM_202>
argv_87 = xrealloc (argv_86, _85, 8);
./benchmarks/tmux/leak_10/tmux_leak_10.c:281:10: warning: Use after free error!: free location 
     argv = xrealloc(argv, argc + 1, sizeof *argv);
          ^
# VUSE <.MEM_162>
_98 = *argv_94;
./benchmarks/tmux/leak_10/tmux_leak_10.c:293:28: warning: use location
     whitespace = argv[0] + strcspn(argv[0], " \t");
                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_203 = VDEF <.MEM_202>
argv_87 = xrealloc (argv_86, _85, 8);
./benchmarks/tmux/leak_10/tmux_leak_10.c:281:10: warning: Use after free error!: free location 
     argv = xrealloc(argv, argc + 1, sizeof *argv);
          ^
# VUSE <.MEM_162>
_99 = strcspn (_98, " \t");
./benchmarks/tmux/leak_10/tmux_leak_10.c:293:28: warning: use location
     whitespace = argv[0] + strcspn(argv[0], " \t");
                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_203 = VDEF <.MEM_202>
argv_87 = xrealloc (argv_86, _85, 8);
./benchmarks/tmux/leak_10/tmux_leak_10.c:281:10: warning: Use after free error!: free location 
     argv = xrealloc(argv, argc + 1, sizeof *argv);
          ^
whitespace_100 = _97 + _99;
./benchmarks/tmux/leak_10/tmux_leak_10.c:293:16: warning: use location
     whitespace = argv[0] + strcspn(argv[0], " \t");
                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_203 = VDEF <.MEM_202>
argv_87 = xrealloc (argv_86, _85, 8);
./benchmarks/tmux/leak_10/tmux_leak_10.c:281:10: warning: Use after free error!: free location 
     argv = xrealloc(argv, argc + 1, sizeof *argv);
          ^
_102 = equals_96 > whitespace_100;
./benchmarks/tmux/leak_10/tmux_leak_10.c:294:34: warning: use location
     if (equals == NULL || equals > whitespace)
                                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_203 = VDEF <.MEM_202>
argv_87 = xrealloc (argv_86, _85, 8);
./benchmarks/tmux/leak_10/tmux_leak_10.c:281:10: warning: Use after free error!: free location 
     argv = xrealloc(argv, argc + 1, sizeof *argv);
          ^
_103 = _101 | _102;
./benchmarks/tmux/leak_10/tmux_leak_10.c:294:24: warning: use location
     if (equals == NULL || equals > whitespace)
                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_203 = VDEF <.MEM_202>
argv_87 = xrealloc (argv_86, _85, 8);
./benchmarks/tmux/leak_10/tmux_leak_10.c:281:10: warning: Use after free error!: free location 
     argv = xrealloc(argv, argc + 1, sizeof *argv);
          ^
if (_103 != 0)
./benchmarks/tmux/leak_10/tmux_leak_10.c:294:8: warning: use location
     if (equals == NULL || equals > whitespace)
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_203 = VDEF <.MEM_202>
argv_87 = xrealloc (argv_86, _85, 8);
./benchmarks/tmux/leak_10/tmux_leak_10.c:281:10: warning: Use after free error!: free location 
     argv = xrealloc(argv, argc + 1, sizeof *argv);
          ^
# VUSE <.MEM_162>
_97 = *argv_94;
./benchmarks/tmux/leak_10/tmux_leak_10.c:293:22: warning: use location
     whitespace = argv[0] + strcspn(argv[0], " \t");
                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_203 = VDEF <.MEM_202>
argv_87 = xrealloc (argv_86, _85, 8);
./benchmarks/tmux/leak_10/tmux_leak_10.c:281:10: warning: Use after free error!: free location 
     argv = xrealloc(argv, argc + 1, sizeof *argv);
          ^
# VUSE <.MEM_162>
_95 = *argv_94;
./benchmarks/tmux/leak_10/tmux_leak_10.c:292:14: warning: use location
     equals = strchr(argv[0], '=');
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_203 = VDEF <.MEM_202>
argv_87 = xrealloc (argv_86, _85, 8);
./benchmarks/tmux/leak_10/tmux_leak_10.c:281:10: warning: Use after free error!: free location 
     argv = xrealloc(argv, argc + 1, sizeof *argv);
          ^
# VUSE <.MEM_162>
equals_96 = strchr (_95, 61);
./benchmarks/tmux/leak_10/tmux_leak_10.c:292:12: warning: use location
     equals = strchr(argv[0], '=');
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_203 = VDEF <.MEM_202>
argv_87 = xrealloc (argv_86, _85, 8);
./benchmarks/tmux/leak_10/tmux_leak_10.c:281:10: warning: Use after free error!: free location 
     argv = xrealloc(argv, argc + 1, sizeof *argv);
          ^
argv_118 = PHI <argv_86(19), argv_86(20), argv_86(21), argv_94(30), argv_94(31), argv_94(32), argv_86(46), argv_86(47)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: Use after free error!: free location 
   free(argv);
   ^
argv_118 = PHI <argv_86(19), argv_86(20), argv_86(21), argv_94(30), argv_94(31), argv_94(32), argv_86(46), argv_86(47)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
argv_118 = PHI <argv_86(19), argv_86(20), argv_86(21), argv_94(30), argv_94(31), argv_94(32), argv_86(46), argv_86(47)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: Use after free error!: free location 
  free(buf);
  ^
argv_118 = PHI <argv_86(19), argv_86(20), argv_86(21), argv_94(30), argv_94(31), argv_94(32), argv_86(46), argv_86(47)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
argv_118 = PHI <argv_86(19), argv_86(20), argv_86(21), argv_94(30), argv_94(31), argv_94(32), argv_86(46), argv_86(47)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: Use after free error!: free location 
   free(argv);
   ^
argv_118 = PHI <argv_86(19), argv_86(20), argv_86(21), argv_94(30), argv_94(31), argv_94(32), argv_86(46), argv_86(47)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_203 = VDEF <.MEM_202>
argv_87 = xrealloc (argv_86, _85, 8);
./benchmarks/tmux/leak_10/tmux_leak_10.c:281:10: warning: Use after free error!: free location 
     argv = xrealloc(argv, argc + 1, sizeof *argv);
          ^
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: use location
   free(argv);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_203 = VDEF <.MEM_202>
argv_87 = xrealloc (argv_86, _85, 8);
./benchmarks/tmux/leak_10/tmux_leak_10.c:281:10: warning: Use after free error!: free location 
     argv = xrealloc(argv, argc + 1, sizeof *argv);
          ^
if (argv_118 != 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:329:5: warning: use location
  if (argv != NULL) {
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
if (argv_118 != 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:329:5: warning: use location
  if (argv != NULL) {
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: Use after free error!: free location 
  free(buf);
  ^
if (argv_118 != 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:329:5: warning: use location
  if (argv != NULL) {
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_203 = VDEF <.MEM_202>
argv_87 = xrealloc (argv_86, _85, 8);
./benchmarks/tmux/leak_10/tmux_leak_10.c:281:10: warning: Use after free error!: free location 
     argv = xrealloc(argv, argc + 1, sizeof *argv);
          ^
argv_130 = PHI <argv_86(19), argv_86(20), argv_86(21), argv_94(26), argv_86(46), argv_86(48)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: Use after free error!: free location 
   free(argv);
   ^
argv_130 = PHI <argv_86(19), argv_86(20), argv_86(21), argv_94(26), argv_86(46), argv_86(48)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
argv_130 = PHI <argv_86(19), argv_86(20), argv_86(21), argv_94(26), argv_86(46), argv_86(48)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: Use after free error!: free location 
  free(buf);
  ^
argv_130 = PHI <argv_86(19), argv_86(20), argv_86(21), argv_94(26), argv_86(46), argv_86(48)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
argv_130 = PHI <argv_86(19), argv_86(20), argv_86(21), argv_94(26), argv_86(46), argv_86(48)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: Use after free error!: free location 
   free(argv);
   ^
argv_130 = PHI <argv_86(19), argv_86(20), argv_86(21), argv_94(26), argv_86(46), argv_86(48)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_203 = VDEF <.MEM_202>
argv_87 = xrealloc (argv_86, _85, 8);
./benchmarks/tmux/leak_10/tmux_leak_10.c:281:10: warning: Use after free error!: free location 
     argv = xrealloc(argv, argc + 1, sizeof *argv);
          ^
argv_86 = PHI <0B(16), argv_130(17)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: Use after free error!: free location 
   free(argv);
   ^
argv_86 = PHI <0B(16), argv_130(17)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
argv_86 = PHI <0B(16), argv_130(17)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: Use after free error!: free location 
  free(buf);
  ^
argv_86 = PHI <0B(16), argv_130(17)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
argv_86 = PHI <0B(16), argv_130(17)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: Use after free error!: free location 
   free(argv);
   ^
argv_86 = PHI <0B(16), argv_130(17)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_203 = VDEF <.MEM_202>
argv_87 = xrealloc (argv_86, _85, 8);
./benchmarks/tmux/leak_10/tmux_leak_10.c:281:10: warning: Use after free error!: free location 
     argv = xrealloc(argv, argc + 1, sizeof *argv);
          ^
_108 = argv_94 + 8;
./benchmarks/tmux/leak_10/tmux_leak_10.c:297:24: warning: use location
     memmove(argv, argv + 1, argc * (sizeof *argv));
                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_203 = VDEF <.MEM_202>
argv_87 = xrealloc (argv_86, _85, 8);
./benchmarks/tmux/leak_10/tmux_leak_10.c:281:10: warning: Use after free error!: free location 
     argv = xrealloc(argv, argc + 1, sizeof *argv);
          ^
_92 = argv_87 + _91;
./benchmarks/tmux/leak_10/tmux_leak_10.c:282:9: warning: use location
     argv[argc++] = buf;
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_203 = VDEF <.MEM_202>
argv_87 = xrealloc (argv_86, _85, 8);
./benchmarks/tmux/leak_10/tmux_leak_10.c:281:10: warning: Use after free error!: free location 
     argv = xrealloc(argv, argc + 1, sizeof *argv);
          ^
# .MEM_204 = VDEF <.MEM_203>
*_92 = buf_81;
./benchmarks/tmux/leak_10/tmux_leak_10.c:282:18: warning: use location
     argv[argc++] = buf;
                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_203 = VDEF <.MEM_202>
argv_87 = xrealloc (argv_86, _85, 8);
./benchmarks/tmux/leak_10/tmux_leak_10.c:281:10: warning: Use after free error!: free location 
     argv = xrealloc(argv, argc + 1, sizeof *argv);
          ^
# .MEM_204 = VDEF <.MEM_203>
*_92 = buf_81;
./benchmarks/tmux/leak_10/tmux_leak_10.c:282:18: warning: use location
     argv[argc++] = buf;
                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:4 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd7a4202900
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
   
    def_stmt _95 = *argv_94;
    version 95
    ptr-info 0x7fd7a42165b8>
# VUSE <.MEM_162>
_95 = *argv_94;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
equals_96 = strchr (_95, 61);
./benchmarks/tmux/leak_10/tmux_leak_10.c:292:12: warning: use location
     equals = strchr(argv[0], '=');
            ^
this stmt is child function---strchr-----

 ================== trace ================== 
 <ssa_name 0x7fd7a4202900
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
   
    def_stmt _95 = *argv_94;
    version 95
    ptr-info 0x7fd7a42165b8>
trace fucntion name:strchr 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_102 = equals_96 > whitespace_100;
./benchmarks/tmux/leak_10/tmux_leak_10.c:294:34: warning: use location
     if (equals == NULL || equals > whitespace)
                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_103 = _101 | _102;
./benchmarks/tmux/leak_10/tmux_leak_10.c:294:24: warning: use location
     if (equals == NULL || equals > whitespace)
                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_103 != 0)
./benchmarks/tmux/leak_10/tmux_leak_10.c:294:8: warning: use location
     if (equals == NULL || equals > whitespace)
        ^
if (_103 != 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:294:8: warning: use location
Cond in fucntion main basic block 27
 ================== possible direct basic block ================= 
from main basic block 30
 ================== possible direct basic block ================= 
from main basic block 28
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_101 = equals_96 == 0B;
./benchmarks/tmux/leak_10/tmux_leak_10.c:294:16: warning: use location
     if (equals == NULL || equals > whitespace)
                ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7a4202900
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
   
    def_stmt _95 = *argv_94;
    version 95
    ptr-info 0x7fd7a42165b8>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: use location
   free(username);
   ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: use location
  free(buf);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: use location
    free(argv[i]);
    ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: use location
   free(argv);
   ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: use location
    free(copy);
    ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: use location
   free(copy);
   ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:6 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd7a42029d8
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
   
    def_stmt _98 = *argv_94;
    version 98
    ptr-info 0x7fd7a4216600>
# VUSE <.MEM_162>
_98 = *argv_94;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_99 = strcspn (_98, " \t");
./benchmarks/tmux/leak_10/tmux_leak_10.c:293:28: warning: use location
     whitespace = argv[0] + strcspn(argv[0], " \t");
                            ^
this stmt is child function---strcspn-----

 ================== trace ================== 
 <ssa_name 0x7fd7a42029d8
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
   
    def_stmt _98 = *argv_94;
    version 98
    ptr-info 0x7fd7a4216600>
trace fucntion name:strcspn 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
whitespace_100 = _97 + _99;
./benchmarks/tmux/leak_10/tmux_leak_10.c:293:16: warning: use location
     whitespace = argv[0] + strcspn(argv[0], " \t");
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_102 = equals_96 > whitespace_100;
./benchmarks/tmux/leak_10/tmux_leak_10.c:294:34: warning: use location
     if (equals == NULL || equals > whitespace)
                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_103 = _101 | _102;
./benchmarks/tmux/leak_10/tmux_leak_10.c:294:24: warning: use location
     if (equals == NULL || equals > whitespace)
                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_103 != 0)
./benchmarks/tmux/leak_10/tmux_leak_10.c:294:8: warning: use location
     if (equals == NULL || equals > whitespace)
        ^
if (_103 != 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:294:8: warning: use location
Cond in fucntion main basic block 27
 ================== possible direct basic block ================= 
from main basic block 30
 ================== possible direct basic block ================= 
from main basic block 28
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7a42029d8
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
   
    def_stmt _98 = *argv_94;
    version 98
    ptr-info 0x7fd7a4216600>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: use location
   free(username);
   ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: use location
  free(buf);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: use location
    free(argv[i]);
    ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: use location
   free(argv);
   ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: use location
    free(copy);
    ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: use location
   free(copy);
   ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:6 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd7a42028b8
    type <pointer_type 0x7fd7a418eb28
        type <pointer_type 0x7fd7a418ea80 type <integer_type 0x7fd7a418e9d8 char>
            public unsigned DI
            size <integer_cst 0x7fd7a4664be8 constant 64>
            unit size <integer_cst 0x7fd7a4664c00 constant 8>
            align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418eb28>>
        public unsigned DI size <integer_cst 0x7fd7a4664be8 64> unit size <integer_cst 0x7fd7a4664c00 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fd7a41f7ea0 argv>
    def_stmt argv_94 = PHI <argv_86(24), argv_87(25)>
    version 94
    ptr-info 0x7fd7a42165a0>
argv_94 = PHI <argv_86(24), argv_87(25)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_205 = VDEF <.MEM_162>
memmove (argv_94, _108, _107);
memmove (argv_94, _108, _107);
./benchmarks/tmux/leak_10/tmux_leak_10.c:297:5: warning: use location
     memmove(argv, argv + 1, argc * (sizeof *argv));
     ^
this stmt is child function---memmove-----

 ================== trace ================== 
 <ssa_name 0x7fd7a42028b8
    type <pointer_type 0x7fd7a418eb28
        type <pointer_type 0x7fd7a418ea80 type <integer_type 0x7fd7a418e9d8 char>
            public unsigned DI
            size <integer_cst 0x7fd7a4664be8 constant 64>
            unit size <integer_cst 0x7fd7a4664c00 constant 8>
            align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418eb28>>
        public unsigned DI size <integer_cst 0x7fd7a4664be8 64> unit size <integer_cst 0x7fd7a4664c00 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fd7a41f7ea0 argv>
    def_stmt argv_94 = PHI <argv_86(24), argv_87(25)>
    version 94
    ptr-info 0x7fd7a42165a0>
trace fucntion name:memmove 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_98 = *argv_94;
./benchmarks/tmux/leak_10/tmux_leak_10.c:293:28: warning: use location
     whitespace = argv[0] + strcspn(argv[0], " \t");
                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_99 = strcspn (_98, " \t");
./benchmarks/tmux/leak_10/tmux_leak_10.c:293:28: warning: use location
this stmt is child function---strcspn-----

 ================== trace ================== 
 <ssa_name 0x7fd7a42028b8
    type <pointer_type 0x7fd7a418eb28
        type <pointer_type 0x7fd7a418ea80 type <integer_type 0x7fd7a418e9d8 char>
            public unsigned DI
            size <integer_cst 0x7fd7a4664be8 constant 64>
            unit size <integer_cst 0x7fd7a4664c00 constant 8>
            align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418eb28>>
        public unsigned DI size <integer_cst 0x7fd7a4664be8 64> unit size <integer_cst 0x7fd7a4664c00 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fd7a41f7ea0 argv>
    def_stmt argv_94 = PHI <argv_86(24), argv_87(25)>
    version 94
    ptr-info 0x7fd7a42165a0>
trace fucntion name:strcspn 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
whitespace_100 = _97 + _99;
./benchmarks/tmux/leak_10/tmux_leak_10.c:293:16: warning: use location
     whitespace = argv[0] + strcspn(argv[0], " \t");
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_102 = equals_96 > whitespace_100;
./benchmarks/tmux/leak_10/tmux_leak_10.c:294:34: warning: use location
     if (equals == NULL || equals > whitespace)
                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_103 = _101 | _102;
./benchmarks/tmux/leak_10/tmux_leak_10.c:294:24: warning: use location
     if (equals == NULL || equals > whitespace)
                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_103 != 0)
./benchmarks/tmux/leak_10/tmux_leak_10.c:294:8: warning: use location
     if (equals == NULL || equals > whitespace)
        ^
if (_103 != 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:294:8: warning: use location
Cond in fucntion main basic block 27
 ================== possible direct basic block ================= 
from main basic block 30
 ================== possible direct basic block ================= 
from main basic block 28
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_97 = *argv_94;
./benchmarks/tmux/leak_10/tmux_leak_10.c:293:22: warning: use location
     whitespace = argv[0] + strcspn(argv[0], " \t");
                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_95 = *argv_94;
./benchmarks/tmux/leak_10/tmux_leak_10.c:292:14: warning: use location
     equals = strchr(argv[0], '=');
              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
equals_96 = strchr (_95, 61);
./benchmarks/tmux/leak_10/tmux_leak_10.c:292:12: warning: use location
     equals = strchr(argv[0], '=');
            ^
this stmt is child function---strchr-----

 ================== trace ================== 
 <ssa_name 0x7fd7a42028b8
    type <pointer_type 0x7fd7a418eb28
        type <pointer_type 0x7fd7a418ea80 type <integer_type 0x7fd7a418e9d8 char>
            public unsigned DI
            size <integer_cst 0x7fd7a4664be8 constant 64>
            unit size <integer_cst 0x7fd7a4664c00 constant 8>
            align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418eb28>>
        public unsigned DI size <integer_cst 0x7fd7a4664be8 64> unit size <integer_cst 0x7fd7a4664c00 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fd7a41f7ea0 argv>
    def_stmt argv_94 = PHI <argv_86(24), argv_87(25)>
    version 94
    ptr-info 0x7fd7a42165a0>
trace fucntion name:strchr 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
argv_118 = PHI <argv_86(19), argv_86(20), argv_86(21), argv_94(30), argv_94(31), argv_94(32), argv_86(46), argv_86(47)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: use location
   free(argv);
   ^
this stmt is child function---free-----

 ================== find ================== 
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (argv_118 != 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:329:5: warning: use location
  if (argv != NULL) {
     ^
if (argv_118 != 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:329:5: warning: use location
Cond in fucntion main basic block 49
 ================== possible direct basic block ================= 
from main basic block 51
 ================== possible direct basic block ================= 
from main basic block 53
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
argv_130 = PHI <argv_86(19), argv_86(20), argv_86(21), argv_94(26), argv_86(46), argv_86(48)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
argv_86 = PHI <0B(16), argv_130(17)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
argv_87 = xrealloc (argv_86, _85, 8);
./benchmarks/tmux/leak_10/tmux_leak_10.c:281:10: warning: use location
     argv = xrealloc(argv, argc + 1, sizeof *argv);
          ^
this stmt is child function---xrealloc-----

 ================== trace ================== 
 <ssa_name 0x7fd7a42028b8
    type <pointer_type 0x7fd7a418eb28
        type <pointer_type 0x7fd7a418ea80 type <integer_type 0x7fd7a418e9d8 char>
            public unsigned DI
            size <integer_cst 0x7fd7a4664be8 constant 64>
            unit size <integer_cst 0x7fd7a4664c00 constant 8>
            align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418eb28>>
        public unsigned DI size <integer_cst 0x7fd7a4664be8 64> unit size <integer_cst 0x7fd7a4664c00 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fd7a41f7ea0 argv>
    def_stmt argv_94 = PHI <argv_86(24), argv_87(25)>
    version 94
    ptr-info 0x7fd7a42165a0>
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :0========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;31m  find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with argv ========= [0m
[40;36m ======= relate stmt argument:argv ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
argv_94 = PHI <argv_86(24), argv_87(25)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = argv_87 + _91;
./benchmarks/tmux/leak_10/tmux_leak_10.c:282:9: warning: use location
     argv[argc++] = buf;
         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_92 = buf_81;
./benchmarks/tmux/leak_10/tmux_leak_10.c:282:18: warning: use location
     argv[argc++] = buf;
                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_92 = buf_81;
./benchmarks/tmux/leak_10/tmux_leak_10.c:282:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_82 = buf_81 + len_79;
./benchmarks/tmux/leak_10/tmux_leak_10.c:279:8: warning: use location
     buf[len] = '\0';
        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_82 = 0;
./benchmarks/tmux/leak_10/tmux_leak_10.c:279:14: warning: use location
     buf[len] = '\0';
              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_108 = argv_94 + 8;
./benchmarks/tmux/leak_10/tmux_leak_10.c:297:24: warning: use location
     memmove(argv, argv + 1, argc * (sizeof *argv));
                        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7a42028b8
    type <pointer_type 0x7fd7a418eb28
        type <pointer_type 0x7fd7a418ea80 type <integer_type 0x7fd7a418e9d8 char>
            public unsigned DI
            size <integer_cst 0x7fd7a4664be8 constant 64>
            unit size <integer_cst 0x7fd7a4664c00 constant 8>
            align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418eb28>>
        public unsigned DI size <integer_cst 0x7fd7a4664be8 64> unit size <integer_cst 0x7fd7a4664c00 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fd7a41f7ea0 argv>
    def_stmt argv_94 = PHI <argv_86(24), argv_87(25)>
    version 94
    ptr-info 0x7fd7a42165a0>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: use location
   free(username);
   ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: use location
  free(buf);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: use location
    free(argv[i]);
    ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: use location
   free(argv);
   ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_203 = VDEF <.MEM_202>
argv_87 = xrealloc (argv_86, _85, 8);
./benchmarks/tmux/leak_10/tmux_leak_10.c:281:10: warning: Use after free error!: free location 
     argv = xrealloc(argv, argc + 1, sizeof *argv);
          ^
# .MEM_205 = VDEF <.MEM_162>
memmove (argv_94, _108, _107);
./benchmarks/tmux/leak_10/tmux_leak_10.c:297:5: warning: use location
     memmove(argv, argv + 1, argc * (sizeof *argv));
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_203 = VDEF <.MEM_202>
argv_87 = xrealloc (argv_86, _85, 8);
./benchmarks/tmux/leak_10/tmux_leak_10.c:281:10: warning: Use after free error!: free location 
     argv = xrealloc(argv, argc + 1, sizeof *argv);
          ^
# VUSE <.MEM_162>
_98 = *argv_94;
./benchmarks/tmux/leak_10/tmux_leak_10.c:293:28: warning: use location
     whitespace = argv[0] + strcspn(argv[0], " \t");
                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_203 = VDEF <.MEM_202>
argv_87 = xrealloc (argv_86, _85, 8);
./benchmarks/tmux/leak_10/tmux_leak_10.c:281:10: warning: Use after free error!: free location 
     argv = xrealloc(argv, argc + 1, sizeof *argv);
          ^
# VUSE <.MEM_162>
_99 = strcspn (_98, " \t");
./benchmarks/tmux/leak_10/tmux_leak_10.c:293:28: warning: use location
     whitespace = argv[0] + strcspn(argv[0], " \t");
                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_203 = VDEF <.MEM_202>
argv_87 = xrealloc (argv_86, _85, 8);
./benchmarks/tmux/leak_10/tmux_leak_10.c:281:10: warning: Use after free error!: free location 
     argv = xrealloc(argv, argc + 1, sizeof *argv);
          ^
whitespace_100 = _97 + _99;
./benchmarks/tmux/leak_10/tmux_leak_10.c:293:16: warning: use location
     whitespace = argv[0] + strcspn(argv[0], " \t");
                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_203 = VDEF <.MEM_202>
argv_87 = xrealloc (argv_86, _85, 8);
./benchmarks/tmux/leak_10/tmux_leak_10.c:281:10: warning: Use after free error!: free location 
     argv = xrealloc(argv, argc + 1, sizeof *argv);
          ^
_102 = equals_96 > whitespace_100;
./benchmarks/tmux/leak_10/tmux_leak_10.c:294:34: warning: use location
     if (equals == NULL || equals > whitespace)
                                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_203 = VDEF <.MEM_202>
argv_87 = xrealloc (argv_86, _85, 8);
./benchmarks/tmux/leak_10/tmux_leak_10.c:281:10: warning: Use after free error!: free location 
     argv = xrealloc(argv, argc + 1, sizeof *argv);
          ^
_103 = _101 | _102;
./benchmarks/tmux/leak_10/tmux_leak_10.c:294:24: warning: use location
     if (equals == NULL || equals > whitespace)
                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_203 = VDEF <.MEM_202>
argv_87 = xrealloc (argv_86, _85, 8);
./benchmarks/tmux/leak_10/tmux_leak_10.c:281:10: warning: Use after free error!: free location 
     argv = xrealloc(argv, argc + 1, sizeof *argv);
          ^
if (_103 != 0)
./benchmarks/tmux/leak_10/tmux_leak_10.c:294:8: warning: use location
     if (equals == NULL || equals > whitespace)
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_203 = VDEF <.MEM_202>
argv_87 = xrealloc (argv_86, _85, 8);
./benchmarks/tmux/leak_10/tmux_leak_10.c:281:10: warning: Use after free error!: free location 
     argv = xrealloc(argv, argc + 1, sizeof *argv);
          ^
# VUSE <.MEM_162>
_97 = *argv_94;
./benchmarks/tmux/leak_10/tmux_leak_10.c:293:22: warning: use location
     whitespace = argv[0] + strcspn(argv[0], " \t");
                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_203 = VDEF <.MEM_202>
argv_87 = xrealloc (argv_86, _85, 8);
./benchmarks/tmux/leak_10/tmux_leak_10.c:281:10: warning: Use after free error!: free location 
     argv = xrealloc(argv, argc + 1, sizeof *argv);
          ^
# VUSE <.MEM_162>
_95 = *argv_94;
./benchmarks/tmux/leak_10/tmux_leak_10.c:292:14: warning: use location
     equals = strchr(argv[0], '=');
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_203 = VDEF <.MEM_202>
argv_87 = xrealloc (argv_86, _85, 8);
./benchmarks/tmux/leak_10/tmux_leak_10.c:281:10: warning: Use after free error!: free location 
     argv = xrealloc(argv, argc + 1, sizeof *argv);
          ^
# VUSE <.MEM_162>
equals_96 = strchr (_95, 61);
./benchmarks/tmux/leak_10/tmux_leak_10.c:292:12: warning: use location
     equals = strchr(argv[0], '=');
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: Use after free error!: free location 
   free(argv);
   ^
argv_118 = PHI <argv_86(19), argv_86(20), argv_86(21), argv_94(30), argv_94(31), argv_94(32), argv_86(46), argv_86(47)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_203 = VDEF <.MEM_202>
argv_87 = xrealloc (argv_86, _85, 8);
./benchmarks/tmux/leak_10/tmux_leak_10.c:281:10: warning: Use after free error!: free location 
     argv = xrealloc(argv, argc + 1, sizeof *argv);
          ^
argv_118 = PHI <argv_86(19), argv_86(20), argv_86(21), argv_94(30), argv_94(31), argv_94(32), argv_86(46), argv_86(47)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
argv_118 = PHI <argv_86(19), argv_86(20), argv_86(21), argv_94(30), argv_94(31), argv_94(32), argv_86(46), argv_86(47)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: Use after free error!: free location 
  free(buf);
  ^
argv_118 = PHI <argv_86(19), argv_86(20), argv_86(21), argv_94(30), argv_94(31), argv_94(32), argv_86(46), argv_86(47)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
argv_118 = PHI <argv_86(19), argv_86(20), argv_86(21), argv_94(30), argv_94(31), argv_94(32), argv_86(46), argv_86(47)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: Use after free error!: free location 
   free(argv);
   ^
argv_118 = PHI <argv_86(19), argv_86(20), argv_86(21), argv_94(30), argv_94(31), argv_94(32), argv_86(46), argv_86(47)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_203 = VDEF <.MEM_202>
argv_87 = xrealloc (argv_86, _85, 8);
./benchmarks/tmux/leak_10/tmux_leak_10.c:281:10: warning: Use after free error!: free location 
     argv = xrealloc(argv, argc + 1, sizeof *argv);
          ^
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: use location
   free(argv);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_203 = VDEF <.MEM_202>
argv_87 = xrealloc (argv_86, _85, 8);
./benchmarks/tmux/leak_10/tmux_leak_10.c:281:10: warning: Use after free error!: free location 
     argv = xrealloc(argv, argc + 1, sizeof *argv);
          ^
if (argv_118 != 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:329:5: warning: use location
  if (argv != NULL) {
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
if (argv_118 != 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:329:5: warning: use location
  if (argv != NULL) {
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: Use after free error!: free location 
  free(buf);
  ^
if (argv_118 != 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:329:5: warning: use location
  if (argv != NULL) {
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: Use after free error!: free location 
   free(argv);
   ^
argv_130 = PHI <argv_86(19), argv_86(20), argv_86(21), argv_94(26), argv_86(46), argv_86(48)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_203 = VDEF <.MEM_202>
argv_87 = xrealloc (argv_86, _85, 8);
./benchmarks/tmux/leak_10/tmux_leak_10.c:281:10: warning: Use after free error!: free location 
     argv = xrealloc(argv, argc + 1, sizeof *argv);
          ^
argv_130 = PHI <argv_86(19), argv_86(20), argv_86(21), argv_94(26), argv_86(46), argv_86(48)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
argv_130 = PHI <argv_86(19), argv_86(20), argv_86(21), argv_94(26), argv_86(46), argv_86(48)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: Use after free error!: free location 
  free(buf);
  ^
argv_130 = PHI <argv_86(19), argv_86(20), argv_86(21), argv_94(26), argv_86(46), argv_86(48)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
argv_130 = PHI <argv_86(19), argv_86(20), argv_86(21), argv_94(26), argv_86(46), argv_86(48)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: Use after free error!: free location 
   free(argv);
   ^
argv_130 = PHI <argv_86(19), argv_86(20), argv_86(21), argv_94(26), argv_86(46), argv_86(48)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: Use after free error!: free location 
argv_86 = PHI <0B(16), argv_130(17)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_203 = VDEF <.MEM_202>
argv_87 = xrealloc (argv_86, _85, 8);
./benchmarks/tmux/leak_10/tmux_leak_10.c:281:10: warning: Use after free error!: free location 
     argv = xrealloc(argv, argc + 1, sizeof *argv);
          ^
argv_86 = PHI <0B(16), argv_130(17)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
argv_86 = PHI <0B(16), argv_130(17)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: Use after free error!: free location 
  free(buf);
  ^
argv_86 = PHI <0B(16), argv_130(17)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
argv_86 = PHI <0B(16), argv_130(17)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: Use after free error!: free location 
   free(argv);
   ^
argv_86 = PHI <0B(16), argv_130(17)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: Use after free error!: free location 
argv_94 = PHI <argv_86(24), argv_87(25)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_203 = VDEF <.MEM_202>
argv_87 = xrealloc (argv_86, _85, 8);
./benchmarks/tmux/leak_10/tmux_leak_10.c:281:10: warning: Use after free error!: free location 
     argv = xrealloc(argv, argc + 1, sizeof *argv);
          ^
argv_94 = PHI <argv_86(24), argv_87(25)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
argv_94 = PHI <argv_86(24), argv_87(25)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: Use after free error!: free location 
  free(buf);
  ^
argv_94 = PHI <argv_86(24), argv_87(25)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
argv_94 = PHI <argv_86(24), argv_87(25)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: Use after free error!: free location 
   free(argv);
   ^
argv_94 = PHI <argv_86(24), argv_87(25)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_203 = VDEF <.MEM_202>
argv_87 = xrealloc (argv_86, _85, 8);
./benchmarks/tmux/leak_10/tmux_leak_10.c:281:10: warning: Use after free error!: free location 
     argv = xrealloc(argv, argc + 1, sizeof *argv);
          ^
_92 = argv_87 + _91;
./benchmarks/tmux/leak_10/tmux_leak_10.c:282:9: warning: use location
     argv[argc++] = buf;
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_203 = VDEF <.MEM_202>
argv_87 = xrealloc (argv_86, _85, 8);
./benchmarks/tmux/leak_10/tmux_leak_10.c:281:10: warning: Use after free error!: free location 
     argv = xrealloc(argv, argc + 1, sizeof *argv);
          ^
# .MEM_204 = VDEF <.MEM_203>
*_92 = buf_81;
./benchmarks/tmux/leak_10/tmux_leak_10.c:282:18: warning: use location
     argv[argc++] = buf;
                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_203 = VDEF <.MEM_202>
argv_87 = xrealloc (argv_86, _85, 8);
./benchmarks/tmux/leak_10/tmux_leak_10.c:281:10: warning: Use after free error!: free location 
     argv = xrealloc(argv, argc + 1, sizeof *argv);
          ^
# .MEM_204 = VDEF <.MEM_203>
*_92 = buf_81;
./benchmarks/tmux/leak_10/tmux_leak_10.c:282:18: warning: use location
     argv[argc++] = buf;
                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_203 = VDEF <.MEM_202>
argv_87 = xrealloc (argv_86, _85, 8);
./benchmarks/tmux/leak_10/tmux_leak_10.c:281:10: warning: Use after free error!: free location 
     argv = xrealloc(argv, argc + 1, sizeof *argv);
          ^
_108 = argv_94 + 8;
./benchmarks/tmux/leak_10/tmux_leak_10.c:297:24: warning: use location
     memmove(argv, argv + 1, argc * (sizeof *argv));
                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:4 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd7a4210048
    type <integer_type 0x7fd7a46785e8 int public SI
        size <integer_cst 0x7fd7a4664e28 constant 32>
        unit size <integer_cst 0x7fd7a4664e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fd7a46785e8 precision 32 min <integer_cst 0x7fd7a4664de0 -2147483648> max <integer_cst 0x7fd7a4664df8 2147483647>
        pointer_to_this <pointer_type 0x7fd7a467fa80>>
   
    def_stmt _140 = getuid ();
    version 140>
# .MEM_193 = VDEF <.MEM_188>
_140 = getuid ();

 ================== trace ptable================== 
trace fucntion name:getuid 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---getuid-----
this other function ------getuid-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_141 = getpwuid (_140);
./benchmarks/tmux/leak_10/tmux_leak_10.c:214:18: warning: use location
   else if ((pw = getpwuid(getuid())) != NULL)
                  ^
this stmt is child function---getpwuid-----

 ================== trace ================== 
 <ssa_name 0x7fd7a4210048
    type <integer_type 0x7fd7a46785e8 int public SI
        size <integer_cst 0x7fd7a4664e28 constant 32>
        unit size <integer_cst 0x7fd7a4664e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fd7a46785e8 precision 32 min <integer_cst 0x7fd7a4664de0 -2147483648> max <integer_cst 0x7fd7a4664df8 2147483647>
        pointer_to_this <pointer_type 0x7fd7a467fa80>>
   
    def_stmt _140 = getuid ();
    version 140>
trace fucntion name:getpwuid 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_141 != 0)
./benchmarks/tmux/leak_10/tmux_leak_10.c:214:11: warning: use location
   else if ((pw = getpwuid(getuid())) != NULL)
           ^
if (_141 != 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:214:11: warning: use location
Cond in fucntion main basic block 38
 ================== possible direct basic block ================= 
from main basic block 39
 ================== possible direct basic block ================= 
from main basic block 46
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_142 = (long int) _141;
./benchmarks/tmux/leak_10/tmux_leak_10.c:214:18: warning: use location
   else if ((pw = getpwuid(getuid())) != NULL)
                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pw_143 = (struct passwd *) _142;
./benchmarks/tmux/leak_10/tmux_leak_10.c:214:16: warning: use location
   else if ((pw = getpwuid(getuid())) != NULL)
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
home_144 = pw_143->pw_dir;
./benchmarks/tmux/leak_10/tmux_leak_10.c:215:9: warning: use location
    home = pw->pw_dir;
         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
home_150 = PHI <home_139(37), home_144(39), home_153(43)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_151 = strdup (home_150);
./benchmarks/tmux/leak_10/tmux_leak_10.c:227:10: warning: use location
  return (strdup(home));
          ^
this stmt is child function---strdup-----

 ================== trace ================== 
 <ssa_name 0x7fd7a4210048
    type <integer_type 0x7fd7a46785e8 int public SI
        size <integer_cst 0x7fd7a4664e28 constant 32>
        unit size <integer_cst 0x7fd7a4664e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fd7a46785e8 precision 32 min <integer_cst 0x7fd7a4664de0 -2147483648> max <integer_cst 0x7fd7a4664df8 2147483647>
        pointer_to_this <pointer_type 0x7fd7a467fa80>>
   
    def_stmt _140 = getuid ();
    version 140>
trace fucntion name:strdup 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_152 = PHI <0B(38), 0B(40), 0B(44), _151(45)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_196 = _152;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
t_110 = _196;
./benchmarks/tmux/leak_10/tmux_leak_10.c:309:7: warning: use location
     t = cmd_string_expand_tilde(s, &p);
       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (t_110 == 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:310:8: warning: use location
     if (t == NULL)
        ^
if (t_110 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:310:8: warning: use location
Cond in fucntion main basic block 46
 ================== possible direct basic block ================= 
from main basic block 49
 ================== possible direct basic block ================= 
from main basic block 17
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_140 = getuid ();
./benchmarks/tmux/leak_10/tmux_leak_10.c:214:18: warning: use location
   else if ((pw = getpwuid(getuid())) != NULL)
                  ^
this stmt is child function---getuid-----

 ================== trace ================== 
 <ssa_name 0x7fd7a4210048
    type <integer_type 0x7fd7a46785e8 int public SI
        size <integer_cst 0x7fd7a4664e28 constant 32>
        unit size <integer_cst 0x7fd7a4664e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fd7a46785e8 precision 32 min <integer_cst 0x7fd7a4664de0 -2147483648> max <integer_cst 0x7fd7a4664df8 2147483647>
        pointer_to_this <pointer_type 0x7fd7a467fa80>>
   
    def_stmt _140 = getuid ();
    version 140>
trace fucntion name:getuid 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7a4210048
    type <integer_type 0x7fd7a46785e8 int public SI
        size <integer_cst 0x7fd7a4664e28 constant 32>
        unit size <integer_cst 0x7fd7a4664e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fd7a46785e8 precision 32 min <integer_cst 0x7fd7a4664de0 -2147483648> max <integer_cst 0x7fd7a4664df8 2147483647>
        pointer_to_this <pointer_type 0x7fd7a467fa80>>
   
    def_stmt _140 = getuid ();
    version 140>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: use location
   free(username);
   ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: use location
  free(buf);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: use location
    free(argv[i]);
    ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: use location
   free(argv);
   ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: use location
    free(copy);
    ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_218 = VDEF <.MEM_217>
free (_49);
./benchmarks/tmux/leak_10/tmux_leak_10.c:407:4: warning: use location
    free(cause);
    ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: use location
   free(copy);
   ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
home_150 = PHI <home_139(37), home_144(39), home_153(43)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: Use after free error!: free location 
  free(buf);
  ^
home_150 = PHI <home_139(37), home_144(39), home_153(43)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
home_150 = PHI <home_139(37), home_144(39), home_153(43)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: Use after free error!: free location 
   free(argv);
   ^
home_150 = PHI <home_139(37), home_144(39), home_153(43)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
home_150 = PHI <home_139(37), home_144(39), home_153(43)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_218 = VDEF <.MEM_217>
free (_49);
./benchmarks/tmux/leak_10/tmux_leak_10.c:407:4: warning: Use after free error!: free location 
    free(cause);
    ^
home_150 = PHI <home_139(37), home_144(39), home_153(43)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
home_150 = PHI <home_139(37), home_144(39), home_153(43)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
# .MEM_195 = VDEF <.MEM_163>
_151 = strdup (home_150);
./benchmarks/tmux/leak_10/tmux_leak_10.c:227:10: warning: use location
  return (strdup(home));
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
_152 = PHI <0B(38), 0B(40), 0B(44), _151(45)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: Use after free error!: free location 
  free(buf);
  ^
_152 = PHI <0B(38), 0B(40), 0B(44), _151(45)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
_152 = PHI <0B(38), 0B(40), 0B(44), _151(45)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: Use after free error!: free location 
   free(argv);
   ^
_152 = PHI <0B(38), 0B(40), 0B(44), _151(45)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
_152 = PHI <0B(38), 0B(40), 0B(44), _151(45)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_218 = VDEF <.MEM_217>
free (_49);
./benchmarks/tmux/leak_10/tmux_leak_10.c:407:4: warning: Use after free error!: free location 
    free(cause);
    ^
_152 = PHI <0B(38), 0B(40), 0B(44), _151(45)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
_152 = PHI <0B(38), 0B(40), 0B(44), _151(45)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
_196 = _152;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
t_110 = _196;
./benchmarks/tmux/leak_10/tmux_leak_10.c:309:7: warning: use location
     t = cmd_string_expand_tilde(s, &p);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
if (t_110 == 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:310:8: warning: use location
     if (t == NULL)
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:7 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd7a4210048
    type <integer_type 0x7fd7a46785e8 int public SI
        size <integer_cst 0x7fd7a4664e28 constant 32>
        unit size <integer_cst 0x7fd7a4664e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fd7a46785e8 precision 32 min <integer_cst 0x7fd7a4664de0 -2147483648> max <integer_cst 0x7fd7a4664df8 2147483647>
        pointer_to_this <pointer_type 0x7fd7a467fa80>>
   
    def_stmt _140 = getuid ();
    version 140>
# .MEM_193 = VDEF <.MEM_188>
_140 = getuid ();

 ================== trace ptable================== 
trace fucntion name:getuid 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---getuid-----
this other function ------getuid-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_141 = getpwuid (_140);
./benchmarks/tmux/leak_10/tmux_leak_10.c:214:18: warning: use location
   else if ((pw = getpwuid(getuid())) != NULL)
                  ^
this stmt is child function---getpwuid-----

 ================== trace ================== 
 <ssa_name 0x7fd7a4210048
    type <integer_type 0x7fd7a46785e8 int public SI
        size <integer_cst 0x7fd7a4664e28 constant 32>
        unit size <integer_cst 0x7fd7a4664e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fd7a46785e8 precision 32 min <integer_cst 0x7fd7a4664de0 -2147483648> max <integer_cst 0x7fd7a4664df8 2147483647>
        pointer_to_this <pointer_type 0x7fd7a467fa80>>
   
    def_stmt _140 = getuid ();
    version 140>
trace fucntion name:getpwuid 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_141 != 0)
./benchmarks/tmux/leak_10/tmux_leak_10.c:214:11: warning: use location
   else if ((pw = getpwuid(getuid())) != NULL)
           ^
if (_141 != 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:214:11: warning: use location
Cond in fucntion main basic block 38
 ================== possible direct basic block ================= 
from main basic block 39
 ================== possible direct basic block ================= 
from main basic block 46
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_142 = (long int) _141;
./benchmarks/tmux/leak_10/tmux_leak_10.c:214:18: warning: use location
   else if ((pw = getpwuid(getuid())) != NULL)
                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pw_143 = (struct passwd *) _142;
./benchmarks/tmux/leak_10/tmux_leak_10.c:214:16: warning: use location
   else if ((pw = getpwuid(getuid())) != NULL)
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
home_144 = pw_143->pw_dir;
./benchmarks/tmux/leak_10/tmux_leak_10.c:215:9: warning: use location
    home = pw->pw_dir;
         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
home_150 = PHI <home_139(37), home_144(39), home_153(43)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_151 = strdup (home_150);
./benchmarks/tmux/leak_10/tmux_leak_10.c:227:10: warning: use location
  return (strdup(home));
          ^
this stmt is child function---strdup-----

 ================== trace ================== 
 <ssa_name 0x7fd7a4210048
    type <integer_type 0x7fd7a46785e8 int public SI
        size <integer_cst 0x7fd7a4664e28 constant 32>
        unit size <integer_cst 0x7fd7a4664e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fd7a46785e8 precision 32 min <integer_cst 0x7fd7a4664de0 -2147483648> max <integer_cst 0x7fd7a4664df8 2147483647>
        pointer_to_this <pointer_type 0x7fd7a467fa80>>
   
    def_stmt _140 = getuid ();
    version 140>
trace fucntion name:strdup 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_152 = PHI <0B(38), 0B(40), 0B(44), _151(45)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_196 = _152;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
t_110 = _196;
./benchmarks/tmux/leak_10/tmux_leak_10.c:309:7: warning: use location
     t = cmd_string_expand_tilde(s, &p);
       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (t_110 == 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:310:8: warning: use location
     if (t == NULL)
        ^
if (t_110 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:310:8: warning: use location
Cond in fucntion main basic block 46
 ================== possible direct basic block ================= 
from main basic block 49
 ================== possible direct basic block ================= 
from main basic block 17
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_140 = getuid ();
./benchmarks/tmux/leak_10/tmux_leak_10.c:214:18: warning: use location
   else if ((pw = getpwuid(getuid())) != NULL)
                  ^
this stmt is child function---getuid-----

 ================== trace ================== 
 <ssa_name 0x7fd7a4210048
    type <integer_type 0x7fd7a46785e8 int public SI
        size <integer_cst 0x7fd7a4664e28 constant 32>
        unit size <integer_cst 0x7fd7a4664e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fd7a46785e8 precision 32 min <integer_cst 0x7fd7a4664de0 -2147483648> max <integer_cst 0x7fd7a4664df8 2147483647>
        pointer_to_this <pointer_type 0x7fd7a467fa80>>
   
    def_stmt _140 = getuid ();
    version 140>
trace fucntion name:getuid 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7a4210048
    type <integer_type 0x7fd7a46785e8 int public SI
        size <integer_cst 0x7fd7a4664e28 constant 32>
        unit size <integer_cst 0x7fd7a4664e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fd7a46785e8 precision 32 min <integer_cst 0x7fd7a4664de0 -2147483648> max <integer_cst 0x7fd7a4664df8 2147483647>
        pointer_to_this <pointer_type 0x7fd7a467fa80>>
   
    def_stmt _140 = getuid ();
    version 140>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: use location
   free(username);
   ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: use location
  free(buf);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: use location
    free(argv[i]);
    ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: use location
   free(argv);
   ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: use location
    free(copy);
    ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_218 = VDEF <.MEM_217>
free (_49);
./benchmarks/tmux/leak_10/tmux_leak_10.c:407:4: warning: use location
    free(cause);
    ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: use location
   free(copy);
   ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
home_150 = PHI <home_139(37), home_144(39), home_153(43)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: Use after free error!: free location 
  free(buf);
  ^
home_150 = PHI <home_139(37), home_144(39), home_153(43)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
home_150 = PHI <home_139(37), home_144(39), home_153(43)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: Use after free error!: free location 
   free(argv);
   ^
home_150 = PHI <home_139(37), home_144(39), home_153(43)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
home_150 = PHI <home_139(37), home_144(39), home_153(43)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_218 = VDEF <.MEM_217>
free (_49);
./benchmarks/tmux/leak_10/tmux_leak_10.c:407:4: warning: Use after free error!: free location 
    free(cause);
    ^
home_150 = PHI <home_139(37), home_144(39), home_153(43)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
home_150 = PHI <home_139(37), home_144(39), home_153(43)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
# .MEM_195 = VDEF <.MEM_163>
_151 = strdup (home_150);
./benchmarks/tmux/leak_10/tmux_leak_10.c:227:10: warning: use location
  return (strdup(home));
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
_152 = PHI <0B(38), 0B(40), 0B(44), _151(45)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: Use after free error!: free location 
  free(buf);
  ^
_152 = PHI <0B(38), 0B(40), 0B(44), _151(45)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
_152 = PHI <0B(38), 0B(40), 0B(44), _151(45)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: Use after free error!: free location 
   free(argv);
   ^
_152 = PHI <0B(38), 0B(40), 0B(44), _151(45)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
_152 = PHI <0B(38), 0B(40), 0B(44), _151(45)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_218 = VDEF <.MEM_217>
free (_49);
./benchmarks/tmux/leak_10/tmux_leak_10.c:407:4: warning: Use after free error!: free location 
    free(cause);
    ^
_152 = PHI <0B(38), 0B(40), 0B(44), _151(45)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
_152 = PHI <0B(38), 0B(40), 0B(44), _151(45)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
_196 = _152;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
t_110 = _196;
./benchmarks/tmux/leak_10/tmux_leak_10.c:309:7: warning: use location
     t = cmd_string_expand_tilde(s, &p);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
if (t_110 == 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:310:8: warning: use location
     if (t == NULL)
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:7 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd7a42101b0
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a420e090 username>
    def_stmt username_145 = cmd_string_string (buf_40, &p, 47, 0);
    version 145
    ptr-info 0x7fd7a42167c8>
# .MEM_190 = VDEF <.MEM_189>
username_145 = cmd_string_string (buf_40, &p, 47, 0);

 ================== trace ptable================== 
trace fucntion name:cmd_string_string 
[40;44m =======trace_function_path cmd_string_string  function_call count: 4 level :-100========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :-100========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:cmd_string_getc========= [0m
[40;46m =======add node_fun stack:cmd_string_getc========= [0m
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :-100========  [0m
[40;42m =======pre add _ fucntion:cmd_string_variable========= [0m
cmd_string_variable this fucntion return value is heap-object 
cmd_string_string this fucntion return value is heap-object cmd_string_variable
[40;46m =======add node_fun stack:cmd_string_variable========= [0m
[40;44m =======trace_function_path cmd_string_variable  function_call count: 4 level :-100========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :-100========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:cmd_string_getc========= [0m
[40;46m =======add node_fun stack:cmd_string_getc========= [0m
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :-100========  [0m
some fucntion return value is heap-object and with Collection SSA_NAME alias relation

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---cmd_string_string-----
this other function ------cmd_string_string-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
username_145 = cmd_string_string (buf_40, &p, 47, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:218:6: warning: use location
   if ((username = cmd_string_string(s, p, '/', 0)) == NULL)
      ^
this stmt is child function---cmd_string_string-----

 ================== trace ================== 
 <ssa_name 0x7fd7a42101b0
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a420e090 username>
    def_stmt username_145 = cmd_string_string (buf_40, &p, 47, 0);
    version 145
    ptr-info 0x7fd7a42167c8>
trace fucntion name:cmd_string_string 
[40;44m =======trace_function_path cmd_string_string  function_call count: 4 level :0========  [0m
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
[40;31m  find free stmt free same pointer [0m
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: use location
  free(buf);
  ^
[40;36m ======= node_fun:cmd_string_string========= [0m
[40;36m ======= find relate stmt with username ========= [0m
[40;36m ======= relate stmt argument:username ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :1========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;31m  find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with username ========= [0m
[40;36m ======= relate stmt argument:username ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:cmd_string_getc========= [0m
[40;46m =======add node_fun stack:cmd_string_getc========= [0m
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :1========  [0m
[40;36m ======= node_fun:cmd_string_getc========= [0m
[40;36m ======= find relate stmt with username ========= [0m
[40;36m ======= relate stmt argument:username ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:cmd_string_variable========= [0m
cmd_string_variable this fucntion return value is heap-object 
cmd_string_string this fucntion return value is heap-object cmd_string_variable
[40;46m =======add node_fun stack:cmd_string_variable========= [0m
[40;44m =======trace_function_path cmd_string_variable  function_call count: 4 level :1========  [0m
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
[40;31m  find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: use location
  free(buf);
  ^
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
[40;31m  find free stmt free same pointer [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: use location
  free(buf);
  ^
[40;36m ======= node_fun:cmd_string_variable========= [0m
[40;36m ======= find relate stmt with username ========= [0m
[40;36m ======= relate stmt argument:username ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :2========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;31m  find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with username ========= [0m
[40;36m ======= relate stmt argument:username ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:cmd_string_getc========= [0m
[40;46m =======add node_fun stack:cmd_string_getc========= [0m
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:cmd_string_getc========= [0m
[40;36m ======= find relate stmt with username ========= [0m
[40;36m ======= relate stmt argument:username ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:5 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: use location
   free(username);
   ^
this stmt is child function---free-----

 ================== find ================== 
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: use location
[40;32m    HAS FREE STMT count:6 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_146 = getpwnam (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:220:13: warning: use location
   if ((pw = getpwnam(username)) != NULL)
             ^
this stmt is child function---getpwnam-----

 ================== trace ================== 
 <ssa_name 0x7fd7a42101b0
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a420e090 username>
    def_stmt username_145 = cmd_string_string (buf_40, &p, 47, 0);
    version 145
    ptr-info 0x7fd7a42167c8>
trace fucntion name:getpwnam 

 ================== trace ================== 
trace fucntion free:6 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_146 != 0)
./benchmarks/tmux/leak_10/tmux_leak_10.c:220:6: warning: use location
   if ((pw = getpwnam(username)) != NULL)
      ^
if (_146 != 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:220:6: warning: use location
Cond in fucntion main basic block 41
 ================== possible direct basic block ================= 
from main basic block 42
 ================== possible direct basic block ================= 
from main basic block 43
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_147 = (long int) _146;
./benchmarks/tmux/leak_10/tmux_leak_10.c:220:13: warning: use location
   if ((pw = getpwnam(username)) != NULL)
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
pw_148 = (struct passwd *) _147;
./benchmarks/tmux/leak_10/tmux_leak_10.c:220:11: warning: use location
   if ((pw = getpwnam(username)) != NULL)
           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
home_149 = pw_148->pw_dir;
./benchmarks/tmux/leak_10/tmux_leak_10.c:221:9: warning: use location
    home = pw->pw_dir;
         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
home_153 = PHI <0B(41), home_149(42)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
home_150 = PHI <home_139(37), home_144(39), home_153(43)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_151 = strdup (home_150);
./benchmarks/tmux/leak_10/tmux_leak_10.c:227:10: warning: use location
  return (strdup(home));
          ^
this stmt is child function---strdup-----

 ================== trace ================== 
 <ssa_name 0x7fd7a42101b0
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a420e090 username>
    def_stmt username_145 = cmd_string_string (buf_40, &p, 47, 0);
    version 145
    ptr-info 0x7fd7a42167c8>
trace fucntion name:strdup 

 ================== trace ================== 
trace fucntion free:6 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_152 = PHI <0B(38), 0B(40), 0B(44), _151(45)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_196 = _152;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
t_110 = _196;
./benchmarks/tmux/leak_10/tmux_leak_10.c:309:7: warning: use location
     t = cmd_string_expand_tilde(s, &p);
       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (t_110 == 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:310:8: warning: use location
     if (t == NULL)
        ^
if (t_110 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:310:8: warning: use location
Cond in fucntion main basic block 46
 ================== possible direct basic block ================= 
from main basic block 49
 ================== possible direct basic block ================= 
from main basic block 17
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_135 = cmd_string_getc (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:211:6: warning: use location
  if (cmd_string_getc(s, p) == '/') {
      ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fd7a42101b0
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a420e090 username>
    def_stmt username_145 = cmd_string_string (buf_40, &p, 47, 0);
    version 145
    ptr-info 0x7fd7a42167c8>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:cmd_string_getc========= [0m
[40;36m ======= find relate stmt with username ========= [0m
[40;36m ======= relate stmt argument:username ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:6 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_135 == 47)
./benchmarks/tmux/leak_10/tmux_leak_10.c:211:5: warning: use location
  if (cmd_string_getc(s, p) == '/') {
     ^
if (_135 == 47)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:211:5: warning: use location
Cond in fucntion main basic block 34
 ================== possible direct basic block ================= 
from main basic block 35
 ================== possible direct basic block ================= 
from main basic block 40
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ch_77 = cmd_string_getc (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:271:10: warning: use location
    while ((ch = cmd_string_getc(s, &p)) != EOF)
          ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fd7a42101b0
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a420e090 username>
    def_stmt username_145 = cmd_string_string (buf_40, &p, 47, 0);
    version 145
    ptr-info 0x7fd7a42167c8>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:cmd_string_getc========= [0m
[40;36m ======= find relate stmt with username ========= [0m
[40;36m ======= relate stmt argument:username ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:6 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ch_93 = PHI <ch_73(18), ch_77(23)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (ch_93 != -1)
./benchmarks/tmux/leak_10/tmux_leak_10.c:288:7: warning: use location
    if (ch != EOF)
       ^
if (ch_93 != -1)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:288:7: warning: use location
Cond in fucntion main basic block 26
 ================== possible direct basic block ================= 
from main basic block 17
 ================== possible direct basic block ================= 
from main basic block 29
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
t_76 = cmd_string_variable (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:266:7: warning: use location
    if ((t = cmd_string_variable(s, &p)) == NULL)
       ^
this stmt is child function---cmd_string_variable-----

 ================== trace ================== 
 <ssa_name 0x7fd7a42101b0
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a420e090 username>
    def_stmt username_145 = cmd_string_string (buf_40, &p, 47, 0);
    version 145
    ptr-info 0x7fd7a42167c8>
trace fucntion name:cmd_string_variable 
[40;44m =======trace_function_path cmd_string_variable  function_call count: 4 level :0========  [0m
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
[40;31m  find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: use location
  free(buf);
  ^
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
[40;31m  find free stmt free same pointer [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: use location
  free(buf);
  ^
[40;36m ======= node_fun:cmd_string_variable========= [0m
[40;36m ======= find relate stmt with username ========= [0m
[40;36m ======= relate stmt argument:username ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :1========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;31m  find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with username ========= [0m
[40;36m ======= relate stmt argument:username ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:cmd_string_getc========= [0m
[40;46m =======add node_fun stack:cmd_string_getc========= [0m
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :1========  [0m
[40;36m ======= node_fun:cmd_string_getc========= [0m
[40;36m ======= find relate stmt with username ========= [0m
[40;36m ======= relate stmt argument:username ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:9 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
t_75 = cmd_string_string (buf_40, &p, 34, 1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:262:7: warning: use location
    if ((t = cmd_string_string(s, &p, '"', 1)) == NULL)
       ^
this stmt is child function---cmd_string_string-----

 ================== trace ================== 
 <ssa_name 0x7fd7a42101b0
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a420e090 username>
    def_stmt username_145 = cmd_string_string (buf_40, &p, 47, 0);
    version 145
    ptr-info 0x7fd7a42167c8>
trace fucntion name:cmd_string_string 
[40;44m =======trace_function_path cmd_string_string  function_call count: 4 level :0========  [0m
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
[40;31m  find free stmt free same pointer [0m
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: use location
  free(buf);
  ^
[40;36m ======= node_fun:cmd_string_string========= [0m
[40;36m ======= find relate stmt with username ========= [0m
[40;36m ======= relate stmt argument:username ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :1========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;31m  find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with username ========= [0m
[40;36m ======= relate stmt argument:username ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:cmd_string_getc========= [0m
[40;46m =======add node_fun stack:cmd_string_getc========= [0m
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :1========  [0m
[40;36m ======= node_fun:cmd_string_getc========= [0m
[40;36m ======= find relate stmt with username ========= [0m
[40;36m ======= relate stmt argument:username ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:cmd_string_variable========= [0m
cmd_string_variable this fucntion return value is heap-object 
cmd_string_string this fucntion return value is heap-object cmd_string_variable
[40;46m =======add node_fun stack:cmd_string_variable========= [0m
[40;44m =======trace_function_path cmd_string_variable  function_call count: 4 level :1========  [0m
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
[40;31m  find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: use location
  free(buf);
  ^
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
[40;31m  find free stmt free same pointer [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: use location
  free(buf);
  ^
[40;36m ======= node_fun:cmd_string_variable========= [0m
[40;36m ======= find relate stmt with username ========= [0m
[40;36m ======= relate stmt argument:username ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :2========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;31m  find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with username ========= [0m
[40;36m ======= relate stmt argument:username ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:cmd_string_getc========= [0m
[40;46m =======add node_fun stack:cmd_string_getc========= [0m
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:cmd_string_getc========= [0m
[40;36m ======= find relate stmt with username ========= [0m
[40;36m ======= relate stmt argument:username ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:14 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
t_74 = cmd_string_string (buf_40, &p, 39, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:258:7: warning: use location
    if ((t = cmd_string_string(s, &p, '\'', 0)) == NULL)
       ^
this stmt is child function---cmd_string_string-----

 ================== trace ================== 
 <ssa_name 0x7fd7a42101b0
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a420e090 username>
    def_stmt username_145 = cmd_string_string (buf_40, &p, 47, 0);
    version 145
    ptr-info 0x7fd7a42167c8>
trace fucntion name:cmd_string_string 
[40;44m =======trace_function_path cmd_string_string  function_call count: 4 level :0========  [0m
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
[40;31m  find free stmt free same pointer [0m
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: use location
  free(buf);
  ^
[40;36m ======= node_fun:cmd_string_string========= [0m
[40;36m ======= find relate stmt with username ========= [0m
[40;36m ======= relate stmt argument:username ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :1========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;31m  find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with username ========= [0m
[40;36m ======= relate stmt argument:username ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:cmd_string_getc========= [0m
[40;46m =======add node_fun stack:cmd_string_getc========= [0m
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :1========  [0m
[40;36m ======= node_fun:cmd_string_getc========= [0m
[40;36m ======= find relate stmt with username ========= [0m
[40;36m ======= relate stmt argument:username ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:cmd_string_variable========= [0m
cmd_string_variable this fucntion return value is heap-object 
cmd_string_string this fucntion return value is heap-object cmd_string_variable
[40;46m =======add node_fun stack:cmd_string_variable========= [0m
[40;44m =======trace_function_path cmd_string_variable  function_call count: 4 level :1========  [0m
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
[40;31m  find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: use location
  free(buf);
  ^
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
[40;31m  find free stmt free same pointer [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: use location
  free(buf);
  ^
[40;36m ======= node_fun:cmd_string_variable========= [0m
[40;36m ======= find relate stmt with username ========= [0m
[40;36m ======= relate stmt argument:username ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :2========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;31m  find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with username ========= [0m
[40;36m ======= relate stmt argument:username ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:cmd_string_getc========= [0m
[40;46m =======add node_fun stack:cmd_string_getc========= [0m
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:cmd_string_getc========= [0m
[40;36m ======= find relate stmt with username ========= [0m
[40;36m ======= relate stmt argument:username ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:19 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ch_73 = cmd_string_getc (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:255:6: warning: use location
   ch = cmd_string_getc(s, &p);
      ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fd7a42101b0
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a420e090 username>
    def_stmt username_145 = cmd_string_string (buf_40, &p, 47, 0);
    version 145
    ptr-info 0x7fd7a42167c8>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:cmd_string_getc========= [0m
[40;36m ======= find relate stmt with username ========= [0m
[40;36m ======= relate stmt argument:username ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:19 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_116 = (char) ch_73;
./benchmarks/tmux/leak_10/tmux_leak_10.c:320:15: warning: use location
    buf[len++] = ch;
               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_115 = _116;
./benchmarks/tmux/leak_10/tmux_leak_10.c:320:15: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_46 = *buf_40;
./benchmarks/tmux/leak_10/tmux_leak_10.c:399:7: warning: use location
   if (*buf == '\0') {
       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_46 == 0)
./benchmarks/tmux/leak_10/tmux_leak_10.c:399:6: warning: use location
   if (*buf == '\0') {
      ^
if (_46 == 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:399:6: warning: use location
Cond in fucntion main basic block 14
 ================== possible direct basic block ================= 
from main basic block 15
 ================== possible direct basic block ================= 
from main basic block 16
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = *buf_40;
./benchmarks/tmux/leak_10/tmux_leak_10.c:397:26: warning: use location
   while (isspace((u_char)*buf))
                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_43 = (unsigned char) _42;
./benchmarks/tmux/leak_10/tmux_leak_10.c:397:18: warning: use location
   while (isspace((u_char)*buf))
                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = (int) _43;
./benchmarks/tmux/leak_10/tmux_leak_10.c:397:10: warning: use location
   while (isspace((u_char)*buf))
          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_45 = isspace (_44);
./benchmarks/tmux/leak_10/tmux_leak_10.c:397:10: warning: use location
this stmt is child function---isspace-----

 ================== trace ================== 
 <ssa_name 0x7fd7a42101b0
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a420e090 username>
    def_stmt username_145 = cmd_string_string (buf_40, &p, 47, 0);
    version 145
    ptr-info 0x7fd7a42167c8>
trace fucntion name:isspace 

 ================== trace ================== 
trace fucntion free:19 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_69 = PHI <_16(10), buf_40(15), buf_40(55), buf_40(56), buf_40(58), buf_40(59)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_55 = PHI <buf_71(D)(3), buf_69(60)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = __fgets_alias (buf_55, _54, f_11);
this stmt is child function---__fgets_alias-----

 ================== trace ================== 
 <ssa_name 0x7fd7a42101b0
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a420e090 username>
    def_stmt username_145 = cmd_string_string (buf_40, &p, 47, 0);
    version 145
    ptr-info 0x7fd7a42167c8>
trace fucntion name:__fgets_alias 

 ================== trace ================== 
trace fucntion free:19 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = PHI <_59(64), _63(66), _64(67)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
memcpy (_24, _16, len_21);
./benchmarks/tmux/leak_10/tmux_leak_10.c:379:3: warning: use location
   memcpy(line + oldlen, buf, len);
   ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7fd7a42101b0
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a420e090 username>
    def_stmt username_145 = cmd_string_string (buf_40, &p, 47, 0);
    version 145
    ptr-info 0x7fd7a42167c8>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:19 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = __printf_chk (1, "%s: %s", "path", _16);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7fd7a42101b0
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a420e090 username>
    def_stmt username_145 = cmd_string_string (buf_40, &p, 47, 0);
    version 145
    ptr-info 0x7fd7a42167c8>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:19 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = __fgets_chk_warn (buf_55, _62, _54, f_11);
this stmt is child function---__fgets_chk_warn-----

 ================== trace ================== 
 <ssa_name 0x7fd7a42101b0
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a420e090 username>
    def_stmt username_145 = cmd_string_string (buf_40, &p, 47, 0);
    version 145
    ptr-info 0x7fd7a42167c8>
trace fucntion name:__fgets_chk_warn 

 ================== trace ================== 
trace fucntion free:19 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_177 = VDEF <.MEM_170>
fclose (f_11);
bb index := 69
# VUSE <.MEM_15>
return _8;
In function ‘main’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 69 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_177 = VDEF <.MEM_170>
fclose (f_11);
bb index := 69
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 69 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_177 = VDEF <.MEM_170>
fclose (f_11);
bb index := 69
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 69 ,possiable got to succ := 70

======================================================================
fclose (f_11);
At top level:
./benchmarks/tmux/leak_10/tmux_leak_10.c:430:2: warning: use location
  fclose(f);
  ^
this stmt is child function---fclose-----

 ================== trace ================== 
 <ssa_name 0x7fd7a42101b0
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a420e090 username>
    def_stmt username_145 = cmd_string_string (buf_40, &p, 47, 0);
    version 145
    ptr-info 0x7fd7a42167c8>
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:19 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = __fgets_chk (buf_55, _58, _54, f_11);
this stmt is child function---__fgets_chk-----

 ================== trace ================== 
 <ssa_name 0x7fd7a42101b0
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a420e090 username>
    def_stmt username_145 = cmd_string_string (buf_40, &p, 47, 0);
    version 145
    ptr-info 0x7fd7a42167c8>
trace fucntion name:__fgets_chk 

 ================== trace ================== 
trace fucntion free:19 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_11 == 0B)
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_11 == 0B)
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_11 == 0B)
bb index := 2
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_11 == 0B)
bb index := 2
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_11 == 0B)
bb index := 2
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_11 == 0B)
bb index := 2
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_11 == 0B)
bb index := 2
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_11 == 0B)
bb index := 2
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 70

======================================================================
if (f_11 == 0B)
At top level:
./benchmarks/tmux/leak_10/tmux_leak_10.c:354:5: warning: use location
  if ((f = fopen(path, "rb")) == NULL) {
     ^
if (f_11 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:354:5: warning: use location
Cond in fucntion main basic block 2
 ================== possible direct basic block ================= 
from main basic block 70
 ================== possible direct basic block ================= 
from main basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_57 = __builtin_constant_p (_54);
this stmt is child function---__builtin_constant_p-----

 ================== trace ================== 
 <ssa_name 0x7fd7a42101b0
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a420e090 username>
    def_stmt username_145 = cmd_string_string (buf_40, &p, 47, 0);
    version 145
    ptr-info 0x7fd7a42167c8>
trace fucntion name:__builtin_constant_p 

 ================== trace ================== 
trace fucntion free:19 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = (long unsigned int) _54;

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_60 > _61)
if (_60 > _61)

 ================== find cond branch ================= 
Cond in fucntion main basic block 65
 ================== possible direct basic block ================= 
from main basic block 66
 ================== possible direct basic block ================= 
from main basic block 67
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_56 = __builtin_object_size (buf_55, 1);
this stmt is child function---__builtin_object_size-----

 ================== trace ================== 
 <ssa_name 0x7fd7a42101b0
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a420e090 username>
    def_stmt username_145 = cmd_string_string (buf_40, &p, 47, 0);
    version 145
    ptr-info 0x7fd7a42167c8>
trace fucntion name:__builtin_object_size 

 ================== trace ================== 
trace fucntion free:19 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_56 != 18446744073709551615)
if (_56 != 18446744073709551615)

 ================== find cond branch ================= 
Cond in fucntion main basic block 61
 ================== possible direct basic block ================= 
from main basic block 62
 ================== possible direct basic block ================= 
from main basic block 67
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_41 = buf_40 + 1;
./benchmarks/tmux/leak_10/tmux_leak_10.c:398:7: warning: use location
    buf++;
       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_154 = p;
./benchmarks/tmux/leak_10/tmux_leak_10.c:76:3: warning: use location
  (*p)--;
   ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_155 = _154 + 18446744073709551615;
./benchmarks/tmux/leak_10/tmux_leak_10.c:76:6: warning: use location
  (*p)--;
      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
p = _155;
./benchmarks/tmux/leak_10/tmux_leak_10.c:76:6: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7a42101b0
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a420e090 username>
    def_stmt username_145 = cmd_string_string (buf_40, &p, 47, 0);
    version 145
    ptr-info 0x7fd7a42167c8>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: use location
   free(username);
   ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: use location
  free(buf);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: use location
    free(argv[i]);
    ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: use location
   free(argv);
   ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_198 = VDEF <.MEM_187>
t_76 = cmd_string_variable (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:266:7: warning: Use after free error!: free location 
    if ((t = cmd_string_variable(s, &p)) == NULL)
       ^
# .MEM_190 = VDEF <.MEM_189>
username_145 = cmd_string_string (buf_40, &p, 47, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:218:6: warning: use location
   if ((username = cmd_string_string(s, p, '/', 0)) == NULL)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_190 = VDEF <.MEM_189>
username_145 = cmd_string_string (buf_40, &p, 47, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:218:6: warning: Use after free error!: free location 
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: use location
   free(username);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_198 = VDEF <.MEM_187>
t_76 = cmd_string_variable (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:266:7: warning: Use after free error!: free location 
    if ((t = cmd_string_variable(s, &p)) == NULL)
       ^
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: use location
   free(username);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_200 = VDEF <.MEM_187>
t_75 = cmd_string_string (buf_40, &p, 34, 1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:262:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '"', 1)) == NULL)
       ^
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: use location
   free(username);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_197 = VDEF <.MEM_187>
t_74 = cmd_string_string (buf_40, &p, 39, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:258:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '\'', 0)) == NULL)
       ^
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: use location
   free(username);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_190 = VDEF <.MEM_189>
username_145 = cmd_string_string (buf_40, &p, 47, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:218:6: warning: Use after free error!: free location 
   if ((username = cmd_string_string(s, p, '/', 0)) == NULL)
      ^
# .MEM_191 = VDEF <.MEM_190>
_146 = getpwnam (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:220:13: warning: use location
   if ((pw = getpwnam(username)) != NULL)
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_198 = VDEF <.MEM_187>
t_76 = cmd_string_variable (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:266:7: warning: Use after free error!: free location 
    if ((t = cmd_string_variable(s, &p)) == NULL)
       ^
# .MEM_191 = VDEF <.MEM_190>
_146 = getpwnam (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:220:13: warning: use location
   if ((pw = getpwnam(username)) != NULL)
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_200 = VDEF <.MEM_187>
t_75 = cmd_string_string (buf_40, &p, 34, 1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:262:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '"', 1)) == NULL)
       ^
# .MEM_191 = VDEF <.MEM_190>
_146 = getpwnam (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:220:13: warning: use location
   if ((pw = getpwnam(username)) != NULL)
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_197 = VDEF <.MEM_187>
t_74 = cmd_string_string (buf_40, &p, 39, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:258:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '\'', 0)) == NULL)
       ^
# .MEM_191 = VDEF <.MEM_190>
_146 = getpwnam (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:220:13: warning: use location
   if ((pw = getpwnam(username)) != NULL)
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_190 = VDEF <.MEM_189>
username_145 = cmd_string_string (buf_40, &p, 47, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:218:6: warning: Use after free error!: free location 
   if ((username = cmd_string_string(s, p, '/', 0)) == NULL)
      ^
if (_146 != 0)
./benchmarks/tmux/leak_10/tmux_leak_10.c:220:6: warning: use location
   if ((pw = getpwnam(username)) != NULL)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_198 = VDEF <.MEM_187>
t_76 = cmd_string_variable (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:266:7: warning: Use after free error!: free location 
    if ((t = cmd_string_variable(s, &p)) == NULL)
       ^
if (_146 != 0)
./benchmarks/tmux/leak_10/tmux_leak_10.c:220:6: warning: use location
   if ((pw = getpwnam(username)) != NULL)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_200 = VDEF <.MEM_187>
t_75 = cmd_string_string (buf_40, &p, 34, 1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:262:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '"', 1)) == NULL)
       ^
if (_146 != 0)
./benchmarks/tmux/leak_10/tmux_leak_10.c:220:6: warning: use location
   if ((pw = getpwnam(username)) != NULL)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_197 = VDEF <.MEM_187>
t_74 = cmd_string_string (buf_40, &p, 39, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:258:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '\'', 0)) == NULL)
       ^
if (_146 != 0)
./benchmarks/tmux/leak_10/tmux_leak_10.c:220:6: warning: use location
   if ((pw = getpwnam(username)) != NULL)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_190 = VDEF <.MEM_189>
username_145 = cmd_string_string (buf_40, &p, 47, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:218:6: warning: Use after free error!: free location 
   if ((username = cmd_string_string(s, p, '/', 0)) == NULL)
      ^
_147 = (long int) _146;
./benchmarks/tmux/leak_10/tmux_leak_10.c:220:13: warning: use location
   if ((pw = getpwnam(username)) != NULL)
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_198 = VDEF <.MEM_187>
t_76 = cmd_string_variable (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:266:7: warning: Use after free error!: free location 
    if ((t = cmd_string_variable(s, &p)) == NULL)
       ^
_147 = (long int) _146;
./benchmarks/tmux/leak_10/tmux_leak_10.c:220:13: warning: use location
   if ((pw = getpwnam(username)) != NULL)
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_200 = VDEF <.MEM_187>
t_75 = cmd_string_string (buf_40, &p, 34, 1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:262:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '"', 1)) == NULL)
       ^
_147 = (long int) _146;
./benchmarks/tmux/leak_10/tmux_leak_10.c:220:13: warning: use location
   if ((pw = getpwnam(username)) != NULL)
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_197 = VDEF <.MEM_187>
t_74 = cmd_string_string (buf_40, &p, 39, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:258:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '\'', 0)) == NULL)
       ^
_147 = (long int) _146;
./benchmarks/tmux/leak_10/tmux_leak_10.c:220:13: warning: use location
   if ((pw = getpwnam(username)) != NULL)
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_190 = VDEF <.MEM_189>
username_145 = cmd_string_string (buf_40, &p, 47, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:218:6: warning: Use after free error!: free location 
   if ((username = cmd_string_string(s, p, '/', 0)) == NULL)
      ^
pw_148 = (struct passwd *) _147;
./benchmarks/tmux/leak_10/tmux_leak_10.c:220:11: warning: use location
   if ((pw = getpwnam(username)) != NULL)
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_198 = VDEF <.MEM_187>
t_76 = cmd_string_variable (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:266:7: warning: Use after free error!: free location 
    if ((t = cmd_string_variable(s, &p)) == NULL)
       ^
pw_148 = (struct passwd *) _147;
./benchmarks/tmux/leak_10/tmux_leak_10.c:220:11: warning: use location
   if ((pw = getpwnam(username)) != NULL)
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_200 = VDEF <.MEM_187>
t_75 = cmd_string_string (buf_40, &p, 34, 1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:262:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '"', 1)) == NULL)
       ^
pw_148 = (struct passwd *) _147;
./benchmarks/tmux/leak_10/tmux_leak_10.c:220:11: warning: use location
   if ((pw = getpwnam(username)) != NULL)
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_197 = VDEF <.MEM_187>
t_74 = cmd_string_string (buf_40, &p, 39, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:258:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '\'', 0)) == NULL)
       ^
pw_148 = (struct passwd *) _147;
./benchmarks/tmux/leak_10/tmux_leak_10.c:220:11: warning: use location
   if ((pw = getpwnam(username)) != NULL)
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_190 = VDEF <.MEM_189>
username_145 = cmd_string_string (buf_40, &p, 47, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:218:6: warning: Use after free error!: free location 
   if ((username = cmd_string_string(s, p, '/', 0)) == NULL)
      ^
# VUSE <.MEM_191>
home_149 = pw_148->pw_dir;
./benchmarks/tmux/leak_10/tmux_leak_10.c:221:9: warning: use location
    home = pw->pw_dir;
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_198 = VDEF <.MEM_187>
t_76 = cmd_string_variable (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:266:7: warning: Use after free error!: free location 
    if ((t = cmd_string_variable(s, &p)) == NULL)
       ^
# VUSE <.MEM_191>
home_149 = pw_148->pw_dir;
./benchmarks/tmux/leak_10/tmux_leak_10.c:221:9: warning: use location
    home = pw->pw_dir;
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_200 = VDEF <.MEM_187>
t_75 = cmd_string_string (buf_40, &p, 34, 1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:262:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '"', 1)) == NULL)
       ^
# VUSE <.MEM_191>
home_149 = pw_148->pw_dir;
./benchmarks/tmux/leak_10/tmux_leak_10.c:221:9: warning: use location
    home = pw->pw_dir;
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_197 = VDEF <.MEM_187>
t_74 = cmd_string_string (buf_40, &p, 39, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:258:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '\'', 0)) == NULL)
       ^
# VUSE <.MEM_191>
home_149 = pw_148->pw_dir;
./benchmarks/tmux/leak_10/tmux_leak_10.c:221:9: warning: use location
    home = pw->pw_dir;
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_190 = VDEF <.MEM_189>
username_145 = cmd_string_string (buf_40, &p, 47, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:218:6: warning: Use after free error!: free location 
   if ((username = cmd_string_string(s, p, '/', 0)) == NULL)
      ^
home_153 = PHI <0B(41), home_149(42)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
home_153 = PHI <0B(41), home_149(42)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_198 = VDEF <.MEM_187>
t_76 = cmd_string_variable (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:266:7: warning: Use after free error!: free location 
    if ((t = cmd_string_variable(s, &p)) == NULL)
       ^
home_153 = PHI <0B(41), home_149(42)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_200 = VDEF <.MEM_187>
t_75 = cmd_string_string (buf_40, &p, 34, 1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:262:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '"', 1)) == NULL)
       ^
home_153 = PHI <0B(41), home_149(42)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_197 = VDEF <.MEM_187>
t_74 = cmd_string_string (buf_40, &p, 39, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:258:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '\'', 0)) == NULL)
       ^
home_153 = PHI <0B(41), home_149(42)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
home_153 = PHI <0B(41), home_149(42)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: Use after free error!: free location 
  free(buf);
  ^
home_153 = PHI <0B(41), home_149(42)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
home_153 = PHI <0B(41), home_149(42)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: Use after free error!: free location 
   free(argv);
   ^
home_153 = PHI <0B(41), home_149(42)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_190 = VDEF <.MEM_189>
username_145 = cmd_string_string (buf_40, &p, 47, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:218:6: warning: Use after free error!: free location 
   if ((username = cmd_string_string(s, p, '/', 0)) == NULL)
      ^
home_150 = PHI <home_139(37), home_144(39), home_153(43)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
home_150 = PHI <home_139(37), home_144(39), home_153(43)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_198 = VDEF <.MEM_187>
t_76 = cmd_string_variable (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:266:7: warning: Use after free error!: free location 
    if ((t = cmd_string_variable(s, &p)) == NULL)
       ^
home_150 = PHI <home_139(37), home_144(39), home_153(43)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_200 = VDEF <.MEM_187>
t_75 = cmd_string_string (buf_40, &p, 34, 1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:262:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '"', 1)) == NULL)
       ^
home_150 = PHI <home_139(37), home_144(39), home_153(43)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_197 = VDEF <.MEM_187>
t_74 = cmd_string_string (buf_40, &p, 39, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:258:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '\'', 0)) == NULL)
       ^
home_150 = PHI <home_139(37), home_144(39), home_153(43)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
home_150 = PHI <home_139(37), home_144(39), home_153(43)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: Use after free error!: free location 
  free(buf);
  ^
home_150 = PHI <home_139(37), home_144(39), home_153(43)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
home_150 = PHI <home_139(37), home_144(39), home_153(43)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: Use after free error!: free location 
   free(argv);
   ^
home_150 = PHI <home_139(37), home_144(39), home_153(43)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_190 = VDEF <.MEM_189>
username_145 = cmd_string_string (buf_40, &p, 47, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:218:6: warning: Use after free error!: free location 
   if ((username = cmd_string_string(s, p, '/', 0)) == NULL)
      ^
# .MEM_195 = VDEF <.MEM_163>
_151 = strdup (home_150);
./benchmarks/tmux/leak_10/tmux_leak_10.c:227:10: warning: use location
  return (strdup(home));
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
# .MEM_195 = VDEF <.MEM_163>
_151 = strdup (home_150);
./benchmarks/tmux/leak_10/tmux_leak_10.c:227:10: warning: use location
  return (strdup(home));
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_198 = VDEF <.MEM_187>
t_76 = cmd_string_variable (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:266:7: warning: Use after free error!: free location 
    if ((t = cmd_string_variable(s, &p)) == NULL)
       ^
# .MEM_195 = VDEF <.MEM_163>
_151 = strdup (home_150);
./benchmarks/tmux/leak_10/tmux_leak_10.c:227:10: warning: use location
  return (strdup(home));
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_200 = VDEF <.MEM_187>
t_75 = cmd_string_string (buf_40, &p, 34, 1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:262:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '"', 1)) == NULL)
       ^
# .MEM_195 = VDEF <.MEM_163>
_151 = strdup (home_150);
./benchmarks/tmux/leak_10/tmux_leak_10.c:227:10: warning: use location
  return (strdup(home));
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_197 = VDEF <.MEM_187>
t_74 = cmd_string_string (buf_40, &p, 39, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:258:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '\'', 0)) == NULL)
       ^
# .MEM_195 = VDEF <.MEM_163>
_151 = strdup (home_150);
./benchmarks/tmux/leak_10/tmux_leak_10.c:227:10: warning: use location
  return (strdup(home));
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
# .MEM_195 = VDEF <.MEM_163>
_151 = strdup (home_150);
./benchmarks/tmux/leak_10/tmux_leak_10.c:227:10: warning: use location
  return (strdup(home));
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_190 = VDEF <.MEM_189>
username_145 = cmd_string_string (buf_40, &p, 47, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:218:6: warning: Use after free error!: free location 
   if ((username = cmd_string_string(s, p, '/', 0)) == NULL)
      ^
_152 = PHI <0B(38), 0B(40), 0B(44), _151(45)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
_152 = PHI <0B(38), 0B(40), 0B(44), _151(45)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_198 = VDEF <.MEM_187>
t_76 = cmd_string_variable (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:266:7: warning: Use after free error!: free location 
    if ((t = cmd_string_variable(s, &p)) == NULL)
       ^
_152 = PHI <0B(38), 0B(40), 0B(44), _151(45)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_200 = VDEF <.MEM_187>
t_75 = cmd_string_string (buf_40, &p, 34, 1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:262:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '"', 1)) == NULL)
       ^
_152 = PHI <0B(38), 0B(40), 0B(44), _151(45)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_197 = VDEF <.MEM_187>
t_74 = cmd_string_string (buf_40, &p, 39, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:258:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '\'', 0)) == NULL)
       ^
_152 = PHI <0B(38), 0B(40), 0B(44), _151(45)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
_152 = PHI <0B(38), 0B(40), 0B(44), _151(45)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: Use after free error!: free location 
  free(buf);
  ^
_152 = PHI <0B(38), 0B(40), 0B(44), _151(45)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
_152 = PHI <0B(38), 0B(40), 0B(44), _151(45)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: Use after free error!: free location 
   free(argv);
   ^
_152 = PHI <0B(38), 0B(40), 0B(44), _151(45)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_190 = VDEF <.MEM_189>
username_145 = cmd_string_string (buf_40, &p, 47, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:218:6: warning: Use after free error!: free location 
   if ((username = cmd_string_string(s, p, '/', 0)) == NULL)
      ^
_196 = _152;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
_196 = _152;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_198 = VDEF <.MEM_187>
t_76 = cmd_string_variable (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:266:7: warning: Use after free error!: free location 
    if ((t = cmd_string_variable(s, &p)) == NULL)
       ^
_196 = _152;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_200 = VDEF <.MEM_187>
t_75 = cmd_string_string (buf_40, &p, 34, 1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:262:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '"', 1)) == NULL)
       ^
_196 = _152;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_197 = VDEF <.MEM_187>
t_74 = cmd_string_string (buf_40, &p, 39, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:258:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '\'', 0)) == NULL)
       ^
_196 = _152;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
_196 = _152;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_190 = VDEF <.MEM_189>
username_145 = cmd_string_string (buf_40, &p, 47, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:218:6: warning: Use after free error!: free location 
   if ((username = cmd_string_string(s, p, '/', 0)) == NULL)
      ^
t_110 = _196;
./benchmarks/tmux/leak_10/tmux_leak_10.c:309:7: warning: use location
     t = cmd_string_expand_tilde(s, &p);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
t_110 = _196;
./benchmarks/tmux/leak_10/tmux_leak_10.c:309:7: warning: use location
     t = cmd_string_expand_tilde(s, &p);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_198 = VDEF <.MEM_187>
t_76 = cmd_string_variable (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:266:7: warning: Use after free error!: free location 
    if ((t = cmd_string_variable(s, &p)) == NULL)
       ^
t_110 = _196;
./benchmarks/tmux/leak_10/tmux_leak_10.c:309:7: warning: use location
     t = cmd_string_expand_tilde(s, &p);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_200 = VDEF <.MEM_187>
t_75 = cmd_string_string (buf_40, &p, 34, 1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:262:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '"', 1)) == NULL)
       ^
t_110 = _196;
./benchmarks/tmux/leak_10/tmux_leak_10.c:309:7: warning: use location
     t = cmd_string_expand_tilde(s, &p);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_197 = VDEF <.MEM_187>
t_74 = cmd_string_string (buf_40, &p, 39, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:258:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '\'', 0)) == NULL)
       ^
t_110 = _196;
./benchmarks/tmux/leak_10/tmux_leak_10.c:309:7: warning: use location
     t = cmd_string_expand_tilde(s, &p);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
t_110 = _196;
./benchmarks/tmux/leak_10/tmux_leak_10.c:309:7: warning: use location
     t = cmd_string_expand_tilde(s, &p);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_190 = VDEF <.MEM_189>
username_145 = cmd_string_string (buf_40, &p, 47, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:218:6: warning: Use after free error!: free location 
   if ((username = cmd_string_string(s, p, '/', 0)) == NULL)
      ^
if (t_110 == 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:310:8: warning: use location
     if (t == NULL)
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
if (t_110 == 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:310:8: warning: use location
     if (t == NULL)
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_198 = VDEF <.MEM_187>
t_76 = cmd_string_variable (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:266:7: warning: Use after free error!: free location 
    if ((t = cmd_string_variable(s, &p)) == NULL)
       ^
if (t_110 == 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:310:8: warning: use location
     if (t == NULL)
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_200 = VDEF <.MEM_187>
t_75 = cmd_string_string (buf_40, &p, 34, 1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:262:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '"', 1)) == NULL)
       ^
if (t_110 == 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:310:8: warning: use location
     if (t == NULL)
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_197 = VDEF <.MEM_187>
t_74 = cmd_string_string (buf_40, &p, 39, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:258:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '\'', 0)) == NULL)
       ^
if (t_110 == 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:310:8: warning: use location
     if (t == NULL)
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
if (t_110 == 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:310:8: warning: use location
     if (t == NULL)
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_198 = VDEF <.MEM_187>
t_76 = cmd_string_variable (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:266:7: warning: Use after free error!: free location 
    if ((t = cmd_string_variable(s, &p)) == NULL)
       ^
# .MEM_188 = VDEF <.MEM_187>
_135 = cmd_string_getc (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:211:6: warning: use location
  if (cmd_string_getc(s, p) == '/') {
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_200 = VDEF <.MEM_187>
t_75 = cmd_string_string (buf_40, &p, 34, 1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:262:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '"', 1)) == NULL)
       ^
# .MEM_188 = VDEF <.MEM_187>
_135 = cmd_string_getc (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:211:6: warning: use location
  if (cmd_string_getc(s, p) == '/') {
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_197 = VDEF <.MEM_187>
t_74 = cmd_string_string (buf_40, &p, 39, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:258:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '\'', 0)) == NULL)
       ^
# .MEM_188 = VDEF <.MEM_187>
_135 = cmd_string_getc (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:211:6: warning: use location
  if (cmd_string_getc(s, p) == '/') {
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_198 = VDEF <.MEM_187>
t_76 = cmd_string_variable (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:266:7: warning: Use after free error!: free location 
    if ((t = cmd_string_variable(s, &p)) == NULL)
       ^
if (_135 == 47)
./benchmarks/tmux/leak_10/tmux_leak_10.c:211:5: warning: use location
  if (cmd_string_getc(s, p) == '/') {
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_200 = VDEF <.MEM_187>
t_75 = cmd_string_string (buf_40, &p, 34, 1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:262:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '"', 1)) == NULL)
       ^
if (_135 == 47)
./benchmarks/tmux/leak_10/tmux_leak_10.c:211:5: warning: use location
  if (cmd_string_getc(s, p) == '/') {
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_197 = VDEF <.MEM_187>
t_74 = cmd_string_string (buf_40, &p, 39, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:258:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '\'', 0)) == NULL)
       ^
if (_135 == 47)
./benchmarks/tmux/leak_10/tmux_leak_10.c:211:5: warning: use location
  if (cmd_string_getc(s, p) == '/') {
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_198 = VDEF <.MEM_187>
t_76 = cmd_string_variable (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:266:7: warning: Use after free error!: free location 
    if ((t = cmd_string_variable(s, &p)) == NULL)
       ^
# .MEM_199 = VDEF <.MEM_159>
ch_77 = cmd_string_getc (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:271:10: warning: use location
    while ((ch = cmd_string_getc(s, &p)) != EOF)
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_200 = VDEF <.MEM_187>
t_75 = cmd_string_string (buf_40, &p, 34, 1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:262:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '"', 1)) == NULL)
       ^
# .MEM_199 = VDEF <.MEM_159>
ch_77 = cmd_string_getc (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:271:10: warning: use location
    while ((ch = cmd_string_getc(s, &p)) != EOF)
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_197 = VDEF <.MEM_187>
t_74 = cmd_string_string (buf_40, &p, 39, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:258:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '\'', 0)) == NULL)
       ^
# .MEM_199 = VDEF <.MEM_159>
ch_77 = cmd_string_getc (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:271:10: warning: use location
    while ((ch = cmd_string_getc(s, &p)) != EOF)
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_190 = VDEF <.MEM_189>
username_145 = cmd_string_string (buf_40, &p, 47, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:218:6: warning: Use after free error!: free location 
   if ((username = cmd_string_string(s, p, '/', 0)) == NULL)
      ^
ch_93 = PHI <ch_73(18), ch_77(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
ch_93 = PHI <ch_73(18), ch_77(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_198 = VDEF <.MEM_187>
t_76 = cmd_string_variable (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:266:7: warning: Use after free error!: free location 
    if ((t = cmd_string_variable(s, &p)) == NULL)
       ^
ch_93 = PHI <ch_73(18), ch_77(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_200 = VDEF <.MEM_187>
t_75 = cmd_string_string (buf_40, &p, 34, 1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:262:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '"', 1)) == NULL)
       ^
ch_93 = PHI <ch_73(18), ch_77(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_197 = VDEF <.MEM_187>
t_74 = cmd_string_string (buf_40, &p, 39, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:258:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '\'', 0)) == NULL)
       ^
ch_93 = PHI <ch_73(18), ch_77(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
ch_93 = PHI <ch_73(18), ch_77(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: Use after free error!: free location 
  free(buf);
  ^
ch_93 = PHI <ch_73(18), ch_77(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
ch_93 = PHI <ch_73(18), ch_77(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: Use after free error!: free location 
   free(argv);
   ^
ch_93 = PHI <ch_73(18), ch_77(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_198 = VDEF <.MEM_187>
t_76 = cmd_string_variable (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:266:7: warning: Use after free error!: free location 
    if ((t = cmd_string_variable(s, &p)) == NULL)
       ^
if (ch_93 != -1)
./benchmarks/tmux/leak_10/tmux_leak_10.c:288:7: warning: use location
    if (ch != EOF)
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_200 = VDEF <.MEM_187>
t_75 = cmd_string_string (buf_40, &p, 34, 1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:262:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '"', 1)) == NULL)
       ^
if (ch_93 != -1)
./benchmarks/tmux/leak_10/tmux_leak_10.c:288:7: warning: use location
    if (ch != EOF)
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_197 = VDEF <.MEM_187>
t_74 = cmd_string_string (buf_40, &p, 39, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:258:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '\'', 0)) == NULL)
       ^
if (ch_93 != -1)
./benchmarks/tmux/leak_10/tmux_leak_10.c:288:7: warning: use location
    if (ch != EOF)
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_200 = VDEF <.MEM_187>
t_75 = cmd_string_string (buf_40, &p, 34, 1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:262:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '"', 1)) == NULL)
       ^
# .MEM_198 = VDEF <.MEM_187>
t_76 = cmd_string_variable (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:266:7: warning: use location
    if ((t = cmd_string_variable(s, &p)) == NULL)
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_197 = VDEF <.MEM_187>
t_74 = cmd_string_string (buf_40, &p, 39, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:258:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '\'', 0)) == NULL)
       ^
# .MEM_198 = VDEF <.MEM_187>
t_76 = cmd_string_variable (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:266:7: warning: use location
    if ((t = cmd_string_variable(s, &p)) == NULL)
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_190 = VDEF <.MEM_189>
username_145 = cmd_string_string (buf_40, &p, 47, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:218:6: warning: Use after free error!: free location 
   if ((username = cmd_string_string(s, p, '/', 0)) == NULL)
      ^
_116 = (char) ch_73;
./benchmarks/tmux/leak_10/tmux_leak_10.c:320:15: warning: use location
    buf[len++] = ch;
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
_116 = (char) ch_73;
./benchmarks/tmux/leak_10/tmux_leak_10.c:320:15: warning: use location
    buf[len++] = ch;
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_198 = VDEF <.MEM_187>
t_76 = cmd_string_variable (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:266:7: warning: Use after free error!: free location 
    if ((t = cmd_string_variable(s, &p)) == NULL)
       ^
_116 = (char) ch_73;
./benchmarks/tmux/leak_10/tmux_leak_10.c:320:15: warning: use location
    buf[len++] = ch;
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_200 = VDEF <.MEM_187>
t_75 = cmd_string_string (buf_40, &p, 34, 1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:262:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '"', 1)) == NULL)
       ^
_116 = (char) ch_73;
./benchmarks/tmux/leak_10/tmux_leak_10.c:320:15: warning: use location
    buf[len++] = ch;
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_197 = VDEF <.MEM_187>
t_74 = cmd_string_string (buf_40, &p, 39, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:258:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '\'', 0)) == NULL)
       ^
_116 = (char) ch_73;
./benchmarks/tmux/leak_10/tmux_leak_10.c:320:15: warning: use location
    buf[len++] = ch;
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
_116 = (char) ch_73;
./benchmarks/tmux/leak_10/tmux_leak_10.c:320:15: warning: use location
    buf[len++] = ch;
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_190 = VDEF <.MEM_189>
username_145 = cmd_string_string (buf_40, &p, 47, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:218:6: warning: Use after free error!: free location 
   if ((username = cmd_string_string(s, p, '/', 0)) == NULL)
      ^
# .MEM_207 = VDEF <.MEM_206>
*_115 = _116;
./benchmarks/tmux/leak_10/tmux_leak_10.c:320:15: warning: use location
    buf[len++] = ch;
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
# .MEM_207 = VDEF <.MEM_206>
*_115 = _116;
./benchmarks/tmux/leak_10/tmux_leak_10.c:320:15: warning: use location
    buf[len++] = ch;
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_198 = VDEF <.MEM_187>
t_76 = cmd_string_variable (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:266:7: warning: Use after free error!: free location 
    if ((t = cmd_string_variable(s, &p)) == NULL)
       ^
# .MEM_207 = VDEF <.MEM_206>
*_115 = _116;
./benchmarks/tmux/leak_10/tmux_leak_10.c:320:15: warning: use location
    buf[len++] = ch;
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_200 = VDEF <.MEM_187>
t_75 = cmd_string_string (buf_40, &p, 34, 1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:262:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '"', 1)) == NULL)
       ^
# .MEM_207 = VDEF <.MEM_206>
*_115 = _116;
./benchmarks/tmux/leak_10/tmux_leak_10.c:320:15: warning: use location
    buf[len++] = ch;
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_197 = VDEF <.MEM_187>
t_74 = cmd_string_string (buf_40, &p, 39, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:258:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '\'', 0)) == NULL)
       ^
# .MEM_207 = VDEF <.MEM_206>
*_115 = _116;
./benchmarks/tmux/leak_10/tmux_leak_10.c:320:15: warning: use location
    buf[len++] = ch;
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
# .MEM_207 = VDEF <.MEM_206>
*_115 = _116;
./benchmarks/tmux/leak_10/tmux_leak_10.c:320:15: warning: use location
    buf[len++] = ch;
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_190 = VDEF <.MEM_189>
username_145 = cmd_string_string (buf_40, &p, 47, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:218:6: warning: Use after free error!: free location 
   if ((username = cmd_string_string(s, p, '/', 0)) == NULL)
      ^
buf_69 = PHI <_16(10), buf_40(15), buf_40(55), buf_40(56), buf_40(58), buf_40(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
buf_69 = PHI <_16(10), buf_40(15), buf_40(55), buf_40(56), buf_40(58), buf_40(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_198 = VDEF <.MEM_187>
t_76 = cmd_string_variable (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:266:7: warning: Use after free error!: free location 
    if ((t = cmd_string_variable(s, &p)) == NULL)
       ^
buf_69 = PHI <_16(10), buf_40(15), buf_40(55), buf_40(56), buf_40(58), buf_40(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_200 = VDEF <.MEM_187>
t_75 = cmd_string_string (buf_40, &p, 34, 1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:262:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '"', 1)) == NULL)
       ^
buf_69 = PHI <_16(10), buf_40(15), buf_40(55), buf_40(56), buf_40(58), buf_40(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_197 = VDEF <.MEM_187>
t_74 = cmd_string_string (buf_40, &p, 39, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:258:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '\'', 0)) == NULL)
       ^
buf_69 = PHI <_16(10), buf_40(15), buf_40(55), buf_40(56), buf_40(58), buf_40(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
buf_69 = PHI <_16(10), buf_40(15), buf_40(55), buf_40(56), buf_40(58), buf_40(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_69 = PHI <_16(10), buf_40(15), buf_40(55), buf_40(56), buf_40(58), buf_40(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
buf_69 = PHI <_16(10), buf_40(15), buf_40(55), buf_40(56), buf_40(58), buf_40(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: Use after free error!: free location 
   free(argv);
   ^
buf_69 = PHI <_16(10), buf_40(15), buf_40(55), buf_40(56), buf_40(58), buf_40(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_190 = VDEF <.MEM_189>
username_145 = cmd_string_string (buf_40, &p, 47, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:218:6: warning: Use after free error!: free location 
   if ((username = cmd_string_string(s, p, '/', 0)) == NULL)
      ^
buf_55 = PHI <buf_71(D)(3), buf_69(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
buf_55 = PHI <buf_71(D)(3), buf_69(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_198 = VDEF <.MEM_187>
t_76 = cmd_string_variable (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:266:7: warning: Use after free error!: free location 
    if ((t = cmd_string_variable(s, &p)) == NULL)
       ^
buf_55 = PHI <buf_71(D)(3), buf_69(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_200 = VDEF <.MEM_187>
t_75 = cmd_string_string (buf_40, &p, 34, 1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:262:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '"', 1)) == NULL)
       ^
buf_55 = PHI <buf_71(D)(3), buf_69(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_197 = VDEF <.MEM_187>
t_74 = cmd_string_string (buf_40, &p, 39, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:258:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '\'', 0)) == NULL)
       ^
buf_55 = PHI <buf_71(D)(3), buf_69(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
buf_55 = PHI <buf_71(D)(3), buf_69(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_55 = PHI <buf_71(D)(3), buf_69(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
buf_55 = PHI <buf_71(D)(3), buf_69(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: Use after free error!: free location 
   free(argv);
   ^
buf_55 = PHI <buf_71(D)(3), buf_69(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_190 = VDEF <.MEM_189>
username_145 = cmd_string_string (buf_40, &p, 47, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:218:6: warning: Use after free error!: free location 
   if ((username = cmd_string_string(s, p, '/', 0)) == NULL)
      ^
# .MEM_176 = VDEF <.MEM_169>
_64 = __fgets_alias (buf_55, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
# .MEM_176 = VDEF <.MEM_169>
_64 = __fgets_alias (buf_55, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_198 = VDEF <.MEM_187>
t_76 = cmd_string_variable (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:266:7: warning: Use after free error!: free location 
    if ((t = cmd_string_variable(s, &p)) == NULL)
       ^
# .MEM_176 = VDEF <.MEM_169>
_64 = __fgets_alias (buf_55, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_200 = VDEF <.MEM_187>
t_75 = cmd_string_string (buf_40, &p, 34, 1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:262:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '"', 1)) == NULL)
       ^
# .MEM_176 = VDEF <.MEM_169>
_64 = __fgets_alias (buf_55, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_197 = VDEF <.MEM_187>
t_74 = cmd_string_string (buf_40, &p, 39, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:258:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '\'', 0)) == NULL)
       ^
# .MEM_176 = VDEF <.MEM_169>
_64 = __fgets_alias (buf_55, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
# .MEM_176 = VDEF <.MEM_169>
_64 = __fgets_alias (buf_55, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: Use after free error!: free location 
  free(buf);
  ^
# .MEM_176 = VDEF <.MEM_169>
_64 = __fgets_alias (buf_55, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
# .MEM_176 = VDEF <.MEM_169>
_64 = __fgets_alias (buf_55, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: Use after free error!: free location 
   free(argv);
   ^
# .MEM_176 = VDEF <.MEM_169>
_64 = __fgets_alias (buf_55, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_190 = VDEF <.MEM_189>
username_145 = cmd_string_string (buf_40, &p, 47, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:218:6: warning: Use after free error!: free location 
   if ((username = cmd_string_string(s, p, '/', 0)) == NULL)
      ^
_16 = PHI <_59(64), _63(66), _64(67)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
_16 = PHI <_59(64), _63(66), _64(67)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_198 = VDEF <.MEM_187>
t_76 = cmd_string_variable (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:266:7: warning: Use after free error!: free location 
    if ((t = cmd_string_variable(s, &p)) == NULL)
       ^
_16 = PHI <_59(64), _63(66), _64(67)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_200 = VDEF <.MEM_187>
t_75 = cmd_string_string (buf_40, &p, 34, 1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:262:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '"', 1)) == NULL)
       ^
_16 = PHI <_59(64), _63(66), _64(67)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_197 = VDEF <.MEM_187>
t_74 = cmd_string_string (buf_40, &p, 39, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:258:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '\'', 0)) == NULL)
       ^
_16 = PHI <_59(64), _63(66), _64(67)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
_16 = PHI <_59(64), _63(66), _64(67)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: Use after free error!: free location 
  free(buf);
  ^
_16 = PHI <_59(64), _63(66), _64(67)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
_16 = PHI <_59(64), _63(66), _64(67)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: Use after free error!: free location 
   free(argv);
   ^
_16 = PHI <_59(64), _63(66), _64(67)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_190 = VDEF <.MEM_189>
username_145 = cmd_string_string (buf_40, &p, 47, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:218:6: warning: Use after free error!: free location 
   if ((username = cmd_string_string(s, p, '/', 0)) == NULL)
      ^
# .MEM_174 = VDEF <.MEM_169>
_63 = __fgets_chk_warn (buf_55, _62, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
# .MEM_174 = VDEF <.MEM_169>
_63 = __fgets_chk_warn (buf_55, _62, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_198 = VDEF <.MEM_187>
t_76 = cmd_string_variable (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:266:7: warning: Use after free error!: free location 
    if ((t = cmd_string_variable(s, &p)) == NULL)
       ^
# .MEM_174 = VDEF <.MEM_169>
_63 = __fgets_chk_warn (buf_55, _62, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_200 = VDEF <.MEM_187>
t_75 = cmd_string_string (buf_40, &p, 34, 1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:262:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '"', 1)) == NULL)
       ^
# .MEM_174 = VDEF <.MEM_169>
_63 = __fgets_chk_warn (buf_55, _62, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_197 = VDEF <.MEM_187>
t_74 = cmd_string_string (buf_40, &p, 39, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:258:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '\'', 0)) == NULL)
       ^
# .MEM_174 = VDEF <.MEM_169>
_63 = __fgets_chk_warn (buf_55, _62, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
# .MEM_174 = VDEF <.MEM_169>
_63 = __fgets_chk_warn (buf_55, _62, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: Use after free error!: free location 
  free(buf);
  ^
# .MEM_174 = VDEF <.MEM_169>
_63 = __fgets_chk_warn (buf_55, _62, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
# .MEM_174 = VDEF <.MEM_169>
_63 = __fgets_chk_warn (buf_55, _62, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: Use after free error!: free location 
   free(argv);
   ^
# .MEM_174 = VDEF <.MEM_169>
_63 = __fgets_chk_warn (buf_55, _62, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_190 = VDEF <.MEM_189>
username_145 = cmd_string_string (buf_40, &p, 47, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:218:6: warning: Use after free error!: free location 
   if ((username = cmd_string_string(s, p, '/', 0)) == NULL)
      ^
# .MEM_177 = VDEF <.MEM_170>
fclose (f_11);
./benchmarks/tmux/leak_10/tmux_leak_10.c:430:2: warning: use location
  fclose(f);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
# .MEM_177 = VDEF <.MEM_170>
fclose (f_11);
./benchmarks/tmux/leak_10/tmux_leak_10.c:430:2: warning: use location
  fclose(f);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_198 = VDEF <.MEM_187>
t_76 = cmd_string_variable (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:266:7: warning: Use after free error!: free location 
    if ((t = cmd_string_variable(s, &p)) == NULL)
       ^
# .MEM_177 = VDEF <.MEM_170>
fclose (f_11);
./benchmarks/tmux/leak_10/tmux_leak_10.c:430:2: warning: use location
  fclose(f);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_200 = VDEF <.MEM_187>
t_75 = cmd_string_string (buf_40, &p, 34, 1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:262:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '"', 1)) == NULL)
       ^
# .MEM_177 = VDEF <.MEM_170>
fclose (f_11);
./benchmarks/tmux/leak_10/tmux_leak_10.c:430:2: warning: use location
  fclose(f);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_197 = VDEF <.MEM_187>
t_74 = cmd_string_string (buf_40, &p, 39, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:258:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '\'', 0)) == NULL)
       ^
# .MEM_177 = VDEF <.MEM_170>
fclose (f_11);
./benchmarks/tmux/leak_10/tmux_leak_10.c:430:2: warning: use location
  fclose(f);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
# .MEM_177 = VDEF <.MEM_170>
fclose (f_11);
./benchmarks/tmux/leak_10/tmux_leak_10.c:430:2: warning: use location
  fclose(f);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: Use after free error!: free location 
  free(buf);
  ^
# .MEM_177 = VDEF <.MEM_170>
fclose (f_11);
./benchmarks/tmux/leak_10/tmux_leak_10.c:430:2: warning: use location
  fclose(f);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
# .MEM_177 = VDEF <.MEM_170>
fclose (f_11);
./benchmarks/tmux/leak_10/tmux_leak_10.c:430:2: warning: use location
  fclose(f);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: Use after free error!: free location 
   free(argv);
   ^
# .MEM_177 = VDEF <.MEM_170>
fclose (f_11);
./benchmarks/tmux/leak_10/tmux_leak_10.c:430:2: warning: use location
  fclose(f);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_190 = VDEF <.MEM_189>
username_145 = cmd_string_string (buf_40, &p, 47, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:218:6: warning: Use after free error!: free location 
   if ((username = cmd_string_string(s, p, '/', 0)) == NULL)
      ^
# .MEM_175 = VDEF <.MEM_169>
_59 = __fgets_chk (buf_55, _58, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
# .MEM_175 = VDEF <.MEM_169>
_59 = __fgets_chk (buf_55, _58, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_198 = VDEF <.MEM_187>
t_76 = cmd_string_variable (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:266:7: warning: Use after free error!: free location 
    if ((t = cmd_string_variable(s, &p)) == NULL)
       ^
# .MEM_175 = VDEF <.MEM_169>
_59 = __fgets_chk (buf_55, _58, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_200 = VDEF <.MEM_187>
t_75 = cmd_string_string (buf_40, &p, 34, 1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:262:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '"', 1)) == NULL)
       ^
# .MEM_175 = VDEF <.MEM_169>
_59 = __fgets_chk (buf_55, _58, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_197 = VDEF <.MEM_187>
t_74 = cmd_string_string (buf_40, &p, 39, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:258:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '\'', 0)) == NULL)
       ^
# .MEM_175 = VDEF <.MEM_169>
_59 = __fgets_chk (buf_55, _58, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
# .MEM_175 = VDEF <.MEM_169>
_59 = __fgets_chk (buf_55, _58, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: Use after free error!: free location 
  free(buf);
  ^
# .MEM_175 = VDEF <.MEM_169>
_59 = __fgets_chk (buf_55, _58, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
# .MEM_175 = VDEF <.MEM_169>
_59 = __fgets_chk (buf_55, _58, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: Use after free error!: free location 
   free(argv);
   ^
# .MEM_175 = VDEF <.MEM_169>
_59 = __fgets_chk (buf_55, _58, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_190 = VDEF <.MEM_189>
username_145 = cmd_string_string (buf_40, &p, 47, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:218:6: warning: Use after free error!: free location 
   if ((username = cmd_string_string(s, p, '/', 0)) == NULL)
      ^
_57 = __builtin_constant_p (_54);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
_57 = __builtin_constant_p (_54);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_198 = VDEF <.MEM_187>
t_76 = cmd_string_variable (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:266:7: warning: Use after free error!: free location 
    if ((t = cmd_string_variable(s, &p)) == NULL)
       ^
_57 = __builtin_constant_p (_54);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_200 = VDEF <.MEM_187>
t_75 = cmd_string_string (buf_40, &p, 34, 1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:262:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '"', 1)) == NULL)
       ^
_57 = __builtin_constant_p (_54);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_197 = VDEF <.MEM_187>
t_74 = cmd_string_string (buf_40, &p, 39, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:258:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '\'', 0)) == NULL)
       ^
_57 = __builtin_constant_p (_54);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
_57 = __builtin_constant_p (_54);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: Use after free error!: free location 
  free(buf);
  ^
_57 = __builtin_constant_p (_54);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
_57 = __builtin_constant_p (_54);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: Use after free error!: free location 
   free(argv);
   ^
_57 = __builtin_constant_p (_54);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_190 = VDEF <.MEM_189>
username_145 = cmd_string_string (buf_40, &p, 47, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:218:6: warning: Use after free error!: free location 
   if ((username = cmd_string_string(s, p, '/', 0)) == NULL)
      ^
_60 = (long unsigned int) _54;

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
_60 = (long unsigned int) _54;

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_198 = VDEF <.MEM_187>
t_76 = cmd_string_variable (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:266:7: warning: Use after free error!: free location 
    if ((t = cmd_string_variable(s, &p)) == NULL)
       ^
_60 = (long unsigned int) _54;

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_200 = VDEF <.MEM_187>
t_75 = cmd_string_string (buf_40, &p, 34, 1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:262:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '"', 1)) == NULL)
       ^
_60 = (long unsigned int) _54;

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_197 = VDEF <.MEM_187>
t_74 = cmd_string_string (buf_40, &p, 39, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:258:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '\'', 0)) == NULL)
       ^
_60 = (long unsigned int) _54;

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
_60 = (long unsigned int) _54;

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: Use after free error!: free location 
  free(buf);
  ^
_60 = (long unsigned int) _54;

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
_60 = (long unsigned int) _54;

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: Use after free error!: free location 
   free(argv);
   ^
_60 = (long unsigned int) _54;

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_190 = VDEF <.MEM_189>
username_145 = cmd_string_string (buf_40, &p, 47, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:218:6: warning: Use after free error!: free location 
   if ((username = cmd_string_string(s, p, '/', 0)) == NULL)
      ^
if (_60 > _61)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
if (_60 > _61)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_198 = VDEF <.MEM_187>
t_76 = cmd_string_variable (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:266:7: warning: Use after free error!: free location 
    if ((t = cmd_string_variable(s, &p)) == NULL)
       ^
if (_60 > _61)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_200 = VDEF <.MEM_187>
t_75 = cmd_string_string (buf_40, &p, 34, 1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:262:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '"', 1)) == NULL)
       ^
if (_60 > _61)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_197 = VDEF <.MEM_187>
t_74 = cmd_string_string (buf_40, &p, 39, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:258:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '\'', 0)) == NULL)
       ^
if (_60 > _61)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
if (_60 > _61)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: Use after free error!: free location 
  free(buf);
  ^
if (_60 > _61)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
if (_60 > _61)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: Use after free error!: free location 
   free(argv);
   ^
if (_60 > _61)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_190 = VDEF <.MEM_189>
username_145 = cmd_string_string (buf_40, &p, 47, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:218:6: warning: Use after free error!: free location 
   if ((username = cmd_string_string(s, p, '/', 0)) == NULL)
      ^
# VUSE <.MEM_169>
_56 = __builtin_object_size (buf_55, 1);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
# VUSE <.MEM_169>
_56 = __builtin_object_size (buf_55, 1);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_198 = VDEF <.MEM_187>
t_76 = cmd_string_variable (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:266:7: warning: Use after free error!: free location 
    if ((t = cmd_string_variable(s, &p)) == NULL)
       ^
# VUSE <.MEM_169>
_56 = __builtin_object_size (buf_55, 1);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_200 = VDEF <.MEM_187>
t_75 = cmd_string_string (buf_40, &p, 34, 1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:262:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '"', 1)) == NULL)
       ^
# VUSE <.MEM_169>
_56 = __builtin_object_size (buf_55, 1);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_197 = VDEF <.MEM_187>
t_74 = cmd_string_string (buf_40, &p, 39, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:258:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '\'', 0)) == NULL)
       ^
# VUSE <.MEM_169>
_56 = __builtin_object_size (buf_55, 1);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
# VUSE <.MEM_169>
_56 = __builtin_object_size (buf_55, 1);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: Use after free error!: free location 
  free(buf);
  ^
# VUSE <.MEM_169>
_56 = __builtin_object_size (buf_55, 1);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
# VUSE <.MEM_169>
_56 = __builtin_object_size (buf_55, 1);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: Use after free error!: free location 
   free(argv);
   ^
# VUSE <.MEM_169>
_56 = __builtin_object_size (buf_55, 1);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_190 = VDEF <.MEM_189>
username_145 = cmd_string_string (buf_40, &p, 47, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:218:6: warning: Use after free error!: free location 
   if ((username = cmd_string_string(s, p, '/', 0)) == NULL)
      ^
if (_56 != 18446744073709551615)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
if (_56 != 18446744073709551615)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_198 = VDEF <.MEM_187>
t_76 = cmd_string_variable (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:266:7: warning: Use after free error!: free location 
    if ((t = cmd_string_variable(s, &p)) == NULL)
       ^
if (_56 != 18446744073709551615)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_200 = VDEF <.MEM_187>
t_75 = cmd_string_string (buf_40, &p, 34, 1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:262:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '"', 1)) == NULL)
       ^
if (_56 != 18446744073709551615)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_197 = VDEF <.MEM_187>
t_74 = cmd_string_string (buf_40, &p, 39, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:258:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '\'', 0)) == NULL)
       ^
if (_56 != 18446744073709551615)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
if (_56 != 18446744073709551615)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: Use after free error!: free location 
  free(buf);
  ^
if (_56 != 18446744073709551615)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
if (_56 != 18446744073709551615)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: Use after free error!: free location 
   free(argv);
   ^
if (_56 != 18446744073709551615)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_198 = VDEF <.MEM_187>
t_76 = cmd_string_variable (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:266:7: warning: Use after free error!: free location 
    if ((t = cmd_string_variable(s, &p)) == NULL)
       ^
# VUSE <.MEM_188>
_154 = p;
./benchmarks/tmux/leak_10/tmux_leak_10.c:76:3: warning: use location
  (*p)--;
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_200 = VDEF <.MEM_187>
t_75 = cmd_string_string (buf_40, &p, 34, 1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:262:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '"', 1)) == NULL)
       ^
# VUSE <.MEM_188>
_154 = p;
./benchmarks/tmux/leak_10/tmux_leak_10.c:76:3: warning: use location
  (*p)--;
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_197 = VDEF <.MEM_187>
t_74 = cmd_string_string (buf_40, &p, 39, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:258:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '\'', 0)) == NULL)
       ^
# VUSE <.MEM_188>
_154 = p;
./benchmarks/tmux/leak_10/tmux_leak_10.c:76:3: warning: use location
  (*p)--;
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_198 = VDEF <.MEM_187>
t_76 = cmd_string_variable (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:266:7: warning: Use after free error!: free location 
    if ((t = cmd_string_variable(s, &p)) == NULL)
       ^
_155 = _154 + 18446744073709551615;
./benchmarks/tmux/leak_10/tmux_leak_10.c:76:6: warning: use location
  (*p)--;
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_200 = VDEF <.MEM_187>
t_75 = cmd_string_string (buf_40, &p, 34, 1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:262:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '"', 1)) == NULL)
       ^
_155 = _154 + 18446744073709551615;
./benchmarks/tmux/leak_10/tmux_leak_10.c:76:6: warning: use location
  (*p)--;
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_197 = VDEF <.MEM_187>
t_74 = cmd_string_string (buf_40, &p, 39, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:258:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '\'', 0)) == NULL)
       ^
_155 = _154 + 18446744073709551615;
./benchmarks/tmux/leak_10/tmux_leak_10.c:76:6: warning: use location
  (*p)--;
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_198 = VDEF <.MEM_187>
t_76 = cmd_string_variable (buf_40, &p);
./benchmarks/tmux/leak_10/tmux_leak_10.c:266:7: warning: Use after free error!: free location 
    if ((t = cmd_string_variable(s, &p)) == NULL)
       ^
# .MEM_189 = VDEF <.MEM_188>
p = _155;
./benchmarks/tmux/leak_10/tmux_leak_10.c:76:6: warning: use location
  (*p)--;
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_200 = VDEF <.MEM_187>
t_75 = cmd_string_string (buf_40, &p, 34, 1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:262:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '"', 1)) == NULL)
       ^
# .MEM_189 = VDEF <.MEM_188>
p = _155;
./benchmarks/tmux/leak_10/tmux_leak_10.c:76:6: warning: use location
  (*p)--;
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_197 = VDEF <.MEM_187>
t_74 = cmd_string_string (buf_40, &p, 39, 0);
./benchmarks/tmux/leak_10/tmux_leak_10.c:258:7: warning: Use after free error!: free location 
    if ((t = cmd_string_string(s, &p, '\'', 0)) == NULL)
       ^
# .MEM_189 = VDEF <.MEM_188>
p = _155;
./benchmarks/tmux/leak_10/tmux_leak_10.c:76:6: warning: use location
  (*p)--;
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:4 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;31m    this function with other function alias that other function return value is heap-object [0m
[40;31m  	possible double free :19 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd7a4210318
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a420e000 home>
    def_stmt home_150 = PHI <home_139(37), home_144(39), home_153(43)>
    version 150
    ptr-info 0x7fd7a4216810>
home_150 = PHI <home_139(37), home_144(39), home_153(43)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_151 = strdup (home_150);
./benchmarks/tmux/leak_10/tmux_leak_10.c:227:10: warning: use location
  return (strdup(home));
          ^
this stmt is child function---strdup-----

 ================== trace ================== 
 <ssa_name 0x7fd7a4210318
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a420e000 home>
    def_stmt home_150 = PHI <home_139(37), home_144(39), home_153(43)>
    version 150
    ptr-info 0x7fd7a4216810>
trace fucntion name:strdup 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_152 = PHI <0B(38), 0B(40), 0B(44), _151(45)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_196 = _152;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
t_110 = _196;
./benchmarks/tmux/leak_10/tmux_leak_10.c:309:7: warning: use location
     t = cmd_string_expand_tilde(s, &p);
       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (t_110 == 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:310:8: warning: use location
     if (t == NULL)
        ^
if (t_110 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:310:8: warning: use location
Cond in fucntion main basic block 46
 ================== possible direct basic block ================= 
from main basic block 49
 ================== possible direct basic block ================= 
from main basic block 17
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7a4210318
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a420e000 home>
    def_stmt home_150 = PHI <home_139(37), home_144(39), home_153(43)>
    version 150
    ptr-info 0x7fd7a4216810>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: use location
   free(username);
   ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: use location
  free(buf);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: use location
    free(argv[i]);
    ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: use location
   free(argv);
   ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: use location
    free(copy);
    ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: use location
   free(copy);
   ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
# .MEM_195 = VDEF <.MEM_163>
_151 = strdup (home_150);
./benchmarks/tmux/leak_10/tmux_leak_10.c:227:10: warning: use location
  return (strdup(home));
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
_152 = PHI <0B(38), 0B(40), 0B(44), _151(45)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: Use after free error!: free location 
  free(buf);
  ^
_152 = PHI <0B(38), 0B(40), 0B(44), _151(45)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
_152 = PHI <0B(38), 0B(40), 0B(44), _151(45)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: Use after free error!: free location 
   free(argv);
   ^
_152 = PHI <0B(38), 0B(40), 0B(44), _151(45)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
_152 = PHI <0B(38), 0B(40), 0B(44), _151(45)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
_152 = PHI <0B(38), 0B(40), 0B(44), _151(45)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
_196 = _152;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
t_110 = _196;
./benchmarks/tmux/leak_10/tmux_leak_10.c:309:7: warning: use location
     t = cmd_string_expand_tilde(s, &p);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
if (t_110 == 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:310:8: warning: use location
     if (t == NULL)
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:6 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd7a41f3168
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41f11b0 buf>
    def_stmt buf_55 = PHI <buf_71(D)(3), buf_69(60)>
    version 55
    ptr-info 0x7fd7a4216438>
buf_55 = PHI <buf_71(D)(3), buf_69(60)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = __fgets_alias (buf_55, _54, f_11);
this stmt is child function---__fgets_alias-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f3168
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41f11b0 buf>
    def_stmt buf_55 = PHI <buf_71(D)(3), buf_69(60)>
    version 55
    ptr-info 0x7fd7a4216438>
trace fucntion name:__fgets_alias 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = PHI <_59(64), _63(66), _64(67)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
memcpy (_24, _16, len_21);
./benchmarks/tmux/leak_10/tmux_leak_10.c:379:3: warning: use location
   memcpy(line + oldlen, buf, len);
   ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f3168
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41f11b0 buf>
    def_stmt buf_55 = PHI <buf_71(D)(3), buf_69(60)>
    version 55
    ptr-info 0x7fd7a4216438>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = __printf_chk (1, "%s: %s", "path", _16);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f3168
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41f11b0 buf>
    def_stmt buf_55 = PHI <buf_71(D)(3), buf_69(60)>
    version 55
    ptr-info 0x7fd7a4216438>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_69 = PHI <_16(10), buf_40(15), buf_40(55), buf_40(56), buf_40(58), buf_40(59)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_55 = PHI <buf_71(D)(3), buf_69(60)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_16 != 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:363:8: warning: use location
  while ((buf = fgets(buf, len, f))) {
        ^
if (_16 != 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:363:8: warning: use location
Cond in fucntion main basic block 68
 ================== possible direct basic block ================= 
from main basic block 4
 ================== possible direct basic block ================= 
from main basic block 69
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = __fgets_chk_warn (buf_55, _62, _54, f_11);
this stmt is child function---__fgets_chk_warn-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f3168
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41f11b0 buf>
    def_stmt buf_55 = PHI <buf_71(D)(3), buf_69(60)>
    version 55
    ptr-info 0x7fd7a4216438>
trace fucntion name:__fgets_chk_warn 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_177 = VDEF <.MEM_170>
fclose (f_11);
bb index := 69
# VUSE <.MEM_15>
return _8;
In function ‘main’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 69 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_177 = VDEF <.MEM_170>
fclose (f_11);
bb index := 69
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 69 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_177 = VDEF <.MEM_170>
fclose (f_11);
bb index := 69
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 69 ,possiable got to succ := 70

======================================================================
fclose (f_11);
At top level:
./benchmarks/tmux/leak_10/tmux_leak_10.c:430:2: warning: use location
  fclose(f);
  ^
this stmt is child function---fclose-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f3168
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41f11b0 buf>
    def_stmt buf_55 = PHI <buf_71(D)(3), buf_69(60)>
    version 55
    ptr-info 0x7fd7a4216438>
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = __fgets_chk (buf_55, _58, _54, f_11);
this stmt is child function---__fgets_chk-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f3168
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41f11b0 buf>
    def_stmt buf_55 = PHI <buf_71(D)(3), buf_69(60)>
    version 55
    ptr-info 0x7fd7a4216438>
trace fucntion name:__fgets_chk 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_11 == 0B)
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_11 == 0B)
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_11 == 0B)
bb index := 2
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_11 == 0B)
bb index := 2
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_11 == 0B)
bb index := 2
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_11 == 0B)
bb index := 2
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_11 == 0B)
bb index := 2
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_11 == 0B)
bb index := 2
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 70

======================================================================
if (f_11 == 0B)
At top level:
./benchmarks/tmux/leak_10/tmux_leak_10.c:354:5: warning: use location
  if ((f = fopen(path, "rb")) == NULL) {
     ^
if (f_11 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:354:5: warning: use location
Cond in fucntion main basic block 2
 ================== possible direct basic block ================= 
from main basic block 70
 ================== possible direct basic block ================= 
from main basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_57 = __builtin_constant_p (_54);
this stmt is child function---__builtin_constant_p-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f3168
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41f11b0 buf>
    def_stmt buf_55 = PHI <buf_71(D)(3), buf_69(60)>
    version 55
    ptr-info 0x7fd7a4216438>
trace fucntion name:__builtin_constant_p 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_57 == 0)
if (_57 == 0)

 ================== find cond branch ================= 
Cond in fucntion main basic block 62
 ================== possible direct basic block ================= 
from main basic block 64
 ================== possible direct basic block ================= 
from main basic block 63
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = (long unsigned int) _54;

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_60 > _61)
if (_60 > _61)

 ================== find cond branch ================= 
Cond in fucntion main basic block 65
 ================== possible direct basic block ================= 
from main basic block 66
 ================== possible direct basic block ================= 
from main basic block 67
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_56 = __builtin_object_size (buf_55, 1);
this stmt is child function---__builtin_object_size-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f3168
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41f11b0 buf>
    def_stmt buf_55 = PHI <buf_71(D)(3), buf_69(60)>
    version 55
    ptr-info 0x7fd7a4216438>
trace fucntion name:__builtin_object_size 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_56 != 18446744073709551615)
if (_56 != 18446744073709551615)

 ================== find cond branch ================= 
Cond in fucntion main basic block 61
 ================== possible direct basic block ================= 
from main basic block 62
 ================== possible direct basic block ================= 
from main basic block 67
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7a41f3168
    type <pointer_type 0x7fd7a418ea80
        type <integer_type 0x7fd7a418e9d8 char public string-flag QI
            size <integer_cst 0x7fd7a4664cd8 constant 8>
            unit size <integer_cst 0x7fd7a4664cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fd7a46783f0 precision 8 min <integer_cst 0x7fd7a4191180 -128> max <integer_cst 0x7fd7a4191168 127> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a418ea80>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fd7a418eb28>>
    var <var_decl 0x7fd7a41f11b0 buf>
    def_stmt buf_55 = PHI <buf_71(D)(3), buf_69(60)>
    version 55
    ptr-info 0x7fd7a4216438>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: use location
   free(username);
   ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: use location
  free(buf);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: use location
    free(argv[i]);
    ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: use location
   free(argv);
   ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: use location
    free(copy);
    ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: use location
   free(copy);
   ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
# .MEM_176 = VDEF <.MEM_169>
_64 = __fgets_alias (buf_55, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: Use after free error!: free location 
  free(buf);
  ^
# .MEM_176 = VDEF <.MEM_169>
_64 = __fgets_alias (buf_55, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
# .MEM_176 = VDEF <.MEM_169>
_64 = __fgets_alias (buf_55, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: Use after free error!: free location 
   free(argv);
   ^
# .MEM_176 = VDEF <.MEM_169>
_64 = __fgets_alias (buf_55, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
# .MEM_176 = VDEF <.MEM_169>
_64 = __fgets_alias (buf_55, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
# .MEM_176 = VDEF <.MEM_169>
_64 = __fgets_alias (buf_55, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
_16 = PHI <_59(64), _63(66), _64(67)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: Use after free error!: free location 
  free(buf);
  ^
_16 = PHI <_59(64), _63(66), _64(67)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
_16 = PHI <_59(64), _63(66), _64(67)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: Use after free error!: free location 
   free(argv);
   ^
_16 = PHI <_59(64), _63(66), _64(67)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
_16 = PHI <_59(64), _63(66), _64(67)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
_16 = PHI <_59(64), _63(66), _64(67)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
buf_69 = PHI <_16(10), buf_40(15), buf_40(55), buf_40(56), buf_40(58), buf_40(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_69 = PHI <_16(10), buf_40(15), buf_40(55), buf_40(56), buf_40(58), buf_40(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
buf_69 = PHI <_16(10), buf_40(15), buf_40(55), buf_40(56), buf_40(58), buf_40(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: Use after free error!: free location 
   free(argv);
   ^
buf_69 = PHI <_16(10), buf_40(15), buf_40(55), buf_40(56), buf_40(58), buf_40(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
buf_69 = PHI <_16(10), buf_40(15), buf_40(55), buf_40(56), buf_40(58), buf_40(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
buf_69 = PHI <_16(10), buf_40(15), buf_40(55), buf_40(56), buf_40(58), buf_40(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
buf_55 = PHI <buf_71(D)(3), buf_69(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_55 = PHI <buf_71(D)(3), buf_69(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
buf_55 = PHI <buf_71(D)(3), buf_69(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: Use after free error!: free location 
   free(argv);
   ^
buf_55 = PHI <buf_71(D)(3), buf_69(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
buf_55 = PHI <buf_71(D)(3), buf_69(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
buf_55 = PHI <buf_71(D)(3), buf_69(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
if (_16 != 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:363:8: warning: use location
  while ((buf = fgets(buf, len, f))) {
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: Use after free error!: free location 
  free(buf);
  ^
if (_16 != 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:363:8: warning: use location
  while ((buf = fgets(buf, len, f))) {
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
if (_16 != 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:363:8: warning: use location
  while ((buf = fgets(buf, len, f))) {
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: Use after free error!: free location 
   free(argv);
   ^
if (_16 != 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:363:8: warning: use location
  while ((buf = fgets(buf, len, f))) {
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
if (_16 != 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:363:8: warning: use location
  while ((buf = fgets(buf, len, f))) {
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
if (_16 != 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:363:8: warning: use location
  while ((buf = fgets(buf, len, f))) {
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
# .MEM_174 = VDEF <.MEM_169>
_63 = __fgets_chk_warn (buf_55, _62, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: Use after free error!: free location 
  free(buf);
  ^
# .MEM_174 = VDEF <.MEM_169>
_63 = __fgets_chk_warn (buf_55, _62, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
# .MEM_174 = VDEF <.MEM_169>
_63 = __fgets_chk_warn (buf_55, _62, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: Use after free error!: free location 
   free(argv);
   ^
# .MEM_174 = VDEF <.MEM_169>
_63 = __fgets_chk_warn (buf_55, _62, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
# .MEM_174 = VDEF <.MEM_169>
_63 = __fgets_chk_warn (buf_55, _62, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
# .MEM_174 = VDEF <.MEM_169>
_63 = __fgets_chk_warn (buf_55, _62, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
# .MEM_177 = VDEF <.MEM_170>
fclose (f_11);
./benchmarks/tmux/leak_10/tmux_leak_10.c:430:2: warning: use location
  fclose(f);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: Use after free error!: free location 
  free(buf);
  ^
# .MEM_177 = VDEF <.MEM_170>
fclose (f_11);
./benchmarks/tmux/leak_10/tmux_leak_10.c:430:2: warning: use location
  fclose(f);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
# .MEM_177 = VDEF <.MEM_170>
fclose (f_11);
./benchmarks/tmux/leak_10/tmux_leak_10.c:430:2: warning: use location
  fclose(f);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: Use after free error!: free location 
   free(argv);
   ^
# .MEM_177 = VDEF <.MEM_170>
fclose (f_11);
./benchmarks/tmux/leak_10/tmux_leak_10.c:430:2: warning: use location
  fclose(f);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
# .MEM_177 = VDEF <.MEM_170>
fclose (f_11);
./benchmarks/tmux/leak_10/tmux_leak_10.c:430:2: warning: use location
  fclose(f);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
# .MEM_177 = VDEF <.MEM_170>
fclose (f_11);
./benchmarks/tmux/leak_10/tmux_leak_10.c:430:2: warning: use location
  fclose(f);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
# .MEM_175 = VDEF <.MEM_169>
_59 = __fgets_chk (buf_55, _58, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: Use after free error!: free location 
  free(buf);
  ^
# .MEM_175 = VDEF <.MEM_169>
_59 = __fgets_chk (buf_55, _58, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
# .MEM_175 = VDEF <.MEM_169>
_59 = __fgets_chk (buf_55, _58, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: Use after free error!: free location 
   free(argv);
   ^
# .MEM_175 = VDEF <.MEM_169>
_59 = __fgets_chk (buf_55, _58, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
# .MEM_175 = VDEF <.MEM_169>
_59 = __fgets_chk (buf_55, _58, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
# .MEM_175 = VDEF <.MEM_169>
_59 = __fgets_chk (buf_55, _58, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
_57 = __builtin_constant_p (_54);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: Use after free error!: free location 
  free(buf);
  ^
_57 = __builtin_constant_p (_54);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
_57 = __builtin_constant_p (_54);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: Use after free error!: free location 
   free(argv);
   ^
_57 = __builtin_constant_p (_54);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
_57 = __builtin_constant_p (_54);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
_57 = __builtin_constant_p (_54);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
if (_57 == 0)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: Use after free error!: free location 
  free(buf);
  ^
if (_57 == 0)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
if (_57 == 0)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: Use after free error!: free location 
   free(argv);
   ^
if (_57 == 0)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
if (_57 == 0)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
if (_57 == 0)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
_60 = (long unsigned int) _54;

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: Use after free error!: free location 
  free(buf);
  ^
_60 = (long unsigned int) _54;

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
_60 = (long unsigned int) _54;

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: Use after free error!: free location 
   free(argv);
   ^
_60 = (long unsigned int) _54;

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
_60 = (long unsigned int) _54;

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
_60 = (long unsigned int) _54;

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
if (_60 > _61)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: Use after free error!: free location 
  free(buf);
  ^
if (_60 > _61)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
if (_60 > _61)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: Use after free error!: free location 
   free(argv);
   ^
if (_60 > _61)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
if (_60 > _61)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
if (_60 > _61)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
# VUSE <.MEM_169>
_56 = __builtin_object_size (buf_55, 1);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: Use after free error!: free location 
  free(buf);
  ^
# VUSE <.MEM_169>
_56 = __builtin_object_size (buf_55, 1);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
# VUSE <.MEM_169>
_56 = __builtin_object_size (buf_55, 1);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: Use after free error!: free location 
   free(argv);
   ^
# VUSE <.MEM_169>
_56 = __builtin_object_size (buf_55, 1);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
# VUSE <.MEM_169>
_56 = __builtin_object_size (buf_55, 1);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
# VUSE <.MEM_169>
_56 = __builtin_object_size (buf_55, 1);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
if (_56 != 18446744073709551615)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: Use after free error!: free location 
  free(buf);
  ^
if (_56 != 18446744073709551615)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
if (_56 != 18446744073709551615)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: Use after free error!: free location 
   free(argv);
   ^
if (_56 != 18446744073709551615)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
if (_56 != 18446744073709551615)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
if (_56 != 18446744073709551615)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:6 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd7a41f3120
    type <integer_type 0x7fd7a46785e8 int public SI
        size <integer_cst 0x7fd7a4664e28 constant 32>
        unit size <integer_cst 0x7fd7a4664e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fd7a46785e8 precision 32 min <integer_cst 0x7fd7a4664de0 -2147483648> max <integer_cst 0x7fd7a4664df8 2147483647>
        pointer_to_this <pointer_type 0x7fd7a467fa80>>
   
    def_stmt _54 = (int) len_14;
    version 54>
_54 = (int) len_14;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = __fgets_alias (buf_55, _54, f_11);
this stmt is child function---__fgets_alias-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f3120
    type <integer_type 0x7fd7a46785e8 int public SI
        size <integer_cst 0x7fd7a4664e28 constant 32>
        unit size <integer_cst 0x7fd7a4664e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fd7a46785e8 precision 32 min <integer_cst 0x7fd7a4664de0 -2147483648> max <integer_cst 0x7fd7a4664df8 2147483647>
        pointer_to_this <pointer_type 0x7fd7a467fa80>>
   
    def_stmt _54 = (int) len_14;
    version 54>
trace fucntion name:__fgets_alias 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = PHI <_59(64), _63(66), _64(67)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
memcpy (_24, _16, len_21);
./benchmarks/tmux/leak_10/tmux_leak_10.c:379:3: warning: use location
   memcpy(line + oldlen, buf, len);
   ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f3120
    type <integer_type 0x7fd7a46785e8 int public SI
        size <integer_cst 0x7fd7a4664e28 constant 32>
        unit size <integer_cst 0x7fd7a4664e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fd7a46785e8 precision 32 min <integer_cst 0x7fd7a4664de0 -2147483648> max <integer_cst 0x7fd7a4664df8 2147483647>
        pointer_to_this <pointer_type 0x7fd7a467fa80>>
   
    def_stmt _54 = (int) len_14;
    version 54>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = __printf_chk (1, "%s: %s", "path", _16);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f3120
    type <integer_type 0x7fd7a46785e8 int public SI
        size <integer_cst 0x7fd7a4664e28 constant 32>
        unit size <integer_cst 0x7fd7a4664e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fd7a46785e8 precision 32 min <integer_cst 0x7fd7a4664de0 -2147483648> max <integer_cst 0x7fd7a4664df8 2147483647>
        pointer_to_this <pointer_type 0x7fd7a467fa80>>
   
    def_stmt _54 = (int) len_14;
    version 54>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_69 = PHI <_16(10), buf_40(15), buf_40(55), buf_40(56), buf_40(58), buf_40(59)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_55 = PHI <buf_71(D)(3), buf_69(60)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = __fgets_chk_warn (buf_55, _62, _54, f_11);
this stmt is child function---__fgets_chk_warn-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f3120
    type <integer_type 0x7fd7a46785e8 int public SI
        size <integer_cst 0x7fd7a4664e28 constant 32>
        unit size <integer_cst 0x7fd7a4664e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fd7a46785e8 precision 32 min <integer_cst 0x7fd7a4664de0 -2147483648> max <integer_cst 0x7fd7a4664df8 2147483647>
        pointer_to_this <pointer_type 0x7fd7a467fa80>>
   
    def_stmt _54 = (int) len_14;
    version 54>
trace fucntion name:__fgets_chk_warn 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_177 = VDEF <.MEM_170>
fclose (f_11);
bb index := 69
# VUSE <.MEM_15>
return _8;
In function ‘main’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 69 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_177 = VDEF <.MEM_170>
fclose (f_11);
bb index := 69
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 69 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_177 = VDEF <.MEM_170>
fclose (f_11);
bb index := 69
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 69 ,possiable got to succ := 70

======================================================================
fclose (f_11);
At top level:
./benchmarks/tmux/leak_10/tmux_leak_10.c:430:2: warning: use location
  fclose(f);
  ^
this stmt is child function---fclose-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f3120
    type <integer_type 0x7fd7a46785e8 int public SI
        size <integer_cst 0x7fd7a4664e28 constant 32>
        unit size <integer_cst 0x7fd7a4664e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fd7a46785e8 precision 32 min <integer_cst 0x7fd7a4664de0 -2147483648> max <integer_cst 0x7fd7a4664df8 2147483647>
        pointer_to_this <pointer_type 0x7fd7a467fa80>>
   
    def_stmt _54 = (int) len_14;
    version 54>
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_59 = __fgets_chk (buf_55, _58, _54, f_11);
this stmt is child function---__fgets_chk-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f3120
    type <integer_type 0x7fd7a46785e8 int public SI
        size <integer_cst 0x7fd7a4664e28 constant 32>
        unit size <integer_cst 0x7fd7a4664e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fd7a46785e8 precision 32 min <integer_cst 0x7fd7a4664de0 -2147483648> max <integer_cst 0x7fd7a4664df8 2147483647>
        pointer_to_this <pointer_type 0x7fd7a467fa80>>
   
    def_stmt _54 = (int) len_14;
    version 54>
trace fucntion name:__fgets_chk 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_11 == 0B)
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_11 == 0B)
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_11 == 0B)
bb index := 2
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_11 == 0B)
bb index := 2
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_11 == 0B)
bb index := 2
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_11 == 0B)
bb index := 2
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_11 == 0B)
bb index := 2
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_11 == 0B)
bb index := 2
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 70

======================================================================
if (f_11 == 0B)
At top level:
./benchmarks/tmux/leak_10/tmux_leak_10.c:354:5: warning: use location
  if ((f = fopen(path, "rb")) == NULL) {
     ^
if (f_11 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:354:5: warning: use location
Cond in fucntion main basic block 2
 ================== possible direct basic block ================= 
from main basic block 70
 ================== possible direct basic block ================= 
from main basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_61 = __builtin_object_size (buf_55, 1);
this stmt is child function---__builtin_object_size-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f3120
    type <integer_type 0x7fd7a46785e8 int public SI
        size <integer_cst 0x7fd7a4664e28 constant 32>
        unit size <integer_cst 0x7fd7a4664e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fd7a46785e8 precision 32 min <integer_cst 0x7fd7a4664de0 -2147483648> max <integer_cst 0x7fd7a4664df8 2147483647>
        pointer_to_this <pointer_type 0x7fd7a467fa80>>
   
    def_stmt _54 = (int) len_14;
    version 54>
trace fucntion name:__builtin_object_size 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_56 = __builtin_object_size (buf_55, 1);
this stmt is child function---__builtin_object_size-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f3120
    type <integer_type 0x7fd7a46785e8 int public SI
        size <integer_cst 0x7fd7a4664e28 constant 32>
        unit size <integer_cst 0x7fd7a4664e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fd7a46785e8 precision 32 min <integer_cst 0x7fd7a4664de0 -2147483648> max <integer_cst 0x7fd7a4664df8 2147483647>
        pointer_to_this <pointer_type 0x7fd7a467fa80>>
   
    def_stmt _54 = (int) len_14;
    version 54>
trace fucntion name:__builtin_object_size 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_56 != 18446744073709551615)
if (_56 != 18446744073709551615)

 ================== find cond branch ================= 
Cond in fucntion main basic block 61
 ================== possible direct basic block ================= 
from main basic block 62
 ================== possible direct basic block ================= 
from main basic block 67
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_16 != 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:363:8: warning: use location
  while ((buf = fgets(buf, len, f))) {
        ^
if (_16 != 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:363:8: warning: use location
Cond in fucntion main basic block 68
 ================== possible direct basic block ================= 
from main basic block 4
 ================== possible direct basic block ================= 
from main basic block 69
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_57 = __builtin_constant_p (_54);
this stmt is child function---__builtin_constant_p-----

 ================== trace ================== 
 <ssa_name 0x7fd7a41f3120
    type <integer_type 0x7fd7a46785e8 int public SI
        size <integer_cst 0x7fd7a4664e28 constant 32>
        unit size <integer_cst 0x7fd7a4664e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fd7a46785e8 precision 32 min <integer_cst 0x7fd7a4664de0 -2147483648> max <integer_cst 0x7fd7a4664df8 2147483647>
        pointer_to_this <pointer_type 0x7fd7a467fa80>>
   
    def_stmt _54 = (int) len_14;
    version 54>
trace fucntion name:__builtin_constant_p 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_57 == 0)
if (_57 == 0)

 ================== find cond branch ================= 
Cond in fucntion main basic block 62
 ================== possible direct basic block ================= 
from main basic block 64
 ================== possible direct basic block ================= 
from main basic block 63
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_60 = (long unsigned int) _54;

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd7a41f3120
    type <integer_type 0x7fd7a46785e8 int public SI
        size <integer_cst 0x7fd7a4664e28 constant 32>
        unit size <integer_cst 0x7fd7a4664e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fd7a46785e8 precision 32 min <integer_cst 0x7fd7a4664de0 -2147483648> max <integer_cst 0x7fd7a4664df8 2147483647>
        pointer_to_this <pointer_type 0x7fd7a467fa80>>
   
    def_stmt _54 = (int) len_14;
    version 54>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: use location
   free(username);
   ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: use location
  free(buf);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: use location
    free(argv[i]);
    ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: use location
   free(argv);
   ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: use location
    free(copy);
    ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_218 = VDEF <.MEM_217>
free (_49);
./benchmarks/tmux/leak_10/tmux_leak_10.c:407:4: warning: use location
    free(cause);
    ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: use location
   free(copy);
   ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
# .MEM_176 = VDEF <.MEM_169>
_64 = __fgets_alias (buf_55, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: Use after free error!: free location 
  free(buf);
  ^
# .MEM_176 = VDEF <.MEM_169>
_64 = __fgets_alias (buf_55, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
# .MEM_176 = VDEF <.MEM_169>
_64 = __fgets_alias (buf_55, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: Use after free error!: free location 
   free(argv);
   ^
# .MEM_176 = VDEF <.MEM_169>
_64 = __fgets_alias (buf_55, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
# .MEM_176 = VDEF <.MEM_169>
_64 = __fgets_alias (buf_55, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_218 = VDEF <.MEM_217>
free (_49);
./benchmarks/tmux/leak_10/tmux_leak_10.c:407:4: warning: Use after free error!: free location 
    free(cause);
    ^
# .MEM_176 = VDEF <.MEM_169>
_64 = __fgets_alias (buf_55, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
# .MEM_176 = VDEF <.MEM_169>
_64 = __fgets_alias (buf_55, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
_16 = PHI <_59(64), _63(66), _64(67)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: Use after free error!: free location 
  free(buf);
  ^
_16 = PHI <_59(64), _63(66), _64(67)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
_16 = PHI <_59(64), _63(66), _64(67)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: Use after free error!: free location 
   free(argv);
   ^
_16 = PHI <_59(64), _63(66), _64(67)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
_16 = PHI <_59(64), _63(66), _64(67)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_218 = VDEF <.MEM_217>
free (_49);
./benchmarks/tmux/leak_10/tmux_leak_10.c:407:4: warning: Use after free error!: free location 
    free(cause);
    ^
_16 = PHI <_59(64), _63(66), _64(67)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
_16 = PHI <_59(64), _63(66), _64(67)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
buf_69 = PHI <_16(10), buf_40(15), buf_40(55), buf_40(56), buf_40(58), buf_40(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_69 = PHI <_16(10), buf_40(15), buf_40(55), buf_40(56), buf_40(58), buf_40(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
buf_69 = PHI <_16(10), buf_40(15), buf_40(55), buf_40(56), buf_40(58), buf_40(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: Use after free error!: free location 
   free(argv);
   ^
buf_69 = PHI <_16(10), buf_40(15), buf_40(55), buf_40(56), buf_40(58), buf_40(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
buf_69 = PHI <_16(10), buf_40(15), buf_40(55), buf_40(56), buf_40(58), buf_40(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_218 = VDEF <.MEM_217>
free (_49);
./benchmarks/tmux/leak_10/tmux_leak_10.c:407:4: warning: Use after free error!: free location 
    free(cause);
    ^
buf_69 = PHI <_16(10), buf_40(15), buf_40(55), buf_40(56), buf_40(58), buf_40(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
buf_69 = PHI <_16(10), buf_40(15), buf_40(55), buf_40(56), buf_40(58), buf_40(59)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
buf_55 = PHI <buf_71(D)(3), buf_69(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_55 = PHI <buf_71(D)(3), buf_69(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
buf_55 = PHI <buf_71(D)(3), buf_69(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: Use after free error!: free location 
   free(argv);
   ^
buf_55 = PHI <buf_71(D)(3), buf_69(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
buf_55 = PHI <buf_71(D)(3), buf_69(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_218 = VDEF <.MEM_217>
free (_49);
./benchmarks/tmux/leak_10/tmux_leak_10.c:407:4: warning: Use after free error!: free location 
    free(cause);
    ^
buf_55 = PHI <buf_71(D)(3), buf_69(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
buf_55 = PHI <buf_71(D)(3), buf_69(60)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
# .MEM_174 = VDEF <.MEM_169>
_63 = __fgets_chk_warn (buf_55, _62, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: Use after free error!: free location 
  free(buf);
  ^
# .MEM_174 = VDEF <.MEM_169>
_63 = __fgets_chk_warn (buf_55, _62, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
# .MEM_174 = VDEF <.MEM_169>
_63 = __fgets_chk_warn (buf_55, _62, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: Use after free error!: free location 
   free(argv);
   ^
# .MEM_174 = VDEF <.MEM_169>
_63 = __fgets_chk_warn (buf_55, _62, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
# .MEM_174 = VDEF <.MEM_169>
_63 = __fgets_chk_warn (buf_55, _62, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_218 = VDEF <.MEM_217>
free (_49);
./benchmarks/tmux/leak_10/tmux_leak_10.c:407:4: warning: Use after free error!: free location 
    free(cause);
    ^
# .MEM_174 = VDEF <.MEM_169>
_63 = __fgets_chk_warn (buf_55, _62, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
# .MEM_174 = VDEF <.MEM_169>
_63 = __fgets_chk_warn (buf_55, _62, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
# .MEM_177 = VDEF <.MEM_170>
fclose (f_11);
./benchmarks/tmux/leak_10/tmux_leak_10.c:430:2: warning: use location
  fclose(f);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: Use after free error!: free location 
  free(buf);
  ^
# .MEM_177 = VDEF <.MEM_170>
fclose (f_11);
./benchmarks/tmux/leak_10/tmux_leak_10.c:430:2: warning: use location
  fclose(f);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
# .MEM_177 = VDEF <.MEM_170>
fclose (f_11);
./benchmarks/tmux/leak_10/tmux_leak_10.c:430:2: warning: use location
  fclose(f);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: Use after free error!: free location 
   free(argv);
   ^
# .MEM_177 = VDEF <.MEM_170>
fclose (f_11);
./benchmarks/tmux/leak_10/tmux_leak_10.c:430:2: warning: use location
  fclose(f);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
# .MEM_177 = VDEF <.MEM_170>
fclose (f_11);
./benchmarks/tmux/leak_10/tmux_leak_10.c:430:2: warning: use location
  fclose(f);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_218 = VDEF <.MEM_217>
free (_49);
./benchmarks/tmux/leak_10/tmux_leak_10.c:407:4: warning: Use after free error!: free location 
    free(cause);
    ^
# .MEM_177 = VDEF <.MEM_170>
fclose (f_11);
./benchmarks/tmux/leak_10/tmux_leak_10.c:430:2: warning: use location
  fclose(f);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
# .MEM_177 = VDEF <.MEM_170>
fclose (f_11);
./benchmarks/tmux/leak_10/tmux_leak_10.c:430:2: warning: use location
  fclose(f);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
# .MEM_175 = VDEF <.MEM_169>
_59 = __fgets_chk (buf_55, _58, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: Use after free error!: free location 
  free(buf);
  ^
# .MEM_175 = VDEF <.MEM_169>
_59 = __fgets_chk (buf_55, _58, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
# .MEM_175 = VDEF <.MEM_169>
_59 = __fgets_chk (buf_55, _58, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: Use after free error!: free location 
   free(argv);
   ^
# .MEM_175 = VDEF <.MEM_169>
_59 = __fgets_chk (buf_55, _58, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
# .MEM_175 = VDEF <.MEM_169>
_59 = __fgets_chk (buf_55, _58, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_218 = VDEF <.MEM_217>
free (_49);
./benchmarks/tmux/leak_10/tmux_leak_10.c:407:4: warning: Use after free error!: free location 
    free(cause);
    ^
# .MEM_175 = VDEF <.MEM_169>
_59 = __fgets_chk (buf_55, _58, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
# .MEM_175 = VDEF <.MEM_169>
_59 = __fgets_chk (buf_55, _58, _54, f_11);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
# VUSE <.MEM_169>
_61 = __builtin_object_size (buf_55, 1);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: Use after free error!: free location 
  free(buf);
  ^
# VUSE <.MEM_169>
_61 = __builtin_object_size (buf_55, 1);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
# VUSE <.MEM_169>
_61 = __builtin_object_size (buf_55, 1);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: Use after free error!: free location 
   free(argv);
   ^
# VUSE <.MEM_169>
_61 = __builtin_object_size (buf_55, 1);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
# VUSE <.MEM_169>
_61 = __builtin_object_size (buf_55, 1);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_218 = VDEF <.MEM_217>
free (_49);
./benchmarks/tmux/leak_10/tmux_leak_10.c:407:4: warning: Use after free error!: free location 
    free(cause);
    ^
# VUSE <.MEM_169>
_61 = __builtin_object_size (buf_55, 1);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
# VUSE <.MEM_169>
_61 = __builtin_object_size (buf_55, 1);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
# VUSE <.MEM_169>
_56 = __builtin_object_size (buf_55, 1);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: Use after free error!: free location 
  free(buf);
  ^
# VUSE <.MEM_169>
_56 = __builtin_object_size (buf_55, 1);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
# VUSE <.MEM_169>
_56 = __builtin_object_size (buf_55, 1);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: Use after free error!: free location 
   free(argv);
   ^
# VUSE <.MEM_169>
_56 = __builtin_object_size (buf_55, 1);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
# VUSE <.MEM_169>
_56 = __builtin_object_size (buf_55, 1);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_218 = VDEF <.MEM_217>
free (_49);
./benchmarks/tmux/leak_10/tmux_leak_10.c:407:4: warning: Use after free error!: free location 
    free(cause);
    ^
# VUSE <.MEM_169>
_56 = __builtin_object_size (buf_55, 1);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
# VUSE <.MEM_169>
_56 = __builtin_object_size (buf_55, 1);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
if (_56 != 18446744073709551615)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: Use after free error!: free location 
  free(buf);
  ^
if (_56 != 18446744073709551615)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
if (_56 != 18446744073709551615)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: Use after free error!: free location 
   free(argv);
   ^
if (_56 != 18446744073709551615)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
if (_56 != 18446744073709551615)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_218 = VDEF <.MEM_217>
free (_49);
./benchmarks/tmux/leak_10/tmux_leak_10.c:407:4: warning: Use after free error!: free location 
    free(cause);
    ^
if (_56 != 18446744073709551615)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
if (_56 != 18446744073709551615)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
if (_16 != 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:363:8: warning: use location
  while ((buf = fgets(buf, len, f))) {
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: Use after free error!: free location 
  free(buf);
  ^
if (_16 != 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:363:8: warning: use location
  while ((buf = fgets(buf, len, f))) {
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
if (_16 != 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:363:8: warning: use location
  while ((buf = fgets(buf, len, f))) {
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: Use after free error!: free location 
   free(argv);
   ^
if (_16 != 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:363:8: warning: use location
  while ((buf = fgets(buf, len, f))) {
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
if (_16 != 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:363:8: warning: use location
  while ((buf = fgets(buf, len, f))) {
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_218 = VDEF <.MEM_217>
free (_49);
./benchmarks/tmux/leak_10/tmux_leak_10.c:407:4: warning: Use after free error!: free location 
    free(cause);
    ^
if (_16 != 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:363:8: warning: use location
  while ((buf = fgets(buf, len, f))) {
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
if (_16 != 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:363:8: warning: use location
  while ((buf = fgets(buf, len, f))) {
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
_57 = __builtin_constant_p (_54);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: Use after free error!: free location 
  free(buf);
  ^
_57 = __builtin_constant_p (_54);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
_57 = __builtin_constant_p (_54);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: Use after free error!: free location 
   free(argv);
   ^
_57 = __builtin_constant_p (_54);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
_57 = __builtin_constant_p (_54);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_218 = VDEF <.MEM_217>
free (_49);
./benchmarks/tmux/leak_10/tmux_leak_10.c:407:4: warning: Use after free error!: free location 
    free(cause);
    ^
_57 = __builtin_constant_p (_54);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
_57 = __builtin_constant_p (_54);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
if (_57 == 0)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: Use after free error!: free location 
  free(buf);
  ^
if (_57 == 0)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
if (_57 == 0)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: Use after free error!: free location 
   free(argv);
   ^
if (_57 == 0)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
if (_57 == 0)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_218 = VDEF <.MEM_217>
free (_49);
./benchmarks/tmux/leak_10/tmux_leak_10.c:407:4: warning: Use after free error!: free location 
    free(cause);
    ^
if (_57 == 0)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
if (_57 == 0)

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_192 = VDEF <.MEM_191>
free (username_145);
./benchmarks/tmux/leak_10/tmux_leak_10.c:222:3: warning: Use after free error!: free location 
   free(username);
   ^
_60 = (long unsigned int) _54;

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_208 = VDEF <.MEM_165>
free (buf_117);
./benchmarks/tmux/leak_10/tmux_leak_10.c:327:2: warning: Use after free error!: free location 
  free(buf);
  ^
_60 = (long unsigned int) _54;

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: Use after free error!: free location 
    free(argv[i]);
    ^
_60 = (long unsigned int) _54;

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_209 = VDEF <.MEM_166>
free (argv_118);
./benchmarks/tmux/leak_10/tmux_leak_10.c:332:3: warning: Use after free error!: free location 
   free(argv);
   ^
_60 = (long unsigned int) _54;

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_217 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:404:4: warning: Use after free error!: free location 
    free(copy);
    ^
_60 = (long unsigned int) _54;

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_218 = VDEF <.MEM_217>
free (_49);
./benchmarks/tmux/leak_10/tmux_leak_10.c:407:4: warning: Use after free error!: free location 
    free(cause);
    ^
_60 = (long unsigned int) _54;

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_213 = VDEF <.MEM_211>
free (copy_38);
./benchmarks/tmux/leak_10/tmux_leak_10.c:410:3: warning: Use after free error!: free location 
   free(copy);
   ^
_60 = (long unsigned int) _54;

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:7 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd7a466c678
    type <pointer_type 0x7fd7a41b4930
        type <record_type 0x7fd7a41b4888 FILE BLK
            size <integer_cst 0x7fd7a4191900 constant 1728>
            unit size <integer_cst 0x7fd7a4191978 constant 216>
            align 64 symtab 0 alias set -1 canonical type 0x7fd7a41b4738 fields <field_decl 0x7fd7a41b6390 _flags> context <translation_unit_decl 0x7fd7a466f168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fd7a41b4930> chain <type_decl 0x7fd7a41b6428 D.4512>>
        public unsigned DI
        size <integer_cst 0x7fd7a4664be8 constant 64>
        unit size <integer_cst 0x7fd7a4664c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fd7a41f1090 f>
    def_stmt f_11 = fopen ("path", "rb");
    version 11
    ptr-info 0x7fd7a4216270>
# .MEM_172 = VDEF <.MEM_7>
f_11 = fopen ("path", "rb");

 ================== trace ptable================== 
trace fucntion name:fopen 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---fopen-----
this other function ------fopen-----

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:main========= [0m
fucntion collect path finsh

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:xrealloc=========
=======is loop:0=========

 bb index 2 
<bb 2> [100.00%]:
newsize_7 = nmemb_5(D) * size_6(D);
if (newsize_7 == 0)
  goto <bb 3>; [0.04%]
else
  goto <bb 4>; [99.96%]

=======is loop:0=========

 bb index 3 
<bb 3> [0.04%]:
_16 = __printf_chk (1, "zero size%s", "");
exit (1);

=======is loop:0=========

 bb index 4 
<bb 4> [99.96%]:
_1 = 30 / nmemb_5(D);
_2 = (unsigned int) _1;
_3 = 1 << _2;
_4 = (long unsigned int) _3;
if (_4 < size_6(D))
  goto <bb 5>; [0.04%]
else
  goto <bb 6>; [99.96%]

=======is loop:0=========

 bb index 5 
<bb 5> [0.04%]:
_17 = __printf_chk (1, "nmemb * size > SIZE_MAX%s", "");
exit (1);

=======is loop:0=========

 bb index 6 
<bb 6> [99.92%]:
newptr_11 = realloc (oldptr_9(D), newsize_7);
if (newptr_11 == 0B)
  goto <bb 7>; [0.04%]
else
  goto <bb 8>; [99.96%]

=======is loop:0=========

 bb index 7 
<bb 7> [0.04%]:
_18 = __printf_chk (1, "xrealloc failed%s", "");
exit (1);

=======is loop:0=========

 bb index 8 
<bb 8> [99.88%]:
_12 = newptr_11;
return newptr_11;

=======Mapping node_fun:cmd_string_getc=========
=======is loop:0=========

 bb index 2 
<bb 2> [100.00%]:
_1 = *p_12(D);
_2 = s_10(D) + _1;
_3 = *_2;
if (_3 == 0)
  goto <bb 4>; [2.00%]
else
  goto <bb 3>; [98.00%]

=======is loop:0=========

 bb index 3 
<bb 3> [98.00%]:
_4 = *p_12(D);
_5 = _4 + 1;
*p_12(D) = _5;
_6 = s_10(D) + _4;
_7 = *_6;
_14 = (int) _7;

=======is loop:0=========

 bb index 4 
<bb 4> [100.00%]:
# _8 = PHI <-1(2), _14(3)>
return _8;

=======Mapping node_fun:cmd_string_variable=========
=======is loop:0=========

 bb index 2 
<bb 2> [15.81%]:
ch_53 = cmd_string_getc (s_50(D), p_51(D));
switch (ch_53) <default: <L1> [33.33%], case -1: error [33.33%], case 123: <L0> [33.33%]>

=======is loop:0=========

 bb index 3 
<L0> [5.27%]:
ch_55 = cmd_string_getc (s_50(D), p_51(D));
_1 = ch_55 != 95;
_2 = (unsigned int) ch_55;
_3 = _2 + 4294967199;
_4 = _3 > 25;
_5 = _1 & _4;
if (_5 != 0)
  goto <bb 4>; [50.00%]
else
  goto <bb 5> (<L1>); [50.00%]

=======is loop:0=========

 bb index 4 
<bb 4> [2.63%]:
_6 = (unsigned int) ch_55;
_7 = _6 + 4294967231;
if (_7 > 25)
  goto <bb 21> (error); [9.00%]
else
  goto <bb 5> (<L1>); [91.00%]

=======is loop:0=========

 bb index 5 
# ch_38 = PHI <ch_53(2), ch_55(3), ch_55(4)>
# fch_39 = PHI <-1(2), 123(3), 123(4)>
<L1> [10.30%]:
_8 = ch_38 != 95;
_9 = (unsigned int) ch_38;
_10 = _9 + 4294967199;
_11 = _10 > 25;
_12 = _8 & _11;
if (_12 != 0)
  goto <bb 6>; [67.00%]
else
  goto <bb 8>; [33.00%]

=======is loop:0=========

 bb index 6 
<bb 6> [6.90%]:
_13 = (unsigned int) ch_38;
_14 = _13 + 4294967231;
if (_14 > 25)
  goto <bb 7>; [46.00%]
else
  goto <bb 8>; [54.00%]

=======is loop:0=========

 bb index 7 
<bb 7> [3.17%]:
_57 = t_56(D);
goto <bb 22>; [100.00%]

=======is loop:0=========

 bb index 8 
<bb 8> [7.13%]:
buf_59 = xrealloc (0B, 1, 1);
_15 = (char) ch_38;
*buf_59 = _15;

=======is loop:1=========

 bb index 9 
<bb 9> [100.00%]:
# buf_40 = PHI <buf_59(8), buf_64(14)>
# len_42 = PHI <1(8), len_65(14)>
ch_62 = cmd_string_getc (s_50(D), p_51(D));
if (ch_62 == -1)
  goto <bb 15>; [5.00%]
else
  goto <bb 10>; [95.00%]

=======is loop:1=========

 bb index 10 
<bb 10> [95.00%]:
_16 = ch_62 != 95;
_17 = (unsigned int) ch_62;
_18 = _17 + 4294967199;
_19 = _18 > 25;
_20 = _16 & _19;
if (_20 != 0)
  goto <bb 11>; [50.00%]
else
  goto <bb 13>; [50.00%]

=======is loop:1=========

 bb index 11 
<bb 11> [47.50%]:
_21 = (unsigned int) ch_62;
_22 = _21 + 4294967231;
if (_22 > 25)
  goto <bb 12>; [50.00%]
else
  goto <bb 13>; [50.00%]

=======is loop:1=========

 bb index 12 
<bb 12> [23.75%]:
_23 = (unsigned int) ch_62;
_24 = _23 + 4294967248;
if (_24 > 9)
  goto <bb 15>; [5.00%]
else
  goto <bb 13>; [95.00%]

=======is loop:1=========

 bb index 13 
<bb 13> [93.81%]:
if (len_42 > 1073741820)
  goto <bb 21> (error); [1.00%]
else
  goto <bb 14>; [99.00%]

=======is loop:1=========

 bb index 14 
<bb 14> [92.87%]:
_25 = len_42 + 1;
buf_64 = xrealloc (buf_40, 1, _25);
_26 = len_42;
len_65 = len_42 + 1;
_27 = buf_64 + len_42;
_28 = (char) ch_62;
*_27 = _28;
goto <bb 9>; [100.00%]

=======is loop:0=========

 bb index 15 
<bb 15> [6.19%]:
_29 = fch_39 == 123;
_30 = ch_62 != 125;
_31 = _29 & _30;
if (_31 != 0)
  goto <bb 21> (error); [9.00%]
else
  goto <bb 16>; [91.00%]

=======is loop:0=========

 bb index 16 
<bb 16> [5.63%]:
_32 = ch_62 != -1;
_33 = fch_39 != 123;
_34 = _32 & _33;
if (_34 != 0)
  goto <bb 17>; [33.00%]
else
  goto <bb 18>; [67.00%]

=======is loop:0=========

 bb index 17 
<bb 17> [1.86%]:
_97 = *p_51(D);
_98 = _97 + 18446744073709551615;
*p_51(D) = _98;

=======is loop:0=========

 bb index 18 
<bb 18> [5.63%]:
_35 = len_42 + 1;
buf_69 = xrealloc (buf_40, 1, _35);
_36 = buf_69 + len_42;
*_36 = 0;
free (buf_69);
if (envent_72(D) == 0B)
  goto <bb 19>; [30.00%]
else
  goto <bb 20>; [70.00%]

=======is loop:0=========

 bb index 19 
<bb 19> [1.69%]:
_76 = strdup ("");
goto <bb 22>; [100.00%]

=======is loop:0=========

 bb index 20 
<bb 20> [3.94%]:
_37 = envent_72(D)->value;
_74 = strdup (_37);
goto <bb 22>; [100.00%]

=======is loop:0=========

 bb index 21 
# buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
error [7.00%]:
free (buf_41);

=======is loop:0=========

 bb index 22 
<bb 22> [15.81%]:
# _43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
return _43;

=======Mapping node_fun:cmd_string_string=========
=======is loop:0=========

 bb index 2 
<bb 2> [31.12%]:
goto <bb 19>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [97.00%]:
switch (ch_22) <default: <L6> [25.00%], case -1: error [25.00%], case 36: <L5> [25.00%], case 92: <L0> [25.00%]>

=======is loop:1=========

 bb index 4 
<L0> [24.25%]:
if (esc_28(D) == 0)
  goto <bb 13> (<L6>); [67.00%]
else
  goto <bb 5>; [33.00%]

=======is loop:1=========

 bb index 5 
<bb 5> [8.00%]:
ch_30 = cmd_string_getc (s_19(D), p_20(D));
switch (ch_30) <default: <L6> [16.67%], case -1: error [16.67%], case 101: <L1> [16.67%], case 110: <L3> [16.67%], case 114: <L2> [16.67%], case 116: <L4> [16.67%]>

=======is loop:1=========

 bb index 6 
<L1> [1.33%]:
goto <bb 13> (<L6>); [100.00%]

=======is loop:1=========

 bb index 7 
<L2> [1.33%]:
goto <bb 13> (<L6>); [100.00%]

=======is loop:1=========

 bb index 8 
<L3> [1.33%]:
goto <bb 13> (<L6>); [100.00%]

=======is loop:1=========

 bb index 9 
<L4> [1.33%]:
goto <bb 13> (<L6>); [100.00%]

=======is loop:1=========

 bb index 10 
<L5> [24.25%]:
if (esc_28(D) == 0)
  goto <bb 13> (<L6>); [67.00%]
else
  goto <bb 11>; [33.00%]

=======is loop:1=========

 bb index 11 
<bb 11> [8.00%]:
t_32 = cmd_string_variable (s_19(D), p_20(D));
if (t_32 == 0B)
  goto <bb 17> (error); [7.92%]
else
  goto <bb 12>; [92.08%]

=======is loop:1=========

 bb index 12 
<bb 12> [7.37%]:
// predicted unlikely by continue predictor.
goto <bb 15>; [100.00%]

=======is loop:1=========

 bb index 13 
# ch_8 = PHI <ch_22(3), ch_22(4), ch_30(5), 27(6), 13(7), 10(8), 9(9), ch_22(10)>
<L6> [63.42%]:
if (len_10 > 1073741821)
  goto <bb 17> (error); [3.00%]
else
  goto <bb 14>; [97.00%]

=======is loop:1=========

 bb index 14 
<bb 14> [61.51%]:
_1 = len_10 + 1;
buf_34 = xrealloc (buf_9, 1, _1);
_2 = len_10;
len_35 = len_10 + 1;
_3 = buf_34 + len_10;
_4 = (char) ch_8;
*_3 = _4;

=======is loop:1=========

 bb index 15 
<bb 15> [68.88%]:
# buf_16 = PHI <buf_9(12), buf_34(14)>
# len_17 = PHI <len_10(12), len_35(14)>

=======is loop:1=========

 bb index 19 
<bb 19> [100.00%]:
# buf_9 = PHI <0B(2), buf_16(15)>
# len_10 = PHI <0(2), len_17(15)>
ch_22 = cmd_string_getc (s_19(D), p_20(D));
_5 = (int) endch_23(D);
if (_5 != ch_22)
  goto <bb 3>; [97.00%]
else
  goto <bb 16>; [3.00%]

=======is loop:0=========

 bb index 16 
<bb 16> [3.00%]:
_6 = len_10 + 1;
buf_25 = xrealloc (buf_9, 1, _6);
_7 = buf_25 + len_10;
*_7 = 0;
goto <bb 18>; [100.00%]

=======is loop:0=========

 bb index 17 
error [28.12%]:
free (buf_9);

=======is loop:0=========

 bb index 18 
<bb 18> [31.12%]:
# _11 = PHI <buf_25(16), 0B(17)>
return _11;

=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [1.02%]:
_1 = malloc (1);
causes.list = _1;
causes.num = 0;
causes.list = 0B;
causes.space = 0;
f_11 = fopen ("path", "rb");
if (f_11 == 0B)
  goto <bb 70>; [0.87%]
else
  goto <bb 3>; [99.13%]

=======is loop:0=========

 bb index 3 
<bb 3> [1.02%]:
_12 = cfg_references;
_13 = _12 + 1;
cfg_references = _13;
goto <bb 61>; [100.00%]

=======is loop:1=========

 bb index 4 
<bb 4> [5.93%]:
_15 = len_14 + 18446744073709551615;
_17 = _16 + _15;
_18 = *_17;
if (_18 == 10)
  goto <bb 5>; [34.00%]
else
  goto <bb 6>; [66.00%]

=======is loop:1=========

 bb index 5 
<bb 5> [2.02%]:
len_19 = len_14 + 18446744073709551615;

=======is loop:1=========

 bb index 6 
<bb 6> [5.93%]:
# len_21 = PHI <len_14(4), len_19(5)>
_20 = __printf_chk (1, "%s: %s", "path", _16);
_22 = len_21 + 1;
line_23 = malloc (_22);
_24 = line_23;
memcpy (_24, _16, len_21);
_25 = len_21;
_26 = line_23 + len_21;
*_26 = 0;
n_28 = n_27 + 1;
len_29 = strlen (line_23);
if (len_29 != 0)
  goto <bb 7>; [66.00%]
else
  goto <bb 11>; [34.00%]

=======is loop:1=========

 bb index 7 
<bb 7> [3.91%]:
_30 = len_29 + 18446744073709551615;
_31 = line_23 + _30;
_32 = *_31;
if (_32 == 92)
  goto <bb 8>; [50.00%]
else
  goto <bb 11>; [50.00%]

=======is loop:1=========

 bb index 8 
<bb 8> [1.96%]:
_33 = len_29 + 18446744073709551615;
_34 = line_23 + _33;
*_34 = 0;
if (len_29 > 1)
  goto <bb 9>; [77.53%]
else
  goto <bb 11>; [22.47%]

=======is loop:1=========

 bb index 9 
<bb 9> [1.52%]:
_35 = len_29 + 18446744073709551614;
_36 = line_23 + _35;
_37 = *_36;
if (_37 != 92)
  goto <bb 10>; [64.99%]
else
  goto <bb 11>; [35.01%]

=======is loop:1=========

 bb index 10 
<bb 10> [0.99%]:
// predicted unlikely by continue predictor.
goto <bb 60>; [100.00%]

=======is loop:1=========

 bb index 11 
<bb 11> [4.94%]:
copy_38 = line_23;
buf_39 = line_23;
goto <bb 13>; [100.00%]

=======is loop:1=========

 bb index 12 
<bb 12> [28.00%]:
buf_41 = buf_40 + 1;

=======is loop:1=========

 bb index 13 
<bb 13> [32.94%]:
# buf_40 = PHI <line_23(11), buf_41(12)>
_42 = *buf_40;
_43 = (unsigned char) _42;
_44 = (int) _43;
_45 = isspace (_44);
if (_45 != 0)
  goto <bb 12>; [85.00%]
else
  goto <bb 14>; [15.00%]

=======is loop:1=========

 bb index 14 
<bb 14> [4.94%]:
_46 = *buf_40;
if (_46 == 0)
  goto <bb 15>; [50.00%]
else
  goto <bb 16>; [50.00%]

=======is loop:1=========

 bb index 15 
<bb 15> [2.47%]:
// predicted unlikely by continue predictor.
goto <bb 60>; [100.00%]

=======is loop:1=========

 bb index 16 
<bb 16> [2.47%]:
cause_223 = 0B;
cmdlist_224 = 0B;
p = 0;
goto <bb 18>; [100.00%]

=======is loop:1=========

 bb index 17 
<bb 17> [97.53%]:
# argc_128 = PHI <argc_83(19), argc_83(20), argc_83(21), argc_129(26), argc_83(46), argc_83(48)>
# argv_130 = PHI <argv_86(19), argv_86(20), argv_86(21), argv_94(26), argv_86(46), argv_86(48)>
# buf_131 = PHI <buf_78(19), buf_78(20), buf_78(21), buf_132(26), buf_78(46), buf_112(48)>
# len_133 = PHI <len_79(19), len_79(20), len_79(21), len_134(26), len_79(46), len_114(48)>

=======is loop:1=========

 bb index 18 
<bb 18> [100.00%]:
# argc_83 = PHI <0(16), argc_128(17)>
# argv_86 = PHI <0B(16), argv_130(17)>
# buf_78 = PHI <0B(16), buf_131(17)>
# len_79 = PHI <0(16), len_133(17)>
ch_73 = cmd_string_getc (buf_40, &p);
switch (ch_73) <default: <L7> [14.29%], case -1: <L5> [14.29%], case 9: <L5> [14.29%], case 32: <L5> [14.29%], case 34: <L1> [14.29%], case 35: <L3> [14.29%], case 36: <L2> [14.29%], case 39: <L0> [14.29%], case 126: <L6> [14.29%]>

=======is loop:1=========

 bb index 19 
<L0> [14.29%]:
t_74 = cmd_string_string (buf_40, &p, 39, 0);
if (t_74 == 0B)
  goto <bb 49> (error); [2.50%]
else
  goto <bb 17>; [97.50%]

=======is loop:1=========

 bb index 20 
<L1> [14.29%]:
t_75 = cmd_string_string (buf_40, &p, 34, 1);
if (t_75 == 0B)
  goto <bb 49> (error); [2.50%]
else
  goto <bb 17>; [97.50%]

=======is loop:1=========

 bb index 21 
<L2> [14.29%]:
t_76 = cmd_string_variable (buf_40, &p);
if (t_76 == 0B)
  goto <bb 49> (error); [2.50%]
else
  goto <bb 17>; [97.50%]

=======is loop:1=========

 bb index 22 
<L3> [14.29%]:

=======is loop:1=========

 bb index 23 
<L4> [95.27%]:
ch_77 = cmd_string_getc (buf_40, &p);
if (ch_77 != -1)
  goto <bb 23> (<L4>); [85.00%]
else
  goto <bb 24> (<L5>); [15.00%]

=======is loop:1=========

 bb index 24 
# ch_93 = PHI <ch_73(18), ch_77(23)>
<L5> [28.58%]:
if (buf_78 != 0B)
  goto <bb 25>; [53.47%]
else
  goto <bb 26>; [46.53%]

=======is loop:1=========

 bb index 25 
<bb 25> [15.28%]:
_80 = len_79 + 1;
buf_81 = xrealloc (buf_78, 1, _80);
_82 = buf_81 + len_79;
*_82 = 0;
_84 = argc_83 + 1;
_85 = (long unsigned int) _84;
argv_87 = xrealloc (argv_86, _85, 8);
_88 = argc_83;
argc_89 = argc_83 + 1;
_90 = (long unsigned int) argc_83;
_91 = _90 * 8;
_92 = argv_87 + _91;
*_92 = buf_81;

=======is loop:1=========

 bb index 26 
<bb 26> [28.58%]:
# argc_129 = PHI <argc_83(24), argc_89(25)>
# argv_94 = PHI <argv_86(24), argv_87(25)>
# buf_132 = PHI <buf_78(24), 0B(25)>
# len_134 = PHI <len_79(24), 0(25)>
if (ch_93 != -1)
  goto <bb 17>; [97.50%]
else
  goto <bb 29>; [2.50%]

=======is loop:1=========

 bb index 27 
<bb 27> [4.58%]:
_95 = *argv_94;
equals_96 = strchr (_95, 61);
_97 = *argv_94;
_98 = *argv_94;
_99 = strcspn (_98, " \t");
whitespace_100 = _97 + _99;
_101 = equals_96 == 0B;
_102 = equals_96 > whitespace_100;
_103 = _101 | _102;
if (_103 != 0)
  goto <bb 30>; [7.50%]
else
  goto <bb 28>; [92.50%]

=======is loop:1=========

 bb index 28 
<bb 28> [4.23%]:
argc_105 = argc_104 + -1;
_106 = (long unsigned int) argc_105;
_107 = _106 * 8;
_108 = argv_94 + 8;
memmove (argv_94, _108, _107);

=======is loop:1=========

 bb index 29 
<bb 29> [4.95%]:
# argc_104 = PHI <argc_129(26), argc_105(28)>
if (argc_104 != 0)
  goto <bb 27>; [92.50%]
else
  goto <bb 30>; [7.50%]

=======is loop:1=========

 bb index 30 
<bb 30> [0.71%]:
if (argc_104 == 0)
  goto <bb 49> (error); [2.00%]
else
  goto <bb 31>; [98.00%]

=======is loop:1=========

 bb index 31 
<bb 31> [0.70%]:
_109 = cmdlist_224;
if (_109 == 0B)
  goto <bb 49> (error); [0.87%]
else
  goto <bb 32>; [99.13%]

=======is loop:1=========

 bb index 32 
<bb 32> [0.69%]:
goto <bb 49> (error); [100.00%]

=======is loop:1=========

 bb index 33 
<L6> [14.29%]:
if (buf_78 == 0B)
  goto <bb 34>; [17.43%]
else
  goto <bb 47> (<L7>); [82.57%]

=======is loop:1=========

 bb index 34 
<bb 34> [2.49%]:
_135 = cmd_string_getc (buf_40, &p);
if (_135 == 47)
  goto <bb 35>; [51.12%]
else
  goto <bb 40>; [48.88%]

=======is loop:1=========

 bb index 35 
<bb 35> [1.27%]:
if (envent_136(D) != 0B)
  goto <bb 36>; [82.57%]
else
  goto <bb 38>; [17.43%]

=======is loop:1=========

 bb index 36 
<bb 36> [1.05%]:
_137 = envent_136(D)->value;
_138 = *_137;
if (_138 != 0)
  goto <bb 37>; [50.00%]
else
  goto <bb 38>; [50.00%]

=======is loop:1=========

 bb index 37 
<bb 37> [0.53%]:
home_139 = envent_136(D)->value;
goto <bb 44>; [100.00%]

=======is loop:1=========

 bb index 38 
<bb 38> [0.75%]:
_140 = getuid ();
_141 = getpwuid (_140);
_142 = (long int) _141;
pw_143 = (struct passwd *) _142;
if (_141 != 0)
  goto <bb 39>; [91.00%]
else
  goto <bb 46>; [9.00%]

=======is loop:1=========

 bb index 39 
<bb 39> [0.68%]:
home_144 = pw_143->pw_dir;
goto <bb 44>; [100.00%]

=======is loop:1=========

 bb index 40 
<bb 40> [1.22%]:
_154 = p;
_155 = _154 + 18446744073709551615;
p = _155;
username_145 = cmd_string_string (buf_40, &p, 47, 0);
if (username_145 == 0B)
  goto <bb 46>; [7.92%]
else
  goto <bb 41>; [92.08%]

=======is loop:1=========

 bb index 41 
<bb 41> [1.12%]:
_146 = getpwnam (username_145);
_147 = (long int) _146;
pw_148 = (struct passwd *) _147;
if (_146 != 0)
  goto <bb 42>; [50.00%]
else
  goto <bb 43>; [50.00%]

=======is loop:1=========

 bb index 42 
<bb 42> [0.56%]:
home_149 = pw_148->pw_dir;

=======is loop:1=========

 bb index 43 
<bb 43> [1.12%]:
# home_153 = PHI <0B(41), home_149(42)>
free (username_145);

=======is loop:1=========

 bb index 44 
<bb 44> [2.33%]:
# home_150 = PHI <home_139(37), home_144(39), home_153(43)>
if (home_150 == 0B)
  goto <bb 46>; [7.92%]
else
  goto <bb 45>; [92.08%]

=======is loop:1=========

 bb index 45 
<bb 45> [2.14%]:
_151 = strdup (home_150);

=======is loop:1=========

 bb index 46 
<bb 46> [2.49%]:
# _152 = PHI <0B(38), 0B(40), 0B(44), _151(45)>
_196 = _152;
t_110 = _196;
if (t_110 == 0B)
  goto <bb 49> (error); [2.50%]
else
  goto <bb 17>; [97.50%]

=======is loop:1=========

 bb index 47 
<L7> [26.09%]:
if (len_79 > 1073741821)
  goto <bb 49> (error); [2.50%]
else
  goto <bb 48>; [97.50%]

=======is loop:1=========

 bb index 48 
<bb 48> [25.44%]:
_111 = len_79 + 1;
buf_112 = xrealloc (buf_78, 1, _111);
_113 = len_79;
len_114 = len_79 + 1;
_115 = buf_112 + len_79;
_116 = (char) ch_73;
*_115 = _116;
goto <bb 17>; [100.00%]

=======is loop:1=========

 bb index 49 
# argc_125 = PHI <argc_83(19), argc_83(20), argc_83(21), argc_104(30), argc_104(31), argc_104(32), argc_83(46), argc_83(47)>
# rval_126 = PHI <-1(19), -1(20), -1(21), -1(30), -1(31), 0(32), -1(46), -1(47)>
# argv_118 = PHI <argv_86(19), argv_86(20), argv_86(21), argv_94(30), argv_94(31), argv_94(32), argv_86(46), argv_86(47)>
# buf_117 = PHI <buf_78(19), buf_78(20), buf_78(21), buf_132(30), buf_132(31), buf_132(32), buf_78(46), buf_78(47)>
error [2.50%]:
out [2.50%]:
free (buf_117);
if (argv_118 != 0B)
  goto <bb 51>; [73.26%]
else
  goto <bb 53>; [26.74%]

=======is loop:1=========

 bb index 50 
<bb 50> [10.38%]:
_120 = (long unsigned int) i_119;
_121 = _120 * 8;
_122 = argv_118 + _121;
_123 = *_122;
free (_123);
i_124 = i_119 + 1;

=======is loop:1=========

 bb index 51 
<bb 51> [12.21%]:
# i_119 = PHI <0(49), i_124(50)>
if (i_119 < argc_125)
  goto <bb 50>; [85.00%]
else
  goto <bb 52>; [15.00%]

=======is loop:1=========

 bb index 52 
<bb 52> [1.83%]:
free (argv_118);

=======is loop:1=========

 bb index 53 
<bb 53> [2.50%]:
_127 = rval_126;
p ={v} {CLOBBER};
_212 = rval_126;
_47 = _212;
if (_47 != 0)
  goto <bb 54>; [50.00%]
else
  goto <bb 57>; [50.00%]

=======is loop:1=========

 bb index 54 
<bb 54> [1.25%]:
free (copy_38);
_48 = cause_223;
if (_48 == 0B)
  goto <bb 55>; [46.53%]
else
  goto <bb 56>; [53.47%]

=======is loop:1=========

 bb index 55 
<bb 55> [0.58%]:
// predicted unlikely by continue predictor.
goto <bb 60>; [100.00%]

=======is loop:1=========

 bb index 56 
<bb 56> [0.67%]:
_49 = cause_223;
free (_49);
// predicted unlikely by continue predictor.
goto <bb 60>; [100.00%]

=======is loop:1=========

 bb index 57 
<bb 57> [1.25%]:
free (copy_38);
_50 = cmdlist_224;
if (_50 == 0B)
  goto <bb 58>; [17.43%]
else
  goto <bb 59>; [82.57%]

=======is loop:1=========

 bb index 58 
<bb 58> [0.22%]:
// predicted unlikely by continue predictor.
goto <bb 60>; [100.00%]

=======is loop:1=========

 bb index 59 
<bb 59> [1.03%]:
_51 = ctxin.msgdata;
ctx.msgdata = _51;
_52 = ctxin.curclient;
ctx.curclient = _52;
_53 = ctxin.cmdclient;
ctx.cmdclient = _53;

=======is loop:1=========

 bb index 60 
<bb 60> [5.96%]:
# n_68 = PHI <n_28(10), n_28(15), n_28(55), n_28(56), n_28(58), n_28(59)>
# buf_69 = PHI <_16(10), buf_40(15), buf_40(55), buf_40(56), buf_40(58), buf_40(59)>
# len_70 = PHI <len_29(10), len_29(15), len_29(55), len_29(56), len_29(58), len_29(59)>

=======is loop:1=========

 bb index 61 
<bb 61> [6.97%]:
# n_27 = PHI <0(3), n_68(60)>
# buf_55 = PHI <buf_71(D)(3), buf_69(60)>
# len_14 = PHI <len_72(D)(3), len_70(60)>
_54 = (int) len_14;
_56 = __builtin_object_size (buf_55, 1);
if (_56 != 18446744073709551615)
  goto <bb 62>; [79.76%]
else
  goto <bb 67>; [20.24%]

=======is loop:1=========

 bb index 62 
<bb 62> [5.56%]:
_57 = __builtin_constant_p (_54);
if (_57 == 0)
  goto <bb 64>; [33.00%]
else
  goto <bb 63>; [67.00%]

=======is loop:1=========

 bb index 63 
<bb 63> [3.73%]:
if (_54 <= 0)
  goto <bb 64>; [36.00%]
else
  goto <bb 65>; [64.00%]

=======is loop:1=========

 bb index 64 
<bb 64> [3.18%]:
_58 = __builtin_object_size (buf_55, 1);
_59 = __fgets_chk (buf_55, _58, _54, f_11);
goto <bb 68>; [100.00%]

=======is loop:1=========

 bb index 65 
<bb 65> [2.38%]:
_60 = (long unsigned int) _54;
_61 = __builtin_object_size (buf_55, 1);
if (_60 > _61)
  goto <bb 66>; [33.00%]
else
  goto <bb 67>; [67.00%]

=======is loop:1=========

 bb index 66 
<bb 66> [0.79%]:
_62 = __builtin_object_size (buf_55, 1);
_63 = __fgets_chk_warn (buf_55, _62, _54, f_11);
goto <bb 68>; [100.00%]

=======is loop:1=========

 bb index 67 
<bb 67> [3.01%]:
_64 = __fgets_alias (buf_55, _54, f_11);

=======is loop:1=========

 bb index 68 
<bb 68> [6.97%]:
# _16 = PHI <_59(64), _63(66), _64(67)>
if (_16 != 0B)
  goto <bb 4>; [85.00%]
else
  goto <bb 69>; [15.00%]

=======is loop:0=========

 bb index 69 
<bb 69> [1.05%]:
fclose (f_11);
_65 = cfg_references;
_66 = _65 + -1;
cfg_references = _66;

=======is loop:0=========

 bb index 70 
<bb 70> [1.05%]:
# _67 = PHI <-1(2), 0(69)>
ctx ={v} {CLOBBER};
_222 = _67;
ctxin ={v} {CLOBBER};
causes ={v} {CLOBBER};
return 0;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    find Entry point : 25 [0m
[40;34m    used_stmt array stack totalsize of : 16752 [0m
[40;34m    collect time: : 0.000805 s [0m
[40;34m    algorithm time: 0.217734 s [0m
[40;34m    gimple stmt count : : 334 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
